unint64_t sub_23925DBD8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08((uint64_t *)&unk_25692B770);
  v2 = sub_239352878();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23926059C(v6, (uint64_t)&v15, &qword_256927158);
    v7 = v15;
    v8 = v16;
    result = sub_23925FAA4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23925FDD4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23925DD0C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23925DD40(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23925DD84())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23925DDC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = swift_allocObject();
  v3 = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return v2;
}

uint64_t sub_23925DE08()
{
  return sub_23925DE20();
}

uint64_t sub_23925DE14()
{
  return sub_23925DE20();
}

uint64_t sub_23925DE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_2393522F0();
  if (!*(_QWORD *)(v1 + 16) || (v4 = sub_23925FAA4(v2, v3), (v5 & 1) == 0))
  {
    v8 = 0u;
    v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_23925FB48(*(_QWORD *)(v1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_8:
    sub_23925FE28((uint64_t)&v8, (uint64_t *)&unk_25692A930);
    return 0;
  }
  sub_23925FB08(&qword_256927010);
  if (swift_dynamicCast())
    return v7;
  else
    return 0;
}

uint64_t sub_23925DEE4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t (*v55)(char *, uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  unsigned __int8 *v58;
  unsigned int v59;
  uint64_t v60;
  char v61;
  _QWORD v62[3];
  __int128 v63;
  uint64_t v64;
  unint64_t v65;
  __int128 v66;
  __int128 v67;

  v3 = sub_239351FD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_256927018);
  v7 = MEMORY[0x24BDAC7A8]();
  v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(void))(*(_QWORD *)v1 + 128);
  v11 = ((uint64_t (*)(uint64_t))v10)(v7);
  if (!v11)
  {
    v66 = 0u;
    v67 = 0u;
    goto LABEL_12;
  }
  v12 = v11;
  v13 = sub_2393522F0();
  if (!*(_QWORD *)(v12 + 16) || (v15 = sub_23925FAA4(v13, v14), (v16 & 1) == 0))
  {
    v66 = 0u;
    v67 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_23925FB48(*(_QWORD *)(v12 + 56) + 32 * v15, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v67 + 1))
  {
LABEL_12:
    sub_23925FE28((uint64_t)&v66, (uint64_t *)&unk_25692A930);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  if ((swift_dynamicCast() & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  v17 = v65;
  *(_QWORD *)&v63 = v64;
  v18 = v10();
  if (!v18)
  {
    v66 = 0u;
    v67 = 0u;
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v19 = v18;
  *((_QWORD *)&v63 + 1) = v17;
  v20 = sub_2393522F0();
  if (*(_QWORD *)(v19 + 16) && (v22 = sub_23925FAA4(v20, v21), (v23 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v19 + 56) + 32 * v22, (uint64_t)&v66);
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_22;
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  v62[1] = v64;
  v62[2] = v65;
  v25 = v10();
  if (!v25)
  {
    v66 = 0u;
    v67 = 0u;
LABEL_37:
    sub_23925FE28((uint64_t)&v66, (uint64_t *)&unk_25692A930);
    goto LABEL_74;
  }
  v26 = v25;
  v27 = sub_2393522F0();
  if (*(_QWORD *)(v26 + 16) && (v29 = sub_23925FAA4(v27, v28), (v30 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v66);
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v67 + 1))
    goto LABEL_37;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_74;
  result = v64;
  v31 = HIBYTE(v65) & 0xF;
  v32 = v64 & 0xFFFFFFFFFFFFLL;
  if ((v65 & 0x2000000000000000) != 0)
    v33 = HIBYTE(v65) & 0xF;
  else
    v33 = v64 & 0xFFFFFFFFFFFFLL;
  if (!v33)
  {
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
  if ((v65 & 0x1000000000000000) != 0)
  {
    v35 = (uint64_t)sub_23925FC64(v64, v65, 10);
    v37 = v61;
LABEL_72:
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v47 = swift_allocObject();
      v48 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v47 + 16) = xmmword_239354060;
      v49 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v47 + 56) = v48;
      *(_QWORD *)(v47 + 64) = v49;
      *(_QWORD *)(v47 + 32) = v35;
      sub_239352308();
    }
LABEL_74:
    v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    v51 = (void *)sub_2393522CC();
    objc_msgSend(v50, sel_setDateFormat_, v51);

    v66 = v63;
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = (void *)sub_2393522CC();
    swift_bridgeObjectRelease();
    v53 = objc_msgSend(v50, sel_dateFromString_, v52);

    if (v53)
    {
      sub_239351FA8();

      v54 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v54(v9, v6, v3);
      v55 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v55(v9, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
      {
        v54(a1, v9, v3);
        v56 = a1;
        v57 = 0;
        return v55(v56, v57, 1, v3);
      }
    }
    else
    {

      v55 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v55(v9, 1, 1, v3);
    }
    sub_23925FE28((uint64_t)v9, &qword_256927018);
    v56 = a1;
    v57 = 1;
    return v55(v56, v57, 1, v3);
  }
  if ((v65 & 0x2000000000000000) == 0)
  {
    if ((v64 & 0x1000000000000000) != 0)
      v34 = (unsigned __int8 *)((v65 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v34 = (unsigned __int8 *)sub_2393527F4();
    v35 = (uint64_t)sub_23925FE64(v34, v32, 10);
    v37 = v36 & 1;
    goto LABEL_72;
  }
  *(_QWORD *)&v66 = v64;
  *((_QWORD *)&v66 + 1) = v65 & 0xFFFFFFFFFFFFFFLL;
  if (v64 == 43)
  {
    if (!v31)
      goto LABEL_90;
    if (v31 == 1 || (BYTE1(v64) - 48) > 9u)
      goto LABEL_59;
    v35 = (BYTE1(v64) - 48);
    if (v31 != 2)
    {
      if ((BYTE2(v64) - 48) > 9u)
        goto LABEL_59;
      v35 = 10 * (BYTE1(v64) - 48) + (BYTE2(v64) - 48);
      v38 = v31 - 3;
      if (v38)
      {
        v39 = (unsigned __int8 *)&v66 + 3;
        while (1)
        {
          v40 = *v39 - 48;
          if (v40 > 9)
            goto LABEL_59;
          v41 = 10 * v35;
          if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63)
            goto LABEL_59;
          v35 = v41 + v40;
          if (__OFADD__(v41, v40))
            goto LABEL_59;
          v37 = 0;
          ++v39;
          if (!--v38)
            goto LABEL_72;
        }
      }
    }
LABEL_71:
    v37 = 0;
    goto LABEL_72;
  }
  if (v64 != 45)
  {
    if (!v31 || (v64 - 48) > 9u)
      goto LABEL_59;
    v35 = (v64 - 48);
    if (v31 != 1)
    {
      if ((BYTE1(v64) - 48) > 9u)
        goto LABEL_59;
      v35 = 10 * (v64 - 48) + (BYTE1(v64) - 48);
      v42 = v31 - 2;
      if (v42)
      {
        v43 = (unsigned __int8 *)&v66 + 2;
        while (1)
        {
          v44 = *v43 - 48;
          if (v44 > 9)
            goto LABEL_59;
          v45 = 10 * v35;
          if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63)
            goto LABEL_59;
          v35 = v45 + v44;
          if (__OFADD__(v45, v44))
            goto LABEL_59;
          v37 = 0;
          ++v43;
          if (!--v42)
            goto LABEL_72;
        }
      }
    }
    goto LABEL_71;
  }
  if (v31)
  {
    if (v31 != 1 && (BYTE1(v64) - 48) <= 9u)
    {
      if (v31 == 2)
      {
        v37 = 0;
        v35 = -(uint64_t)(BYTE1(v64) - 48);
        goto LABEL_72;
      }
      if ((BYTE2(v64) - 48) <= 9u)
      {
        v35 = -10 * (BYTE1(v64) - 48) - (BYTE2(v64) - 48);
        v46 = v31 - 3;
        if (!v46)
          goto LABEL_71;
        v58 = (unsigned __int8 *)&v66 + 3;
        while (1)
        {
          v59 = *v58 - 48;
          if (v59 > 9)
            break;
          v60 = 10 * v35;
          if ((unsigned __int128)(v35 * (__int128)10) >> 64 != (10 * v35) >> 63)
            break;
          v35 = v60 - v59;
          if (__OFSUB__(v60, v59))
            break;
          v37 = 0;
          ++v58;
          if (!--v46)
            goto LABEL_72;
        }
      }
    }
LABEL_59:
    v35 = 0;
    v37 = 1;
    goto LABEL_72;
  }
  __break(1u);
LABEL_90:
  __break(1u);
  return result;
}

unint64_t sub_23925E6A0()
{
  return sub_23925E6B8();
}

unint64_t sub_23925E6AC()
{
  return sub_23925E6B8();
}

unint64_t sub_23925E6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned int v11;
  __int128 v12;
  __int128 v13;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
  if (!v1)
  {
    v12 = 0u;
    v13 = 0u;
    goto LABEL_10;
  }
  v2 = v1;
  v3 = sub_2393522F0();
  if (!*(_QWORD *)(v2 + 16) || (v5 = sub_23925FAA4(v3, v4), (v6 & 1) == 0))
  {
    v12 = 0u;
    v13 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_23925FB48(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v13 + 1))
  {
LABEL_10:
    sub_23925FE28((uint64_t)&v12, (uint64_t *)&unk_25692A930);
    v8 = 0;
    v9 = 1;
    return v8 | ((unint64_t)v9 << 32);
  }
  v7 = swift_dynamicCast();
  v8 = v11;
  v9 = v7 ^ 1;
  if (!v7)
    v8 = 0;
  return v8 | ((unint64_t)v9 << 32);
}

unint64_t sub_23925E7B8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
  if ((v1 & 0x100000000) != 0)
    return 0;
  v2 = v1;
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
  if ((v3 & 0x100000000) != 0)
    return 0;
  else
    return __PAIR64__(v3, v2);
}

uint64_t sub_23925E810()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

id sub_23925E830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  __int128 v15;
  __int128 v16;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
  if (!v1)
  {
    v15 = 0u;
    v16 = 0u;
    goto LABEL_13;
  }
  v2 = v1;
  result = (id)OCNonModularSPI_AppleMakerNote_FocusAccelerometerVector();
  if (result)
  {
    v4 = result;
    v5 = sub_2393522F0();
    v7 = v6;

    if (*(_QWORD *)(v2 + 16) && (v8 = sub_23925FAA4(v5, v7), (v9 & 1) != 0))
    {
      sub_23925FB48(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)&v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v16 + 1))
      {
        sub_23925FD48();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v10 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 0);
          sub_239352710();
          swift_unknownObjectRelease();
          if ((swift_dynamicCast() & 1) != 0
            && (v11 = v14,
                v12 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 1),
                sub_239352710(),
                swift_unknownObjectRelease(),
                (swift_dynamicCast() & 1) != 0))
          {
            v13 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 2);
            sub_239352710();

            swift_unknownObjectRelease();
            if ((swift_dynamicCast() & 1) != 0)
              return v11;
          }
          else
          {

          }
        }
        return 0;
      }
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_13:
    sub_23925FE28((uint64_t)&v15, (uint64_t *)&unk_25692A930);
    return 0;
  }
  __break(1u);
  return result;
}

void *sub_23925EA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *result;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
  if (!v1)
  {
    v11 = 0u;
    v12 = 0u;
    goto LABEL_12;
  }
  v2 = v1;
  result = (void *)OCNonModularSPI_AppleMakerNote_Timestamp();
  if (!result)
  {
    __break(1u);
    return result;
  }
  v4 = result;
  v5 = sub_2393522F0();
  v7 = v6;

  if (!*(_QWORD *)(v2 + 16) || (v8 = sub_23925FAA4(v5, v7), (v9 & 1) == 0))
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_23925FB48(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_12:
    sub_23925FE28((uint64_t)&v11, (uint64_t *)&unk_25692A930);
    return 0;
  }
  if (swift_dynamicCast())
    return (void *)v10;
  else
    return 0;
}

void *sub_23925EB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *result;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned int v13;
  __int128 v14;
  __int128 v15;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
  if (!v1)
  {
    v14 = 0u;
    v15 = 0u;
    goto LABEL_11;
  }
  v2 = v1;
  result = (void *)OCNonModularSPI_AppleMakerNote_Camera();
  if (result)
  {
    v4 = result;
    v5 = sub_2393522F0();
    v7 = v6;

    if (*(_QWORD *)(v2 + 16) && (v8 = sub_23925FAA4(v5, v7), (v9 & 1) != 0))
    {
      sub_23925FB48(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)&v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v15 + 1))
      {
        v10 = swift_dynamicCast();
        v11 = v13;
        v12 = v10 ^ 1;
        if (!v10)
          v11 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      v14 = 0u;
      v15 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_11:
    sub_23925FE28((uint64_t)&v14, (uint64_t *)&unk_25692A930);
    v11 = 0;
    v12 = 1;
LABEL_12:
    LOBYTE(v14) = v12;
    return (void *)(v11 | ((unint64_t)v12 << 32));
  }
  __break(1u);
  return result;
}

uint64_t sub_23925ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  _QWORD v47[2];
  __int128 v48;
  _OWORD *v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t *v55;
  _OWORD *v56;
  uint64_t *v57;
  void (*v58)(char *, uint64_t);
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[6];
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[3];
  _QWORD v66[2];
  uint64_t v67;
  __int128 v68;
  _OWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[12];

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v47[0] = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v47 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v47 - v9;
  v11 = sub_239275A60();
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v59(v10, v11, v2);
  v12 = sub_239352098();
  v13 = sub_239352560();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_23925B000, v12, v13, "metadata: {", v14, 2u);
    MEMORY[0x23B83BC04](v14, -1, -1);
  }

  v58 = *(void (**)(char *, uint64_t))(v3 + 8);
  v58(v10, v2);
  v15 = -1 << *(_BYTE *)(*(_QWORD *)(v1 + 16) + 32);
  v16 = *(_QWORD *)(v1 + 16);
  v19 = *(_QWORD *)(v16 + 64);
  v17 = v16 + 64;
  v18 = v19;
  v20 = ~v15;
  v21 = -v15;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v78[4] = *(_QWORD *)(v1 + 16);
  v78[5] = v17;
  v78[6] = v20;
  v78[7] = 0;
  v78[8] = v22 & v18;
  v78[9] = 0;
  swift_bridgeObjectRetain();
  sub_23925F1B8((uint64_t)v73);
  sub_23925FD84((uint64_t)v73, (uint64_t)&v75);
  v24 = v77;
  if (v77)
  {
    v56 = v78;
    v57 = &v74;
    v54 = v69;
    v55 = &v72;
    v50 = &v67;
    v51 = &v63;
    v49 = v62;
    *(_QWORD *)&v23 = 136446466;
    v48 = v23;
    v47[1] = MEMORY[0x24BEE4AD8] + 8;
    v52 = v2;
    v53 = v11;
    do
    {
      v26 = v75;
      v25 = v76;
      v70 = v76;
      v71 = v24;
      v27 = v55;
      sub_23925FDD4(v56, v55);
      v73[0] = v25;
      v73[1] = v24;
      v28 = v27;
      v29 = v57;
      sub_23925FDD4(v28, v57);
      v59(v8, v11, v2);
      *(_QWORD *)&v68 = v25;
      *((_QWORD *)&v68 + 1) = v24;
      sub_23925FB48((uint64_t)v29, (uint64_t)v54);
      sub_23926059C((uint64_t)&v68, (uint64_t)v66, &qword_256927030);
      v65[0] = v68;
      v65[1] = v69[0];
      v65[2] = v69[1];
      swift_bridgeObjectRetain();
      v30 = sub_239352098();
      v31 = sub_239352560();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v64 = v33;
        *(_DWORD *)v32 = v48;
        v62[4] = v26;
        v34 = sub_2393528C0();
        *(_QWORD *)(v32 + 4) = sub_23925F3EC(v34, v35, &v64);
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2082;
        v37 = v66[0];
        v36 = v66[1];
        v38 = v51;
        sub_23925FB48((uint64_t)v50, (uint64_t)v51);
        v60 = v37;
        v61 = v36;
        sub_23925FDD4(v38, v49);
        swift_bridgeObjectRetain();
        sub_23925FB08(&qword_256927030);
        v39 = sub_23935232C();
        *(_QWORD *)(v32 + 14) = sub_23925F3EC(v39, v40, &v64);
        swift_bridgeObjectRelease();
        sub_23925FE28((uint64_t)v65, &qword_256927030);
        sub_23925FE28((uint64_t)v66, &qword_256927030);
        _os_log_impl(&dword_23925B000, v30, v31, "%{public}s -> %{public}s", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v33, -1, -1);
        v41 = v32;
        v2 = v52;
        v11 = v53;
        MEMORY[0x23B83BC04](v41, -1, -1);

      }
      else
      {

        sub_23925FE28((uint64_t)v65, &qword_256927030);
        sub_23925FE28((uint64_t)v66, &qword_256927030);
      }
      v58(v8, v2);
      sub_23925FE28((uint64_t)v73, &qword_256927030);
      sub_23925F1B8((uint64_t)v73);
      sub_23925FD84((uint64_t)v73, (uint64_t)&v75);
      v24 = v77;
    }
    while (v77);
  }
  sub_23925FDCC();
  v42 = v47[0];
  v59((char *)v47[0], v11, v2);
  v43 = sub_239352098();
  v44 = sub_239352560();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_23925B000, v43, v44, "}  // metadata:", v45, 2u);
    MEMORY[0x23B83BC04](v45, -1, -1);
  }

  return ((uint64_t (*)(uint64_t, uint64_t))v58)(v42, v2);
}

uint64_t sub_23925F1B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int128 v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
    goto LABEL_3;
  }
  v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v19 = (unint64_t)(v6 + 64) >> 6;
  if (v18 >= v19)
    goto LABEL_24;
  v20 = *(_QWORD *)(v4 + 8 * v18);
  if (!v20)
  {
    v21 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v19)
    {
      v20 = *(_QWORD *)(v4 + 8 * v21);
      if (v20)
      {
LABEL_12:
        v18 = v21;
        goto LABEL_9;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v19)
      {
        v20 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v20)
        {
          v18 = v5 + 3;
          goto LABEL_9;
        }
        v21 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v19)
        {
          v20 = *(_QWORD *)(v4 + 8 * v21);
          if (v20)
            goto LABEL_12;
          v18 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v19)
          {
            v20 = *(_QWORD *)(v4 + 8 * v18);
            if (v20)
              goto LABEL_9;
            v7 = v19 - 1;
            v22 = v5 + 6;
            while (v19 != v22)
            {
              v20 = *(_QWORD *)(v4 + 8 * v22++);
              if (v20)
              {
                v18 = v22 - 1;
                goto LABEL_9;
              }
            }
          }
        }
      }
    }
LABEL_24:
    v28 = 0u;
    v29 = 0u;
    v27 = 0u;
    *v1 = v3;
    v1[1] = v4;
    v1[2] = v6;
    v1[3] = v7;
    v1[4] = 0;
    goto LABEL_25;
  }
LABEL_9:
  v9 = (v20 - 1) & v20;
  v10 = __clz(__rbit64(v20)) + (v18 << 6);
  v7 = v18;
LABEL_3:
  v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
  v13 = *v11;
  v12 = v11[1];
  sub_23925FB48(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)&v23);
  *(_QWORD *)&v27 = v13;
  *((_QWORD *)&v27 + 1) = v12;
  sub_23925FDD4(&v23, &v28);
  v14 = *((_QWORD *)&v27 + 1);
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  result = swift_bridgeObjectRetain();
  if (v14)
  {
    v24 = v27;
    v25 = v28;
    v26 = v29;
    v16 = v1[5];
    if (!__OFADD__(v16, 1))
    {
      v1[5] = v16 + 1;
      *(_QWORD *)a1 = v16;
      v17 = v25;
      *(_OWORD *)(a1 + 8) = v24;
      *(_OWORD *)(a1 + 24) = v17;
      *(_OWORD *)(a1 + 40) = v26;
      return result;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_25:
  result = sub_23925FE28((uint64_t)&v27, &qword_256927150);
  *(_QWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_23925F3C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23925F3EC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23925F4BC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23925FB48((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23925FB48((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_23925FE04((uint64_t)v12);
  return v7;
}

uint64_t sub_23925F4BC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2393526BC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23925F674(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2393527F4();
  if (!v8)
  {
    sub_23935283C();
    __break(1u);
LABEL_17:
    result = sub_239352884();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23925F674(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23925F708(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23925F958(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23925F958(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23925F708(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23925F87C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2393527D0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23935283C();
      __break(1u);
LABEL_10:
      v2 = sub_2393523B0();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_239352884();
    __break(1u);
LABEL_14:
    result = sub_23935283C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23925F87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23925FB08(&qword_256928200);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23925F8E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_2393523EC();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23B83A26C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_23925F958(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23925FB08(&qword_256928200);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_239352884();
  __break(1u);
  return result;
}

unint64_t sub_23925FAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_239352980();
  sub_23935235C();
  v4 = sub_2393529B0();
  return sub_23925FB84(a1, a2, v4);
}

uint64_t sub_23925FB08(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B83BB2C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23925FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_23925FB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2393528CC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2393528CC() & 1) == 0);
    }
  }
  return v6;
}

unsigned __int8 *sub_23925FC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_239352404();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_2392600E0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2393527F4();
  }
LABEL_7:
  v11 = sub_23925FE64(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_23925FD48()
{
  unint64_t result;

  result = qword_256927020;
  if (!qword_256927020)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256927020);
  }
  return result;
}

uint64_t sub_23925FD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256927028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23925FDCC()
{
  return swift_release();
}

_OWORD *sub_23925FDD4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t type metadata accessor for PhotogrammetryMetadataHelper()
{
  return objc_opt_self();
}

uint64_t sub_23925FE04(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23925FE28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23925FB08(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned __int8 *sub_23925FE64(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2392600E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_239352410();
  v4 = sub_23926015C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23926015C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_2392602A0(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23925F87C(v9, 0);
      v12 = sub_23926038C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x23B83A1F4](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x23B83A1F4);
LABEL_9:
      sub_2393527F4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x23B83A1F4]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_2392602A0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23925F8E0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23925F8E0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_2393523D4();
  }
  __break(1u);
  return result;
}

unint64_t sub_23926038C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23925F8E0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_2393523E0();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2393527F4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23925F8E0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_2393523BC();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23926059C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23925FB08(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2392605E0(_QWORD *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *(*v11)(double *__return_ptr, uint64_t);
  char v12;
  uint64_t v13;
  double v16;
  double v17;
  double v18[2];
  char v19;

  if (a2 < a3)
  {
    *a1 = 0;
    result = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 128))();
    if (result < 0)
    {
LABEL_24:
      __break(1u);
      return result;
    }
    v8 = result;
    if (result)
    {
      v9 = 0.0;
      v10 = 0;
      v11 = *(_QWORD *(**)(double *__return_ptr, uint64_t))(*(_QWORD *)v3 + 216);
      v12 = 1;
      v13 = result;
      while (v8 >= v13)
      {
        result = (uint64_t)v11(v18, --v13);
        if ((v19 & 1) == 0)
        {
          if (v18[0] >= a2 && v18[0] < a3)
          {
            if (__OFADD__(v10++, 1))
              goto LABEL_23;
            v16 = v18[1];
            *a1 = v10;
            v17 = v9;
            if ((v12 & 1) != 0)
              v17 = v16;
            if (v17 > v16)
              v16 = v17;
            v9 = v16;
            v12 = 0;
          }
          else if (v18[0] >= a3)
          {
            return *(_QWORD *)&v9;
          }
        }
        if (!v13)
          return *(_QWORD *)&v9;
      }
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
  }
  v9 = 0.0;
  return *(_QWORD *)&v9;
}

_QWORD *sub_2392606F4(double *a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(double *__return_ptr, uint64_t);
  _QWORD *v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  double v15[2];
  char v16;

  v3 = *a1;
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 128))();
  if (v4 < 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = v4;
  if (v4)
  {
    v6 = *(void (**)(double *__return_ptr, uint64_t))(*(_QWORD *)v1 + 216);
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v8 = v3;
    v9 = v4;
    while (v5 >= v9)
    {
      v6(v15, --v9);
      if ((v16 & 1) == 0)
      {
        v10 = v15[0];
        if (v3 < v15[0])
        {
          v11 = v15[1];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_239261360(0, v7[2] + 1, 1, v7);
          v13 = v7[2];
          v12 = v7[3];
          if (v13 >= v12 >> 1)
            v7 = sub_239261360((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
          v7[2] = v13 + 1;
          *(double *)&v7[v13 + 4] = v11;
          if (v8 < v10)
            v8 = v10;
        }
      }
      if (!v9)
        goto LABEL_17;
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v8 = v3;
LABEL_17:
  *a1 = v8;
  return v7;
}

uint64_t sub_239260838()
{
  sub_239350A70();
  return swift_deallocClassInstance();
}

uint64_t *sub_239260854(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v3 = *a2;
  v4 = a2[1];
  type metadata accessor for GyroCircularBuffer();
  swift_allocObject();
  v6[0] = v3;
  v6[1] = v4;
  return sub_239350224(a1, (uint64_t)v6);
}

uint64_t sub_2392608AC(void *a1)
{
  swift_allocObject();
  return sub_2392608E4(a1);
}

uint64_t sub_2392608E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  __int128 v14;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  *(_QWORD *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 40) = xmmword_2393540C0;
  *(_QWORD *)(v1 + 56) = 0x3FF0000000000000;
  if (!objc_msgSend(a1, sel_isDeviceMotionAvailable))
    goto LABEL_4;
  type metadata accessor for GyroCircularBuffer();
  swift_allocObject();
  __asm { FMOV            V0.2D, #-1.0 }
  v14 = _Q0;
  v10 = sub_239350224(100, (uint64_t)&v14);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v4, sel_setQualityOfService_, 33);
    *(_QWORD *)(v2 + 24) = a1;
    objc_msgSend(a1, sel_setGyroUpdateInterval_, 0.01);
    sub_23925FB08(qword_256927160);
    v12 = swift_allocObject();
    *(_DWORD *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v2 + 32) = v12;
  }
  else
  {
LABEL_4:

    type metadata accessor for MotionManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

void sub_239260A14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(void **)(v0 + 24);
  if ((objc_msgSend(v1, sel_isGyroActive) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v4[4] = sub_23926154C;
    v4[5] = v0;
    v4[0] = MEMORY[0x24BDAC760];
    v4[1] = 1107296256;
    v4[2] = sub_239260D5C;
    v4[3] = &unk_250AC3798;
    v3 = _Block_copy(v4);
    swift_retain();
    swift_release();
    objc_msgSend(v1, sel_startGyroUpdatesToQueue_withHandler_, v2, v3);
    _Block_release(v3);
  }
}

void sub_239260AD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31[3];
  _QWORD v32[2];

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (!a2)
    {
      v10 = *(_QWORD *)(a3 + 32);
      v11 = (os_unfair_lock_s *)(v10 + 24);
      v12 = a1;
      os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
      v13 = *(_QWORD *)(v10 + 16);
      v14 = v12;
      sub_23926146C(v14);
      v16 = v15;
      v18 = v17;

      v32[0] = v16;
      v32[1] = v18;
      (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v13 + 264))(v31, v32);
      os_unfair_lock_unlock(v11);

      return;
    }
  }
  else if (!a2)
  {
    return;
  }
  v19 = a2;
  v20 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
  v21 = a2;
  v22 = a2;
  v23 = sub_239352098();
  v24 = sub_23935256C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_DWORD *)v25 = 136446210;
    v30 = v25 + 4;
    v31[0] = v26;
    v32[0] = a2;
    v27 = a2;
    sub_23925FB08(&qword_2569273F8);
    v28 = sub_23935232C();
    v32[0] = sub_23925F3EC(v28, v29, v31);
    sub_2393526B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23925B000, v23, v24, "Motion Manager: Gyro error: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v26, -1, -1);
    MEMORY[0x23B83BC04](v25, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_239260D60()
{
  return sub_239261168((SEL *)&selRef_isGyroActive, (SEL *)&selRef_stopGyroUpdates);
}

void sub_239260D74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(void **)(v0 + 24);
  if ((objc_msgSend(v1, sel_isDeviceMotionActive) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v4[4] = sub_23926156C;
    v4[5] = v0;
    v4[0] = MEMORY[0x24BDAC760];
    v4[1] = 1107296256;
    v4[2] = sub_239260D5C;
    v4[3] = &unk_250AC37C0;
    v3 = _Block_copy(v4);
    swift_retain();
    swift_release();
    objc_msgSend(v1, sel_startDeviceMotionUpdatesToQueue_withHandler_, v2, v3);
    _Block_release(v3);
  }
}

void sub_239260E38(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31[3];
  _QWORD v32[2];

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (!a2)
    {
      v10 = *(_QWORD *)(a3 + 32);
      v11 = (os_unfair_lock_s *)(v10 + 24);
      v12 = a1;
      os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
      v13 = *(_QWORD *)(v10 + 16);
      objc_msgSend(v12, sel_timestamp);
      v15 = v14;
      objc_msgSend(v12, sel_rotationRate);
      v32[0] = v15;
      v32[1] = sqrt(v18 * v18 + v16 * v16 + v17 * v17);
      (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v13 + 264))(v31, v32);
      os_unfair_lock_unlock(v11);

      return;
    }
  }
  else if (!a2)
  {
    return;
  }
  v19 = a2;
  v20 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
  v21 = a2;
  v22 = a2;
  v23 = sub_239352098();
  v24 = sub_23935256C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_DWORD *)v25 = 136446210;
    v30 = v25 + 4;
    v31[0] = v26;
    v32[0] = a2;
    v27 = a2;
    sub_23925FB08(&qword_2569273F8);
    v28 = sub_23935232C();
    v32[0] = sub_23925F3EC(v28, v29, v31);
    sub_2393526B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23925B000, v23, v24, "Motion Manager: DeviceMotion error: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v26, -1, -1);
    MEMORY[0x23B83BC04](v25, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_2392610E0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id sub_239261154()
{
  return sub_239261168((SEL *)&selRef_isDeviceMotionActive, (SEL *)&selRef_stopDeviceMotionUpdates);
}

id sub_239261168(SEL *a1, SEL *a2)
{
  uint64_t v2;
  void *v4;
  id result;

  v4 = *(void **)(v2 + 24);
  result = objc_msgSend(v4, *a1);
  if ((_DWORD)result)
    return objc_msgSend(v4, *a2);
  return result;
}

uint64_t sub_2392611AC(_QWORD *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v3 = *(os_unfair_lock_s **)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  v4 = sub_239261574((uint64_t)&v3[4]);
  v6 = v5;
  v8 = v7;
  os_unfair_lock_unlock(v3 + 6);
  swift_release();
  if ((v8 & 1) != 0)
    return 0;
  *a1 = v6;
  return v4;
}

uint64_t sub_239261250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(v1 + 16) + 224))(&v4);
  v2 = v4;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return v2;
}

uint64_t sub_2392612D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = sub_2392615BC((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return v2;
}

uint64_t sub_23926132C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_239261360(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_256927400);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23926170C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

id sub_23926146C(void *a1)
{
  objc_msgSend(a1, sel_rotationRate);
  objc_msgSend(a1, sel_rotationRate);
  objc_msgSend(a1, sel_rotationRate);
  return objc_msgSend(a1, sel_timestamp);
}

uint64_t type metadata accessor for MotionManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GyroCircularBuffer()
{
  uint64_t result;

  result = qword_25692C3C0;
  if (!qword_25692C3C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23926154C(void *a1, void *a2)
{
  uint64_t v2;

  sub_239260AD8(a1, a2, v2);
}

uint64_t sub_239261554(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_239261564()
{
  return swift_release();
}

void sub_23926156C(void *a1, void *a2)
{
  uint64_t v2;

  sub_239260E38(a1, a2, v2);
}

uint64_t sub_239261574(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v5;

  v2 = *(double *)(v1 + 16);
  v3 = *(double *)(v1 + 24);
  v5 = 0;
  return (*(uint64_t (**)(uint64_t *, double, double))(**(_QWORD **)a1 + 288))(&v5, v2, v3);
}

uint64_t sub_2392615BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 296))(v1 + 40);
  swift_endAccess();
  return v3;
}

__n128 initializeBufferWithCopyOfBuffer for OCGyroData(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OCGyroData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OCGyroData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OCGyroData()
{
  return &type metadata for OCGyroData;
}

uint64_t sub_239261684()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for os_unfair_lock_s()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2569273F0)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2569273F0);
  }
}

char *sub_23926170C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392617FC()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B83BC88](v0 + 16);
}

uint64_t sub_239261840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2392618A0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B83BC88](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_23926190C;
}

void sub_23926190C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_23926197C(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_2392619C4(a1, a2);
}

uint64_t sub_2392619C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t inited;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  const __CFDictionary *v19;
  uint64_t result;
  int v21;
  CVPixelBufferPoolRef v22;
  __CVPixelBufferPool *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  CVPixelBufferPoolRef poolOut[3];

  v3 = v2;
  v30 = a2;
  v29 = a1;
  poolOut[1] = *(CVPixelBufferPoolRef *)MEMORY[0x24BDAC8D0];
  v28 = sub_2393525E4();
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393525C0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v2 + 24) = 0;
  v26 = v2 + 16;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v2 + 32) = xmmword_2393541B0;
  *(_OWORD *)(v2 + 48) = xmmword_2393541A0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_BYTE *)(v2 + 128) = 1;
  *(_WORD *)(v2 + 240) = 0;
  sub_239261E08();
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  sub_2393521A0();
  poolOut[0] = (CVPixelBufferPoolRef)MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_256927DD0, v7, MEMORY[0x24BEE5698]);
  sub_23925FB08(&qword_256927410);
  sub_239263A08((unint64_t *)&qword_256927DE0, &qword_256927410, MEMORY[0x24BEE12C8]);
  sub_239352734();
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v5, *MEMORY[0x24BEE5750], v28);
  *(_QWORD *)(v2 + 248) = sub_239352614();
  sub_23925FB08(&qword_256927418);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2393541C0;
  v10 = (void *)*MEMORY[0x24BDC56B8];
  v11 = MEMORY[0x24BEE44F0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDC56B8];
  *(_DWORD *)(inited + 40) = 1278226488;
  v12 = (void *)*MEMORY[0x24BDC5708];
  v13 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v29;
  v14 = (void **)MEMORY[0x24BDC5650];
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = v12;
  v15 = *v14;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 112) = v15;
  *(_QWORD *)(inited + 144) = v13;
  *(_QWORD *)(inited + 120) = v30;
  v16 = v10;
  v17 = v12;
  v18 = v15;
  sub_239261E44(inited);
  type metadata accessor for CFString(0);
  sub_239262570(&qword_256927420, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_239354334);
  v19 = (const __CFDictionary *)sub_239352260();
  swift_bridgeObjectRelease();
  poolOut[0] = 0;
  result = CVPixelBufferPoolCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, v19, poolOut);
  v21 = result;
  v22 = poolOut[0];
  if ((_DWORD)result)
  {

LABEL_6:
    sub_2392625B0(v26);
    swift_bridgeObjectRelease();
    if (!v21)

    type metadata accessor for MaskingManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (poolOut[0])
  {
    *(CVPixelBufferPoolRef *)(v3 + 224) = poolOut[0];
    v31 = 0;
    v32 = 0;
    v23 = v22;
    result = OCMaskingCreate();
    if ((_DWORD)result)
    {

      goto LABEL_6;
    }
    v24 = v32;
    if (v32)
    {

      *(_QWORD *)(v3 + 232) = v24;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_239261E08()
{
  unint64_t result;

  result = qword_256927408;
  if (!qword_256927408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256927408);
  }
  return result;
}

unint64_t sub_239261E44(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_256927608);
  v2 = sub_239352878();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_239263B34(v6, (uint64_t)&v13);
    v7 = v13;
    result = sub_23926382C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_23925FDD4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_239261F5C()
{
  uint64_t v0;
  uint64_t result;

  result = OCMaskingDestroy();
  if ((_DWORD)result)
  {
    __break(1u);
  }
  else
  {
    sub_2392625B0(v0 + 16);
    swift_bridgeObjectRelease();

    return swift_deallocClassInstance();
  }
  return result;
}

uint64_t sub_239261FA8()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 240) & 1) != 0)
    return 1;
  if (OCMaskingStart())
    return 0;
  result = 1;
  *(_BYTE *)(v0 + 240) = 1;
  return result;
}

uint64_t sub_239261FEC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 240) == 1)
  {
    if (OCMaskingStop())
      return 0;
    *(_BYTE *)(v0 + 240) = 0;
  }
  return 1;
}

uint64_t sub_239262028(uint64_t a1, void *a2, _OWORD *a3, uint64_t *a4, int a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  void *v44;
  __n128 v45;
  __n128 v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  int v69;
  void *v70;
  __int128 v71;
  uint64_t v72;
  _QWORD aBlock[7];

  v69 = a5;
  v67 = a9;
  v68 = a10;
  v65 = a7;
  v66 = a8;
  v64 = a6;
  v63 = a3;
  v70 = a2;
  *(_QWORD *)&v71 = a1;
  v12 = sub_239352170();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2393521C4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (_QWORD *)((char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_2393520B0();
  result = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v10 + 241) & 1) == 0)
  {
    v57 = v19;
    v58 = v17;
    v59 = v16;
    v60 = v15;
    v61 = v13;
    v62 = v12;
    v28 = v71;
    v29 = *(_QWORD *)v71;
    if (*(double *)v71 - *(double *)(v10 + 40) >= 0.2)
    {
      v39 = *a4;
      v71 = *((_OWORD *)a4 + 2);
      v56 = *((_OWORD *)a4 + 3);
      v55 = *((_OWORD *)a4 + 4);
      v54 = *((_OWORD *)a4 + 5);
      *(_QWORD *)(v10 + 40) = v29;
      *(_BYTE *)(v10 + 241) = 1;
      v40 = swift_allocObject();
      swift_weakInit();
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = v40;
      v42 = v63;
      v43 = v63[1];
      *(_OWORD *)(v41 + 32) = *v63;
      *(_OWORD *)(v41 + 48) = v43;
      *(_BYTE *)(v41 + 64) = *((_BYTE *)v42 + 32);
      v44 = v70;
      *(_QWORD *)(v41 + 72) = v70;
      *(_QWORD *)(v41 + 80) = v29;
      *(__n128 *)(v41 + 96) = v64;
      *(_QWORD *)(v41 + 112) = v39;
      v45 = v66;
      *(__n128 *)(v41 + 128) = v65;
      *(__n128 *)(v41 + 144) = v45;
      v46 = v68;
      *(__n128 *)(v41 + 160) = v67;
      *(__n128 *)(v41 + 176) = v46;
      v47 = v56;
      *(_OWORD *)(v41 + 192) = v71;
      *(_OWORD *)(v41 + 208) = v47;
      v48 = v54;
      *(_OWORD *)(v41 + 224) = v55;
      *(_OWORD *)(v41 + 240) = v48;
      *(_BYTE *)(v41 + 256) = v69 & 1;
      aBlock[4] = sub_2392634A4;
      aBlock[5] = v41;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_239262EDC;
      aBlock[3] = &unk_250AC38F0;
      v49 = _Block_copy(aBlock);
      swift_retain_n();
      swift_retain();
      v50 = v44;
      v51 = v57;
      sub_239352188();
      v72 = MEMORY[0x24BEE4AF8];
      sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
      v52 = v60;
      v53 = v62;
      sub_239352734();
      MEMORY[0x23B83A4A0](0, v51, v52, v49);
      _Block_release(v49);
      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v53);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v51, v59);
      swift_release();
      return swift_release();
    }
    else
    {
      v30 = result;
      v31 = v25;
      v32 = sub_239275A60();
      v33 = v31;
      v34 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
      v35 = v30;
      v34(v27, v32, v30);
      sub_239263508(v28, (uint64_t)v22);
      v36 = sub_239352098();
      v37 = sub_239352560();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v38 = 134349056;
        aBlock[0] = *v22;
        sub_2393526B0();
        sub_23926354C((uint64_t)v22);
        _os_log_impl(&dword_23925B000, v36, v37, "Masking Manager: Skipping bounding box compute at timestamp %{public}f", v38, 0xCu);
        MEMORY[0x23B83BC04](v38, -1, -1);
      }
      else
      {
        sub_23926354C((uint64_t)v22);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v27, v35);
    }
  }
  return result;
}

uint64_t sub_239262518(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B83BB38](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_239263BFC(a1, &qword_2569275F0);
}

uint64_t sub_239262570(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B83BB44](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2392625B0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t type metadata accessor for MaskingManager()
{
  return objc_opt_self();
}

uint64_t sub_2392625F4(double a1, __n128 a2, __n128 a3, __n128 a4, float32x4_t a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17, __int128 a18)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t ObjectType;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  void (*v86)(_BYTE *, __int128 *, uint64_t, void *, uint64_t, uint64_t);
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  char *v94;
  __int128 v95;
  __n128 v96;
  __n128 v97;
  __n128 v98;
  float32x4_t v99;
  __int128 v100;
  __n128 v101;
  __n128 v102;
  __n128 v103;
  __int128 v104;
  _BYTE v105[72];
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _OWORD v111[2];
  uint64_t v112;

  *(_QWORD *)&v100 = a12;
  v103 = a8;
  v102 = a7;
  v101 = a6;
  v99 = a5;
  v98 = a4;
  v97 = a3;
  v104 = (__int128)a2;
  v112 = *MEMORY[0x24BDAC8D0];
  v22 = sub_2393520B0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v87 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v87 - v30;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v33 = result;
    v94 = v29;
    v89 = v26;
    v95 = a18;
    v96 = a17;
    sub_239350DCC();
    OCSignPostsAriadneDbgCode();
    kdebug_trace();
    *(_OWORD *)(v33 + 64) = 0u;
    *(_OWORD *)(v33 + 80) = 0u;
    *(_OWORD *)(v33 + 96) = 0u;
    *(_OWORD *)(v33 + 112) = 0u;
    *(_BYTE *)(v33 + 128) = 1;
    *(_OWORD *)(v33 + 176) = 0u;
    *(_OWORD *)(v33 + 192) = 0u;
    *(_OWORD *)(v33 + 208) = 0u;
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 160) = 0u;
    swift_bridgeObjectRelease();
    v34 = sub_239275A60();
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v92 = v34;
    v93 = v35;
    ((void (*)(char *))v35)(v31);
    v36 = sub_239352098();
    v37 = sub_239352560();
    v38 = os_log_type_enabled(v36, v37);
    v91 = a10;
    if (v38)
    {
      v39 = swift_slowAlloc();
      v90 = v22;
      v40 = v39;
      v41 = swift_slowAlloc();
      *(_QWORD *)v105 = v41;
      *(_DWORD *)v40 = 134349314;
      *(double *)&v107 = a1;
      sub_2393526B0();
      *(_WORD *)(v40 + 12) = 2082;
      v88 = a11;
      v87 = v40 + 14;
      v107 = v104;
      sub_23925FB08((uint64_t *)&unk_2569281A0);
      sub_239263A08((unint64_t *)&qword_256927600, (uint64_t *)&unk_2569281A0, MEMORY[0x24BEE4120]);
      v42 = sub_2393528F0();
      *(_QWORD *)&v107 = sub_23925F3EC(v42, v43, (uint64_t *)v105);
      a11 = v88;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v36, v37, "Masking Manager: Started bounding box compute at timestamp %{public}f with world point %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v41, -1, -1);
      v44 = v40;
      v22 = v90;
      MEMORY[0x23B83BC04](v44, -1, -1);

      v45 = *(void (**)(char *, uint64_t))(v23 + 8);
      v45(v31, v22);
      v52 = (__n128)v104;
      v53 = v100;
    }
    else
    {

      v45 = *(void (**)(char *, uint64_t))(v23 + 8);
      v45(v31, v22);
      v53 = v100;
      v52 = (__n128)v104;
    }
    v54 = sub_239262F10(a11, v52, v97, v98, v99, v101, v102, v103, v96, v53, v46, v47, v48, v49, v50, v51, v95);
    if ((v54 & 1) == 0)
      goto LABEL_27;
    v55 = v94;
    v93(v94, v92, v22);
    swift_retain_n();
    v56 = sub_239352098();
    v57 = sub_239352578();
    if (os_log_type_enabled(v56, v57))
    {
      LODWORD(v104) = a13;
      v90 = v22;
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      *(_QWORD *)v105 = v59;
      *(_DWORD *)v58 = 136446210;
      if ((*(_BYTE *)(v33 + 128) & 1) != 0)
      {
LABEL_34:
        result = swift_release();
        __break(1u);
        goto LABEL_35;
      }
      v60 = v59;
      v62 = *(_OWORD *)(v33 + 80);
      v61 = *(_OWORD *)(v33 + 96);
      v63 = *(_QWORD *)(v33 + 112);
      v64 = *(_QWORD *)(v33 + 120);
      v107 = *(_OWORD *)(v33 + 64);
      v108 = v62;
      v109 = v61;
      *(_QWORD *)&v110 = v63;
      *((_QWORD *)&v110 + 1) = v64;
      type metadata accessor for simd_float4x4(0);
      v65 = sub_23935232C();
      *(_QWORD *)&v107 = sub_23925F3EC(v65, v66, (uint64_t *)v105);
      sub_2393526B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v56, v57, "\"Masking Manager: Successfully computed bounding box with transform = %{public}s", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v60, -1, -1);
      MEMORY[0x23B83BC04](v58, -1, -1);

      v22 = v90;
      v45(v94, v90);
      if ((v104 & 1) == 0)
        goto LABEL_26;
    }
    else
    {

      swift_release_n();
      v45(v55, v22);
      if ((a13 & 1) == 0)
        goto LABEL_26;
    }
    *(_QWORD *)&v107 = 0;
    v108 = 0u;
    v109 = 0u;
    v110 = 0u;
    memset(v111, 0, 28);
    result = OCMaskingGetDebugInfo();
    if ((_DWORD)result)
    {
      v93(v89, v92, v22);
      v67 = sub_239352098();
      v68 = sub_23935256C();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v69 = 0;
        _os_log_impl(&dword_23925B000, v67, v68, "Masking Manager: Failed to get masking debug info!", v69, 2u);
        MEMORY[0x23B83BC04](v69, -1, -1);
      }

      v54 = ((uint64_t (*)(char *, uint64_t))v45)(v89, v22);
      goto LABEL_27;
    }
    v70 = (void *)v107;
    if (!(_QWORD)v107)
    {
LABEL_35:
      __break(1u);
      return result;
    }
    type metadata accessor for OCDataBuffer();
    v71 = sub_239351B44((uint64_t)v70);
    sub_2392DFAF4(v71, 0, (simd_float4 *)v105);
    swift_release();
    v72 = *(_QWORD **)v105;
    v103 = *(__n128 *)&v105[8];
    v102 = *(__n128 *)&v105[24];
    v101 = *(__n128 *)&v105[40];
    v100 = *(_OWORD *)&v105[56];
    v73 = v106;
    if (*(_QWORD *)v105)
    {
      v74 = DWORD2(v111[1]);
      if (DWORD2(v111[1]))
      {
        v75 = *(_QWORD *)&v111[1];
        v104 = xmmword_2393541D0;
        v76 = *(unsigned int **)&v111[1];
        while (v75)
        {
          if (!v72)
            goto LABEL_33;
          v77 = *v76;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v72 = sub_2392639F4(v72);
          if (v72[2] <= v77)
            __break(1u);
          *(_OWORD *)&v72[6 * v77 + 8] = v104;
          ++v76;
          if (!--v74)
            goto LABEL_25;
        }
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
LABEL_25:
    *(_QWORD *)(v33 + 144) = v72;
    *(__n128 *)(v33 + 152) = v103;
    *(__n128 *)(v33 + 168) = v102;
    *(__n128 *)(v33 + 184) = v101;
    *(_OWORD *)(v33 + 200) = v100;
    *(_QWORD *)(v33 + 216) = v73;
    swift_bridgeObjectRelease();
LABEL_26:
    sub_239350DD8();
    OCSignPostsAriadneDbgCode();
    v54 = kdebug_trace();
LABEL_27:
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 168))(v54))
    {
      v79 = v78;
      ObjectType = swift_getObjectType();
      v81 = *(_BYTE *)(v33 + 128);
      v82 = *(_OWORD *)(v33 + 80);
      *(_OWORD *)v105 = *(_OWORD *)(v33 + 64);
      *(_OWORD *)&v105[16] = v82;
      v83 = *(_OWORD *)(v33 + 112);
      *(_OWORD *)&v105[32] = *(_OWORD *)(v33 + 96);
      *(_OWORD *)&v105[48] = v83;
      v105[64] = v81;
      v84 = *(_OWORD *)(v33 + 160);
      v107 = *(_OWORD *)(v33 + 144);
      v108 = v84;
      v85 = *(_OWORD *)(v33 + 192);
      v109 = *(_OWORD *)(v33 + 176);
      v110 = v85;
      v111[0] = *(_OWORD *)(v33 + 208);
      v86 = *(void (**)(_BYTE *, __int128 *, uint64_t, void *, uint64_t, uint64_t))(v79 + 8);
      swift_bridgeObjectRetain();
      v86(v105, &v107, v91, a11, ObjectType, v79);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_239262EDC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_239262F08()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 241) = 0;
}

uint64_t sub_239262F10(void *a1, __n128 a2, __n128 a3, __n128 a4, float32x4_t a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  __int128 v36;
  simd_float4x4 *ObjectVoxelsAndComputeBBox;
  __int32 v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t result;
  simd_float4x4 *v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  __int128 v58;
  __n128 v59;
  __n128 v60;
  float32x4_t v61;
  __n128 v62;
  __n128 v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  CoreOC::OCBoundingBox v67;
  CoreOC::OCBoundingBox v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __int128 v76;
  __n128 v77;
  _OWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  int v88;
  uint64_t v89;

  v18 = v17;
  v65 = a8;
  v66 = a9;
  v63 = a2;
  v64 = a7;
  v61 = a5;
  v62 = a6;
  v59 = a3;
  v60 = a4;
  v89 = *MEMORY[0x24BDAC8D0];
  v20 = sub_2393520B0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v56 - v25;
  if ((*(_BYTE *)(v18 + 240) & 1) != 0)
  {
    v58 = a17;
    objc_msgSend(a1, sel_transform);
    v81 = v27;
    v82 = v28;
    v83 = v29;
    v84 = v30;
    objc_msgSend(a1, sel_center);
    v85 = v31;
    v32 = objc_msgSend(a1, sel_planeExtent);
    objc_msgSend(v32, sel_width);
    v57 = v33;

    v34 = objc_msgSend(a1, sel_planeExtent);
    objc_msgSend(v34, sel_height);
    v56[0] = v35;

    *(_QWORD *)&v36 = v57;
    *((_QWORD *)&v36 + 1) = LODWORD(v56[0]);
    v86 = v36;
    v87 = 0;
    v88 = 0;
    v73 = v64;
    v74 = v65;
    v75 = v66;
    v76 = v58;
    v77 = v63;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    ObjectVoxelsAndComputeBBox = (simd_float4x4 *)OCMaskingCreateObjectVoxelsAndComputeBBox();
    if (!(_DWORD)ObjectVoxelsAndComputeBBox)
    {
      sub_2392DF468(ObjectVoxelsAndComputeBBox, *(double *)&v69, *(double *)&v70, *(double *)&v71, *(double *)&v72, v59.n128_f64[0], v60.n128_f64[0], v61);
      OCBoundingBox.init(transform:)(&v68, v51);
      v67 = v68;
      OCBoundingBox.scale(_:)(v78, *(float32x4_t *)(v18 + 48));
      v52 = v78[1];
      v53 = v78[2];
      v55 = v79;
      v54 = v80;
      *(_OWORD *)(v18 + 64) = v78[0];
      *(_OWORD *)(v18 + 80) = v52;
      *(_OWORD *)(v18 + 96) = v53;
      *(_QWORD *)(v18 + 112) = v55;
      *(_QWORD *)(v18 + 120) = v54;
      result = 1;
      *(_BYTE *)(v18 + 128) = 0;
      return result;
    }
    v38 = (int)ObjectVoxelsAndComputeBBox;
    v39 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v39, v20);
    v40 = sub_239352098();
    v41 = sub_23935256C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v66.n128_u64[0] = swift_slowAlloc();
      *(_QWORD *)&v78[0] = v66.n128_u64[0];
      *(_DWORD *)v42 = 136446210;
      v65.n128_u64[0] = (unint64_t)(v42 + 4);
      v68.transform.columns[0].i32[0] = v38;
      type metadata accessor for OCReturn(0);
      v43 = sub_23935232C();
      v68.transform.columns[0].i64[0] = sub_23925F3EC(v43, v44, (uint64_t *)v78);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v40, v41, "Masking Manager: Failed to compute bounding box with error: %{public}s", v42, 0xCu);
      v45 = v66.n128_u64[0];
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v45, -1, -1);
      MEMORY[0x23B83BC04](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  else
  {
    v46 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v26, v46, v20);
    v47 = sub_239352098();
    v48 = sub_23935256C();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_23925B000, v47, v48, "Masking Manager: Failed to compute bounding box because masking manager has not been started!", v49, 2u);
      MEMORY[0x23B83BC04](v49, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  result = 0;
  *(_OWORD *)(v18 + 96) = 0u;
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_OWORD *)(v18 + 80) = 0u;
  *(_BYTE *)(v18 + 128) = 1;
  return result;
}

uint64_t sub_239263340(uint64_t a1)
{
  MEMORY[0x23B83BB44](&unk_239354308, a1);
  return sub_239352068();
}

uint64_t sub_23926337C()
{
  MEMORY[0x23B83BB44](&unk_239354308);
  return sub_23935205C();
}

uint64_t sub_2392633C4(uint64_t a1, uint64_t a2)
{
  sub_239352980();
  MEMORY[0x23B83BB44](&unk_239354308, a2);
  sub_23935205C();
  return sub_2393529B0();
}

BOOL sub_23926341C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_239263430@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_239263440(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23926344C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_239263470()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392634A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return sub_2392625F4(*(double *)(v8 + 80), *(__n128 *)(v8 + 96), *(__n128 *)(v8 + 128), *(__n128 *)(v8 + 144), *(float32x4_t *)(v8 + 160), *(__n128 *)(v8 + 176), *(__n128 *)(v8 + 192), *(__n128 *)(v8 + 208), *(_QWORD *)(v8 + 16), v8 + 32, *(void **)(v8 + 72), *(_QWORD *)(v8 + 112), *(unsigned __int8 *)(v8 + 256), a6, a7, a8, *(__n128 *)(v8 + 224), *(_OWORD *)(v8 + 240));
}

uint64_t sub_2392634F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_239263500()
{
  return swift_release();
}

uint64_t sub_239263508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OCCaptureData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23926354C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OCCaptureData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_239263588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B83BB44](&unk_239354308, a3);
  return sub_239352050();
}

_QWORD *sub_2392635D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_25692B6C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_239263A48(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void type metadata accessor for CVPixelBufferPool(uint64_t a1)
{
  sub_239263BFC(a1, &qword_2569275E8);
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySample.Scene(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithCopy for OCBoundingBox(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for OCBoundingBox(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OCBoundingBox(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
  sub_239263BFC(a1, qword_2569280B0);
}

uint64_t sub_2392637C0()
{
  return sub_239262570(&qword_256927420, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_239354334);
}

uint64_t sub_2392637EC()
{
  return sub_239262570(&qword_2569275F8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2393542DC);
}

void type metadata accessor for OCReturn(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256927620);
}

unint64_t sub_23926382C(uint64_t a1)
{
  uint64_t v2;

  sub_239352980();
  type metadata accessor for CFString(0);
  sub_239262570(&qword_256927618, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_239354308);
  sub_23935205C();
  v2 = sub_2393529B0();
  return sub_2392638B4(a1, v2);
}

unint64_t sub_2392638B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_239262570(&qword_256927618, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_239354308);
    v7 = v6;
    v8 = sub_239352050();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_239352050();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

_QWORD *sub_2392639F4(_QWORD *a1)
{
  return sub_2392635D4(0, a1[2], 0, a1);
}

uint64_t sub_239263A08(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_239262518(a2);
    result = MEMORY[0x23B83BB44](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

char *sub_239263A48(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 48 * a1 + 32);
    v6 = 48 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_239263B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256927610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

__n128 sub_239263B7C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_239263B90(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_239263BB0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for OCVoxel(uint64_t a1)
{
  sub_239263BFC(a1, (unint64_t *)&unk_25692C130);
}

void sub_239263BFC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_239263C44()
{
  uint64_t result;

  result = sub_239352380();
  qword_25692C658 = 0xD00000000000001ELL;
  qword_25692C660 = 0x800000023935AA10;
  return result;
}

uint64_t sub_239263CB0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2393522F0();
  qword_25692C670 = result;
  qword_25692C678 = v1;
  return result;
}

uint64_t sub_239263CE0()
{
  return sub_239266C78(0xD00000000000001ALL, 0x800000023935A6B0);
}

uint64_t sub_239263D0C()
{
  return sub_239263D54(0xD00000000000002BLL, 0x800000023935A9E0, (uint64_t (*)(void))sub_239266F40);
}

uint64_t sub_239263D30()
{
  return sub_239263D54(0xD000000000000029, 0x800000023935A9B0, (uint64_t (*)(void))sub_239266F40);
}

uint64_t sub_239263D54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_239263D7C()
{
  return sub_239266E90(0xD000000000000025, 0x800000023935A980);
}

void sub_239263DAC(uint64_t a1)
{
  sub_239264218(a1, 0xD00000000000002ALL, 0x800000023935A710, (unsigned __int8 *)&unk_25692FD51);
}

void *sub_239263DD0()
{
  if (qword_25692C680 != -1)
    swift_once();
  return &unk_25692FD51;
}

void sub_239263E10(uint64_t a1)
{
  sub_239264218(a1, 0xD000000000000021, 0x800000023935A740, byte_25692FD52);
}

unsigned __int8 *sub_239263E34()
{
  if (qword_25692C688 != -1)
    swift_once();
  return byte_25692FD52;
}

void sub_239263E74()
{
  unint64_t v0;
  id v1;
  void *v2;
  float v3;
  float v4;

  if (qword_25692C650 != -1)
    swift_once();
  v0 = sub_2392666B0(qword_25692C658, qword_25692C660);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v2 = (void *)sub_2393522CC();
    objc_msgSend(v1, sel_floatForKey_, v2);
    v4 = v3;

  }
  else
  {
    v4 = 1.0;
  }
  dword_25692FD54 = LODWORD(v4);
}

int *sub_239263F48()
{
  if (qword_25692C690 != -1)
    swift_once();
  return &dword_25692FD54;
}

uint64_t sub_239263F88()
{
  return sub_239266C78(0xD000000000000014, 0x800000023935A770);
}

uint64_t sub_239263FB4()
{
  return sub_239266D10();
}

void sub_239263FCC()
{
  unint64_t v0;
  id v1;
  void *v2;
  unsigned __int8 v3;

  v0 = sub_2392666B0(0xD00000000000003ELL, 0x800000023935A790);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v2 = (void *)sub_2393522CC();
    v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  }
  else
  {
    v3 = 1;
  }
  byte_25692FD58 = v3;
}

char *sub_239264080()
{
  if (qword_25692C698 != -1)
    swift_once();
  return &byte_25692FD58;
}

unint64_t sub_2392640C0()
{
  unint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;

  if (qword_25692C668 != -1)
    swift_once();
  v0 = sub_2392666B0(qword_25692C670, qword_25692C678);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v2 = (void *)sub_2393522CC();
    objc_msgSend(v1, sel_floatForKey_, v2);
    v4 = v3;

    v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v0 == 0) << 32);
}

uint64_t sub_2392641AC()
{
  return sub_239263D54(0xD00000000000003ALL, 0x800000023935A7D0, (uint64_t (*)(void))sub_239266DD4);
}

uint64_t sub_2392641D0()
{
  return sub_239263D54(0xD00000000000003CLL, 0x800000023935A810, (uint64_t (*)(void))sub_239266DD4);
}

uint64_t sub_2392641F4()
{
  return sub_239263D54(0xD000000000000048, 0x800000023935A850, (uint64_t (*)(void))sub_239266DD4);
}

void sub_239264218(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4)
{
  unint64_t v5;
  id v6;
  void *v7;
  unsigned __int8 v8;

  v5 = sub_2392666B0(a2, a3);
  swift_bridgeObjectRelease();
  if (v5)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v7 = (void *)sub_2393522CC();
    v8 = objc_msgSend(v6, sel_BOOLForKey_, v7);

  }
  else
  {
    v8 = 0;
  }
  *a4 = v8;
}

uint64_t sub_2392642BC()
{
  return sub_239266E90(0xD00000000000001DLL, 0x800000023935A940);
}

uint64_t sub_2392642EC()
{
  return sub_239263D54(0xD000000000000023, 0x800000023935A910, (uint64_t (*)(void))sub_239266F40);
}

uint64_t sub_239264310()
{
  return sub_239263D54(0xD000000000000020, 0x800000023935A8E0, (uint64_t (*)(void))sub_239266F40);
}

uint64_t sub_239264334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *);
  NSObject *v49;
  os_log_type_t v50;
  char *v51;
  uint8_t *v52;
  uint8_t *v53;
  unint64_t v54;
  id v55;
  void *v56;
  unsigned int v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  float v65;
  char *v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  float v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  char *v75;
  id v76;
  void *v77;
  unsigned int v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  float v86;
  NSObject *v87;
  os_log_type_t v88;
  float v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  double v94;
  char *v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  id v102;
  void *v103;
  unsigned int v104;
  char *v105;
  NSObject *v106;
  os_log_type_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  id v112;
  void *v113;
  unsigned int v114;
  char *v115;
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  id v123;
  void *v124;
  float v125;
  float v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  char *v134;
  id v135;
  void *v136;
  unsigned int v137;
  NSObject *v138;
  os_log_type_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char v146;
  double v147;
  char *v148;
  NSObject *v149;
  os_log_type_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  double v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  char *v163;
  float v164;
  NSObject *v165;
  char *v166;
  os_log_type_t v167;
  float v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  float v173;
  NSObject *v174;
  os_log_type_t v175;
  float v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  unint64_t v181;
  id v182;
  void *v183;
  unsigned int v184;
  char *v185;
  NSObject *v186;
  os_log_type_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  unint64_t v192;
  id v193;
  void *v194;
  float v195;
  float v196;
  NSObject *v197;
  os_log_type_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  void (*v204)(char *, uint64_t, uint64_t);
  id v205;
  void *v206;
  float v207;
  float v208;
  char *v209;
  NSObject *v210;
  os_log_type_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  id v215;
  void *v216;
  float v217;
  float v218;
  char *v219;
  NSObject *v220;
  os_log_type_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  id v225;
  void *v226;
  float v227;
  float v228;
  char *v229;
  NSObject *v230;
  os_log_type_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  id v235;
  void *v236;
  unsigned int v237;
  void (*v238)(char *, uint64_t, uint64_t);
  char *v239;
  NSObject *v240;
  os_log_type_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  NSObject *v245;
  os_log_type_t v246;
  uint8_t *v247;
  uint64_t v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  void (*v269)(char *);
  void (*v270)(char *, uint64_t);
  uint64_t v271;
  double v272;
  uint64_t v273[2];

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v263 = (char *)&v249 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v259 = (char *)&v249 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v258 = (char *)&v249 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v249 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v256 = (char *)&v249 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v264 = (char *)&v249 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v255 = (char *)&v249 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v265 = (char *)&v249 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v267 = (char *)&v249 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v266 = (char *)&v249 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v252 = (char *)&v249 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v268 = (char *)&v249 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v262 = (char *)&v249 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v254 = (char *)&v249 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v253 = (char *)&v249 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v251 = (char *)&v249 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v261 = (char *)&v249 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v249 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v260 = (char *)&v249 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v249 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v249 - v45;
  v47 = sub_239275B30();
  v48 = *(void (**)(char *))(v1 + 16);
  v271 = v47;
  v48(v46);
  v49 = sub_239352098();
  v50 = sub_239352560();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = v39;
    v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v52 = 0;
    _os_log_impl(&dword_23925B000, v49, v50, "User defaults summary:", v52, 2u);
    v53 = v52;
    v39 = v51;
    MEMORY[0x23B83BC04](v53, -1, -1);
  }

  v270 = *(void (**)(char *, uint64_t))(v1 + 8);
  v270(v46, v0);
  v54 = sub_2392666B0(0xD00000000000001ALL, 0x800000023935A6B0);
  swift_bridgeObjectRelease();
  v269 = v48;
  v257 = v10;
  if (v54)
  {
    v55 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v56 = (void *)sub_2393522CC();
    v57 = objc_msgSend(v55, sel_BOOLForKey_, v56);

    ((void (*)(char *, uint64_t, uint64_t))v48)(v44, v271, v0);
    v58 = sub_239352098();
    v59 = sub_239352560();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = swift_slowAlloc();
      v250 = v39;
      v61 = v60;
      v62 = swift_slowAlloc();
      v273[0] = v62;
      *(_DWORD *)v61 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001ALL, 0x800000023935A6B0, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v61 + 12) = 1025;
      LODWORD(v272) = v57;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v58, v59, "%{private}s: %{BOOL,private}d", (uint8_t *)v61, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v62, -1, -1);
      v63 = v61;
      v39 = v250;
      MEMORY[0x23B83BC04](v63, -1, -1);
    }

    v270(v44, v0);
  }
  v64 = sub_239266F40(0xD00000000000002BLL, 0x800000023935A9E0);
  if ((v64 & 0x100000000) == 0)
  {
    v65 = *(float *)&v64;
    v66 = v39;
    v67 = v260;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v260, v271, v0);
    v68 = sub_239352098();
    v69 = sub_239352560();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = v65;
      v71 = swift_slowAlloc();
      v72 = swift_slowAlloc();
      v273[0] = v72;
      *(_DWORD *)v71 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000002BLL, 0x800000023935A9E0, v273));
      sub_2393526B0();
      *(_WORD *)(v71 + 12) = 2049;
      v272 = v70;
      v48 = v269;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v68, v69, "%{private}s: %{private}f", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v72, -1, -1);
      MEMORY[0x23B83BC04](v71, -1, -1);

      v73 = v260;
    }
    else
    {

      v73 = v67;
    }
    v270(v73, v0);
    v39 = v66;
  }
  v74 = sub_2392666B0(0xD000000000000034, 0x800000023935A6D0);
  swift_bridgeObjectRelease();
  v75 = v261;
  if (v74)
  {
    v76 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v77 = (void *)sub_2393522CC();
    v78 = objc_msgSend(v76, sel_BOOLForKey_, v77);

    ((void (*)(char *, uint64_t, uint64_t))v48)(v39, v271, v0);
    v79 = sub_239352098();
    v80 = sub_239352560();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc();
      v250 = v39;
      v82 = v81;
      v83 = swift_slowAlloc();
      v273[0] = v83;
      *(_DWORD *)v82 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000034, 0x800000023935A6D0, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v82 + 12) = 1025;
      LODWORD(v272) = v78;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v79, v80, "%{private}s: %{BOOL,private}d", (uint8_t *)v82, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v83, -1, -1);
      MEMORY[0x23B83BC04](v82, -1, -1);

      v84 = v250;
    }
    else
    {

      v84 = v39;
    }
    v270(v84, v0);
  }
  v85 = sub_239266F40(0xD000000000000029, 0x800000023935A9B0);
  if ((v85 & 0x100000000) == 0)
  {
    v86 = *(float *)&v85;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v75, v271, v0);
    v87 = sub_239352098();
    v88 = sub_239352560();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = v86;
      v90 = swift_slowAlloc();
      v91 = swift_slowAlloc();
      v273[0] = v91;
      *(_DWORD *)v90 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000029, 0x800000023935A9B0, v273));
      sub_2393526B0();
      *(_WORD *)(v90 + 12) = 2049;
      v272 = v89;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v87, v88, "%{private}s: %{private}f", (uint8_t *)v90, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v91, -1, -1);
      MEMORY[0x23B83BC04](v90, -1, -1);
    }

    v270(v75, v0);
  }
  v92 = sub_239266E90(0xD000000000000025, 0x800000023935A980);
  if ((v93 & 1) == 0)
  {
    v94 = *(double *)&v92;
    v95 = v251;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v251, v271, v0);
    v96 = sub_239352098();
    v97 = sub_239352560();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = swift_slowAlloc();
      v99 = swift_slowAlloc();
      v273[0] = v99;
      *(_DWORD *)v98 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000025, 0x800000023935A980, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v98 + 12) = 2049;
      v272 = v94;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v96, v97, "%{private}s: %{private}f", (uint8_t *)v98, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v99, -1, -1);
      MEMORY[0x23B83BC04](v98, -1, -1);
    }

    v270(v95, v0);
  }
  v100 = sub_2392666B0(0xD00000000000002ALL, 0x800000023935A710);
  swift_bridgeObjectRelease();
  v101 = v268;
  if (v100)
  {
    v102 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v103 = (void *)sub_2393522CC();
    v104 = objc_msgSend(v102, sel_BOOLForKey_, v103);

    v105 = v253;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v253, v271, v0);
    v106 = sub_239352098();
    v107 = sub_239352560();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = swift_slowAlloc();
      v109 = swift_slowAlloc();
      v273[0] = v109;
      *(_DWORD *)v108 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000002ALL, 0x800000023935A710, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v108 + 12) = 1025;
      LODWORD(v272) = v104;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v106, v107, "%{private}s: %{BOOL,private}d", (uint8_t *)v108, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v109, -1, -1);
      v110 = v108;
      v101 = v268;
      MEMORY[0x23B83BC04](v110, -1, -1);
    }

    v270(v105, v0);
  }
  v111 = sub_2392666B0(0xD000000000000021, 0x800000023935A740);
  swift_bridgeObjectRelease();
  if (v111)
  {
    v112 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v113 = (void *)sub_2393522CC();
    v114 = objc_msgSend(v112, sel_BOOLForKey_, v113);

    v115 = v254;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v254, v271, v0);
    v116 = sub_239352098();
    v117 = sub_239352560();
    if (os_log_type_enabled(v116, v117))
    {
      v118 = swift_slowAlloc();
      v119 = swift_slowAlloc();
      v273[0] = v119;
      *(_DWORD *)v118 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000021, 0x800000023935A740, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v118 + 12) = 1025;
      LODWORD(v272) = v114;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v116, v117, "%{private}s: %{BOOL,private}d", (uint8_t *)v118, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v119, -1, -1);
      v120 = v118;
      v101 = v268;
      MEMORY[0x23B83BC04](v120, -1, -1);
    }

    v270(v115, v0);
  }
  if (qword_25692C650 != -1)
    swift_once();
  v121 = sub_2392666B0(qword_25692C658, qword_25692C660);
  swift_bridgeObjectRelease();
  v122 = v262;
  if (v121)
  {
    v123 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v124 = (void *)sub_2393522CC();
    objc_msgSend(v123, sel_floatForKey_, v124);
    v126 = v125;

    ((void (*)(char *, uint64_t, uint64_t))v48)(v122, v271, v0);
    v127 = sub_239352098();
    v128 = sub_239352560();
    if (os_log_type_enabled(v127, v128))
    {
      v129 = swift_slowAlloc();
      v130 = swift_slowAlloc();
      v273[0] = v130;
      *(_DWORD *)v129 = 136380931;
      v131 = qword_25692C658;
      v132 = qword_25692C660;
      swift_bridgeObjectRetain();
      v272 = COERCE_DOUBLE(sub_23925F3EC(v131, v132, v273));
      v101 = v268;
      sub_2393526B0();
      v48 = v269;
      swift_bridgeObjectRelease();
      *(_WORD *)(v129 + 12) = 2049;
      v272 = v126;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v127, v128, "%{private}s: %{private}f", (uint8_t *)v129, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v130, -1, -1);
      MEMORY[0x23B83BC04](v129, -1, -1);
    }

    v270(v122, v0);
  }
  v133 = sub_2392666B0(0xD000000000000014, 0x800000023935A770);
  swift_bridgeObjectRelease();
  v134 = v266;
  if (v133)
  {
    v135 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v136 = (void *)sub_2393522CC();
    v137 = objc_msgSend(v135, sel_BOOLForKey_, v136);

    ((void (*)(char *, uint64_t, uint64_t))v48)(v101, v271, v0);
    v138 = sub_239352098();
    v139 = sub_239352560();
    if (os_log_type_enabled(v138, v139))
    {
      v140 = v101;
      v141 = swift_slowAlloc();
      v142 = swift_slowAlloc();
      v273[0] = v142;
      *(_DWORD *)v141 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000014, 0x800000023935A770, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v141 + 12) = 1025;
      LODWORD(v272) = v137;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v138, v139, "%{private}s: %{BOOL,private}d", (uint8_t *)v141, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v142, -1, -1);
      MEMORY[0x23B83BC04](v141, -1, -1);

      v143 = v140;
      v134 = v266;
    }
    else
    {

      v143 = v101;
    }
    v270(v143, v0);
  }
  v144 = sub_239266D10();
  v145 = v267;
  if ((v146 & 1) == 0)
  {
    v147 = *(double *)&v144;
    v148 = v252;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v252, v271, v0);
    v149 = sub_239352098();
    v150 = sub_239352560();
    if (os_log_type_enabled(v149, v150))
    {
      v151 = swift_slowAlloc();
      v152 = swift_slowAlloc();
      v273[0] = v152;
      *(_DWORD *)v151 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001CLL, 0x800000023935A960, v273));
      sub_2393526B0();
      *(_WORD *)(v151 + 12) = 2049;
      v272 = v147;
      v48 = v269;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v149, v150, "%{private}s: %{private}ld", (uint8_t *)v151, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v152, -1, -1);
      v153 = v151;
      v145 = v267;
      MEMORY[0x23B83BC04](v153, -1, -1);
    }

    v270(v148, v0);
  }
  v154 = sub_239266E90(0xD00000000000001DLL, 0x800000023935A940);
  if ((v155 & 1) == 0)
  {
    v156 = *(double *)&v154;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v134, v271, v0);
    v157 = sub_239352098();
    v158 = sub_239352560();
    if (os_log_type_enabled(v157, v158))
    {
      v159 = swift_slowAlloc();
      v160 = swift_slowAlloc();
      v273[0] = v160;
      *(_DWORD *)v159 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001DLL, 0x800000023935A940, v273));
      v48 = v269;
      sub_2393526B0();
      *(_WORD *)(v159 + 12) = 2049;
      v272 = v156;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v157, v158, "%{private}s: %{private}f", (uint8_t *)v159, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v160, -1, -1);
      v161 = v159;
      v145 = v267;
      MEMORY[0x23B83BC04](v161, -1, -1);
    }

    v270(v134, v0);
  }
  v162 = sub_239266F40(0xD000000000000023, 0x800000023935A910);
  v163 = v265;
  if ((v162 & 0x100000000) == 0)
  {
    v164 = *(float *)&v162;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v145, v271, v0);
    v165 = sub_239352098();
    v166 = v145;
    v167 = sub_239352560();
    if (os_log_type_enabled(v165, v167))
    {
      v168 = v164;
      v169 = swift_slowAlloc();
      v170 = swift_slowAlloc();
      v273[0] = v170;
      *(_DWORD *)v169 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000023, 0x800000023935A910, v273));
      sub_2393526B0();
      *(_WORD *)(v169 + 12) = 2049;
      v272 = v168;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v165, v167, "%{private}s: %{private}f", (uint8_t *)v169, 0x16u);
      swift_arrayDestroy();
      v171 = v170;
      v163 = v265;
      MEMORY[0x23B83BC04](v171, -1, -1);
      MEMORY[0x23B83BC04](v169, -1, -1);
    }

    v270(v166, v0);
  }
  v172 = sub_239266F40(0xD000000000000020, 0x800000023935A8E0);
  if ((v172 & 0x100000000) == 0)
  {
    v173 = *(float *)&v172;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v163, v271, v0);
    v174 = sub_239352098();
    v175 = sub_239352560();
    if (os_log_type_enabled(v174, v175))
    {
      v176 = v173;
      v177 = swift_slowAlloc();
      v178 = v163;
      v179 = swift_slowAlloc();
      v273[0] = v179;
      *(_DWORD *)v177 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000020, 0x800000023935A8E0, v273));
      sub_2393526B0();
      *(_WORD *)(v177 + 12) = 2049;
      v272 = v176;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v174, v175, "%{private}s: %{private}f", (uint8_t *)v177, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v179, -1, -1);
      MEMORY[0x23B83BC04](v177, -1, -1);

      v180 = v178;
    }
    else
    {

      v180 = v163;
    }
    v270(v180, v0);
  }
  v181 = sub_2392666B0(0xD00000000000003ELL, 0x800000023935A790);
  swift_bridgeObjectRelease();
  if (v181)
  {
    v182 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v183 = (void *)sub_2393522CC();
    v184 = objc_msgSend(v182, sel_BOOLForKey_, v183);

    v185 = v255;
    ((void (*)(char *, uint64_t, uint64_t))v48)(v255, v271, v0);
    v186 = sub_239352098();
    v187 = sub_239352560();
    if (os_log_type_enabled(v186, v187))
    {
      v188 = v185;
      v189 = swift_slowAlloc();
      v190 = swift_slowAlloc();
      v273[0] = v190;
      *(_DWORD *)v189 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000003ELL, 0x800000023935A790, v273));
      sub_2393526B0();
      *(_WORD *)(v189 + 12) = 1025;
      LODWORD(v272) = v184;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v186, v187, "%{private}s: %{BOOL,private}d", (uint8_t *)v189, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v190, -1, -1);
      MEMORY[0x23B83BC04](v189, -1, -1);

      v191 = v188;
    }
    else
    {

      v191 = v185;
    }
    v270(v191, v0);
  }
  if (qword_25692C668 != -1)
    swift_once();
  v192 = sub_2392666B0(qword_25692C670, qword_25692C678);
  swift_bridgeObjectRelease();
  if (v192)
  {
    v193 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v194 = (void *)sub_2393522CC();
    objc_msgSend(v193, sel_floatForKey_, v194);
    v196 = v195;

    ((void (*)(char *, uint64_t, uint64_t))v269)(v264, v271, v0);
    v197 = sub_239352098();
    v198 = sub_239352560();
    if (os_log_type_enabled(v197, v198))
    {
      v199 = swift_slowAlloc();
      v200 = swift_slowAlloc();
      v273[0] = v200;
      *(_DWORD *)v199 = 136380931;
      v201 = qword_25692C670;
      v202 = qword_25692C678;
      swift_bridgeObjectRetain();
      v272 = COERCE_DOUBLE(sub_23925F3EC(v201, v202, v273));
      sub_2393526B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v199 + 12) = 2049;
      v272 = v196;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v197, v198, "%{private}s: %{private}f", (uint8_t *)v199, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v200, -1, -1);
      MEMORY[0x23B83BC04](v199, -1, -1);
    }

    v270(v264, v0);
  }
  v203 = sub_2392666B0(0xD00000000000003ALL, 0x800000023935A7D0);
  swift_bridgeObjectRelease();
  v204 = (void (*)(char *, uint64_t, uint64_t))v269;
  if (v203)
  {
    v205 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v206 = (void *)sub_2393522CC();
    objc_msgSend(v205, sel_floatForKey_, v206);
    v208 = v207;

    v209 = v256;
    v204(v256, v271, v0);
    v210 = sub_239352098();
    v211 = sub_239352560();
    if (os_log_type_enabled(v210, v211))
    {
      v212 = swift_slowAlloc();
      v213 = swift_slowAlloc();
      v273[0] = v213;
      *(_DWORD *)v212 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000003ALL, 0x800000023935A7D0, v273));
      sub_2393526B0();
      *(_WORD *)(v212 + 12) = 2049;
      v272 = v208;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v210, v211, "%{private}s: %{private}f", (uint8_t *)v212, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v213, -1, -1);
      MEMORY[0x23B83BC04](v212, -1, -1);
    }

    v270(v209, v0);
  }
  v214 = sub_2392666B0(0xD00000000000003CLL, 0x800000023935A810);
  swift_bridgeObjectRelease();
  if (v214)
  {
    v215 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v216 = (void *)sub_2393522CC();
    objc_msgSend(v215, sel_floatForKey_, v216);
    v218 = v217;

    v219 = v257;
    v204(v257, v271, v0);
    v220 = sub_239352098();
    v221 = sub_239352560();
    if (os_log_type_enabled(v220, v221))
    {
      v222 = swift_slowAlloc();
      v223 = swift_slowAlloc();
      v273[0] = v223;
      *(_DWORD *)v222 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000003CLL, 0x800000023935A810, v273));
      sub_2393526B0();
      *(_WORD *)(v222 + 12) = 2049;
      v272 = v218;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v220, v221, "%{private}s: %{private}f", (uint8_t *)v222, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v223, -1, -1);
      MEMORY[0x23B83BC04](v222, -1, -1);
    }

    v270(v219, v0);
  }
  v224 = sub_2392666B0(0xD000000000000048, 0x800000023935A850);
  swift_bridgeObjectRelease();
  if (v224)
  {
    v225 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v226 = (void *)sub_2393522CC();
    objc_msgSend(v225, sel_floatForKey_, v226);
    v228 = v227;

    v229 = v258;
    v204(v258, v271, v0);
    v230 = sub_239352098();
    v231 = sub_239352560();
    if (os_log_type_enabled(v230, v231))
    {
      v232 = swift_slowAlloc();
      v233 = swift_slowAlloc();
      v273[0] = v233;
      *(_DWORD *)v232 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000048, 0x800000023935A850, v273));
      sub_2393526B0();
      *(_WORD *)(v232 + 12) = 2049;
      v272 = v228;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v230, v231, "%{private}s: %{private}f", (uint8_t *)v232, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v233, -1, -1);
      MEMORY[0x23B83BC04](v232, -1, -1);
    }

    v270(v229, v0);
  }
  v234 = sub_2392666B0(0xD00000000000003ALL, 0x800000023935A8A0);
  swift_bridgeObjectRelease();
  if (v234)
  {
    v235 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v236 = (void *)sub_2393522CC();
    v237 = objc_msgSend(v235, sel_BOOLForKey_, v236);

    v238 = v204;
    v239 = v259;
    v238(v259, v271, v0);
    v240 = sub_239352098();
    v241 = sub_239352560();
    if (os_log_type_enabled(v240, v241))
    {
      v242 = swift_slowAlloc();
      v243 = swift_slowAlloc();
      v273[0] = v243;
      *(_DWORD *)v242 = 136380931;
      v272 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000003ALL, 0x800000023935A8A0, v273));
      sub_2393526B0();
      *(_WORD *)(v242 + 12) = 1025;
      LODWORD(v272) = v237;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v240, v241, "%{private}s: %{BOOL,private}d", (uint8_t *)v242, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v243, -1, -1);
      MEMORY[0x23B83BC04](v242, -1, -1);
    }

    v270(v239, v0);
    v204 = (void (*)(char *, uint64_t, uint64_t))v269;
  }
  v244 = v263;
  v204(v263, v271, v0);
  v245 = sub_239352098();
  v246 = sub_239352560();
  if (os_log_type_enabled(v245, v246))
  {
    v247 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v247 = 0;
    _os_log_impl(&dword_23925B000, v245, v246, "End of user defaults summary", v247, 2u);
    MEMORY[0x23B83BC04](v247, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v270)(v244, v0);
}

unint64_t sub_2392666B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void (*v15)(char *, id, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  id v52;
  void (*v53)(char *, id, uint64_t);
  uint64_t v54;
  uint64_t v55;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v48 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v48 - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v14 = (void *)sub_239275B30();
  v15 = *(void (**)(char *, id, uint64_t))(v5 + 16);
  v52 = v14;
  v53 = v15;
  ((void (*)(char *))v15)(v12);
  swift_bridgeObjectRetain_n();
  v16 = sub_239352098();
  v17 = sub_239352560();
  if (os_log_type_enabled(v16, v17))
  {
    v51 = v10;
    v18 = swift_slowAlloc();
    v49 = a1;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v48 = v4;
    v21 = v20;
    v55 = v20;
    *(_DWORD *)v19 = 136380675;
    swift_bridgeObjectRetain();
    v54 = sub_23925F3EC(v49, a2, &v55);
    v10 = v51;
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v16, v17, "Settings: Looking for key = \"%{private}s\"", v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    v4 = v48;
    MEMORY[0x23B83BC04](v22, -1, -1);
    v23 = v19;
    a1 = v49;
    MEMORY[0x23B83BC04](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v12, v4);
  v25 = (void *)sub_2393522CC();
  v26 = objc_msgSend(v13, sel_stringForKey_, v25);

  if (v26)
  {
    v27 = a1;
    v28 = sub_2393522F0();
    v30 = v29;

    v53(v10, v52, v4);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v31 = sub_239352098();
    v32 = sub_239352560();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v51 = v10;
      v34 = v33;
      v35 = swift_slowAlloc();
      v53 = (void (*)(char *, id, uint64_t))v24;
      v36 = v28;
      v37 = v35;
      v55 = v35;
      *(_DWORD *)v34 = 136380931;
      v52 = v13;
      swift_bridgeObjectRetain();
      v54 = sub_23925F3EC(v27, a2, &v55);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 12) = 2081;
      swift_bridgeObjectRetain();
      v54 = sub_23925F3EC(v36, v30, &v55);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23925B000, v31, v32, "Settings: Found defaults \"%{private}s\": %{private}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v37, -1, -1);
      MEMORY[0x23B83BC04](v34, -1, -1);

      ((void (*)(char *, uint64_t))v53)(v51, v4);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v24(v10, v4);
    }
  }
  else
  {
    v38 = v13;
    v39 = v50;
    v53(v50, v52, v4);
    swift_bridgeObjectRetain_n();
    v40 = sub_239352098();
    v41 = sub_239352560();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v48 = v4;
      v44 = v43;
      v55 = v43;
      *(_DWORD *)v42 = 136380675;
      swift_bridgeObjectRetain();
      v54 = sub_23925F3EC(a1, a2, &v55);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23925B000, v40, v41, "Settings: \"%{private}s\" not found!", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v44, -1, -1);
      MEMORY[0x23B83BC04](v42, -1, -1);

      v45 = v50;
      v46 = v48;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v45 = v39;
      v46 = v4;
    }
    v24(v45, v46);
    return 0;
  }
  return v30;
}

uint64_t sub_239266C78(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  id v3;
  void *v4;
  id v5;

  v2 = sub_2392666B0(a1, a2);
  swift_bridgeObjectRelease();
  if (!v2)
    return 2;
  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v4 = (void *)sub_2393522CC();
  v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  return (uint64_t)v5;
}

uint64_t sub_239266D10()
{
  unint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v0 = sub_2392666B0(0xD00000000000001CLL, 0x800000023935A960);
  swift_bridgeObjectRelease();
  if (!v0)
    return 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_2393522CC();
  v3 = (uint64_t)objc_msgSend(v1, sel_integerForKey_, v2);

  if ((v3 & (unint64_t)~(v3 >> 63)) >= 0xBD0)
    return 3024;
  else
    return v3 & ~(v3 >> 63);
}

unint64_t sub_239266DD4(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  id v3;
  void *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;

  v2 = sub_2392666B0(a1, a2);
  swift_bridgeObjectRelease();
  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v4 = (void *)sub_2393522CC();
    objc_msgSend(v3, sel_floatForKey_, v4);
    v6 = v5;

    v7 = v6;
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_239266E90(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  id v3;
  void *v4;
  double v5;
  double v6;

  v2 = sub_2392666B0(a1, a2);
  swift_bridgeObjectRelease();
  if (v2
    && (v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v4 = (void *)sub_2393522CC(),
        objc_msgSend(v3, sel_doubleForKey_, v4),
        v6 = v5,
        v3,
        v4,
        v6 > 0.0))
  {
    return *(_QWORD *)&v6;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_239266F40(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  id v3;
  void *v4;
  float v5;
  float v6;
  unsigned __int8 v7;
  uint64_t v8;

  v2 = sub_2392666B0(a1, a2);
  swift_bridgeObjectRelease();
  if (v2
    && (v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v4 = (void *)sub_2393522CC(),
        objc_msgSend(v3, sel_floatForKey_, v4),
        v6 = v5,
        v3,
        v4,
        v6 > 0.0))
  {
    v7 = 0;
    v8 = LODWORD(v6);
  }
  else
  {
    v8 = 0;
    v7 = 1;
  }
  return v8 | ((unint64_t)v7 << 32);
}

ValueMetadata *type metadata accessor for ExperimentSettings()
{
  return &type metadata for ExperimentSettings;
}

uint64_t PhotogrammetrySample.Camera.init(id:intrinsics:transform:trackingState:calibrationData:wideToDepthTransform:)@<X0>(int a1@<W0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, __n128 a7@<Q0>, __n128 a8@<Q1>, __n128 a9@<Q2>, __n128 a10@<Q3>)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v16 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  v17 = v16[8];
  v18 = a6 + v16[9];
  v19 = a6 + v16[10];
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_BYTE *)(v19 + 64) = 1;
  v20 = a6 + v16[11];
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_BYTE *)(v20 + 64) = 1;
  *(_DWORD *)a6 = a1;
  v21 = a2[1];
  *(_OWORD *)(a6 + 16) = *a2;
  *(_OWORD *)(a6 + 32) = v21;
  *(_OWORD *)(a6 + 48) = a2[2];
  *(__n128 *)(a6 + 64) = a7;
  *(__n128 *)(a6 + 80) = a8;
  *(__n128 *)(a6 + 96) = a9;
  *(__n128 *)(a6 + 112) = a10;
  sub_239267114(a3, a6 + v16[7]);
  *(_QWORD *)(a6 + v17) = a4;
  return sub_239268764(a5, v18, &qword_25692A8A0);
}

uint64_t type metadata accessor for PhotogrammetrySample.Camera(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692C730);
}

uint64_t sub_239267114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_239352680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_239267158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = type metadata accessor for PhotogrammetrySample.Camera(0);
  sub_239268764(a1, v2 + *(int *)(v5 + 40), &qword_25692A8A0);
  return sub_239268764(a2, v2 + *(int *)(v5 + 44), &qword_25692A8A0);
}

uint64_t PhotogrammetrySample.Camera.id.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t PhotogrammetrySample.Camera.id.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PhotogrammetrySample.Camera.id.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Camera.intrinsics.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  return result;
}

__n128 PhotogrammetrySample.Camera.intrinsics.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*PhotogrammetrySample.Camera.intrinsics.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Camera.transform.getter()
{
  __n128 *v0;

  return v0[4];
}

void PhotogrammetrySample.Camera.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v4[7] = a4;
}

uint64_t (*PhotogrammetrySample.Camera.transform.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.Camera.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample.Camera(0);
  return sub_239268820(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
}

uint64_t PhotogrammetrySample.Camera.trackingState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 28);
  return sub_2392672B4(a1, v3);
}

uint64_t sub_2392672B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_239352680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PhotogrammetrySample.Camera.trackingState.modify())()
{
  type metadata accessor for PhotogrammetrySample.Camera(0);
  return nullsub_1;
}

void *PhotogrammetrySample.Camera.calibrationData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 32));
  v2 = v1;
  return v1;
}

void PhotogrammetrySample.Camera.calibrationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 32);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*PhotogrammetrySample.Camera.calibrationData.modify())()
{
  type metadata accessor for PhotogrammetrySample.Camera(0);
  return nullsub_1;
}

__n128 PhotogrammetrySample.Camera.wideToDepthTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 36);
  v4 = *(_BYTE *)(v3 + 64);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v3 + 32);
  v7 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = v4;
  return result;
}

uint64_t PhotogrammetrySample.Camera.wideToDepthTransform.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample.Camera(0);
  return sub_239268764(a1, v1 + *(int *)(v3 + 36), &qword_25692A8A0);
}

uint64_t (*PhotogrammetrySample.Camera.wideToDepthTransform.modify())()
{
  type metadata accessor for PhotogrammetrySample.Camera(0);
  return nullsub_1;
}

void __swiftcall PhotogrammetrySample.Object.init(transform:boundingBox:)(CoreOC::PhotogrammetrySample::Object *__return_ptr retstr, simd_float4x4 *transform, simd_float4x4 *boundingBox)
{
  simd_float4 v3;
  simd_float4 v4;
  simd_float4 v5;
  simd_float4 v6;
  simd_float4 v7;
  simd_float4 v8;
  simd_float4 v9;
  simd_float4 v10;

  retstr->transform.columns[0] = v3;
  retstr->transform.columns[1] = v4;
  retstr->transform.columns[2] = v5;
  retstr->transform.columns[3] = v6;
  retstr->boundingBox.columns[0] = v7;
  retstr->boundingBox.columns[1] = v8;
  retstr->boundingBox.columns[2] = v9;
  retstr->boundingBox.columns[3] = v10;
}

__n128 PhotogrammetrySample.Object.transform.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

void PhotogrammetrySample.Object.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*PhotogrammetrySample.Object.transform.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Object.boundingBox.getter()
{
  __n128 *v0;

  return v0[4];
}

void PhotogrammetrySample.Object.boundingBox.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v4[7] = a4;
}

uint64_t (*PhotogrammetrySample.Object.boundingBox.modify())()
{
  return nullsub_1;
}

void __swiftcall PhotogrammetrySample.Scene.init(boundingBox:)(CoreOC::PhotogrammetrySample::Scene *__return_ptr retstr, simd_float4x4 *boundingBox)
{
  simd_float4 v2;
  simd_float4 v3;
  simd_float4 v4;
  simd_float4 v5;

  retstr->boundingBox.columns[0] = v2;
  retstr->boundingBox.columns[1] = v3;
  retstr->boundingBox.columns[2] = v4;
  retstr->boundingBox.columns[3] = v5;
}

__n128 PhotogrammetrySample.Scene.boundingBox.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

void PhotogrammetrySample.Scene.boundingBox.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*PhotogrammetrySample.Scene.boundingBox.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

id PhotogrammetrySample.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t PhotogrammetrySample.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhotogrammetrySample.metadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PhotogrammetrySample.metadata.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.depthDataMap.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void PhotogrammetrySample.depthDataMap.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*PhotogrammetrySample.depthDataMap.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.depthConfidenceMap.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void PhotogrammetrySample.depthConfidenceMap.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*PhotogrammetrySample.depthConfidenceMap.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.gravity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t PhotogrammetrySample.gravity.setter(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = result;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 56) = a3;
  *(_BYTE *)(v4 + 64) = a4 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.gravity.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.objectMask.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  return v1;
}

void PhotogrammetrySample.objectMask.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
}

uint64_t (*PhotogrammetrySample.objectMask.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.pointCloudData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  return v1;
}

void PhotogrammetrySample.pointCloudData.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
}

uint64_t (*PhotogrammetrySample.pointCloudData.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.camera.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_23926059C(v1 + *(int *)(v3 + 48), a1, &qword_256927628);
}

uint64_t type metadata accessor for PhotogrammetrySample(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692C720);
}

uint64_t sub_239267738(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PhotogrammetrySample.camera.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_239267C70(a1, v1 + *(int *)(v3 + 48), &qword_256927628);
}

uint64_t (*PhotogrammetrySample.camera.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

double sub_2392677D0(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 128) = 1;
  return result;
}

uint64_t PhotogrammetrySample.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[144];

  v3 = type metadata accessor for PhotogrammetrySample(0);
  sub_239268764(v1 + *(int *)(v3 + 52), (uint64_t)v5, &qword_256927630);
  return sub_239268764((uint64_t)v5, a1, &qword_256927630);
}

uint64_t PhotogrammetrySample.object.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[144];

  sub_239268764(a1, (uint64_t)v4, &qword_256927630);
  v2 = type metadata accessor for PhotogrammetrySample(0);
  return sub_239268764((uint64_t)v4, v1 + *(int *)(v2 + 52), &qword_256927630);
}

uint64_t (*PhotogrammetrySample.object.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

__n128 PhotogrammetrySample.scene.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 56);
  v4 = *(_BYTE *)(v3 + 64);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  result = *(__n128 *)(v3 + 32);
  v7 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = v4;
  return result;
}

__n128 PhotogrammetrySample.scene.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_BYTE *)a1 + 64);
  v5 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 56);
  *(_OWORD *)v5 = v9;
  *(_OWORD *)(v5 + 16) = v8;
  result = v7;
  *(__n128 *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  *(_BYTE *)(v5 + 64) = v4;
  return result;
}

uint64_t (*PhotogrammetrySample.scene.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySample.captureMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 60));
}

uint64_t PhotogrammetrySample.captureMode.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for PhotogrammetrySample(0);
  v6 = v2 + *(int *)(result + 60);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.captureMode.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

void *PhotogrammetrySample.rawFeaturePoints.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 64));
  v2 = v1;
  return v1;
}

void PhotogrammetrySample.rawFeaturePoints.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for PhotogrammetrySample(0) + 64);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*PhotogrammetrySample.rawFeaturePoints.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySample.timestamp.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 68));
}

uint64_t PhotogrammetrySample.timestamp.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for PhotogrammetrySample(0);
  v6 = v2 + *(int *)(result + 68);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.timestamp.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySample.captureTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_23926059C(v1 + *(int *)(v3 + 72), a1, &qword_256927018);
}

uint64_t PhotogrammetrySample.captureTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_239267C70(a1, v1 + *(int *)(v3 + 72), &qword_256927018);
}

uint64_t (*PhotogrammetrySample.captureTime.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySample.objectCaptureSessionUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_23926059C(v1 + *(int *)(v3 + 76), a1, &qword_2569281C0);
}

uint64_t PhotogrammetrySample.objectCaptureSessionUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_239267C70(a1, v1 + *(int *)(v3 + 76), &qword_2569281C0);
}

uint64_t sub_239267C70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23925FB08(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*PhotogrammetrySample.objectCaptureSessionUUID.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySample.staticSegmentID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 80));
}

uint64_t PhotogrammetrySample.staticSegmentID.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for PhotogrammetrySample(0);
  v6 = v2 + *(int *)(result + 80);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.staticSegmentID.modify())()
{
  type metadata accessor for PhotogrammetrySample(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySample.init(id:image:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _BYTE v22[144];

  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 16) = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_QWORD *)(a3 + 56) = 0;
  *(_BYTE *)(a3 + 64) = 1;
  v7 = (int *)type metadata accessor for PhotogrammetrySample(0);
  *(_QWORD *)(a3 + 72) = 0;
  *(_QWORD *)(a3 + 80) = 0;
  v8 = a3 + v7[12];
  v9 = type metadata accessor for PhotogrammetrySample.Camera(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a3 + v7[13];
  sub_2392677D0((uint64_t)v22);
  sub_239268764((uint64_t)v22, v10, &qword_256927630);
  v11 = a3 + v7[14];
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_BYTE *)(v11 + 64) = 1;
  v12 = a3 + v7[15];
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  *(_QWORD *)(a3 + v7[16]) = 0;
  v13 = a3 + v7[17];
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = a3 + v7[18];
  v15 = sub_239351FD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = a3 + v7[19];
  v17 = sub_239352020();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v19 = a3 + v7[20];
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = (_QWORD *)(a3 + v7[21]);
  *v20 = 0;
  v20[1] = 0;
  v21 = a3 + v7[22];
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  *(_QWORD *)(a3 + v7[23]) = v6;
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

void sub_239267F10(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t static PhotogrammetrySample.makeSample(shot:shotMetadata:)@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  __CVBuffer *v14;
  uint64_t v15;
  uint64_t v16;
  __CVBuffer *v17;
  BOOL v18;
  __CVBuffer *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  __CVBuffer *v23;
  id v24;
  BOOL v25;
  double v26;
  uint64_t v27;
  __CVBuffer *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  __CVBuffer *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  __int128 *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int *v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  char *v74;
  char v75;
  char *v76;
  char v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  char *v87;
  __int128 v88;
  int v89;
  id v90;
  uint64_t v91;
  id v92;
  uint64_t *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  double *v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int8 v103;
  unsigned __int8 v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  int *v118;
  void (*v119)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t *v120;
  uint64_t v121;
  double *v122;
  uint64_t *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  char *v130;
  __int128 v131;
  __int128 v132;
  _OWORD v133[8];
  uint64_t v134;
  char v135;
  _BYTE v136[160];
  _OWORD v137[10];
  _BYTE v138[144];
  _BYTE v139[128];
  id v140;
  _BYTE v141[160];
  _BYTE v142[128];
  __CVBuffer *v143;

  v6 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for PhotogrammetrySample(0);
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(double *)a1;
  if (*(double *)a1 != *a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
  v14 = *(__CVBuffer **)(a1 + 8);
  *(_QWORD *)&v132 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v131 = v15;
  if ((uint64_t)CVPixelBufferGetWidth(v14) < 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
  if ((uint64_t)CVPixelBufferGetHeight(v14) < 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
  if (!sub_2392961B0(v14))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
  *(_QWORD *)&v129 = v16;
  v130 = v8;
  if ((_QWORD)v132)
  {
    v17 = (__CVBuffer *)(id)v132;
    v18 = sub_2392962D4(v17);

    if (!v18)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
  }
  if ((_QWORD)v131)
  {
    v19 = (__CVBuffer *)(id)v131;
    v20 = sub_239296494(v19);

    if (!v20)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
  }
  v21 = (uint64_t)a2 + v6[7];
  sub_239268764(v21, (uint64_t)v141, &qword_25692A8C0);
  sub_239268764((uint64_t)v141, (uint64_t)v142, &qword_25692A8C0);
  result = sub_2392687A8((uint64_t)v142);
  if ((_DWORD)result != 1)
  {
    v23 = v143;
    if (v143)
    {
      sub_239268764((uint64_t)v141, (uint64_t)v139, &qword_25692A8C0);
      v24 = v140;
      v25 = sub_239296354(v23);
      result = sub_2392688F0((uint64_t)v141, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
      if (!v25)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a3, 1, 1, v9);
    }
  }
  v26 = v13 * 1000.0;
  if ((~COERCE__INT64(v13 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v127 = v21;
  v128 = a3;
  if (v26 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  v27 = (uint64_t)v26;
  v28 = v14;
  *(_QWORD *)&v117 = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  v29 = (uint64_t)&v12[v9[12]];
  v30 = type metadata accessor for PhotogrammetrySample.Camera(0);
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(*(_QWORD *)(v30 - 8) + 56);
  v118 = (int *)v30;
  v119 = v31;
  v31(v29, 1, 1, (int *)v30);
  v32 = (uint64_t)&v12[v9[13]];
  sub_2392677D0((uint64_t)v138);
  v113 = v32;
  sub_239268764((uint64_t)v138, v32, &qword_256927630);
  v33 = &v12[v9[14]];
  *((_OWORD *)v33 + 2) = 0u;
  *((_OWORD *)v33 + 3) = 0u;
  *(_OWORD *)v33 = 0u;
  *((_OWORD *)v33 + 1) = 0u;
  v112 = v33;
  v33[64] = 1;
  v34 = &v12[v9[15]];
  *(_QWORD *)v34 = 0;
  v120 = (uint64_t *)v34;
  v34[8] = 1;
  v121 = v9[16];
  *(_QWORD *)&v12[v121] = 0;
  v35 = &v12[v9[17]];
  *(_QWORD *)v35 = 0;
  v122 = (double *)v35;
  v35[8] = 1;
  v36 = &v12[v9[18]];
  v37 = sub_239351FD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
  v38 = (uint64_t)&v12[v9[19]];
  v39 = sub_239352020();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v126 = v38;
  v40(v38, 1, 1, v39);
  v41 = &v12[v9[20]];
  *(_QWORD *)v41 = 0;
  v123 = (uint64_t *)v41;
  v41[8] = 1;
  v42 = &v12[v9[21]];
  *(_QWORD *)v42 = 0;
  *((_QWORD *)v42 + 1) = 0;
  v43 = &v12[v9[22]];
  *(_QWORD *)v43 = 0;
  v125 = v43;
  v43[8] = 1;
  v124 = v9[23];
  *(_QWORD *)&v12[v124] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v12 = v27;
  *((_QWORD *)v12 + 1) = v28;
  v44 = v28;
  v45 = (char *)a2 + v6[10];
  v46 = *(_QWORD *)v45;
  v47 = *((_QWORD *)v45 + 1);
  *(_QWORD *)&v116 = *((_QWORD *)v45 + 2);
  LOBYTE(v27) = v45[24];
  *(_QWORD *)&v115 = sub_2392C577C(v44, v46, v47, v116, v27);
  swift_bridgeObjectRelease();
  v48 = v132;
  *((_QWORD *)v12 + 2) = v115;
  *((_QWORD *)v12 + 3) = v48;
  *((_QWORD *)v12 + 4) = v131;
  *((_QWORD *)v12 + 5) = v46;
  v49 = v116;
  *((_QWORD *)v12 + 6) = v47;
  *((_QWORD *)v12 + 7) = v49;
  v12[64] = v27;
  sub_239268764((uint64_t)v141, (uint64_t)v139, &qword_25692A8C0);
  v50 = sub_2392687A8((uint64_t)v139);
  v51 = v140;
  if (v50 == 1)
    v51 = 0;
  v52 = (void *)v129;
  *((_QWORD *)v12 + 9) = v51;
  *((_QWORD *)v12 + 10) = v52;
  v53 = (id)v131;
  v54 = (id)v132;
  sub_2392688F0((uint64_t)v141, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2392687CC);
  v55 = v52;
  sub_2392687E0(v29);
  v56 = (__int128 *)((char *)a2 + v6[5]);
  v57 = *v56;
  v131 = v56[1];
  v132 = v57;
  v129 = v56[2];
  v58 = v56[3];
  v116 = v56[4];
  v117 = v58;
  v59 = v56[5];
  v114 = v56[6];
  v115 = v59;
  v60 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v61 = v118;
  sub_239268820((uint64_t)v56 + v60[6], v29 + v118[7], (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  v62 = *(_QWORD *)((char *)v56 + v60[7]);
  v63 = (char *)v56 + v60[8];
  v64 = v63[64];
  v65 = v61[8];
  v66 = v29 + v61[9];
  v67 = v29 + v61[10];
  *(_OWORD *)v67 = 0u;
  *(_OWORD *)(v67 + 16) = 0u;
  *(_OWORD *)(v67 + 32) = 0u;
  *(_OWORD *)(v67 + 48) = 0u;
  *(_BYTE *)(v67 + 64) = 1;
  v68 = v29 + v61[11];
  *(_OWORD *)v68 = 0u;
  *(_OWORD *)(v68 + 16) = 0u;
  *(_OWORD *)(v68 + 32) = 0u;
  *(_OWORD *)(v68 + 48) = 0u;
  *(_BYTE *)(v68 + 64) = 1;
  *(_DWORD *)v29 = 0;
  v69 = v131;
  *(_OWORD *)(v29 + 16) = v132;
  *(_OWORD *)(v29 + 32) = v69;
  v70 = v117;
  *(_OWORD *)(v29 + 48) = v129;
  *(_OWORD *)(v29 + 64) = v70;
  v71 = v115;
  *(_OWORD *)(v29 + 80) = v116;
  *(_OWORD *)(v29 + 96) = v71;
  *(_OWORD *)(v29 + 112) = v114;
  *(_QWORD *)&v132 = v62;
  *(_QWORD *)(v29 + v65) = v62;
  v72 = *((_OWORD *)v63 + 1);
  *(_OWORD *)v66 = *(_OWORD *)v63;
  *(_OWORD *)(v66 + 16) = v72;
  v73 = *((_OWORD *)v63 + 3);
  *(_OWORD *)(v66 + 32) = *((_OWORD *)v63 + 2);
  *(_OWORD *)(v66 + 48) = v73;
  *(_BYTE *)(v66 + 64) = v64;
  v119(v29, 0, 1, v61);
  v74 = (char *)v56 + v60[9];
  v75 = v74[64];
  v76 = (char *)v56 + v60[10];
  v77 = v76[64];
  v78 = v29 + v61[10];
  v79 = *((_OWORD *)v74 + 1);
  *(_OWORD *)v78 = *(_OWORD *)v74;
  *(_OWORD *)(v78 + 16) = v79;
  v80 = *((_OWORD *)v74 + 3);
  *(_OWORD *)(v78 + 32) = *((_OWORD *)v74 + 2);
  *(_OWORD *)(v78 + 48) = v80;
  *(_BYTE *)(v78 + 64) = v75;
  v81 = v29 + v61[11];
  v82 = *((_OWORD *)v76 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v76;
  *(_OWORD *)(v81 + 16) = v82;
  v83 = *((_OWORD *)v76 + 3);
  *(_OWORD *)(v81 + 32) = *((_OWORD *)v76 + 2);
  *(_OWORD *)(v81 + 48) = v83;
  *(_BYTE *)(v81 + 64) = v77;
  sub_239268764(v127, (uint64_t)v136, &qword_25692A8C0);
  sub_239268764((uint64_t)v136, (uint64_t)v137, &qword_25692A8C0);
  if (sub_2392687A8((uint64_t)v137) == 1)
  {
    v84 = (char *)a2 + v6[8];
    v85 = (uint64_t)v130;
    if ((v84[73] & 1) == 0)
    {
      v86 = *((_OWORD *)v84 + 1);
      v87 = v112;
      *(_OWORD *)v112 = *(_OWORD *)v84;
      *((_OWORD *)v87 + 1) = v86;
      v88 = *((_OWORD *)v84 + 3);
      *((_OWORD *)v87 + 2) = *((_OWORD *)v84 + 2);
      *((_OWORD *)v87 + 3) = v88;
      v87[64] = 0;
    }
  }
  else
  {
    v133[0] = v137[4];
    v133[1] = v137[5];
    v133[2] = v137[6];
    v133[3] = v137[7];
    v133[4] = v137[0];
    v133[5] = v137[1];
    v133[6] = v137[2];
    v133[7] = v137[3];
    sub_2392688E8((uint64_t)v133);
    sub_239268764((uint64_t)v133, v113, &qword_256927630);
    v85 = (uint64_t)v130;
  }
  v89 = *((unsigned __int8 *)a2 + v6[9]);
  if (v89 == 2)
  {
    v90 = (id)v132;
    v91 = -1;
  }
  else
  {
    LOBYTE(v133[0]) = v89 & 1;
    v92 = (id)v132;
    v91 = ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter();
  }
  v93 = v120;
  v94 = v121;
  *v120 = v91;
  *((_BYTE *)v93 + 8) = 0;
  v95 = *(void **)((char *)a2 + v6[11]);
  v96 = *(void **)&v12[v94];
  *(_QWORD *)&v12[v94] = v95;
  v97 = v95;

  v98 = v122;
  *v122 = v13;
  *((_BYTE *)v98 + 8) = 0;
  sub_239268764((uint64_t)v136, (uint64_t)v133, &qword_25692A8C0);
  LODWORD(v96) = sub_2392687A8((uint64_t)v133);
  v99 = v134;
  v100 = v135;
  sub_239268820((uint64_t)a2, v85, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  if ((_DWORD)v96 == 1 || (v100 & 1) != 0)
  {
    v101 = v85 + v6[8];
    v102 = *(_QWORD *)(v101 + 64);
    v103 = *(_BYTE *)(v101 + 72);
    v104 = *(_BYTE *)(v101 + 73);
    sub_2392688AC(v85, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    if (((v104 | v103) & 1) != 0)
      v99 = -1;
    else
      v99 = v102;
  }
  else
  {
    sub_2392688AC(v85, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  }
  v105 = v123;
  *v123 = v99;
  *((_BYTE *)v105 + 8) = 0;
  sub_239268864((uint64_t)a2 + v6[6], v126);
  v106 = *(_QWORD *)((char *)a2 + v6[13]);
  v107 = v124;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v107] = v106;
  v108 = (char *)a2 + v6[12];
  v109 = *(_QWORD *)v108;
  LOBYTE(v108) = v108[8];
  v110 = v125;
  *(_QWORD *)v125 = v109;
  v110[8] = (char)v108;
  v111 = v128;
  sub_239268820((uint64_t)v12, v128, type metadata accessor for PhotogrammetrySample);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v10 + 56))(v111, 0, 1, v9);
  return sub_2392688AC((uint64_t)v12, type metadata accessor for PhotogrammetrySample);
}

uint64_t sub_239268764(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_23925FB08(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2392687A8(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 128);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

id sub_2392687CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{
  id result;

  result = a17;
  if (a17 != (id)1)
    return a17;
  return result;
}

uint64_t sub_2392687E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23925FB08(&qword_256927628);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_239268820(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_239268864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_2569281C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392688AC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2392688E8(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_2392688F0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 144);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), v4);
  return a1;
}

void sub_239268954(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{
  if (a17 != (id)1)

}

uint64_t sub_239268968(_QWORD *a1, double *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __n128 *v49;
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  Swift::Int v59;
  int v60;
  void *v61;
  id v62;
  __n128 *v63;
  void *v64;
  id v65;
  unsigned __int8 v66;
  uint64_t v67;
  __n128 *v68;
  uint64_t v69;
  int *v70;
  unsigned int (*v71)(__n128 *, uint64_t, int *);
  __n128 v72;
  __n128 v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t result;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  __n128 v105;
  uint64_t v106;
  unint64_t v107;
  __n128 v108;
  __n128 v109;
  __n128 v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __n128 v126;
  __n128 v127;
  __n128 v128;
  __n128 v129;
  __n128 v130;
  __n128 v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  char v135;
  unsigned __int8 v136;
  __int128 v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  _OWORD v147[9];
  char v148;
  __n128 v149[9];
  char v150;
  __n128 v151;
  __n128 v152;
  __n128 v153;
  __n128 v154;
  __n128 v155;
  __n128 v156;
  __n128 v157;
  __n128 v158;
  __n128 v159;
  char v160;
  _BYTE v161[144];
  _OWORD v162[9];
  _BYTE v163[160];
  _BYTE v164[144];
  _OWORD v165[8];
  _QWORD v166[5];
  _OWORD v167[3];
  _BYTE v168[80];
  _BYTE v169[80];
  _BYTE v170[80];

  v4 = v3;
  v119 = a2;
  v120 = a1;
  v6 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v6);
  v118 = (uint64_t)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239352680();
  MEMORY[0x24BDAC7A8](v8);
  v132 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23925FB08(&qword_256927628);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v122 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v131.n128_u64[0] = (unint64_t)v104.n128_u64 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v123 = (uint64_t)&v104 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v124 = (uint64_t)&v104 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v125 = (uint64_t)&v104 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (__n128 *)((char *)&v104 - v22);
  MEMORY[0x24BDAC7A8](v21);
  v130.n128_u64[0] = (unint64_t)v104.n128_u64 - v24;
  v25 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v117 = (uint64_t)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v121 = (uint64_t)&v104 - v28;
  v29 = (int *)type metadata accessor for PhotogrammetrySample(0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v4 + *(int *)(v30 + 68);
  if ((*(_BYTE *)(v33 + 8) & 1) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v116 = v4 + *(int *)(v30 + 68);
  v34 = *(double *)v33;
  v35 = *(void **)(v4 + 8);
  v36 = *(void **)(v4 + 24);
  v37 = *(void **)(v4 + 32);
  v38 = *(void **)(v4 + 80);
  v39 = v38;
  v40 = v35;
  v41 = v36;
  v42 = v37;
  sub_2392F41EC((uint64_t)v40, (uint64_t)v36, (uint64_t)v37, (uint64_t)v38, (uint64_t)v166, v34);
  v43 = v166[0];
  v44 = v166[1];
  v113 = v166[3];
  v114 = v166[2];
  v112 = v166[4];
  v45 = sub_23926946C((uint64_t)v163);
  v46 = v4 + v29[19];
  v47 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, double))(*(_QWORD *)a3 + 104))(v46, *(_QWORD *)(v4 + v29[20]), *(unsigned __int8 *)(v4 + v29[20] + 8), v45);
  v48 = v4 + v29[13];
  sub_239268764(v48, (uint64_t)v164, &qword_256927630);
  sub_239268820(v4, (uint64_t)v32, type metadata accessor for PhotogrammetrySample);
  sub_239268764((uint64_t)v164, (uint64_t)v165, &qword_256927630);
  if (sub_239269494((uint64_t)v165) == 1)
  {
    v49 = (__n128 *)&v32[v29[14]];
    if ((v49[4].n128_u8[0] & 1) != 0)
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      v128 = v51;
      v129 = v50;
      v126 = v53;
      v127 = v52;
    }
    else
    {
      v129 = *v49;
      v128 = v49[1];
      v127 = v49[2];
      v126 = v49[3];
    }
  }
  else
  {
    v128 = (__n128)v165[5];
    v129 = (__n128)v165[4];
    v126 = (__n128)v165[7];
    v127 = (__n128)v165[6];
  }
  sub_2392688AC((uint64_t)v32, type metadata accessor for PhotogrammetrySample);
  sub_239268764(v48, (uint64_t)v161, &qword_256927630);
  sub_239268764((uint64_t)v161, (uint64_t)v162, &qword_256927630);
  if (sub_239269494((uint64_t)v162) == 1)
  {
    OCNonModularSPI_Serialization_InvalidObjectTransform();
  }
  else
  {
    v54 = (__n128)v162[4];
    v55 = (__n128)v162[5];
    v56 = (__n128)v162[6];
    v57 = (__n128)v162[7];
  }
  v58 = v4 + v29[15];
  v59 = *(_QWORD *)v58;
  v60 = *(unsigned __int8 *)(v58 + 8);
  v115 = v44;
  v133 = v29;
  if ((v60 & 1) != 0)
    goto LABEL_14;
  if (v59 == 1)
  {
    sub_2392F44C4(v47, 0, &v151, v129, v128, v127, v126);
    v128.n128_u64[0] = v151.n128_u64[1];
    v129.n128_u64[0] = v151.n128_u64[0];
    v126.n128_u64[0] = v152.n128_u64[1];
    v127.n128_u64[0] = v152.n128_u64[0];
    v110.n128_u64[0] = v153.n128_u64[1];
    v111.n128_u64[0] = v153.n128_u64[0];
    v109.n128_u64[0] = v154.n128_u64[0];
    v107 = v155.n128_u64[0];
    v108.n128_u64[0] = v154.n128_u64[1];
    HIDWORD(v106) = v155.n128_u8[8];
    sub_239268764((uint64_t)v163, (uint64_t)v149, &qword_25692A8C0);
    LODWORD(v106) = 0;
    goto LABEL_18;
  }
  if (v59)
  {
LABEL_14:
    v64 = *(void **)(v4 + 72);
    v108 = v54;
    v109 = v55;
    v110 = v56;
    v111 = v57;
    v65 = v64;
    sub_2392F448C((unint64_t)v64, v47, 0, &v151, v129, v128, v127, v126, v108, v109, v110, v111);
    v147[0] = v151;
    v147[1] = v152;
    v147[2] = v153;
    v147[3] = v154;
    v147[4] = v155;
    v147[5] = v156;
    v147[6] = v157;
    v147[7] = v158;
    v147[8] = v159;
    v148 = v160;
    nullsub_1(v147);
    v63 = (__n128 *)v147;
    if (v60)
    {
      sub_239268764((uint64_t)v147, (uint64_t)&v151, &qword_25692A8C0);
      v129.n128_u64[0] = 0;
      v128.n128_u64[0] = 0;
      v127.n128_u64[0] = 0;
      v126.n128_u64[0] = 0;
      v111.n128_u64[0] = 0;
      v110.n128_u64[0] = 0;
      v109.n128_u64[0] = 0;
      v107 = 0;
      v108.n128_u64[0] = 0;
      v106 = 1;
      v66 = 2;
      v67 = v131.n128_u64[0];
      v68 = (__n128 *)v130.n128_u64[0];
      goto LABEL_19;
    }
  }
  else
  {
    v61 = *(void **)(v4 + 72);
    v108 = v54;
    v109 = v55;
    v110 = v56;
    v111 = v57;
    v62 = v61;
    sub_2392F448C((unint64_t)v61, v47, 0, v149, v129, v128, v127, v126, v108, v109, v110, v111);
    v151 = v149[0];
    v152 = v149[1];
    v153 = v149[2];
    v154 = v149[3];
    v155 = v149[4];
    v156 = v149[5];
    v157 = v149[6];
    v158 = v149[7];
    v159 = v149[8];
    v160 = v150;
    nullsub_1(&v151);
    v63 = &v151;
  }
  sub_239268764((uint64_t)v63, (uint64_t)v149, &qword_25692A8C0);
  v129.n128_u64[0] = 0;
  v128.n128_u64[0] = 0;
  v127.n128_u64[0] = 0;
  v126.n128_u64[0] = 0;
  v111.n128_u64[0] = 0;
  v110.n128_u64[0] = 0;
  v109.n128_u64[0] = 0;
  v107 = 0;
  v108.n128_u64[0] = 0;
  v106 = 1;
LABEL_18:
  v67 = v131.n128_u64[0];
  v68 = (__n128 *)v130.n128_u64[0];
  ObjectCaptureSession.Metadata.Shot.CaptureMode.init(rawValue:)(v59);
  v66 = v151.n128_u8[0];
  sub_239268764((uint64_t)v149, (uint64_t)&v151, &qword_25692A8C0);
LABEL_19:
  v69 = v4 + v133[12];
  sub_23926059C(v69, (uint64_t)v68, &qword_256927628);
  v70 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  v71 = *(unsigned int (**)(__n128 *, uint64_t, int *))(*((_QWORD *)v70 - 1) + 48);
  if (v71(v68, 1, v70) == 1)
  {
LABEL_29:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_30;
  }
  v72 = v68[2];
  v167[0] = v68[1];
  v167[1] = v72;
  v167[2] = v68[3];
  sub_2392688AC((uint64_t)v68, type metadata accessor for PhotogrammetrySample.Camera);
  sub_23926059C(v69, (uint64_t)v23, &qword_256927628);
  if (v71(v23, 1, v70) == 1)
  {
LABEL_30:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_31;
  }
  v73 = v23[4];
  v130 = v23[5];
  v131 = v73;
  v74 = v23[6];
  v104 = v23[7];
  v105 = v74;
  sub_2392688AC((uint64_t)v23, type metadata accessor for PhotogrammetrySample.Camera);
  v75 = v125;
  sub_23926059C(v69, v125, &qword_256927628);
  if (v71((__n128 *)v75, 1, v70) == 1)
  {
LABEL_31:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_32;
  }
  v76 = v46;
  sub_239268820(v75 + v70[7], v132, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  sub_2392688AC(v75, type metadata accessor for PhotogrammetrySample.Camera);
  v77 = v124;
  sub_23926059C(v69, v124, &qword_256927628);
  if (v71((__n128 *)v77, 1, v70) == 1)
  {
LABEL_32:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_33;
  }
  v78 = *(void **)(v77 + v70[8]);
  v79 = v78;
  sub_2392688AC(v77, type metadata accessor for PhotogrammetrySample.Camera);
  v80 = v123;
  sub_23926059C(v69, v123, &qword_256927628);
  if (v71((__n128 *)v80, 1, v70) == 1)
  {
LABEL_33:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_34;
  }
  sub_239268764(v80 + v70[9], (uint64_t)v168, &qword_25692A8A0);
  sub_2392688AC(v80, type metadata accessor for PhotogrammetrySample.Camera);
  sub_23926059C(v69, v67, &qword_256927628);
  if (v71((__n128 *)v67, 1, v70) == 1)
  {
LABEL_34:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_35;
  }
  sub_239268764(v67 + v70[10], (uint64_t)v169, &qword_25692A8A0);
  sub_2392688AC(v67, type metadata accessor for PhotogrammetrySample.Camera);
  v81 = v69;
  v82 = v122;
  sub_23926059C(v81, v122, &qword_256927628);
  if (v71((__n128 *)v82, 1, v70) == 1)
  {
LABEL_35:
    sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    __break(1u);
    goto LABEL_36;
  }
  sub_239268764(v82 + v70[11], (uint64_t)v170, &qword_25692A8A0);
  sub_2392688AC(v82, type metadata accessor for PhotogrammetrySample.Camera);
  v83 = sub_2392F4324();
  v84 = sub_2392F4324();
  v85 = v121;
  sub_2392F4330(v167, v132, (uint64_t)v78, (uint64_t)v168, (uint64_t)v169, (uint64_t)v170, v83, v84, v121, v131, v130, v105, v104);
  if ((*(_BYTE *)(v116 + 8) & 1) == 0)
  {
    v86 = *(double *)v116;
    v87 = v117;
    sub_239268820(v85, v117, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    v88 = v118;
    sub_23926059C(v76, v118, &qword_2569281C0);
    sub_239268764((uint64_t)&v151, (uint64_t)v147, &qword_25692A8C0);
    *(_QWORD *)&v137 = v129.n128_u64[0];
    *((_QWORD *)&v137 + 1) = v128.n128_u64[0];
    v138 = v127.n128_u64[0];
    v139 = v126.n128_u64[0];
    v140 = v111.n128_u64[0];
    v141 = v110.n128_u64[0];
    v142 = v109.n128_u64[0];
    v143 = v108.n128_u64[0];
    v144 = v107;
    v145 = BYTE4(v106);
    v146 = v106;
    v136 = v66;
    v89 = v85;
    v90 = *(_QWORD *)(v4 + 40);
    v91 = *(_QWORD *)(v4 + 48);
    v92 = *(_QWORD *)(v4 + 56);
    v93 = *(_BYTE *)(v4 + 64);
    v94 = *(void **)(v4 + v133[16]);
    v95 = v133[23];
    v96 = v4 + v133[22];
    v97 = *(_QWORD *)v96;
    LOBYTE(v96) = *(_BYTE *)(v96 + 8);
    v134 = v97;
    v135 = v96;
    v98 = *(_QWORD *)(v4 + v95);
    v99 = v94;
    swift_bridgeObjectRetain();
    sub_2392F46B8(v87, v88, (uint64_t)v147, &v137, (char *)&v136, v90, v91, v92, v119, v86, v93, (uint64_t)v94, &v134, v98);
    result = sub_2392688AC(v89, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    v101 = v120;
    *v120 = v43;
    v102 = v114;
    v101[1] = v115;
    v101[2] = v102;
    v103 = v112;
    v101[3] = v113;
    v101[4] = v103;
    return result;
  }
LABEL_36:
  result = sub_2392688F0((uint64_t)&v151, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
  __break(1u);
  return result;
}

double sub_23926946C(uint64_t a1)
{
  double result;

  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)&result = 1;
  *(_OWORD *)(a1 + 128) = xmmword_239354430;
  *(_BYTE *)(a1 + 144) = 0;
  return result;
}

uint64_t sub_239269494(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2392694B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[2];
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 68));
  v4 = *(void **)(v1 + 80);
  if (v4)
  {
    v5 = v4;
    filteredDepthPointCloud(_:)(v11);

    v6 = v12;
    v7 = v13;
    v8 = v14;
    v9 = v11[1];
    *(_OWORD *)a1 = v11[0];
    *(_OWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 32) = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    v7 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  return v3;
}

uint64_t sub_23926954C()
{
  return MEMORY[0x24BEE1778];
}

_QWORD *initializeBufferWithCopyOfBuffer for PhotogrammetrySample(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _OWORD *v12;
  int *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  void (*v49)(_OWORD *, _QWORD, uint64_t, int *);
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v97;
  _OWORD *v98;
  unsigned int (*v99)(_OWORD *, uint64_t, int *);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (void *)a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = (void *)a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = (void *)a2[4];
    *(_QWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)a2 + 49);
    v10 = (void *)a2[9];
    v9 = (void *)a2[10];
    v11 = a3[12];
    v12 = (_OWORD *)(a1 + v11);
    v98 = (_OWORD *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v9;
    v13 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
    v97 = *((_QWORD *)v13 - 1);
    v99 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v97 + 48);
    v14 = v6;
    swift_bridgeObjectRetain();
    v15 = v7;
    v16 = v8;
    v17 = v10;
    v18 = v9;
    if (v99(v98, 1, v13))
    {
      v19 = sub_23925FB08(&qword_256927628);
      memcpy(v12, v98, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      v20 = a3;
    }
    else
    {
      *(_DWORD *)v12 = *(_DWORD *)v98;
      v22 = v98[2];
      v12[1] = v98[1];
      v12[2] = v22;
      v23 = v98[4];
      v12[3] = v98[3];
      v12[4] = v23;
      v24 = v98[6];
      v12[5] = v98[5];
      v12[6] = v24;
      v12[7] = v98[7];
      v25 = v13[7];
      v26 = (char *)v12 + v25;
      v27 = (char *)v98 + v25;
      v28 = sub_239352674();
      v29 = *(_QWORD *)(v28 - 8);
      v30 = v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 2, v28))
      {
        v31 = sub_239352680();
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 2, v28);
      }
      v20 = a3;
      v32 = v13[8];
      v33 = *(void **)((char *)v98 + v32);
      *(_QWORD *)((char *)v12 + v32) = v33;
      v34 = v13[9];
      v35 = (char *)v12 + v34;
      v36 = (char *)v98 + v34;
      v37 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
      *((_OWORD *)v35 + 3) = v37;
      v35[64] = v36[64];
      v38 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v38;
      v39 = v13[10];
      v40 = (char *)v12 + v39;
      v41 = (char *)v98 + v39;
      v40[64] = v41[64];
      v42 = *((_OWORD *)v41 + 3);
      *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
      *((_OWORD *)v40 + 3) = v42;
      v43 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v43;
      v44 = v13[11];
      v45 = (char *)v12 + v44;
      v46 = (char *)v98 + v44;
      v45[64] = v46[64];
      v47 = *((_OWORD *)v46 + 3);
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((_OWORD *)v45 + 3) = v47;
      v48 = *((_OWORD *)v46 + 1);
      *(_OWORD *)v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v48;
      v49 = *(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v97 + 56);
      v50 = v33;
      v49(v30, 0, 1, v13);
    }
    v51 = v20[13];
    v52 = v20[14];
    v53 = (char *)v4 + v51;
    v54 = (uint64_t)a2 + v51;
    v55 = *(_OWORD *)(v54 + 48);
    *((_OWORD *)v53 + 2) = *(_OWORD *)(v54 + 32);
    *((_OWORD *)v53 + 3) = v55;
    v53[128] = *(_BYTE *)(v54 + 128);
    v56 = *(_OWORD *)(v54 + 112);
    *((_OWORD *)v53 + 6) = *(_OWORD *)(v54 + 96);
    *((_OWORD *)v53 + 7) = v56;
    v57 = *(_OWORD *)(v54 + 80);
    *((_OWORD *)v53 + 4) = *(_OWORD *)(v54 + 64);
    *((_OWORD *)v53 + 5) = v57;
    v58 = *(_OWORD *)(v54 + 16);
    *(_OWORD *)v53 = *(_OWORD *)v54;
    *((_OWORD *)v53 + 1) = v58;
    v59 = (char *)v4 + v52;
    v60 = (uint64_t)a2 + v52;
    v61 = *(_OWORD *)(v60 + 48);
    *((_OWORD *)v59 + 2) = *(_OWORD *)(v60 + 32);
    *((_OWORD *)v59 + 3) = v61;
    v59[64] = *(_BYTE *)(v60 + 64);
    v62 = *(_OWORD *)(v60 + 16);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *((_OWORD *)v59 + 1) = v62;
    v63 = v20[15];
    v64 = v20[16];
    v65 = (char *)v4 + v63;
    v66 = (uint64_t)a2 + v63;
    *(_QWORD *)v65 = *(_QWORD *)v66;
    v65[8] = *(_BYTE *)(v66 + 8);
    v67 = *(void **)((char *)a2 + v64);
    *(_QWORD *)((char *)v4 + v64) = v67;
    v68 = v20[17];
    v69 = v20[18];
    v70 = (char *)v4 + v68;
    v71 = (uint64_t)a2 + v68;
    *(_QWORD *)v70 = *(_QWORD *)v71;
    v70[8] = *(_BYTE *)(v71 + 8);
    v72 = (char *)v4 + v69;
    v73 = (char *)a2 + v69;
    v74 = sub_239351FD8();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v67;
    if (v76(v73, 1, v74))
    {
      v78 = sub_23925FB08(&qword_256927018);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v79 = v20[19];
    v80 = (char *)v4 + v79;
    v81 = (char *)a2 + v79;
    v82 = sub_239352020();
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      v84 = sub_23925FB08(&qword_2569281C0);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v85 = v20[20];
    v86 = v20[21];
    v87 = (char *)v4 + v85;
    v88 = (uint64_t)a2 + v85;
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v87[8] = *(_BYTE *)(v88 + 8);
    v89 = (_QWORD *)((char *)v4 + v86);
    v90 = (uint64_t *)((char *)a2 + v86);
    v91 = v90[1];
    *v89 = *v90;
    v89[1] = v91;
    v92 = v20[22];
    v93 = v20[23];
    v94 = (char *)v4 + v92;
    v95 = (uint64_t)a2 + v92;
    *(_QWORD *)v94 = *(_QWORD *)v95;
    v94[8] = *(_BYTE *)(v95 + 8);
    *(_QWORD *)((char *)v4 + v93) = *(uint64_t *)((char *)a2 + v93);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PhotogrammetrySample(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + a2[12];
  v5 = type metadata accessor for PhotogrammetrySample.Camera(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = &v4[*(int *)(v5 + 28)];
    v7 = sub_239352674();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);

  }
  v9 = (char *)a1 + a2[18];
  v10 = sub_239351FD8();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  v12 = (char *)a1 + a2[19];
  v13 = sub_239352020();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _OWORD *v11;
  int *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  int *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  void (*v46)(_OWORD *, _QWORD, uint64_t, int *);
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(const void *, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  const void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  unsigned int (*v95)(_OWORD *, uint64_t, int *);
  _OWORD *v96;

  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  v9 = *(void **)(a2 + 72);
  v8 = *(void **)(a2 + 80);
  v10 = a3[12];
  v11 = (_OWORD *)(a1 + v10);
  v96 = (_OWORD *)(a2 + v10);
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v8;
  v12 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  v94 = *((_QWORD *)v12 - 1);
  v95 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v94 + 48);
  v13 = v5;
  swift_bridgeObjectRetain();
  v14 = v6;
  v15 = v7;
  v16 = v9;
  v17 = v8;
  if (v95(v96, 1, v12))
  {
    v18 = sub_23925FB08(&qword_256927628);
    memcpy(v11, v96, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    v19 = a3;
  }
  else
  {
    *(_DWORD *)v11 = *(_DWORD *)v96;
    v20 = v96[2];
    v11[1] = v96[1];
    v11[2] = v20;
    v21 = v96[4];
    v11[3] = v96[3];
    v11[4] = v21;
    v22 = v96[6];
    v11[5] = v96[5];
    v11[6] = v22;
    v11[7] = v96[7];
    v23 = v12[7];
    v24 = (char *)v11 + v23;
    v25 = (char *)v96 + v23;
    v26 = sub_239352674();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 2, v26))
    {
      v28 = sub_239352680();
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 2, v26);
    }
    v19 = a3;
    v29 = v12[8];
    v30 = *(void **)((char *)v96 + v29);
    *(_QWORD *)((char *)v11 + v29) = v30;
    v31 = v12[9];
    v32 = (char *)v11 + v31;
    v33 = (char *)v96 + v31;
    v34 = *((_OWORD *)v33 + 3);
    *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 3) = v34;
    v32[64] = v33[64];
    v35 = *((_OWORD *)v33 + 1);
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v35;
    v36 = v12[10];
    v37 = (char *)v11 + v36;
    v38 = (char *)v96 + v36;
    v37[64] = v38[64];
    v39 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v39;
    v40 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v40;
    v41 = v12[11];
    v42 = (char *)v11 + v41;
    v43 = (char *)v96 + v41;
    v42[64] = v43[64];
    v44 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v44;
    v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v45;
    v46 = *(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v94 + 56);
    v47 = v30;
    v46(v11, 0, 1, v12);
  }
  v48 = v19[13];
  v49 = v19[14];
  v50 = a1 + v48;
  v51 = a2 + v48;
  v52 = *(_OWORD *)(v51 + 48);
  *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
  *(_OWORD *)(v50 + 48) = v52;
  *(_BYTE *)(v50 + 128) = *(_BYTE *)(v51 + 128);
  v53 = *(_OWORD *)(v51 + 112);
  *(_OWORD *)(v50 + 96) = *(_OWORD *)(v51 + 96);
  *(_OWORD *)(v50 + 112) = v53;
  v54 = *(_OWORD *)(v51 + 80);
  *(_OWORD *)(v50 + 64) = *(_OWORD *)(v51 + 64);
  *(_OWORD *)(v50 + 80) = v54;
  v55 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_OWORD *)(v50 + 16) = v55;
  v56 = a1 + v49;
  v57 = a2 + v49;
  v58 = *(_OWORD *)(v57 + 48);
  *(_OWORD *)(v56 + 32) = *(_OWORD *)(v57 + 32);
  *(_OWORD *)(v56 + 48) = v58;
  *(_BYTE *)(v56 + 64) = *(_BYTE *)(v57 + 64);
  v59 = *(_OWORD *)(v57 + 16);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_OWORD *)(v56 + 16) = v59;
  v60 = v19[15];
  v61 = v19[16];
  v62 = a1 + v60;
  v63 = a2 + v60;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_BYTE *)(v62 + 8) = *(_BYTE *)(v63 + 8);
  v64 = *(void **)(a2 + v61);
  *(_QWORD *)(a1 + v61) = v64;
  v65 = v19[17];
  v66 = v19[18];
  v67 = a1 + v65;
  v68 = a2 + v65;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
  v69 = (void *)(a1 + v66);
  v70 = (const void *)(a2 + v66);
  v71 = sub_239351FD8();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v72 + 48);
  v74 = v64;
  if (v73(v70, 1, v71))
  {
    v75 = sub_23925FB08(&qword_256927018);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v72 + 16))(v69, v70, v71);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  v76 = v19[19];
  v77 = (void *)(a1 + v76);
  v78 = (const void *)(a2 + v76);
  v79 = sub_239352020();
  v80 = *(_QWORD *)(v79 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    v81 = sub_23925FB08(&qword_2569281C0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v80 + 16))(v77, v78, v79);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  v82 = v19[20];
  v83 = v19[21];
  v84 = a1 + v82;
  v85 = a2 + v82;
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *(_BYTE *)(v84 + 8) = *(_BYTE *)(v85 + 8);
  v86 = (_QWORD *)(a1 + v83);
  v87 = (_QWORD *)(a2 + v83);
  v88 = v87[1];
  *v86 = *v87;
  v86[1] = v88;
  v89 = v19[22];
  v90 = v19[23];
  v91 = a1 + v89;
  v92 = a2 + v89;
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *(_BYTE *)(v91 + 8) = *(_BYTE *)(v92 + 8);
  *(_QWORD *)(a1 + v90) = *(_QWORD *)(a2 + v90);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  __int128 v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t (*v27)(_OWORD *, uint64_t, int *);
  int v28;
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  size_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  void (*v69)(_OWORD *, _QWORD, uint64_t, int *);
  id v70;
  uint64_t v71;
  void *v72;
  void *v73;
  id v74;
  uint64_t v75;
  char *v76;
  char *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(void *, uint64_t, uint64_t);
  int v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(void *, uint64_t, uint64_t);
  int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v150;
  char *__dst;
  void *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 32);
  v13 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v14 = v13;

  v15 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  *(_OWORD *)(a1 + 40) = v15;
  v16 = *(void **)(a1 + 72);
  v17 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v17;
  v18 = v17;

  v19 = *(void **)(a1 + 80);
  v20 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v20;
  v21 = v20;

  v22 = a3[12];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  v25 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  v26 = *((_QWORD *)v25 - 1);
  v27 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_2392688AC((uint64_t)v23, type metadata accessor for PhotogrammetrySample.Camera);
      goto LABEL_7;
    }
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[1] = v24[1];
    v23[2] = v24[2];
    v23[3] = v24[3];
    v23[4] = v24[4];
    v23[5] = v24[5];
    v23[6] = v24[6];
    v23[7] = v24[7];
    v41 = v25[7];
    v42 = (char *)v23 + v41;
    v43 = (char *)v24 + v41;
    v44 = sub_239352674();
    v150 = *(_QWORD *)(v44 - 8);
    v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v150 + 48);
    __dsta = v42;
    LODWORD(v42) = v45(v42, 2, v44);
    v46 = v45(v43, 2, v44);
    if ((_DWORD)v42)
    {
      if (!v46)
      {
        (*(void (**)(void *, char *, uint64_t))(v150 + 16))(__dsta, v43, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v150 + 56))(__dsta, 0, 2, v44);
        goto LABEL_18;
      }
      v47 = *(_QWORD *)(*(_QWORD *)(sub_239352680() - 8) + 64);
      v48 = __dsta;
    }
    else
    {
      if (!v46)
      {
        (*(void (**)(void *, char *, uint64_t))(v150 + 24))(__dsta, v43, v44);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v150 + 8))(__dsta, v44);
      v47 = *(_QWORD *)(*(_QWORD *)(sub_239352680() - 8) + 64);
      v48 = __dsta;
    }
    memcpy(v48, v43, v47);
LABEL_18:
    v71 = v25[8];
    v72 = *(void **)((char *)v23 + v71);
    v73 = *(void **)((char *)v24 + v71);
    *(_QWORD *)((char *)v23 + v71) = v73;
    v74 = v73;

    v75 = v25[9];
    v76 = (char *)v23 + v75;
    v77 = (char *)v24 + v75;
    *(_OWORD *)v76 = *(_OWORD *)v77;
    v78 = *((_OWORD *)v77 + 1);
    v79 = *((_OWORD *)v77 + 2);
    v80 = *((_OWORD *)v77 + 3);
    v76[64] = v77[64];
    *((_OWORD *)v76 + 2) = v79;
    *((_OWORD *)v76 + 3) = v80;
    *((_OWORD *)v76 + 1) = v78;
    v81 = v25[10];
    v82 = (char *)v23 + v81;
    v83 = (char *)v24 + v81;
    *(_OWORD *)v82 = *(_OWORD *)v83;
    v84 = *((_OWORD *)v83 + 1);
    v85 = *((_OWORD *)v83 + 2);
    v86 = *((_OWORD *)v83 + 3);
    v82[64] = v83[64];
    *((_OWORD *)v82 + 2) = v85;
    *((_OWORD *)v82 + 3) = v86;
    *((_OWORD *)v82 + 1) = v84;
    v87 = v25[11];
    v88 = (char *)v23 + v87;
    v89 = (char *)v24 + v87;
    *(_OWORD *)v88 = *(_OWORD *)v89;
    v90 = *((_OWORD *)v89 + 1);
    v91 = *((_OWORD *)v89 + 2);
    v92 = *((_OWORD *)v89 + 3);
    v88[64] = v89[64];
    *((_OWORD *)v88 + 2) = v91;
    *((_OWORD *)v88 + 3) = v92;
    *((_OWORD *)v88 + 1) = v90;
    goto LABEL_19;
  }
  if (v29)
  {
LABEL_7:
    v40 = sub_23925FB08(&qword_256927628);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v30 = v24[1];
  v31 = v24[3];
  v23[2] = v24[2];
  v23[3] = v31;
  v23[1] = v30;
  v32 = v24[4];
  v33 = v24[5];
  v34 = v24[7];
  v23[6] = v24[6];
  v23[7] = v34;
  v23[4] = v32;
  v23[5] = v33;
  v35 = v25[7];
  __dst = (char *)v23 + v35;
  v36 = (char *)v24 + v35;
  v37 = sub_239352674();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 2, v37))
  {
    v39 = sub_239352680();
    memcpy(__dst, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 2, v37);
  }
  v49 = v25[8];
  v50 = *(void **)((char *)v24 + v49);
  *(_QWORD *)((char *)v23 + v49) = v50;
  v51 = v25[9];
  v52 = (char *)v23 + v51;
  v53 = (char *)v24 + v51;
  *(_OWORD *)v52 = *(_OWORD *)v53;
  v54 = *((_OWORD *)v53 + 1);
  v55 = *((_OWORD *)v53 + 2);
  v56 = *((_OWORD *)v53 + 3);
  v52[64] = v53[64];
  *((_OWORD *)v52 + 2) = v55;
  *((_OWORD *)v52 + 3) = v56;
  *((_OWORD *)v52 + 1) = v54;
  v57 = v25[10];
  v58 = (char *)v23 + v57;
  v59 = (char *)v24 + v57;
  *(_OWORD *)v58 = *(_OWORD *)v59;
  v60 = *((_OWORD *)v59 + 1);
  v61 = *((_OWORD *)v59 + 2);
  v62 = *((_OWORD *)v59 + 3);
  v58[64] = v59[64];
  *((_OWORD *)v58 + 2) = v61;
  *((_OWORD *)v58 + 3) = v62;
  *((_OWORD *)v58 + 1) = v60;
  v63 = v25[11];
  v64 = (char *)v23 + v63;
  v65 = (char *)v24 + v63;
  *(_OWORD *)v64 = *(_OWORD *)v65;
  v66 = *((_OWORD *)v65 + 1);
  v67 = *((_OWORD *)v65 + 2);
  v68 = *((_OWORD *)v65 + 3);
  v64[64] = v65[64];
  *((_OWORD *)v64 + 2) = v67;
  *((_OWORD *)v64 + 3) = v68;
  *((_OWORD *)v64 + 1) = v66;
  v69 = *(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v26 + 56);
  v70 = v50;
  v69(v23, 0, 1, v25);
LABEL_19:
  v93 = a3[13];
  v94 = a1 + v93;
  v95 = a2 + v93;
  *(_OWORD *)v94 = *(_OWORD *)v95;
  v96 = *(_OWORD *)(v95 + 16);
  v97 = *(_OWORD *)(v95 + 32);
  v98 = *(_OWORD *)(v95 + 64);
  *(_OWORD *)(v94 + 48) = *(_OWORD *)(v95 + 48);
  *(_OWORD *)(v94 + 64) = v98;
  *(_OWORD *)(v94 + 16) = v96;
  *(_OWORD *)(v94 + 32) = v97;
  v99 = *(_OWORD *)(v95 + 80);
  v100 = *(_OWORD *)(v95 + 96);
  v101 = *(_OWORD *)(v95 + 112);
  *(_BYTE *)(v94 + 128) = *(_BYTE *)(v95 + 128);
  *(_OWORD *)(v94 + 96) = v100;
  *(_OWORD *)(v94 + 112) = v101;
  *(_OWORD *)(v94 + 80) = v99;
  v102 = a3[14];
  v103 = a1 + v102;
  v104 = a2 + v102;
  *(_OWORD *)v103 = *(_OWORD *)v104;
  v105 = *(_OWORD *)(v104 + 16);
  v106 = *(_OWORD *)(v104 + 32);
  v107 = *(_OWORD *)(v104 + 48);
  *(_BYTE *)(v103 + 64) = *(_BYTE *)(v104 + 64);
  *(_OWORD *)(v103 + 32) = v106;
  *(_OWORD *)(v103 + 48) = v107;
  *(_OWORD *)(v103 + 16) = v105;
  v108 = a3[15];
  v109 = a1 + v108;
  v110 = (uint64_t *)(a2 + v108);
  v111 = *v110;
  *(_BYTE *)(v109 + 8) = *((_BYTE *)v110 + 8);
  *(_QWORD *)v109 = v111;
  v112 = a3[16];
  v113 = *(void **)(a1 + v112);
  v114 = *(void **)(a2 + v112);
  *(_QWORD *)(a1 + v112) = v114;
  v115 = v114;

  v116 = a3[17];
  v117 = a1 + v116;
  v118 = (uint64_t *)(a2 + v116);
  v119 = *v118;
  *(_BYTE *)(v117 + 8) = *((_BYTE *)v118 + 8);
  *(_QWORD *)v117 = v119;
  v120 = a3[18];
  v121 = (void *)(a1 + v120);
  v122 = (void *)(a2 + v120);
  v123 = sub_239351FD8();
  v124 = *(_QWORD *)(v123 - 8);
  v125 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v124 + 48);
  v126 = v125(v121, 1, v123);
  v127 = v125(v122, 1, v123);
  if (v126)
  {
    if (!v127)
    {
      (*(void (**)(void *, void *, uint64_t))(v124 + 16))(v121, v122, v123);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v127)
  {
    (*(void (**)(void *, uint64_t))(v124 + 8))(v121, v123);
LABEL_24:
    v128 = sub_23925FB08(&qword_256927018);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v124 + 24))(v121, v122, v123);
LABEL_25:
  v129 = a3[19];
  v130 = (void *)(a1 + v129);
  v131 = (void *)(a2 + v129);
  v132 = sub_239352020();
  v133 = *(_QWORD *)(v132 - 8);
  v134 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v133 + 48);
  v135 = v134(v130, 1, v132);
  v136 = v134(v131, 1, v132);
  if (!v135)
  {
    if (!v136)
    {
      (*(void (**)(void *, void *, uint64_t))(v133 + 24))(v130, v131, v132);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v133 + 8))(v130, v132);
    goto LABEL_30;
  }
  if (v136)
  {
LABEL_30:
    v137 = sub_23925FB08(&qword_2569281C0);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v133 + 16))(v130, v131, v132);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
LABEL_31:
  v138 = a3[20];
  v139 = a1 + v138;
  v140 = (uint64_t *)(a2 + v138);
  v141 = *v140;
  *(_BYTE *)(v139 + 8) = *((_BYTE *)v140 + 8);
  *(_QWORD *)v139 = v141;
  v142 = a3[21];
  v143 = (_QWORD *)(a1 + v142);
  v144 = (_QWORD *)(a2 + v142);
  *v143 = *v144;
  v143[1] = v144[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v145 = a3[22];
  v146 = a1 + v145;
  v147 = (uint64_t *)(a2 + v145);
  v148 = *v147;
  *(_BYTE *)(v146 + 8) = *((_BYTE *)v147 + 8);
  *(_QWORD *)v146 = v148;
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  v6 = a3[12];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v9 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_23925FB08(&qword_256927628);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v12 = v8[2];
    v7[1] = v8[1];
    v7[2] = v12;
    v13 = v8[4];
    v7[3] = v8[3];
    v7[4] = v13;
    v14 = v8[6];
    v7[5] = v8[5];
    v7[6] = v14;
    v7[7] = v8[7];
    v15 = v9[7];
    __dst = (char *)v7 + v15;
    v16 = (char *)v8 + v15;
    v17 = sub_239352674();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 2, v17))
    {
      v19 = sub_239352680();
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 2, v17);
    }
    *(_QWORD *)((char *)v7 + v9[8]) = *(_QWORD *)((char *)v8 + v9[8]);
    v20 = v9[9];
    v21 = (char *)v7 + v20;
    v22 = (char *)v8 + v20;
    v23 = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 3) = v23;
    v21[64] = v22[64];
    v24 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v24;
    v25 = v9[10];
    v26 = (char *)v7 + v25;
    v27 = (char *)v8 + v25;
    v26[64] = v27[64];
    v28 = *((_OWORD *)v27 + 3);
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    *((_OWORD *)v26 + 3) = v28;
    v29 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v29;
    v30 = v9[11];
    v31 = (char *)v7 + v30;
    v32 = (char *)v8 + v30;
    v31[64] = v32[64];
    v33 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v33;
    v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v35 = a3[13];
  v36 = a3[14];
  v37 = a1 + v35;
  v38 = a2 + v35;
  v39 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v39;
  *(_BYTE *)(v37 + 128) = *(_BYTE *)(v38 + 128);
  v40 = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 112) = v40;
  v41 = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 80) = v41;
  v42 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v42;
  v43 = a1 + v36;
  v44 = a2 + v36;
  v45 = *(_OWORD *)(v44 + 48);
  *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
  *(_OWORD *)(v43 + 48) = v45;
  *(_BYTE *)(v43 + 64) = *(_BYTE *)(v44 + 64);
  v46 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v46;
  v47 = a3[15];
  v48 = a3[16];
  v49 = a1 + v47;
  v50 = a2 + v47;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  *(_QWORD *)(a1 + v48) = *(_QWORD *)(a2 + v48);
  v51 = a3[17];
  v52 = a3[18];
  v53 = a1 + v51;
  v54 = a2 + v51;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  v55 = (void *)(a1 + v52);
  v56 = (const void *)(a2 + v52);
  v57 = sub_239351FD8();
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = sub_23925FB08(&qword_256927018);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v58 + 32))(v55, v56, v57);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v60 = a3[19];
  v61 = (void *)(a1 + v60);
  v62 = (const void *)(a2 + v60);
  v63 = sub_239352020();
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    v65 = sub_23925FB08(&qword_2569281C0);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v61, v62, v63);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  v66 = a3[20];
  v67 = a3[21];
  v68 = a1 + v66;
  v69 = a2 + v66;
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *(_BYTE *)(v68 + 8) = *(_BYTE *)(v69 + 8);
  *(_OWORD *)(a1 + v67) = *(_OWORD *)(a2 + v67);
  v70 = a3[22];
  v71 = a3[23];
  v72 = a1 + v70;
  v73 = a2 + v70;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_BYTE *)(v72 + 8) = *(_BYTE *)(v73 + 8);
  *(_QWORD *)(a1 + v71) = *(_QWORD *)(a2 + v71);
  return a1;
}

uint64_t assignWithTake for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_OWORD *, uint64_t, int *);
  int v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(void *, uint64_t, uint64_t);
  int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(void *, uint64_t, uint64_t);
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v123;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  v10 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v11 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  v12 = a3[12];
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_2392688AC((uint64_t)v13, type metadata accessor for PhotogrammetrySample.Camera);
      goto LABEL_7;
    }
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v29 = v14[2];
    v13[1] = v14[1];
    v13[2] = v29;
    v30 = v14[4];
    v13[3] = v14[3];
    v13[4] = v30;
    v31 = v14[6];
    v13[5] = v14[5];
    v13[6] = v31;
    v13[7] = v14[7];
    v32 = v15[7];
    v33 = (char *)v13 + v32;
    v34 = (char *)v14 + v32;
    v35 = sub_239352674();
    v123 = *(_QWORD *)(v35 - 8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 48);
    __dsta = v33;
    LODWORD(v33) = v36(v33, 2, v35);
    v37 = v36(v34, 2, v35);
    if ((_DWORD)v33)
    {
      if (!v37)
      {
        (*(void (**)(void *, char *, uint64_t))(v123 + 32))(__dsta, v34, v35);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(__dsta, 0, 2, v35);
        goto LABEL_18;
      }
      v38 = *(_QWORD *)(*(_QWORD *)(sub_239352680() - 8) + 64);
      v39 = __dsta;
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(void *, char *, uint64_t))(v123 + 40))(__dsta, v34, v35);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v123 + 8))(__dsta, v35);
      v38 = *(_QWORD *)(*(_QWORD *)(sub_239352680() - 8) + 64);
      v39 = __dsta;
    }
    memcpy(v39, v34, v38);
LABEL_18:
    v55 = v15[8];
    v56 = *(void **)((char *)v13 + v55);
    *(_QWORD *)((char *)v13 + v55) = *(_QWORD *)((char *)v14 + v55);

    v57 = v15[9];
    v58 = (char *)v13 + v57;
    v59 = (char *)v14 + v57;
    v60 = *((_OWORD *)v59 + 3);
    *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
    *((_OWORD *)v58 + 3) = v60;
    v58[64] = v59[64];
    v61 = *((_OWORD *)v59 + 1);
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v61;
    v62 = v15[10];
    v63 = (char *)v13 + v62;
    v64 = (char *)v14 + v62;
    v65 = *((_OWORD *)v64 + 3);
    *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
    *((_OWORD *)v63 + 3) = v65;
    v63[64] = v64[64];
    v66 = *((_OWORD *)v64 + 1);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v66;
    v67 = v15[11];
    v68 = (char *)v13 + v67;
    v69 = (char *)v14 + v67;
    v70 = *((_OWORD *)v69 + 3);
    *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
    *((_OWORD *)v68 + 3) = v70;
    v68[64] = v69[64];
    v71 = *((_OWORD *)v69 + 1);
    *(_OWORD *)v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v71;
    goto LABEL_19;
  }
  if (v19)
  {
LABEL_7:
    v28 = sub_23925FB08(&qword_256927628);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v20 = v14[2];
  v13[1] = v14[1];
  v13[2] = v20;
  v21 = v14[4];
  v13[3] = v14[3];
  v13[4] = v21;
  v22 = v14[6];
  v13[5] = v14[5];
  v13[6] = v22;
  v13[7] = v14[7];
  v23 = v15[7];
  __dst = (char *)v13 + v23;
  v24 = (char *)v14 + v23;
  v25 = sub_239352674();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 2, v25))
  {
    v27 = sub_239352680();
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(__dst, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 2, v25);
  }
  *(_QWORD *)((char *)v13 + v15[8]) = *(_QWORD *)((char *)v14 + v15[8]);
  v40 = v15[9];
  v41 = (char *)v13 + v40;
  v42 = (char *)v14 + v40;
  v43 = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 3) = v43;
  v41[64] = v42[64];
  v44 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v44;
  v45 = v15[10];
  v46 = (char *)v13 + v45;
  v47 = (char *)v14 + v45;
  v46[64] = v47[64];
  v48 = *((_OWORD *)v47 + 3);
  *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
  *((_OWORD *)v46 + 3) = v48;
  v49 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v49;
  v50 = v15[11];
  v51 = (char *)v13 + v50;
  v52 = (char *)v14 + v50;
  v51[64] = v52[64];
  v53 = *((_OWORD *)v52 + 3);
  *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
  *((_OWORD *)v51 + 3) = v53;
  v54 = *((_OWORD *)v52 + 1);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v54;
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_19:
  v72 = a3[13];
  v73 = a3[14];
  v74 = a1 + v72;
  v75 = a2 + v72;
  v76 = *(_OWORD *)(v75 + 48);
  *(_OWORD *)(v74 + 32) = *(_OWORD *)(v75 + 32);
  *(_OWORD *)(v74 + 48) = v76;
  *(_BYTE *)(v74 + 128) = *(_BYTE *)(v75 + 128);
  v77 = *(_OWORD *)(v75 + 112);
  *(_OWORD *)(v74 + 96) = *(_OWORD *)(v75 + 96);
  *(_OWORD *)(v74 + 112) = v77;
  v78 = *(_OWORD *)(v75 + 80);
  *(_OWORD *)(v74 + 64) = *(_OWORD *)(v75 + 64);
  *(_OWORD *)(v74 + 80) = v78;
  v79 = *(_OWORD *)(v75 + 16);
  *(_OWORD *)v74 = *(_OWORD *)v75;
  *(_OWORD *)(v74 + 16) = v79;
  v80 = a1 + v73;
  v81 = a2 + v73;
  v82 = *(_OWORD *)(v81 + 48);
  *(_OWORD *)(v80 + 32) = *(_OWORD *)(v81 + 32);
  *(_OWORD *)(v80 + 48) = v82;
  *(_BYTE *)(v80 + 64) = *(_BYTE *)(v81 + 64);
  v83 = *(_OWORD *)(v81 + 16);
  *(_OWORD *)v80 = *(_OWORD *)v81;
  *(_OWORD *)(v80 + 16) = v83;
  v84 = a3[15];
  v85 = a3[16];
  v86 = a1 + v84;
  v87 = a2 + v84;
  *(_QWORD *)v86 = *(_QWORD *)v87;
  *(_BYTE *)(v86 + 8) = *(_BYTE *)(v87 + 8);
  v88 = *(void **)(a1 + v85);
  *(_QWORD *)(a1 + v85) = *(_QWORD *)(a2 + v85);

  v89 = a3[17];
  v90 = a3[18];
  v91 = a1 + v89;
  v92 = a2 + v89;
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *(_BYTE *)(v91 + 8) = *(_BYTE *)(v92 + 8);
  v93 = (void *)(a1 + v90);
  v94 = (void *)(a2 + v90);
  v95 = sub_239351FD8();
  v96 = *(_QWORD *)(v95 - 8);
  v97 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v96 + 48);
  v98 = v97(v93, 1, v95);
  v99 = v97(v94, 1, v95);
  if (v98)
  {
    if (!v99)
    {
      (*(void (**)(void *, void *, uint64_t))(v96 + 32))(v93, v94, v95);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v99)
  {
    (*(void (**)(void *, uint64_t))(v96 + 8))(v93, v95);
LABEL_24:
    v100 = sub_23925FB08(&qword_256927018);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v96 + 40))(v93, v94, v95);
LABEL_25:
  v101 = a3[19];
  v102 = (void *)(a1 + v101);
  v103 = (void *)(a2 + v101);
  v104 = sub_239352020();
  v105 = *(_QWORD *)(v104 - 8);
  v106 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v105 + 48);
  v107 = v106(v102, 1, v104);
  v108 = v106(v103, 1, v104);
  if (!v107)
  {
    if (!v108)
    {
      (*(void (**)(void *, void *, uint64_t))(v105 + 40))(v102, v103, v104);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v105 + 8))(v102, v104);
    goto LABEL_30;
  }
  if (v108)
  {
LABEL_30:
    v109 = sub_23925FB08(&qword_2569281C0);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v105 + 32))(v102, v103, v104);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
LABEL_31:
  v110 = a3[20];
  v111 = a3[21];
  v112 = a1 + v110;
  v113 = a2 + v110;
  *(_QWORD *)v112 = *(_QWORD *)v113;
  *(_BYTE *)(v112 + 8) = *(_BYTE *)(v113 + 8);
  v114 = (_QWORD *)(a1 + v111);
  v115 = (uint64_t *)(a2 + v111);
  v117 = *v115;
  v116 = v115[1];
  *v114 = v117;
  v114[1] = v116;
  swift_bridgeObjectRelease();
  v118 = a3[22];
  v119 = a3[23];
  v120 = a1 + v118;
  v121 = a2 + v118;
  *(_QWORD *)v120 = *(_QWORD *)v121;
  *(_BYTE *)(v120 + 8) = *(_BYTE *)(v121 + 8);
  *(_QWORD *)(a1 + v119) = *(_QWORD *)(a2 + v119);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySample()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23926B19C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23925FB08(&qword_256927628);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[12];
    }
    else
    {
      v12 = sub_23925FB08(&qword_256927018);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[18];
      }
      else
      {
        v10 = sub_23925FB08(&qword_2569281C0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[19];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySample()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23926B278(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23925FB08(&qword_256927628);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[12];
    }
    else
    {
      v12 = sub_23925FB08(&qword_256927018);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[18];
      }
      else
      {
        v10 = sub_23925FB08(&qword_2569281C0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[19];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23926B344()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23926B494(319, &qword_256927690, (void (*)(uint64_t))type metadata accessor for PhotogrammetrySample.Camera);
  if (v0 <= 0x3F)
  {
    sub_23926B494(319, &qword_256927698, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_23926B494(319, qword_2569276A0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23926B494(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2393526A4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PhotogrammetrySample.Camera(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  id v34;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v7;
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v8;
    v9 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = a3[7];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    v13 = sub_239352674();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    {
      v15 = sub_239352680();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
    }
    v17 = a3[8];
    v18 = a3[9];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)v4 + v17) = v19;
    v20 = (char *)v4 + v18;
    v21 = (uint64_t)a2 + v18;
    v20[64] = *(_BYTE *)(v21 + 64);
    v22 = *(_OWORD *)(v21 + 48);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
    *((_OWORD *)v20 + 3) = v22;
    v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v23;
    v24 = a3[10];
    v25 = a3[11];
    v26 = (char *)v4 + v24;
    v27 = (uint64_t)a2 + v24;
    v26[64] = *(_BYTE *)(v27 + 64);
    v28 = *(_OWORD *)(v27 + 48);
    *((_OWORD *)v26 + 2) = *(_OWORD *)(v27 + 32);
    *((_OWORD *)v26 + 3) = v28;
    v29 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v29;
    v30 = (char *)v4 + v25;
    v31 = (uint64_t)a2 + v25;
    v30[64] = *(_BYTE *)(v31 + 64);
    v32 = *(_OWORD *)(v31 + 48);
    *((_OWORD *)v30 + 2) = *(_OWORD *)(v31 + 32);
    *((_OWORD *)v30 + 3) = v32;
    v33 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v33;
    v34 = v19;
  }
  return v4;
}

void destroy for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_239352674();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

uint64_t initializeWithCopy for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  id v32;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    v14 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  v15 = a3[8];
  v16 = a3[9];
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_BYTE *)(v18 + 64) = *(_BYTE *)(v19 + 64);
  v20 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  v22 = a3[10];
  v23 = a3[11];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)(v24 + 64) = *(_BYTE *)(v25 + 64);
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  v28 = a1 + v23;
  v29 = a2 + v23;
  *(_BYTE *)(v28 + 64) = *(_BYTE *)(v29 + 64);
  v30 = *(_OWORD *)(v29 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_OWORD *)(v28 + 48) = v30;
  v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v31;
  v32 = v17;
  return a1;
}

uint64_t assignWithCopy for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_239352674();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_239352680();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  v15 = a3[8];
  v16 = *(void **)(a1 + v15);
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = v17;

  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v22 = *(_OWORD *)(v21 + 16);
  v23 = *(_OWORD *)(v21 + 32);
  v24 = *(_OWORD *)(v21 + 48);
  *(_BYTE *)(v20 + 64) = *(_BYTE *)(v21 + 64);
  *(_OWORD *)(v20 + 32) = v23;
  *(_OWORD *)(v20 + 48) = v24;
  *(_OWORD *)(v20 + 16) = v22;
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = *(_OWORD *)(v27 + 16);
  v29 = *(_OWORD *)(v27 + 32);
  v30 = *(_OWORD *)(v27 + 48);
  *(_BYTE *)(v26 + 64) = *(_BYTE *)(v27 + 64);
  *(_OWORD *)(v26 + 32) = v29;
  *(_OWORD *)(v26 + 48) = v30;
  *(_OWORD *)(v26 + 16) = v28;
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  v34 = *(_OWORD *)(v33 + 16);
  v35 = *(_OWORD *)(v33 + 32);
  v36 = *(_OWORD *)(v33 + 48);
  *(_BYTE *)(v32 + 64) = *(_BYTE *)(v33 + 64);
  *(_OWORD *)(v32 + 32) = v35;
  *(_OWORD *)(v32 + 48) = v36;
  *(_OWORD *)(v32 + 16) = v34;
  return a1;
}

uint64_t initializeWithTake for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    v14 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  v15 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)(v16 + 64) = *(_BYTE *)(v17 + 64);
  v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  v20 = a3[10];
  v21 = a3[11];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_BYTE *)(v22 + 64) = *(_BYTE *)(v23 + 64);
  v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v25;
  v26 = a1 + v21;
  v27 = a2 + v21;
  *(_BYTE *)(v26 + 64) = *(_BYTE *)(v27 + 64);
  v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v29;
  return a1;
}

uint64_t assignWithTake for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = a3[7];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 2, v12);
  v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  v18 = a3[8];
  v19 = *(void **)(a1 + v18);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);

  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_BYTE *)(v22 + 64) = *(_BYTE *)(v23 + 64);
  v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v25;
  v26 = a1 + v21;
  v27 = a2 + v21;
  *(_BYTE *)(v26 + 64) = *(_BYTE *)(v27 + 64);
  v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v29;
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = (__int128 *)(a2 + v30);
  v33 = *v32;
  v34 = v32[1];
  v35 = v32[2];
  v36 = v32[3];
  *(_BYTE *)(v31 + 64) = *((_BYTE *)v32 + 64);
  *(_OWORD *)(v31 + 32) = v35;
  *(_OWORD *)(v31 + 48) = v36;
  *(_OWORD *)v31 = v33;
  *(_OWORD *)(v31 + 16) = v34;
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySample.Camera()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23926BD38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_239352680();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySample.Camera()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23926BDD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_239352680();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
  return result;
}

uint64_t sub_23926BE4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352680();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithCopy for PhotogrammetrySample.Object(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySample.Object(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySample.Object(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 128) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySample.Object()
{
  return &type metadata for PhotogrammetrySample.Object;
}

ValueMetadata *type metadata accessor for PhotogrammetrySample.Scene()
{
  return &type metadata for PhotogrammetrySample.Scene;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
  sub_239263BFC(a1, &qword_25692B600);
}

__n128 sub_23926BFB4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MeshBounds(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MeshBounds(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMAcceleration(uint64_t a1)
{
  sub_239263BFC(a1, (unint64_t *)&unk_25692B5F0);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_239263BFC(a1, (unint64_t *)&unk_25692C120);
}

int64_t sub_23926C03C@<X0>(__CVBuffer *a1@<X0>, int64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int64_t Width;
  int64_t result;
  int64_t BytesPerRow;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int64_t v18;

  Width = CVPixelBufferGetWidth(a1);
  result = CVPixelBufferGetHeight(a1);
  if ((a3 | a2) < 0 || Width <= a2 || result <= a3)
  {
    __break(1u);
    goto LABEL_12;
  }
  BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  CVPixelBufferLockBaseAddress(a1, 1uLL);
  result = (int64_t)CVPixelBufferGetBaseAddress(a1);
  if (result)
  {
    v13 = a3 * BytesPerRow;
    if ((unsigned __int128)(a3 * (__int128)BytesPerRow) >> 64 == (a3 * BytesPerRow) >> 63)
    {
      v14 = *(_QWORD *)(a4 - 8);
      v15 = *(_QWORD *)(v14 + 64);
      if (v15)
      {
        if (v13 == 0x8000000000000000 && v15 == -1)
          goto LABEL_15;
        v16 = v13 / v15;
        v17 = __OFADD__(a2, v16);
        v18 = a2 + v16;
        if (!v17)
        {
          (*(void (**)(uint64_t, int64_t, uint64_t))(v14 + 16))(a5, result + *(_QWORD *)(v14 + 72) * v18, a4);
          return CVPixelBufferUnlockBaseAddress(a1, 1uLL);
        }
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_23926C138(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
}

BOOL sub_23926C14C(__CVBuffer *a1, __CVBuffer *a2, __CVBuffer *a3, uint64_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  float32x4_t v37;
  uint64_t v38;
  uint64_t v39;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  double v45;
  uint64_t v46;

  v9 = v8;
  v43 = a7;
  v44 = a8;
  v41 = a5;
  v42 = a6;
  v14 = sub_2393520B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v41 - v19;
  v22 = *(double *)v9;
  v21 = *(double *)(v9 + 8);
  v23 = sub_2392DE67C(a1, a2, a3, a4, 1, v41, v42, v43, v44, *(double *)v9, v21);
  v25 = v24;
  LOBYTE(a3) = v26;
  *(_QWORD *)(v9 + 16) = v23;
  *(_QWORD *)(v9 + 24) = v24;
  *(_BYTE *)(v9 + 32) = v26 & 1;
  v27 = sub_239275A60();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  if ((a3 & 1) != 0)
  {
    v28(v18, v27, v14);
    v29 = sub_239352098();
    v30 = sub_23935256C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v46 = v32;
      *(_DWORD *)v31 = 136380675;
      v45 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000043, 0x800000023935AA70, &v46));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v29, v30, "ObjectCaptureSession.%{private}s: Failed to map image point to world point!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v32, -1, -1);
      MEMORY[0x23B83BC04](v31, -1, -1);
    }

    v33 = *(void (**)(char *, uint64_t))(v15 + 8);
    v34 = v18;
    goto LABEL_8;
  }
  v28(v20, v27, v14);
  v35 = sub_239352098();
  v36 = sub_239352578();
  if (!os_log_type_enabled(v35, v36))
  {

    v33 = *(void (**)(char *, uint64_t))(v15 + 8);
    v34 = v20;
LABEL_8:
    v33(v34, v14);
    return (*(_BYTE *)(v9 + 32) & 1) == 0;
  }
  v37.i64[0] = v23;
  v37.i64[1] = v25;
  v44 = v37;
  v38 = swift_slowAlloc();
  v39 = swift_slowAlloc();
  v46 = v39;
  *(_DWORD *)v38 = 136381955;
  v43.i64[0] = v14;
  v45 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000043, 0x800000023935AA70, &v46));
  sub_2393526B0();
  *(_WORD *)(v38 + 12) = 2050;
  v45 = *(float *)&v23;
  sub_2393526B0();
  *(_WORD *)(v38 + 22) = 2050;
  v45 = v44.f32[1];
  sub_2393526B0();
  *(_WORD *)(v38 + 32) = 2050;
  v45 = v44.f32[2];
  sub_2393526B0();
  *(_WORD *)(v38 + 42) = 2050;
  v45 = v22;
  sub_2393526B0();
  *(_WORD *)(v38 + 52) = 2050;
  v45 = v21;
  sub_2393526B0();
  _os_log_impl(&dword_23925B000, v35, v36, "ObjectCaptureSession.%{private}s: Successfully computed world point: x = %{public}f, y = %{public}f, z = %{public}f, from tap image point: u = %{public}f, v = %{public}f", (uint8_t *)v38, 0x3Eu);
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v39, -1, -1);
  MEMORY[0x23B83BC04](v38, -1, -1);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v43.i64[0]);
  return (*(_BYTE *)(v9 + 32) & 1) == 0;
}

__n128 initializeWithCopy for TapPosition(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TapPosition(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TapPosition(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TapPosition()
{
  return &type metadata for TapPosition;
}

void type metadata accessor for CGPoint()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_25692B610)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_25692B610);
  }
}

uint64_t sub_23926C634()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t result;

  sub_23925FB08(&qword_2569278A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_239354680;
  *(_QWORD *)(inited + 32) = 1667851624;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(_QWORD *)(inited + 48) = 6778986;
  *(_QWORD *)(inited + 56) = 0xE300000000000000;
  *(_QWORD *)(inited + 64) = 1734701162;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  *(_QWORD *)(inited + 80) = 6778480;
  *(_QWORD *)(inited + 88) = 0xE300000000000000;
  v1 = sub_23926ECD0(inited);
  swift_setDeallocating();
  result = swift_arrayDestroy();
  qword_25692FD60 = v1;
  return result;
}

uint64_t sub_23926C6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t inited;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v36 = sub_239351F3C();
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_2393520B0();
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_239351DF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23925FB08(&qword_256927018);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - v13;
  sub_23925FB08(&qword_2569277B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_239354060;
  v16 = (void *)*MEMORY[0x24BDBCBF0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBF0];
  v17 = v16;
  sub_23926EE70(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  v18 = a1;
  sub_239351E94();
  swift_bridgeObjectRelease();
  sub_239351DEC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v42;
  v21 = v39;
  v20 = v40;
  sub_23926059C((uint64_t)v14, (uint64_t)v12, &qword_256927018);
  v22 = sub_239351FD8();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
  {
    sub_23926F0B0((uint64_t)v12);
    v24 = sub_239275AB0();
    v26 = v37;
    v25 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v24, v19);
    v27 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v18, v36);
    v28 = sub_239352098();
    v29 = sub_23935256C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_DWORD *)v30 = 141558275;
      v43 = 1752392040;
      v44 = v31;
      sub_2393526B0();
      *(_WORD *)(v30 + 12) = 2081;
      v32 = sub_239351F30();
      v43 = sub_23925F3EC(v32, v33, &v44);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v36);
      _os_log_impl(&dword_23925B000, v28, v29, "Image Helper: Creation data is nil for: \"%{private,mask.hash}s\".", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v31, -1, -1);
      MEMORY[0x23B83BC04](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v42);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v27);

      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v19);
    }
    sub_239351F84();
    return sub_23926F0B0((uint64_t)v14);
  }
  else
  {
    sub_23926F0B0((uint64_t)v14);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v41, v12, v22);
  }
}

void sub_23926CB28(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const __CFURL *v43;
  CGImageSource *v44;
  uint64_t v45;
  void *v46;
  __CVBuffer *v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  __CVBuffer *v56;
  id v57;
  unint64_t v58;
  __CVBuffer *v59;
  NSObject *v60;
  os_log_type_t v61;
  BOOL v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  unint64_t v72;
  char *v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint8_t *v87;
  char *v88;
  id v89;
  uint64_t v90;
  char *v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint8_t *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint8_t *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  void (*v118)(char *);
  char *v119;
  uint64_t v120;
  uint8_t *v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(_QWORD);
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  __CVBuffer *v140;
  char *v141;
  void (*v142)(void);
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *);
  void (*Width)(_QWORD);
  unint64_t v150;
  char *v151;
  uint64_t v152;

  v131 = (void (*)(_QWORD))a1;
  v130 = a3;
  v132 = sub_239351FD8();
  v129 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v137 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23925FB08(&qword_256927018);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v128 = (uint64_t)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v138 = (uint64_t)&v121 - v8;
  v124 = type metadata accessor for PhotogrammetrySample(0);
  MEMORY[0x24BDAC7A8](v124);
  v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_239351F3C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v136 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v134 = (char *)&v121 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v121 - v17;
  v19 = sub_2393520B0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v140 = (__CVBuffer *)((char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v21);
  v135 = (char *)&v121 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v125 = (char *)&v121 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v123 = (char *)&v121 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v126 = (char *)&v121 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v139 = (char *)&v121 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v121 - v33;
  v146 = sub_239275AB0();
  v147 = v20;
  v148 = *(void (**)(char *))(v20 + 16);
  v148(v34);
  v145 = v12;
  v142 = *(void (**)(void))(v12 + 16);
  ((void (*)(char *, char *, uint64_t))v142)(v18, a2, v11);
  v35 = sub_239352098();
  v36 = sub_239352578();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v144 = a2;
    v38 = v37;
    v127 = swift_slowAlloc();
    Width = (void (*)(_QWORD))v127;
    *(_DWORD *)v38 = 141558275;
    v152 = 1752392040;
    v133 = v19;
    sub_2393526B0();
    *(_WORD *)(v38 + 12) = 2081;
    v141 = v10;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v39 = sub_2393528C0();
    v152 = sub_23925F3EC(v39, v40, (uint64_t *)&Width);
    v19 = v133;
    v10 = v141;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v145 = *(_QWORD *)(v145 + 8);
    ((void (*)(char *, uint64_t))v145)(v18, v11);
    _os_log_impl(&dword_23925B000, v35, v36, "Image Helper: Trying to load sample = %{private,mask.hash}s...", (uint8_t *)v38, 0x16u);
    v41 = v127;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v41, -1, -1);
    v42 = v38;
    a2 = v144;
    MEMORY[0x23B83BC04](v42, -1, -1);
  }
  else
  {
    v145 = *(_QWORD *)(v145 + 8);
    ((void (*)(char *, uint64_t))v145)(v18, v11);
  }

  v147 = *(_QWORD *)(v147 + 8);
  ((void (*)(char *, uint64_t))v147)(v34, v19);
  v43 = (const __CFURL *)sub_239351ED0();
  v44 = CGImageSourceCreateWithURL(v43, 0);

  if (v44)
  {
    v127 = v11;
    v45 = v143;
    v46 = (void *)sub_23926F134(v44, 0, a2);
    if (v45)
    {

    }
    else
    {
      v143 = 0;
      v57 = v46;
      PhotogrammetrySample.init(id:image:)((uint64_t)v131, (uint64_t)v57, (uint64_t)v10);
      v58 = sub_23926F71C(v44, 0, (uint64_t)a2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v10 + 2) = v58;
      ((void (*)(char *, uint64_t, uint64_t))v148)(v139, v146, v19);
      v59 = (__CVBuffer *)v57;
      v60 = sub_239352098();
      v61 = sub_239352560();
      v62 = os_log_type_enabled(v60, v61);
      v140 = v59;
      v141 = v10;
      if (v62)
      {
        v63 = (_DWORD *)swift_slowAlloc();
        v144 = a2;
        v64 = v63;
        *v63 = 134349312;
        Width = (void (*)(_QWORD))CVPixelBufferGetWidth(v59);
        sub_2393526B0();
        *((_WORD *)v64 + 6) = 2050;
        Width = (void (*)(_QWORD))CVPixelBufferGetHeight(v59);
        v10 = v141;
        sub_2393526B0();

        _os_log_impl(&dword_23925B000, v60, v61, "Image Helper: Loaded image w=%{public}ld h=%{public}ld", (uint8_t *)v64, 0x16u);
        v65 = v64;
        a2 = v144;
        MEMORY[0x23B83BC04](v65, -1, -1);
      }
      else
      {

        v60 = v59;
      }

      ((void (*)(char *, uint64_t))v147)(v139, v19);
      type metadata accessor for PhotogrammetryMetadataHelper();
      v69 = sub_23925DDC4(v58);
      v70 = *(uint64_t (**)(void))(*(_QWORD *)v69 + 176);
      v139 = (char *)v69;
      v71 = v70();
      if ((v74 & 1) == 0)
      {
        v75 = v71;
        v136 = v73;
        v76 = v72;
        v77 = v126;
        ((void (*)(char *, uint64_t, uint64_t))v148)(v126, v146, v19);
        v78 = sub_239352098();
        v79 = sub_239352560();
        if (os_log_type_enabled(v78, v79))
        {
          v133 = v19;
          v80 = (uint8_t *)swift_slowAlloc();
          v81 = swift_slowAlloc();
          v144 = a2;
          v82 = v81;
          *(_DWORD *)v80 = 136446210;
          v152 = v81;
          v121 = v80 + 4;
          Width = (void (*)(_QWORD))v75;
          v150 = v76;
          v122 = v76;
          v83 = v136;
          v151 = v136;
          type metadata accessor for CMAcceleration(0);
          v84 = sub_23935232C();
          Width = (void (*)(_QWORD))sub_23925F3EC(v84, v85, &v152);
          sub_2393526B0();
          v19 = v133;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23925B000, v78, v79, "Image Helper: Sample loader attached metadata gravity = %{public}s", v80, 0xCu);
          swift_arrayDestroy();
          v86 = v82;
          a2 = v144;
          MEMORY[0x23B83BC04](v86, -1, -1);
          v87 = v80;
          v10 = v141;
          MEMORY[0x23B83BC04](v87, -1, -1);

          ((void (*)(char *, uint64_t))v147)(v126, v19);
          v88 = v83;
          v76 = v122;
        }
        else
        {

          ((void (*)(char *, uint64_t))v147)(v77, v19);
          v88 = v136;
        }
        *((_QWORD *)v10 + 5) = v75;
        *((_QWORD *)v10 + 6) = v76;
        *((_QWORD *)v10 + 7) = v88;
        v10[64] = 0;
      }
      v89 = sub_23926FC08(v44, 0);

      *((_QWORD *)v10 + 3) = v89;
      v90 = v132;
      v91 = v137;
      if (!v89)
      {
        v92 = v123;
        ((void (*)(char *, uint64_t, uint64_t))v148)(v123, v146, v19);
        v93 = sub_239352098();
        v94 = sub_239352554();
        if (os_log_type_enabled(v93, v94))
        {
          v95 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v95 = 0;
          _os_log_impl(&dword_23925B000, v93, v94, "Image Helper: Didn't find embedded disparity map, checking for depth.", v95, 2u);
          v96 = v95;
          v90 = v132;
          MEMORY[0x23B83BC04](v96, -1, -1);
        }

        ((void (*)(char *, uint64_t))v147)(v92, v19);
        v97 = sub_2392700F8(v44, 0);

        *((_QWORD *)v10 + 3) = v97;
        v91 = v137;
      }
      type metadata accessor for PhotogrammetryImageHelper();
      v98 = v138;
      sub_23926DA20((uint64_t)a2, v138);
      v99 = v98;
      v100 = v128;
      sub_23926059C(v99, v128, &qword_256927018);
      v101 = v129;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v100, 1, v90) == 1)
      {
        sub_23926F0B0(v100);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v91, v100, v90);
        v102 = (uint64_t)&v10[*(int *)(v124 + 72)];
        sub_23926F0B0(v102);
        (*(void (**)(uint64_t, char *, uint64_t))(v101 + 16))(v102, v91, v90);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v102, 0, 1, v90);
        v103 = sub_239275A60();
        v104 = v125;
        ((void (*)(char *, uint64_t, uint64_t))v148)(v125, v103, v19);
        v105 = sub_239352098();
        v106 = sub_239352578();
        if (os_log_type_enabled(v105, v106))
        {
          v107 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v107 = 134349056;
          v10 = v141;
          Width = v131;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v105, v106, "Image Folder Reader: Parsed EXIF capture timestamp field of sample (id = %{public}ld)", v107, 0xCu);
          v108 = v107;
          v90 = v132;
          MEMORY[0x23B83BC04](v108, -1, -1);
        }

        ((void (*)(char *, uint64_t))v147)(v104, v19);
        (*(void (**)(char *, uint64_t))(v101 + 8))(v137, v90);
      }
      v109 = v135;
      ((void (*)(char *, uint64_t, uint64_t))v148)(v135, v146, v19);
      v110 = v134;
      v111 = v127;
      v142();
      v112 = sub_239352098();
      v113 = sub_239352554();
      if (os_log_type_enabled(v112, v113))
      {
        v114 = swift_slowAlloc();
        v148 = (void (*)(char *))swift_slowAlloc();
        Width = (void (*)(_QWORD))v148;
        *(_DWORD *)v114 = 141558275;
        v152 = 1752392040;
        v133 = v19;
        sub_2393526B0();
        *(_WORD *)(v114 + 12) = 2081;
        sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v115 = v134;
        v116 = sub_2393528C0();
        v152 = sub_23925F3EC(v116, v117, (uint64_t *)&Width);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v145)(v115, v111);
        _os_log_impl(&dword_23925B000, v112, v113, "Image Helper: Successfully loaded \"%{private,mask.hash}s\"!", (uint8_t *)v114, 0x16u);
        v118 = v148;
        swift_arrayDestroy();
        v10 = v141;
        MEMORY[0x23B83BC04](v118, -1, -1);
        MEMORY[0x23B83BC04](v114, -1, -1);

        swift_release();
        v119 = v135;
        v120 = v133;
      }
      else
      {

        swift_release();
        ((void (*)(char *, uint64_t))v145)(v110, v111);

        v119 = v109;
        v120 = v19;
      }
      ((void (*)(char *, uint64_t))v147)(v119, v120);
      sub_23926F0B0(v138);
      sub_239270078((uint64_t)v10, v130);
      sub_2392700BC((uint64_t)v10);
    }
  }
  else
  {
    v47 = v140;
    ((void (*)(__CVBuffer *, uint64_t, uint64_t))v148)(v140, v146, v19);
    v48 = v136;
    ((void (*)(char *, char *, uint64_t))v142)(v136, a2, v11);
    v49 = sub_239352098();
    v50 = sub_23935256C();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v144 = a2;
      v53 = v52;
      Width = (void (*)(_QWORD))v52;
      *(_DWORD *)v51 = 141558275;
      v152 = 1752392040;
      v127 = v11;
      sub_2393526B0();
      *(_WORD *)(v51 + 12) = 2081;
      v54 = sub_239351F30();
      v152 = sub_23925F3EC(v54, v55, (uint64_t *)&Width);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v145)(v48, v127);
      _os_log_impl(&dword_23925B000, v49, v50, "Image Helper: Error in CGImageSourceCreateWithURL for %{private,mask.hash}s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v53, -1, -1);
      MEMORY[0x23B83BC04](v51, -1, -1);

      v56 = v140;
    }
    else
    {
      ((void (*)(char *, uint64_t))v145)(v48, v11);

      v56 = v47;
    }
    ((void (*)(__CVBuffer *, uint64_t))v147)(v56, v19);
    Width = 0;
    v150 = 0xE000000000000000;
    sub_2393527C4();
    sub_239352380();
    sub_239351F30();
    sub_239352380();
    swift_bridgeObjectRelease();
    v66 = (uint64_t)Width;
    v67 = v150;
    sub_23926F0F0();
    swift_allocError();
    *(_QWORD *)v68 = v66;
    *(_QWORD *)(v68 + 8) = v67;
    *(_BYTE *)(v68 + 16) = 1;
    swift_willThrow();
  }
}

uint64_t sub_23926DA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  const __CFURL *v14;
  CGImageSource *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = a2;
  v3 = sub_239351F3C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23925FB08(&qword_256927018);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (const __CFURL *)sub_239351ED0();
  v15 = CGImageSourceCreateWithURL(v14, 0);

  if (v15)
  {
    v16 = sub_23926F71C(v15, 0, a1);
    type metadata accessor for PhotogrammetryMetadataHelper();
    v17 = sub_23925DDC4(v16);
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 144))(v17);

    swift_release();
    v18 = sub_239351FD8();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
    {
      sub_23926F0B0((uint64_t)v13);
      v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
      v21 = v38;
      v22 = 1;
    }
    else
    {
      v32 = v38;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v38, v13, v18);
      v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
      v21 = v32;
      v22 = 0;
    }
    v33 = v18;
  }
  else
  {
    v23 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v23, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v24 = sub_239352098();
    v25 = sub_23935256C();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v37 = v28;
      *(_DWORD *)v27 = 141558275;
      v39 = 1752392040;
      v40 = v28;
      v36 = v26;
      sub_2393526B0();
      *(_WORD *)(v27 + 12) = 2081;
      v35 = v24;
      v29 = sub_239351F30();
      v39 = sub_23925F3EC(v29, v30, &v40);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v24 = v35;
      _os_log_impl(&dword_23925B000, v35, (os_log_type_t)v36, "Image Helper: Error in CGImageSourceCreateWithURL for %{private,mask.hash}s", (uint8_t *)v27, 0x16u);
      v31 = v37;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v31, -1, -1);
      MEMORY[0x23B83BC04](v27, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v33 = sub_239351FD8();
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v21 = v38;
    v22 = 1;
  }
  return v20(v21, v22, 1, v33);
}

id sub_23926DD98()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_depthDataFromDictionaryRepresentation_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_239351E58();

    swift_willThrow();
  }
  return v1;
}

uint64_t sub_23926DE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  if ((sub_239351E64() & 1) == 0)
    return 0;
  sub_239351E70();
  v0 = sub_239352338();
  v2 = v1;
  swift_bridgeObjectRelease();
  if (qword_25692C740 != -1)
    swift_once();
  v3 = sub_23926DF24(v0, v2, qword_25692FD60);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23926DF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_239352980();
    sub_23935235C();
    v6 = sub_2393529B0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_2393528CC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_2393528CC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_23926E058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  const __CFURL *v10;
  CGImageSource *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  _QWORD v28[2];
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (const __CFURL *)sub_239351ED0();
  v11 = CGImageSourceCreateWithURL(v10, 0);

  if (!v11)
  {
    v18 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v19 = sub_239352098();
    v20 = sub_23935256C();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v30 = v22;
      *(_DWORD *)v21 = 141558275;
      v31 = 1752392040;
      v32 = v22;
      sub_2393526B0();
      *(_WORD *)(v21 + 12) = 2081;
      v28[1] = v21 + 14;
      v29 = v19;
      v23 = sub_239351F30();
      v31 = sub_23925F3EC(v23, v24, &v32);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v25 = v29;
      _os_log_impl(&dword_23925B000, v29, (os_log_type_t)v20, "Image Helper: Error in CGImageSourceCreateWithURL for %{private,mask.hash}s", (uint8_t *)v21, 0x16u);
      v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v26, -1, -1);
      MEMORY[0x23B83BC04](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v12 = sub_23926F71C(v11, 0, a1);
  type metadata accessor for PhotogrammetryMetadataHelper();
  v13 = sub_23925DDC4(v12);
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 152))(v13);
  if ((v14 & 0x100000000) != 0)
  {

    swift_release();
    return 0;
  }
  v15 = v14;
  v16 = (*(uint64_t (**)(void))(*(_QWORD *)v13 + 160))();

  swift_release();
  if ((v16 & 0x100000000) != 0)
    return 0;
  return v15 | ((unint64_t)v16 << 32);
}

uint64_t sub_23926E354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;

  if ((sub_239351E64() & 1) == 0)
    return 0;
  sub_239351E70();
  v0 = sub_239352338();
  v2 = v1;
  swift_bridgeObjectRelease();
  if (v0 == 1667851624 && v2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v4 = sub_2393528CC();
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
}

uint64_t sub_23926E3FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  void *v18;
  int Version;
  id v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  id v41;
  void *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49[3];
  id v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393520B0();
  v7 = *(char **)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v42 - v11;
  v12 = 0;
  if ((sub_239351E64() & 1) != 0)
  {
    v43 = v10;
    v44 = v6;
    sub_239351E70();
    v13 = sub_239352338();
    v15 = v14;
    swift_bridgeObjectRelease();
    if (v13 == 1667851624 && v15 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      v16 = v7;
    }
    else
    {
      v17 = sub_2393528CC();
      swift_bridgeObjectRelease();
      v16 = v7;
      if ((v17 & 1) == 0)
        return 0;
    }
    v18 = (void *)sub_239351ED0();
    v49[0] = 0;
    Version = OCNonModularSPI_CMPhoto_readVersion();

    v50 = v49[0];
    v20 = v49[0];
    v21 = sub_239275AB0();
    v22 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v16 + 2);
    if (Version)
    {
      v23 = v43;
      v24 = v44;
      v22(v43, v21, v44);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
      v25 = sub_239352098();
      v26 = sub_23935256C();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v42 = (void *)swift_slowAlloc();
        v49[0] = v42;
        *(_DWORD *)v27 = 141558275;
        v45 = v16;
        v46 = 1752392040;
        sub_2393526B0();
        *(_WORD *)(v27 + 12) = 2081;
        v28 = sub_239351F30();
        v46 = sub_23925F3EC(v28, v29, (uint64_t *)v49);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        _os_log_impl(&dword_23925B000, v25, v26, "Image Helper: Error when reading HEIC version for %{private,mask.hash}s", (uint8_t *)v27, 0x16u);
        v30 = v42;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v30, -1, -1);
        MEMORY[0x23B83BC04](v27, -1, -1);

        (*((void (**)(char *, uint64_t))v45 + 1))(v23, v44);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

        (*((void (**)(char *, uint64_t))v16 + 1))(v23, v24);
      }

    }
    else
    {
      v32 = v44;
      v31 = v45;
      v22(v45, v21, v44);
      v33 = sub_239352098();
      v34 = sub_239352554();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = (void *)swift_slowAlloc();
        v49[0] = v36;
        *(_DWORD *)v35 = 136315138;
        swift_beginAccess();
        v47 = (uint64_t)v50;
        v37 = v50;
        sub_23925FB08(&qword_2569277C0);
        v38 = sub_23935232C();
        v47 = sub_23925F3EC(v38, v39, (uint64_t *)v49);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v33, v34, "Image Helper: Read HEIC version %s", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v36, -1, -1);
        MEMORY[0x23B83BC04](v35, -1, -1);

        (*((void (**)(char *, uint64_t))v16 + 1))(v45, v32);
      }
      else
      {

        (*((void (**)(char *, uint64_t))v16 + 1))(v31, v32);
      }
      swift_beginAccess();
      if (v50)
      {
        v47 = 0;
        v48 = 0;
        v41 = v50;
        sub_2393522E4();

        v12 = v47;
        return v12;
      }
    }
    return 0;
  }
  return v12;
}

uint64_t sub_23926E904()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23926E914()
{
  return swift_allocObject();
}

uint64_t sub_23926E924(uint64_t a1, uint64_t a2)
{
  return sub_23926EA6C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23926E930(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2393522D8();
  *a2 = 0;
  return result;
}

uint64_t sub_23926E9A4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2393522E4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23926EA20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2393522F0();
  v2 = sub_2393522CC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23926EA60(uint64_t a1, uint64_t a2)
{
  return sub_23926EA6C(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23926EA6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2393522F0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23926EAA8()
{
  sub_2393522F0();
  sub_23935235C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23926EAE8()
{
  uint64_t v0;

  sub_2393522F0();
  sub_239352980();
  sub_23935235C();
  v0 = sub_2393529B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23926EB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2393522F0();
  v2 = v1;
  if (v0 == sub_2393522F0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2393528CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23926EBE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2393522CC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23926EC24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2393522F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23926EC4C()
{
  sub_239262570(&qword_256927880, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_239354818);
  sub_239262570(&qword_256927888, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2393547B8);
  return sub_23935289C();
}

uint64_t sub_23926ECD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_2569278A8);
    v3 = sub_2393527AC();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_239352980();
      swift_bridgeObjectRetain();
      sub_23935235C();
      result = sub_2393529B0();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_2393528CC(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_2393528CC();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23926EE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_256927898);
    v3 = sub_2393527AC();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_2393522F0();
      sub_239352980();
      v7 = v6;
      sub_23935235C();
      v8 = sub_2393529B0();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_2393522F0();
        v17 = v16;
        if (v15 == sub_2393522F0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_2393528CC();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_2393522F0();
          v24 = v23;
          if (v22 == sub_2393522F0() && v24 == v25)
            goto LABEL_3;
          v27 = sub_2393528CC();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256927860);
}

uint64_t sub_23926F0B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23925FB08(&qword_256927018);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23926F0F0()
{
  unint64_t result;

  result = qword_2569277B8;
  if (!qword_2569277B8)
  {
    result = MEMORY[0x23B83BB44](&unk_2393546B0, &type metadata for PhotogrammetryImageHelper.LoadError);
    atomic_store(result, (unint64_t *)&qword_2569277B8);
  }
  return result;
}

uint64_t sub_23926F134(CGImageSource *a1, size_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  CGImageRef ImageAtIndex;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  CGImageRef v21;
  CVPixelBufferRef v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  os_log_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  v6 = sub_239351F3C();
  v61 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v59 = (char *)&v54 - v9;
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v54 - v15;
  ImageAtIndex = CGImageSourceCreateImageAtIndex(a1, a2, 0);
  if (ImageAtIndex)
  {
    v18 = v61;
    v19 = v6;
    v20 = a3;
    v21 = ImageAtIndex;
    v22 = sub_23927081C();
    if (v22)
    {
      v23 = (uint64_t)v22;

    }
    else
    {
      v60 = (char *)v21;
      v34 = sub_239275AB0();
      v58 = v11;
      v35 = v16;
      v36 = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v34, v10);
      v37 = v18;
      v38 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      v39 = v59;
      v40 = v19;
      v38(v59, v20, v19);
      v41 = sub_239352098();
      v42 = sub_23935256C();
      v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        v44 = swift_slowAlloc();
        v56 = swift_slowAlloc();
        v62 = v56;
        *(_DWORD *)v44 = 141558275;
        v64 = 1752392040;
        v55 = v43;
        sub_2393526B0();
        *(_WORD *)(v44 + 12) = 2081;
        v57 = v36;
        v54 = v41;
        v45 = sub_239351F30();
        v64 = sub_23925F3EC(v45, v46, &v62);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v40);
        v47 = v54;
        _os_log_impl(&dword_23925B000, v54, (os_log_type_t)v55, "Image Helper: Error converting CGImageSource to CVPixelBuffer for %{private,mask.hash}s", (uint8_t *)v44, 0x16u);
        v48 = v56;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v48, -1, -1);
        MEMORY[0x23B83BC04](v44, -1, -1);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v57);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v40);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v36);
      }
      v62 = 0;
      v63 = 0xE000000000000000;
      sub_2393527C4();
      sub_239352380();
      sub_239351F30();
      sub_239352380();
      swift_bridgeObjectRelease();
      v23 = v62;
      v51 = v63;
      sub_23926F0F0();
      swift_allocError();
      *(_QWORD *)v52 = v23;
      *(_QWORD *)(v52 + 8) = v51;
      *(_BYTE *)(v52 + 16) = 1;
      swift_willThrow();

    }
  }
  else
  {
    v24 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v24, v10);
    v25 = v6;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, a3, v6);
    v26 = sub_239352098();
    v27 = sub_23935256C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v58 = v11;
      v59 = a3;
      v57 = v10;
      v29 = v28;
      v30 = swift_slowAlloc();
      v62 = v30;
      *(_DWORD *)v29 = 141558275;
      v64 = 1752392040;
      sub_2393526B0();
      *(_WORD *)(v29 + 12) = 2081;
      v56 = v29 + 14;
      v31 = v60;
      v32 = sub_239351F30();
      v64 = sub_23925F3EC(v32, v33, &v62);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v25);
      _os_log_impl(&dword_23925B000, v26, v27, "Image Helper: Error in CGImageSourceCreateImageAtIndex for %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v30, -1, -1);
      MEMORY[0x23B83BC04](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v57);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v25);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    v62 = 0;
    v63 = 0xE000000000000000;
    sub_2393527C4();
    sub_239352380();
    sub_239351F30();
    sub_239352380();
    swift_bridgeObjectRelease();
    v23 = v62;
    v49 = v63;
    sub_23926F0F0();
    swift_allocError();
    *(_QWORD *)v50 = v23;
    *(_QWORD *)(v50 + 8) = v49;
    *(_BYTE *)(v50 + 16) = 1;
    swift_willThrow();
  }
  return v23;
}

unint64_t sub_23926F71C(CGImageSource *a1, size_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  CFDictionaryRef v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  const __CFDictionary *v41;
  unint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  v13 = sub_2393520B0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v44 - v17;
  v19 = CGImageSourceCopyPropertiesAtIndex(a1, a2, 0);
  v20 = sub_239275AB0();
  v47 = v14;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  if (!v19)
  {
    v21(v46, v20, v13);
    v32 = v7;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v34 = v6;
    v33(v10, a3, v6);
    v35 = sub_239352098();
    v36 = sub_23935256C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_DWORD *)v37 = 141558275;
      v48 = 1752392040;
      v49 = v38;
      v45 = v13;
      sub_2393526B0();
      *(_WORD *)(v37 + 12) = 2081;
      sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v39 = sub_2393528C0();
      v48 = sub_23925F3EC(v39, v40, &v49);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v34);
      _os_log_impl(&dword_23925B000, v35, v36, "Image Helper: Can't get CGImageProperties for EXIF for %{private,mask.hash}s!", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v38, -1, -1);
      MEMORY[0x23B83BC04](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v45);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v6);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v13);
    }
    return sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  }
  v21(v18, v20, v13);
  v22 = v7;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v24 = v6;
  v23(v12, a3, v6);
  v25 = sub_239352098();
  v26 = sub_239352554();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v46 = (char *)v28;
    *(_DWORD *)v27 = 141558275;
    v48 = 1752392040;
    v49 = v28;
    v45 = v13;
    sub_2393526B0();
    *(_WORD *)(v27 + 12) = 2081;
    v44 = v27 + 14;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v29 = sub_2393528C0();
    v48 = sub_23925F3EC(v29, v30, &v49);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
    _os_log_impl(&dword_23925B000, v25, v26, "Image Helper: Got CGImageProperties EXIF metadata for %{private,mask.hash}s.", (uint8_t *)v27, 0x16u);
    v31 = v46;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v31, -1, -1);
    MEMORY[0x23B83BC04](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v45);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v13);
  }
  v49 = 0;
  v41 = v19;
  result = sub_23935226C();
  v43 = v49;
  if (v49)
  {

    return v43;
  }
  __break(1u);
  return result;
}

id sub_23926FC08(CGImageSource *a1, size_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint8_t *v25;
  uint8_t *v26;
  void (*v27)(char *, uint64_t);
  CFDictionaryRef v28;
  CFDictionaryRef v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  char *v33;
  uint8_t *v34;
  uint8_t *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  CGImageSourceRef v52;
  uint64_t v53;

  v52 = a1;
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v49 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v49 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v49 - v13;
  v15 = sub_239275AB0();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v16(v14, v15, v3);
  v17 = sub_239352098();
  v18 = sub_239352560();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v50 = v7;
    v20 = a2;
    v21 = v15;
    v22 = v3;
    v23 = v16;
    v24 = v10;
    v25 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_23925B000, v17, v18, "Image Helper: Trying to find kCGImageAuxiliaryDataTypeDisparity in the CGImageSource.", v19, 2u);
    v26 = v25;
    v10 = v24;
    v16 = v23;
    v3 = v22;
    v15 = v21;
    a2 = v20;
    v7 = v50;
    MEMORY[0x23B83BC04](v26, -1, -1);
  }

  v27 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27(v14, v3);
  v28 = CGImageSourceCopyAuxiliaryDataInfoAtIndex(v52, a2, (CFStringRef)*MEMORY[0x24BDD91E0]);
  if (!v28 || (v29 = v28, v53 = 0, sub_239352278(), v29, !v53))
  {
    v16(v7, v15, v3);
    v37 = sub_239352098();
    v38 = sub_23935256C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23925B000, v37, v38, "Image Helper: No Auxiliary Depth Data found in the CGImageSource, not using depth.", v39, 2u);
      MEMORY[0x23B83BC04](v39, -1, -1);
    }

    v36 = v7;
    goto LABEL_12;
  }
  sub_2392707E0();
  v30 = sub_23926DD98();
  if (!v30)
  {
    v16(v10, v15, v3);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = v10;
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23925B000, v31, v32, "Image Helper: Can't load AVDepthData fromDictionaryRepresentation, can't produce disparity map.", v34, 2u);
      v35 = v34;
      v10 = v33;
      MEMORY[0x23B83BC04](v35, -1, -1);
    }

    v36 = v10;
LABEL_12:
    v27(v36, v3);
    return 0;
  }
  v42 = v15;
  v43 = v30;
  v44 = v43;
  if (objc_msgSend(v43, sel_depthDataType) != 1717856627)
  {
    v44 = objc_msgSend(v43, sel_depthDataByConvertingToDepthDataType_, 1717856627);

  }
  v45 = v51;
  v16(v51, v42, v3);
  v46 = sub_239352098();
  v47 = sub_239352560();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_23925B000, v46, v47, "Image Helper: Got disparity map!", v48, 2u);
    MEMORY[0x23B83BC04](v48, -1, -1);
  }

  v27(v45, v3);
  v40 = objc_msgSend(v44, sel_depthDataMap);

  return v40;
}

uint64_t type metadata accessor for PhotogrammetryImageHelper()
{
  return objc_opt_self();
}

uint64_t sub_239270078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotogrammetrySample(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392700BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhotogrammetrySample(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_2392700F8(CGImageSource *a1, size_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint8_t *v25;
  uint8_t *v26;
  void (*v27)(char *, uint64_t);
  CFDictionaryRef v28;
  CFDictionaryRef v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  char *v33;
  uint8_t *v34;
  uint8_t *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  CGImageSourceRef v52;
  uint64_t v53;

  v52 = a1;
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v49 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v49 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v49 - v13;
  v15 = sub_239275AB0();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v16(v14, v15, v3);
  v17 = sub_239352098();
  v18 = sub_239352560();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v50 = v7;
    v20 = a2;
    v21 = v15;
    v22 = v3;
    v23 = v16;
    v24 = v10;
    v25 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_23925B000, v17, v18, "Image Helper: Trying to find kCGImageAuxiliaryDataTypeDepth in the CGImageSource.", v19, 2u);
    v26 = v25;
    v10 = v24;
    v16 = v23;
    v3 = v22;
    v15 = v21;
    a2 = v20;
    v7 = v50;
    MEMORY[0x23B83BC04](v26, -1, -1);
  }

  v27 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27(v14, v3);
  v28 = CGImageSourceCopyAuxiliaryDataInfoAtIndex(v52, a2, (CFStringRef)*MEMORY[0x24BDD91D8]);
  if (!v28 || (v29 = v28, v53 = 0, sub_239352278(), v29, !v53))
  {
    v16(v7, v15, v3);
    v37 = sub_239352098();
    v38 = sub_23935256C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23925B000, v37, v38, "Image Helper: No Auxiliary Depth Data found in the CGImageSource, not using depth.", v39, 2u);
      MEMORY[0x23B83BC04](v39, -1, -1);
    }

    v36 = v7;
    goto LABEL_12;
  }
  sub_2392707E0();
  v30 = sub_23926DD98();
  if (!v30)
  {
    v16(v10, v15, v3);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = v10;
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23925B000, v31, v32, "Image Helper: Can't load AVDepthData fromDictionaryRepresentation, can't produce depth map.", v34, 2u);
      v35 = v34;
      v10 = v33;
      MEMORY[0x23B83BC04](v35, -1, -1);
    }

    v36 = v10;
LABEL_12:
    v27(v36, v3);
    return 0;
  }
  v42 = v15;
  v43 = v30;
  v44 = v43;
  if (objc_msgSend(v43, sel_depthDataType) != 1717855600)
  {
    v44 = objc_msgSend(v43, sel_depthDataByConvertingToDepthDataType_, 1717855600);

  }
  v45 = v51;
  v16(v51, v42, v3);
  v46 = sub_239352098();
  v47 = sub_239352560();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_23925B000, v46, v47, "Image Helper: Got depth map!", v48, 2u);
    MEMORY[0x23B83BC04](v48, -1, -1);
  }

  v27(v45, v3);
  v40 = objc_msgSend(v44, sel_depthDataMap);

  return v40;
}

id sub_23927054C(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return (id)swift_bridgeObjectRetain();
  if (!a3)
    return result;
  return result;
}

void destroy for PhotogrammetryImageHelper.LoadError(uint64_t a1)
{
  sub_23927057C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_23927057C(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {

  }
}

uint64_t _s6CoreOC25PhotogrammetryImageHelperC9LoadErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23927054C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PhotogrammetryImageHelper.LoadError(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23927054C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23927057C(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for PhotogrammetryImageHelper.LoadError(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PhotogrammetryImageHelper.LoadError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23927057C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetryImageHelper.LoadError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetryImageHelper.LoadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23927071C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_239270734(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetryImageHelper.LoadError()
{
  return &type metadata for PhotogrammetryImageHelper.LoadError;
}

uint64_t sub_23927075C()
{
  return sub_239262570(&qword_256927868, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23935477C);
}

uint64_t sub_239270788()
{
  return sub_239262570(&qword_256927870, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_239354750);
}

uint64_t sub_2392707B4()
{
  return sub_239262570(&qword_256927878, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2393547EC);
}

unint64_t sub_2392707E0()
{
  unint64_t result;

  result = qword_256927890;
  if (!qword_256927890)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256927890);
  }
  return result;
}

CVPixelBufferRef sub_23927081C()
{
  CGImage *v0;
  CGImage *v1;
  CGColorSpaceRef v2;
  CGColorSpace *v3;
  uint64_t inited;
  void **v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  const __CFAllocator *v12;
  size_t Width;
  size_t Height;
  const __CFDictionary *v15;
  CVPixelBufferRef v16;
  CVPixelBufferRef v17;
  CVPixelBufferRef v18;
  size_t BytesPerRow;
  void *BaseAddress;
  size_t v21;
  size_t v22;
  CGContextRef v23;
  CGContextRef v24;
  vImagePixelCount v25;
  vImagePixelCount v26;
  vImage_Buffer v28;
  CVPixelBufferRef pixelBufferOut[2];

  v1 = v0;
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v2 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x24BDBF318]);
  if (!v2)
    goto LABEL_19;
  v3 = v2;
  pixelBufferOut[0] = 0;
  sub_23925FB08(&qword_2569278B0);
  inited = swift_initStackObject();
  v5 = (void **)MEMORY[0x24BDC55E8];
  *(_OWORD *)(inited + 16) = xmmword_2393548B0;
  v6 = *v5;
  v7 = (void *)*MEMORY[0x24BDBD270];
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v7;
  v8 = (void *)*MEMORY[0x24BDC55E0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x24BDC55E0];
  *(_QWORD *)(inited + 56) = v7;
  v9 = v7;
  v10 = v6;
  v11 = v8;
  sub_239270AF8(inited);
  v12 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  Width = CGImageGetWidth(v1);
  Height = CGImageGetHeight(v1);
  type metadata accessor for CFString(0);
  sub_23925FB08(&qword_2569278B8);
  sub_239270C0C(&qword_256927420, (uint64_t)&unk_239354334);
  v15 = (const __CFDictionary *)sub_239352260();
  swift_bridgeObjectRelease();
  LODWORD(inited) = CVPixelBufferCreate(v12, Width, Height, 0x42475241u, v15, pixelBufferOut);

  v16 = pixelBufferOut[0];
  if ((_DWORD)inited)
  {
    v17 = 0;
    v18 = pixelBufferOut[0];
LABEL_15:

    goto LABEL_16;
  }
  if (pixelBufferOut[0])
  {
    v18 = pixelBufferOut[0];
    if (CVPixelBufferLockBaseAddress(v18, 0))
    {
      v17 = 0;
LABEL_14:

      goto LABEL_15;
    }
    BytesPerRow = CVPixelBufferGetBytesPerRow(v18);
    BaseAddress = CVPixelBufferGetBaseAddress(v18);
    v21 = CGImageGetWidth(v1);
    v22 = CGImageGetHeight(v1);
    v23 = CGBitmapContextCreate(BaseAddress, v21, v22, 8uLL, BytesPerRow, v3, 5u);
    if (!v23)
    {
      v16 = 0;
      goto LABEL_13;
    }
    v24 = v23;
    CGImageGetWidth(v1);
    CGImageGetHeight(v1);
    sub_23935253C();
    v28.data = CVPixelBufferGetBaseAddress(v18);
    v28.rowBytes = CVPixelBufferGetBytesPerRow(v18);
    v25 = CGImageGetWidth(v1);
    if ((v25 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v28.width = v25;
      v26 = CGImageGetHeight(v1);
      if ((v26 & 0x8000000000000000) == 0)
      {
        v28.height = v26;
        vImagePermuteChannels_ARGB8888(&v28, &v28, byte_250AC4038, 0);

        v18 = v18;
LABEL_13:
        CVPixelBufferUnlockBaseAddress(v18, 0);
        v17 = v16;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  v17 = 0;
LABEL_16:

  return v17;
}

unint64_t sub_239270AF8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_2569278C8);
  v2 = (_QWORD *)sub_239352878();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = *v4;
    v8 = v5;
    result = sub_23926382C((uint64_t)v8);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v2[6] + v11) = v8;
    *(_QWORD *)(v2[7] + v11) = v6;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
  sub_239263BFC(a1, &qword_2569278C0);
}

uint64_t sub_239270C0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x23B83BB44](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

float sub_239270C4C(uint64_t a1)
{
  float result;

  result = 0.0;
  if ((unint64_t)(a1 - 1) <= 2)
    return flt_239354974[a1 - 1];
  return result;
}

uint64_t sub_239270C6C(char a1)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 3;
}

float sub_239270C7C(char a1)
{
  float result;

  result = 0.03;
  if ((a1 & 1) == 0)
    return 0.01;
  return result;
}

void sub_239270CA0(void *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  float *v23;
  id v24;
  float v25;
  float v26;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  __n128 v51;
  double v52;
  double v53;
  __n128 v54;
  __n128 v55;
  char v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  uint64_t i;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  id v67;
  uint64_t v68;
  uint64_t v69;

  v65.n128_u64[0] = a2;
  v66.n128_u64[0] = a3;
  i = sub_2393520B0();
  v4 = *(_QWORD *)(i - 8);
  MEMORY[0x24BDAC7A8](i);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v64.n128_u64[0] = (unint64_t)v60.n128_u64 - v15;
  v16 = objc_msgSend(a1, sel_geometry);
  v17 = objc_msgSend(v16, sel_colors);

  v67 = v17;
  if (!v17)
  {
    v33 = sub_239275BB8();
    v34 = i;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v33, i);
    v35 = sub_239352098();
    v36 = sub_23935256C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v69 = v38;
      *(_DWORD *)v37 = 136380675;
      v68 = sub_23925F3EC(0xD00000000000001ELL, 0x800000023935ABC0, &v69);
      v39 = v66.n128_u64[0];
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v35, v36, "%{private}s: Failed to create mesh anchor from ARMeshAnchor, ARMeshAnchor does not have vertex colors!", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v38, -1, -1);
      MEMORY[0x23B83BC04](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v34);
      v39 = v66.n128_u64[0];
    }
    v59 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v39, 1, 1, v59);
    return;
  }
  v18 = objc_msgSend(a1, sel_geometry);
  v19 = objc_msgSend(v18, sel_vertices);

  v20 = (uint64_t)objc_msgSend(v19, sel_count);
  v21 = 3 * v20;
  if ((unsigned __int128)(v20 * (__int128)3) >> 64 != (3 * v20) >> 63)
  {
    __break(1u);
    goto LABEL_26;
  }
  v22 = objc_msgSend(v67, sel_buffer);
  v23 = (float *)objc_msgSend(v22, sel_contents);
  v24 = v22;
  if (v21 < 0)
  {
LABEL_26:
    __break(1u);
    return;
  }
  v62.n128_u64[0] = (unint64_t)v14;
  for (i = v10; v21; --v21)
  {
    v26 = *v23;
    if (*v23 >= 0.0 && v26 < 0.0031307)
    {
      v25 = v26 * 12.92;
    }
    else
    {
      v25 = 0.0;
      if (v26 >= 0.0031307 && v26 <= 1.0)
        v25 = (float)(powf(v26, 0.41667) * 1.055) + -0.055;
    }
    *v23++ = sub_2392DF050(v25, 0.0, 1.0);
  }
  sub_239275170(v65.n128_i64[0], (uint64_t)v9);
  v29 = v11;
  v30 = i;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, i) == 1)
  {
    v31 = objc_msgSend(a1, sel_identifier);
    v32 = v64.n128_u64[0];
    sub_239352008();

    sub_2392751B8((uint64_t)v9);
  }
  else
  {
    v32 = v64.n128_u64[0];
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v64.n128_u64[0], v9, v30);
  }
  v40 = v66.n128_u64[0];
  v41 = v62.n128_u64[0];
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 16))(v62.n128_u64[0], v32, v30);
  v42 = objc_msgSend(a1, sel_geometry);
  v43 = objc_msgSend(v42, sel_vertices);

  v44 = objc_msgSend(a1, sel_geometry);
  v45 = objc_msgSend(v44, sel_normals);

  v46 = objc_msgSend(a1, sel_geometry);
  v47 = objc_msgSend(v46, sel_faces);

  objc_msgSend(a1, sel_transform);
  v65 = v49;
  v66 = v48;
  v64 = v50;
  v62 = v51;
  objc_msgSend(a1, sel_timestamp);
  v53 = v52;
  objc_msgSend(a1, sel_corner);
  v61 = v54;
  objc_msgSend(a1, sel_extent);
  v60 = v55;
  v56 = sub_23929D47C();
  v57 = sub_2392F406C(v41, (uint64_t)v43, (uint64_t)v67, (uint64_t)v45, (uint64_t)v47, v56 & 1, v40, v66, v65, v64, v62, v53, v61, v60);
  (*(void (**)(unint64_t, uint64_t, __n128))(v29 + 8))(v32, v30, v57);
  v58 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v40, 0, 1, v58);
}

uint64_t sub_2392712AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>, __n128 a7@<Q0>, __n128 a8@<Q1>, __n128 a9@<Q2>, __n128 a10@<Q3>, double a11@<D4>, __n128 a12@<Q5>, __n128 a13@<Q6>)
{
  uint64_t v17;
  void (**v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  __n128 v92;
  __n128 v93;
  __n128 v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[2];

  v96 = a12;
  v97 = a13;
  v94 = a9;
  v95 = a10;
  v93 = a8;
  v92 = a7;
  v99 = a3;
  v100 = a2;
  v103 = a6;
  v17 = sub_2393520B0();
  v18 = *(void (***)(char *, uint64_t, uint64_t))(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v102 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v98 = (char *)&v90 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v91 = (char *)&v90 - v23;
  v24 = sub_239352020();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v101 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v90 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v90 = (char *)&v90 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v90 - v33;
  v35 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 264);
  v36 = v35(a1);
  if (!v36)
  {
    v47 = sub_239275BB8();
    v18[2](v102, v47, v17);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v101, a5, v24);
    v48 = sub_239352098();
    v49 = sub_23935256C();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v100 = v17;
      v51 = v24;
      v52 = v50;
      v53 = swift_slowAlloc();
      v99 = v25;
      v54 = v53;
      v105[0] = v53;
      *(_DWORD *)v52 = 136380931;
      v104 = sub_23925F3EC(0xD00000000000005ALL, 0x800000023935ABE0, v105);
      sub_2393526B0();
      *(_WORD *)(v52 + 12) = 2082;
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v55 = v101;
      v56 = sub_2393528C0();
      v104 = sub_23925F3EC(v56, v57, v105);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v55, v51);
      _os_log_impl(&dword_23925B000, v48, v49, "%{private}s: Failed to create mesh anchor %{public}s from mutable data - failed to create buffer for vertex positions!", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v54, -1, -1);
      MEMORY[0x23B83BC04](v52, -1, -1);

      ((void (*)(char *, uint64_t))v18[1])(v102, v100);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v101, v24);

      ((void (*)(char *, uint64_t))v18[1])(v102, v17);
    }
LABEL_15:
    v89 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v103, 1, 1, v89);
  }
  v37 = (char *)v36;
  v102 = a5;
  v38 = (char *)v18;
  v39 = v35(v100);
  if (v39)
  {
    v40 = (void *)v39;
    v41 = v35(v99);
    if (v41)
    {
      v42 = v41;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v34, v102, v24);
      v43 = sub_23929D47C();
      v44 = v103;
      sub_2392F406C((uint64_t)v34, (uint64_t)v37, (uint64_t)v40, v42, 0, v43 & 1, v103, v92, v93, v94, v95, a11, v96, v97);
      v45 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
    }
    v71 = sub_239275BB8();
    v72 = v38;
    v73 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v38 + 2);
    v74 = v91;
    v75 = v17;
    v73(v91, v71, v17);
    v76 = v25;
    v77 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v78 = v90;
    v79 = v24;
    v77(v90, v102, v24);
    v80 = sub_239352098();
    v81 = sub_23935256C();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc();
      v100 = v75;
      v83 = v82;
      v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)v83 = 136380931;
      v104 = sub_23925F3EC(0xD00000000000005ALL, 0x800000023935ABE0, v105);
      v102 = v72;
      sub_2393526B0();
      *(_WORD *)(v83 + 12) = 2082;
      v101 = v37;
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v84 = sub_2393528C0();
      v104 = sub_23925F3EC(v84, v85, v105);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v79);
      _os_log_impl(&dword_23925B000, v80, v81, "%{private}s: Failed to create mesh anchor %{public}s from mutable data - failed to create buffer for vertex normals!", (uint8_t *)v83, 0x16u);
      v86 = v99;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v86, -1, -1);
      MEMORY[0x23B83BC04](v83, -1, -1);

      (*((void (**)(char *, uint64_t))v102 + 1))(v91, v100);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v79);

      (*((void (**)(char *, uint64_t))v72 + 1))(v74, v75);
    }
    goto LABEL_15;
  }
  v101 = v37;
  v58 = sub_239275BB8();
  v59 = v98;
  v18[2](v98, v58, v17);
  v60 = v25;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v30, v102, v24);
  v61 = sub_239352098();
  v62 = sub_23935256C();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = swift_slowAlloc();
    v99 = (uint64_t)v30;
    v64 = v63;
    v65 = swift_slowAlloc();
    v100 = v17;
    v66 = v24;
    v67 = v65;
    v105[0] = v65;
    *(_DWORD *)v64 = 136380931;
    v104 = sub_23925F3EC(0xD00000000000005ALL, 0x800000023935ABE0, v105);
    v102 = (char *)v18;
    sub_2393526B0();
    *(_WORD *)(v64 + 12) = 2082;
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v68 = v99;
    v69 = sub_2393528C0();
    v104 = sub_23925F3EC(v69, v70, v105);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v68, v66);
    _os_log_impl(&dword_23925B000, v61, v62, "%{private}s: Failed to create mesh anchor %{public}s from mutable data - failed to create buffer for vertex colors!", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v67, -1, -1);
    MEMORY[0x23B83BC04](v64, -1, -1);

    (*((void (**)(char *, uint64_t))v102 + 1))(v98, v100);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    ((void (*)(char *, uint64_t))v18[1])(v59, v17);
  }
  v87 = v103;
  v88 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 1, 1, v88);
}

uint64_t sub_239271B2C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t result;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;

  v2 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v56 - v6;
  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v56 - v13;
  v15 = *(void **)(a1 + v2[8]);
  if (!v15)
  {
    v37 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v37, v8);
    sub_2392751F8(a1, (uint64_t)v5);
    v38 = sub_239352098();
    v39 = sub_23935256C();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v63 = v41;
      *(_DWORD *)v40 = 136380931;
      v60 = v9;
      v62 = sub_23925F3EC(0xD000000000000012, 0x800000023935AC90, &v63);
      v59 = v8;
      sub_2393526B0();
      *(_WORD *)(v40 + 12) = 2082;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v42 = sub_2393528C0();
      v62 = sub_23925F3EC(v42, v43, &v63);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_23927523C((uint64_t)v5);
      _os_log_impl(&dword_23925B000, v38, v39, "%{private}s: Failed to get mesh anchor from tri mesh - missing faces in the mesh anchor %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v41, -1, -1);
      MEMORY[0x23B83BC04](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v59);
    }
    else
    {
      sub_23927523C((uint64_t)v5);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    return 0;
  }
  v60 = v9;
  v16 = *(void **)(a1 + v2[5]);
  v61 = v15;
  v17 = (uint64_t)objc_msgSend(v16, sel_count);
  v18 = 3 * v17;
  if ((unsigned __int128)(v17 * (__int128)3) >> 64 != (3 * v17) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  v58 = v14;
  v59 = v8;
  if (v18 < 0)
    goto LABEL_18;
  v19 = objc_msgSend(v16, sel_buffer);
  v20 = objc_msgSend(v19, sel_contents);
  v21 = v19;
  v22 = objc_msgSend(*(id *)(a1 + v2[6]), sel_buffer);
  v23 = objc_msgSend(v22, sel_contents);
  v24 = v22;
  v25 = objc_msgSend(*(id *)(a1 + v2[7]), sel_buffer);
  v26 = objc_msgSend(v25, sel_contents);
  v27 = v25;
  v28 = v61;
  v29 = (uint64_t)objc_msgSend(v61, sel_count);
  v30 = 3 * v29;
  if ((unsigned __int128)(v29 * (__int128)3) >> 64 != (3 * v29) >> 63)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v57 = v7;
  if ((v30 & 0x8000000000000000) == 0)
  {
    v31 = objc_msgSend(v28, sel_buffer);
    v32 = v28;
    v33 = objc_msgSend(v31, sel_contents);
    v34 = v31;
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE38578]), sel_init);
    objc_msgSend(v35, sel_setPositions_size_, v20, v18);
    objc_msgSend(v35, sel_setVertexColors_size_, v23, v18);
    objc_msgSend(v35, sel_setVertexNormals_size_, v26, v18);
    objc_msgSend(v35, sel_setFaces_size_, v33, v30);
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE38580]), sel_init);
    if (objc_msgSend(v35, sel_create_, v36))
    {

      return (uint64_t)v36;
    }
    v44 = sub_239275BB8();
    v46 = v59;
    v45 = v60;
    v47 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v58, v44, v59);
    v48 = (uint64_t)v57;
    sub_2392751F8(a1, (uint64_t)v57);
    v49 = sub_239352098();
    v50 = sub_23935256C();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v63 = v52;
      *(_DWORD *)v51 = 136380931;
      v62 = sub_23925F3EC(0xD000000000000012, 0x800000023935AC90, &v63);
      sub_2393526B0();
      *(_WORD *)(v51 + 12) = 2082;
      v56 = v51 + 14;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v53 = sub_2393528C0();
      v62 = sub_23925F3EC(v53, v54, &v63);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_23927523C(v48);
      _os_log_impl(&dword_23925B000, v49, v50, "%{private}s: Failed to create tri mesh for anchor %{public}s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v52, -1, -1);
      MEMORY[0x23B83BC04](v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
    }
    else
    {

      sub_23927523C(v48);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
    }
    return 0;
  }
LABEL_18:
  result = sub_23935283C();
  __break(1u);
  return result;
}

float32x2_t sub_239272220()
{
  float32x2_t *v0;

  return vadd_f32(v0[2], v0[4]);
}

double sub_239272244()
{
  float32x4_t *v0;

  return sub_2392E3884(v0[2]);
}

BOOL sub_23927224C()
{
  uint64_t v0;
  float v1;
  float v2;
  float v3;

  v1 = (*(float (**)(void))(*(_QWORD *)v0 + 112))();
  v2 = *(float *)sub_2392DCD14();
  v3 = sub_2392E3A5C();
  return sub_2392E3A6C(v2, v3, v1);
}

float32x4_t *sub_23927228C(float32x4_t a1, float32x4_t a2)
{
  swift_allocObject();
  return sub_2392722CC(a1, a2);
}

float32x4_t *sub_2392722CC(float32x4_t a1, float32x4_t a2)
{
  float32x4_t *v2;
  float32x4_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  const float *v8;
  float32x4_t v9;
  int32x4_t v10;
  float32x4_t v11;
  int32x4_t v12;
  unsigned __int32 v13;
  __int32 v14;
  BOOL v15;
  int32x4_t v16;
  unsigned __int32 v17;
  __int32 v18;
  BOOL v19;
  int32x4_t v20;
  unsigned __int32 v21;
  __int32 v22;
  BOOL v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int8x16_t v34;
  int32x2_t v35;
  float32x4_t v36;
  uint64_t v37;
  uint64_t v38;
  float32x4_t v39;
  int8x16_t v40;
  float32x4_t v41;
  uint64_t v42;

  v3 = v2;
  v39 = a1;
  v40 = (int8x16_t)a2;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (const float *)sub_2392DCD14();
  v9 = vld1q_dup_f32(v8);
  v9.i32[3] = 0;
  v2[3] = v9;
  v10 = (int32x4_t)vmvnq_s8(vorrq_s8((int8x16_t)vcltzq_f32(v39), (int8x16_t)vcgezq_f32(v39)));
  v15 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v10.i8, 1), v10).u32[0] == (vmovn_s32(v10).i32[1] & 1);
  v11 = (float32x4_t)vdupq_n_s32(0x7F800000u);
  v12 = vceqq_f32(vabsq_f32(v39), v11);
  v13 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v12.i8, 1), v12).u32[0];
  v14 = vmovn_s32(v12).i32[1] & 1;
  v15 = v15 && v13 == v14;
  v16 = (int32x4_t)vmvnq_s8(vorrq_s8((int8x16_t)vcltzq_f32((float32x4_t)v40), (int8x16_t)vcgezq_f32((float32x4_t)v40)));
  v17 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v16.i8, 1), v16).u32[0];
  v18 = vmovn_s32(v16).i32[1] & 1;
  v19 = v15 && v17 == v18;
  v20 = vceqq_f32(vabsq_f32((float32x4_t)v40), v11);
  v21 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v20.i8, 1), v20).u32[0];
  v22 = vmovn_s32(v20).i32[1] & 1;
  v23 = v19 && v21 == v22;
  if (v23
    && *(float *)v40.i32 >= 0.0
    && (v34 = v40,
        v34.i32[0] = vextq_s8(v34, v34, 8uLL).u32[0],
        v35 = vcgez_f32(*(float32x2_t *)v34.i8),
        (v35.i8[4] & 1) != 0)
    && (v35.i8[0] & 1) != 0)
  {
    v36 = (float32x4_t)v40;
    v2[1] = v39;
    v2[2] = v36;
  }
  else
  {
    v24 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
    v25 = sub_239352098();
    v26 = sub_23935256C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v42 = v38;
      *(_DWORD *)v27 = 136381187;
      v41.i64[0] = sub_23925F3EC(0xD000000000000017, 0x800000023935ACB0, &v42);
      sub_2393526B0();
      *(_WORD *)(v27 + 12) = 2082;
      v41 = v39;
      sub_23925FB08((uint64_t *)&unk_2569281A0);
      sub_239275298();
      v39.i64[0] = v4;
      v28 = sub_2393528F0();
      v41.i64[0] = sub_23925F3EC(v28, v29, &v42);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      v41 = (float32x4_t)v40;
      v30 = sub_2393528F0();
      v41.i64[0] = sub_23925F3EC(v30, v31, &v42);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v25, v26, "AABB.%{private}s: Invalid minCorner %{public}s or extent %{public}s for AABB!", (uint8_t *)v27, 0x20u);
      v32 = v38;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v32, -1, -1);
      MEMORY[0x23B83BC04](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v39.i64[0]);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    type metadata accessor for MeshUtils.AABB();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_23927266C(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  float32x4_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float32x4_t v16;
  float32x4_t v17;
  uint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  uint64_t v23;
  __n128 v24;
  float32x4_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  __n128 v42;
  __int128 v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;

  v7 = v6;
  v39 = a6;
  v38 = a5;
  v37 = a4;
  v36 = a3;
  v42 = (__n128)a1;
  v43 = (__int128)a2;
  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_2392E0EFC(v36, v37, v38, (int8x16_t)v39) & 1) == 0)
  {
    v26 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
    v27 = sub_239352098();
    v28 = sub_23935256C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v44.i64[0] = v30;
      *(_DWORD *)v29 = 136380931;
      v45.i64[0] = sub_23925F3EC(0xD000000000000021, 0x800000023935ACD0, (uint64_t *)&v44);
      sub_2393526B0();
      *(_WORD *)(v29 + 12) = 2082;
      v45 = v36;
      v46 = v37;
      v47 = v38;
      v48 = v39;
      type metadata accessor for simd_float4x4(0);
      v31 = sub_23935232C();
      v45.i64[0] = sub_23925F3EC(v31, v32, (uint64_t *)&v44);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v27, v28, "AABB.%{private}s: Invalid transform %{public}s for creating AABB from OBB!", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v30, -1, -1);
      MEMORY[0x23B83BC04](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return 0;
  }
  type metadata accessor for MeshUtils.AABB();
  swift_allocObject();
  v12 = sub_2392722CC((float32x4_t)v42, (float32x4_t)v43);
  if (!v12)
    return 0;
  v13 = (*(uint64_t (**)(void))(v12->i64[0] + 136))();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = 0;
    v16 = (float32x4_t)xmmword_2393548F0;
    v43 = xmmword_239354900;
    do
    {
      v41 = (float32x4_t)v43;
      v42 = (__n128)v16;
      v40 = v16;
      v17 = *(float32x4_t *)(v13 + 16 * v15++ + 32);
      v44 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v36, v17.f32[0]), v37, *(float32x2_t *)v17.f32, 1), v38, v17, 2), v39);
      v18 = sub_23925FB08(&qword_2569281B0);
      sub_2392E3890(v18);
      v19 = (float32x4_t)v42;
      v19.i32[3] = 0;
      v20 = v45;
      v20.i32[3] = 0;
      v16 = vminnmq_f32(v19, v20);
      v16.i32[3] = v40.i32[3];
      v21 = (float32x4_t)v43;
      v21.i32[3] = 0;
      v22 = vmaxnmq_f32(v21, v20);
      v22.i32[3] = v41.i32[3];
      v43 = (__int128)v22;
    }
    while (v14 != v15);
    v42 = (__n128)v16;
    v23 = swift_bridgeObjectRelease();
    v24 = v42;
    v25 = (float32x4_t)v43;
  }
  else
  {
    v23 = swift_bridgeObjectRelease();
    v24 = (__n128)xmmword_2393548F0;
    v25 = (float32x4_t)xmmword_239354900;
  }
  v34 = (__n128)vsubq_f32(v25, (float32x4_t)v24);
  v34.n128_u32[3] = 0;
  v33 = (*(uint64_t (**)(uint64_t, __n128, __n128))(v7 + 128))(v23, v24, v34);
  swift_retain();
  swift_release();
  if (v33)
    swift_release();
  return v33;
}

_QWORD *sub_239272A18()
{
  float32x4_t *v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  float32x4_t v6;
  float32x4_t v7;
  unint64_t v8;
  float32x4_t v9;
  __int128 v10;
  float v11;
  __int128 v12;
  float v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  float v38;
  float v39;
  float32x4_t v40;
  float v41;
  float v42;
  float v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  float32x4_t v53;
  float32x4_t v54;
  float32x4_t v55;
  __int32 v56;
  __int32 v57;
  __int32 v58;
  __int32 v59;
  float32x4_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;

  v60 = v0[1];
  v1 = sub_239275064(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v3 = v1[2];
  v2 = v1[3];
  v4 = v2 >> 1;
  v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    v1 = sub_239275064((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
    v2 = v1[3];
    v4 = v2 >> 1;
  }
  v1[2] = v5;
  v6 = v60;
  *(float32x4_t *)&v1[2 * v3 + 4] = v60;
  v7 = v0[2];
  v8 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    v53 = v7;
    v31 = sub_239275064((_QWORD *)(v2 > 1), v3 + 2, 1, v1);
    v7 = v53;
    v6 = v60;
    v1 = v31;
  }
  v9 = vaddq_f32(v6, v7);
  v10 = v9.u32[0];
  v11 = v6.f32[1] + 0.0;
  v12 = v9.u32[0];
  *((float *)&v12 + 1) = v6.f32[1] + 0.0;
  v13 = v6.f32[2] + 0.0;
  v14 = v12;
  *((float *)&v14 + 2) = v6.f32[2] + 0.0;
  v1[2] = v8;
  *(_OWORD *)&v1[2 * v5 + 4] = v14;
  v15 = v1[3];
  v16 = v3 + 3;
  if ((uint64_t)(v3 + 3) > (uint64_t)(v15 >> 1))
  {
    v48 = v9.u32[0];
    v54 = v9;
    v41 = v6.f32[1] + 0.0;
    v44 = v12;
    v38 = v6.f32[2] + 0.0;
    v32 = sub_239275064((_QWORD *)(v15 > 1), v3 + 3, 1, v1);
    v13 = v38;
    v11 = v41;
    v12 = v44;
    v10 = v48;
    v6.i32[0] = v60.i32[0];
    v9 = v54;
    v1 = v32;
  }
  DWORD1(v10) = v9.i32[1];
  v17 = v10;
  *((float *)&v17 + 2) = v13;
  v1[2] = v16;
  *(_OWORD *)&v1[2 * v8 + 4] = v17;
  v18 = v1[3];
  v19 = v3 + 4;
  if ((uint64_t)(v3 + 4) > (uint64_t)(v18 >> 1))
  {
    v49 = v10;
    v55 = v9;
    v42 = v11;
    v45 = v12;
    v39 = v13;
    v33 = sub_239275064((_QWORD *)(v18 > 1), v3 + 4, 1, v1);
    v13 = v39;
    v11 = v42;
    v12 = v45;
    v10 = v49;
    v6.i32[0] = v60.i32[0];
    v9 = v55;
    v1 = v33;
  }
  v6.i32[1] = 0;
  v6.i64[1] = 0;
  v6.f32[0] = v6.f32[0] + 0.0;
  v21 = v6.u32[0];
  DWORD1(v21) = v9.i32[1];
  v22 = v21;
  *((float *)&v22 + 2) = v13;
  v1[2] = v19;
  *(_OWORD *)&v1[2 * v16 + 4] = v22;
  v23 = v1[3];
  v24 = v3 + 5;
  if ((uint64_t)(v3 + 5) > (uint64_t)(v23 >> 1))
  {
    v50 = v10;
    v56 = v9.i32[2];
    v46 = v12;
    v61 = v21;
    v40 = v6;
    v43 = v11;
    v34 = sub_239275064((_QWORD *)(v23 > 1), v3 + 5, 1, v1);
    v6 = v40;
    v11 = v43;
    v21 = v61;
    v12 = v46;
    v10 = v50;
    v9.i32[2] = v56;
    v1 = v34;
  }
  v6.f32[1] = v11;
  v6.i32[2] = v9.i32[2];
  v1[2] = v24;
  *(float32x4_t *)&v1[2 * v19 + 4] = v6;
  v25 = v1[3];
  v26 = v3 + 6;
  if ((uint64_t)(v3 + 6) > (uint64_t)(v25 >> 1))
  {
    v51 = v10;
    v57 = v9.i32[2];
    v47 = v12;
    v62 = v21;
    v35 = sub_239275064((_QWORD *)(v25 > 1), v3 + 6, 1, v1);
    v21 = v62;
    v12 = v47;
    v10 = v51;
    v9.i32[2] = v57;
    v1 = v35;
  }
  DWORD2(v12) = v9.i32[2];
  v1[2] = v26;
  *(_OWORD *)&v1[2 * v24 + 4] = v12;
  v27 = v1[3];
  v28 = v3 + 7;
  if ((uint64_t)(v3 + 7) > (uint64_t)(v27 >> 1))
  {
    v52 = v10;
    v58 = v9.i32[2];
    v63 = v21;
    v36 = sub_239275064((_QWORD *)(v27 > 1), v3 + 7, 1, v1);
    v21 = v63;
    v10 = v52;
    v9.i32[2] = v58;
    v1 = v36;
  }
  DWORD2(v10) = v9.i32[2];
  v1[2] = v28;
  *(_OWORD *)&v1[2 * v26 + 4] = v10;
  v29 = v1[3];
  if ((uint64_t)(v3 + 8) > (uint64_t)(v29 >> 1))
  {
    v59 = v9.i32[2];
    v64 = v21;
    v37 = sub_239275064((_QWORD *)(v29 > 1), v3 + 8, 1, v1);
    v21 = v64;
    v9.i32[2] = v59;
    v1 = v37;
  }
  DWORD2(v21) = v9.i32[2];
  v1[2] = v3 + 8;
  *(_OWORD *)&v1[2 * v28 + 4] = v21;
  return v1;
}

float32x4_t *sub_239272D44(float32x2_t *a1)
{
  float32x2_t *v1;
  char v3;
  uint64_t v4;
  __int128 v5;
  char v6;
  float32x2_t v7;
  float v8;
  float32x4_t v9;
  float v10;
  float v11;
  float32x4_t v12;
  __int128 v14;
  __int128 v15;
  float32x4_t v16;
  __int128 v17;
  float32x4_t v18;

  v15 = *(_OWORD *)a1[2].f32;
  v17 = *(_OWORD *)v1[2].f32;
  v3 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 120))();
  v4 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 104))();
  if ((v3 & 1) != 0)
  {
    *(float32x2_t *)&v5 = vadd_f32(*(float32x2_t *)&v5, v1[6]);
    *((float *)&v5 + 2) = *((float *)&v5 + 2) + v1[7].f32[0];
    HIDWORD(v5) = 0;
  }
  v14 = v5;
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 120))(v4);
  (*(void (**)(void))(*(_QWORD *)a1 + 104))();
  if ((v6 & 1) != 0)
  {
    v7 = vadd_f32(v7, a1[6]);
    v8 = v8 + a1[7].f32[0];
  }
  *(int8x8_t *)v9.f32 = vbsl_s8((int8x8_t)vcge_f32(*(float32x2_t *)&v15, *(float32x2_t *)&v17), *(int8x8_t *)&v15, *(int8x8_t *)&v17);
  v10 = *((float *)&v17 + 2);
  if (*((float *)&v17 + 2) <= *((float *)&v15 + 2))
    v10 = *((float *)&v15 + 2);
  v11 = *((float *)&v14 + 2);
  if (v8 < *((float *)&v14 + 2))
    v11 = v8;
  *(float32x2_t *)v12.f32 = vsub_f32((float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)&v14, v7), (int8x8_t)v7, *(int8x8_t *)&v14), *(float32x2_t *)v9.f32);
  if (v12.f32[0] < 0.0 || v12.f32[1] < 0.0 || (float)(v11 - v10) < 0.0)
    return 0;
  v12.i64[1] = COERCE_UNSIGNED_INT(v11 - v10);
  v9.i64[1] = LODWORD(v10);
  v16 = v9;
  v18 = v12;
  type metadata accessor for MeshUtils.AABB();
  swift_allocObject();
  return sub_2392722CC(v16, v18);
}

void sub_239272E94()
{
  float32x2_t *v0;
  uint64_t v1;
  uint64_t v2;
  float32x4_t v3;
  double v4;
  float v5;
  float v6;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
  if (v1)
  {
    v2 = v1;
    if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))() & 1) != 0)
    {
      *(float32x2_t *)v3.f32 = vadd_f32(v0[4], v0[6]);
      v3.f32[2] = v0[5].f32[0] + v0[7].f32[0];
      v3.i32[3] = 0;
      v4 = sub_2392E3884(v3);
    }
    else
    {
      *(float *)&v4 = (*(float (**)(void))(*(_QWORD *)v0 + 112))();
    }
    v5 = *(float *)&v4;
    if (*(float *)&v4 <= 0.0)
    {
      __break(1u);
    }
    else
    {
      v6 = (*(float (**)(void))(*(_QWORD *)v2 + 112))();
      sub_2392DF050(v6 / v5, 0.0, 1.0);
      swift_release();
    }
  }
}

uint64_t sub_239272F54()
{
  return swift_deallocClassInstance();
}

float32x4_t *sub_239272F64()
{
  float32x4_t v0;
  float32x4_t v1;
  float32x4_t v3;
  float32x4_t v4;

  *(__n64 *)v0.f32 = OCBoundingBox.extent.getter();
  v4 = v0;
  *(float32x2_t *)v1.f32 = vmul_f32(vsub_f32(0, *(float32x2_t *)v0.f32), (float32x2_t)0x3F0000003F000000);
  v1.f32[2] = (float)(0.0 - v0.f32[2]) * 0.5;
  v1.i32[3] = 0;
  v3 = v1;
  type metadata accessor for MeshUtils.AABB();
  swift_allocObject();
  return sub_2392722CC(v3, v4);
}

uint64_t sub_239272FEC(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;

  v6 = v5;
  type metadata accessor for MeshUtils.AABB();
  v8 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  result = sub_23927266C(*(float32x4_t *)(a1 + *(int *)(v8 + 44)), *(float32x4_t *)(a1 + *(int *)(v8 + 48)), a2, a3, a4, a5);
  if (result)
  {
    (*(void (**)(void))(*(_QWORD *)v6 + 152))();
    return swift_release();
  }
  return result;
}

uint64_t sub_239273088(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  void *v47;
  unsigned int v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v76;
  unint64_t v77;
  __int128 v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  int *v84;
  void *v85;
  void *v86;
  float32x4_t *v87;
  float32x4_t v88;
  float32x4_t v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  uint64_t v95;
  int v96;
  int v97;
  float v98;
  float v99;
  float v100;
  id v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  int v108;
  int v109;
  BOOL v110;
  int v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  __int32 v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  id v135;
  NSObject *v136;
  os_log_type_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  NSObject *v152;
  os_log_type_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  NSObject *v165;
  os_log_type_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  uint64_t v171;
  void (*v172)(uint64_t, uint64_t);
  void (*v173)(uint64_t, uint64_t);
  uint64_t v174;
  char *v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t *v181;
  __int128 v182;
  char *v183;
  char *v184;
  char *v185;
  void (*v186)(char *, uint64_t);
  uint64_t v187;
  void (*v188)(uint64_t, uint64_t, uint64_t);
  void (*v189)(uint64_t, uint64_t, uint64_t);
  void (*v190)(uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  int *v213;
  char *v214;
  uint64_t v215;
  float32x4_t v216;
  float32x4_t v217;
  float32x4_t v218;
  float32x4_t v219;
  float32x4_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226[3];
  uint64_t v227;

  v208 = a3;
  v226[2] = *MEMORY[0x24BDAC8D0];
  v207 = sub_239352320();
  v206 = *(_QWORD *)(v207 - 8);
  v5 = MEMORY[0x24BDAC7A8](v207);
  v195 = (char *)&v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v204 = (char *)&v174 - v7;
  v213 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v211 = *((_QWORD *)v213 - 1);
  MEMORY[0x24BDAC7A8](v213);
  v9 = (char *)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_239351F3C();
  v220.i64[0] = *(_QWORD *)(v215 - 8);
  v10 = MEMORY[0x24BDAC7A8](v215);
  v194 = (char *)&v174 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v196 = (char *)&v174 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v174 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v193 = (char *)&v174 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v174 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v203 = (char *)&v174 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v212 = (char *)&v174 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v219.i64[0] = (uint64_t)&v174 - v26;
  v27 = sub_2393520B0();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v174 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v174 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  MEMORY[0x24BDAC7A8](v37);
  v39 = MEMORY[0x24BDAC7A8]((char *)&v174 - v38);
  v44 = (char *)&v174 - v43;
  v45 = *a1;
  v205 = *(_QWORD *)(*a1 + 16);
  if (!v205)
  {
    v70 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v33, v70, v27);
    v71 = sub_239352098();
    v72 = sub_23935256C();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v226[0] = v74;
      *(_DWORD *)v73 = 136380675;
      v223 = sub_23925F3EC(0xD000000000000021, 0x800000023935AD00, v226);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v71, v72, "MeshWriter.%{private}s: Failed to save mesh anchors - received empty mesh anchors!", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v74, -1, -1);
      MEMORY[0x23B83BC04](v73, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    return 0;
  }
  v209 = v39;
  v191 = v45;
  v183 = v42;
  v185 = v41;
  v184 = v40;
  v214 = v9;
  v222 = 0;
  v46 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v210 = a2;
  sub_239351F24();
  v47 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v46, sel_fileExistsAtPath_isDirectory_, v47, &v222);

  if (!v48 || v222 != 1)
  {
    v61 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v36, v61, v27);
    v62 = v220.i64[0];
    v63 = v215;
    (*(void (**)(char *, uint64_t, uint64_t))(v220.i64[0] + 16))(v16, v210, v215);
    v64 = sub_239352098();
    v65 = sub_23935256C();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v226[0] = v67;
      *(_DWORD *)v66 = 136380931;
      v223 = sub_23925F3EC(0xD000000000000021, 0x800000023935AD00, v226);
      v218.i64[0] = v28;
      v202 = v27;
      sub_2393526B0();
      *(_WORD *)(v66 + 12) = 2081;
      sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v68 = sub_2393528C0();
      v223 = sub_23925F3EC(v68, v69, v226);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v220.i64[0] + 8))(v16, v63);
      _os_log_impl(&dword_23925B000, v64, v65, "MeshWriter.%{private}s: Failed to save mesh anchors - %{private}s is not a directory!", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v67, -1, -1);
      MEMORY[0x23B83BC04](v66, -1, -1);

      (*(void (**)(char *, uint64_t))(v218.i64[0] + 8))(v36, v202);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v63);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
    }
    return 0;
  }
  v49 = sub_239275BB8();
  v218.i64[0] = v28;
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v187 = v49;
  v188 = v50;
  ((void (*)(char *))v50)(v44);
  v51 = v220.i64[0];
  v52 = v219.i64[0];
  v53 = v215;
  v189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v220.i64[0] + 16);
  v189(v219.i64[0], v210, v215);
  v54 = sub_239352098();
  v55 = sub_239352578();
  v56 = os_log_type_enabled(v54, v55);
  v202 = v27;
  v175 = v21;
  if (v56)
  {
    v57 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v226[0] = v58;
    *(_DWORD *)v57 = 136380931;
    v223 = sub_23925F3EC(0xD000000000000021, 0x800000023935AD00, v226);
    sub_2393526B0();
    *(_WORD *)(v57 + 12) = 2081;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v59 = sub_2393528C0();
    v223 = sub_23925F3EC(v59, v60, v226);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v190 = *(void (**)(uint64_t, uint64_t))(v220.i64[0] + 8);
    v190(v52, v215);
    _os_log_impl(&dword_23925B000, v54, v55, "MeshWriter.%{private}s: Saving mesh anchor at URL: %{private}s", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v58, -1, -1);
    MEMORY[0x23B83BC04](v57, -1, -1);
  }
  else
  {
    v190 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v190(v52, v53);
  }

  v186 = *(void (**)(char *, uint64_t))(v218.i64[0] + 8);
  v186(v44, v27);
  v192 = v191 + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
  v181 = &v224;
  swift_bridgeObjectRetain();
  v177 = 0;
  v76 = 0;
  v77 = 0;
  v197 = 0;
  *(_QWORD *)&v78 = 136380931;
  v182 = v78;
  v176 = (unint64_t)"xtent:transform:)";
  v180 = 0x800000023935AD00;
  v179 = MEMORY[0x24BEE4AD8] + 8;
  v79 = (char *)MEMORY[0x24BEE3F88];
  v178 = 0xE000000000000000;
  while (2)
  {
    v80 = v77;
    v81 = (uint64_t)v214;
    while (1)
    {
      if (__OFADD__(v80, 1))
        goto LABEL_62;
      v198 = v80 + 1;
      sub_2392751F8(v192 + *(_QWORD *)(v211 + 72) * v80, v81);
      v84 = v213;
      v85 = *(void **)(v81 + v213[5]);
      v86 = *(void **)(v81 + v213[6]);
      v87 = (float32x4_t *)(v81 + v213[9]);
      v88 = *v87;
      v218 = v87[1];
      v219 = v88;
      v89 = v87[2];
      v216 = v87[3];
      v217 = v89;
      v90 = v85;
      v91 = v86;
      v199 = sub_239274C80(v90, v86);
      v200 = v92;
      v201 = v93;

      v94 = *(id *)(v81 + v84[7]);
      v226[0] = 0;
      v226[1] = 0xE000000000000000;
      v95 = (uint64_t)objc_msgSend(v94, sel_count);
      v80 = 0xFFFFFFFF80000000;
      if (v95 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_63;
      v96 = v95;
      v80 = 0x7FFFFFFFLL;
      if (v95 > 0x7FFFFFFF)
        goto LABEL_64;
      if ((v95 & 0x80000000) != 0)
        goto LABEL_65;
      if ((_DWORD)v95)
      {
        v97 = 0;
        do
        {
          sub_239352590();
          v223 = 0;
          v224 = 0xE000000000000000;
          ++v97;
          v220 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v219, v98), v218, v99), v217, v100), (float32x4_t)0, v216);
          sub_239352380();
          sub_2393524E8();
          sub_239352380();
          sub_2393524E8();
          sub_239352380();
          sub_2393524E8();
          sub_239352380();
          sub_239352380();
          swift_bridgeObjectRelease();
        }
        while (v96 != v97);
        v217.i64[0] = v226[0];
        v218.i64[0] = v226[1];
        v81 = (uint64_t)v214;
      }
      else
      {
        v217.i64[0] = 0;
        v218.i64[0] = 0xE000000000000000;
      }
      v101 = objc_msgSend(v94, sel_count);

      v80 = v201;
      if ((id)v201 != v101)
        goto LABEL_66;
      v102 = *(void **)(v81 + v213[8]);
      if (v102)
      {
        v103 = v102;
        v226[0] = 0;
        v226[1] = 0xE000000000000000;
        v220.i64[0] = (uint64_t)v103;
        v104 = (uint64_t)objc_msgSend(v103, sel_count);
        if (v104 < 0)
          goto LABEL_67;
        if (v104)
        {
          v81 = 0;
          v219.i64[0] = v104;
          while (1)
          {
            v105 = sub_23935259C();
            sub_239352380();
            v106 = *(_QWORD *)(v105 + 16);
            if (v106)
              break;
LABEL_32:
            ++v81;
            swift_bridgeObjectRelease();
            sub_239352380();
            if (v81 == v219.i64[0])
              goto LABEL_42;
          }
          v80 = 0xFFFFFFFF80000000;
          if (v76 < (uint64_t)0xFFFFFFFF80000000)
          {
            __break(1u);
          }
          else
          {
            v80 = 0x7FFFFFFFLL;
            if (v76 <= 0x7FFFFFFF)
            {
              v107 = (int *)(v105 + 32);
              while (1)
              {
                v108 = *v107++;
                v223 = 32;
                v224 = 0xE100000000000000;
                v109 = v108 + 1;
                if (__OFADD__(v108, 1))
                  break;
                v110 = __OFADD__(v109, (_DWORD)v76);
                v111 = v109 + v76;
                if (v110)
                  goto LABEL_53;
                LODWORD(v225) = v111;
                sub_2393528C0();
                sub_239352380();
                swift_bridgeObjectRelease();
                sub_239352380();
                swift_bridgeObjectRelease();
                if (!--v106)
                  goto LABEL_32;
              }
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              swift_bridgeObjectRelease();
              (*(void (**)(int *, uint64_t))(v206 + 8))(v107, v207);
              swift_bridgeObjectRelease();
              v226[0] = v106;
              sub_23925FB08(&qword_2569273F8);
              sub_239275410();
              swift_dynamicCast();
              swift_bridgeObjectRelease();
              v144 = (void *)v223;
              v145 = v185;
              v146 = v202;
              v188((uint64_t)v185, v187, v202);
              v147 = v196;
              v148 = v81;
              v149 = v81;
              v150 = v215;
              v189((uint64_t)v196, v148, v215);
              v151 = v144;
              v152 = sub_239352098();
              v153 = sub_23935256C();
              if (os_log_type_enabled(v152, v153))
              {
                v154 = swift_slowAlloc();
                v219.i64[0] = swift_slowAlloc();
                v220.i64[0] = swift_slowAlloc();
                v225 = v220.i64[0];
                *(_DWORD *)v154 = 136381187;
                v221 = sub_23925F3EC(0xD000000000000021, v176 | 0x8000000000000000, &v225);
                sub_2393526B0();
                *(_WORD *)(v154 + 12) = 2081;
                sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
                v155 = sub_2393528C0();
                v221 = sub_23925F3EC(v155, v156, &v225);
                sub_2393526B0();
                swift_bridgeObjectRelease();
                v190((uint64_t)v147, v150);
                *(_WORD *)(v154 + 22) = 2112;
                v221 = (uint64_t)v151;
                v157 = v151;
                sub_2393526B0();
                v158 = v219.i64[0];
                *(_QWORD *)v219.i64[0] = v151;

                _os_log_impl(&dword_23925B000, v152, v153, "MeshWriter.%{private}s: Failed to save mesh anchor at %{private}s. Error: %@", (uint8_t *)v154, 0x20u);
                sub_23925FB08((uint64_t *)&unk_25692B7B0);
                swift_arrayDestroy();
                MEMORY[0x23B83BC04](v158, -1, -1);
                v159 = v220.i64[0];
                swift_arrayDestroy();
                MEMORY[0x23B83BC04](v159, -1, -1);
                MEMORY[0x23B83BC04](v154, -1, -1);

                v186(v145, v202);
                v190((uint64_t)v212, v150);
              }
              else
              {

                v160 = v190;
                v190((uint64_t)v147, v150);

                v186(v145, v146);
                v160(v149, v150);
              }
              sub_23927523C((uint64_t)v214);
LABEL_59:

              return 0;
            }
          }
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_42:
        v112 = (void *)v220.i64[0];
        objc_msgSend((id)v220.i64[0], sel_count);

      }
      if ((v208 & 1) == 0)
        break;
      v226[0] = v199;
      v226[1] = v200;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v114 = v226[0];
      v113 = v226[1];
      sub_239351FF0();
      strcpy((char *)v226, "mesh_anchor_");
      BYTE5(v226[1]) = 0;
      HIWORD(v226[1]) = -5120;
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v81 = (uint64_t)v212;
      sub_239351EF4();
      swift_bridgeObjectRelease();
      v226[0] = v114;
      v226[1] = v113;
      v107 = (int *)v204;
      sub_239352314();
      sub_2392753CC();
      v106 = v197;
      sub_2393526EC();
      if (v106)
        goto LABEL_54;
      v197 = 0;
      (*(void (**)(int *, uint64_t))(v206 + 8))(v107, v207);
      swift_bridgeObjectRelease();
      v115 = v202;
      v188(v209, v187, v202);
      v116 = v203;
      v117 = v215;
      v189((uint64_t)v203, v81, v215);
      v118 = sub_239352098();
      v119 = sub_239352578();
      v120 = v119;
      if (os_log_type_enabled(v118, v119))
      {
        v121 = swift_slowAlloc();
        v220.i64[0] = swift_slowAlloc();
        v226[0] = v220.i64[0];
        *(_DWORD *)v121 = v182;
        v219.i32[0] = v120;
        v223 = sub_23925F3EC(0xD000000000000021, v180, v226);
        sub_2393526B0();
        *(_WORD *)(v121 + 12) = 2081;
        sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v122 = sub_2393528C0();
        v223 = sub_23925F3EC(v122, v123, v226);
        v124 = v215;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        v125 = (void (*)(char *, uint64_t))v190;
        v190((uint64_t)v116, v124);
        _os_log_impl(&dword_23925B000, v118, (os_log_type_t)v219.i8[0], "MeshWriter.%{private}s: Saved mesh anchor at %{private}s", (uint8_t *)v121, 0x16u);
        v126 = v220.i64[0];
        swift_arrayDestroy();
        v127 = v126;
        v128 = (uint64_t)v214;
        MEMORY[0x23B83BC04](v127, -1, -1);
        MEMORY[0x23B83BC04](v121, -1, -1);

        v186((char *)v209, v202);
        v129 = v124;
        v81 = v128;
        v125(v212, v129);
        v83 = v128;
      }
      else
      {

        v82 = v190;
        v190((uint64_t)v116, v117);
        v186((char *)v209, v115);
        v82(v81, v117);
        v81 = (uint64_t)v214;
        v83 = (uint64_t)v214;
      }
      sub_23927523C(v83);
      v80 = v198;
      if (v198 == v205)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    v226[0] = v177;
    v226[1] = v178;
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v177 = v226[0];
    v178 = v226[1];
    sub_23927523C((uint64_t)v214);
    v110 = __OFADD__(v76, v201);
    v76 += v201;
    if (v110)
      __break(1u);
    v77 = v198;
    v81 = v215;
    if (v198 != v205)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v76 = (uint64_t)v175;
  sub_239351EF4();
  v226[0] = v177;
  v226[1] = v178;
  v79 = v195;
  sub_239352314();
  sub_2392753CC();
  v130 = v197;
  sub_2393526EC();
  v80 = (unint64_t)&v227;
  if (v130)
  {
    (*(void (**)(char *, uint64_t))(v206 + 8))(v79, v207);
    swift_bridgeObjectRelease();
    v226[0] = v130;
    sub_23925FB08(&qword_2569273F8);
    sub_239275410();
    swift_dynamicCast();
    v131 = (void *)v223;
    v132 = v184;
    v133 = v202;
    v188((uint64_t)v184, v187, v202);
    v134 = v194;
    v189((uint64_t)v194, v76, v81);
    v135 = v131;
    v136 = sub_239352098();
    v137 = sub_23935256C();
    if (os_log_type_enabled(v136, v137))
    {
      v138 = swift_slowAlloc();
      v219.i64[0] = swift_slowAlloc();
      v220.i64[0] = swift_slowAlloc();
      v225 = v220.i64[0];
      *(_DWORD *)v138 = 136381187;
      v221 = sub_23925F3EC(0xD000000000000021, v176 | 0x8000000000000000, &v225);
      sub_2393526B0();
      *(_WORD *)(v138 + 12) = 2081;
      sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v139 = sub_2393528C0();
      v221 = sub_23925F3EC(v139, v140, &v225);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      v190((uint64_t)v134, v81);
      *(_WORD *)(v138 + 22) = 2112;
      v221 = (uint64_t)v135;
      v141 = v135;
      sub_2393526B0();
      v142 = v219.i64[0];
      *(_QWORD *)v219.i64[0] = v135;

      _os_log_impl(&dword_23925B000, v136, v137, "MeshWriter.%{private}s: Failed to save mesh at %{private}s. Error: %@", (uint8_t *)v138, 0x20u);
      sub_23925FB08((uint64_t *)&unk_25692B7B0);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v142, -1, -1);
      v143 = v220.i64[0];
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v143, -1, -1);
      MEMORY[0x23B83BC04](v138, -1, -1);

      v186(v184, v202);
      v190((uint64_t)v175, v81);
    }
    else
    {

      v172 = v190;
      v190((uint64_t)v134, v81);

      v186(v132, v133);
      v172(v76, v81);
    }
    goto LABEL_59;
  }
LABEL_68:
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v80 - 256) + 8))(v79, v207);
  swift_bridgeObjectRelease();
  v161 = v183;
  v162 = v81;
  v163 = v202;
  v188((uint64_t)v183, v187, v202);
  v164 = v193;
  v189((uint64_t)v193, v76, v162);
  v165 = sub_239352098();
  v166 = sub_239352578();
  if (os_log_type_enabled(v165, v166))
  {
    v167 = swift_slowAlloc();
    v220.i64[0] = swift_slowAlloc();
    v226[0] = v220.i64[0];
    *(_DWORD *)v167 = v182;
    v223 = sub_23925F3EC(0xD000000000000021, v176 | 0x8000000000000000, v226);
    sub_2393526B0();
    *(_WORD *)(v167 + 12) = 2081;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v168 = sub_2393528C0();
    v223 = sub_23925F3EC(v168, v169, v226);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v170 = v190;
    v190((uint64_t)v164, v162);
    _os_log_impl(&dword_23925B000, v165, v166, "MeshWriter.%{private}s: Saved mesh anchor at %{private}s", (uint8_t *)v167, 0x16u);
    v171 = v220.i64[0];
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v171, -1, -1);
    MEMORY[0x23B83BC04](v167, -1, -1);

    v186(v161, v202);
    v170(v76, v162);
  }
  else
  {

    v173 = v190;
    v190((uint64_t)v164, v162);
    v186(v161, v163);
    v173(v76, v162);
  }
  return 1;
}

uint64_t sub_239274C80(void *a1, void *a2)
{
  char **v4;
  uint64_t result;
  int v6;
  int v7;
  id v8;

  v4 = &off_250AD4000;
  result = (uint64_t)objc_msgSend(a1, sel_count);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((result & 0x80000000) == 0)
  {
    if (!(_DWORD)result)
    {
LABEL_12:
      objc_msgSend(a1, v4[182]);
      return 0;
    }
    v7 = 0;
    while (v6 != v7)
    {
      sub_239352590();
      if (a2)
      {
        v8 = a2;
        sub_239352590();
        sub_2393527C4();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_239352380();

      }
      else
      {
        sub_2393527C4();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_2393524E8();
        sub_239352380();
        sub_239352380();
      }
      ++v7;
      result = swift_bridgeObjectRelease();
      if (v6 == v7)
      {
        v4 = &off_250AD4000;
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_239275028()
{
  return swift_deallocClassInstance();
}

double sub_239275038()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  result = 0.00781250185;
  *(_OWORD *)(v0 + 16) = xmmword_239354910;
  return result;
}

_QWORD *sub_239275064(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_25692C170);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2392752E4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_239275170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_2569281C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392751B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23925FB08(&qword_2569281C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2392751F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23927523C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MeshUtils.AABB()
{
  return objc_opt_self();
}

unint64_t sub_239275298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256927600;
  if (!qword_256927600)
  {
    v1 = sub_239262518((uint64_t *)&unk_2569281A0);
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE4120], v1);
    atomic_store(result, (unint64_t *)&qword_256927600);
  }
  return result;
}

char *sub_2392752E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_239352884();
  __break(1u);
  return result;
}

unint64_t sub_2392753CC()
{
  unint64_t result;

  result = qword_25692B660;
  if (!qword_25692B660)
  {
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25692B660);
  }
  return result;
}

unint64_t sub_239275410()
{
  unint64_t result;

  result = qword_25692B670;
  if (!qword_25692B670)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25692B670);
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshUtils()
{
  return &type metadata for MeshUtils;
}

uint64_t type metadata accessor for MeshWriter()
{
  return objc_opt_self();
}

void sub_239275498(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char **v9;
  id v10;
  void *v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char **v18;
  uint64_t v19;
  unint64_t v20;
  int *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  BOOL v25;
  int v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;

  sub_2392759EC(0, &qword_256927A80);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportedVideoFormats);
  sub_2392759EC(0, &qword_256927A88);
  v5 = sub_23935244C();

  if (v5 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v6 = sub_239352854();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease();
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_38;
LABEL_3:
  v28 = 0;
  v7 = 0;
  v8 = v5 & 0xC000000000000001;
  v33 = v5 & 0xFFFFFFFFFFFFFF8;
  v31 = 0;
  v32 = v5 + 32;
  v29 = 1;
  v9 = &off_250AD4000;
  v30 = v6;
  while (1)
  {
    while (1)
    {
      if (v8)
      {
        v10 = (id)MEMORY[0x23B83A68C](v7, v5);
      }
      else
      {
        if (v7 >= *(_QWORD *)(v33 + 16))
          goto LABEL_36;
        v10 = *(id *)(v32 + 8 * v7);
      }
      v11 = v10;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v13 = objc_msgSend(v10, v9[203]);
      v14 = sub_23935262C();

      if (objc_msgSend(v11, sel_isRecommendedForHighResolutionFrameCapturing))
      {
        v15 = *(_QWORD *)(v14 + 16);
        if (v15)
          break;
      }
      swift_bridgeObjectRelease();

      if (v7 == v6)
        goto LABEL_38;
    }
    v16 = v8;
    v17 = v5;
    v18 = v9;
    v19 = a2;
    v20 = 0;
    v21 = (int *)(v14 + 36);
    v22 = 1;
    do
    {
      if (*v21 <= a1)
      {
        v23 = *v21;
        if ((int)v23 <= SHIDWORD(v20))
          v24 = v20;
        else
          v24 = *(v21 - 1) | (unint64_t)(v23 << 32);
        v25 = (v22 & 1) == 0;
        v22 = 0;
        if (v25)
          v20 = v24;
        else
          v20 = *(v21 - 1) | (unint64_t)(v23 << 32);
      }
      v21 += 2;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      break;

    a2 = v19;
LABEL_25:
    v9 = v18;
LABEL_26:
    v5 = v17;
    v8 = v16;
LABEL_27:
    v6 = v30;
    if (v7 == v30)
      goto LABEL_38;
  }
  a2 = v19;
  if ((*(_BYTE *)(v19 + 8) & 1) != 0)
  {

    *(_QWORD *)v19 = v20;
    *(_BYTE *)(v19 + 8) = 0;
    v28 = objc_msgSend(v11, sel_framesPerSecond);
    v29 = 0;
    v31 = v11;
    goto LABEL_25;
  }
  v26 = *(_DWORD *)(v19 + 4);
  v9 = v18;
  if (v26 < SHIDWORD(v20))
  {

    *(_QWORD *)a2 = v20;
    *(_BYTE *)(a2 + 8) = 0;
    v28 = objc_msgSend(v11, sel_framesPerSecond);
    v29 = 0;
    v31 = v11;
    goto LABEL_26;
  }
  v27 = objc_msgSend(v11, sel_framesPerSecond);
  if ((v29 & 1) == 0)
  {
    v5 = v17;
    v8 = v16;
    if ((uint64_t)v27 >= (uint64_t)v28)
    {

      v29 = 0;
    }
    else
    {

      *(_QWORD *)a2 = v20;
      *(_BYTE *)(a2 + 8) = 0;
      v28 = objc_msgSend(v11, sel_framesPerSecond);
      v29 = 0;
      v31 = v11;
    }
    goto LABEL_27;
  }

  __break(1u);
}

id sub_2392757E4()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id sub_23927581C(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_239275858()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_239275888()
{
  id v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  sub_2392759EC(0, &qword_256927A80);
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportedVideoFormats);
  sub_2392759EC(0, &qword_256927A88);
  v1 = sub_23935244C();

  if (v1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B83A68C](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      if (objc_msgSend(v4, sel_isRecommendedForHighResolutionFrameCapturing)
        && objc_msgSend(v5, sel_framesPerSecond) == (id)30)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    v2 = sub_239352854();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2392759EC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for ARWorldTrackingConfigurationForObjectCapture()
{
  return objc_opt_self();
}

uint64_t sub_239275A44(uint64_t a1)
{
  return sub_239275C00(a1, qword_25692FD68);
}

uint64_t sub_239275A60()
{
  return sub_239275ACC(&qword_25692CAD0, (uint64_t)qword_25692FD68);
}

uint64_t sub_239275A7C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_239275A94(uint64_t a1)
{
  return sub_239275C00(a1, qword_25692FD80);
}

uint64_t sub_239275AB0()
{
  return sub_239275ACC(&qword_25692CAD8, (uint64_t)qword_25692FD80);
}

uint64_t sub_239275ACC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_2393520B0();
  return sub_239275A7C(v3, a2);
}

uint64_t sub_239275B0C(uint64_t a1)
{
  return sub_239275C00(a1, qword_25692FD98);
}

uint64_t sub_239275B30()
{
  return sub_239275ACC(&qword_25692CAE0, (uint64_t)qword_25692FD98);
}

uint64_t sub_239275B4C(uint64_t a1)
{
  return sub_239275C00(a1, qword_25692FDB0);
}

uint64_t sub_239275B74()
{
  return sub_239275ACC(&qword_25692CAE8, (uint64_t)qword_25692FDB0);
}

uint64_t sub_239275B90(uint64_t a1)
{
  return sub_239275C00(a1, qword_25692FDC8);
}

uint64_t sub_239275BB8()
{
  return sub_239275ACC(&qword_25692CAF0, (uint64_t)qword_25692FDC8);
}

uint64_t sub_239275BD4(uint64_t a1)
{
  return sub_239275C00(a1, qword_25692FDE0);
}

uint64_t sub_239275C00(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2393520B0();
  sub_239275CA0(v3, a2);
  sub_239275A7C(v3, (uint64_t)a2);
  return sub_2393520A4();
}

uint64_t sub_239275C74()
{
  return sub_239275ACC(&qword_25692CAF8, (uint64_t)qword_25692FDE0);
}

ValueMetadata *type metadata accessor for CoreOCLogger()
{
  return &type metadata for CoreOCLogger;
}

uint64_t *sub_239275CA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_239275CE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 128))();
  *a2 = result;
  return result;
}

uint64_t sub_239275D10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_239275D50()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_239275D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t ObjectCaptureImageFolderReader.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ObjectCaptureImageFolderReader.init(url:)(a1);
  return v2;
}

uint64_t ObjectCaptureImageFolderReader.init(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void **p_cache;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD *v27;
  int v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint8_t *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51[3];

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v42 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v42 - v10;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_invalidSampleIds) = MEMORY[0x24BEE4B08];
  p_cache = _TtC6CoreOC24OCObjectCentricPoseGraph.cache;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle) = 0;
  v13 = v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_url;
  v14 = sub_239351F3C();
  v48 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v13, a1, v14);
  v15 = sub_239275A60();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v46 = v15;
  v47 = v16;
  ((void (*)(char *))v16)(v11);
  swift_retain_n();
  v17 = sub_239352098();
  v18 = sub_239352578();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v43 = v14;
    v21 = v20;
    *(_DWORD *)v19 = 141558275;
    v50 = 1752392040;
    v51[0] = v20;
    v44 = v4;
    sub_2393526B0();
    *(_WORD *)(v19 + 12) = 2081;
    v42 = v5;
    v22 = sub_239351F30();
    v50 = sub_23925F3EC(v22, v23, v51);
    v4 = v44;
    sub_2393526B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v17, v18, "Object Capture Image folder Reader: Reader input URL: %{private,mask.hash}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v24 = v21;
    v14 = v43;
    MEMORY[0x23B83BC04](v24, -1, -1);
    v25 = v19;
    p_cache = (void **)(_TtC6CoreOC24OCObjectCentricPoseGraph + 16);
    MEMORY[0x23B83BC04](v25, -1, -1);

    v26 = *(void (**)(char *, uint64_t))(v42 + 8);
  }
  else
  {

    swift_release_n();
    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  }
  v26(v11, v4);
  v27 = (char *)p_cache[354] + v2;
  swift_beginAccess();
  v28 = OCNonModularSPI_CMPhoto_HeicReadCreate();
  swift_endAccess();
  v29 = v49;
  if (v28)
  {
    v47(v49, v46, v4);
    v30 = sub_239352098();
    v31 = sub_23935256C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = v14;
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23925B000, v30, v31, "Image Folder Reader: Failed to initialize the image folder reader.", v33, 2u);
      v34 = v33;
      v14 = v32;
      MEMORY[0x23B83BC04](v34, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(a1, v14);
    v35 = v29;
  }
  else
  {
    if (!OCNonModularSPI_CMPhoto_HeicReadStart())
    {
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(a1, v14);
      return v2;
    }
    OCNonModularSPI_CMPhoto_HeicReadDestroy();
    *v27 = 0;
    v47(v45, v46, v4);
    v36 = sub_239352098();
    v37 = sub_23935256C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = v14;
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23925B000, v36, v37, "Image Folder Reader: Failed to start the image folder reader.", v39, 2u);
      v40 = v39;
      v14 = v38;
      MEMORY[0x23B83BC04](v40, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(a1, v14);
    v35 = v45;
  }
  v26(v35, v4);
  return v2;
}

uint64_t ObjectCaptureImageFolderReader.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int Stop;
  int Destroy;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Stop = OCNonModularSPI_CMPhoto_HeicReadStop();
  Destroy = OCNonModularSPI_CMPhoto_HeicReadDestroy();
  v8 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 67240448;
    HIDWORD(v15) = Stop;
    sub_2393526B0();
    *(_WORD *)(v11 + 8) = 1026;
    HIDWORD(v15) = Destroy;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "Image Folder Reader: HEIC bundle reader stopped with state %{public}d and destroyed with state %{public}d", (uint8_t *)v11, 0xEu);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_url;
  v13 = sub_239351F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ObjectCaptureImageFolderReader.__deallocating_deinit()
{
  ObjectCaptureImageFolderReader.deinit();
  return swift_deallocClassInstance();
}

_QWORD *sub_239276468()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
  swift_beginAccess();
  if (*v2)
  {
    v3 = sub_23927B138();
    if (!v1)
    {
      v4 = v3;
      v5 = *(_QWORD *)(v3 + 16);
      swift_beginAccess();
      *(_QWORD *)(v0 + 16) = v5;
      *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId) = 0;
      sub_23925FB08(&qword_256927AC0);
      v1 = (_QWORD *)swift_allocObject();
      v1[2] = v4;
      v1[3] = sub_23927D614;
      v1[4] = v0;
      v1[5] = sub_239278CA8;
      v1[6] = 0;
      v1[7] = sub_239278D44;
      v1[8] = 0;
      swift_retain();
    }
  }
  else
  {
    sub_23927D5D0();
    v6 = swift_allocError();
    *(_QWORD *)v7 = 0xD000000000000051;
    *(_QWORD *)(v7 + 8) = 0x800000023935AEC0;
    *(_BYTE *)(v7 + 16) = 1;
    v1 = (_QWORD *)v6;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_23927659C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _BYTE *v51;
  void **v52;
  void *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE v56[4];
  int v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  void (*v62)(_BYTE *, char *, uint64_t);
  void (*v63)(_QWORD, _QWORD, _QWORD);
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[3];

  v6 = type metadata accessor for PhotogrammetrySample(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v59 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v60 = &v56[-v9];
  v70 = sub_239351F3C();
  v10 = *(_QWORD *)(v70 - 8);
  v11 = MEMORY[0x24BDAC7A8](v70);
  v66 = &v56[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v56[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v56[-v16];
  v18 = sub_2393520B0();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = &v56[-v21];
  result = MEMORY[0x24BDAC7A8](v20);
  v27 = &v56[-v26];
  v71 = a2;
  v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId);
  if (__OFADD__(v28, 1))
  {
    __break(1u);
  }
  else
  {
    v64 = a3;
    v68 = v24;
    *(_QWORD *)(v71 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId) = v28 + 1;
    v29 = v25;
    v30 = a1;
    v58 = type metadata accessor for PhotogrammetryImageHelper();
    v31 = sub_23926E354();
    v32 = sub_239275A60();
    v65 = v29;
    v33 = *(void (**)(_QWORD, _QWORD, _QWORD))(v29 + 16);
    v67 = v28;
    v69 = v30;
    v63 = v33;
    if ((v31 & 1) == 0)
    {
      v33(v22, v32, v18);
      v41 = v70;
      v62 = *(void (**)(_BYTE *, char *, uint64_t))(v10 + 16);
      v62(v15, v30, v70);
      v42 = v18;
      v43 = sub_239352098();
      v44 = sub_239352578();
      v45 = v44;
      if (os_log_type_enabled(v43, v44))
      {
        v46 = swift_slowAlloc();
        v57 = v45;
        v47 = v46;
        v60 = (_BYTE *)swift_slowAlloc();
        v73[0] = (uint64_t)v60;
        *(_DWORD *)v47 = 134349571;
        v72 = v28;
        sub_2393526B0();
        *(_WORD *)(v47 + 12) = 2160;
        v72 = 1752392040;
        sub_2393526B0();
        *(_WORD *)(v47 + 22) = 2081;
        v48 = v28;
        v61 = v42;
        v49 = sub_239351F30();
        v72 = sub_23925F3EC(v49, v50, v73);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v41);
        _os_log_impl(&dword_23925B000, v43, (os_log_type_t)v57, "Image Folder Reader: Reading sample from non-HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v47, 0x20u);
        v51 = v60;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v51, -1, -1);
        MEMORY[0x23B83BC04](v47, -1, -1);

        v65 = *(_QWORD *)(v65 + 8);
        ((void (*)(_BYTE *, uint64_t))v65)(v22, v61);
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v41);

        v48 = v28;
        v65 = *(_QWORD *)(v65 + 8);
        ((void (*)(_BYTE *, uint64_t))v65)(v22, v42);
      }
      v54 = v59;
      sub_23926CB28(v48, v69, (uint64_t)v59);
      v55 = v64;
      goto LABEL_12;
    }
    v33(v27, v32, v18);
    v34 = v70;
    v62 = *(void (**)(_BYTE *, char *, uint64_t))(v10 + 16);
    v62(v17, v30, v70);
    v35 = sub_239352098();
    v36 = sub_239352578();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v59 = (_BYTE *)swift_slowAlloc();
      v73[0] = (uint64_t)v59;
      *(_DWORD *)v37 = 134349571;
      v72 = v28;
      v61 = v18;
      sub_2393526B0();
      *(_WORD *)(v37 + 12) = 2160;
      v72 = 1752392040;
      sub_2393526B0();
      *(_WORD *)(v37 + 22) = 2081;
      v38 = sub_239351F30();
      v72 = sub_23925F3EC(v38, v39, v73);
      v18 = v61;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v17, v70);
      _os_log_impl(&dword_23925B000, v35, v36, "Image Folder Reader: Reading sample from HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v37, 0x20u);
      v40 = v59;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v40, -1, -1);
      MEMORY[0x23B83BC04](v37, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v17, v34);
    }

    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v27, v18);
    v52 = (void **)(v71 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
    result = swift_beginAccess();
    v53 = *v52;
    v54 = v60;
    if (v53)
    {
      type metadata accessor for ObjectCaptureImageFolderReader();
      sub_239276E20(v67, (uint64_t)v69, v53, (uint64_t)v54);
      v55 = v64;
LABEL_12:
      sub_23927D72C((uint64_t)v54, v55);
      sub_23925FB08(&qword_256927C50);
      return swift_storeEnumTagMultiPayload();
    }
  }
  __break(1u);
  return result;
}

void sub_239276E20(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t);
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void *v58;
  int v59;
  simd_float4 v60;
  simd_float4 *v61;
  __CVBuffer *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  unint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint8_t *v83;
  id v84;
  __CVBuffer *v85;
  id *v86;
  __CVBuffer *v87;
  id *v88;
  __CVBuffer *v89;
  id *v90;
  id v91;
  uint64_t v92;
  id *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  char v103;
  char v104;
  unint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  const char *v109;
  simd_float4 v110;
  simd_float4 *v111;
  simd_float4 v112;
  void *v113;
  simd_float4 *v114;
  id v115;
  simd_float4 v116;
  simd_float4 *v117;
  int *v118;
  uint64_t v119;
  simd_float4 v120;
  simd_float4 *v121;
  id *v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t);
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  char *v129;
  char *v130;
  NSObject *v131;
  os_log_type_t v132;
  uint8_t *v133;
  uint64_t v134;
  uint64_t v135;
  void (**v136)(_QWORD, uint64_t, _QWORD);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  uint8_t *v143;
  char v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  void *v148;
  id v149;
  uint64_t v150;
  id *v151;
  id *v152;
  char *v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  simd_float4x4 *v158;
  uint64_t v159;
  simd_float4 v160;
  simd_float4 v161;
  uint64_t v162;
  uint64_t v163;
  simd_float4 *v164;
  uint64_t *v165;
  uint64_t *v166;
  char *v167;
  NSObject *v168;
  os_log_type_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (*v184)(uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  void (*v189)(char *, uint64_t);
  float32x4_t v190;
  float32x4_t v191;
  float32x4_t v192;
  float32x4_t v193;
  uint32x4_t v194;
  id *v195;
  uint64_t v196;
  float32x4_t v197;
  float32x4_t v198;
  float32x4_t v199;
  float32x4_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unsigned int (*v207)(uint64_t, uint64_t, uint64_t);
  unsigned int v208;
  uint64_t v209;
  id v210;
  void *v211;
  id v212;
  uint64_t v213;
  void *v214;
  NSObject *v215;
  os_log_type_t v216;
  uint8_t *v217;
  uint8_t *v218;
  uint64_t v219;
  uint64_t v220;
  NSObject *v221;
  uint64_t v222;
  os_log_type_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  id *v228;
  uint64_t v229;
  id v230;
  __CVBuffer *v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  __n128 v235;
  __n128 v236;
  id v237;
  id v238;
  void (*v239)(char *, uint64_t);
  uint64_t v240;
  char *v241;
  uint64_t v242;
  __n128 v243;
  __n128 v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  int8x16_t v249;
  float32x4_t v250;
  float32x4_t v251;
  void (*v252)(char *, uint64_t, uint64_t);
  uint64_t v253;
  float32x4_t v254;
  char *v255;
  id v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  int *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(char *, uint64_t, uint64_t);
  uint64_t v265;
  id *v266;
  id v267;
  uint64_t v268;
  unint64_t v269;
  id v270;
  uint64_t v271;
  uint64_t v272;
  CoreOC::PhotogrammetrySample::Object v273;
  _OWORD v274[3];
  CoreOC::PhotogrammetrySample::Scene v275[2];
  __int128 v276;
  __int128 v277;
  __int128 v278;
  float32x4_t v279;
  float32x4_t v280;
  float32x4_t v281;
  float32x4_t v282;
  int v283;
  float32x4_t v284;
  float32x4_t v285;
  float32x4_t v286;
  void *v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  float32x4_t v296;
  float32x4_t v297;
  float32x4_t v298;
  int8x16_t v299;
  __int128 v300;
  int v301;
  __int128 v302;
  __int128 v303;
  _OWORD v304[4];
  char v305;
  _QWORD v306[8];
  char v307;
  uint64_t v308;

  v270 = a3;
  v262 = a1;
  v253 = a4;
  v308 = *MEMORY[0x24BDAC8D0];
  v5 = sub_23925FB08(&qword_256927628);
  MEMORY[0x24BDAC7A8](v5);
  v242 = (uint64_t)&v229 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v7);
  v248 = (char *)&v229 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239352680();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v229 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v259 = (uint64_t)&v229 - v13;
  v250.i64[0] = sub_239351FD8();
  v256 = *(id *)(v250.i64[0] - 8);
  MEMORY[0x24BDAC7A8](v250.i64[0]);
  v254.i64[0] = (uint64_t)&v229 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23925FB08(&qword_256927018);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v251.i64[0] = (uint64_t)&v229 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v258 = (uint64_t)&v229 - v18;
  v260 = (int *)type metadata accessor for PhotogrammetrySample(0);
  MEMORY[0x24BDAC7A8](v260);
  v266 = (id *)((char *)&v229 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_239351F3C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v255 = (char *)&v229 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v229 - v24;
  v26 = sub_2393520B0();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v257 = (char *)&v229 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v246 = (char *)&v229 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v245 = (char *)&v229 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v249.i64[0] = (uint64_t)&v229 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v247 = (char *)&v229 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v243.n128_u64[0] = (unint64_t)&v229 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v244.n128_u64[0] = (unint64_t)&v229 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v261 = (char *)&v229 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&v229 - v44;
  v46 = sub_239275A60();
  v269 = v27;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v263 = v46;
  v264 = v47;
  ((void (*)(char *))v47)(v45);
  v267 = v25;
  v268 = v21;
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v272 = a2;
  v252 = v48;
  v48(v25, a2, v20);
  v49 = sub_239352098();
  v50 = sub_239352578();
  v51 = os_log_type_enabled(v49, v50);
  v241 = v12;
  if (v51)
  {
    v52 = swift_slowAlloc();
    v240 = swift_slowAlloc();
    *(_QWORD *)&v276 = v240;
    *(_DWORD *)v52 = 141558275;
    v275[0].boundingBox.columns[0].i64[0] = 1752392040;
    v271 = v26;
    sub_2393526B0();
    *(_WORD *)(v52 + 12) = 2081;
    v265 = v20;
    v53 = v267;
    v54 = sub_239351F30();
    v275[0].boundingBox.columns[0].i64[0] = sub_23925F3EC(v54, v55, (uint64_t *)&v276);
    v26 = v271;
    v20 = v265;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v268 = *(_QWORD *)(v268 + 8);
    ((void (*)(id, uint64_t))v268)(v53, v20);
    _os_log_impl(&dword_23925B000, v49, v50, "Image Folder Reader: Trying to read sample %{private,mask.hash}s.", (uint8_t *)v52, 0x16u);
    v56 = v240;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v56, -1, -1);
    MEMORY[0x23B83BC04](v52, -1, -1);
  }
  else
  {
    v268 = *(_QWORD *)(v268 + 8);
    ((void (*)(id, uint64_t))v268)(v267, v20);
  }

  v57 = *(void (**)(char *, uint64_t))(v269 + 8);
  v57(v45, v26);
  v283 = 0;
  v281 = 0u;
  v282 = 0u;
  v279 = 0u;
  v280 = 0u;
  v277 = 0u;
  v278 = 0u;
  v276 = 0u;
  v284 = 0u;
  v285 = 0u;
  v286 = 0u;
  v287 = 0;
  v288 = 0u;
  v289 = 0u;
  v290 = 0u;
  v291 = 0u;
  v292 = 0u;
  v293 = 0u;
  v294 = 0u;
  v295 = 0u;
  v296 = 0u;
  v297 = 0u;
  v298 = 0u;
  v299 = 0u;
  v300 = 0u;
  v301 = 0;
  v302 = 0u;
  v303 = 0u;
  v58 = (void *)sub_239351ED0();
  v59 = OCNonModularSPI_CMPhoto_read();

  if (v59)
  {
    v275[0].boundingBox.columns[0].i64[0] = 0;
    v275[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
    sub_2393527C4();
    sub_239352380();
    sub_239351F30();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    v60 = v275[0].boundingBox.columns[0];
    sub_23927D5D0();
    swift_allocError();
    *v61 = v60;
    v61[1].i8[0] = 1;
    swift_willThrow();
    return;
  }
  v239 = v57;
  v265 = v20;
  v271 = v26;
  v62 = (__CVBuffer *)v276;
  if ((_QWORD)v276)
  {
    v63 = (void *)*((_QWORD *)&v277 + 1);
    v267 = (id)v278;
    v270 = (id)v277;
    v64 = (void *)*((_QWORD *)&v276 + 1);
    v65 = (void *)*((_QWORD *)&v303 + 1);
    v66 = (void *)*((_QWORD *)&v278 + 1);
    v67 = (void *)*((_QWORD *)&v300 + 1);
    if (*((_QWORD *)&v300 + 1))
    {
      v233 = sub_2393522F0();
      v69 = v68;

      v70 = (void *)v302;
      if ((_QWORD)v302)
        goto LABEL_9;
    }
    else
    {
      v233 = 0;
      v69 = 0;
      v70 = (void *)v302;
      if ((_QWORD)v302)
      {
LABEL_9:
        v232 = sub_2393522F0();
        v236.n128_u64[0] = v71;

        v72 = v287;
        if (v287)
        {
LABEL_10:
          v275[0].boundingBox.columns[0].i64[0] = 0;
          sub_239352278();

          v73 = v275[0].boundingBox.columns[0].i64[0];
          goto LABEL_14;
        }
LABEL_13:
        v73 = 0;
LABEL_14:
        v74 = (void *)v300;
        v238 = v65;
        if ((_QWORD)v300)
        {
          v240 = sub_239351F6C();
          v269 = v75;

        }
        else
        {
          v240 = 0;
          v269 = 0xF000000000000000;
        }
        v76 = MEMORY[0x24BEE4AF8];
        v237 = (id)v303;
        if ((_QWORD)v303)
        {
          v275[0].boundingBox.columns[0].i64[0] = 0;
          v77 = (id)v303;
          sub_23925FB08(&qword_256927010);
          sub_239352440();

          if (v275[0].boundingBox.columns[0].i64[0])
            v78 = v275[0].boundingBox.columns[0].i64[0];
          else
            v78 = v76;
        }
        else
        {
          v78 = MEMORY[0x24BEE4AF8];
        }
        if (!sub_2392961B0(v62))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v275[0].boundingBox.columns[0].i64[0] = 0;
          v275[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
          sub_2393527C4();
          sub_239352380();
          v273.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v62);
          sub_2393528C0();
          sub_239352380();
          swift_bridgeObjectRelease();
          sub_239352380();
          v110 = v275[0].boundingBox.columns[0];
          sub_23927D5D0();
          swift_allocError();
          *v111 = v110;
          v111[1].i8[0] = 1;
          swift_willThrow();

          sub_23927DACC(v240, v269);
          return;
        }
        v234 = v64;
        v235.n128_u64[0] = v78;
        v231 = v62;
        PhotogrammetrySample.init(id:image:)(v262, (uint64_t)v231, (uint64_t)v266);
        v79 = v261;
        v264(v261, v263, v271);
        v80 = sub_239352098();
        v81 = sub_239352560();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v82 = 134349056;
          v275[0].boundingBox.columns[0].i64[0] = v262;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v80, v81, "Image Folder Reader: Initiate sample (id = %{public}ld)", v82, 0xCu);
          v83 = v82;
          v79 = v261;
          MEMORY[0x23B83BC04](v83, -1, -1);
        }

        v239(v79, v271);
        v84 = v270;
        if (v270)
        {
          v85 = (__CVBuffer *)v270;
          if (!sub_2392962D4(v85))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v275[0].boundingBox.columns[0].i64[0] = 0;
            v275[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
            sub_2393527C4();
            sub_239352380();
            v273.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v85);
            sub_2393528C0();
            sub_239352380();
            swift_bridgeObjectRelease();
            sub_239352380();
            v112 = v275[0].boundingBox.columns[0];
            sub_23927D5D0();
            v113 = v63;
            swift_allocError();
            *v114 = v112;
            v114[1].i8[0] = 1;
            swift_willThrow();

            sub_23927DACC(v240, v269);
            v115 = v267;
            goto LABEL_44;
          }
          v86 = v266;

          v86[3] = v84;
        }
        if (v63)
        {
          v87 = v63;
          if (!sub_239296494(v87))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v275[0].boundingBox.columns[0].i64[0] = 0;
            v275[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
            sub_2393527C4();
            sub_239352380();
            v273.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v87);
            sub_2393528C0();
            sub_239352380();
            swift_bridgeObjectRelease();
            sub_239352380();
            v116 = v275[0].boundingBox.columns[0];
            sub_23927D5D0();
            swift_allocError();
            *v117 = v116;
            v117[1].i8[0] = 1;
            swift_willThrow();

            sub_23927DACC(v240, v269);
LABEL_45:
            v122 = v266;
LABEL_108:
            sub_2392688AC((uint64_t)v122, type metadata accessor for PhotogrammetrySample);
            return;
          }
          v88 = v266;

          v88[4] = v63;
        }
        if (!v267)
        {
LABEL_34:
          v229 = v73;
          v230 = v63;
          if (!v234
            || (v275[0].boundingBox.columns[0].i64[0] = 0,
                v91 = v234,
                sub_239352278(),
                v91,
                (v92 = v275[0].boundingBox.columns[0].i64[0]) == 0))
          {
            v261 = 0;
            v118 = v260;
            v119 = v250.i64[0];
LABEL_53:
            type metadata accessor for PhotogrammetryImageHelper();
            v134 = v258;
            sub_23926DA20(v272, v258);
            v135 = v251.i64[0];
            sub_23926059C(v134, v251.i64[0], &qword_256927018);
            v136 = (void (**)(_QWORD, uint64_t, _QWORD))v256;
            if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v256 + 6))(v135, 1, v119) == 1)
            {
              sub_23925FE28(v135, &qword_256927018);
            }
            else
            {
              v137 = v254.i64[0];
              v136[4](v254.i64[0], v135, v119);
              v138 = (uint64_t)v266 + v118[18];
              sub_23925FE28(v138, &qword_256927018);
              v136[2](v138, v137, v119);
              ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v136[7])(v138, 0, 1, v119);
              v139 = v249.i64[0];
              v264((char *)v249.i64[0], v263, v271);
              v140 = sub_239352098();
              v141 = sub_239352578();
              if (os_log_type_enabled(v140, v141))
              {
                v142 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)v142 = 134349056;
                v139 = v249.i64[0];
                v275[0].boundingBox.columns[0].i64[0] = v262;
                sub_2393526B0();
                _os_log_impl(&dword_23925B000, v140, v141, "Image Folder Reader: Parsed EXIF capture timestamp field of sample (id = %{public}ld)", v142, 0xCu);
                v143 = v142;
                v118 = v260;
                MEMORY[0x23B83BC04](v143, -1, -1);
              }

              v239((char *)v139, v271);
              (*((void (**)(uint64_t, uint64_t))v256 + 1))(v254.i64[0], v119);
            }
            v144 = sub_2392C54E0(v283);
            if (v144 == 6)
              v144 = 0;
            sub_2392C550C(v144);
            if (v269 >> 60 != 15)
            {
              v145 = objc_allocWithZone(MEMORY[0x24BDB1510]);
              v146 = v240;
              v147 = v269;
              sub_23927DB24(v240, v269);
              v148 = (void *)sub_239351F60();
              v149 = objc_msgSend(v145, sel_initWithPointData_, v148);
              sub_23927DACC(v146, v147);

              v150 = v260[16];
              v151 = v266;

              *(id *)((char *)v151 + v150) = v149;
              v118 = v260;
            }
            ObjectCaptureSession.Frame.Feedback.init(rawValue:)(SHIDWORD(v302));
            v152 = v266;
            v153 = (char *)v266 + v118[22];
            *(_QWORD *)v153 = v275[0].boundingBox.columns[0].i64[0];
            v153[8] = 0;
            v154 = v152[10];
            v256 = v66;

            v152[10] = v66;
            if (SDWORD2(v302) == 1)
            {
              v254 = v296;
              v250 = v298;
              v251 = v297;
              v249 = v299;
              v159 = sub_2392DF8CC(v296, v297, v298, v299);
              v155 = v271;
              v156 = v233;
              if ((v159 & 1) != 0)
              {
                PhotogrammetrySample.Scene.init(boundingBox:)(v275, (simd_float4x4 *)v159);
                v160 = v275[0].boundingBox.columns[1];
                v161 = v275[0].boundingBox.columns[2];
                v162 = v275[0].boundingBox.columns[3].i64[1];
                v163 = v275[0].boundingBox.columns[3].i64[0];
                v164 = (simd_float4 *)((char *)v152 + v118[14]);
                *v164 = v275[0].boundingBox.columns[0];
                v164[1] = v160;
                v164[2] = v161;
                v164[3].i64[0] = v163;
                v164[3].i64[1] = v162;
                v164[4].i8[0] = 0;
              }
            }
            else
            {
              v155 = v271;
              v156 = v233;
              v254 = v296;
              v250 = v298;
              v251 = v297;
              v249 = v299;
              v157 = sub_2392DF8CC(v296, v297, v298, v299);
              if ((v157 & 1) != 0)
              {
                PhotogrammetrySample.Object.init(transform:boundingBox:)(&v273, (simd_float4x4 *)v157, v158);
                v275[0] = (CoreOC::PhotogrammetrySample::Scene)v273.transform;
                v275[1] = (CoreOC::PhotogrammetrySample::Scene)v273.boundingBox;
                sub_2392688E8((uint64_t)v275);
                sub_239268764((uint64_t)v275, (uint64_t)v152 + v118[13], &qword_256927630);
              }
            }
            v165 = (uint64_t *)((char *)v152 + v118[21]);
            swift_bridgeObjectRelease();
            *v165 = v156;
            v165[1] = v69;
            if (v69)
            {
              swift_bridgeObjectRetain();
              v166 = (uint64_t *)sub_239351B38();
              if (*v166 == v156 && v69 == v166[1] || (sub_2393528CC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v167 = v245;
                v264(v245, v263, v155);
                swift_bridgeObjectRetain();
                v168 = sub_239352098();
                v169 = sub_23935256C();
                if (os_log_type_enabled(v168, v169))
                {
                  v170 = swift_slowAlloc();
                  v254.i64[0] = swift_slowAlloc();
                  v275[0].boundingBox.columns[0].i64[0] = v254.i64[0];
                  *(_DWORD *)v170 = 136446466;
                  swift_bridgeObjectRetain();
                  v273.transform.columns[0].i64[0] = sub_23925F3EC(v156, v69, (uint64_t *)v275);
                  sub_2393526B0();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v170 + 12) = 2082;
                  v171 = *v166;
                  v172 = v166[1];
                  swift_bridgeObjectRetain();
                  v273.transform.columns[0].i64[0] = sub_23925F3EC(v171, v172, (uint64_t *)v275);
                  sub_2393526B0();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_23925B000, v168, v169, "Image Folder Reader: The version of the object capture bundle (version = %{public}s) and the bundle reader (version = %{public}s) are different.", (uint8_t *)v170, 0x16u);
                  v173 = v254.i64[0];
                  swift_arrayDestroy();
                  MEMORY[0x23B83BC04](v173, -1, -1);
                  MEMORY[0x23B83BC04](v170, -1, -1);

                  v174 = v245;
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  v174 = v167;
                }
                v239(v174, v155);
                v152 = v266;
              }
              v118 = v260;
            }
            v175 = (char *)v152 + v118[20];
            *(_QWORD *)v175 = v301;
            v175[8] = 0;
            if (v236.n128_u64[0])
            {
              v176 = (uint64_t)v248;
              sub_239351FE4();
              swift_bridgeObjectRelease();
              sub_239267C70(v176, (uint64_t)v152 + v118[19], &qword_2569281C0);
            }
            v177 = (char *)v152 + v118[15];
            *(_QWORD *)v177 = SDWORD2(v302);
            v177[8] = 0;
            v178 = *((_QWORD *)&v288 + 1);
            v254.i64[0] = *((_QWORD *)&v289 + 1);
            v248 = (char *)v289;
            v249.i64[0] = v288;
            v251.i64[0] = *((_QWORD *)&v290 + 1);
            v247 = (char *)v290;
            v250.i64[0] = *((_QWORD *)&v291 + 1);
            v245 = (char *)v291;
            v179 = (id *)((char *)v152 + v118[23]);
            *v179 = MEMORY[0x24BEE4AF8];
            swift_bridgeObjectRelease();
            v180 = *(_QWORD *)(v235.n128_u64[0] + 16);
            if (v180)
            {
              type metadata accessor for TemporalDepthPointCloud();
              v181 = v235.n128_u64[0] + 32;
              do
              {
                v182 = swift_bridgeObjectRetain();
                sub_239297710(v182);
                if (v183)
                {
                  MEMORY[0x23B83A2CC]();
                  if (*(_QWORD *)((*v179 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v179 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                    sub_239352470();
                  sub_2393524A0();
                  sub_239352464();
                }
                v181 += 8;
                --v180;
              }
              while (v180);
            }
            swift_bridgeObjectRelease();
            if (v261)
            {
              v184 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v261 + 200);
              v185 = swift_retain();
              v186 = v184(v185);
              swift_release();
              v187 = v272;
              v188 = v255;
              v189 = v239;
              if ((v186 & 0x100000000) != 0)
                goto LABEL_94;
              OCNonModularSPI_Serialization_InvalidCameraIntrinsics();
              v274[0] = v284;
              v274[1] = v285;
              v274[2] = v286;
              v191 = (float32x4_t)vdupq_n_s32(0x38D1B717u);
              v194 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v191, vabdq_f32(v190, v284)), (int8x16_t)vcgeq_f32(v191, vabdq_f32(v192, v285))), (int8x16_t)vcgeq_f32(v191, vabdq_f32(v193, v286)));
              v194.i32[3] = v194.i32[2];
              v195 = v266;
              if ((vminvq_u32(v194) & 0x80000000) != 0)
              {
LABEL_94:
                swift_bridgeObjectRelease();
                v210 = v270;
                v209 = v271;
                v201 = v257;
              }
              else
              {
                v196 = v178;
                v244 = (__n128)v191;
                OCNonModularSPI_Serialization_InvalidCameraTransform();
                v201 = v257;
                if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v198, v280)), (int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v197, v279))), vandq_s8((int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v199, v281)), (int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v200, v282))))) & 0x80000000) != 0)
                {
                  swift_bridgeObjectRelease();
                  v210 = v270;
                  v209 = v271;
                }
                else
                {
                  v202 = (uint64_t)v241;
                  v235 = (__n128)v279;
                  v236 = (__n128)v281;
                  v243 = (__n128)v280;
                  v244 = (__n128)v282;
                  sub_239268820(v259, (uint64_t)v241, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
                  v306[0] = v249.i64[0];
                  v306[1] = v196;
                  v306[2] = v248;
                  v306[3] = v254.i64[0];
                  v306[4] = v247;
                  v306[5] = v251.i64[0];
                  v306[6] = v245;
                  v306[7] = v250.i64[0];
                  v307 = 0;
                  v203 = v242;
                  PhotogrammetrySample.Camera.init(id:intrinsics:transform:trackingState:calibrationData:wideToDepthTransform:)(v186, v274, v202, 0, (uint64_t)v306, v242, v235, v243, v236, v244);
                  v204 = type metadata accessor for PhotogrammetrySample.Camera(0);
                  v205 = *(_QWORD *)(v204 - 8);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v205 + 56))(v203, 0, 1, v204);
                  v206 = (uint64_t)v195 + v260[12];
                  sub_239267C70(v203, v206, &qword_256927628);
                  v207 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
                  if (!v207(v206, 1, v204))
                  {
                    memset(v304, 0, sizeof(v304));
                    v305 = 1;
                    sub_239267158((uint64_t)v304, (uint64_t)v304);
                  }
                  v208 = v207(v206, 1, v204);
                  v209 = v271;
                  if (v208)
                  {
                    swift_bridgeObjectRelease();
                    v210 = v270;
                  }
                  else
                  {
                    if (v229)
                    {
                      v211 = (void *)sub_239352260();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      v211 = 0;
                    }
                    v212 = (id)OCNonModularSPI_AVCameraCalibrationData_InitFrom();

                    v213 = *(int *)(v204 + 32);
                    v214 = *(void **)(v206 + v213);
                    *(_QWORD *)(v206 + v213) = v212;

                    v210 = v270;
                    v209 = v271;
                  }
                  v189 = v239;
                  v264(v246, v263, v209);
                  v215 = sub_239352098();
                  v216 = sub_239352560();
                  if (os_log_type_enabled(v215, v216))
                  {
                    v217 = (uint8_t *)swift_slowAlloc();
                    *(_DWORD *)v217 = 134349056;
                    v210 = v270;
                    v275[0].boundingBox.columns[0].i64[0] = v262;
                    sub_2393526B0();
                    _os_log_impl(&dword_23925B000, v215, v216, "Image Folder Reader: Read camera field of sample (id = %{public}ld)", v217, 0xCu);
                    v218 = v217;
                    v189 = v239;
                    MEMORY[0x23B83BC04](v218, -1, -1);
                  }

                  v189(v246, v209);
                }
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              v210 = v270;
              v209 = v271;
              v201 = v257;
              v187 = v272;
              v188 = v255;
              v189 = v239;
            }
            v264(v201, v263, v209);
            v219 = v187;
            v220 = v265;
            v252(v188, v219, v265);
            v221 = sub_239352098();
            v222 = v209;
            v223 = sub_239352578();
            if (os_log_type_enabled(v221, v223))
            {
              v224 = swift_slowAlloc();
              v225 = swift_slowAlloc();
              v275[0].boundingBox.columns[0].i64[0] = v225;
              *(_DWORD *)v224 = 141558275;
              v273.transform.columns[0].i64[0] = 1752392040;
              sub_2393526B0();
              *(_WORD *)(v224 + 12) = 2081;
              v226 = sub_239351F30();
              v273.transform.columns[0].i64[0] = sub_23925F3EC(v226, v227, (uint64_t *)v275);
              sub_2393526B0();
              swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t))v268)(v188, v265);
              _os_log_impl(&dword_23925B000, v221, v223, "Image Folder Reader: Successfully read sample %{private,mask.hash}s", (uint8_t *)v224, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v225, -1, -1);
              MEMORY[0x23B83BC04](v224, -1, -1);

              sub_23927DACC(v240, v269);
              v239(v257, v271);
            }
            else
            {

              ((void (*)(char *, uint64_t))v268)(v188, v220);
              sub_23927DACC(v240, v269);

              v189(v201, v222);
            }
            sub_2392688AC(v259, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
            sub_23925FE28(v258, &qword_256927018);
            v228 = v266;
            sub_239268820((uint64_t)v266, v253, type metadata accessor for PhotogrammetrySample);
            swift_release();
            v122 = v228;
            goto LABEL_108;
          }
          v93 = v266;
          swift_bridgeObjectRelease();
          v93[2] = (id)v92;
          type metadata accessor for PhotogrammetryMetadataHelper();
          v94 = swift_bridgeObjectRetain();
          v95 = sub_23925DDC4(v94);
          v96 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v95 + 176);
          v97 = swift_retain();
          v98 = v96(v97);
          v100 = v99;
          v102 = v101;
          v104 = v103;
          v261 = (char *)v95;
          swift_release();
          v93[5] = (id)v98;
          v93[6] = v100;
          v93[7] = v102;
          *((_BYTE *)v93 + 64) = v104 & 1;
          if ((v104 & 1) != 0)
          {
            v105 = v243.n128_u64[0];
            v264((char *)v243.n128_u64[0], v263, v271);
            v106 = sub_239352098();
            v107 = sub_23935256C();
            if (os_log_type_enabled(v106, v107))
            {
              v108 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v108 = 134349056;
              v275[0].boundingBox.columns[0].i64[0] = v262;
              sub_2393526B0();
              v109 = "Image Folder Reader: Failed to parse gravity field of sample (id = %{public}ld)";
LABEL_48:
              _os_log_impl(&dword_23925B000, v106, v107, v109, v108, 0xCu);
              v119 = v250.i64[0];
              MEMORY[0x23B83BC04](v108, -1, -1);
LABEL_50:

              v123 = v271;
              v239((char *)v105, v271);
              v124 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v261 + 192);
              v125 = swift_retain();
              v126 = v124(v125);
              v128 = v127;
              swift_release();
              v129 = (char *)v266 + v260[17];
              *(_QWORD *)v129 = v126;
              v129[8] = v128 & 1;
              v130 = v247;
              v264(v247, v263, v123);
              v131 = sub_239352098();
              v132 = sub_239352560();
              if (os_log_type_enabled(v131, v132))
              {
                v133 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)v133 = 134349056;
                v275[0].boundingBox.columns[0].i64[0] = v262;
                sub_2393526B0();
                _os_log_impl(&dword_23925B000, v131, v132, "Image Folder Reader: Parsed metadata and timestamp fields of sample (id = %{public}ld)", v133, 0xCu);
                MEMORY[0x23B83BC04](v133, -1, -1);
              }

              v239(v130, v271);
              v118 = v260;
              goto LABEL_53;
            }
          }
          else
          {
            v105 = v244.n128_u64[0];
            v264((char *)v244.n128_u64[0], v263, v271);
            v106 = sub_239352098();
            v107 = sub_239352578();
            if (os_log_type_enabled(v106, v107))
            {
              v108 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v108 = 134349056;
              v275[0].boundingBox.columns[0].i64[0] = v262;
              sub_2393526B0();
              v109 = "Image Folder Reader: Parsed gravity field of sample (id = %{public}ld)";
              goto LABEL_48;
            }
          }
          v119 = v250.i64[0];
          goto LABEL_50;
        }
        v89 = (__CVBuffer *)v267;
        if (sub_239296354(v89))
        {
          v90 = v266;

          v90[9] = v267;
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v275[0].boundingBox.columns[0].i64[0] = 0;
        v275[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
        sub_2393527C4();
        sub_239352380();
        v273.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v89);
        sub_2393528C0();
        sub_239352380();
        swift_bridgeObjectRelease();
        sub_239352380();
        v120 = v275[0].boundingBox.columns[0];
        sub_23927D5D0();
        v113 = v63;
        swift_allocError();
        *v121 = v120;
        v121[1].i8[0] = 1;
        swift_willThrow();

        sub_23927DACC(v240, v269);
        v115 = v234;
LABEL_44:

        goto LABEL_45;
      }
    }
    v232 = 0;
    v236.n128_u64[0] = 0;
    v72 = v287;
    if (v287)
      goto LABEL_10;
    goto LABEL_13;
  }
  __break(1u);
}

BOOL sub_239278CA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL8 v5;
  uint64_t v7;

  v2 = sub_23925FB08(&qword_256927C50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23926059C(a1, (uint64_t)v4, &qword_256927C50);
  v5 = swift_getEnumCaseMultiPayload() != 1;
  sub_23925FE28((uint64_t)v4, &qword_256927C50);
  return v5;
}

uint64_t sub_239278D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  v4 = sub_23925FB08(&qword_256927C50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23926059C(a1, (uint64_t)v6, &qword_256927C50);
  if (swift_getEnumCaseMultiPayload() != 1)
    return sub_23927D72C((uint64_t)v6, a2);
  result = sub_239352848();
  __break(1u);
  return result;
}

_QWORD *sub_239278E44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
  swift_beginAccess();
  if (*v4)
  {
    v5 = sub_23927B138();
    if (!v2)
    {
      v6 = v5;
      v7 = *(_QWORD *)(v5 + 16);
      swift_beginAccess();
      *(_QWORD *)(v1 + 16) = v7;
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v1;
      *(_QWORD *)(v8 + 24) = a1;
      sub_23925FB08(&qword_256927AC8);
      v2 = (_QWORD *)swift_allocObject();
      v2[2] = v6;
      v2[3] = sub_23927D640;
      v2[4] = v8;
      v2[5] = sub_23927920C;
      v2[6] = 0;
      v2[7] = sub_23927921C;
      v2[8] = 0;
      swift_retain();
    }
  }
  else
  {
    sub_23927D5D0();
    v9 = swift_allocError();
    *(_QWORD *)v10 = 0xD000000000000051;
    *(_QWORD *)(v10 + 8) = 0x800000023935AEC0;
    *(_BYTE *)(v10 + 16) = 1;
    v2 = (_QWORD *)v9;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_239278F8C@<X0>(uint64_t a1@<X0>, NSObject *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = sub_239351F3C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_2393520B0();
  MEMORY[0x24BDAC7A8](v7);
  result = sub_23927CE48(a1, a2);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = 0;
  return result;
}

BOOL sub_23927920C(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 8) & 1) == 0;
}

id sub_23927921C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  id result;

  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    result = (id)sub_239352848();
    __break(1u);
  }
  else
  {
    v2 = *(void **)a1;
    *a2 = v2;
    return v2;
  }
  return result;
}

_QWORD *sub_239279298()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_23927D648(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static ObjectCaptureImageFolderReader.loadPhotogrammetrySample(id:url:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  char *v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void *v109;
  uint64_t v110;

  v102 = a2;
  v103 = a1;
  v100 = a3;
  v110 = *MEMORY[0x24BDAC8D0];
  v3 = sub_239351F3C();
  v104 = *(_QWORD *)(v3 - 8);
  v105 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v99 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v98 = (char *)&v91 - v6;
  v106 = sub_2393520B0();
  v7 = *(_QWORD *)(v106 - 8);
  v8 = MEMORY[0x24BDAC7A8](v106);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v91 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v91 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v91 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v91 - v20;
  v22 = type metadata accessor for PhotogrammetrySample(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v91 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v91 - v29;
  v109 = 0;
  if (OCNonModularSPI_CMPhoto_HeicReadCreate())
  {
    v31 = sub_239275A60();
    v32 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v31, v106);
    v33 = sub_239352098();
    v34 = sub_23935256C();
    v35 = v32;
    v36 = v10;
    if (os_log_type_enabled(v33, v34))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_23925B000, v33, v34, "Image Folder Reader: Failed to initialize the image reade handle.", v37, 2u);
      MEMORY[0x23B83BC04](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v36, v35);
    sub_23927D5D0();
    swift_allocError();
    v39 = 0xD00000000000002BLL;
    v40 = "Failed to initialize the image reade handle";
LABEL_9:
    *(_QWORD *)v38 = v39;
    *(_QWORD *)(v38 + 8) = (unint64_t)(v40 - 32) | 0x8000000000000000;
    *(_BYTE *)(v38 + 16) = 1;
    return swift_willThrow();
  }
  v95 = v30;
  v96 = (uint64_t)v21;
  v93 = v28;
  v94 = v25;
  v42 = v104;
  v41 = v105;
  v43 = v103;
  v97 = v7;
  v44 = v106;
  v45 = v109;
  if (OCNonModularSPI_CMPhoto_HeicReadStart())
  {
    OCNonModularSPI_CMPhoto_HeicReadDestroy();
    v109 = 0;
    v46 = sub_239275A60();
    v47 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v13, v46, v44);
    v48 = sub_239352098();
    v49 = sub_23935256C();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_23925B000, v48, v49, "Image Folder Reader: Failed to start the image reade handle.", v50, 2u);
      MEMORY[0x23B83BC04](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v44);
    sub_23927D5D0();
    swift_allocError();
    v39 = 0xD000000000000026;
    v40 = "Failed to start the image reade handle";
    goto LABEL_9;
  }
  if (!v45)
  {
    v67 = sub_239275A60();
    v68 = v97;
    v69 = v16;
    v70 = v16;
    v71 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v70, v67, v44);
    v72 = sub_239352098();
    v73 = sub_23935256C();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v74 = 0;
      _os_log_impl(&dword_23925B000, v72, v73, "Image Folder Reader: Failed to start the image read handle.", v74, 2u);
      MEMORY[0x23B83BC04](v74, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v71);
    sub_23927D5D0();
    swift_allocError();
    *(_QWORD *)v75 = 0xD000000000000025;
    *(_QWORD *)(v75 + 8) = 0x800000023935AF80;
    *(_BYTE *)(v75 + 16) = 1;
    swift_willThrow();
    goto LABEL_26;
  }
  v92 = v45;
  v52 = type metadata accessor for PhotogrammetryImageHelper();
  v53 = v102;
  v91 = v52;
  v54 = sub_23926E354();
  v55 = sub_239275A60();
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
  if ((v54 & 1) != 0)
  {
    v56(v96, v55, v44);
    v57 = v42;
    v58 = v98;
    v59 = v41;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v98, v53, v41);
    v60 = sub_239352098();
    v61 = sub_239352578();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = swift_slowAlloc();
      v99 = (char *)swift_slowAlloc();
      v107 = v43;
      v108 = v99;
      *(_DWORD *)v62 = 134349571;
      sub_2393526B0();
      *(_WORD *)(v62 + 12) = 2160;
      v107 = 1752392040;
      sub_2393526B0();
      *(_WORD *)(v62 + 22) = 2081;
      v63 = sub_239351F30();
      v107 = sub_23925F3EC(v63, v64, (uint64_t *)&v108);
      v65 = (uint64_t)v102;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v105);
      _os_log_impl(&dword_23925B000, v60, v61, "Image Folder Reader: Reading sample from HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v62, 0x20u);
      v66 = v99;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v66, -1, -1);
      MEMORY[0x23B83BC04](v62, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v106);
    }
    else
    {
      v65 = (uint64_t)v53;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);

      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v44);
    }
    v88 = v100;
    v87 = v101;
    type metadata accessor for ObjectCaptureImageFolderReader();
    v89 = (uint64_t)v93;
    sub_239276E20(v43, v65, v92, (uint64_t)v93);
    v90 = (uint64_t)v95;
    if (v87)
      goto LABEL_26;
  }
  else
  {
    v56((uint64_t)v19, v55, v44);
    v76 = v19;
    v77 = v99;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v99, v53, v41);
    v78 = sub_239352098();
    v79 = sub_239352578();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = swift_slowAlloc();
      v96 = swift_slowAlloc();
      v107 = v43;
      v108 = (char *)v96;
      *(_DWORD *)v80 = 134349571;
      v98 = v76;
      v81 = v77;
      v82 = v43;
      sub_2393526B0();
      *(_WORD *)(v80 + 12) = 2160;
      v107 = 1752392040;
      sub_2393526B0();
      *(_WORD *)(v80 + 22) = 2081;
      v83 = sub_239351F30();
      v107 = sub_23925F3EC(v83, v84, (uint64_t *)&v108);
      v53 = v102;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v81, v105);
      _os_log_impl(&dword_23925B000, v78, v79, "Image Folder Reader: Reading sample from non-HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v80, 0x20u);
      v85 = v96;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v85, -1, -1);
      MEMORY[0x23B83BC04](v80, -1, -1);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v106);
      v86 = v101;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v77, v41);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v19, v106);
      v86 = v101;
      v82 = v43;
    }
    v89 = (uint64_t)v94;
    sub_23926CB28(v82, v53, (uint64_t)v94);
    if (v86)
      goto LABEL_26;
    v88 = v100;
    v90 = (uint64_t)v95;
  }
  sub_23927D72C(v89, v90);
  sub_23927D72C(v90, v88);
LABEL_26:
  OCNonModularSPI_CMPhoto_HeicReadStop();
  return OCNonModularSPI_CMPhoto_HeicReadDestroy();
}

char *sub_239279C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  char *v79;
  uint8_t *v80;
  uint8_t *v81;
  char *v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  void *v92;
  int Resolution;
  char *v94;
  uint64_t v95;
  NSObject *v96;
  uint64_t v97;
  os_log_type_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  unint64_t v102;
  void (*v103)(char *, uint64_t);
  char *v104;
  unint64_t v105;
  char v106;
  unint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  NSObject *v113;
  uint64_t v114;
  os_log_type_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  unint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  NSObject *v124;
  uint64_t v125;
  os_log_type_t v126;
  char *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  unint64_t v131;
  void (*v132)(char *, uint64_t);
  void (*v133)(char *, uint64_t);
  char *v134;
  void (*v135)(char *, uint64_t);
  char *v136;
  void (*v137)(char *, uint64_t);
  unint64_t v138;
  char *v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint8_t *v143;
  void *v144;
  NSObject *v145;
  os_log_type_t v146;
  _BOOL4 v147;
  void *v148;
  uint8_t *v149;
  char *v150;
  _QWORD v152[3];
  char *v153;
  id v154;
  char *v155;
  char *v156;
  char *v157;
  __int128 v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  void (*v166)(char *, uint64_t);
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, char *, uint64_t);
  char *v172;
  void (*v173)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  char *v177;
  uint64_t v178;
  id v179;
  char *v180;
  uint64_t v181;

  v181 = *MEMORY[0x24BDAC8D0];
  v170 = sub_2393520B0();
  v163 = *(_QWORD *)(v170 - 8);
  v1 = MEMORY[0x24BDAC7A8](v170);
  v3 = (char *)v152 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v6 = (char *)v152 - v5;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v155 = (char *)v152 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v165 = (char *)v152 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v161 = (char *)v152 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v160 = (char *)v152 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)&v158 = (char *)v152 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v157 = (char *)v152 - v17;
  v18 = sub_23925FB08(&qword_256927AD0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v164 = (char *)v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v171 = (void (*)(char *, char *, uint64_t))((char *)v152 - v21);
  v162 = sub_239351F3C();
  v174 = *(_QWORD *)(v162 - 8);
  v22 = MEMORY[0x24BDAC7A8](v162);
  v159 = (char *)v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v169 = (char *)v152 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v156 = (char *)v152 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v172 = (char *)v152 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v168 = (char *)v152 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v167 = (char *)v152 - v32;
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  v180 = 0;
  OCNonModularSPI_CMPhoto_HeicReadCreate();
  v34 = v180;
  OCNonModularSPI_CMPhoto_HeicReadStart();
  if (!v34)
  {
    sub_23927D5D0();
    swift_allocError();
    *(_QWORD *)v55 = 0xD000000000000051;
    v56 = 0x800000023935AEC0;
    v57 = 1;
LABEL_54:
    *(_QWORD *)(v55 + 8) = v56;
    *(_BYTE *)(v55 + 16) = v57;
    swift_willThrow();
    v150 = v180;
    OCNonModularSPI_CMPhoto_HeicReadStop();
    OCNonModularSPI_CMPhoto_HeicReadDestroy();

    return v150;
  }
  v177 = 0;
  v35 = (void *)sub_239351ED0();
  v179 = 0;
  v36 = objc_msgSend(v33, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v35, 0, 0, &v179);

  v37 = v179;
  v154 = v33;
  if (!v36)
  {
    v58 = v179;
    v59 = (void *)sub_239351E58();

    swift_willThrow();
    v60 = sub_239275A60();
    v61 = v163;
    v62 = v170;
    (*(void (**)(char *, uint64_t, uint64_t))(v163 + 16))(v3, v60, v170);
    v63 = v59;
    v64 = v59;
    v65 = sub_239352098();
    v66 = sub_23935256C();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = (void *)swift_slowAlloc();
      v179 = v68;
      *(_DWORD *)v67 = 136446210;
      swift_getErrorValue();
      v69 = sub_23935292C();
      v178 = sub_23925F3EC(v69, v70, (uint64_t *)&v179);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v65, v66, "Image Folder Reader: contentsOfDirectory error: %{public}s", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v68, -1, -1);
      MEMORY[0x23B83BC04](v67, -1, -1);

      (*(void (**)(char *, uint64_t))(v163 + 8))(v3, v170);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v61 + 8))(v3, v62);
    }
    sub_23927D5D0();
    swift_allocError();
    v56 = 0;
    v57 = 0;
    *(_QWORD *)v55 = v59;
    v33 = v154;
    goto LABEL_54;
  }
  v153 = v6;
  v152[2] = v0;
  v38 = v162;
  v39 = sub_23935244C();
  v40 = v37;

  v179 = (id)MEMORY[0x24BEE4AF8];
  v166 = *(void (**)(char *, uint64_t))(v39 + 16);
  if (v166)
  {
    v41 = 0;
    v42 = v174;
    v43 = (uint64_t)v172;
    v44 = (uint64_t)v171;
    v45 = v167;
    while (1)
    {
      if (v41 >= *(_QWORD *)(v39 + 16))
      {
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
      }
      v46 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      v47 = v39;
      v48 = v39 + v46;
      v49 = *(_QWORD *)(v42 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v42 + 16))(v44, v48 + v49 * v41, v38);
      v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
      v173(v44, 0, 1, v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v38) == 1)
        break;
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
      v50(v45, v44, v38);
      type metadata accessor for PhotogrammetryImageHelper();
      if ((sub_23926DE88() & 1) != 0)
      {
        v50(v168, (uint64_t)v45, v38);
        v51 = v179;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23927D7AC(0, v51[2] + 1, 1);
          v51 = v179;
        }
        v53 = v51[2];
        v52 = v51[3];
        if (v53 >= v52 >> 1)
        {
          sub_23927D7AC(v52 > 1, v53 + 1, 1);
          v51 = v179;
        }
        v51[2] = v53 + 1;
        v54 = (char *)v51 + v46 + v53 * v49;
        v38 = v162;
        v50(v54, (uint64_t)v168, v162);
        v179 = v51;
        v42 = v174;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v38);
      }
      ++v41;
      v43 = (uint64_t)v172;
      v39 = v47;
      v44 = (uint64_t)v171;
      if (v166 == (void (*)(char *, uint64_t))v41)
        goto LABEL_19;
    }
  }
  else
  {
    v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56);
    v43 = (uint64_t)v172;
    v44 = (uint64_t)v171;
LABEL_19:
    v173(v44, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  sub_23925FE28(v44, &qword_256927AD0);
  v71 = (char *)v179;
  v72 = sub_239275A60();
  v73 = v163;
  v74 = *(char **)(v163 + 16);
  v168 = (char *)v72;
  v75 = v170;
  v167 = v74;
  ((void (*)(char *))v74)(v157);
  swift_retain();
  v76 = sub_239352098();
  v77 = sub_239352578();
  v78 = os_log_type_enabled(v76, v77);
  v79 = v164;
  if (v78)
  {
    v80 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v80 = 134349056;
    v179 = (id)*((_QWORD *)v71 + 2);
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v76, v77, "Image Folder Reader: Number of loadable image files = %{public}ld", v80, 0xCu);
    v81 = v80;
    v73 = v163;
    MEMORY[0x23B83BC04](v81, -1, -1);

  }
  else
  {

    swift_release();
  }
  v82 = v165;
  v83 = v169;
  v166 = *(void (**)(char *, uint64_t))(v73 + 8);
  v166(v157, v75);
  ((void (*)(_QWORD, char *, uint64_t))v167)(v158, v168, v75);
  v84 = sub_239352098();
  v85 = sub_239352578();
  if (os_log_type_enabled(v84, v85))
  {
    v86 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v86 = 0;
    _os_log_impl(&dword_23925B000, v84, v85, "Image Folder Reader: ImageFiles: [", v86, 2u);
    MEMORY[0x23B83BC04](v86, -1, -1);
  }

  v166((char *)v158, v75);
  v157 = v71;
  v88 = *((_QWORD *)v71 + 2);
  v89 = v162;
  v90 = v174;
  if (v88)
  {
    v91 = &v157[(*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80)];
    v163 = *(_QWORD *)(v174 + 72);
    v171 = *(void (**)(char *, char *, uint64_t))(v174 + 16);
    *(_QWORD *)&v87 = 141558787;
    v158 = v87;
    v152[1] = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      v171(v79, v91, v89);
      v173((uint64_t)v79, 0, 1, v89);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v79, 1, v89) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v43, v79, v89);
      v176 = *(unsigned int *)sub_2392DCCFC();
      v175 = *(unsigned int *)sub_2392DCD08();
      type metadata accessor for PhotogrammetryImageHelper();
      if ((sub_23926E354() & 1) != 0)
      {
        v92 = (void *)sub_239351ED0();
        swift_beginAccess();
        swift_beginAccess();
        Resolution = OCNonModularSPI_CMPhoto_readResolution();
        swift_endAccess();
        swift_endAccess();

        if (Resolution)
        {
          v94 = v161;
          v95 = v170;
          ((void (*)(char *, char *, uint64_t))v167)(v161, v168, v170);
          v171(v83, (char *)v43, v89);
          v96 = sub_239352098();
          v97 = v89;
          v98 = sub_23935256C();
          if (os_log_type_enabled(v96, v98))
          {
            v99 = swift_slowAlloc();
            v100 = (void *)swift_slowAlloc();
            v179 = v100;
            *(_DWORD *)v99 = v158;
            *(_QWORD *)(v99 + 4) = 1752392040;
            *(_WORD *)(v99 + 12) = 2081;
            v101 = sub_239351F30();
            *(_QWORD *)(v99 + 14) = sub_23925F3EC(v101, v102, (uint64_t *)&v179);
            swift_bridgeObjectRelease();
            v103 = *(void (**)(char *, uint64_t))(v174 + 8);
            v103(v83, v97);
            *(_WORD *)(v99 + 22) = 2050;
            *(_QWORD *)(v99 + 24) = v176;
            *(_WORD *)(v99 + 32) = 2050;
            *(_QWORD *)(v99 + 34) = v175;
            _os_log_impl(&dword_23925B000, v96, v98, "Image Folder Reader: Failed to fetch image resolution in %{private,mask.hash}s, using default resolution %{public}llu x %{public}llu as an estimate instead.", (uint8_t *)v99, 0x2Au);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v100, -1, -1);
            MEMORY[0x23B83BC04](v99, -1, -1);

            v166(v161, v170);
            v104 = v172;
            v103(v172, v97);
            v79 = v164;
            v89 = v97;
            v43 = (uint64_t)v104;
          }
          else
          {

            v133 = *(void (**)(char *, uint64_t))(v174 + 8);
            v133(v83, v97);
            v166(v94, v95);
            v134 = v172;
            v133(v172, v97);
            v79 = v164;
            v89 = v97;
            v43 = (uint64_t)v134;
          }
        }
        else
        {
          v121 = v43;
          v122 = v170;
          ((void (*)(char *, char *, uint64_t))v167)(v160, v168, v170);
          v123 = v156;
          v171(v156, (char *)v121, v89);
          v124 = sub_239352098();
          v125 = v89;
          v126 = sub_239352578();
          if (os_log_type_enabled(v124, v126))
          {
            v127 = v123;
            v128 = swift_slowAlloc();
            v129 = (void *)swift_slowAlloc();
            v179 = v129;
            *(_DWORD *)v128 = v158;
            *(_QWORD *)(v128 + 4) = 1752392040;
            *(_WORD *)(v128 + 12) = 2081;
            v130 = sub_239351F30();
            *(_QWORD *)(v128 + 14) = sub_23925F3EC(v130, v131, (uint64_t *)&v179);
            swift_bridgeObjectRelease();
            v132 = *(void (**)(char *, uint64_t))(v174 + 8);
            v132(v127, v125);
            *(_WORD *)(v128 + 22) = 2050;
            *(_QWORD *)(v128 + 24) = v176;
            *(_WORD *)(v128 + 32) = 2050;
            *(_QWORD *)(v128 + 34) = v175;
            _os_log_impl(&dword_23925B000, v124, v126, "Image Folder Reader: %{private,mask.hash}s of resolution %{public}llu x %{public}llu", (uint8_t *)v128, 0x2Au);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v129, -1, -1);
            MEMORY[0x23B83BC04](v128, -1, -1);

            v166(v160, v170);
            v43 = (uint64_t)v172;
            v132(v172, v125);
          }
          else
          {

            v137 = *(void (**)(char *, uint64_t))(v174 + 8);
            v137(v123, v125);
            v166(v160, v122);
            v43 = (uint64_t)v172;
            v137(v172, v125);
          }
          v79 = v164;
          v89 = v125;
        }
        v82 = v165;
      }
      else
      {
        v105 = sub_23926E058(v43);
        if ((v106 & 1) != 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v43, v89);
        }
        else
        {
          v107 = HIDWORD(v105);
          v108 = v105;
          swift_beginAccess();
          v176 = v108;
          swift_beginAccess();
          v175 = v107;
          v109 = v82;
          v110 = v170;
          ((void (*)(char *, char *, uint64_t))v167)(v109, v168, v170);
          v111 = v43;
          v112 = v159;
          v171(v159, (char *)v111, v89);
          v113 = sub_239352098();
          v114 = v89;
          v115 = sub_239352578();
          if (os_log_type_enabled(v113, v115))
          {
            v116 = swift_slowAlloc();
            v117 = (void *)swift_slowAlloc();
            v179 = v117;
            *(_DWORD *)v116 = v158;
            *(_QWORD *)(v116 + 4) = 1752392040;
            *(_WORD *)(v116 + 12) = 2081;
            v118 = sub_239351F30();
            *(_QWORD *)(v116 + 14) = sub_23925F3EC(v118, v119, (uint64_t *)&v179);
            swift_bridgeObjectRelease();
            v120 = *(void (**)(char *, uint64_t))(v174 + 8);
            v120(v112, v114);
            *(_WORD *)(v116 + 22) = 2050;
            *(_QWORD *)(v116 + 24) = v176;
            *(_WORD *)(v116 + 32) = 2050;
            *(_QWORD *)(v116 + 34) = v175;
            _os_log_impl(&dword_23925B000, v113, v115, "Image Folder Reader: %{private,mask.hash}s of resolution %{public}llu x %{public}llu", (uint8_t *)v116, 0x2Au);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v117, -1, -1);
            MEMORY[0x23B83BC04](v116, -1, -1);

            v82 = v165;
            v166(v165, v170);
            v43 = (uint64_t)v172;
            v120(v172, v114);
            v79 = v164;
            v89 = v114;
          }
          else
          {

            v135 = *(void (**)(char *, uint64_t))(v174 + 8);
            v135(v112, v114);
            v136 = v165;
            v166(v165, v110);
            v43 = (uint64_t)v172;
            v135(v172, v114);
            v79 = v164;
            v89 = v114;
            v82 = v136;
          }
        }
      }
      swift_beginAccess();
      v138 = v176;
      swift_beginAccess();
      if (!is_mul_ok(v138, v175))
        goto LABEL_57;
      if (__CFADD__(v177, v138 * v175))
        goto LABEL_58;
      v177 += v138 * v175;
      v91 += v163;
      --v88;
      v90 = v174;
      v83 = v169;
      if (!v88)
        goto LABEL_46;
    }
  }
  else
  {
LABEL_46:
    v173((uint64_t)v79, 1, 1, v89);
  }
  swift_release();
  v139 = v155;
  v140 = v170;
  ((void (*)(char *, char *, uint64_t))v167)(v155, v168, v170);
  v141 = sub_239352098();
  v142 = sub_239352578();
  if (os_log_type_enabled(v141, v142))
  {
    v143 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v143 = 0;
    _os_log_impl(&dword_23925B000, v141, v142, "Image Folder Reader: ]  // Files", v143, 2u);
    MEMORY[0x23B83BC04](v143, -1, -1);
  }

  v166(v139, v140);
  ((void (*)(char *, char *, uint64_t))v167)(v153, v168, v140);
  v144 = v177;
  v145 = sub_239352098();
  v146 = sub_239352578();
  v147 = os_log_type_enabled(v145, v146);
  v148 = v154;
  if (v147)
  {
    v149 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v149 = 134349056;
    v179 = v144;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v145, v146, "Image Folder Reader: Total number of pixels is %{public}llu", v149, 0xCu);
    MEMORY[0x23B83BC04](v149, -1, -1);
  }

  v166(v153, v140);
  swift_beginAccess();
  v150 = v177;
  OCNonModularSPI_CMPhoto_HeicReadStop();
  OCNonModularSPI_CMPhoto_HeicReadDestroy();

  return v150;
}

uint64_t sub_23927B0CC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_23927B0FC(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 24) = a1;
  return result;
}

uint64_t sub_23927B138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  char *v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, char *);
  char *v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  id v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  void *v91;
  void *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  NSObject *v98;
  os_log_type_t v99;
  _BOOL4 v100;
  char *v101;
  uint8_t *v102;
  uint8_t *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint8_t *v110;
  char *v111;
  char *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  char *v126;
  char *v127;
  NSObject *v128;
  char *v129;
  os_log_type_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  NSObject *v139;
  char *v140;
  os_log_type_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  char isUniquelyReferenced_nonNull_native;
  char *v152;
  unint64_t v153;
  unint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char v158;
  unint64_t v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  char *v165;
  NSObject *v166;
  os_log_type_t v167;
  uint64_t v168;
  char *v169;
  _QWORD *v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  NSObject *v181;
  os_log_type_t v182;
  _BOOL4 v183;
  uint64_t v184;
  uint8_t *v185;
  NSObject *v186;
  os_log_type_t v187;
  uint8_t *v188;
  char *v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  NSObject *v193;
  os_log_type_t v194;
  uint8_t *v195;
  int64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  void (*v204)(char *, char *, char *);
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t result;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  id v215;
  char *v216;
  char *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  __int128 v221;
  void (*v222)(char *, uint64_t);
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  _QWORD *v231;
  _QWORD *v232;
  uint64_t v233;
  unint64_t v234;
  char *v235;
  char *v236;
  char *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  void (*v245)(char *, char *, uint64_t);
  char *v246;
  uint64_t v247;
  char *v248;
  void (*v249)(uint64_t, _QWORD, uint64_t, char *);
  char *v250;
  _QWORD *v251;
  char *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  unint64_t v261;
  _QWORD *v262[2];
  char *v263;
  char v264;
  char v265;
  uint64_t v266;

  v266 = *MEMORY[0x24BDAC8D0];
  v1 = sub_23925FB08(&qword_256927C60);
  MEMORY[0x24BDAC7A8](v1);
  v210 = (char *)&v209 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_23925FB08(&qword_256927C68);
  v233 = *(_QWORD *)(v256 - 8);
  v3 = MEMORY[0x24BDAC7A8](v256);
  v248 = (char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v247 = (uint64_t)&v209 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v232 = (uint64_t *)((char *)&v209 - v8);
  MEMORY[0x24BDAC7A8](v7);
  v231 = (uint64_t *)((char *)&v209 - v9);
  v10 = sub_23925FB08(&qword_256927018);
  MEMORY[0x24BDAC7A8](v10);
  v230 = (uint64_t)&v209 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = sub_239351FD8();
  v253 = *(_QWORD *)(v255 - 8);
  v12 = MEMORY[0x24BDAC7A8](v255);
  v229 = (char *)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v238 = (uint64_t)&v209 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v228 = (char *)&v209 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v237 = (char *)&v209 - v18;
  v19 = sub_2393520B0();
  v244 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v257 = (char *)&v209 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v211 = (char *)&v209 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v217 = (char *)&v209 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v216 = (char *)&v209 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v227 = (char *)&v209 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v226 = (char *)&v209 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v252 = (char *)&v209 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v242 = (char *)&v209 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v241 = (char *)&v209 - v36;
  v37 = sub_23925FB08(&qword_256927AD0);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v235 = (char *)&v209 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v258 = (uint64_t)&v209 - v40;
  v41 = sub_239351F3C();
  v259 = *(_QWORD **)(v41 - 8);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v250 = (char *)&v209 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v209 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v219 = (char *)&v209 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v236 = (char *)&v209 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v239 = (char *)&v209 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v254 = (char *)&v209 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v246 = (char *)&v209 - v55;
  v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  v218 = v0;
  v57 = (void *)sub_239351ED0();
  sub_23925FB08(&qword_2569277B0);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_239354060;
  v59 = (void *)*MEMORY[0x24BDBCBF0];
  *(_QWORD *)(v58 + 32) = *MEMORY[0x24BDBCBF0];
  type metadata accessor for URLResourceKey(0);
  v60 = v59;
  v61 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v263 = 0;
  v215 = v56;
  v62 = objc_msgSend(v56, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v57, v61, 0, &v263);

  v63 = v263;
  if (!v62)
  {
    v81 = v263;
    v82 = (void *)sub_239351E58();

    swift_willThrow();
    v83 = sub_239275A60();
    v84 = v244;
    v85 = v257;
    (*(void (**)(char *, uint64_t, uint64_t))(v244 + 16))(v257, v83, v19);
    v86 = v82;
    v87 = v82;
    v88 = sub_239352098();
    v89 = sub_23935256C();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      v91 = (void *)swift_slowAlloc();
      v243 = v19;
      v92 = v91;
      v263 = (char *)v91;
      *(_DWORD *)v90 = 136446210;
      swift_getErrorValue();
      v93 = sub_23935292C();
      v85 = (char *)v94;
      v262[0] = (_QWORD *)sub_23925F3EC(v93, v94, (uint64_t *)&v263);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v88, v89, "Image Folder Reader: contentsOfDirectory error: %{public}s", v90, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v92, -1, -1);
      MEMORY[0x23B83BC04](v90, -1, -1);

      (*(void (**)(char *, uint64_t))(v84 + 8))(v257, v243);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v84 + 8))(v257, v19);
    }
    sub_23927D5D0();
    swift_allocError();
    *(_QWORD *)v207 = v82;
    *(_QWORD *)(v207 + 8) = 0;
    *(_BYTE *)(v207 + 16) = 0;
    swift_willThrow();

    return (uint64_t)v85;
  }
  v220 = v46;
  v243 = v19;
  v64 = sub_23935244C();
  v65 = v63;

  v263 = (char *)MEMORY[0x24BEE4AF8];
  v66 = *(_QWORD **)(v64 + 16);
  v67 = (char *)v41;
  v257 = (char *)v41;
  v251 = v66;
  if (v66)
  {
    v68 = 0;
    v69 = v258;
    v70 = v259;
    v71 = v246;
    while (1)
    {
      if (v68 >= *(_QWORD *)(v64 + 16))
      {
        __break(1u);
LABEL_86:
        swift_bridgeObjectRelease();
        __break(1u);
      }
      v73 = (*((unsigned __int8 *)v70 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v70 + 80);
      v74 = v64;
      v75 = v64 + v73;
      v76 = v70[9];
      ((void (*)(uint64_t, unint64_t, char *))v70[2])(v69, v75 + v76 * v68, v67);
      v249 = (void (*)(uint64_t, _QWORD, uint64_t, char *))v70[7];
      v249(v69, 0, 1, v67);
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v70[6])(v69, 1, v67) == 1)
        break;
      v77 = (void (*)(char *, uint64_t, char *))v70[4];
      v77(v71, v69, v67);
      type metadata accessor for PhotogrammetryImageHelper();
      if ((sub_23926DE88() & 1) != 0)
      {
        v77(v254, (uint64_t)v71, v67);
        v78 = v263;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23927D7AC(0, *((_QWORD *)v78 + 2) + 1, 1);
          v78 = v263;
        }
        v69 = v258;
        v80 = *((_QWORD *)v78 + 2);
        v79 = *((_QWORD *)v78 + 3);
        if (v80 >= v79 >> 1)
        {
          sub_23927D7AC(v79 > 1, v80 + 1, 1);
          v69 = v258;
          v78 = v263;
        }
        *((_QWORD *)v78 + 2) = v80 + 1;
        v67 = v257;
        v77(&v78[v73 + v80 * v76], (uint64_t)v254, v257);
        v263 = v78;
        v70 = v259;
        v71 = v246;
      }
      else
      {
        ((void (*)(char *, char *))v70[1])(v71, v67);
        v69 = v258;
      }
      ++v68;
      v72 = v243;
      v64 = v74;
      if (v251 == (_QWORD *)v68)
        goto LABEL_17;
    }
    v72 = v243;
  }
  else
  {
    v70 = v259;
    v249 = (void (*)(uint64_t, _QWORD, uint64_t, char *))v259[7];
    v72 = v243;
    v69 = v258;
LABEL_17:
    v249(v69, 1, 1, v67);
  }
  swift_bridgeObjectRelease();
  sub_23925FE28(v69, &qword_256927AD0);
  v95 = v263;
  v96 = sub_239275A60();
  v97 = *(void (**)(char *, char *, uint64_t))(v244 + 16);
  v246 = (char *)v96;
  v245 = v97;
  ((void (*)(char *))v97)(v241);
  swift_retain();
  v98 = sub_239352098();
  v99 = sub_239352578();
  v100 = os_log_type_enabled(v98, v99);
  v101 = v236;
  v213 = v95;
  if (v100)
  {
    v102 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v102 = 134349056;
    v263 = (char *)v95[2];
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v98, v99, "Image Folder Reader: Number of loadable image files = %{public}ld", v102, 0xCu);
    v103 = v102;
    v67 = v257;
    MEMORY[0x23B83BC04](v103, -1, -1);

  }
  else
  {

    swift_release();
  }
  v104 = v218;
  v105 = v252;
  v106 = (uint64_t)v239;
  v244 = *(_QWORD *)(v244 + 8);
  ((void (*)(char *, uint64_t))v244)(v241, v72);
  v245(v242, v246, v72);
  v107 = sub_239352098();
  v108 = sub_239352578();
  if (os_log_type_enabled(v107, v108))
  {
    v109 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v109 = 0;
    _os_log_impl(&dword_23925B000, v107, v108, "Image Folder Reader: ImageFiles: [", v109, 2u);
    v110 = v109;
    v67 = v257;
    MEMORY[0x23B83BC04](v110, -1, -1);
  }

  ((void (*)(char *, uint64_t))v244)(v242, v72);
  if (v213[2])
  {
    v242 = (char *)v213[2];
    v111 = (char *)v213 + ((*((unsigned __int8 *)v70 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v70 + 80));
    v224 = (_QWORD *)(v104 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
    swift_beginAccess();
    v112 = v111;
    v225 = 0;
    v234 = 0;
    v251 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v223 = v70[9];
    v258 = v70[2];
    *(_QWORD *)&v113 = 141558531;
    v221 = v113;
    v214 = MEMORY[0x24BEE4AD8] + 8;
    v114 = v253;
    v115 = v235;
    while (1)
    {
      v241 = v112;
      ((void (*)(char *))v258)(v115);
      v249((uint64_t)v115, 0, 1, v67);
      if (((unsigned int (*)(char *, uint64_t, char *))v70[6])(v115, 1, v67) == 1)
        goto LABEL_64;
      v116 = v70;
      v117 = v72;
      v118 = v101;
      ((void (*)(uint64_t, char *, char *))v116[4])(v106, v115, v67);
      v119 = type metadata accessor for PhotogrammetryImageHelper();
      v120 = v230;
      sub_23926DA20(v106, v230);
      v121 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
      v122 = v114;
      v123 = v255;
      v124 = v121(v120, 1, v255);
      v240 = v119;
      if (v124 == 1)
      {
        sub_23925FE28(v120, &qword_256927018);
        v125 = v238;
        sub_23926C6E8(v106, v238);
        v245(v226, v246, v117);
        v126 = v219;
        ((void (*)(char *, uint64_t, char *))v258)(v219, v106, v67);
        v127 = v229;
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v229, v125, v123);
        v128 = sub_239352098();
        v129 = v67;
        v130 = sub_239352578();
        if (os_log_type_enabled(v128, v130))
        {
          v131 = swift_slowAlloc();
          v132 = (_QWORD *)swift_slowAlloc();
          v262[0] = v132;
          *(_DWORD *)v131 = v221;
          *(_QWORD *)(v131 + 4) = 1752392040;
          *(_WORD *)(v131 + 12) = 2081;
          v133 = sub_239351F30();
          *(_QWORD *)(v131 + 14) = sub_23925F3EC(v133, v134, (uint64_t *)v262);
          swift_bridgeObjectRelease();
          v254 = (char *)v259[1];
          ((void (*)(char *, char *))v254)(v126, v129);
          *(_WORD *)(v131 + 22) = 2082;
          sub_239262570(&qword_256927C70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
          v135 = sub_2393528C0();
          *(_QWORD *)(v131 + 24) = sub_23925F3EC(v135, v136, (uint64_t *)v262);
          swift_bridgeObjectRelease();
          v222 = *(void (**)(char *, uint64_t))(v253 + 8);
          v222(v229, v255);
          _os_log_impl(&dword_23925B000, v128, v130, "Image Folder Reader: %{private,mask.hash}s using creationDate instead: %{public}s", (uint8_t *)v131, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v132, -1, -1);
          MEMORY[0x23B83BC04](v131, -1, -1);
        }
        else
        {
          v254 = (char *)v259[1];
          ((void (*)(char *, char *))v254)(v126, v129);
          v222 = *(void (**)(char *, uint64_t))(v122 + 8);
          v222(v127, v123);
        }

        ((void (*)(char *, uint64_t))v244)(v226, v117);
        v67 = v129;
        v72 = v117;
        v148 = (unint64_t)v251;
        sub_239351F9C();
        v149 = (char *)v232 + *(int *)(v256 + 48);
        *v232 = v150;
        v106 = (uint64_t)v239;
        ((void (*)(char *, char *, char *))v258)(v149, v239, v129);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v152 = v227;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v148 = sub_23927D3C0(0, *(_QWORD *)(v148 + 16) + 1, 1, v148);
        v154 = *(_QWORD *)(v148 + 16);
        v153 = *(_QWORD *)(v148 + 24);
        if (v154 >= v153 >> 1)
          v148 = sub_23927D3C0(v153 > 1, v154 + 1, 1, v148);
        *(_QWORD *)(v148 + 16) = v154 + 1;
        sub_239268764((uint64_t)v232, v148+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(_QWORD *)(v233 + 72) * v154, &qword_256927C68);
        v155 = &v265;
      }
      else
      {
        v137 = v237;
        (*(void (**)(char *, uint64_t, uint64_t))(v122 + 32))(v237, v120, v123);
        v245(v105, v246, v117);
        ((void (*)(char *, uint64_t, char *))v258)(v118, v106, v67);
        v138 = v228;
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v228, v137, v123);
        v139 = sub_239352098();
        v140 = v67;
        v141 = sub_239352578();
        if (os_log_type_enabled(v139, v141))
        {
          v142 = swift_slowAlloc();
          v143 = (_QWORD *)swift_slowAlloc();
          v262[0] = v143;
          *(_DWORD *)v142 = v221;
          *(_QWORD *)(v142 + 4) = 1752392040;
          *(_WORD *)(v142 + 12) = 2081;
          v144 = sub_239351F30();
          *(_QWORD *)(v142 + 14) = sub_23925F3EC(v144, v145, (uint64_t *)v262);
          swift_bridgeObjectRelease();
          v254 = (char *)v259[1];
          ((void (*)(char *, char *))v254)(v118, v140);
          *(_WORD *)(v142 + 22) = 2082;
          sub_239262570(&qword_256927C70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
          v146 = sub_2393528C0();
          *(_QWORD *)(v142 + 24) = sub_23925F3EC(v146, v147, (uint64_t *)v262);
          swift_bridgeObjectRelease();
          v222 = *(void (**)(char *, uint64_t))(v253 + 8);
          v222(v228, v255);
          _os_log_impl(&dword_23925B000, v139, v141, "Image Folder Reader: %{private,mask.hash}s with dateTimeOriginal %{public}s", (uint8_t *)v142, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v143, -1, -1);
          MEMORY[0x23B83BC04](v142, -1, -1);

          v72 = v243;
          ((void (*)(char *, uint64_t))v244)(v252, v243);
          v67 = v140;
        }
        else
        {
          v254 = (char *)v259[1];
          ((void (*)(char *, char *))v254)(v118, v140);
          v222 = *(void (**)(char *, uint64_t))(v122 + 8);
          v222(v138, v123);

          ((void (*)(char *, uint64_t))v244)(v105, v117);
          v67 = v140;
          v72 = v117;
        }
        sub_239351F9C();
        v156 = (char *)v231 + *(int *)(v256 + 48);
        *v231 = v157;
        v106 = (uint64_t)v239;
        ((void (*)(char *, char *, char *))v258)(v156, v239, v67);
        v148 = (unint64_t)v251;
        v158 = swift_isUniquelyReferenced_nonNull_native();
        v152 = v227;
        if ((v158 & 1) == 0)
          v148 = sub_23927D3C0(0, *(_QWORD *)(v148 + 16) + 1, 1, v148);
        v160 = *(_QWORD *)(v148 + 16);
        v159 = *(_QWORD *)(v148 + 24);
        if (v160 >= v159 >> 1)
          v148 = sub_23927D3C0(v159 > 1, v160 + 1, 1, v148);
        *(_QWORD *)(v148 + 16) = v160 + 1;
        sub_239268764((uint64_t)v231, v148+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(_QWORD *)(v233 + 72) * v160, &qword_256927C68);
        v155 = &v264;
      }
      v222(*((char **)v155 - 32), v255);
      v114 = v253;
      if (!*v224)
        goto LABEL_86;
      v161 = v152;
      v251 = (_QWORD *)v148;
      v162 = sub_23926E3FC(v106);
      v105 = v252;
      if (!v163)
        goto LABEL_60;
      v164 = v163;
      v240 = v162;
      v245(v161, v246, v72);
      v165 = v220;
      ((void (*)(char *, uint64_t, char *))v258)(v220, v106, v67);
      swift_bridgeObjectRetain_n();
      v166 = sub_239352098();
      v167 = sub_239352578();
      if (os_log_type_enabled(v166, v167))
      {
        v168 = swift_slowAlloc();
        v169 = v161;
        v170 = (_QWORD *)swift_slowAlloc();
        v262[0] = v170;
        *(_DWORD *)v168 = v221;
        *(_QWORD *)(v168 + 4) = 1752392040;
        *(_WORD *)(v168 + 12) = 2081;
        v171 = sub_239351F30();
        *(_QWORD *)(v168 + 14) = sub_23925F3EC(v171, v172, (uint64_t *)v262);
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *))v254)(v165, v257);
        *(_WORD *)(v168 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v168 + 24) = sub_23925F3EC(v240, v164, (uint64_t *)v262);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23925B000, v166, v167, "Image Folder Reader: %{private,mask.hash}s with HEIC version: %{public}s", (uint8_t *)v168, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v170, -1, -1);
        v173 = v168;
        v67 = v257;
        MEMORY[0x23B83BC04](v173, -1, -1);

        v174 = v169;
      }
      else
      {
        ((void (*)(char *, char *))v254)(v165, v67);

        swift_bridgeObjectRelease_n();
        v174 = v161;
      }
      ((void (*)(char *, uint64_t))v244)(v174, v243);
      v105 = v252;
      v114 = v253;
      v115 = v235;
      v101 = v236;
      v106 = (uint64_t)v239;
      if (v234)
      {
        if (v225 != v240 || v234 != v164)
        {
          v175 = v240;
          v176 = sub_2393528CC();
          swift_bridgeObjectRelease();
          if ((v176 & 1) != 0)
          {
            v225 = v175;
            v234 = v164;
            v105 = v252;
          }
          else
          {
            v262[0] = (_QWORD *)0x302E302E31;
            v262[1] = (_QWORD *)0xE500000000000000;
            v177 = v175;
            v260 = v175;
            v261 = v164;
            v178 = sub_239352044();
            v179 = (uint64_t)v210;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(v210, 1, 1, v178);
            sub_2392753CC();
            v180 = sub_2393526F8();
            sub_23925FE28(v179, &qword_256927C60);
            swift_bridgeObjectRelease();
            v105 = v252;
            if (!v180)
              (*(void (**)(uint64_t))(*(_QWORD *)v218 + 192))(1);
            v225 = v177;
            v234 = v164;
            v114 = v253;
LABEL_60:
            v115 = v235;
          }
          v101 = v236;
          goto LABEL_27;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v225 = v240;
        v234 = v164;
      }
LABEL_27:
      ((void (*)(uint64_t, char *))v254)(v106, v67);
      v112 = &v241[v223];
      --v242;
      v70 = v259;
      if (!v242)
        goto LABEL_63;
    }
  }
  v234 = 0;
  v251 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v115 = v235;
LABEL_63:
  v249((uint64_t)v115, 1, 1, v67);
LABEL_64:
  swift_release();
  swift_bridgeObjectRelease();
  v245(v216, v246, v72);
  v181 = sub_239352098();
  v182 = sub_239352578();
  v183 = os_log_type_enabled(v181, v182);
  v184 = v218;
  if (v183)
  {
    v185 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v185 = 0;
    _os_log_impl(&dword_23925B000, v181, v182, "Image Folder Reader: ]  // Files", v185, 2u);
    MEMORY[0x23B83BC04](v185, -1, -1);
  }

  ((void (*)(char *, uint64_t))v244)(v216, v72);
  v245(v217, v246, v72);
  swift_retain();
  v186 = sub_239352098();
  v187 = sub_239352578();
  if (os_log_type_enabled(v186, v187))
  {
    v188 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v188 = 67109120;
    LOBYTE(v262[0]) = (*(uint64_t (**)(void))(*(_QWORD *)v184 + 184))() & 1;
    LODWORD(v262[0]) = LOBYTE(v262[0]);
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v186, v187, "Image Folder Reader: Should reset legacy segment id: %{BOOL}d", v188, 8u);
    MEMORY[0x23B83BC04](v188, -1, -1);

  }
  else
  {

    swift_release();
  }
  v189 = v211;
  v190 = v251;
  ((void (*)(char *, uint64_t))v244)(v217, v72);
  v262[0] = v190;
  swift_bridgeObjectRetain_n();
  v191 = v212;
  sub_23927E5DC(v262);
  if (!v191)
  {
    swift_bridgeObjectRelease();
    v192 = v262[0];
    v245(v189, v246, v72);
    swift_retain();
    v193 = sub_239352098();
    v194 = sub_239352578();
    if (os_log_type_enabled(v193, v194))
    {
      v195 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v195 = 134349056;
      v262[0] = *((_QWORD **)v192 + 2);
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v193, v194, "Image Folder Reader: Number of loadable image files with valid timestamps = %{public}ld", v195, 0xCu);
      MEMORY[0x23B83BC04](v195, -1, -1);

    }
    else
    {

      swift_release();
    }
    ((void (*)(char *, uint64_t))v244)(v189, v72);
    v196 = v192[2];
    if (v196)
    {
      v255 = 0;
      v262[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_23927D7AC(0, v196, 0);
      v197 = *(unsigned __int8 *)(v233 + 80);
      v254 = (char *)v192;
      v198 = (uint64_t)v192 + ((v197 + 32) & ~v197);
      v258 = *(_QWORD *)(v233 + 72);
      v199 = v257;
      v200 = v250;
      do
      {
        v201 = v247;
        sub_23926059C(v198, v247, &qword_256927C68);
        v202 = *(int *)(v256 + 48);
        v203 = &v248[v202];
        ((void (*)(char *, uint64_t, char *))v70[2])(&v248[v202], v201 + v202, v199);
        v204 = (void (*)(char *, char *, char *))v70[4];
        v204(v200, v203, v199);
        sub_23925FE28(v201, &qword_256927C68);
        v85 = (char *)v262[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23927D7AC(0, *((_QWORD *)v85 + 2) + 1, 1);
          v85 = (char *)v262[0];
        }
        v206 = *((_QWORD *)v85 + 2);
        v205 = *((_QWORD *)v85 + 3);
        if (v206 >= v205 >> 1)
        {
          sub_23927D7AC(v205 > 1, v206 + 1, 1);
          v85 = (char *)v262[0];
        }
        *((_QWORD *)v85 + 2) = v206 + 1;
        v70 = v259;
        v200 = v250;
        v199 = v257;
        v204(&v85[((*((unsigned __int8 *)v70 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v70 + 80))+ v259[9] * v206], v250, v257);
        v262[0] = v85;
        v198 += v258;
        --v196;
      }
      while (v196);
      swift_release();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();

      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v85;
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23927CE48(uint64_t a1, NSObject *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  int Thumbnail;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  char *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  os_log_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64[3];
  uint64_t v65;
  uint64_t v66;

  v57 = a2;
  v66 = *MEMORY[0x24BDAC8D0];
  v3 = sub_239351F3C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v59 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - v7;
  v9 = sub_2393520B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v50 - v14;
  v16 = sub_239275A60();
  v56 = v10;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v52 = v16;
  v53 = v17;
  ((void (*)(char *))v17)(v15);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v58 = a1;
  v60 = v3;
  v51 = v18;
  v18(v8, a1, v3);
  v19 = sub_239352098();
  v20 = sub_239352578();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v54 = v13;
    v22 = v21;
    v50 = swift_slowAlloc();
    v64[0] = v50;
    *(_DWORD *)v22 = 141558275;
    v62 = 1752392040;
    v55 = v9;
    sub_2393526B0();
    *(_WORD *)(v22 + 12) = 2081;
    v23 = sub_239351F30();
    v62 = sub_23925F3EC(v23, v24, v64);
    v9 = v55;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v26 = v60;
    v25(v8, v60);
    _os_log_impl(&dword_23925B000, v19, v20, "Image Folder Reader: Trying to load thumbnail %{private,mask.hash}s", (uint8_t *)v22, 0x16u);
    v27 = v50;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v27, -1, -1);
    v28 = v22;
    v13 = v54;
    MEMORY[0x23B83BC04](v28, -1, -1);

    v29 = *(void (**)(char *, uint64_t))(v56 + 8);
    v29(v15, v9);
    v30 = v26;
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v30 = v60;
    v25(v8, v60);

    v29 = *(void (**)(char *, uint64_t))(v56 + 8);
    v29(v15, v9);
  }
  v65 = 0;
  swift_beginAccess();
  v31 = v58;
  v32 = (void *)sub_239351ED0();
  Thumbnail = OCNonModularSPI_CMPhoto_readThumbnail();

  v34 = v59;
  if (Thumbnail || (v35 = v65) == 0)
  {
    v62 = 0;
    v63 = 0xE000000000000000;
    sub_2393527C4();
    swift_bridgeObjectRelease();
    v62 = 0xD000000000000030;
    v63 = 0x800000023935B040;
    sub_239351F30();
    sub_239352380();
    swift_bridgeObjectRelease();
    v35 = v62;
    v36 = v63;
    sub_23927D5D0();
    swift_allocError();
    *(_QWORD *)v37 = v35;
    *(_QWORD *)(v37 + 8) = v36;
    *(_BYTE *)(v37 + 16) = 1;
    swift_willThrow();
  }
  else
  {
    v53(v13, v52, v9);
    v51(v34, v31, v30);
    v38 = sub_239352098();
    v39 = v34;
    v40 = sub_239352578();
    if (os_log_type_enabled(v38, v40))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v58 = v42;
      *(_DWORD *)v41 = 141558275;
      v61 = 1752392040;
      v62 = v42;
      v55 = v9;
      sub_2393526B0();
      *(_WORD *)(v41 + 12) = 2081;
      v54 = v13;
      v57 = v38;
      v43 = sub_239351F30();
      v61 = sub_23925F3EC(v43, v44, &v62);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      v25(v39, v60);
      v45 = v57;
      _os_log_impl(&dword_23925B000, v57, v40, "Image Folder Reader: Successfully loaded thumbnail %{private,mask.hash}s", (uint8_t *)v41, 0x16u);
      v46 = v58;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v46, -1, -1);
      MEMORY[0x23B83BC04](v41, -1, -1);

      v47 = v54;
      v48 = v55;
    }
    else
    {
      v25(v39, v30);

      v47 = v13;
      v48 = v9;
    }
    v29(v47, v48);
  }
  return v35;
}

uint64_t sub_23927D3C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_256927C78);
  v10 = *(_QWORD *)(sub_23925FB08(&qword_256927C68) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23935283C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23925FB08(&qword_256927C68) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23927FA90(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unint64_t sub_23927D5D0()
{
  unint64_t result;

  result = qword_256927AB8;
  if (!qword_256927AB8)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureImageFolderReader.Error, &type metadata for ObjectCaptureImageFolderReader.Error);
    atomic_store(result, (unint64_t *)&qword_256927AB8);
  }
  return result;
}

uint64_t sub_23927D614@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23927659C(a1, v2, a2);
}

uint64_t sub_23927D61C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23927D640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_239278F8C(a1, *(NSObject **)(v2 + 24), a2);
}

_QWORD *sub_23927D648(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23925FB08(&qword_25692B740);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_23927F8FC(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23925FDCC();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23927D72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotogrammetrySample(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ObjectCaptureImageFolderReader()
{
  uint64_t result;

  result = qword_25692CBA0;
  if (!qword_25692CBA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23927D7AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23927D8EC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23927D7C8()
{
  return type metadata accessor for ObjectCaptureImageFolderReader();
}

uint64_t sub_23927D7D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351F3C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureImageFolderReader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.pgSamplesCount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.__allocating_init(url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.pgSamples()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.pgThumbnails(maxPixelSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.invalidSampleIdsRead()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

ValueMetadata *type metadata accessor for ObjectCaptureImageFolderReader.Error()
{
  return &type metadata for ObjectCaptureImageFolderReader.Error;
}

uint64_t sub_23927D8D8(_QWORD *a1)
{
  return sub_23927DB68(0, a1[2], 0, a1);
}

uint64_t sub_23927D8EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_256927C48);
  v10 = *(_QWORD *)(sub_239351F3C() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_239351F3C() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_23927DACC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23927DAE0(a1, a2);
  return a1;
}

uint64_t sub_23927DAE0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23927DB24(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23927DB68(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_256927C78);
  v10 = *(_QWORD *)(sub_23925FB08(&qword_256927C68) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23925FB08(&qword_256927C68) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_23927DD50(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_239352974();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23927E0C8(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23927DE48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_23925FB08(&qword_256927C58);
  result = sub_2393527A0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_239352974();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23927E0C8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23927DE48();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23927E1E8();
      goto LABEL_14;
    }
    sub_23927E37C();
  }
  v8 = *v3;
  result = sub_239352974();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_2393528FC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_23927E1E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_23925FB08(&qword_256927C58);
  v2 = *v0;
  v3 = sub_239352794();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23927E37C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_23925FB08(&qword_256927C58);
  result = sub_2393527A0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_239352974();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23927E5DC(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23925FB08(&qword_256927C68) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23927D8D8(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23927E660(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23927E660(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  double *v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  double *v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  double *v128;
  double *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;

  v2 = v1;
  v4 = sub_23925FB08(&qword_256927C68);
  v125 = *(_QWORD *)(v4 - 8);
  v126 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v122 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v131 = (uint64_t)&v116 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v129 = (double *)((char *)&v116 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v128 = (double *)((char *)&v116 - v11);
  v12 = a1[1];
  result = sub_2393528B4();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      return sub_23927F03C(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v118 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v124 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v117 = MEMORY[0x24BEE4AF8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      if (v20 >= 2)
      {
        v109 = *a1;
        do
        {
          v110 = v20 - 2;
          if (v20 < 2)
            goto LABEL_133;
          if (!v109)
            goto LABEL_145;
          v111 = v18;
          v112 = *(_QWORD *)&v18[16 * v110 + 32];
          v113 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_23927F270(v109 + *(_QWORD *)(v125 + 72) * v112, v109 + *(_QWORD *)(v125 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v109 + *(_QWORD *)(v125 + 72) * v113, v124);
          if (v2)
            break;
          if (v113 < v112)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_23927F8E8((uint64_t)v18);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_135;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v20 > v115)
            goto LABEL_136;
          memmove(&v111[16 * v20 + 16], &v111[16 * v20 + 32], 16 * (v115 - v20));
          *((_QWORD *)v111 + 2) = v115 - 1;
          v20 = v115 - 1;
          v18 = v111;
        }
        while (v115 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v117 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_239352488();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v125 + 80);
    v117 = v16;
    v124 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v130 = a1;
  while (1)
  {
    v21 = v19 + 1;
    v123 = v19;
    if (v19 + 1 >= v12)
    {
      v28 = v19 + 1;
      goto LABEL_24;
    }
    v120 = *a1;
    v22 = v120;
    v132 = *(_QWORD *)(v125 + 72);
    v23 = v128;
    sub_23926059C(v120 + v132 * v21, (uint64_t)v128, &qword_256927C68);
    v24 = v22 + v132 * v19;
    v25 = v129;
    sub_23926059C(v24, (uint64_t)v129, &qword_256927C68);
    v26 = *v23;
    v27 = *v25;
    sub_23925FE28((uint64_t)v25, &qword_256927C68);
    sub_23925FE28((uint64_t)v23, &qword_256927C68);
    v28 = v19 + 2;
    if (v19 + 2 >= v12)
    {
LABEL_21:
      if (v26 >= v27)
        goto LABEL_24;
LABEL_42:
      if (v28 < v19)
        goto LABEL_139;
      if (v19 < v28)
      {
        v127 = v12;
        v119 = v18;
        v49 = 0;
        v50 = v132;
        v51 = v132 * (v28 - 1);
        v52 = v28 * v132;
        v53 = v19 * v132;
        do
        {
          if (v19 != v28 + v49 - 1)
          {
            v121 = v2;
            v54 = v120;
            if (!v120)
              goto LABEL_144;
            v55 = v120 + v53;
            sub_239268764(v120 + v53, v122, &qword_256927C68);
            if (v53 < v51 || v55 >= v54 + v52)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v53 != v51)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_239268764(v122, v54 + v51, &qword_256927C68);
            a1 = v130;
            v2 = v121;
            v50 = v132;
          }
          ++v19;
          --v49;
          v51 -= v50;
          v52 -= v50;
          v53 += v50;
        }
        while (v19 < v28 + v49);
        v18 = v119;
        v19 = v123;
        v12 = v127;
      }
      goto LABEL_24;
    }
    v121 = v2;
    v119 = v18;
    v127 = v132 * v21;
    v29 = v120;
    v30 = v19 + 2;
    v31 = v132 * (v19 + 2);
    while (1)
    {
      v32 = v12;
      v33 = v128;
      sub_23926059C(v29 + v31, (uint64_t)v128, &qword_256927C68);
      v34 = v129;
      sub_23926059C(v29 + v127, (uint64_t)v129, &qword_256927C68);
      v35 = *v33 >= *v34;
      sub_23925FE28((uint64_t)v34, &qword_256927C68);
      sub_23925FE28((uint64_t)v33, &qword_256927C68);
      if (v26 < v27 == v35)
        break;
      v29 += v132;
      ++v30;
      v12 = v32;
      if (v32 == v30)
      {
        v28 = v32;
        v18 = v119;
        v2 = v121;
        v19 = v123;
        goto LABEL_21;
      }
    }
    v18 = v119;
    v28 = v30;
    v2 = v121;
    v19 = v123;
    v12 = v32;
    if (v26 < v27)
      goto LABEL_42;
LABEL_24:
    if (v28 >= v12)
      goto LABEL_56;
    if (__OFSUB__(v28, v19))
      goto LABEL_137;
    if (v28 - v19 >= v118)
      goto LABEL_56;
    if (__OFADD__(v19, v118))
      goto LABEL_140;
    v36 = v19 + v118 >= v12 ? v12 : v19 + v118;
    if (v36 < v19)
      break;
    if (v28 != v36)
    {
      v119 = v18;
      v120 = v36;
      v121 = v2;
      v37 = *(_QWORD *)(v125 + 72);
      v132 = v37 * (v28 - 1);
      v127 = v37;
      v38 = v28 * v37;
      do
      {
        v39 = 0;
        while (1)
        {
          v40 = v28;
          v41 = *a1;
          v42 = v128;
          sub_23926059C(v38 + v39 + *a1, (uint64_t)v128, &qword_256927C68);
          v43 = v132 + v39 + v41;
          v44 = v129;
          sub_23926059C(v43, (uint64_t)v129, &qword_256927C68);
          v45 = *v42;
          v46 = *v44;
          sub_23925FE28((uint64_t)v44, &qword_256927C68);
          sub_23925FE28((uint64_t)v42, &qword_256927C68);
          if (v45 >= v46)
            break;
          v47 = *a1;
          if (!*a1)
            goto LABEL_142;
          v48 = v47 + v132 + v39;
          sub_239268764(v47 + v38 + v39, v131, &qword_256927C68);
          swift_arrayInitWithTakeFrontToBack();
          sub_239268764(v131, v48, &qword_256927C68);
          v39 -= v127;
          ++v19;
          v28 = v40;
          a1 = v130;
          if (v40 == v19)
            goto LABEL_35;
        }
        v28 = v40;
LABEL_35:
        ++v28;
        v132 += v127;
        v38 += v127;
        v19 = v123;
      }
      while (v28 != v120);
      v28 = v120;
      v2 = v121;
      v18 = v119;
    }
LABEL_56:
    if (v28 < v19)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v132 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_23927F6E0(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v58 = *((_QWORD *)v18 + 2);
    v57 = *((_QWORD *)v18 + 3);
    v20 = v58 + 1;
    if (v58 >= v57 >> 1)
      v18 = sub_23927F6E0((char *)(v57 > 1), v58 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v59 = v18 + 32;
    v60 = &v18[16 * v58 + 32];
    v61 = v132;
    *(_QWORD *)v60 = v19;
    *((_QWORD *)v60 + 1) = v61;
    if (v58)
    {
      while (1)
      {
        v62 = v20 - 1;
        if (v20 >= 4)
        {
          v67 = &v59[16 * v20];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_121;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_122;
          v74 = v20 - 2;
          v75 = &v59[16 * v20 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_124;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_127;
          if (v79 >= v70)
          {
            v97 = &v59[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_131;
            v90 = v65 < v100;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v91 = *((_QWORD *)v18 + 4);
            v92 = *((_QWORD *)v18 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_87;
          }
          v64 = *((_QWORD *)v18 + 4);
          v63 = *((_QWORD *)v18 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_123;
        v74 = v20 - 2;
        v80 = &v59[16 * v20 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_126;
        v86 = &v59[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_129;
        if (__OFADD__(v84, v89))
          goto LABEL_130;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_93:
          if (v90)
            v62 = v74;
          goto LABEL_95;
        }
LABEL_87:
        if ((v85 & 1) != 0)
          goto LABEL_125;
        v93 = &v59[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_128;
        if (v96 < v84)
          goto LABEL_14;
LABEL_95:
        v101 = v62 - 1;
        if (v62 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v102 = *a1;
        if (!*a1)
          goto LABEL_143;
        v103 = v18;
        v104 = &v59[16 * v101];
        v105 = *(_QWORD *)v104;
        v106 = &v59[16 * v62];
        v107 = *((_QWORD *)v106 + 1);
        sub_23927F270(v102 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v104, v102 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v106, v102 + *(_QWORD *)(v125 + 72) * v107, v124);
        if (v2)
          goto LABEL_115;
        if (v107 < v105)
          goto LABEL_118;
        if (v62 > *((_QWORD *)v103 + 2))
          goto LABEL_119;
        *(_QWORD *)v104 = v105;
        *(_QWORD *)&v59[16 * v101 + 8] = v107;
        v108 = *((_QWORD *)v103 + 2);
        if (v62 >= v108)
          goto LABEL_120;
        v18 = v103;
        v20 = v108 - 1;
        memmove(&v59[16 * v62], v106 + 16, 16 * (v108 - 1 - v62));
        *((_QWORD *)v103 + 2) = v108 - 1;
        a1 = v130;
        if (v108 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v132;
    if (v132 >= v12)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23935283C();
  __break(1u);
  return result;
}

uint64_t sub_23927F03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v28 = sub_23925FB08(&qword_256927C68);
  v7 = MEMORY[0x24BDAC7A8](v28);
  v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v29 = (double *)((char *)&v25 - v10);
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (double *)((char *)&v25 - v13);
  v31 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v34 = v15 * (v31 - 1);
    v30 = v15;
    v33 = v15 * v31;
LABEL_5:
    v16 = 0;
    v17 = v27;
    while (1)
    {
      v18 = *a4;
      sub_23926059C(v33 + v16 + *a4, (uint64_t)v14, &qword_256927C68);
      v19 = v34 + v16 + v18;
      v20 = v29;
      sub_23926059C(v19, (uint64_t)v29, &qword_256927C68);
      v21 = *v14;
      v22 = *v20;
      sub_23925FE28((uint64_t)v20, &qword_256927C68);
      result = sub_23925FE28((uint64_t)v14, &qword_256927C68);
      if (v21 >= v22)
      {
LABEL_4:
        v34 += v30;
        v33 += v30;
        if (++v31 == v26)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v34 + v16;
      sub_239268764(v23 + v33 + v16, v32, &qword_256927C68);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_239268764(v32, v24, &qword_256927C68);
      v16 -= v30;
      if (v31 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23927F270(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v21;
  double v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v26;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double v33;
  double v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;

  v40 = sub_23925FB08(&qword_256927C68);
  v8 = MEMORY[0x24BDAC7A8](v40);
  v10 = (double *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (double *)((char *)&v38 - v11);
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v43 = a1;
  v42 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v19;
      v41 = a4 + v19;
      v43 = a2;
      v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v30 = -v14;
        do
        {
          v31 = a3 + v30;
          sub_23926059C(v28 + v30, (uint64_t)v12, &qword_256927C68);
          v32 = a2 + v30;
          sub_23926059C(a2 + v30, (uint64_t)v10, &qword_256927C68);
          v33 = *v12;
          v34 = *v10;
          sub_23925FE28((uint64_t)v10, &qword_256927C68);
          sub_23925FE28((uint64_t)v12, &qword_256927C68);
          if (v33 >= v34)
          {
            v35 = v41;
            v41 += v30;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v30;
          }
          v28 = v41;
          if (v41 <= a4)
            break;
          a2 = v32;
          a3 += v30;
        }
        while (v32 > v39);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v39 = a4 + v18;
    v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_23926059C(a2, (uint64_t)v12, &qword_256927C68);
        sub_23926059C(a4, (uint64_t)v10, &qword_256927C68);
        v21 = *v12;
        v22 = *v10;
        sub_23925FE28((uint64_t)v10, &qword_256927C68);
        sub_23925FE28((uint64_t)v12, &qword_256927C68);
        v23 = v43;
        if (v21 >= v22)
        {
          v26 = v42 + v14;
          if (v43 < v42 || v43 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v42 = v26;
          v24 = a2;
        }
        else
        {
          v24 = a2 + v14;
          if (v43 < a2 || v43 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v43 = v23 + v14;
        a4 = v42;
        if (v42 >= v39)
          break;
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_68:
    sub_23927F7D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  result = sub_239352884();
  __break(1u);
  return result;
}

char *sub_23927F6E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23925FB08(&qword_256927C80);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23927F7D8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_23925FB08(&qword_256927C68);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_239352884();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23927F8E8(uint64_t a1)
{
  return sub_23927F6E0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_23927F8FC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23927FA90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_23925FB08(&qword_256927C68) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

CoreOC::ObjectCaptureFrameEvent::GestureEvent_optional __swiftcall ObjectCaptureFrameEvent.GestureEvent.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (CoreOC::ObjectCaptureFrameEvent::GestureEvent_optional)rawValue;
}

uint64_t ObjectCaptureFrameEvent.GestureEvent.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_23927FBC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV14SampleOrderingO9hashValueSivg_0()
{
  sub_239352980();
  sub_23935298C();
  return sub_2393529B0();
}

uint64_t sub_23927FC20()
{
  return sub_23935298C();
}

uint64_t sub_23927FC48()
{
  sub_239352980();
  sub_23935298C();
  return sub_2393529B0();
}

CoreOC::ObjectCaptureFrameEvent::GestureEvent_optional sub_23927FC88(Swift::Int *a1)
{
  return ObjectCaptureFrameEvent.GestureEvent.init(rawValue:)(*a1);
}

void sub_23927FC90(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

CoreOC::ObjectCaptureFrameEvent::ScanStatus_optional __swiftcall ObjectCaptureFrameEvent.ScanStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (CoreOC::ObjectCaptureFrameEvent::ScanStatus_optional)rawValue;
}

uint64_t ObjectCaptureFrameEvent.ScanStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_23927FCC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

_QWORD *sub_23927FCD8@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

unint64_t static ObjectCaptureFrameEvent.header.getter()
{
  return 0xD000000000000047;
}

void sub_23927FD14(_QWORD **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x78))();
}

uint64_t sub_23927FD54(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

double sub_23927FDA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_23927FDEC(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

_QWORD *sub_23927FE3C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & **a1) + 0x90))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_23927FE8C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_23927FED8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_23927FF24(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

_QWORD *sub_23927FF74@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & **a1) + 0xA8))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_23927FFC4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_239280010@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_23928005C(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

void sub_2392800AC(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = (*(double (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xC0))();
  *(_QWORD *)(a2 + 8) = v3;
}

uint64_t sub_2392800EC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position);
  result = swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

double sub_239280140()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_239280184(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  uint64_t result;

  v5 = (double *)(v2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position);
  result = swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_2392801D8@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_239280218(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_239280280()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2392802C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23928036C()
{
  _QWORD *v0;
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  char v18;
  uint64_t v19;
  unint64_t v20;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v2 = *(_QWORD *)((*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))() + 16);
  if (v2)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_239281D3C(0, v2, 0);
    v3 = 0;
    v4 = v19;
    do
    {
      v5 = sub_2393524DC();
      v7 = v6;
      v19 = v4;
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_239281D3C((char *)(v8 > 1), v9 + 1, 1);
        v4 = v19;
      }
      ++v3;
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_23925FB08(&qword_256927CB0);
  sub_239281D58();
  sub_2393522A8();
  swift_bridgeObjectRelease();
  v19 = 0;
  v20 = 0xE000000000000000;
  v11 = sub_2393527C4();
  (*(void (**)(uint64_t))((*v1 & *v0) + 0x78))(v11);
  sub_2393524D0();
  v12 = sub_239352380();
  (*(void (**)(char *__return_ptr, uint64_t))((*v1 & *v0) + 0x90))(&v18, v12);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  v13 = sub_239352380();
  (*(void (**)(char *__return_ptr, uint64_t))((*v1 & *v0) + 0xA8))(&v18, v13);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  v14 = sub_239352380();
  v15 = *(void (**)(uint64_t))((*v1 & *v0) + 0xC0);
  v15(v14);
  sub_2393524C4();
  sub_239352380();
  swift_bridgeObjectRelease();
  v16 = sub_239352380();
  v15(v16);
  sub_2393524C4();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t static ObjectCaptureFrameEvent.supportsSecureCoding.getter()
{
  return 1;
}

id ObjectCaptureFrameEvent.__allocating_init(timestamp:gesture:scanStatus:position:boxTransform:)(_BYTE *a1, char *a2, uint64_t a3, double a4, double a5, double a6)
{
  objc_class *v6;
  _BYTE *v13;
  char v14;
  double *v15;
  objc_super v17;

  v13 = objc_allocWithZone(v6);
  v14 = *a2;
  v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture] = *a1;
  v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus] = v14;
  v15 = (double *)&v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position];
  *v15 = a5;
  v15[1] = a6;
  *(double *)&v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp] = a4;
  *(_QWORD *)&v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform] = a3;
  v17.receiver = v13;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

id ObjectCaptureFrameEvent.init(timestamp:gesture:scanStatus:position:boxTransform:)(_BYTE *a1, _BYTE *a2, uint64_t a3, double a4, double a5, double a6)
{
  _BYTE *v6;
  double *v7;
  objc_super v9;

  v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture] = *a1;
  v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus] = *a2;
  v7 = (double *)&v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position];
  *v7 = a5;
  v7[1] = a6;
  *(double *)&v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp] = a4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform] = a3;
  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for ObjectCaptureFrameEvent();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t ObjectCaptureFrameEvent.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ObjectCaptureFrameEvent.init(coder:)(a1);
}

uint64_t ObjectCaptureFrameEvent.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  uint64_t v17;
  char *v18;
  void *v19;
  int v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t ObjectType;
  char v26;
  char v27;
  void *v28;
  char v29;
  _WORD v30[8];

  v3 = v1;
  v4 = (void *)sub_2393522CC();
  v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  if ((unint64_t)v5 > 4)
    goto LABEL_5;
  v6 = (void *)sub_2393522CC();
  v7 = objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  if (v7)
  {
    if (v7 == (id)1)
    {
      v27 = (char)v5;
      v28 = v3;
      v26 = 1;
      goto LABEL_7;
    }
LABEL_5:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v27 = (char)v5;
  v28 = v3;
  v26 = 0;
LABEL_7:
  v9 = (void *)sub_2393522CC();
  objc_msgSend(a1, sel_decodeCGPointForKey_, v9);
  v11 = v10;
  v13 = v12;

  v14 = (void *)sub_2393522CC();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v14);
  v16 = v15;

  v17 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  do
  {
    sub_2393528C0();
    strcpy((char *)v30, "boxTransform");
    HIBYTE(v30[6]) = 0;
    v30[7] = -5120;
    sub_239352380();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_2393522CC();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_decodeFloatForKey_, v19);
    v21 = v20;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v18 = sub_239281EC4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v23 = *((_QWORD *)v18 + 2);
    v22 = *((_QWORD *)v18 + 3);
    if (v23 >= v22 >> 1)
      v18 = sub_239281EC4((char *)(v22 > 1), v23 + 1, 1, v18);
    ++v17;
    *((_QWORD *)v18 + 2) = v23 + 1;
    *(_DWORD *)&v18[4 * v23 + 32] = v21;
  }
  while (v17 != 16);
  ObjectType = swift_getObjectType();

  LOBYTE(v30[0]) = v27;
  v29 = v26;
  v8 = (*(uint64_t (**)(_WORD *, char *, char *, double, double, double))(ObjectType + 240))(v30, &v29, v18, v16, v11, v13);

  swift_deallocPartialClassInstance();
  return v8;
}

uint64_t ObjectCaptureFrameEvent.__allocating_init(line:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  float v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void (**v12)(uint64_t *__return_ptr, uint64_t);
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  BOOL v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 *v54;
  unsigned int v55;
  uint64_t v56;
  _BYTE *v57;
  BOOL v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  _BYTE *v72;
  BOOL v73;
  float v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 *v82;
  unint64_t v83;
  _BYTE *v84;
  BOOL v85;
  _BYTE *v86;
  BOOL v87;
  int v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[12];
  int v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(_BYTE *, uint64_t);
  BOOL v101;
  _QWORD v102[2];
  uint64_t v103;
  uint64_t v104;

  v4 = v2;
  v7 = sub_239351D68();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v95[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v11 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v11)
    goto LABEL_111;
  v103 = a1;
  v104 = a2;
  v102[0] = 44;
  v102[1] = 0xE100000000000000;
  sub_2392753CC();
  v12 = (void (**)(uint64_t *__return_ptr, uint64_t))v102;
  v13 = (_QWORD *)sub_2393526C8();
  swift_bridgeObjectRelease();
  v14 = v13[2];
  if (v14 < 5)
    goto LABEL_111;
  v98 = v4;
  v99 = v14;
  v15 = v13[5];
  v103 = v13[4];
  v104 = v15;
  swift_bridgeObjectRetain();
  sub_239351D5C();
  v16 = sub_2393526D4();
  v18 = v17;
  v100 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v100(v10, v7);
  v19 = swift_bridgeObjectRelease();
  v102[0] = 0;
  v20 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)&v95[-16] = v102;
  if ((v18 & 0x1000000000000000) != 0 || !(v18 & 0x2000000000000000 | v16 & 0x1000000000000000))
  {
    sub_2393527B8();
    goto LABEL_11;
  }
  MEMORY[0x24BDAC7A8](v20);
  v12 = (void (**)(uint64_t *__return_ptr, uint64_t))&v95[-32];
  *(_QWORD *)&v95[-16] = sub_239281FBC;
  *(_QWORD *)&v95[-8] = v21;
  if ((v18 & 0x2000000000000000) != 0)
  {
    v103 = v16;
    v104 = v18 & 0xFFFFFFFFFFFFFFLL;
    v23 = (v16 >= 0x21u || ((0x100003E01uLL >> v16) & 1) == 0)
       && (v22 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
       && *v22 == 0;
    v101 = v23;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if ((v16 & 0x1000000000000000) == 0)
    goto LABEL_143;
  ((void (*)(uint64_t *__return_ptr, uint64_t))sub_239281FBC)(&v103, (v18 & 0xFFFFFFFFFFFFFFFLL) + 32);
  while (1)
  {
    v101 = v103;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_19:
    if (!v101)
      goto LABEL_111;
    if (v13[2] >= 2uLL)
      break;
    __break(1u);
LABEL_143:
    v91 = sub_2393527F4();
    v12[2](&v103, v91);
  }
  v24 = *(double *)v102;
  v25 = v13[7];
  v103 = v13[6];
  v104 = v25;
  swift_bridgeObjectRetain();
  sub_239351D5C();
  v26 = sub_2393526D4();
  v28 = v27;
  v100(v10, v7);
  swift_bridgeObjectRelease();
  v29 = HIBYTE(v28) & 0xF;
  v30 = v26 & 0xFFFFFFFFFFFFLL;
  if ((v28 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v28) & 0xF;
  else
    v31 = v26 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_111;
  }
  if ((v28 & 0x1000000000000000) != 0)
  {
    v33 = (uint64_t)sub_23925FC64(v26, v28, 10);
    LOBYTE(v26) = v92;
    goto LABEL_54;
  }
  if ((v28 & 0x2000000000000000) != 0)
  {
    v103 = v26;
    v104 = v28 & 0xFFFFFFFFFFFFFFLL;
    if (v26 == 43)
    {
      if (!v29)
      {
LABEL_149:
        __break(1u);
        goto LABEL_150;
      }
      if (v29 == 1 || (BYTE1(v26) - 48) > 9u)
        goto LABEL_51;
      v33 = (BYTE1(v26) - 48);
      if (v29 == 2)
        goto LABEL_53;
      if ((BYTE2(v26) - 48) <= 9u)
      {
        v33 = 10 * (BYTE1(v26) - 48) + (BYTE2(v26) - 48);
        v35 = v29 - 3;
        if (v35)
        {
          v36 = (unsigned __int8 *)&v103 + 3;
          while (1)
          {
            v37 = *v36 - 48;
            if (v37 > 9)
              goto LABEL_51;
            v38 = 10 * v33;
            if ((unsigned __int128)(v33 * (__int128)10) >> 64 != (10 * v33) >> 63)
              goto LABEL_51;
            v33 = v38 + v37;
            if (__OFADD__(v38, v37))
              goto LABEL_51;
            LOBYTE(v26) = 0;
            ++v36;
            if (!--v35)
              goto LABEL_54;
          }
        }
        goto LABEL_53;
      }
    }
    else if (v26 == 45)
    {
      if (!v29)
      {
LABEL_148:
        __break(1u);
        goto LABEL_149;
      }
      if (v29 != 1 && (BYTE1(v26) - 48) <= 9u)
      {
        if (v29 == 2)
        {
          LOBYTE(v26) = 0;
          v33 = -(uint64_t)(BYTE1(v26) - 48);
          goto LABEL_54;
        }
        if ((BYTE2(v26) - 48) <= 9u)
        {
          v33 = -10 * (BYTE1(v26) - 48) - (BYTE2(v26) - 48);
          v59 = v29 - 3;
          if (v59)
          {
            v60 = (unsigned __int8 *)&v103 + 3;
            while (1)
            {
              v61 = *v60 - 48;
              if (v61 > 9)
                goto LABEL_51;
              v62 = 10 * v33;
              if ((unsigned __int128)(v33 * (__int128)10) >> 64 != (10 * v33) >> 63)
                goto LABEL_51;
              v33 = v62 - v61;
              if (__OFSUB__(v62, v61))
                goto LABEL_51;
              LOBYTE(v26) = 0;
              ++v60;
              if (!--v59)
                goto LABEL_54;
            }
          }
LABEL_53:
          LOBYTE(v26) = 0;
          goto LABEL_54;
        }
      }
    }
    else if (v29 && (v26 - 48) <= 9u)
    {
      v33 = (v26 - 48);
      if (v29 == 1)
        goto LABEL_53;
      if ((BYTE1(v26) - 48) <= 9u)
      {
        v33 = 10 * (v26 - 48) + (BYTE1(v26) - 48);
        v53 = v29 - 2;
        if (v53)
        {
          v54 = (unsigned __int8 *)&v103 + 2;
          while (1)
          {
            v55 = *v54 - 48;
            if (v55 > 9)
              goto LABEL_51;
            v56 = 10 * v33;
            if ((unsigned __int128)(v33 * (__int128)10) >> 64 != (10 * v33) >> 63)
              goto LABEL_51;
            v33 = v56 + v55;
            if (__OFADD__(v56, v55))
              goto LABEL_51;
            LOBYTE(v26) = 0;
            ++v54;
            if (!--v53)
              goto LABEL_54;
          }
        }
        goto LABEL_53;
      }
    }
LABEL_51:
    v33 = 0;
    LOBYTE(v26) = 1;
    goto LABEL_54;
  }
  if ((v26 & 0x1000000000000000) != 0)
    v32 = (unsigned __int8 *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v32 = (unsigned __int8 *)sub_2393527F4();
  v33 = (uint64_t)sub_23925FE64(v32, v30, 10);
  LOBYTE(v26) = v34 & 1;
LABEL_54:
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0 || (unint64_t)v33 >= 5)
    goto LABEL_111;
  if (v13[2] < 3uLL)
  {
    __break(1u);
    goto LABEL_148;
  }
  v39 = v13[9];
  v103 = v13[8];
  v104 = v39;
  swift_bridgeObjectRetain();
  sub_239351D5C();
  v40 = sub_2393526D4();
  v42 = v41;
  v100(v10, v7);
  swift_bridgeObjectRelease();
  v43 = sub_239281748(v40, v42);
  if ((v44 & 1) != 0)
    goto LABEL_111;
  if (v43)
  {
    if (v43 != 1)
      goto LABEL_111;
    v96 = 1;
  }
  else
  {
    v96 = 0;
  }
  v97 = v33;
  if (v13[2] >= 4uLL)
  {
    v45 = v13[11];
    v103 = v13[10];
    v104 = v45;
    swift_bridgeObjectRetain();
    sub_239351D5C();
    v46 = sub_2393526D4();
    v48 = v47;
    v100(v10, v7);
    v49 = swift_bridgeObjectRelease();
    LODWORD(v102[0]) = 0;
    v50 = MEMORY[0x24BDAC7A8](v49);
    *(_QWORD *)&v95[-16] = v102;
    if ((v48 & 0x1000000000000000) == 0 && v48 & 0x2000000000000000 | v46 & 0x1000000000000000)
    {
      MEMORY[0x24BDAC7A8](v50);
      v12 = (void (**)(uint64_t *__return_ptr, uint64_t))&v95[-32];
      *(_QWORD *)&v95[-16] = v52;
      *(_QWORD *)&v95[-8] = v51;
      if ((v48 & 0x2000000000000000) != 0)
      {
        v103 = v46;
        v104 = v48 & 0xFFFFFFFFFFFFFFLL;
        v58 = (v46 >= 0x21u || ((0x100003E01uLL >> v46) & 1) == 0)
           && (v57 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
           && *v57 == 0;
        v101 = v58;
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
      if ((v46 & 0x1000000000000000) == 0)
        goto LABEL_154;
      ((void (*)(uint64_t *__return_ptr, uint64_t))sub_239281FD8)(&v103, (v48 & 0xFFFFFFFFFFFFFFFLL) + 32);
      while (1)
      {
        v101 = v103;
LABEL_69:
        swift_bridgeObjectRelease();
LABEL_92:
        if (!v101)
          goto LABEL_111;
        if (v13[2] >= 5uLL)
        {
          v3 = *(float *)v102;
          v63 = v13[13];
          v103 = v13[12];
          v104 = v63;
          swift_bridgeObjectRetain();
          sub_239351D5C();
          v64 = sub_2393526D4();
          v66 = v65;
          v100(v10, v7);
          v67 = swift_bridgeObjectRelease();
          LODWORD(v102[0]) = 0;
          v68 = MEMORY[0x24BDAC7A8](v67);
          *(_QWORD *)&v95[-16] = v102;
          if ((v66 & 0x1000000000000000) != 0 || !(v66 & 0x2000000000000000 | v64 & 0x1000000000000000))
            goto LABEL_152;
          MEMORY[0x24BDAC7A8](v68);
          *(_QWORD *)&v95[-16] = v70;
          *(_QWORD *)&v95[-8] = v69;
          if ((v66 & 0x2000000000000000) == 0)
          {
            if ((v64 & 0x1000000000000000) != 0)
            {
              ((void (*)(uint64_t *__return_ptr, uint64_t))sub_239281FD8)(&v103, (v66 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else
            {
              v94 = sub_2393527F4();
              (*(void (**)(uint64_t *__return_ptr, uint64_t))&v95[-16])(&v103, v94);
            }
            v101 = v103;
            goto LABEL_100;
          }
          v103 = v64;
          v104 = v66 & 0xFFFFFFFFFFFFFFLL;
          v73 = (v64 >= 0x21u || ((0x100003E01uLL >> v64) & 1) == 0)
             && (v72 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
             && *v72 == 0;
          v101 = v73;
          result = swift_bridgeObjectRelease();
          goto LABEL_107;
        }
        __break(1u);
LABEL_154:
        v93 = sub_2393527F4();
        v12[2](&v103, v93);
      }
    }
LABEL_150:
    sub_2393527B8();
    goto LABEL_69;
  }
  __break(1u);
LABEL_152:
  sub_2393527B8();
LABEL_100:
  result = swift_bridgeObjectRelease();
LABEL_107:
  if (!v101)
  {
LABEL_111:
    swift_bridgeObjectRelease();
    return 0;
  }
  v74 = *(float *)v102;
  if (v99 < 0x15)
  {
    v75 = (char *)MEMORY[0x24BEE4AF8];
LABEL_110:
    swift_bridgeObjectRelease();
    LOBYTE(v103) = v97;
    LOBYTE(v102[0]) = v96;
    return (*(uint64_t (**)(uint64_t *, _QWORD *, char *, double, double, double))(v98 + 240))(&v103, v102, v75, v24, v3, v74);
  }
  if (v13[2] >= 0x15uLL)
  {
    v76 = 0;
    v75 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v99 = (unint64_t)v75;
      v77 = v13[v76 + 15];
      v103 = v13[v76 + 14];
      v104 = v77;
      swift_bridgeObjectRetain();
      sub_239351D5C();
      v78 = sub_2393526D4();
      v80 = v79;
      v100(v10, v7);
      v81 = swift_bridgeObjectRelease();
      LODWORD(v102[0]) = 0;
      MEMORY[0x24BDAC7A8](v81);
      *(_QWORD *)&v95[-16] = v102;
      if ((v80 & 0x1000000000000000) != 0 || !(v80 & 0x2000000000000000 | v78 & 0x1000000000000000))
      {
        sub_2393527B8();
        swift_bridgeObjectRelease();
        v75 = (char *)v99;
      }
      else if ((v80 & 0x2000000000000000) != 0)
      {
        v103 = v78;
        v104 = v80 & 0xFFFFFFFFFFFFFFLL;
        v87 = (v78 > 0x20u || ((0x100003E01uLL >> v78) & 1) == 0)
           && (v86 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
           && *v86 == 0;
        v75 = (char *)v99;
        v101 = v87;
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v78 & 0x1000000000000000) != 0)
          v82 = (unsigned __int8 *)((v80 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v82 = (unsigned __int8 *)sub_2393527F4();
        v75 = (char *)v99;
        v83 = *v82;
        v85 = (v83 >= 0x21 || ((0x100003E01uLL >> v83) & 1) == 0)
           && (v84 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
           && *v84 == 0;
        v101 = v85;
        swift_bridgeObjectRelease();
      }
      if (v101)
      {
        v88 = v102[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v75 = sub_239281EC4(0, *((_QWORD *)v75 + 2) + 1, 1, v75);
        v90 = *((_QWORD *)v75 + 2);
        v89 = *((_QWORD *)v75 + 3);
        if (v90 >= v89 >> 1)
          v75 = sub_239281EC4((char *)(v89 > 1), v90 + 1, 1, v75);
        *((_QWORD *)v75 + 2) = v90 + 1;
        *(_DWORD *)&v75[4 * v90 + 32] = v88;
      }
      else
      {
        swift_bridgeObjectRelease();
        v75 = (char *)MEMORY[0x24BEE4AF8];
      }
      v76 += 2;
    }
    while (v76 != 32);
    goto LABEL_110;
  }
  __break(1u);
  return result;
}

uint64_t sub_239281748(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_2393527F4();
      v7 = (uint64_t)sub_23925FE64(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_23925FC64(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

void sub_239281994(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  void *v23;
  double v24;
  _QWORD v25[2];

  v2 = v1;
  v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(_QWORD *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0x90))(v25);
  v5 = LOBYTE(v25[0]);
  v6 = (void *)sub_2393522CC();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v5, v6);

  (*(void (**)(_QWORD *__return_ptr))((*v4 & *v2) + 0xA8))(v25);
  v7 = LOBYTE(v25[0]);
  v8 = (void *)sub_2393522CC();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v7, v8);

  v9 = (*(double (**)(void))((*v4 & *v2) + 0xC0))();
  v11 = v10;
  v12 = (void *)sub_2393522CC();
  objc_msgSend(a1, sel_encodePoint_forKey_, v12, v9, v11);

  v13 = (*(double (**)(void))((*v4 & *v2) + 0x78))();
  v14 = (void *)sub_2393522CC();
  v15 = a1;
  objc_msgSend(a1, sel_encodeDouble_forKey_, v14, v13);

  v16 = *(uint64_t (**)(void))((*v4 & *v2) + 0xD8);
  v17 = *(_QWORD *)(v16() + 16);
  v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    v19 = 0;
    while (1)
    {
      v20 = ((uint64_t (*)(uint64_t))v16)(v18);
      if (v19 >= *(_QWORD *)(v20 + 16))
        break;
      v21 = v19 + 1;
      v22 = *(_DWORD *)(v20 + 4 * v19 + 32);
      swift_bridgeObjectRelease();
      v25[0] = v19;
      sub_2393528C0();
      strcpy((char *)v25, "boxTransform");
      BYTE5(v25[1]) = 0;
      HIWORD(v25[1]) = -5120;
      sub_239352380();
      swift_bridgeObjectRelease();
      v23 = (void *)sub_2393522CC();
      swift_bridgeObjectRelease();
      LODWORD(v24) = v22;
      objc_msgSend(v15, sel_encodeFloat_forKey_, v23, v24);

      v19 = v21;
      if (v17 == v21)
        return;
    }
    __break(1u);
  }
}

id ObjectCaptureFrameEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ObjectCaptureFrameEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ObjectCaptureFrameEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ObjectCaptureFrameEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_239281D3C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_239281DC4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

unint64_t sub_239281D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256927CB8;
  if (!qword_256927CB8)
  {
    v1 = sub_239262518(&qword_256927CB0);
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256927CB8);
  }
  return result;
}

uint64_t type metadata accessor for ObjectCaptureFrameEvent()
{
  return objc_opt_self();
}

char *sub_239281DC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23925FB08(&qword_2569278A0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_239281EC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23925FB08(&qword_25692B790);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

_BYTE *sub_239281FBC@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_239281FF4(a1, MEMORY[0x24BEE4B48], a2);
}

_BYTE *sub_239281FD8@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_239281FF4(a1, MEMORY[0x24BEE4B50], a2);
}

_BYTE *sub_239281FF4@<X0>(_BYTE *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v4 = *result;
  v5 = v4 > 0x20;
  v6 = (1 << v4) & 0x100003E01;
  v7 = v5 || v6 == 0;
  v8 = v7 && (result = (_BYTE *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

unint64_t sub_239282068()
{
  unint64_t result;

  result = qword_256927CC0;
  if (!qword_256927CC0)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureFrameEvent.GestureEvent, &type metadata for ObjectCaptureFrameEvent.GestureEvent);
    atomic_store(result, (unint64_t *)&qword_256927CC0);
  }
  return result;
}

unint64_t sub_2392820B0()
{
  unint64_t result;

  result = qword_256927CC8;
  if (!qword_256927CC8)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureFrameEvent.ScanStatus, &type metadata for ObjectCaptureFrameEvent.ScanStatus);
    atomic_store(result, (unint64_t *)&qword_256927CC8);
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureFrameEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.timestamp.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.gesture.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.scanStatus.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.position.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.boxTransform.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.__allocating_init(timestamp:gesture:scanStatus:position:boxTransform:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

_BYTE *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Configuration(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureFrameEvent.GestureEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2392822A0 + 4 * byte_239354AA5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2392822D4 + 4 * byte_239354AA0[v4]))();
}

uint64_t sub_2392822D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392822DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392822E4);
  return result;
}

uint64_t sub_2392822F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392822F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2392822FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_239282304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_239282310(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_239282318(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureFrameEvent.GestureEvent()
{
  return &type metadata for ObjectCaptureFrameEvent.GestureEvent;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.ScanExtent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureFrameEvent.ScanStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23928240C + 4 * byte_239354AAF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_239282440 + 4 * byte_239354AAA[v4]))();
}

uint64_t sub_239282440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_239282448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x239282450);
  return result;
}

uint64_t sub_23928245C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x239282464);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_239282468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_239282470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23928247C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureFrameEvent.ScanStatus()
{
  return &type metadata for ObjectCaptureFrameEvent.ScanStatus;
}

uint64_t *sub_239282498@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

unint64_t sub_2392824B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = sub_23925FB08(&qword_256928208);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08((uint64_t *)&unk_256928180);
  v6 = sub_239352878();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v12, (uint64_t)v5, &qword_256928208);
    result = sub_239292F4C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_239352020();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    result = sub_239292F08(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_239282660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = sub_23925FB08((uint64_t *)&unk_2569281E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_2569281D0);
  v6 = sub_239352878();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v12, (uint64_t)v5, (uint64_t *)&unk_2569281E0);
    result = sub_239292F4C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_239352020();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_DWORD *)(v7[7] + 4 * v16) = *(_DWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FreeformMeshManager.BackgroundData(uint64_t a1)
{
  return sub_239267738(a1, qword_25692D070);
}

uint64_t sub_239282808()
{
  return 0x100000000;
}

uint64_t sub_239282824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v35 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v35 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v35 - v12;
  if ((*(_BYTE *)(v0 + 12) & 1) != 0)
  {
    sub_239268764(v0 + 13, (uint64_t)&v38, (uint64_t *)&unk_256927DC0);
    sub_239268764((uint64_t)&v38, (uint64_t)&v39, (uint64_t *)&unk_256927DC0);
    if (v39 == 2)
    {
      v14 = sub_239275BB8();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v14, v1);
      v15 = sub_239352098();
      v16 = sub_23935256C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v37 = v18;
        *(_DWORD *)v17 = 136380675;
        v36 = sub_23925F3EC(0x2864696C61567369, 0xE900000000000029, &v37);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: Invalid mesh manager config - either arkitVoxelSize or scanExtent must be specified!", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v18, -1, -1);
        MEMORY[0x23B83BC04](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      return 0;
    }
  }
  else if (*(float *)(v0 + 8) <= 0.0)
  {
    v25 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v13, v25, v1);
    v26 = sub_239352098();
    v27 = sub_23935256C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v37 = v29;
      *(_DWORD *)v28 = 136380675;
      v36 = sub_23925F3EC(0x2864696C61567369, 0xE900000000000029, &v37);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v26, v27, "ObjectCaptureSession.%{private}s: Invalid mesh manager config - invalid arkitVoxelSize!", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v29, -1, -1);
      MEMORY[0x23B83BC04](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
    return 0;
  }
  if (*(float *)(v0 + 16) <= 0.0 || *(float *)(v0 + 20) <= 0.0 || *(uint64_t *)(v0 + 32) < 1)
  {
    v20 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v20, v1);
    v21 = sub_239352098();
    v22 = sub_23935256C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v37 = v24;
      *(_DWORD *)v23 = 136380675;
      v36 = sub_23925F3EC(0x2864696C61567369, 0xE900000000000029, &v37);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v21, v22, "ObjectCaptureSession.%{private}s: Invalid mesh manager config - invalid mesh refinement parameters!", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v24, -1, -1);
      MEMORY[0x23B83BC04](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  }
  else
  {
    if ((*(_BYTE *)(v0 + 40) & 1) == 0 || *(uint64_t *)(v0 + 48) > 0)
      return 1;
    v30 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v11, v30, v1);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v37 = v34;
      *(_DWORD *)v33 = 136380675;
      v36 = sub_23925F3EC(0x2864696C61567369, 0xE900000000000029, &v37);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v31, v32, "MeshManager.%{private}s: Invalid mesh manager config - invalid heap vertex capacity!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v34, -1, -1);
      MEMORY[0x23B83BC04](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
  }
  return 0;
}

uint64_t sub_239282E00()
{
  return 2;
}

uint64_t sub_239282E08@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, float a12@<S2>)
{
  *(_QWORD *)a9 = result;
  *(_DWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 12) = BYTE4(a2) & 1;
  *(_BYTE *)(a9 + 13) = a3;
  *(_BYTE *)(a9 + 14) = a4;
  *(float *)(a9 + 16) = a10;
  *(float *)(a9 + 20) = a11;
  *(float *)(a9 + 24) = a12;
  *(_BYTE *)(a9 + 28) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  return result;
}

uint64_t sub_239282E3C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  if ((v5 & 1) != 0)
  {
    v6 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
    v7 = sub_239352098();
    v8 = sub_23935256C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v13 = v10;
      *(_DWORD *)v9 = 136380675;
      v12 = sub_23925F3EC(0x6573616572636E69, 0xEA00000000002928, &v13);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v7, v8, "ObjectCaptureSession.%{private}s: Area mode is already at max extent, ignoring request to increase the extent further!", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v10, -1, -1);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    *v0 = 1;
  }
  return v5 ^ 1u;
}

uint64_t sub_239282FF0(uint64_t a1)
{
  swift_allocObject();
  return sub_239283028(a1);
}

uint64_t sub_239283028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int128 *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, uint64_t);
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(void);
  char *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  BOOL v76;
  uint8_t *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  float v88;
  char *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  float v98;
  float v99;
  float v100;
  double v101;
  char *v102;
  NSObject *v103;
  os_log_type_t v104;
  _BOOL4 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  NSObject *v121;
  os_log_type_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  char *v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint8_t *v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  char *v134;
  NSObject *v135;
  os_log_type_t v136;
  uint64_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD v141[4];
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  float v167;
  double v168;
  double v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  char v180;
  _BYTE v181[6];
  char v182;
  char v183;
  float v184;
  char v185;
  char v186;
  char v187;
  char v188;

  v165 = a1;
  v2 = sub_2393521F4();
  v151 = *(_QWORD *)(v2 - 8);
  v152 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v150 = (char *)v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_2393525E4();
  v154 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v158 = (char *)v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_2393525C0();
  MEMORY[0x24BDAC7A8](v155);
  v156 = (char *)v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v6);
  v153 = (char *)v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393520B0();
  v9 = *(void (**)(char *, uint64_t))(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v147 = (char *)v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v146 = (char *)v141 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v142 = (char *)v141 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v144 = (char *)v141 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v143 = (char *)v141 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v145 = (char *)v141 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v148 = (char *)v141 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v141 - v24;
  *(_QWORD *)(v1 + 24) = 0;
  v161 = v1 + 16;
  swift_unknownObjectWeakInit();
  v26 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  v27 = MEMORY[0x24BEE4AF8];
  v28 = sub_2392824B0(MEMORY[0x24BEE4AF8]);
  v29 = MEMORY[0x24BEE4B08];
  *(_QWORD *)v26 = v28;
  *(_QWORD *)(v26 + 8) = v29;
  *(_QWORD *)(v26 + 16) = v29;
  *(_QWORD *)(v26 + 24) = v29;
  *(_WORD *)(v26 + 32) = 0;
  *(_OWORD *)(v26 + 40) = xmmword_239354C60;
  *(_OWORD *)(v26 + 56) = xmmword_239354C70;
  *(_BYTE *)(v26 + 72) = 0;
  *(_QWORD *)(v26 + 80) = 0;
  *(_QWORD *)(v26 + 88) = 0;
  *(_BYTE *)(v26 + 96) = 1;
  *(_QWORD *)(v26 + 112) = 0;
  *(_QWORD *)(v26 + 120) = 0;
  *(_WORD *)(v26 + 128) = 513;
  *(_QWORD *)(v26 + 136) = 0;
  v149 = type metadata accessor for FreeformMeshManager.BackgroundData(0);
  v162 = v26;
  sub_2393521DC();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount) = 0;
  v30 = (__int128 *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
  v31 = sub_2392824B0(v27);
  v32 = sub_2392824B0(v27);
  v188 = 1;
  v186 = 1;
  *(_QWORD *)v30 = v31;
  *((_QWORD *)v30 + 1) = v29;
  *((_QWORD *)v30 + 2) = v32;
  *((_QWORD *)v30 + 3) = v29;
  *((_QWORD *)v30 + 4) = 0;
  *((_QWORD *)v30 + 5) = 0;
  *((_BYTE *)v30 + 48) = 1;
  *((_QWORD *)v30 + 8) = 0;
  *((_QWORD *)v30 + 9) = 0;
  *((_BYTE *)v30 + 80) = 1;
  *(__int128 *)((char *)v30 + 88) = 0u;
  *(__int128 *)((char *)v30 + 104) = 0u;
  *(__int128 *)((char *)v30 + 120) = 0u;
  *(__int128 *)((char *)v30 + 136) = 0u;
  *((_QWORD *)v30 + 19) = 0;
  *((_BYTE *)v30 + 160) = 1;
  *(_OWORD *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection) = xmmword_239354C80;
  v187 = 1;
  v166 = v1;
  *(_DWORD *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kMeshOverlapRemovalThreshold) = 1065353216;
  v33 = sub_239275BB8();
  v163 = v9;
  v164 = v8;
  v34 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v9 + 2);
  v35 = v25;
  v159 = v33;
  v160 = v34;
  v36 = v25;
  v37 = v165;
  ((void (*)(char *))v34)(v35);
  sub_239291D18(v37);
  sub_239291D18(v37);
  v38 = sub_239352098();
  v39 = sub_239352560();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    *(double *)&v41 = COERCE_DOUBLE(swift_slowAlloc());
    v169 = *(double *)&v41;
    *(_DWORD *)v40 = 136380931;
    *(_QWORD *)&v170 = sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v169);
    sub_2393526B0();
    *(_WORD *)(v40 + 12) = 2082;
    v42 = *(_OWORD *)(v37 + 16);
    v170 = *(_OWORD *)v37;
    v171 = v42;
    v172 = *(_OWORD *)(v37 + 32);
    *(_QWORD *)&v173 = *(_QWORD *)(v37 + 48);
    sub_239291D18(v37);
    v43 = sub_23935232C();
    *(_QWORD *)&v170 = sub_23925F3EC(v43, v44, (uint64_t *)&v169);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_239291D40(v37);
    sub_239291D40(v37);
    _os_log_impl(&dword_23925B000, v38, v39, "MeshManager.%{private}s: Configuration = %{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v41, -1, -1);
    MEMORY[0x23B83BC04](v40, -1, -1);
  }
  else
  {
    sub_239291D40(v37);
    sub_239291D40(v37);
  }

  v45 = (void (*)(char *, uint64_t))*((_QWORD *)v163 + 1);
  v45(v36, v164);
  if ((sub_239282824() & 1) == 0)
  {
    sub_239291D40(v37);
    sub_2392625B0(v161);
    v71 = v162;
    goto LABEL_18;
  }
  v163 = v45;
  v46 = *(_OWORD *)(v37 + 16);
  v47 = v166;
  *(_OWORD *)(v166 + 48) = *(_OWORD *)v37;
  *(_OWORD *)(v47 + 64) = v46;
  *(_OWORD *)(v47 + 80) = *(_OWORD *)(v37 + 32);
  *(_QWORD *)(v47 + 96) = *(_QWORD *)(v37 + 48);
  v141[3] = sub_239261E08();
  sub_239291D18(v37);
  sub_2393521A0();
  *(_QWORD *)&v170 = MEMORY[0x24BEE4AF8];
  v141[1] = sub_239262570((unint64_t *)&qword_256927DD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  v141[0] = sub_23925FB08(&qword_256927410);
  v141[2] = sub_239263A08((unint64_t *)&qword_256927DE0, &qword_256927410, MEMORY[0x24BEE12C8]);
  sub_239352734();
  v48 = *MEMORY[0x24BEE5750];
  v154 = *(_QWORD *)(v154 + 104);
  v49 = v157;
  v50 = v158;
  ((void (*)(char *, uint64_t, uint64_t))v154)(v158, v48, v157);
  *(_QWORD *)(v166 + 32) = sub_239352614();
  sub_239352194();
  *(_QWORD *)&v170 = MEMORY[0x24BEE4AF8];
  sub_239352734();
  ((void (*)(char *, uint64_t, uint64_t))v154)(v50, v48, v49);
  v51 = v165;
  result = sub_239352614();
  *(_QWORD *)(v166 + 40) = result;
  v53 = *(_QWORD *)(v51 + 48);
  v54 = (unsigned __int128)(v53 * (__int128)3) >> 64;
  v55 = 3 * v53;
  if (v54 != v55 >> 63)
  {
    __break(1u);
    goto LABEL_48;
  }
  v56 = (unsigned __int128)(v55 * (__int128)3) >> 64;
  v57 = 3 * v55;
  if (v56 != v57 >> 63)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if ((unint64_t)(v57 - 0x2000000000000000) >> 62 == 3)
  {
    v58 = 4 * v57;
    type metadata accessor for FreeformMeshBuffer();
    v59 = *(_BYTE *)(v51 + 40);
    v60 = (char *)swift_unknownObjectRetain();
    v61 = sub_23934342C(v60, v59, v58);
    if (v61)
    {
      v62 = (char *)v61;
      v63 = v166;
      *(_QWORD *)(v166 + 104) = v61;
      v64 = *(void (**)(void))(*(_QWORD *)v61 + 288);
      swift_retain();
      v64();
      v65 = v150;
      sub_2393521DC();
      v66 = v162;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v151 + 40))(v66 + *(int *)(v149 + 52), v65, v152);
      swift_endAccess();
      v67 = *(_BYTE *)(v63 + 62);
      v69 = v163;
      v68 = v164;
      if ((v67 & 1) == 0)
      {
LABEL_43:
        v133 = v69;
        v134 = v147;
        v160(v147, v159, v68);
        v135 = sub_239352098();
        v136 = sub_239352578();
        if (os_log_type_enabled(v135, v136))
        {
          v137 = v68;
          v138 = (uint8_t *)swift_slowAlloc();
          *(double *)&v139 = COERCE_DOUBLE(swift_slowAlloc());
          v158 = v62;
          v140 = v139;
          v169 = *(double *)&v139;
          *(_DWORD *)v138 = 136380675;
          v168 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v169));
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v135, v136, "MeshManager.%{private}s: Initialized area mode mesh manager", v138, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v140, -1, -1);
          MEMORY[0x23B83BC04](v138, -1, -1);
          sub_239291D40(v51);
          swift_release();

          v133(v147, v137);
        }
        else
        {
          swift_release();
          sub_239291D40(v51);

          v133(v134, v68);
        }
        return v166;
      }
      v70 = v164;
      sub_239268764(v51 + 13, (uint64_t)&v182, (uint64_t *)&unk_256927DC0);
      sub_239268764((uint64_t)&v182, v66 + 129, (uint64_t *)&unk_256927DC0);
      v167 = 0.0;
      sub_239268764((uint64_t)&v182, (uint64_t)&v183, (uint64_t *)&unk_256927DC0);
      if (v183 == 2)
      {
        sub_239268764(v51 + 8, (uint64_t)v181, &qword_256927DE8);
        sub_239268764((uint64_t)v181, (uint64_t)&v184, &qword_256927DE8);
        v68 = v70;
        if ((v185 & 1) == 0)
          v167 = v184;
      }
      else
      {
        v87 = v183 & 1;
        v88 = sub_239270C7C(v183 & 1);
        v167 = v88;
        v89 = v145;
        v160(v145, v159, v70);
        v90 = sub_239352098();
        v91 = sub_239352578();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = swift_slowAlloc();
          v93 = swift_slowAlloc();
          *(_QWORD *)&v170 = v93;
          *(_DWORD *)v92 = 136381187;
          v158 = v62;
          v169 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v170));
          sub_2393526B0();
          *(_WORD *)(v92 + 12) = 2050;
          v169 = v88;
          sub_2393526B0();
          *(_WORD *)(v92 + 22) = 2082;
          LOBYTE(v169) = v87;
          v94 = sub_23935232C();
          v169 = COERCE_DOUBLE(sub_23925F3EC(v94, v95, (uint64_t *)&v170));
          v62 = v158;
          sub_2393526B0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23925B000, v90, v91, "MeshManager.%{private}s: Computed voxel size: %{public}f from scan extent: %{public}s. Enabled automatic scan extent switching in area mode!", (uint8_t *)v92, 0x20u);
          swift_arrayDestroy();
          v96 = v93;
          v51 = v165;
          MEMORY[0x23B83BC04](v96, -1, -1);
          MEMORY[0x23B83BC04](v92, -1, -1);

          v97 = v145;
        }
        else
        {

          v97 = v89;
        }
        v69 = v163;
        v163(v97, v70);
        v68 = v70;
      }
      swift_beginAccess();
      v98 = v167;
      if (v167 <= 0.0 || (v99 = *(float *)(v51 + 16), v99 <= 0.0) || (v100 = *(float *)(v51 + 20), v100 <= 0.0))
      {
        v112 = v146;
        v160(v146, v159, v68);
        sub_239291D18(v51);
        sub_239291D18(v51);
        sub_239291D18(v51);
        v113 = sub_239352098();
        v114 = sub_23935256C();
        if (os_log_type_enabled(v113, v114))
        {
          v115 = v68;
          v116 = swift_slowAlloc();
          *(double *)&v117 = COERCE_DOUBLE(swift_slowAlloc());
          v169 = *(double *)&v117;
          *(_DWORD *)v116 = 136381443;
          v158 = v62;
          v168 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v169));
          sub_2393526B0();
          *(_WORD *)(v116 + 12) = 2050;
          v168 = v98;
          sub_2393526B0();
          *(_WORD *)(v116 + 22) = 2050;
          v168 = *(float *)(v51 + 16);
          sub_2393526B0();
          sub_239291D40(v51);
          *(_WORD *)(v116 + 32) = 2050;
          v168 = *(float *)(v51 + 20);
          sub_2393526B0();
          sub_239291D40(v51);
          sub_239291D40(v51);
          _os_log_impl(&dword_23925B000, v113, v114, "MeshManager.%{private}s: Invalid mesh refinement voxel parameters: arkit scene recon voxel size = %{public}f, initial voxel size = %{public}f, voxel size increment = %{public}f", (uint8_t *)v116, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v117, -1, -1);
          MEMORY[0x23B83BC04](v116, -1, -1);
          sub_239291D40(v51);
          swift_release();

          v118 = v146;
LABEL_33:
          v163(v118, v115);
LABEL_36:
          swift_release();
          return 0;
        }
        swift_release();
        sub_239291D40(v51);
        sub_239291D40(v51);
        sub_239291D40(v51);
        sub_239291D40(v51);

        v119 = v112;
      }
      else
      {
        *(float *)(v66 + 56) = v99;
        *(float *)(v66 + 60) = v100;
        *(_DWORD *)(v66 + 64) = *(_DWORD *)(v51 + 24);
        *(float *)(v66 + 68) = v98;
        v101 = *(double *)(v51 + 32);
        if (*(uint64_t *)&v101 >= 1)
        {
          *(double *)(v166 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData + 48) = v101;
          v102 = v143;
          v160(v143, v159, v68);
          v103 = sub_239352098();
          v104 = sub_239352578();
          v105 = os_log_type_enabled(v103, v104);
          v158 = v62;
          if (v105)
          {
            v106 = swift_slowAlloc();
            *(double *)&v107 = COERCE_DOUBLE(swift_slowAlloc());
            v169 = *(double *)&v107;
            *(_DWORD *)v106 = 136381443;
            v168 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v169));
            sub_2393526B0();
            *(_WORD *)(v106 + 12) = 1026;
            LODWORD(v168) = GESSVersionNumberMajor();
            sub_2393526B0();
            *(_WORD *)(v106 + 18) = 1026;
            LODWORD(v168) = GESSVersionNumberMinor();
            sub_2393526B0();
            *(_WORD *)(v106 + 24) = 1026;
            v69 = v163;
            v108 = v164;
            LODWORD(v168) = GESSVersionNumberPatch();
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v103, v104, "MeshManager.%{private}s: Found mesh processing library version: %{public}u.%{public}u.%{public}u", (uint8_t *)v106, 0x1Eu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v107, -1, -1);
            v109 = v106;
            v68 = v108;
            MEMORY[0x23B83BC04](v109, -1, -1);

            v110 = v102;
            v111 = v108;
          }
          else
          {

            v110 = v102;
            v111 = v68;
          }
          v125 = v69;
          v69(v110, v111);
          v126 = v144;
          v160(v144, v159, v68);
          v127 = sub_239352098();
          v128 = sub_239352578();
          if (os_log_type_enabled(v127, v128))
          {
            v129 = (uint8_t *)swift_slowAlloc();
            *(double *)&v130 = COERCE_DOUBLE(swift_slowAlloc());
            v169 = *(double *)&v130;
            *(_DWORD *)v129 = 136380675;
            v168 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v169));
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v127, v128, "MeshManager.%{private}s: Enabled mesh simplification", v129, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v130, -1, -1);
            v131 = v129;
            v68 = v164;
            MEMORY[0x23B83BC04](v131, -1, -1);
          }

          v132 = v126;
          v69 = v125;
          v125(v132, v68);
          v51 = v165;
          v62 = v158;
          goto LABEL_43;
        }
        v120 = v142;
        v160(v142, v159, v68);
        sub_239291D18(v51);
        sub_239291D18(v51);
        v121 = sub_239352098();
        v122 = sub_23935256C();
        if (os_log_type_enabled(v121, v122))
        {
          v115 = v68;
          v123 = swift_slowAlloc();
          *(double *)&v124 = COERCE_DOUBLE(swift_slowAlloc());
          v169 = *(double *)&v124;
          *(_DWORD *)v123 = 136380931;
          v158 = v62;
          v168 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v169));
          sub_2393526B0();
          *(_WORD *)(v123 + 12) = 2050;
          sub_239291D40(v51);
          v168 = v101;
          sub_2393526B0();
          sub_239291D40(v51);
          _os_log_impl(&dword_23925B000, v121, v122, "MeshManager.%{private}s: Invalid point density threshold %{public}ld!", (uint8_t *)v123, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v124, -1, -1);
          MEMORY[0x23B83BC04](v123, -1, -1);
          sub_239291D40(v51);
          swift_release();

          v118 = v142;
          goto LABEL_33;
        }
        sub_239291D40(v51);
        swift_release();
        sub_239291D40(v51);
        sub_239291D40(v51);

        v119 = v120;
      }
      v69(v119, v68);
      goto LABEL_36;
    }
    v72 = v148;
    v73 = v164;
    v160(v148, v159, v164);
    v74 = sub_239352098();
    v75 = sub_23935256C();
    v76 = os_log_type_enabled(v74, v75);
    v71 = v162;
    if (v76)
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      *(_QWORD *)&v170 = v78;
      *(_DWORD *)v77 = 136380675;
      v169 = COERCE_DOUBLE(sub_23925F3EC(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v170));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v74, v75, "MeshManager.%{private}s: Failed to create mesh buffer in area mode mesh manager!", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v78, -1, -1);
      MEMORY[0x23B83BC04](v77, -1, -1);
      sub_239291D40(v165);

      v79 = v148;
    }
    else
    {
      sub_239291D40(v51);

      v79 = v72;
    }
    v163(v79, v73);
    sub_2392625B0(v161);
    v80 = v166;

    swift_unknownObjectRelease();
LABEL_18:
    sub_2392688AC(v71, type metadata accessor for FreeformMeshManager.BackgroundData);
    v81 = v30[8];
    v82 = v30[9];
    v83 = v30[6];
    v177 = v30[7];
    v178 = v81;
    v179 = v82;
    v180 = *((_BYTE *)v30 + 160);
    v84 = v30[5];
    v174 = v30[4];
    v175 = v84;
    v176 = v83;
    v85 = v30[1];
    v170 = *v30;
    v171 = v85;
    v86 = v30[3];
    v172 = v30[2];
    v173 = v86;
    sub_239291D68((uint64_t)&v170);
    type metadata accessor for FreeformMeshManager(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_239284510()
{
  return sub_239284E48();
}

uint64_t sub_23928451C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t result;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  char *v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  uint64_t v72[4];

  v60 = a2;
  v65 = a3;
  v4 = sub_2393520B0();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v58 - v7;
  v8 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23925FB08(&qword_256928158);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v59 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  v16 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_239352020();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  v26 = objc_msgSend(a1, sel_identifier);
  sub_239352008();

  v27 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v66 = v25;
  v27(v10, v25, v19);
  v67 = v20;
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v64 = v19;
  v28(v10, 0, 1, v19);
  sub_239270CA0(a1, (unint64_t)v10, (unint64_t)v15);
  sub_23925FE28((uint64_t)v10, &qword_2569281C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23925FE28((uint64_t)v15, &qword_256928158);
    v29 = sub_239275BB8();
    v31 = v68;
    v30 = v69;
    v32 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v61, v29, v69);
    v33 = sub_239352098();
    v34 = sub_23935256C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v72[0] = v36;
      *(_DWORD *)v35 = 136380675;
      v71[0] = sub_23925F3EC(0xD000000000000012, 0x800000023935B780, v72);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v33, v34, "MeshManager.%{private}s: Failed to convert ARMeshAnchor to ObjectCaptureSession.Mesh.Anchor", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v36, -1, -1);
      MEMORY[0x23B83BC04](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v30);
    result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v66, v64);
    v38 = 0;
    goto LABEL_9;
  }
  v58 = (void (*)(char *, uint64_t, uint64_t))v27;
  v61 = (char *)v16;
  v39 = v68;
  v40 = v69;
  v41 = (uint64_t)v15;
  v42 = v62;
  v43 = v63;
  sub_239292F08(v41, v63);
  v44 = v60 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  v45 = *(_QWORD *)(v44 + 24);
  swift_bridgeObjectRetain();
  v46 = sub_239284B40(v43, v45);
  swift_bridgeObjectRelease();
  if ((v46 & 1) == 0)
  {
    v56 = v64;
    v58(v23, v43, v64);
    v57 = v59;
    sub_2392751F8(v43, v59);
    v38 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, char *))(v17 + 56))(v57, 0, 1, v61);
    swift_beginAccess();
    sub_239284CC4(v57, (uint64_t)v23);
    swift_endAccess();
    sub_2392688AC(v43, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v66, v56);
LABEL_9:
    v52 = v65;
    goto LABEL_12;
  }
  v47 = sub_239275BB8();
  v48 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v42, v47, v40);
  v49 = sub_239352098();
  v50 = sub_23935256C();
  v51 = os_log_type_enabled(v49, v50);
  v53 = v64;
  v52 = v65;
  if (v51)
  {
    v54 = (uint8_t *)swift_slowAlloc();
    v55 = swift_slowAlloc();
    v71[0] = v55;
    *(_DWORD *)v54 = 136380675;
    v70 = sub_23925F3EC(0xD000000000000012, 0x800000023935B780, v71);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v49, v50, "MeshManager.%{private}s: Received mesh anchor from previous session, dropping it!", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v55, -1, -1);
    MEMORY[0x23B83BC04](v54, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v62, v40);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v40);
  }
  sub_2392688AC(v63, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
  result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v66, v53);
  v38 = 0;
LABEL_12:
  *v52 = v38;
  return result;
}

uint64_t sub_239284B40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_239352020();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
        v6 = sub_239352290(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_239262570(&qword_256928170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_2393522B4();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_239284CC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_23925FE28(a1, &qword_256928158);
    sub_2392930F8(a2, (uint64_t)v8);
    v13 = sub_239352020();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_23925FE28((uint64_t)v8, &qword_256928158);
  }
  else
  {
    sub_239292F08(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_239293C84((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_239352020();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_239284E3C()
{
  return sub_239284E48();
}

uint64_t sub_239284E48()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(v0 + 32);
  sub_2393525F0();

  return v3;
}

uint64_t sub_239284EA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  char *v38;
  void (*v39)(char *, uint64_t);
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t result;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65[3];
  uint64_t v66;

  v63 = a3;
  v5 = sub_2393520B0();
  v62 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v57 = (uint64_t)&v56 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v56 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v56 - v22;
  v24 = objc_msgSend(a1, sel_identifier);
  sub_239352008();

  v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v64 = v23;
  v25(v21, v23, v10);
  v26 = a2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  v27 = *(_QWORD *)(v26 + 16);
  v28 = *(_QWORD *)(v27 + 16);
  v58 = v16;
  v61 = v25;
  if (v28)
  {
    swift_bridgeObjectRetain();
    v29 = sub_239292F4C((uint64_t)v21);
    if ((v30 & 1) != 0)
    {
      v31 = v29;
      v56 = v10;
      v32 = *(_QWORD *)(v27 + 56);
      v33 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      v34 = v5;
      v35 = *(_QWORD *)(v33 - 8);
      v36 = v32 + *(_QWORD *)(v35 + 72) * v31;
      v10 = v56;
      sub_2392751F8(v36, (uint64_t)v9);
      v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
      v5 = v34;
      v37(v9, 0, 1, v33);
    }
    else
    {
      v33 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
  }
  v38 = v64;
  v39 = *(void (**)(char *, uint64_t))(v11 + 8);
  v39(v21, v10);
  type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v9, 1, v33);
  sub_23925FE28((uint64_t)v9, &qword_256928158);
  if (v40 == 1)
  {
    v41 = sub_239275BB8();
    v42 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v60, v41, v5);
    v43 = v59;
    v61(v59, v38, v10);
    v44 = sub_239352098();
    v45 = sub_239352578();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v61 = (void (*)(char *, char *, uint64_t))v5;
      v48 = v47;
      v65[0] = v47;
      *(_DWORD *)v46 = 136380931;
      v66 = sub_23925F3EC(0xD000000000000015, 0x800000023935B760, v65);
      sub_2393526B0();
      *(_WORD *)(v46 + 12) = 2082;
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v49 = sub_2393528C0();
      v66 = sub_23925F3EC(v49, v50, v65);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      v39(v43, v10);
      _os_log_impl(&dword_23925B000, v44, v45, "MeshManager.%{private}s: No mesh anchor with ID %{public}s in processed data!", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v48, -1, -1);
      MEMORY[0x23B83BC04](v46, -1, -1);

      (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v62 + 8))(v60, v61);
      v51 = v64;
    }
    else
    {

      v39(v43, v10);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v5);
      v51 = v38;
    }
    result = ((uint64_t (*)(char *, uint64_t))v39)(v51, v10);
    v55 = 0;
  }
  else
  {
    v52 = v58;
    v61(v58, v38, v10);
    swift_beginAccess();
    v53 = v57;
    sub_239294364(v57, v52);
    v39((char *)v53, v10);
    swift_endAccess();
    result = ((uint64_t (*)(char *, uint64_t))v39)(v38, v10);
    v55 = 1;
  }
  *v63 = v55;
  return result;
}

uint64_t sub_2392853F8()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(v0 + 32);
  sub_23925FB08(&qword_256927DF0);
  sub_2393525F0();

  return v3;
}

double sub_239285460@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  double result;
  __int128 v5;
  __int128 v6;
  char v7;

  v3 = *(id *)(v1 + 32);
  sub_23925FB08(&qword_256927DF8);
  sub_2393525F0();

  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_2392854D8(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  unint64_t v4;
  void *v5;
  __n128 *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v5 = *(void **)(v4 + 32);
  v6 = (__n128 *)swift_allocObject();
  v6[1] = a1;
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  v6[5].n128_u64[0] = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_239291F5C;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_239292018;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23928562C;
  aBlock[3] = &unk_250AC43B8;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23928562C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_23928564C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  uint64_t result;
  _QWORD v6[6];

  v1 = *(void **)(v0 + 32);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_239292050;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_239295A70;
  v6[5] = v2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23928562C;
  v6[3] = &unk_250AC4408;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239285760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, unint64_t, uint64_t);
  uint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  int v60;
  uint64_t *v61;
  unint64_t v62;
  char v63;
  char v64;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  __int128 v85;
  __int128 v86;
  _QWORD v87[3];
  unint64_t v88;
  __int128 v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t *v102;
  uint64_t v103;
  int64_t v104;
  unint64_t v105;
  uint64_t v106;
  __int128 v107[5];
  char v108;
  uint64_t v109;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v87 - v7;
  v9 = sub_23925FB08(&qword_256928158);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v93 = (uint64_t)v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v87 - v12;
  v14 = sub_239352020();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v101 = (char *)v87 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v105 = (unint64_t)v87 - v21;
  v22 = sub_23925FB08(&qword_2569281C0);
  result = MEMORY[0x24BDAC7A8](v22);
  v100 = (char *)v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount);
  if (v25 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v25)
  {
    v26 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v26, v2);
    v27 = sub_239352098();
    v28 = sub_23935256C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_QWORD *)&v107[0] = v30;
      *(_DWORD *)v29 = 136380675;
      v109 = sub_23925F3EC(0xD000000000000013, 0x800000023935B740, (uint64_t *)v107);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v27, v28, "MeshManager.%{private}s: Dropping the new mesh update request because the previous request is still running!", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v30, -1, -1);
      MEMORY[0x23B83BC04](v29, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  v92 = v8;
  v87[1] = a1;
  v31 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
  swift_beginAccess();
  v102 = v31;
  v32 = v31[1];
  v33 = *(_QWORD *)(v32 + 56);
  v94 = v32 + 56;
  v34 = 1 << *(_BYTE *)(v32 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  v95 = (unint64_t)(v34 + 63) >> 6;
  v98 = v32;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  *(_QWORD *)&v38 = 136380931;
  v89 = v38;
  v88 = 0x800000023935B740;
  v87[2] = MEMORY[0x24BEE4AD8] + 8;
  v97 = v3;
  v99 = v13;
  v90 = v18;
  v39 = v105;
  v96 = v2;
  v91 = v15;
  while (1)
  {
    v40 = (uint64_t)v101;
    v41 = v100;
    if (v36)
    {
      v103 = (v36 - 1) & v36;
      v104 = v37;
      v42 = __clz(__rbit64(v36)) | (v37 << 6);
      goto LABEL_27;
    }
    v43 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v43 >= v95)
      goto LABEL_44;
    v44 = *(_QWORD *)(v94 + 8 * v43);
    v45 = v37 + 1;
    if (!v44)
    {
      v45 = v37 + 2;
      if (v37 + 2 >= v95)
        goto LABEL_44;
      v44 = *(_QWORD *)(v94 + 8 * v45);
      if (!v44)
      {
        v45 = v37 + 3;
        if (v37 + 3 >= v95)
          goto LABEL_44;
        v44 = *(_QWORD *)(v94 + 8 * v45);
        if (!v44)
          break;
      }
    }
LABEL_26:
    v103 = (v44 - 1) & v44;
    v104 = v45;
    v42 = __clz(__rbit64(v44)) + (v45 << 6);
LABEL_27:
    v47 = *(_QWORD *)(v15 + 72);
    v48 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v48(v100, *(_QWORD *)(v98 + 48) + v47 * v42, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v41, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v41, 1, v14) == 1)
      goto LABEL_45;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v39, v41, v14);
    v48((char *)v40, v39, v14);
    v49 = *v102;
    if (*(_QWORD *)(*v102 + 16))
    {
      swift_bridgeObjectRetain();
      v50 = sub_239292F4C(v40);
      if ((v51 & 1) != 0)
      {
        v52 = v50;
        v53 = *(_QWORD *)(v49 + 56);
        v54 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
        v55 = *(_QWORD *)(v54 - 8);
        v56 = v53 + *(_QWORD *)(v55 + 72) * v52;
        v13 = v99;
        sub_2392751F8(v56, (uint64_t)v99);
        v57 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56);
        v40 = (uint64_t)v101;
        v57(v13, 0, 1, v54);
      }
      else
      {
        v54 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
        v13 = v99;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v99, 1, 1, v54);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v54 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v13, 1, 1, v54);
    }
    v58 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v58(v40, v14);
    type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    v59 = *(_QWORD *)(v54 - 8);
    v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v13, 1, v54);
    sub_23925FE28((uint64_t)v13, &qword_256928158);
    if (v60 == 1)
    {
      v39 = v105;
      result = ((uint64_t (*)(unint64_t, uint64_t))v58)(v105, v14);
    }
    else
    {
      v61 = v102;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v62 = sub_239292F4C(v105);
      v64 = v63;
      swift_bridgeObjectRelease();
      if ((v64 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v66 = *v61;
        v106 = *v61;
        *v61 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_239293EB4();
          v66 = v106;
        }
        v58(*(_QWORD *)(v66 + 48) + v62 * v47, v14);
        v67 = v106;
        v68 = v93;
        sub_239292F08(*(_QWORD *)(v106 + 56) + *(_QWORD *)(v59 + 72) * v62, v93);
        sub_2392939B0(v62, v67);
        *v61 = v67;
        swift_bridgeObjectRelease();
        v69 = 0;
        v70 = v96;
      }
      else
      {
        v69 = 1;
        v70 = v96;
        v68 = v93;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v68, v69, 1, v54);
      sub_23925FE28(v68, &qword_256928158);
      swift_endAccess();
      v71 = sub_239275BB8();
      v72 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v92, v71, v70);
      v73 = v90;
      v48(v90, v105, v14);
      v74 = sub_239352098();
      v75 = sub_239352578();
      v76 = os_log_type_enabled(v74, v75);
      v15 = v91;
      if (v76)
      {
        v77 = swift_slowAlloc();
        v78 = swift_slowAlloc();
        *(_QWORD *)&v107[0] = v78;
        *(_DWORD *)v77 = v89;
        *(_QWORD *)(v77 + 4) = sub_23925F3EC(0xD000000000000013, v88, (uint64_t *)v107);
        *(_WORD *)(v77 + 12) = 2082;
        sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v79 = sub_2393528C0();
        *(_QWORD *)(v77 + 14) = sub_23925F3EC(v79, v80, (uint64_t *)v107);
        swift_bridgeObjectRelease();
        v58((uint64_t)v73, v14);
        _os_log_impl(&dword_23925B000, v74, v75, "MeshManager.%{private}s: Removed mesh anchor %{public}s from the unprocessed mesh anchor set", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v78, -1, -1);
        v81 = v77;
        v70 = v96;
        MEMORY[0x23B83BC04](v81, -1, -1);

      }
      else
      {

        v58((uint64_t)v73, v14);
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v72, v70);
      v39 = v105;
      result = ((uint64_t (*)(unint64_t, uint64_t))v58)(v105, v14);
      v13 = v99;
    }
    v36 = v103;
    v37 = v104;
  }
  v46 = v37 + 4;
  if (v37 + 4 >= v95)
  {
LABEL_44:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v100, 1, 1, v14);
LABEL_45:
    swift_release();
    v82 = v102;
    v83 = v102[1];
    v84 = *((_BYTE *)v102 + 160);
    *(_QWORD *)&v107[0] = *v102;
    *((_QWORD *)&v107[0] + 1) = v83;
    v85 = *((_OWORD *)v102 + 7);
    v107[1] = *((_OWORD *)v102 + 6);
    v107[2] = v85;
    v86 = *((_OWORD *)v102 + 9);
    v107[3] = *((_OWORD *)v102 + 8);
    v107[4] = v86;
    v108 = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2392862F4(v107);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v82 = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    v82[1] = MEMORY[0x24BEE4B08];
    return swift_bridgeObjectRelease();
  }
  v44 = *(_QWORD *)(v94 + 8 * v46);
  if (v44)
  {
    v45 = v37 + 4;
    goto LABEL_26;
  }
  while (1)
  {
    v45 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v45 >= v95)
      goto LABEL_44;
    v44 = *(_QWORD *)(v94 + 8 * v45);
    ++v46;
    if (v44)
      goto LABEL_26;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_23928615C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _QWORD aBlock[6];

  v1 = sub_239352230();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (_QWORD *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 40);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5610], v1);
  v6 = v5;
  LOBYTE(v5) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v8 = *(void **)(v0 + 32);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_239295704;
  *(_QWORD *)(v9 + 24) = v0;
  aBlock[4] = sub_239295A70;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23928562C;
  aBlock[3] = &unk_250AC46F8;
  v10 = _Block_copy(aBlock);
  v11 = v8;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v10 & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_2392862F4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;

  v38 = sub_2393520B0();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_239352170();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_2393521C4();
  v8 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_239352230();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = a1[3];
  v45 = a1[2];
  v46 = v15;
  v47 = a1[4];
  v48 = *((_BYTE *)a1 + 80);
  v16 = a1[1];
  v43 = *a1;
  v44 = v16;
  v17 = *(void **)(v1 + 32);
  *v14 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v18 = v17;
  LOBYTE(v17) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)(v43 + 16) || *(_QWORD *)(*((_QWORD *)&v43 + 1) + 16))
  {
    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount);
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount) = v22;
      if (v22 == 1)
      {
        v23 = *(void **)(v1 + 40);
        v24 = swift_allocObject();
        v25 = v46;
        *(_OWORD *)(v24 + 48) = v45;
        *(_OWORD *)(v24 + 64) = v25;
        *(_OWORD *)(v24 + 80) = v47;
        *(_BYTE *)(v24 + 96) = v48;
        v26 = v44;
        *(_OWORD *)(v24 + 16) = v43;
        *(_OWORD *)(v24 + 32) = v26;
        *(_QWORD *)(v24 + 104) = v1;
        aBlock[4] = (uint64_t)sub_2392956C4;
        aBlock[5] = v24;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_239262EDC;
        aBlock[3] = (uint64_t)&unk_250AC46A8;
        v27 = _Block_copy(aBlock);
        v28 = v23;
        sub_2392956D0((uint64_t)&v43);
        swift_retain();
        sub_239352188();
        v41 = MEMORY[0x24BEE4AF8];
        sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        sub_23925FB08((uint64_t *)&unk_2569281F0);
        sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
        sub_239352734();
        MEMORY[0x23B83A4A0](0, v10, v7, v27);
        _Block_release(v27);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v39);
        return swift_release();
      }
LABEL_13:
      __break(1u);
      return result;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v29 = sub_239275BB8();
  v30 = v37;
  v31 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v4, v29, v38);
  v32 = sub_239352098();
  v33 = sub_23935256C();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    aBlock[0] = v35;
    *(_DWORD *)v34 = 136380675;
    v41 = sub_23925F3EC(0xD000000000000030, 0x800000023935B700, aBlock);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v32, v33, "MeshManager.%{private}s: Received empty mesh update data, not updating mesh!", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v35, -1, -1);
    MEMORY[0x23B83BC04](v34, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v4, v31);
}

void sub_23928676C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v48;
  unint64_t v49;
  char *v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v58;
  uint64_t *v59;
  char v60;
  char v61;
  int isUniquelyReferenced_nonNull_native;
  double v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  void (*v93)(_QWORD);
  char *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  int v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  int64_t v112;
  char *v113;
  uint64_t v114;
  id v115;
  char *v116;
  uint64_t v117;
  BOOL v118;
  char *v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v125;
  int64_t v126;
  unint64_t v127;
  int64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  NSObject *v135;
  os_log_type_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t ObjectType;
  void (*v172)(uint64_t, uint64_t, uint64_t);
  uint64_t v173;
  char *v174;
  unint64_t v175;
  NSObject *v176;
  os_log_type_t v177;
  uint64_t v178;
  uint64_t v179;
  double v180;
  double v181;
  char *v182;
  uint64_t v183;
  uint64_t *v184;
  char *v185;
  unint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  __int128 v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  uint64_t v199;
  int64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(_QWORD, _QWORD, _QWORD);
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int64_t v212;
  void (*v213)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  double v219;
  unint64_t v220;

  v4 = sub_23925FB08(&qword_256928190);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v217 = (char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v209 = (uint64_t)&v184 - v7;
  v8 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v11 = *(_QWORD *)(v214 - 8);
  v12 = MEMORY[0x24BDAC7A8](v214);
  v211 = (uint64_t)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v201 = (uint64_t)&v184 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v210 = (uint64_t)&v184 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v204 = (uint64_t)&v184 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v203 = (uint64_t)&v184 - v20;
  v21 = sub_239352020();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v202 = (char *)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v195 = (char *)&v184 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v184 - v27;
  v197 = sub_2393520B0();
  v200 = *(_QWORD *)(v197 - 8);
  v29 = MEMORY[0x24BDAC7A8](v197);
  v185 = (char *)&v184 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v187 = (char *)&v184 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v184 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v188 = (char *)&v184 - v36;
  v37 = sub_23925FB08(&qword_2569281C0);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v206 = (char *)&v184 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v207 = (char *)&v184 - v40;
  sub_239350E8C();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v189 = a2;
  v41 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  v41[1] = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  v220 = MEMORY[0x24BEE4AF8];
  v184 = a1;
  v42 = a1[1];
  v43 = *(_QWORD *)(v42 + 56);
  v196 = v42 + 56;
  v44 = 1 << *(_BYTE *)(v42 + 32);
  v45 = -1;
  if (v44 < 64)
    v45 = ~(-1 << v44);
  v46 = v45 & v43;
  v198 = (unint64_t)(v44 + 63) >> 6;
  v208 = v42;
  swift_bridgeObjectRetain();
  v47 = 0;
  *(_QWORD *)&v48 = 136380931;
  v192 = v48;
  v186 = (unint64_t)"removeOverlappingAnchors(_:)";
  v191 = 0x800000023935B700;
  v190 = MEMORY[0x24BEE4AD8] + 8;
  v215 = v41;
  v216 = v11;
  v194 = v28;
  v193 = v21;
  v199 = v22;
  v205 = (void (*)(_QWORD, _QWORD, _QWORD))v10;
  while (1)
  {
    if (v46)
    {
      v212 = (v46 - 1) & v46;
      v213 = v47;
      v49 = __clz(__rbit64(v46)) | ((_QWORD)v47 << 6);
      v50 = v207;
      goto LABEL_22;
    }
    v51 = (int64_t)v47 + 1;
    v50 = v207;
    if (__OFADD__(v47, 1))
      goto LABEL_109;
    if (v51 >= v198)
      break;
    v52 = *(_QWORD *)(v196 + 8 * v51);
    v53 = (int64_t)v47 + 1;
    if (!v52)
    {
      v53 = (int64_t)v47 + 2;
      if ((uint64_t)v47 + 2 >= v198)
        break;
      v52 = *(_QWORD *)(v196 + 8 * v53);
      if (!v52)
      {
        v53 = (int64_t)v47 + 3;
        if ((uint64_t)v47 + 3 >= v198)
          break;
        v52 = *(_QWORD *)(v196 + 8 * v53);
        if (!v52)
        {
          v54 = (char *)v47 + 4;
          if ((uint64_t)v47 + 4 >= v198)
            break;
          v52 = *(_QWORD *)(v196 + 8 * (_QWORD)v54);
          if (!v52)
          {
            while (1)
            {
              v53 = (int64_t)(v54 + 1);
              if (__OFADD__(v54, 1))
                goto LABEL_111;
              if (v53 >= v198)
                goto LABEL_37;
              v52 = *(_QWORD *)(v196 + 8 * v53);
              ++v54;
              if (v52)
                goto LABEL_21;
            }
          }
          v53 = (int64_t)v47 + 4;
        }
      }
    }
LABEL_21:
    v212 = (v52 - 1) & v52;
    v213 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v53;
    v49 = __clz(__rbit64(v52)) + (v53 << 6);
LABEL_22:
    v55 = *(_QWORD *)(v22 + 72);
    v56 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v56(v50, *(_QWORD *)(v208 + 48) + v55 * v49, v21);
    v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v57(v50, 0, 1, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v50, 1, v21) == 1)
    {
      v213 = v57;
      swift_release();
      v11 = v216;
      goto LABEL_38;
    }
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v50, v21);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v58 = sub_239292F4C((uint64_t)v28);
    v59 = v41;
    v61 = v60;
    swift_bridgeObjectRelease();
    if ((v61 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v63 = *(double *)v59;
      v219 = *(double *)v59;
      *v59 = 0x8000000000000000;
      v41 = v59;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_239293EB4();
        v63 = v219;
      }
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))(*(_QWORD *)(*(_QWORD *)&v63 + 48) + v58 * v55, v21);
      v64 = *(_QWORD *)&v219;
      v11 = v216;
      v65 = v205;
      sub_239292F08(*(_QWORD *)(*(_QWORD *)&v219 + 56) + *(_QWORD *)(v216 + 72) * v58, (uint64_t)v205);
      sub_2392939B0(v58, v64);
      *v41 = v64;
      swift_bridgeObjectRelease();
      v66 = 0;
      v67 = v214;
    }
    else
    {
      v66 = 1;
      v11 = v216;
      v41 = v59;
      v67 = v214;
      v65 = v205;
    }
    (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v11 + 56))(v65, v66, 1, v67);
    swift_endAccess();
    if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v11 + 48))(v65, 1, v67) == 1)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
      sub_23925FE28((uint64_t)v65, &qword_256928158);
    }
    else
    {
      v68 = v203;
      sub_239292F08((uint64_t)v65, v203);
      *(_BYTE *)(v68 + *(int *)(v67 + 52)) = 1;
      sub_2392751F8(v68, v204);
      v69 = v220;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v69 = sub_239291B10(0, *(_QWORD *)(v69 + 16) + 1, 1, v69);
      v71 = *(_QWORD *)(v69 + 16);
      v70 = *(_QWORD *)(v69 + 24);
      if (v71 >= v70 >> 1)
        v69 = sub_239291B10(v70 > 1, v71 + 1, 1, v69);
      *(_QWORD *)(v69 + 16) = v71 + 1;
      sub_239292F08(v204, v69+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v71);
      v220 = v69;
      v72 = sub_239275BB8();
      v73 = v200;
      v74 = v197;
      (*(void (**)(char *, uint64_t, uint64_t))(v200 + 16))(v35, v72, v197);
      v75 = v195;
      v76 = v35;
      v77 = v194;
      v21 = v193;
      v56(v195, (unint64_t)v194, v193);
      v78 = sub_239352098();
      v79 = sub_239352578();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = swift_slowAlloc();
        v81 = swift_slowAlloc();
        v218 = v81;
        *(_DWORD *)v80 = v192;
        *(_QWORD *)(v80 + 4) = sub_23925F3EC(0xD000000000000030, v191, &v218);
        *(_WORD *)(v80 + 12) = 2082;
        sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v82 = sub_2393528C0();
        *(_QWORD *)(v80 + 14) = sub_23925F3EC(v82, v83, &v218);
        swift_bridgeObjectRelease();
        v84 = *(void (**)(char *, uint64_t))(v199 + 8);
        v84(v75, v21);
        _os_log_impl(&dword_23925B000, v78, v79, "MeshManager.%{private}s: Removed mesh anchor %{public}s from processed mesh anchors", (uint8_t *)v80, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v81, -1, -1);
        MEMORY[0x23B83BC04](v80, -1, -1);

        (*(void (**)(char *, uint64_t))(v200 + 8))(v76, v74);
        sub_2392688AC(v203, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        v84(v77, v21);
        v41 = v215;
        v11 = v216;
        v28 = v77;
        v35 = v76;
        v22 = v199;
      }
      else
      {

        v85 = v199;
        v86 = *(void (**)(char *, uint64_t))(v199 + 8);
        v86(v75, v21);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v74);
        sub_2392688AC(v203, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        v86(v77, v21);
        v41 = v215;
        v11 = v216;
        v28 = v77;
        v35 = v76;
        v22 = v85;
      }
    }
    v46 = v212;
    v47 = v213;
  }
LABEL_37:
  v213 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v213(v207, 1, 1, v21);
  swift_release();
LABEL_38:
  v87 = v184;
  v88 = sub_239287ED0(v184);
  sub_239287D48(v88);
  type metadata accessor for Util.Timer(0);
  v89 = sub_2392E37FC();
  (*(void (**)(void))(*(_QWORD *)v89 + 144))();
  v90 = sub_239289568((uint64_t)v87);
  (*(void (**)(uint64_t))(*(_QWORD *)v89 + 152))(v90);
  v91 = sub_239275BB8();
  v92 = v200;
  v93 = *(void (**)(_QWORD))(v200 + 16);
  v94 = v188;
  v204 = v91;
  v95 = v197;
  v205 = (void (*)(_QWORD, _QWORD, _QWORD))v93;
  v93(v188);
  swift_retain();
  v96 = sub_239352098();
  v97 = sub_239352560();
  v98 = v97;
  v99 = os_log_type_enabled(v96, v97);
  v203 = v89;
  if (v99)
  {
    v100 = swift_slowAlloc();
    LODWORD(v212) = v98;
    v101 = v100;
    v208 = swift_slowAlloc();
    v218 = v208;
    *(_DWORD *)v101 = v192;
    v219 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000030, v186 | 0x8000000000000000, &v218));
    v102 = sub_2393526B0();
    *(_WORD *)(v101 + 12) = 2048;
    v219 = (*(float (**)(uint64_t))(*(_QWORD *)v89 + 176))(v102);
    v41 = v215;
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v96, (os_log_type_t)v212, "MeshManager.%{private}s: Mesh refinement took %f ms", (uint8_t *)v101, 0x16u);
    v103 = v208;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v103, -1, -1);
    MEMORY[0x23B83BC04](v101, -1, -1);

    v104 = *(char **)(v92 + 8);
    v105 = v188;
    v106 = v197;
  }
  else
  {

    swift_release();
    v104 = *(char **)(v92 + 8);
    v105 = v94;
    v106 = v95;
  }
  v207 = v104;
  ((void (*)(char *, uint64_t))v104)(v105, v106);
  v41[17] = 0;
  v107 = *v41;
  v108 = *(_QWORD *)(*v41 + 64);
  v208 = *v41 + 64;
  v109 = 1 << *(_BYTE *)(v107 + 32);
  v110 = -1;
  if (v109 < 64)
    v110 = ~(-1 << v109);
  v111 = v110 & v108;
  v212 = (unint64_t)(v109 + 63) >> 6;
  v200 = v212 - 1;
  swift_bridgeObjectRetain();
  v112 = 0;
  v113 = v217;
  if (!v111)
    goto LABEL_49;
LABEL_47:
  v120 = __clz(__rbit64(v111));
  v111 &= v111 - 1;
  v121 = v120 | (v112 << 6);
LABEL_48:
  (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v113, *(_QWORD *)(v107 + 48) + *(_QWORD *)(v22 + 72) * v121, v21);
  v122 = *(_QWORD *)(v107 + 56) + *(_QWORD *)(v11 + 72) * v121;
  v123 = sub_23925FB08(&qword_256928198);
  sub_2392751F8(v122, (uint64_t)&v217[*(int *)(v123 + 48)]);
  v124 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56);
  v125 = v123;
  v113 = v217;
  v124(v217, 0, 1, v125);
  while (1)
  {
    v130 = (uint64_t)v113;
    v131 = v209;
    sub_239268764(v130, v209, &qword_256928190);
    v132 = sub_23925FB08(&qword_256928198);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 48))(v131, 1, v132) == 1)
      break;
    v114 = v131 + *(int *)(v132 + 48);
    v115 = *(id *)(v114 + *(int *)(v214 + 20));
    sub_2392688AC(v114, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v116 = (char *)objc_msgSend(v115, sel_count);

    v117 = v215[17];
    v118 = __OFADD__(v117, v116);
    v119 = &v116[v117];
    if (v118)
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    v215[17] = (uint64_t)v119;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v131, v21);
    v113 = v217;
    if (v111)
      goto LABEL_47;
LABEL_49:
    v126 = v112 + 1;
    if (__OFADD__(v112, 1))
      goto LABEL_108;
    if (v126 < v212)
    {
      v127 = *(_QWORD *)(v208 + 8 * v126);
      if (v127)
        goto LABEL_52;
      v128 = v112 + 2;
      ++v112;
      if (v126 + 1 < v212)
      {
        v127 = *(_QWORD *)(v208 + 8 * v128);
        if (v127)
          goto LABEL_55;
        v112 = v126 + 1;
        if (v126 + 2 < v212)
        {
          v127 = *(_QWORD *)(v208 + 8 * (v126 + 2));
          if (v127)
          {
            v126 += 2;
LABEL_52:
            v111 = (v127 - 1) & v127;
            v121 = __clz(__rbit64(v127)) + (v126 << 6);
            v112 = v126;
            goto LABEL_48;
          }
          v128 = v126 + 3;
          v112 = v126 + 2;
          if (v126 + 3 < v212)
          {
            v127 = *(_QWORD *)(v208 + 8 * v128);
            if (v127)
            {
LABEL_55:
              v126 = v128;
              goto LABEL_52;
            }
            while (1)
            {
              v126 = v128 + 1;
              if (__OFADD__(v128, 1))
                goto LABEL_113;
              if (v126 >= v212)
                break;
              v127 = *(_QWORD *)(v208 + 8 * v126);
              ++v128;
              if (v127)
                goto LABEL_52;
            }
            v112 = v200;
          }
        }
      }
    }
    v129 = sub_23925FB08(&qword_256928198);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v113, 1, 1, v129);
    v111 = 0;
  }
  swift_release();
  v133 = v187;
  v134 = v197;
  v205(v187, v204, v197);
  swift_retain();
  v135 = sub_239352098();
  v136 = sub_239352560();
  if (os_log_type_enabled(v135, v136))
  {
    v137 = swift_slowAlloc();
    v138 = swift_slowAlloc();
    v218 = v138;
    *(_DWORD *)v137 = v192;
    v219 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000030, v186 | 0x8000000000000000, &v218));
    sub_2393526B0();
    *(_WORD *)(v137 + 12) = 2050;
    v139 = v215;
    v219 = *((double *)v215 + 17);
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v135, v136, "MeshManager.%{private}s: Num vertices all anchors = %{public}ld", (uint8_t *)v137, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v138, -1, -1);
    MEMORY[0x23B83BC04](v137, -1, -1);

    ((void (*)(char *, uint64_t))v207)(v187, v134);
  }
  else
  {

    swift_release();
    ((void (*)(char *, uint64_t))v207)(v133, v134);
    v139 = v215;
  }
  sub_23928ACE4();
  v140 = v139[1];
  v141 = v140 + 56;
  v142 = 1 << *(_BYTE *)(v140 + 32);
  v143 = -1;
  if (v142 < 64)
    v143 = ~(-1 << v142);
  v144 = v143 & *(_QWORD *)(v140 + 56);
  v217 = (char *)((unint64_t)(v142 + 63) >> 6);
  swift_bridgeObjectRetain();
  v145 = 0;
  v146 = v206;
  if (!v144)
    goto LABEL_75;
  while (2)
  {
    v147 = __clz(__rbit64(v144));
    v144 &= v144 - 1;
    v148 = v147 | (v145 << 6);
    v149 = v216;
LABEL_89:
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v146, *(_QWORD *)(v140 + 48) + *(_QWORD *)(v22 + 72) * v148, v21);
    v213(v146, 0, 1, v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v146, 1, v21) == 1)
      goto LABEL_99;
    v153 = (uint64_t)v202;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v202, v146, v21);
    v154 = *v139;
    if (!*(_QWORD *)(*v139 + 16))
      goto LABEL_106;
    v155 = sub_239292F4C(v153);
    if ((v156 & 1) == 0)
      goto LABEL_107;
    v157 = v153;
    v158 = *(_QWORD *)(v149 + 72);
    v159 = *(_QWORD *)(v154 + 56) + v158 * v155;
    v160 = v201;
    sub_2392751F8(v159, v201);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v157, v21);
    v161 = v160;
    v162 = v210;
    sub_239292F08(v161, v210);
    sub_2392751F8(v162, v211);
    v163 = v220;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v163 = sub_239291B10(0, *(_QWORD *)(v163 + 16) + 1, 1, v163);
    v165 = *(_QWORD *)(v163 + 16);
    v164 = *(_QWORD *)(v163 + 24);
    if (v165 >= v164 >> 1)
      v163 = sub_239291B10(v164 > 1, v165 + 1, 1, v163);
    *(_QWORD *)(v163 + 16) = v165 + 1;
    sub_239292F08(v211, v163+ ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80))+ v165 * v158);
    v220 = v163;
    sub_2392688AC(v210, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v139 = v215;
    v146 = v206;
    if (v144)
      continue;
    break;
  }
LABEL_75:
  v150 = v145 + 1;
  v149 = v216;
  if (__OFADD__(v145, 1))
    goto LABEL_110;
  if (v150 >= (uint64_t)v217)
  {
LABEL_98:
    v213(v146, 1, 1, v21);
LABEL_99:
    v166 = swift_release();
    v167 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v189 + 160))(v166);
    v169 = v197;
    if (v167)
    {
      v170 = v168;
      ObjectType = swift_getObjectType();
      v172 = *(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 8);
      v173 = swift_bridgeObjectRetain();
      v172(v173, ObjectType, v170);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    v174 = v185;
    v205(v185, v204, v169);
    v175 = v220;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v176 = sub_239352098();
    v177 = sub_239352578();
    if (os_log_type_enabled(v176, v177))
    {
      v178 = swift_slowAlloc();
      v179 = swift_slowAlloc();
      v218 = v179;
      *(_DWORD *)v178 = 136381187;
      v219 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000030, v186 | 0x8000000000000000, &v218));
      sub_2393526B0();
      *(_WORD *)(v178 + 12) = 2050;
      v180 = *(double *)(v175 + 16);
      swift_bridgeObjectRelease();
      v219 = v180;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v178 + 22) = 2050;
      v181 = *(double *)(*v215 + 16);
      swift_release();
      v219 = v181;
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v176, v177, "MeshManager.%{private}s: Updated %{public}ld of %{public}ld mesh anchors", (uint8_t *)v178, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v179, -1, -1);
      MEMORY[0x23B83BC04](v178, -1, -1);

      v182 = v185;
      v183 = v197;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      v182 = v174;
      v183 = v169;
    }
    ((void (*)(char *, uint64_t))v207)(v182, v183);
    sub_239291850();
    sub_23928615C();
    sub_239350E98();
    OCSignPostsAriadneDbgCode();
    kdebug_trace();
    swift_release();
    return;
  }
  v151 = *(_QWORD *)(v141 + 8 * v150);
  ++v145;
  if (v151)
    goto LABEL_88;
  v145 = v150 + 1;
  if (v150 + 1 >= (uint64_t)v217)
    goto LABEL_98;
  v151 = *(_QWORD *)(v141 + 8 * v145);
  if (v151)
    goto LABEL_88;
  v145 = v150 + 2;
  if (v150 + 2 >= (uint64_t)v217)
    goto LABEL_98;
  v151 = *(_QWORD *)(v141 + 8 * v145);
  if (v151)
  {
LABEL_88:
    v144 = (v151 - 1) & v151;
    v148 = __clz(__rbit64(v151)) + (v145 << 6);
    goto LABEL_89;
  }
  v152 = v150 + 3;
  if (v152 >= (uint64_t)v217)
    goto LABEL_98;
  v151 = *(_QWORD *)(v141 + 8 * v152);
  if (v151)
  {
    v145 = v152;
    goto LABEL_88;
  }
  while (1)
  {
    v145 = v152 + 1;
    if (__OFADD__(v152, 1))
      break;
    if (v145 >= (uint64_t)v217)
      goto LABEL_98;
    v151 = *(_QWORD *)(v141 + 8 * v145);
    ++v152;
    if (v151)
      goto LABEL_88;
  }
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
}

uint64_t sub_239287D48(uint64_t a1)
{
  unint64_t *v1;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  result = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v1;
  v6 = *(_QWORD *)(*v1 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_22;
  }
  v8 = *(_QWORD *)(result - 8);
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v5;
  if (!(_DWORD)result || (v9 = *(_QWORD *)(v5 + 24) >> 1, v9 < v7))
  {
    if (v6 <= v7)
      v10 = v6 + v4;
    else
      v10 = v6;
    result = sub_239291B10(result, v10, 1, v5);
    v5 = result;
    *v1 = result;
    v9 = *(_QWORD *)(result + 24) >> 1;
  }
  v11 = *(_QWORD *)(v5 + 16);
  v12 = v9 - v11;
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v4)
      goto LABEL_19;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v12 < v4)
  {
    __break(1u);
    goto LABEL_25;
  }
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v8 + 72);
  v15 = v5 + v13 + v14 * v11;
  if (a1 + v13 < v15 + v14 * v4 && v15 < a1 + v13 + v14 * v4)
    goto LABEL_26;
  swift_arrayInitWithCopy();
  if (v4)
  {
    v17 = *(_QWORD *)(v5 + 16);
    v18 = __OFADD__(v17, v4);
    v19 = v17 + v4;
    if (!v18)
    {
      *(_QWORD *)(v5 + 16) = v19;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_239352884();
    __break(1u);
    return result;
  }
LABEL_19:
  result = swift_bridgeObjectRelease();
  if (v4 == v12)
LABEL_23:
    *v1 = v5;
  return result;
}

uint64_t sub_239287ED0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t isa;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  float32x4_t *v65;
  float32x4_t *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  uint64_t v79;
  void (*v80)(char *, unint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  float (*v93)(float32x4_t *);
  float v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  char v98;
  float v99;
  __int32 v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  int v107;
  int v108;
  __int32 v109;
  unint64_t v110;
  uint64_t v111;
  _BOOL8 v112;
  uint64_t v113;
  char v114;
  unint64_t v115;
  int v116;
  int v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  float v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t *v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  float v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t *v154;
  uint64_t *v155;
  unint64_t v156;
  char v157;
  char v158;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int *v165;
  int v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  NSObject *v182;
  os_log_type_t v183;
  __int32 v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  unint64_t v189;
  void (*v190)(uint64_t, uint64_t);
  os_log_t v191;
  uint64_t v192;
  char *v193;
  uint64_t result;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  os_log_t v212;
  float32x4_t v213;
  float32x4_t v214;
  void (*v215)(uint64_t, uint64_t);
  int64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  unint64_t v220;
  char *v221;
  unint64_t v222;
  __int128 v223;
  uint64_t *v224;
  _QWORD *v225;
  uint64_t v226;
  char *v227;
  uint64_t *v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  simd_float4x4 v237;

  v207 = sub_2393520B0();
  v206 = *(_QWORD *)(v207 - 8);
  MEMORY[0x24BDAC7A8](v207);
  v205 = (char *)&v195 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v3);
  v218 = (uint64_t)&v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23925FB08(&qword_2569281B8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v219 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v195 - v8;
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v203 = (char *)&v195 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v202 = (char *)&v195 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v201 = (uint64_t)&v195 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v230 = (uint64_t)&v195 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v199 = (char *)&v195 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v198 = (char *)&v195 - v23;
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)&v223 = (char *)&v195 - v24;
  v25 = sub_23925FB08(&qword_2569281C0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v200 = (uint64_t)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v195 - v28;
  v232 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v30 = *((_QWORD *)v232 - 1);
  v31 = MEMORY[0x24BDAC7A8](v232);
  v208 = (uint64_t)&v195 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v204 = (uint64_t)&v195 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v210 = (uint64_t)&v195 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v211 = (uint64_t)&v195 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (uint64_t *)((char *)&v195 - v39);
  v41 = sub_23925FB08(&qword_256928190);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v227 = (char *)&v195 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v231 = (uint64_t)&v195 - v44;
  v45 = *a1;
  v220 = sub_239282660(MEMORY[0x24BEE4AF8]);
  v46 = *(_QWORD *)(v45 + 64);
  v212 = (os_log_t)(v45 + 64);
  v47 = 1 << *(_BYTE *)(v45 + 32);
  if (v47 < 64)
    v48 = ~(-1 << v47);
  else
    v48 = -1;
  v49 = v48 & v46;
  v50 = (_QWORD *)(v234 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v51 = 0;
  v52 = (unint64_t)(v47 + 63) >> 6;
  v228 = v50;
  v209 = v50 + 2;
  v195 = v52 - 1;
  v217 = v52;
  v197 = v52 - 5;
  v225 = (_QWORD *)v45;
  v196 = v45 + 104;
  v221 = v9;
  v234 = v10;
  v226 = v30;
  v224 = v40;
  v53 = (uint64_t)v227;
  if (!v49)
    goto LABEL_7;
LABEL_5:
  v54 = __clz(__rbit64(v49));
  v49 &= v49 - 1;
  v233 = v51;
  v55 = v54 | (v51 << 6);
LABEL_6:
  v56 = v225;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v53, v225[6] + *(_QWORD *)(v11 + 72) * v55, v10);
  v57 = v56[7] + *(_QWORD *)(v30 + 72) * v55;
  v58 = sub_23925FB08(&qword_256928198);
  sub_2392751F8(v57, v53 + *(int *)(v58 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v53, 0, 1, v58);
  while (1)
  {
    v63 = v231;
    sub_239268764(v53, v231, &qword_256928190);
    v64 = sub_23925FB08(&qword_256928198);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 1, v64) == 1)
      break;
    sub_239292F08(v63 + *(int *)(v64 + 48), (uint64_t)v40);
    type metadata accessor for MeshUtils.AABB();
    v65 = sub_23927228C(*(float32x4_t *)((char *)v40 + v232[11]), *(float32x4_t *)((char *)v40 + v232[12]));
    if (v65)
    {
      v66 = v65;
      v67 = *v209;
      v68 = *(_QWORD *)(*v209 + 56);
      v215 = (void (*)(uint64_t, uint64_t))(*v209 + 56);
      v69 = 1 << *(_BYTE *)(v67 + 32);
      if (v69 < 64)
        v70 = ~(-1 << v69);
      else
        v70 = -1;
      v71 = v70 & v68;
      v216 = (unint64_t)(v69 + 63) >> 6;
      v222 = v67;
      swift_bridgeObjectRetain();
      v72 = 0;
      v10 = v234;
      if (v71)
      {
LABEL_25:
        v73 = __clz(__rbit64(v71));
        v71 &= v71 - 1;
        v229 = v72;
        v74 = v73 | (v72 << 6);
        goto LABEL_40;
      }
      while (2)
      {
        v75 = v72 + 1;
        if (__OFADD__(v72, 1))
          goto LABEL_134;
        v30 = v226;
        if (v75 >= v216)
          goto LABEL_79;
        v76 = *((_QWORD *)v215 + v75);
        v77 = v72 + 1;
        if (!v76)
        {
          v77 = v72 + 2;
          if ((uint64_t)(v72 + 2) >= v216)
            goto LABEL_79;
          v76 = *((_QWORD *)v215 + v77);
          if (!v76)
          {
            v77 = v72 + 3;
            if ((uint64_t)(v72 + 3) >= v216)
              goto LABEL_79;
            v76 = *((_QWORD *)v215 + v77);
            if (!v76)
            {
              v78 = v72 + 4;
              if ((uint64_t)(v72 + 4) >= v216)
              {
LABEL_79:
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v29, 1, 1, v10);
                swift_release();
                goto LABEL_80;
              }
              v76 = *((_QWORD *)v215 + v78);
              if (!v76)
              {
                while (1)
                {
                  v77 = v78 + 1;
                  if (__OFADD__(v78, 1))
                    goto LABEL_135;
                  if (v77 >= v216)
                    goto LABEL_79;
                  v76 = *((_QWORD *)v215 + v77);
                  ++v78;
                  if (v76)
                    goto LABEL_39;
                }
              }
              v77 = v72 + 4;
            }
          }
        }
LABEL_39:
        v71 = (v76 - 1) & v76;
        v229 = v77;
        v74 = __clz(__rbit64(v76)) + (v77 << 6);
LABEL_40:
        v79 = *(_QWORD *)(v11 + 72);
        v80 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
        v80(v29, *(_QWORD *)(v222 + 48) + v79 * v74, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v10) == 1)
        {
          swift_release();
          v9 = v221;
          v30 = v226;
          v40 = v224;
          v63 = v231;
LABEL_80:
          swift_release();
          sub_2392688AC((uint64_t)v40, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v63, v10);
          goto LABEL_16;
        }
        v81 = v29;
        v82 = v223;
        v83 = v81;
        (*(void (**)(_QWORD))(v11 + 32))(v223);
        v84 = *v228;
        if (!*(_QWORD *)(*v228 + 16) || (v85 = sub_239292F4C(v82), (v86 & 1) == 0))
        {
LABEL_45:
          v10 = v234;
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v82, v234);
          v9 = v221;
          v29 = v83;
          v40 = v224;
          goto LABEL_46;
        }
        v87 = *(_QWORD *)(v84 + 56) + *(_QWORD *)(v226 + 72) * v85;
        v88 = v210;
        sub_2392751F8(v87, v210);
        v89 = v211;
        sub_239292F08(v88, v211);
        v90 = v232[12];
        v213 = *(float32x4_t *)(v89 + v232[11]);
        v214 = *(float32x4_t *)(v89 + v90);
        v91 = v232[9];
        v237 = __invert_f4(*(simd_float4x4 *)((char *)v224 + v91));
        v92 = sub_23927266C(v213, v214, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], COERCE_FLOAT(*(_OWORD *)(v89 + v91))), (float32x4_t)v237.columns[1], *(float32x2_t *)(v89 + v91), 1), (float32x4_t)v237.columns[2], *(float32x4_t *)(v89 + v91), 2), (float32x4_t)v237.columns[3], *(float32x4_t *)(v89 + v91), 3), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], COERCE_FLOAT(*(_OWORD *)(v89 + v91 + 16))),
                      (float32x4_t)v237.columns[1],
                      *(float32x2_t *)(v89 + v91 + 16),
                      1),
                    (float32x4_t)v237.columns[2],
                    *(float32x4_t *)(v89 + v91 + 16),
                    2),
                  (float32x4_t)v237.columns[3],
                  *(float32x4_t *)(v89 + v91 + 16),
                  3),
                vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], COERCE_FLOAT(*(_OWORD *)(v89 + v91 + 32))), (float32x4_t)v237.columns[1], *(float32x2_t *)(v89 + v91 + 32), 1), (float32x4_t)v237.columns[2], *(float32x4_t *)(v89 + v91 + 32), 2), (float32x4_t)v237.columns[3], *(float32x4_t *)(v89 + v91 + 32), 3), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], COERCE_FLOAT(*(_OWORD *)(v89 + v91 + 48))), (float32x4_t)v237.columns[1], *(float32x2_t *)(v89 + v91 + 48), 1),
                    (float32x4_t)v237.columns[2],
                    *(float32x4_t *)(v89 + v91 + 48),
                    2),
                  (float32x4_t)v237.columns[3],
                  *(float32x4_t *)(v89 + v91 + 48),
                  3));
        if (!v92)
        {
          sub_2392688AC(v89, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
          v82 = v223;
          goto LABEL_45;
        }
        v93 = *(float (**)(float32x4_t *))(*(_QWORD *)v92 + 152);
        v214.i64[0] = v92;
        v94 = v93(v66);
        v95 = (_QWORD *)v220;
        v96 = v223;
        if (*(_QWORD *)(v220 + 16))
        {
          v97 = sub_239292F4C(v223);
          if ((v98 & 1) != 0)
          {
            v99 = *(float *)(v95[7] + 4 * v97);
            v80(v198, v96, v234);
            v213.i32[0] = swift_isUniquelyReferenced_nonNull_native();
            v236 = v95;
            v101 = sub_239292F4C((uint64_t)v198);
            v102 = v95[2];
            v103 = (v100 & 1) == 0;
            v104 = v102 + v103;
            if (__OFADD__(v102, v103))
              goto LABEL_139;
            v29 = v83;
            if (v95[3] >= v104)
            {
              v10 = v234;
              v40 = v224;
              if ((v213.i8[0] & 1) == 0)
              {
                v220 = v101;
                v213.i32[0] = v100;
                sub_239294130();
                LOBYTE(v100) = v213.i8[0];
                v101 = v220;
                goto LABEL_54;
              }
            }
            else
            {
              v105 = v100;
              sub_239293620(v104, v213.i32[0]);
              v106 = sub_239292F4C((uint64_t)v198);
              v107 = v100 & 1;
              LOBYTE(v100) = v105;
              v108 = v105 & 1;
              v40 = v224;
              if (v108 != v107)
                goto LABEL_141;
              v101 = v106;
LABEL_54:
              v10 = v234;
            }
            v125 = v94 + v99;
            v220 = (unint64_t)v236;
            if ((v100 & 1) != 0)
            {
              *(float *)(v236[7] + 4 * v101) = v125;
            }
            else
            {
              v236[(v101 >> 6) + 8] |= 1 << v101;
              v126 = *(_QWORD *)(v220 + 48) + v101 * v79;
              v127 = v101;
              v80((char *)v126, (unint64_t)v198, v10);
              v128 = v220;
              *(float *)(*(_QWORD *)(v220 + 56) + 4 * v127) = v125;
              v129 = *(_QWORD *)(v128 + 16);
              v122 = __OFADD__(v129, 1);
              v130 = v129 + 1;
              if (v122)
                goto LABEL_140;
              *(_QWORD *)(v128 + 16) = v130;
            }
            v9 = v221;
            swift_bridgeObjectRelease();
            v124 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
            v124((uint64_t)v198, v10);
LABEL_72:
            swift_release();
            sub_2392688AC(v211, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
            v124(v223, v10);
LABEL_46:
            v63 = v231;
            v72 = v229;
            if (v71)
              goto LABEL_25;
            continue;
          }
        }
        break;
      }
      v80(v199, v96, v234);
      v213.i32[0] = swift_isUniquelyReferenced_nonNull_native();
      v236 = v95;
      v110 = sub_239292F4C((uint64_t)v199);
      v111 = v95[2];
      v112 = (v109 & 1) == 0;
      v113 = v111 + v112;
      if (__OFADD__(v111, v112))
        goto LABEL_137;
      v29 = v83;
      if (v95[3] >= v113)
      {
        v10 = v234;
        v40 = v224;
        if ((v213.i8[0] & 1) == 0)
        {
          v220 = v110;
          v213.i32[0] = v109;
          sub_239294130();
          LOBYTE(v109) = v213.i8[0];
          v110 = v220;
          goto LABEL_59;
        }
      }
      else
      {
        v114 = v109;
        sub_239293620(v113, v213.i32[0]);
        v115 = sub_239292F4C((uint64_t)v199);
        v116 = v109 & 1;
        LOBYTE(v109) = v114;
        v117 = v114 & 1;
        v40 = v224;
        if (v117 != v116)
          goto LABEL_141;
        v110 = v115;
LABEL_59:
        v10 = v234;
      }
      v220 = (unint64_t)v236;
      if ((v109 & 1) != 0)
      {
        *(float *)(v236[7] + 4 * v110) = v94;
      }
      else
      {
        v236[(v110 >> 6) + 8] |= 1 << v110;
        v118 = *(_QWORD *)(v220 + 48) + v110 * v79;
        v119 = v110;
        v80((char *)v118, (unint64_t)v199, v10);
        v120 = v220;
        *(float *)(*(_QWORD *)(v220 + 56) + 4 * v119) = v94;
        v121 = *(_QWORD *)(v120 + 16);
        v122 = __OFADD__(v121, 1);
        v123 = v121 + 1;
        if (v122)
          goto LABEL_138;
        *(_QWORD *)(v120 + 16) = v123;
      }
      v9 = v221;
      swift_bridgeObjectRelease();
      v124 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v124((uint64_t)v199, v10);
      goto LABEL_72;
    }
    sub_2392688AC((uint64_t)v40, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v10 = v234;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v63, v234);
LABEL_16:
    v51 = v233;
    v53 = (uint64_t)v227;
    if (v49)
      goto LABEL_5;
LABEL_7:
    v59 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_133;
    }
    if (v59 >= v217)
    {
      v61 = v51;
    }
    else
    {
      isa = (unint64_t)v212[v59].isa;
      if (isa)
        goto LABEL_10;
      v61 = v51 + 1;
      if (v51 + 2 < v217)
      {
        isa = (unint64_t)v212[v51 + 2].isa;
        if (isa)
        {
          v59 = v51 + 2;
          v10 = v234;
          goto LABEL_10;
        }
        v61 = v51 + 2;
        if (v51 + 3 < v217)
        {
          isa = (unint64_t)v212[v51 + 3].isa;
          if (isa)
          {
            v59 = v51 + 3;
            v10 = v234;
LABEL_10:
            v49 = (isa - 1) & isa;
            v55 = __clz(__rbit64(isa)) + (v59 << 6);
            v233 = v59;
            goto LABEL_6;
          }
          v59 = v51 + 4;
          v61 = v51 + 3;
          if (v51 + 4 < v217)
          {
            isa = (unint64_t)v212[v59].isa;
            v10 = v234;
            if (isa)
              goto LABEL_10;
            while (v197 != v51)
            {
              isa = *(_QWORD *)(v196 + 8 * v51++);
              if (isa)
              {
                v59 = v51 + 4;
                goto LABEL_10;
              }
            }
            v61 = v195;
          }
        }
      }
    }
    v62 = sub_23925FB08(&qword_256928198);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v53, 1, 1, v62);
    v49 = 0;
    v233 = v61;
  }
  swift_release();
  v131 = v220;
  v132 = *(_QWORD *)(v220 + 64);
  v229 = v220 + 64;
  v133 = 1 << *(_BYTE *)(v220 + 32);
  v134 = -1;
  if (v133 < 64)
    v134 = ~(-1 << v133);
  v135 = v134 & v132;
  v224 = (uint64_t *)&v236;
  v225 = v228 + 3;
  v231 = (unint64_t)(v133 + 63) >> 6;
  v216 = v231 - 1;
  swift_bridgeObjectRetain();
  v136 = 0;
  v227 = (char *)MEMORY[0x24BEE4AF8];
  v137 = (uint64_t *)&unk_2569281C8;
  v138 = &qword_2569281B8;
  *(_QWORD *)&v139 = 136380931;
  v223 = v139;
  v222 = 0x800000023935B6E0;
  v217 = MEMORY[0x24BEE4AD8] + 8;
  v140 = v230;
LABEL_90:
  v141 = (uint64_t)v219;
  if (v135)
  {
    while (1)
    {
      v142 = __clz(__rbit64(v135));
      v135 &= v135 - 1;
      v143 = v142 | (v136 << 6);
LABEL_94:
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v141, *(_QWORD *)(v131 + 48) + *(_QWORD *)(v11 + 72) * v143, v234);
      v144 = *(_QWORD *)(v131 + 56);
      v145 = sub_23925FB08(v137);
      *(_DWORD *)(v141 + *(int *)(v145 + 48)) = *(_DWORD *)(v144 + 4 * v143);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v141, 0, 1, v145);
      v140 = v230;
LABEL_113:
      sub_239268764(v141, (uint64_t)v9, v138);
      v150 = sub_23925FB08(v137);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 48))(v9, 1, v150) == 1)
        break;
      v151 = *(float *)&v9[*(int *)(v150 + 48)];
      v152 = v234;
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v140, v9, v234);
      if (v151 < 1.0)
      {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v140, v152);
        if (!v135)
          goto LABEL_95;
      }
      else
      {
        v233 = v136;
        v153 = v137;
        v154 = v138;
        v155 = v228;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v156 = sub_239292F4C(v140);
        v158 = v157;
        swift_bridgeObjectRelease();
        if ((v158 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v160 = *v155;
          v235 = *v155;
          *v155 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_239293EB4();
            v160 = v235;
          }
          (*(void (**)(unint64_t, uint64_t))(v11 + 8))(*(_QWORD *)(v160 + 48) + *(_QWORD *)(v11 + 72) * v156, v234);
          v161 = v235;
          v162 = v226;
          v163 = v218;
          sub_239292F08(*(_QWORD *)(v235 + 56) + *(_QWORD *)(v226 + 72) * v156, v218);
          sub_2392939B0(v156, v161);
          *v155 = v161;
          swift_bridgeObjectRelease();
          v164 = 0;
        }
        else
        {
          v164 = 1;
          v163 = v218;
          v162 = v226;
        }
        v165 = v232;
        (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v162 + 56))(v163, v164, 1, v232);
        swift_endAccess();
        v166 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v162 + 48))(v163, 1, v165);
        v140 = v230;
        v131 = v220;
        v138 = v154;
        if (v166 != 1)
        {
          v167 = v204;
          sub_239292F08(v163, v204);
          *(_BYTE *)(v167 + v232[13]) = 1;
          sub_2392751F8(v167, v208);
          v168 = (unint64_t)v227;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v168 = sub_239291B10(0, *(_QWORD *)(v168 + 16) + 1, 1, v168);
          v170 = *(_QWORD *)(v168 + 16);
          v169 = *(_QWORD *)(v168 + 24);
          if (v170 >= v169 >> 1)
            v168 = sub_239291B10(v169 > 1, v170 + 1, 1, v168);
          *(_QWORD *)(v168 + 16) = v170 + 1;
          v171 = (*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
          v227 = (char *)v168;
          sub_239292F08(v208, v168 + v171 + *(_QWORD *)(v226 + 72) * v170);
          swift_beginAccess();
          v172 = v200;
          v173 = v230;
          sub_2392950C0(v230, v200);
          sub_23925FE28(v172, &qword_2569281C0);
          v214.i64[0] = *(_QWORD *)(v11 + 16);
          v174 = v202;
          v175 = v234;
          ((void (*)(char *, uint64_t, uint64_t))v214.i64[0])(v202, v173, v234);
          v176 = v201;
          sub_239294364(v201, v174);
          v215 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
          v215(v176, v175);
          swift_endAccess();
          v177 = sub_239275BB8();
          (*(void (**)(char *, uint64_t, uint64_t))(v206 + 16))(v205, v177, v207);
          v178 = v203;
          v179 = v173;
          v180 = v175;
          ((void (*)(char *, uint64_t, uint64_t))v214.i64[0])(v203, v179, v175);
          v181 = v178;
          v182 = sub_239352098();
          v183 = sub_239352578();
          v184 = v183;
          if (os_log_type_enabled(v182, v183))
          {
            v185 = swift_slowAlloc();
            v214.i32[0] = v184;
            v186 = v185;
            v213.i64[0] = swift_slowAlloc();
            v236 = (_QWORD *)v213.i64[0];
            *(_DWORD *)v186 = v223;
            v212 = v182;
            v235 = sub_23925F3EC(0xD00000000000001CLL, v222, (uint64_t *)&v236);
            sub_2393526B0();
            *(_WORD *)(v186 + 12) = 2082;
            v211 = v186 + 14;
            sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
            v187 = v181;
            v188 = sub_2393528C0();
            v235 = sub_23925F3EC(v188, v189, (uint64_t *)&v236);
            v138 = v154;
            sub_2393526B0();
            swift_bridgeObjectRelease();
            v190 = v215;
            v215((uint64_t)v187, v180);
            v191 = v212;
            _os_log_impl(&dword_23925B000, v212, (os_log_type_t)v214.i8[0], "MeshManager.%{private}s: Removed mesh anchor %{public}s because of overlap", (uint8_t *)v186, 0x16u);
            v192 = v213.i64[0];
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v192, -1, -1);
            MEMORY[0x23B83BC04](v186, -1, -1);

          }
          else
          {

            v193 = v181;
            v190 = v215;
            v215((uint64_t)v193, v180);
          }
          (*(void (**)(char *, uint64_t))(v206 + 8))(v205, v207);
          sub_2392688AC(v204, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
          v140 = v230;
          v190(v230, v180);
          v9 = v221;
          v137 = v153;
          v136 = v233;
          goto LABEL_90;
        }
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v230, v234);
        sub_23925FE28(v163, &qword_256928158);
        v141 = (uint64_t)v219;
        v137 = v153;
        v136 = v233;
        if (!v135)
          goto LABEL_95;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v227;
  }
  else
  {
LABEL_95:
    v146 = v136 + 1;
    if (!__OFADD__(v136, 1))
    {
      if (v146 < v231)
      {
        v147 = *(_QWORD *)(v229 + 8 * v146);
        if (v147)
        {
LABEL_98:
          v135 = (v147 - 1) & v147;
          v143 = __clz(__rbit64(v147)) + (v146 << 6);
          v136 = v146;
          goto LABEL_94;
        }
        v148 = v136 + 2;
        ++v136;
        if (v146 + 1 < v231)
        {
          v147 = *(_QWORD *)(v229 + 8 * v148);
          if (v147)
          {
LABEL_101:
            v146 = v148;
            goto LABEL_98;
          }
          v136 = v146 + 1;
          if (v146 + 2 < v231)
          {
            v147 = *(_QWORD *)(v229 + 8 * (v146 + 2));
            if (v147)
            {
              v146 += 2;
              goto LABEL_98;
            }
            v148 = v146 + 3;
            v136 = v146 + 2;
            if (v146 + 3 < v231)
            {
              v147 = *(_QWORD *)(v229 + 8 * v148);
              if (v147)
                goto LABEL_101;
              while (1)
              {
                v146 = v148 + 1;
                if (__OFADD__(v148, 1))
                  goto LABEL_136;
                if (v146 >= v231)
                  break;
                v147 = *(_QWORD *)(v229 + 8 * v146);
                ++v148;
                if (v147)
                  goto LABEL_98;
              }
              v136 = v216;
            }
          }
        }
      }
      v149 = sub_23925FB08(v137);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v141, 1, 1, v149);
      v135 = 0;
      goto LABEL_113;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    result = sub_239352908();
    __break(1u);
  }
  return result;
}

uint64_t sub_239289568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  sub_2393520B0();
  v3 = sub_239352230();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)a1;
  v28 = *(_QWORD *)(a1 + 8);
  v29 = v7;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a1 + 24);
  v27 = v8;
  v11 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v25 = *(_QWORD *)(a1 + 72);
  v24 = *(unsigned __int8 *)(a1 + 80);
  v14 = *(void **)(v1 + 40);
  *v6 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v15 = v14;
  LOBYTE(v14) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v14 & 1) != 0)
  {
    v23 = v9;
    v17 = v27;
    v30 = v29;
    v31 = v28;
    v18 = v26;
    v32 = v27;
    v33 = v26;
    v34 = v9;
    v35 = v11;
    v36 = v10;
    v37 = v13;
    v19 = v25;
    v38 = v12;
    v39 = v25;
    v20 = v24;
    v40 = v24;
    sub_239289744((uint64_t)&v30);
    v21 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
    swift_beginAccess();
    v22 = *(unsigned __int8 *)(v21 + 33);
    if (*(_BYTE *)(v21 + 33))
    {
      v30 = v29;
      v31 = v28;
      v32 = v17;
      v33 = v18;
      v34 = v23;
      v35 = v11;
      v36 = v10;
      v37 = v13;
      v38 = v12;
      v39 = v19;
      v40 = v20;
      if (v22 == 1)
        return sub_23928B5F4(&v30);
      else
        return sub_23928C2B0((uint64_t)&v30);
    }
    else
    {
      v30 = v29;
      v31 = v28;
      v32 = v17;
      v33 = v18;
      v34 = v23;
      v35 = v11;
      v36 = v10;
      v37 = v13;
      v38 = v12;
      v39 = v19;
      v40 = v20;
      return sub_239290798(&v30);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_239289744(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t result;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  char **v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  float v61;
  float v62;
  float v63;
  float v64;
  float v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  unint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  int64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  float *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  int64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  int64_t v122;
  unint64_t v123;
  int64_t v124;
  char *v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  char **v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  unsigned __int8 *v141;
  int v142;
  char *v143;
  char *v144;
  NSObject *v145;
  os_log_type_t v146;
  _BOOL4 v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  unint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t ObjectType;
  char *v162;
  char *v163;
  void (*v164)(char *, uint64_t);
  unsigned __int8 *v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t, uint64_t);
  char *v168;
  int64_t v169;
  char *v170;
  char **v171;
  char *v172;
  uint64_t v173;
  int64_t v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int8 *v189;
  char v190;

  v2 = v1;
  v4 = sub_239352020();
  v181 = *(_QWORD *)(v4 - 8);
  v182 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v180 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v179 = (uint64_t)&v162 - v7;
  v8 = sub_23925FB08(&qword_256928190);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v176 = (char *)&v162 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v175 = (char *)&v162 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v178 = (char *)&v162 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v177 = (char *)&v162 - v15;
  v173 = sub_2393520B0();
  v169 = *(_QWORD *)(v173 - 8);
  v16 = MEMORY[0x24BDAC7A8](v173);
  v172 = (char *)&v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v163 = (char *)&v162 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v162 = (char *)&v162 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v170 = (char *)&v162 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v168 = (char *)&v162 - v24;
  v25 = sub_239352230();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char **)((char *)&v162 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v174 = *(_QWORD *)a1;
  v29 = *(_QWORD *)(a1 + 16);
  v30 = *(_QWORD *)(a1 + 24);
  v31 = *(_QWORD *)(a1 + 32);
  v167 = *(void (**)(char *, uint64_t, uint64_t))(a1 + 40);
  v32 = *(_QWORD *)(a1 + 48);
  v166 = *(_QWORD *)(a1 + 56);
  v33 = *(_QWORD *)(a1 + 64);
  v165 = *(unsigned __int8 **)(a1 + 72);
  LODWORD(v164) = *(unsigned __int8 *)(a1 + 80);
  v34 = (void *)*((_QWORD *)v2 + 5);
  *v28 = v34;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v26 + 104))(v28, *MEMORY[0x24BEE5610], v25);
  v35 = v34;
  LOBYTE(v34) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v26 + 8))(v28, v25);
  if ((v34 & 1) == 0)
  {
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  if (v2[62] != 1)
    return result;
  v37 = v2;
  v38 = &v2[OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData];
  result = swift_beginAccess();
  if (v38[72] == 1)
  {
    *((float *)v38 + 14) = *((float *)v38 + 15) + *((float *)v38 + 14);
    *((_WORD *)v38 + 16) = 256;
    v38[72] = 0;
    return result;
  }
  v171 = (char **)v38;
  v184 = v29;
  *(_QWORD *)&v185 = v30;
  *((_QWORD *)&v185 + 1) = v31;
  *(_QWORD *)&v186 = v167;
  *((_QWORD *)&v186 + 1) = v32;
  v187 = v166;
  v188 = v33;
  v189 = v165;
  v190 = (char)v164;
  v39 = sub_23928AAC4(&v184);
  v40 = sub_239275BB8();
  v41 = v169;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
  v43 = v168;
  v166 = v40;
  v44 = v173;
  v167 = v42;
  ((void (*)(char *))v42)(v168);
  v45 = sub_239352098();
  v46 = sub_239352578();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = v39;
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v184 = v49;
    *(_DWORD *)v48 = 136380931;
    v183 = (char *)sub_23925F3EC(0xD00000000000001ELL, 0x800000023935B6C0, &v184);
    sub_2393526B0();
    *(_WORD *)(v48 + 12) = 2050;
    v183 = (char *)v47;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v45, v46, "MeshManager.%{private}s: Computed uniform point density = %{public}ld", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v49, -1, -1);
    v50 = v48;
    v39 = v47;
    v44 = v173;
    MEMORY[0x23B83BC04](v50, -1, -1);
  }

  v51 = *(void (**)(char *, uint64_t))(v41 + 8);
  v51(v43, v44);
  v52 = v172;
  v53 = v171;
  v54 = (uint64_t)v178;
  v55 = v170;
  if (v39 >= (uint64_t)v171[6])
  {
    *((float *)v171 + 14) = *((float *)v171 + 15) + *((float *)v171 + 14);
    *((_BYTE *)v53 + 33) = 1;
    v53[5] = (char *)v39;
    v167(v55, v166, v44);
    swift_retain();
    v56 = sub_239352098();
    v57 = sub_239352578();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v184 = v59;
      *(_DWORD *)v58 = 136380931;
      v183 = (char *)sub_23925F3EC(0xD00000000000001ELL, 0x800000023935B6C0, &v184);
      sub_2393526B0();
      *(_WORD *)(v58 + 12) = 2050;
      v183 = v53[6];
      v54 = (uint64_t)v178;
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v56, v57, "MeshManager.%{private}s: Uniform point density is greater than the threshold for simplification (%{public}ld), triggering full mesh refinement in the next update.", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      v52 = v172;
      MEMORY[0x23B83BC04](v59, -1, -1);
      v60 = v58;
      v44 = v173;
      MEMORY[0x23B83BC04](v60, -1, -1);

    }
    else
    {

      swift_release();
    }
    v51(v55, v44);
  }
  else
  {
    *((_BYTE *)v171 + 33) = 2;
  }
  v170 = v37;
  v61 = *((float *)v53 + 17);
  v62 = *((float *)v53 + 14);
  if (v62 < v61)
  {
    v63 = sub_2392E3A5C();
    if (!sub_2392E3A6C(v61, v63, v62))
    {
      *((_BYTE *)v53 + 32) = 1;
      goto LABEL_83;
    }
  }
  if (*((_BYTE *)v53 + 129) == 2
    || (v64 = *((float *)v53 + 16), v65 = sub_2392E3A5C(), !sub_2392E3A6C(v64, v65, v62)) && v64 >= v62)
  {
LABEL_77:
    if (*((_BYTE *)v53 + 32) == 1)
    {
      v125 = v163;
      v167(v163, v166, v44);
      v126 = sub_239352098();
      v127 = sub_239352578();
      if (os_log_type_enabled(v126, v127))
      {
        v128 = (uint8_t *)swift_slowAlloc();
        v129 = swift_slowAlloc();
        v184 = v129;
        *(_DWORD *)v128 = 136380675;
        v183 = (char *)sub_23925F3EC(0xD00000000000001ELL, 0x800000023935B6C0, &v184);
        v44 = v173;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v126, v127, "MeshManager.%{private}s: Turned off mesh densification", v128, 0xCu);
        swift_arrayDestroy();
        v130 = v129;
        v53 = v171;
        MEMORY[0x23B83BC04](v130, -1, -1);
        MEMORY[0x23B83BC04](v128, -1, -1);
      }

      v51(v125, v44);
    }
    *((_BYTE *)v53 + 32) = 0;
    goto LABEL_83;
  }
  swift_beginAccess();
  if (*((_BYTE *)v53 + 129) == 2)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    result = swift_release();
    __break(1u);
    return result;
  }
  v66 = sub_239282E3C();
  swift_endAccess();
  if ((v66 & 1) == 0)
    goto LABEL_77;
  v165 = (unsigned __int8 *)v53 + 129;
  v164 = v51;
  v67 = *(_QWORD *)(v174 + 64);
  v168 = (char *)(v174 + 64);
  v68 = 1 << *(_BYTE *)(v174 + 32);
  v69 = -1;
  if (v68 < 64)
    v69 = ~(-1 << v68);
  v70 = v69 & v67;
  v169 = (unint64_t)(v68 + 63) >> 6;
  v163 = (char *)(v169 - 1);
  swift_bridgeObjectRetain();
  v71 = 0;
  v72 = &qword_256928198;
  if (!v70)
    goto LABEL_27;
LABEL_25:
  v79 = __clz(__rbit64(v70));
  v70 &= v70 - 1;
  v80 = v79 | (v71 << 6);
LABEL_26:
  v81 = v174;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v181 + 16))(v54, *(_QWORD *)(v174 + 48) + *(_QWORD *)(v181 + 72) * v80, v182);
  v82 = *(_QWORD *)(v81 + 56);
  v83 = v82
      + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8) + 72) * v80;
  v84 = sub_23925FB08(v72);
  sub_2392751F8(v83, v54 + *(int *)(v84 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v54, 0, 1, v84);
  v85 = (uint64_t)v177;
  while (1)
  {
    sub_239268764(v54, v85, &qword_256928190);
    v90 = v72;
    v91 = sub_23925FB08(v72);
    v92 = *(_QWORD *)(v91 - 8);
    v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
    if (v93(v85, 1, v91) == 1)
      break;
    v73 = v85 + *(int *)(v91 + 48);
    v75 = v180;
    v74 = v181;
    v76 = v85;
    v77 = v182;
    (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v180, v76, v182);
    swift_beginAccess();
    v78 = v179;
    sub_239294364(v179, v75);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v78, v77);
    swift_endAccess();
    sub_2392688AC(v73, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v54 = (uint64_t)v178;
    v72 = v90;
    if (v70)
      goto LABEL_25;
LABEL_27:
    v86 = v71 + 1;
    if (__OFADD__(v71, 1))
      goto LABEL_97;
    v85 = (uint64_t)v177;
    if (v86 < v169)
    {
      v87 = *(_QWORD *)&v168[8 * v86];
      if (v87)
        goto LABEL_30;
      v88 = v71 + 2;
      ++v71;
      if (v86 + 1 < v169)
      {
        v87 = *(_QWORD *)&v168[8 * v88];
        if (v87)
          goto LABEL_33;
        v71 = v86 + 1;
        if (v86 + 2 < v169)
        {
          v87 = *(_QWORD *)&v168[8 * v86 + 16];
          if (v87)
          {
            v86 += 2;
            goto LABEL_30;
          }
          v88 = v86 + 3;
          v71 = v86 + 2;
          if (v86 + 3 < v169)
          {
            v87 = *(_QWORD *)&v168[8 * v88];
            if (v87)
            {
LABEL_33:
              v86 = v88;
LABEL_30:
              v70 = (v87 - 1) & v87;
              v80 = __clz(__rbit64(v87)) + (v86 << 6);
              v71 = v86;
              goto LABEL_26;
            }
            while (1)
            {
              v86 = v88 + 1;
              if (__OFADD__(v88, 1))
                goto LABEL_99;
              if (v86 >= v169)
                break;
              v87 = *(_QWORD *)&v168[8 * v86];
              ++v88;
              if (v87)
                goto LABEL_30;
            }
            v71 = (int64_t)v163;
          }
        }
      }
    }
    v89 = sub_23925FB08(v72);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v54, 1, 1, v89);
    v70 = 0;
  }
  v178 = (char *)v91;
  swift_release();
  v94 = *v53;
  v95 = *((_QWORD *)*v53 + 8);
  v169 = (int64_t)(*v53 + 64);
  v96 = 1 << v94[32];
  v97 = -1;
  if (v96 < 64)
    v97 = ~(-1 << v96);
  v98 = v97 & v95;
  v174 = (unint64_t)(v96 + 63) >> 6;
  v168 = (char *)(v174 - 1);
  v177 = v94;
  swift_bridgeObjectRetain();
  v99 = 0;
  while (1)
  {
    v100 = (uint64_t)v175;
    if (v98)
    {
      v101 = __clz(__rbit64(v98));
      v102 = (v98 - 1) & v98;
      v103 = v101 | (v99 << 6);
      v104 = (uint64_t)v176;
      v105 = v178;
      goto LABEL_51;
    }
    v122 = v99 + 1;
    v104 = (uint64_t)v176;
    v105 = v178;
    if (__OFADD__(v99, 1))
      goto LABEL_98;
    if (v122 >= v174)
    {
      v102 = 0;
      v109 = 1;
      goto LABEL_52;
    }
    v123 = *(_QWORD *)(v169 + 8 * v122);
    v110 = (float *)v171;
    if (v123)
      goto LABEL_58;
    v99 += 2;
    if (v122 + 1 >= v174)
    {
      v102 = 0;
      v109 = 1;
      v99 = v122;
    }
    else
    {
      v123 = *(_QWORD *)(v169 + 8 * v99);
      if (v123)
      {
        ++v122;
        goto LABEL_58;
      }
      if (v122 + 2 >= v174)
      {
        v102 = 0;
        v109 = 1;
      }
      else
      {
        v123 = *(_QWORD *)(v169 + 8 * (v122 + 2));
        if (v123)
        {
          v122 += 2;
          goto LABEL_58;
        }
        v124 = v122 + 3;
        if (v122 + 3 < v174)
        {
          v123 = *(_QWORD *)(v169 + 8 * v124);
          if (!v123)
          {
            while (1)
            {
              v122 = v124 + 1;
              if (__OFADD__(v124, 1))
                goto LABEL_100;
              if (v122 >= v174)
              {
                v102 = 0;
                v109 = 1;
                v99 = (int64_t)v168;
                goto LABEL_53;
              }
              v123 = *(_QWORD *)(v169 + 8 * v122);
              ++v124;
              if (v123)
                goto LABEL_58;
            }
          }
          v122 += 3;
LABEL_58:
          v102 = (v123 - 1) & v123;
          v103 = __clz(__rbit64(v123)) + (v122 << 6);
          v99 = v122;
LABEL_51:
          v106 = v177;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v181 + 16))(v104, *((_QWORD *)v177 + 6) + *(_QWORD *)(v181 + 72) * v103, v182);
          v107 = *((_QWORD *)v106 + 7);
          v108 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
          sub_2392751F8(v107 + *(_QWORD *)(*(_QWORD *)(v108 - 8) + 72) * v103, v104 + *((int *)v105 + 12));
          v109 = 0;
LABEL_52:
          v110 = (float *)v171;
          goto LABEL_53;
        }
        v102 = 0;
        v109 = 1;
        v99 = v122 + 2;
      }
    }
LABEL_53:
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v92 + 56))(v104, v109, 1, v105);
    sub_239268764(v104, v100, &qword_256928190);
    if (v93(v100, 1, (uint64_t)v105) == 1)
      break;
    v111 = v100 + *((int *)v105 + 12);
    v112 = v181;
    v113 = v102;
    v114 = v93;
    v115 = v92;
    v116 = v99;
    v117 = v180;
    v118 = v100;
    v119 = v182;
    (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v180, v118, v182);
    swift_beginAccess();
    v120 = v179;
    v121 = v117;
    v99 = v116;
    v92 = v115;
    v93 = v114;
    v98 = v113;
    sub_239294364(v179, v121);
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v120, v119);
    swift_endAccess();
    sub_2392688AC(v111, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
  }
  swift_release();
  v141 = v165;
  v142 = *v165;
  if (v142 == 2)
    goto LABEL_102;
  v110[17] = sub_239270C7C(v142 & 1);
  *((_BYTE *)v110 + 33) = 1;
  v143 = v162;
  v44 = v173;
  v167(v162, v166, v173);
  v144 = v170;
  swift_retain_n();
  v145 = sub_239352098();
  v146 = sub_239352578();
  v147 = os_log_type_enabled(v145, v146);
  v52 = v172;
  v51 = v164;
  if (v147)
  {
    v148 = swift_slowAlloc();
    v149 = swift_slowAlloc();
    v184 = v149;
    *(_DWORD *)v148 = 136380931;
    v183 = (char *)sub_23925F3EC(0xD00000000000001ELL, 0x800000023935B6C0, &v184);
    sub_2393526B0();
    *(_WORD *)(v148 + 12) = 2082;
    v150 = *v141;
    if (v150 == 2)
      goto LABEL_104;
    LOBYTE(v183) = v150 & 1;
    v151 = sub_23935232C();
    v183 = (char *)sub_23925F3EC(v151, v152, &v184);
    sub_2393526B0();
    v153 = v170;
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v145, v146, "MeshManager.%{private}s: Updated scan extent to: %{public}s in area mode.Now triggering scan extent update in scene reconstruction.", (uint8_t *)v148, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v149, -1, -1);
    MEMORY[0x23B83BC04](v148, -1, -1);

    v154 = v153;
    v44 = v173;
    v155 = ((uint64_t (*)(char *, uint64_t))v51)(v143, v173);
    v52 = v172;
  }
  else
  {

    swift_release_n();
    v155 = ((uint64_t (*)(char *, uint64_t))v51)(v143, v44);
    v154 = v144;
  }
  v156 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v154 + 160))(v155);
  v53 = v171;
  if (v156)
  {
    v158 = *v141;
    if (v158 == 2)
      goto LABEL_103;
    v159 = v157;
    v160 = v158 & 1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 16))(v160, ObjectType, v159);
    swift_unknownObjectRelease();
  }
LABEL_83:
  v167(v52, v166, v44);
  swift_retain_n();
  v131 = sub_239352098();
  v132 = sub_239352578();
  if (os_log_type_enabled(v131, v132))
  {
    v133 = swift_slowAlloc();
    v134 = v53;
    v135 = swift_slowAlloc();
    v183 = (char *)v135;
    *(_DWORD *)v133 = 136380931;
    v184 = sub_23925F3EC(0xD00000000000001ELL, 0x800000023935B6C0, (uint64_t *)&v183);
    sub_2393526B0();
    *(_WORD *)(v133 + 12) = 2082;
    v136 = *((_BYTE *)v134 + 33);
    v137 = *((_BYTE *)v134 + 72);
    LOBYTE(v184) = *((_BYTE *)v134 + 32);
    BYTE1(v184) = v136;
    v185 = *(_OWORD *)(v134 + 5);
    v186 = *(_OWORD *)(v134 + 7);
    LOBYTE(v187) = v137;
    v138 = sub_23935232C();
    v184 = sub_23925F3EC(v138, v139, (uint64_t *)&v183);
    sub_2393526B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v131, v132, "MeshManager.%{private}s: Mesh refinement parameters = %{public}s", (uint8_t *)v133, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v135, -1, -1);
    MEMORY[0x23B83BC04](v133, -1, -1);

    v140 = v172;
  }
  else
  {

    swift_release_n();
    v140 = v52;
  }
  return ((uint64_t (*)(char *, uint64_t))v51)(v140, v44);
}

uint64_t sub_23928AAC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  id v16;
  uint64_t result;
  float v18;
  float32x4_t v19;
  float32x2_t *v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x4_t v23;
  uint64_t v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_239352230();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[3];
  v29 = a1[2];
  v30 = v8;
  v11 = a1[4];
  v12 = a1[5];
  v13 = a1[7];
  v27 = a1[6];
  v28 = v11;
  v14 = *((_BYTE *)a1 + 64);
  v15 = *(void **)(v2 + 40);
  *v7 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v16 = v15;
  LOBYTE(v15) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(_BYTE *)(v2 + 76) == 1)
  {
    v18 = 0.0;
    if ((v14 & 1) != 0)
      goto LABEL_9;
    v31 = v30;
    v32 = v9;
    v33 = v29;
    v34 = v10;
    v35 = v28;
    v36 = v12;
    v37 = v27;
    v38 = v13;
    *(__n64 *)v19.f32 = OCBoundingBox.extent.getter();
    goto LABEL_8;
  }
  v20 = (float32x2_t *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  v18 = 0.0;
  if ((v20[12].i8[0] & 1) == 0 && (v20[16].i8[0] & 1) == 0)
  {
    v21 = v20[14];
    v22 = v20[10];
    *(float32x2_t *)v19.f32 = vsub_f32(v21, v22);
    *(float32x2_t *)&v19.u32[2] = vsub_f32(v20[15], v20[11]);
LABEL_8:
    v23 = vmulq_f32(v19, v19);
    v18 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v23, 2), vaddq_f32(v23, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v23.f32, 1))).f32[0]);
  }
LABEL_9:
  v24 = v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  result = swift_beginAccess();
  v25 = *(float *)(v24 + 56);
  if (v25 <= 0.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v26 = v18 / v25;
  if ((~LODWORD(v26) & 0x7F800000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v26 <= -9.2234e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v26 < 9.2234e18)
    return (uint64_t)v26;
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_23928ACE4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t result;
  float32x4_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  float32x4_t *v40;
  float32x4_t v41;
  float32x4_t v42;
  uint64_t v43;
  uint64_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  uint64_t v53;
  float32x2_t v54;
  unint64_t v55;
  float32x2_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  __int32 v63;
  float32x4_t v64;
  float32x4_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  float32x4_t v80;
  __int32 v81;
  int64_t v82;
  uint64_t v83;
  int64_t v84;
  float32x4_t v85;
  __int32 v86;
  float32x4_t v87;
  float32x4_t v88;
  float32x4_t v89;
  float32x4_t v90;
  float32x4_t v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  uint64_t v95;
  uint64_t v96;

  v78 = sub_2393520B0();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v83 = *((_QWORD *)v2 - 1);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23925FB08(&qword_256928190);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v74 - v9;
  v11 = sub_239352230();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v0 + 40);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v18 = (float32x4_t *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
    swift_beginAccess();
    v19 = v18->i64[0];
    v20 = *(_QWORD *)(v18->i64[0] + 64);
    v79 = v18->i64[0] + 64;
    v21 = 1 << *(_BYTE *)(v19 + 32);
    v22 = -1;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    v23 = v22 & v20;
    v82 = (unint64_t)(v21 + 63) >> 6;
    v75 = v82 - 1;
    result = swift_bridgeObjectRetain();
    v84 = 0;
    while (!v23)
    {
      v35 = v84 + 1;
      if (__OFADD__(v84, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v35 < v82)
      {
        v36 = *(_QWORD *)(v79 + 8 * v35);
        if (v36)
          goto LABEL_13;
        v37 = v84 + 2;
        ++v84;
        if (v35 + 1 < v82)
        {
          v36 = *(_QWORD *)(v79 + 8 * v37);
          if (v36)
            goto LABEL_16;
          v84 = v35 + 1;
          if (v35 + 2 < v82)
          {
            v36 = *(_QWORD *)(v79 + 8 * (v35 + 2));
            if (v36)
            {
              v35 += 2;
              goto LABEL_13;
            }
            v37 = v35 + 3;
            v84 = v35 + 2;
            if (v35 + 3 < v82)
            {
              v36 = *(_QWORD *)(v79 + 8 * v37);
              if (!v36)
              {
                while (1)
                {
                  v35 = v37 + 1;
                  if (__OFADD__(v37, 1))
                    goto LABEL_40;
                  if (v35 >= v82)
                  {
                    v84 = v75;
                    goto LABEL_27;
                  }
                  v36 = *(_QWORD *)(v79 + 8 * v35);
                  ++v37;
                  if (v36)
                    goto LABEL_13;
                }
              }
LABEL_16:
              v35 = v37;
LABEL_13:
              v23 = (v36 - 1) & v36;
              v30 = __clz(__rbit64(v36)) + (v35 << 6);
              v84 = v35;
LABEL_9:
              v31 = *(_QWORD *)(v19 + 48);
              v32 = sub_239352020();
              (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v8, v31 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v30, v32);
              v33 = *(_QWORD *)(v19 + 56) + *(_QWORD *)(v83 + 72) * v30;
              v34 = sub_23925FB08(&qword_256928198);
              sub_2392751F8(v33, (uint64_t)&v8[*(int *)(v34 + 48)]);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 0, 1, v34);
              goto LABEL_28;
            }
          }
        }
      }
LABEL_27:
      v38 = sub_23925FB08(&qword_256928198);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v8, 1, 1, v38);
      v23 = 0;
LABEL_28:
      sub_239268764((uint64_t)v8, (uint64_t)v10, &qword_256928190);
      v39 = sub_23925FB08(&qword_256928198);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v10, 1, v39) == 1)
      {
        result = swift_release();
        if ((v18[6].i8[0] & 1) == 0 && (v18[8].i8[0] & 1) == 0)
        {
          v54 = *(float32x2_t *)v18[5].f32;
          v53 = v18[5].i64[1];
          v56 = *(float32x2_t *)v18[7].f32;
          v55 = v18[7].u64[1];
          v57 = sub_239275BB8();
          v58 = v77;
          v59 = v76;
          v60 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v57, v78);
          v61 = sub_239352098();
          v62 = sub_239352578();
          v63 = v62;
          if (os_log_type_enabled(v61, v62))
          {
            *(float32x2_t *)v64.f32 = v54;
            v64.i64[1] = v53;
            *(float32x2_t *)v65.f32 = vsub_f32(v56, v54);
            v65.i64[1] = vsubq_f32((float32x4_t)vdupq_n_s64(v55), v64).u32[2];
            v90 = v65;
            v66 = swift_slowAlloc();
            v92.i64[0] = swift_slowAlloc();
            v93.i64[0] = v92.i64[0];
            *(_DWORD *)v66 = 136381443;
            v91.i32[0] = v63;
            v94.i64[0] = sub_23925F3EC(0xD000000000000013, 0x800000023935B6A0, (uint64_t *)&v93);
            sub_2393526B0();
            *(_WORD *)(v66 + 12) = 2082;
            v94 = v90;
            sub_23925FB08((uint64_t *)&unk_2569281A0);
            sub_239263A08((unint64_t *)&qword_256927600, (uint64_t *)&unk_2569281A0, MEMORY[0x24BEE4120]);
            v90.i64[0] = v55;
            v67 = sub_2393528F0();
            v94.i64[0] = sub_23925F3EC(v67, v68, (uint64_t *)&v93);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v66 + 22) = 2082;
            *(float32x2_t *)v94.f32 = v54;
            v94.i64[1] = v53;
            v69 = sub_2393528F0();
            v94.i64[0] = sub_23925F3EC(v69, v70, (uint64_t *)&v93);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v66 + 32) = 2082;
            *(float32x2_t *)v94.f32 = v56;
            v94.i64[1] = v90.i64[0];
            v71 = sub_2393528F0();
            v94.i64[0] = sub_23925F3EC(v71, v72, (uint64_t *)&v93);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23925B000, v61, (os_log_type_t)v91.i8[0], "MeshManager.%{private}s: Updated mesh extents: extent = %{public}s\nminCorner = %{public}s maxCorner = %{public}s", (uint8_t *)v66, 0x2Au);
            v73 = v92.i64[0];
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v73, -1, -1);
            MEMORY[0x23B83BC04](v66, -1, -1);

            return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v76, v78);
          }
          else
          {

            return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v60);
          }
        }
        return result;
      }
      sub_239292F08((uint64_t)&v10[*(int *)(v39 + 48)], (uint64_t)v4);
      v40 = (float32x4_t *)&v4[v2[9]];
      v41 = v40[1];
      v88 = *v40;
      v89 = v41;
      v42 = v40[2];
      v90 = v40[3];
      v91 = v42;
      v87 = *(float32x4_t *)&v4[v2[11]];
      v43 = *(uint64_t *)((char *)v87.i64 + 4);
      v93 = vaddq_f32(v90, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v88, v87.f32[0]), v41, *(float32x2_t *)v87.f32, 1), v42, v87, 2));
      v44 = sub_23925FB08(&qword_2569281B0);
      sub_2392E3890(v44);
      v45 = vaddq_f32(v90, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v88, v87.f32[0] + *(float *)&v4[v2[12]]), v89, *(float *)&v43 + *(float *)&v4[v2[12] + 4]), v91, *((float *)&v43 + 1) + *(float *)&v4[v2[12] + 8]));
      v92 = v94;
      v93 = v45;
      sub_2392E3890(v44);
      v46 = v94;
      if ((v18[6].i8[0] & 1) != 0 || (v18[8].i8[0] & 1) != 0)
      {
        v46.i32[3] = 0;
        v24 = v92;
        v24.i32[3] = 0;
        v25 = vminnmq_f32(v46, v24);
        v25.i32[3] = v85.i32[3];
        v18[5] = v25;
        v18[6].i8[0] = 0;
        v26 = vmaxnmq_f32(v46, v24);
        v26.i32[3] = v86;
        v85 = v25;
        v92 = v26;
        v27 = (float32x4_t *)&v96;
      }
      else
      {
        v46.i32[3] = 0;
        v47 = v92;
        v47.i32[3] = 0;
        v48 = vminnmq_f32(v46, v47);
        v48.i32[3] = 0;
        v49 = v18[5];
        v49.i32[3] = 0;
        v50 = vminnmq_f32(v48, v49);
        v50.i32[3] = v80.i32[3];
        v51 = vmaxnmq_f32(v46, v47);
        v51.i32[3] = 0;
        v18[5] = v50;
        v52 = v18[7];
        v52.i32[3] = 0;
        v18[6].i8[0] = 0;
        v26 = vmaxnmq_f32(v51, v52);
        v26.i32[3] = v81;
        v80 = v50;
        v92 = v26;
        v27 = (float32x4_t *)&v95;
      }
      v27[-16] = v26;
      sub_2392688AC((uint64_t)v4, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v18[7] = v92;
      v18[8].i8[0] = 0;
      v28 = sub_239352020();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v10, v28);
    }
    v29 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    v30 = v29 | (v84 << 6);
    goto LABEL_9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23928B5F4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t result;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v32)(_QWORD, _QWORD);
  __int8 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  float32x4_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  int64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v72;
  char *v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  _OWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint8_t *v96;
  void (*v97)(_QWORD, _QWORD);
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  float32x4_t v100;
  float32x4_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106[8];
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int8 v112;

  v2 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v5 = *(_QWORD *)(v103 - 8);
  v6 = MEMORY[0x24BDAC7A8](v103);
  v8 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v102 = (uint64_t)v84 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v84 - v11;
  v13 = sub_2393520B0();
  v101.i64[0] = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v93 = (char *)v84 - v17;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)&v104 = (char *)v84 - v18;
  v19 = sub_239352230();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (_QWORD *)((char *)v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *a1;
  *(_QWORD *)&v92 = a1[2];
  v88 = a1[3];
  *(_QWORD *)&v91 = a1[4];
  v87 = a1[5];
  *(_QWORD *)&v90 = a1[6];
  v86 = a1[7];
  v89 = a1[8];
  v85 = a1[9];
  v100.i32[0] = *((unsigned __int8 *)a1 + 80);
  v24 = *(void **)(v105 + 40);
  *v22 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x24BEE5610], v19);
  v25 = v24;
  LOBYTE(v24) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  if ((v24 & 1) == 0)
    goto LABEL_73;
  v27 = sub_239275BB8();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v101.i64[0] + 16);
  v98 = v27;
  v99 = v28;
  ((void (*)(_QWORD))v28)(v104);
  v29 = sub_239352098();
  v30 = sub_239352578();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v97 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
    *(_QWORD *)&v108 = v97;
    *(_DWORD *)v31 = 136380675;
    v96 = v31 + 4;
    v106[0] = sub_23925F3EC(0xD000000000000018, 0x800000023935B680, (uint64_t *)&v108);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v29, v30, "MeshManager.%{private}s: Refining all mesh anchors...", v31, 0xCu);
    v32 = v97;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v32, -1, -1);
    MEMORY[0x23B83BC04](v31, -1, -1);
  }

  v97 = *(void (**)(_QWORD, _QWORD))(v101.i64[0] + 8);
  v97(v104, v13);
  v33 = v100.i8[0];
  v34 = v105;
  v35 = v105 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  result = swift_beginAccess();
  v96 = (uint8_t *)v35;
  if (!*(_QWORD *)(*(_QWORD *)(v35 + 8) + 16))
  {
    v94 = v13;
    if ((v33 & 1) != 0)
    {
      *(_QWORD *)&v104 = 0;
      v36 = 0uLL;
      v37 = 0uLL;
      v38 = 0uLL;
      v39 = 0uLL;
    }
    else
    {
      v40.i64[0] = v92;
      v40.i64[1] = v88;
      v101 = v40;
      v40.i64[0] = v91;
      v40.i64[1] = v87;
      v100 = v40;
      v40.i64[0] = v90;
      v40.i64[1] = v86;
      v84[1] = v40;
      v40.i64[0] = v89;
      v40.i64[1] = v85;
      v84[0] = v40;
      v106[0] = v92;
      v106[1] = v88;
      v106[2] = v91;
      v106[3] = v87;
      v106[4] = v90;
      v106[5] = v86;
      v106[6] = v89;
      v106[7] = v85;
      OCBoundingBox.scale(_:)(&v108, *(float32x4_t *)(v34 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection));
      v104 = v108;
      v92 = v109;
      v91 = v110;
      v90 = v111;
      type metadata accessor for MeshUtils.AABB();
      v108 = v104;
      v109 = v92;
      v110 = v91;
      v111 = v90;
      *(_QWORD *)&v104 = sub_239272F64();
      *(double *)&v36 = sub_2392DF0F4(v101);
    }
    v108 = v36;
    v109 = v37;
    v110 = v38;
    v111 = v39;
    v112 = v33;
    v41 = v23 + 64;
    v42 = 1 << *(_BYTE *)(v23 + 32);
    v43 = -1;
    if (v42 < 64)
      v43 = ~(-1 << v42);
    v44 = v43 & *(_QWORD *)(v23 + 64);
    v45 = (unint64_t)(v42 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v46 = 0;
    v47 = 0;
    while (1)
    {
      v100.i64[0] = v46;
      do
      {
        if (v44)
        {
          v48 = __clz(__rbit64(v44));
          v44 &= v44 - 1;
          v49 = v48 | (v47 << 6);
        }
        else
        {
          v51 = v47 + 1;
          if (__OFADD__(v47, 1))
          {
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          if (v51 >= v45)
            goto LABEL_32;
          v52 = *(_QWORD *)(v41 + 8 * v51);
          ++v47;
          if (!v52)
          {
            v47 = v51 + 1;
            if (v51 + 1 >= v45)
              goto LABEL_32;
            v52 = *(_QWORD *)(v41 + 8 * v47);
            if (!v52)
            {
              v47 = v51 + 2;
              if (v51 + 2 >= v45)
                goto LABEL_32;
              v52 = *(_QWORD *)(v41 + 8 * v47);
              if (!v52)
              {
                v47 = v51 + 3;
                if (v51 + 3 >= v45)
                  goto LABEL_32;
                v52 = *(_QWORD *)(v41 + 8 * v47);
                if (!v52)
                {
                  v53 = v51 + 4;
                  if (v53 >= v45)
                  {
LABEL_32:
                    swift_release();
                    v54 = *(_QWORD *)v96;
                    v55 = *(_QWORD *)(*(_QWORD *)v96 + 64);
                    v101.i64[0] = *(_QWORD *)v96 + 64;
                    v56 = 1 << *(_BYTE *)(v54 + 32);
                    v57 = -1;
                    if (v56 < 64)
                      v57 = ~(-1 << v56);
                    v58 = v57 & v55;
                    v59 = (unint64_t)(v56 + 63) >> 6;
                    result = swift_bridgeObjectRetain();
                    v60 = 0;
                    while (1)
                    {
                      if (v58)
                      {
                        v62 = __clz(__rbit64(v58));
                        v58 &= v58 - 1;
                        v63 = v62 | (v60 << 6);
                      }
                      else
                      {
                        v64 = v60 + 1;
                        if (__OFADD__(v60, 1))
                          goto LABEL_69;
                        if (v64 >= v59)
                          goto LABEL_60;
                        v65 = *(_QWORD *)(v101.i64[0] + 8 * v64);
                        ++v60;
                        if (!v65)
                        {
                          v60 = v64 + 1;
                          if (v64 + 1 >= v59)
                            goto LABEL_60;
                          v65 = *(_QWORD *)(v101.i64[0] + 8 * v60);
                          if (!v65)
                          {
                            v60 = v64 + 2;
                            if (v64 + 2 >= v59)
                              goto LABEL_60;
                            v65 = *(_QWORD *)(v101.i64[0] + 8 * v60);
                            if (!v65)
                            {
                              v60 = v64 + 3;
                              if (v64 + 3 >= v59)
                                goto LABEL_60;
                              v65 = *(_QWORD *)(v101.i64[0] + 8 * v60);
                              if (!v65)
                              {
                                v66 = v64 + 4;
                                if (v66 >= v59)
                                  goto LABEL_60;
                                v65 = *(_QWORD *)(v101.i64[0] + 8 * v66);
                                if (!v65)
                                {
                                  while (1)
                                  {
                                    v60 = v66 + 1;
                                    if (__OFADD__(v66, 1))
                                      break;
                                    if (v60 >= v59)
                                      goto LABEL_60;
                                    v65 = *(_QWORD *)(v101.i64[0] + 8 * v60);
                                    ++v66;
                                    if (v65)
                                      goto LABEL_53;
                                  }
LABEL_71:
                                  __break(1u);
LABEL_72:
                                  __break(1u);
LABEL_73:
                                  __break(1u);
                                  goto LABEL_74;
                                }
                                v60 = v66;
                              }
                            }
                          }
                        }
LABEL_53:
                        v58 = (v65 - 1) & v65;
                        v63 = __clz(__rbit64(v65)) + (v60 << 6);
                      }
                      v67 = *(_QWORD *)(v5 + 72);
                      v68 = v102;
                      sub_2392751F8(*(_QWORD *)(v54 + 56) + v67 * v63, v102);
                      sub_239292F08(v68, (uint64_t)v8);
                      if (*(_QWORD *)(v23 + 16) && (v69 = sub_239292F4C((uint64_t)v8), (v70 & 1) != 0))
                      {
                        sub_2392751F8(*(_QWORD *)(v23 + 56) + v69 * v67, (uint64_t)v4);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v4, 0, 1, v103);
                        sub_23925FE28((uint64_t)v4, &qword_256928158);
                        result = sub_2392688AC((uint64_t)v8, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
                      }
                      else
                      {
                        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v4, 1, 1, v103);
                        sub_23925FE28((uint64_t)v4, &qword_256928158);
                        v61 = sub_23928CC7C(v8, v104, (uint64_t)&v108);
                        result = sub_2392688AC((uint64_t)v8, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
                        if ((v61 & 1) != 0 && __OFADD__(v100.i64[0]++, 1))
                        {
                          __break(1u);
LABEL_60:
                          swift_release();
                          v72 = v94;
                          v73 = v95;
                          if ((_QWORD)v104)
                          {
                            v74 = v93;
                            v99(v93, v98, v94);
                            swift_retain();
                            v75 = sub_239352098();
                            v76 = sub_239352578();
                            if (os_log_type_enabled(v75, v76))
                            {
                              v77 = swift_slowAlloc();
                              v78 = swift_slowAlloc();
                              v106[0] = v78;
                              *(_DWORD *)v77 = 136381187;
                              v107 = sub_23925F3EC(0xD000000000000018, 0x800000023935B680, v106);
                              sub_2393526B0();
                              *(_WORD *)(v77 + 12) = 2050;
                              v107 = v100.i64[0];
                              sub_2393526B0();
                              *(_WORD *)(v77 + 22) = 2050;
                              v107 = *(_QWORD *)(*(_QWORD *)v96 + 16);
                              sub_2393526B0();
                              swift_release();
                              _os_log_impl(&dword_23925B000, v75, v76, "MeshManager.%{private}s: %{public}ld/%{public}ld all mesh anchors intersect with bounding box.", (uint8_t *)v77, 0x20u);
                              swift_arrayDestroy();
                              MEMORY[0x23B83BC04](v78, -1, -1);
                              MEMORY[0x23B83BC04](v77, -1, -1);

                              v79 = v93;
                            }
                            else
                            {

                              swift_release();
                              v79 = v74;
                            }
                            v97(v79, v72);
                          }
                          v99(v73, v98, v72);
                          v80 = sub_239352098();
                          v81 = sub_239352578();
                          if (os_log_type_enabled(v80, v81))
                          {
                            v82 = (uint8_t *)swift_slowAlloc();
                            v83 = swift_slowAlloc();
                            v106[0] = v83;
                            *(_DWORD *)v82 = 136380675;
                            v107 = sub_23925F3EC(0xD000000000000018, 0x800000023935B680, v106);
                            sub_2393526B0();
                            _os_log_impl(&dword_23925B000, v80, v81, "MeshManager.%{private}s: Finished refining all mesh anchors.", v82, 0xCu);
                            swift_arrayDestroy();
                            MEMORY[0x23B83BC04](v83, -1, -1);
                            MEMORY[0x23B83BC04](v82, -1, -1);
                          }

                          swift_release();
                          v97(v73, v72);
                          return 1;
                        }
                      }
                    }
                  }
                  v52 = *(_QWORD *)(v41 + 8 * v53);
                  if (!v52)
                  {
                    while (1)
                    {
                      v47 = v53 + 1;
                      if (__OFADD__(v53, 1))
                        break;
                      if (v47 >= v45)
                        goto LABEL_32;
                      v52 = *(_QWORD *)(v41 + 8 * v47);
                      ++v53;
                      if (v52)
                        goto LABEL_31;
                    }
LABEL_70:
                    __break(1u);
                    goto LABEL_71;
                  }
                  v47 = v53;
                }
              }
            }
          }
LABEL_31:
          v44 = (v52 - 1) & v52;
          v49 = __clz(__rbit64(v52)) + (v47 << 6);
        }
        sub_2392751F8(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v5 + 72) * v49, (uint64_t)v12);
        v50 = sub_23928CC7C(v12, v104, (uint64_t)&v108);
        result = sub_2392688AC((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      }
      while ((v50 & 1) == 0);
      v46 = v100.i64[0] + 1;
      if (__OFADD__(v100.i64[0], 1))
        goto LABEL_72;
    }
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_23928C2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  float32x4_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _OWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  int v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  float32x4_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83[8];
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  char v89;

  v3 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v81 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393520B0();
  v80.i64[0] = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)v63 - v10;
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)&v82 = (char *)v63 - v11;
  v12 = sub_239352230();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (_QWORD *)((char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)a1;
  v73 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v71 = *(_QWORD *)(a1 + 16);
  v67 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)&v70 = *(_QWORD *)(a1 + 32);
  v66 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)&v69 = *(_QWORD *)(a1 + 48);
  v65 = *(_QWORD *)(a1 + 56);
  v68 = *(_QWORD *)(a1 + 64);
  v64 = *(_QWORD *)(a1 + 72);
  v77 = *(unsigned __int8 *)(a1 + 80);
  v17 = *(void **)(v1 + 40);
  *v15 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v18 = v17;
  LOBYTE(a1) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((a1 & 1) == 0)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    return result;
  }
  v20 = sub_239275BB8();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v80.i64[0] + 16);
  v78 = v20;
  v75 = v21;
  ((void (*)(_QWORD))v21)(v82);
  v22 = sub_239352098();
  v23 = sub_239352578();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    *(_QWORD *)&v85 = v25;
    *(_DWORD *)v24 = 136380675;
    v83[0] = sub_23925F3EC(0xD000000000000020, 0x800000023935B650, (uint64_t *)&v85);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v22, v23, "MeshManager.%{private}s: Refining updated mesh anchors...", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v25, -1, -1);
    MEMORY[0x23B83BC04](v24, -1, -1);
  }

  v79 = *(void (**)(char *, uint64_t))(v80.i64[0] + 8);
  v79((char *)v82, v6);
  v26 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v26 + 8) + 16))
    goto LABEL_45;
  v27 = v77;
  v74 = v6;
  if ((v77 & 1) != 0)
  {
    *(_QWORD *)&v82 = 0;
    v28 = 0uLL;
    v29 = 0uLL;
    v30 = 0uLL;
    v31 = 0uLL;
  }
  else
  {
    v32.i64[0] = v71;
    v32.i64[1] = v67;
    v80 = v32;
    v32.i64[0] = v70;
    v32.i64[1] = v66;
    v63[2] = v32;
    v32.i64[0] = v69;
    v32.i64[1] = v65;
    v63[1] = v32;
    v32.i64[0] = v68;
    v32.i64[1] = v64;
    v63[0] = v32;
    v83[0] = v71;
    v83[1] = v67;
    v83[2] = v70;
    v83[3] = v66;
    v83[4] = v69;
    v83[5] = v65;
    v83[6] = v68;
    v83[7] = v64;
    OCBoundingBox.scale(_:)(&v85, *(float32x4_t *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection));
    v82 = v85;
    v71 = v86;
    v70 = v87;
    v69 = v88;
    type metadata accessor for MeshUtils.AABB();
    v85 = v82;
    v86 = v71;
    v87 = v70;
    v88 = v69;
    *(_QWORD *)&v82 = sub_239272F64();
    *(double *)&v28 = sub_2392DF0F4(v80);
  }
  v85 = v28;
  v86 = v29;
  v87 = v30;
  v88 = v31;
  v89 = v27;
  v33 = v16 + 64;
  v34 = 1 << *(_BYTE *)(v16 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & *(_QWORD *)(v16 + 64);
  v37 = (unint64_t)(v34 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v38 = 0;
  v39 = 0;
LABEL_12:
  v80.i64[0] = v38;
  while (v36)
  {
    v40 = __clz(__rbit64(v36));
    v36 &= v36 - 1;
    v41 = v40 | (v39 << 6);
LABEL_14:
    sub_2392751F8(*(_QWORD *)(v16 + 56) + *(_QWORD *)(v81 + 72) * v41, (uint64_t)v5);
    v42 = sub_23928CC7C(v5, v82, (uint64_t)&v85);
    result = sub_2392688AC((uint64_t)v5, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    if ((v42 & 1) != 0)
    {
      v38 = v80.i64[0] + 1;
      if (!__OFADD__(v80.i64[0], 1))
        goto LABEL_12;
      goto LABEL_43;
    }
  }
  v43 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v43 >= v37)
    goto LABEL_32;
  v44 = *(_QWORD *)(v33 + 8 * v43);
  ++v39;
  if (v44)
    goto LABEL_31;
  v39 = v43 + 1;
  if (v43 + 1 >= v37)
    goto LABEL_32;
  v44 = *(_QWORD *)(v33 + 8 * v39);
  if (v44)
    goto LABEL_31;
  v39 = v43 + 2;
  if (v43 + 2 >= v37)
    goto LABEL_32;
  v44 = *(_QWORD *)(v33 + 8 * v39);
  if (v44)
    goto LABEL_31;
  v39 = v43 + 3;
  if (v43 + 3 >= v37)
    goto LABEL_32;
  v44 = *(_QWORD *)(v33 + 8 * v39);
  if (v44)
  {
LABEL_31:
    v36 = (v44 - 1) & v44;
    v41 = __clz(__rbit64(v44)) + (v39 << 6);
    goto LABEL_14;
  }
  v45 = v43 + 4;
  if (v45 < v37)
  {
    v44 = *(_QWORD *)(v33 + 8 * v45);
    if (!v44)
    {
      while (1)
      {
        v39 = v45 + 1;
        if (__OFADD__(v45, 1))
          break;
        if (v39 >= v37)
          goto LABEL_32;
        v44 = *(_QWORD *)(v33 + 8 * v39);
        ++v45;
        if (v44)
          goto LABEL_31;
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v39 = v45;
    goto LABEL_31;
  }
LABEL_32:
  v46 = v16;
  swift_release();
  v47 = v74;
  v48 = v75;
  v49 = v78;
  if ((_QWORD)v82)
  {
    v50 = v72;
    v75(v72, v78, v74);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51 = sub_239352098();
    v52 = sub_239352578();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v83[0] = v54;
      *(_DWORD *)v53 = 136381187;
      v84 = sub_23925F3EC(0xD000000000000020, 0x800000023935B650, v83);
      sub_2393526B0();
      *(_WORD *)(v53 + 12) = 2050;
      v84 = v80.i64[0];
      sub_2393526B0();
      *(_WORD *)(v53 + 22) = 2050;
      v84 = *(_QWORD *)(v46 + 16);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v51, v52, "MeshManager.%{private}s: %{public}ld/%{public}ld updated mesh anchors intersect with bounding box.", (uint8_t *)v53, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v54, -1, -1);
      v49 = v78;
      MEMORY[0x23B83BC04](v53, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v79(v50, v47);
  }
  v55 = v76;
  v48(v76, v49, v47);
  v56 = sub_239352098();
  v57 = sub_239352578();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = v47;
    v59 = (uint8_t *)swift_slowAlloc();
    v60 = swift_slowAlloc();
    v83[0] = v60;
    *(_DWORD *)v59 = 136380675;
    v84 = sub_23925F3EC(0xD000000000000020, 0x800000023935B650, v83);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v56, v57, "MeshManager.%{private}s: Finished refining updated mesh anchors.", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v60, -1, -1);
    MEMORY[0x23B83BC04](v59, -1, -1);

    swift_release();
    v61 = v55;
    v62 = v58;
  }
  else
  {

    swift_release();
    v61 = v55;
    v62 = v47;
  }
  v79(v61, v62);
  return 1;
}

uint64_t sub_23928CC7C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  float32x2_t *v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96[3];
  simd_float4x4 v97;
  char v98;
  simd_float4x4 v99;

  v4 = v3;
  v91 = sub_239352020();
  v84 = *(_QWORD *)(v91 - 8);
  v8 = MEMORY[0x24BDAC7A8](v91);
  v89 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v88 = (char *)&v80 - v10;
  v11 = sub_2393520B0();
  v92 = *(_QWORD *)(v11 - 8);
  v93 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v85 = (char *)&v80 - v15;
  v16 = sub_23925FB08(&qword_256928158);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v87 = (uint64_t)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v80 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v80 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v80 - v25;
  v27 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v90 = (uint64_t)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v86 = (char *)&v80 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v94 = (uint64_t)&v80 - v33;
  if (a2 && (sub_239268764(a3, (uint64_t)&v97, &qword_25692A8A0), (v98 & 1) == 0))
  {
    v99 = __invert_f4(v97);
    v39 = (float32x2_t *)&a1[*(int *)(v27 + 36)];
    v40 = *(float32x4_t *)v39[2].f32;
    v41 = *(float32x4_t *)v39[4].f32;
    v42 = *(float32x4_t *)v39[6].f32;
    v83 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v99.columns[0], COERCE_FLOAT(*(_OWORD *)v39->f32)), (float32x4_t)v99.columns[1], *v39, 1), (float32x4_t)v99.columns[2], *(float32x4_t *)v39->f32, 2), (float32x4_t)v99.columns[3], *(float32x4_t *)v39->f32, 3);
    v82 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v99.columns[0], v40.f32[0]), (float32x4_t)v99.columns[1], *(float32x2_t *)v40.f32, 1), (float32x4_t)v99.columns[2], v40, 2), (float32x4_t)v99.columns[3], v40, 3);
    v81 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v99.columns[0], v41.f32[0]), (float32x4_t)v99.columns[1], *(float32x2_t *)v41.f32, 1), (float32x4_t)v99.columns[2], v41, 2), (float32x4_t)v99.columns[3], v41, 3);
    v80 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v99.columns[0], v42.f32[0]), (float32x4_t)v99.columns[1], *(float32x2_t *)v42.f32, 1), (float32x4_t)v99.columns[2], v42, 2), (float32x4_t)v99.columns[3], v42, 3);
    swift_retain();
    sub_239272FEC((uint64_t)a1, v83, v82, v81, v80);
    v44 = v43;
    swift_release();
    v45 = v94;
    sub_2392751F8((uint64_t)a1, v94);
    if (v44 <= 0.0)
    {
      sub_2392688AC(v45, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      return 2;
    }
  }
  else
  {
    sub_2392751F8((uint64_t)a1, v94);
  }
  v83.i64[0] = (uint64_t)v14;
  type metadata accessor for Util.Timer(0);
  v34 = sub_2392E37FC();
  (*(void (**)(void))(*(_QWORD *)v34 + 144))();
  v35 = (_BYTE *)(v4 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  if (v35[32] == 1 && *(_QWORD *)&a1[*(int *)(v27 + 32)])
  {
    sub_23928D6E4(a1, (uint64_t)v26);
    v36 = v94;
    sub_2392688AC(v94, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      swift_release();
      v37 = (uint64_t)v26;
LABEL_10:
      sub_23925FE28(v37, &qword_256928158);
      return 0;
    }
  }
  else
  {
    sub_23928F83C((uint64_t)a1, (uint64_t)v24);
    v36 = v94;
    sub_2392688AC(v94, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27) == 1)
    {
      swift_release();
      v37 = (uint64_t)v24;
      goto LABEL_10;
    }
    v26 = v24;
  }
  sub_239292F08((uint64_t)v26, v36);
  v46 = *(_QWORD *)v35;
  v47 = v93;
  v48 = (uint64_t)v86;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v49 = sub_239292F4C((uint64_t)a1);
    if ((v50 & 1) != 0)
    {
      sub_2392751F8(*(_QWORD *)(v46 + 56) + *(_QWORD *)(v28 + 72) * v49, (uint64_t)v21);
      v82.i64[0] = *(_QWORD *)(v28 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v82.i64[0])(v21, 0, 1, v27);
      sub_23925FE28((uint64_t)v21, &qword_256928158);
LABEL_20:
      v62 = v94;
      v61 = v91;
      goto LABEL_21;
    }
  }
  v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v51(v21, 1, 1, v27);
  sub_23925FE28((uint64_t)v21, &qword_256928158);
  v52 = sub_239275BB8();
  v53 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v85, v52, v47);
  sub_2392751F8((uint64_t)a1, v48);
  v54 = sub_239352098();
  v55 = sub_239352578();
  v56 = os_log_type_enabled(v54, v55);
  v82.i64[0] = (uint64_t)v51;
  if (!v56)
  {
    sub_2392688AC(v48, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v47);
    goto LABEL_20;
  }
  v57 = swift_slowAlloc();
  v81.i64[0] = swift_slowAlloc();
  v96[0] = v81.i64[0];
  *(_DWORD *)v57 = 136380931;
  v95 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000023, 0x800000023935B620, v96));
  sub_2393526B0();
  *(_WORD *)(v57 + 12) = 2082;
  v80.i64[0] = v57 + 14;
  sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  v58 = sub_2393528C0();
  v95 = COERCE_DOUBLE(sub_23925F3EC(v58, v59, v96));
  sub_2393526B0();
  swift_bridgeObjectRelease();
  sub_2392688AC(v48, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
  _os_log_impl(&dword_23925B000, v54, v55, "MeshManager.%{private}s: Adding mesh anchor %{public}s after refinement", (uint8_t *)v57, 0x16u);
  v60 = v81.i64[0];
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v60, -1, -1);
  MEMORY[0x23B83BC04](v57, -1, -1);

  (*(void (**)(char *, uint64_t))(v92 + 8))(v85, v93);
  v61 = v91;
  v62 = v94;
LABEL_21:
  v63 = v84;
  v64 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v65 = (uint64_t)v88;
  v64(v88, a1, v61);
  v66 = v87;
  sub_2392751F8(v62, v87);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v82.i64[0])(v66, 0, 1, v27);
  swift_beginAccess();
  sub_239284CC4(v66, v65);
  v67 = v89;
  v64(v89, a1, v61);
  sub_239294364(v65, v67);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v61);
  v68 = swift_endAccess();
  (*(void (**)(uint64_t))(*(_QWORD *)v34 + 152))(v68);
  v69 = sub_239275BB8();
  v70 = v83.i64[0];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v83.i64[0], v69, v93);
  v71 = v90;
  sub_2392751F8((uint64_t)a1, v90);
  swift_retain_n();
  v72 = sub_239352098();
  v73 = sub_239352560();
  if (os_log_type_enabled(v72, v73))
  {
    v74 = swift_slowAlloc();
    v91 = swift_slowAlloc();
    v96[0] = v91;
    *(_DWORD *)v74 = 136381187;
    v95 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000023, 0x800000023935B620, v96));
    sub_2393526B0();
    *(_WORD *)(v74 + 12) = 2082;
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v75 = sub_2393528C0();
    v95 = COERCE_DOUBLE(sub_23925F3EC(v75, v76, v96));
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v77 = sub_2392688AC(v71, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    *(_WORD *)(v74 + 22) = 2048;
    v95 = (*(float (**)(uint64_t))(*(_QWORD *)v34 + 176))(v77);
    sub_2393526B0();
    swift_release_n();
    _os_log_impl(&dword_23925B000, v72, v73, "MeshManager.%{private}s: Refine mesh anchor %{public}s took %f ms", (uint8_t *)v74, 0x20u);
    v78 = v91;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v78, -1, -1);
    MEMORY[0x23B83BC04](v74, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v70, v93);
    v79 = v94;
  }
  else
  {
    swift_release_n();

    sub_2392688AC(v71, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v70, v93);
    v79 = v62;
  }
  sub_2392688AC(v79, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
  return 1;
}

void sub_23928D6E4(char *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  void *v60;
  id v61;
  uint64_t v62;
  void (*v63)(char *);
  NSObject *v64;
  id v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  id v71;
  void (*v72)(char *, id);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char *v77;
  double v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  id v92;
  id v93;
  id v94;
  char *v95;
  unint64_t v96;
  unint64_t v97;
  double v98;
  id v99;
  char *v100;
  id v101;
  char *v102;
  BOOL v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t (*v108)(char *);
  char v109;
  uint64_t v110;
  char *v111;
  int *v112;
  uint64_t v113;
  __n128 *v114;
  double v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  void *v127;
  void *v128;
  uint64_t v129;
  unint64_t v130;
  void *v131;
  char *v132;
  id v133;
  char *v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  id v143;
  os_log_type_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  os_log_type_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  os_log_type_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  id v164;
  id v165;
  os_log_type_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  NSObject *v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  void *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char *v183;
  uint64_t v184;
  void (*v185)(char *, uint64_t, id);
  uint64_t v186;
  NSObject *v187;
  os_log_type_t v188;
  unsigned __int32 v189;
  uint64_t v190;
  void (*v191)(char *, id);
  uint64_t v192;
  unint64_t v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  uint64_t v201;
  void *v202;
  void *v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  id v207;
  void *v208;
  char *v209;
  id v210;
  char *v211;
  NSObject *v212;
  os_log_type_t v213;
  char *v214;
  uint8_t *v215;
  void *v216;
  char *v217;
  id v218;
  uint64_t v219;
  id v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  __n128 v230;
  char *v231;
  __n128 v232;
  __n128 v233;
  __n128 v234;
  __n128 v235;
  __n128 v236;
  char *v237;
  id v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  void (*v245)(char *);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  int *v250;
  void (*v251)(char *, id);
  id v252;
  id v253;
  uint64_t v254[3];
  id v255[3];

  v246 = a2;
  v255[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v4);
  v229 = (uint64_t)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v248 = *((_QWORD *)v250 - 1);
  v6 = MEMORY[0x24BDAC7A8](v250);
  v242 = (char *)&v220 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v241 = (char *)&v220 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v239 = (char *)&v220 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v237 = (char *)&v220 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v234.n128_u64[0] = (unint64_t)&v220 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v230.n128_u64[0] = (unint64_t)&v220 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v228 = (uint64_t)&v220 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v222 = (uint64_t)&v220 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v231 = (char *)&v220 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v221 = (uint64_t)&v220 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v226 = (uint64_t)&v220 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v220 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v220 - v31;
  v33 = sub_2393520B0();
  v251 = *(void (**)(char *, id))(v33 - 8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v244 = (char *)&v220 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v243 = (char *)&v220 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v240 = (char *)&v220 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v236.n128_u64[0] = (unint64_t)&v220 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v233.n128_u64[0] = (unint64_t)&v220 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v232.n128_u64[0] = (unint64_t)&v220 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v225 = (char *)&v220 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v227 = (char *)&v220 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v223 = (char *)&v220 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v224 = (char *)&v220 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)&v220 - v54;
  v56 = sub_239352230();
  v57 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v59 = (id *)((char *)&v220 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v235.n128_u64[0] = v2;
  v60 = *(void **)(v2 + 40);
  *v59 = v60;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v57 + 104))(v59, *MEMORY[0x24BEE5610], v56);
  v61 = v60;
  LOBYTE(v60) = sub_239352254();
  (*(void (**)(_QWORD *, uint64_t))(v57 + 8))(v59, v56);
  if ((v60 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  v62 = sub_239275BB8();
  v63 = (void (*)(char *))*((_QWORD *)v251 + 2);
  v247 = v62;
  v63(v55);
  sub_2392751F8((uint64_t)a1, (uint64_t)v32);
  v249 = a1;
  sub_2392751F8((uint64_t)a1, (uint64_t)v30);
  v64 = sub_239352098();
  v65 = (id)v33;
  v66 = sub_239352560();
  if (os_log_type_enabled(v64, v66))
  {
    v67 = swift_slowAlloc();
    v220 = (id)swift_slowAlloc();
    v254[0] = (uint64_t)v220;
    *(_DWORD *)v67 = 136381187;
    v255[0] = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, v254);
    v238 = v65;
    sub_2393526B0();
    *(_WORD *)(v67 + 12) = 2082;
    v245 = v63;
    sub_239352020();
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v68 = sub_2393528C0();
    v255[0] = (id)sub_23925F3EC(v68, v69, v254);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_2392688AC((uint64_t)v32, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    *(_WORD *)(v67 + 22) = 2050;
    v70 = objc_msgSend(*(id *)&v30[v250[5]], sel_count);
    sub_2392688AC((uint64_t)v30, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v255[0] = v70;
    v63 = v245;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v64, v66, "MeshManager.%{private}s: Mesh anchor %{public}s num vertices before densification = %{public}ld", (uint8_t *)v67, 0x20u);
    v71 = v220;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v71, -1, -1);
    MEMORY[0x23B83BC04](v67, -1, -1);

    v72 = (void (*)(char *, id))*((_QWORD *)v251 + 1);
    v73 = v55;
    v65 = v238;
  }
  else
  {
    sub_2392688AC((uint64_t)v30, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    sub_2392688AC((uint64_t)v32, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

    v72 = (void (*)(char *, id))*((_QWORD *)v251 + 1);
    v73 = v55;
  }
  v251 = v72;
  v72(v73, v65);
  v74 = (uint64_t)v249;
  v75 = sub_239271B2C((uint64_t)v249);
  if (!v75)
  {
    v134 = v244;
    ((void (*)(char *, uint64_t, id))v63)(v244, v247, v65);
    v135 = (uint64_t)v242;
    sub_2392751F8(v74, (uint64_t)v242);
    v136 = sub_239352098();
    v137 = sub_23935256C();
    if (os_log_type_enabled(v136, v137))
    {
      v138 = swift_slowAlloc();
      v139 = swift_slowAlloc();
      v254[0] = v139;
      *(_DWORD *)v138 = 136380931;
      v255[0] = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, v254);
      sub_2393526B0();
      *(_WORD *)(v138 + 12) = 2082;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v140 = sub_2393528C0();
      v255[0] = (id)sub_23925F3EC(v140, v141, v254);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v135, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v136, v137, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s", (uint8_t *)v138, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v139, -1, -1);
      MEMORY[0x23B83BC04](v138, -1, -1);

      v142 = v244;
      v143 = v65;
      goto LABEL_40;
    }
LABEL_24:
    v150 = v135;
LABEL_39:
    sub_2392688AC(v150, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

    v142 = v134;
    v143 = v65;
    goto LABEL_40;
  }
  v76 = (void *)v75;
  v77 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE38568]), sel_init);
  LODWORD(v78) = 0.5;
  objc_msgSend(v77, sel_setRatio_, v78);
  objc_msgSend(v77, sel_setIterations_, 2);
  if (!GESSAlgSplitLongEdges())
  {
    v134 = v243;
    ((void (*)(char *, uint64_t, id))v63)(v243, v247, v65);
    v135 = (uint64_t)v241;
    sub_2392751F8(v74, (uint64_t)v241);
    v136 = sub_239352098();
    v144 = sub_23935256C();
    if (os_log_type_enabled(v136, v144))
    {
      v145 = swift_slowAlloc();
      v146 = swift_slowAlloc();
      v220 = v76;
      v147 = v146;
      v254[0] = v146;
      *(_DWORD *)v145 = 136380931;
      v255[0] = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, v254);
      sub_2393526B0();
      *(_WORD *)(v145 + 12) = 2082;
      v244 = v77;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v148 = sub_2393528C0();
      v255[0] = (id)sub_23925F3EC(v148, v149, v254);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v135, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v136, v144, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to subdivide mesh!", (uint8_t *)v145, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v147, -1, -1);
      MEMORY[0x23B83BC04](v145, -1, -1);

      v142 = v243;
      v143 = v65;
      goto LABEL_40;
    }

    goto LABEL_24;
  }
  v79 = objc_msgSend(v76, sel_vertexSize);
  v80 = 3 * v79;
  if ((v80 & 0xFFFFFFFF00000000) != 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v245 = v63;
  v81 = v80;
  v82 = 12 * v79;
  v83 = swift_slowAlloc();
  if (!objc_msgSend(v76, sel_getPositions_size_, v83, v81))
  {
    v134 = v240;
    ((void (*)(char *, uint64_t, id))v245)(v240, v247, v65);
    v151 = (uint64_t)v239;
    sub_2392751F8(v74, (uint64_t)v239);
    v136 = sub_239352098();
    v152 = sub_23935256C();
    if (!os_log_type_enabled(v136, v152))
    {

LABEL_38:
      v150 = v151;
      goto LABEL_39;
    }
    v153 = swift_slowAlloc();
    v154 = swift_slowAlloc();
    v220 = v76;
    v155 = v154;
    v254[0] = v154;
    *(_DWORD *)v153 = 136380931;
    v255[0] = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, v254);
    sub_2393526B0();
    *(_WORD *)(v153 + 12) = 2082;
    v244 = v77;
    sub_239352020();
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v156 = sub_2393528C0();
    v255[0] = (id)sub_23925F3EC(v156, v157, v254);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_2392688AC(v151, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    _os_log_impl(&dword_23925B000, v136, v152, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to get positions from tri mesh!", (uint8_t *)v153, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v155, -1, -1);
    MEMORY[0x23B83BC04](v153, -1, -1);

    v142 = v240;
    v143 = v65;
LABEL_40:
    v251(v142, v143);
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v248 + 56))(v246, 1, 1, v250);
    return;
  }
  v243 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_initWithBytesNoCopy_length_freeWhenDone_, v83, v82, 1);
  v84 = swift_slowAlloc();
  v85 = objc_msgSend(v76, sel_getVertexColors_size_, v84, v81);
  v220 = v76;
  if (!v85)
  {
    v134 = (char *)v236.n128_u64[0];
    ((void (*)(unint64_t, uint64_t, id))v245)(v236.n128_u64[0], v247, v65);
    v151 = (uint64_t)v237;
    sub_2392751F8((uint64_t)v249, (uint64_t)v237);
    v136 = sub_239352098();
    v158 = sub_23935256C();
    if (os_log_type_enabled(v136, v158))
    {
      v159 = v134;
      v160 = swift_slowAlloc();
      v161 = swift_slowAlloc();
      v254[0] = v161;
      *(_DWORD *)v160 = 136380931;
      v255[0] = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, v254);
      sub_2393526B0();
      *(_WORD *)(v160 + 12) = 2082;
      v244 = v77;
      sub_239352020();
      v238 = v65;
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v162 = sub_2393528C0();
      v255[0] = (id)sub_23925F3EC(v162, v163, v254);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v151, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v136, v158, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to get colors from tri mesh!", (uint8_t *)v160, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v161, -1, -1);
      MEMORY[0x23B83BC04](v160, -1, -1);
      v164 = v220;
LABEL_33:

      v142 = v159;
      v143 = v238;
      goto LABEL_40;
    }

    v165 = v243;
    goto LABEL_37;
  }
  v242 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_initWithBytesNoCopy_length_freeWhenDone_, v84, v82, 1);
  v86 = objc_msgSend(v76, sel_vertexNormalSize);
  v87 = 3 * v86;
  if ((v87 & 0xFFFFFFFF00000000) != 0)
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
  }
  v88 = v87;
  v89 = 12 * v86;
  v90 = swift_slowAlloc();
  if (!objc_msgSend(v76, sel_getVertexNormals_size_, v90, v88))
  {
    v134 = (char *)v233.n128_u64[0];
    ((void (*)(unint64_t, uint64_t, id))v245)(v233.n128_u64[0], v247, v65);
    v151 = v234.n128_u64[0];
    sub_2392751F8((uint64_t)v249, v234.n128_i64[0]);
    v136 = sub_239352098();
    v166 = sub_23935256C();
    if (os_log_type_enabled(v136, v166))
    {
      v159 = v134;
      v167 = swift_slowAlloc();
      v168 = swift_slowAlloc();
      v254[0] = v168;
      *(_DWORD *)v167 = 136380931;
      v255[0] = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, v254);
      sub_2393526B0();
      *(_WORD *)(v167 + 12) = 2082;
      v244 = v77;
      sub_239352020();
      v238 = v65;
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v169 = sub_2393528C0();
      v255[0] = (id)sub_23925F3EC(v169, v170, v254);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v151, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v136, v166, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to get normals from tri mesh!", (uint8_t *)v167, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v168, -1, -1);
      MEMORY[0x23B83BC04](v167, -1, -1);

      v164 = v242;
      goto LABEL_33;
    }

    v165 = v242;
LABEL_37:

    goto LABEL_38;
  }
  v91 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_initWithBytesNoCopy_length_freeWhenDone_, v90, v89, 1);
  v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v93 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v94 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v95 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE38570]), sel_init);
  v96 = v235.n128_u64[0];
  v97 = v235.n128_u64[0] + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  swift_beginAccess();
  LODWORD(v98) = *(_DWORD *)(v97 + 56);
  objc_msgSend(v95, sel_setVoxelSize_, v98);
  v255[0] = v92;
  v252 = v94;
  v253 = v93;
  v239 = v91;
  LODWORD(v91) = GESSAlgVertexClusterDownsample();
  v241 = (char *)v252;

  v99 = v253;
  v100 = (char *)v255[0];

  v240 = v100;
  if (!(_DWORD)v91)
  {
    v171 = v232.n128_u64[0];
    ((void (*)(unint64_t, uint64_t, id))v245)(v232.n128_u64[0], v247, v65);
    v172 = v230.n128_u64[0];
    sub_2392751F8((uint64_t)v249, v230.n128_i64[0]);
    v173 = sub_239352098();
    v174 = sub_23935256C();
    if (os_log_type_enabled(v173, (os_log_type_t)v174))
    {
      v175 = swift_slowAlloc();
      v238 = v99;
      v176 = v175;
      v177 = (void *)swift_slowAlloc();
      v244 = v77;
      v178 = v177;
      v255[0] = v177;
      *(_DWORD *)v176 = 136380931;
      v253 = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, (uint64_t *)v255);
      v237 = v95;
      sub_2393526B0();
      *(_WORD *)(v176 + 12) = 2082;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v179 = sub_2393528C0();
      v253 = (id)sub_23925F3EC(v179, v180, (uint64_t *)v255);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v172, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v173, (os_log_type_t)v174, "MeshManager.%{private}s: Failed to densify mesh anchor\n%{public}s - failed to vertex cluster mesh!", (uint8_t *)v176, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v178, -1, -1);
      v181 = v176;
      v99 = v238;
      MEMORY[0x23B83BC04](v181, -1, -1);

      v182 = v232.n128_u64[0];
    }
    else
    {

      sub_2392688AC(v172, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v182 = v171;
    }
    v251((char *)v182, v65);
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v248 + 56))(v246, 1, 1, v250);

    goto LABEL_52;
  }
  v101 = objc_msgSend(v100, sel_length);
  v102 = (char *)objc_msgSend(v99, sel_length);
  v103 = __OFADD__(v101, v102);
  v104 = &v102[(_QWORD)v101];
  if (v103)
    goto LABEL_61;
  v238 = v99;
  v105 = (char *)objc_msgSend(v241, sel_length);
  v103 = __OFADD__(v104, v105);
  v106 = &v105[(_QWORD)v104];
  v107 = (uint64_t)v231;
  if (v103)
    goto LABEL_62;
  v108 = *(uint64_t (**)(char *))(**(_QWORD **)(v96 + 104) + 280);
  swift_retain();
  v109 = v108(v106);
  swift_release();
  v244 = v77;
  v237 = v95;
  if ((v109 & 1) == 0)
  {
    v183 = v227;
    v184 = v247;
    v185 = (void (*)(char *, uint64_t, id))v245;
    ((void (*)(char *, uint64_t, id))v245)(v227, v247, v65);
    v186 = v228;
    sub_2392751F8((uint64_t)v249, v228);
    v187 = sub_239352098();
    v188 = sub_23935256C();
    v189 = v188;
    if (os_log_type_enabled(v187, v188))
    {
      v190 = swift_slowAlloc();
      v249 = (char *)swift_slowAlloc();
      v255[0] = v249;
      *(_DWORD *)v190 = 136380931;
      v236.n128_u32[0] = v189;
      v253 = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, (uint64_t *)v255);
      sub_2393526B0();
      *(_WORD *)(v190 + 12) = 2082;
      v235.n128_u64[0] = v190 + 14;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v191 = v251;
      v192 = sub_2393528C0();
      v253 = (id)sub_23925F3EC(v192, v193, (uint64_t *)v255);
      v185 = (void (*)(char *, uint64_t, id))v245;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v186, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v187, (os_log_type_t)v236.n128_u8[0], "MeshManager.%{private}s: Failed to copy densify mesh anchor %{public}s. Heap full!", (uint8_t *)v190, 0x16u);
      v194 = v249;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v194, -1, -1);
      v195 = v190;
      v184 = v247;
      MEMORY[0x23B83BC04](v195, -1, -1);

      v191(v183, v65);
    }
    else
    {
      sub_2392688AC(v186, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      v251(v183, v65);
    }
    v211 = v225;
    *(_BYTE *)(v97 + 72) = 1;
    v185(v211, v184, v65);
    v212 = sub_239352098();
    v213 = sub_239352554();
    if (os_log_type_enabled(v212, v213))
    {
      v214 = v211;
      v215 = (uint8_t *)swift_slowAlloc();
      v216 = (void *)swift_slowAlloc();
      v255[0] = v216;
      *(_DWORD *)v215 = 136380675;
      v253 = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, (uint64_t *)v255);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v212, v213, "MeshManager.%{private}s: Trigerring all mesh anchor refinement in the next update.", v215, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v216, -1, -1);
      MEMORY[0x23B83BC04](v215, -1, -1);

      v217 = v214;
    }
    else
    {

      v217 = v211;
    }
    v251(v217, v65);
    v218 = v240;
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v248 + 56))(v246, 1, 1, v250);

LABEL_52:
    return;
  }
  v110 = *(_QWORD *)(v96 + 104);
  v111 = v249;
  v112 = v250;
  v113 = v250[10];
  v114 = (__n128 *)&v249[v250[9]];
  v230 = *v114;
  v232 = v114[1];
  v234 = v114[2];
  v236 = v114[3];
  v115 = *(double *)&v249[v113];
  v116 = v250[12];
  v233 = *(__n128 *)&v249[v250[11]];
  v235 = *(__n128 *)&v249[v116];
  v117 = v240;
  v118 = (char *)v238;
  v119 = v241;
  swift_retain();
  v120 = v229;
  sub_2392712AC((uint64_t)v117, (uint64_t)v118, (uint64_t)v119, v110, v111, v229, v230, v232, v234, v236, v115, v233, v235);
  v241 = v117;

  swift_release();
  v121 = v248;
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v248 + 48))(v120, 1, v112) == 1)
  {
    sub_23925FE28(v120, &qword_256928158);
    v122 = v223;
    ((void (*)(char *, uint64_t, id))v245)(v223, v247, v65);
    v123 = v222;
    sub_2392751F8((uint64_t)v111, v222);
    v124 = sub_239352098();
    v125 = sub_23935256C();
    if (os_log_type_enabled(v124, v125))
    {
      v126 = swift_slowAlloc();
      v127 = (void *)swift_slowAlloc();
      v249 = v118;
      v128 = v127;
      v255[0] = v127;
      *(_DWORD *)v126 = 136380931;
      v253 = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, (uint64_t *)v255);
      v238 = v65;
      sub_2393526B0();
      *(_WORD *)(v126 + 12) = 2082;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v121 = v248;
      v129 = sub_2393528C0();
      v253 = (id)sub_23925F3EC(v129, v130, (uint64_t *)v255);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v123, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_23925B000, v124, v125, "MeshManager.%{private}s: Failed to densify mesh anchor\n%{public}s", (uint8_t *)v126, 0x16u);
      swift_arrayDestroy();
      v131 = v128;
      v118 = v249;
      MEMORY[0x23B83BC04](v131, -1, -1);
      MEMORY[0x23B83BC04](v126, -1, -1);

      v132 = v223;
      v133 = v238;
    }
    else
    {

      sub_2392688AC(v123, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v132 = v122;
      v133 = v65;
    }
    v251(v132, v133);
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v121 + 56))(v246, 1, 1, v250);
  }
  else
  {
    v196 = v120;
    v197 = v226;
    sub_239292F08(v196, v226);
    ((void (*)(char *, uint64_t, id))v245)(v224, v247, v65);
    v198 = v221;
    sub_2392751F8((uint64_t)v111, v221);
    sub_2392751F8(v197, v107);
    v199 = sub_239352098();
    v200 = sub_239352560();
    if (os_log_type_enabled(v199, v200))
    {
      v201 = swift_slowAlloc();
      v202 = (void *)swift_slowAlloc();
      v249 = v118;
      v203 = v202;
      v255[0] = v202;
      *(_DWORD *)v201 = 136381187;
      v253 = (id)sub_23925F3EC(0xD000000000000014, 0x800000023935B600, (uint64_t *)v255);
      v238 = v65;
      sub_2393526B0();
      *(_WORD *)(v201 + 12) = 2082;
      sub_239352020();
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v204 = sub_2393528C0();
      v253 = (id)sub_23925F3EC(v204, v205, (uint64_t *)v255);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_2392688AC(v198, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      *(_WORD *)(v201 + 22) = 2050;
      v206 = (uint64_t)v231;
      v207 = objc_msgSend(*(id *)&v231[v250[5]], sel_count);
      sub_2392688AC(v206, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v253 = v207;
      v121 = v248;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v199, v200, "MeshManager.%{private}s: Mesh anchor %{public}s num vertices after densification = %{public}ld", (uint8_t *)v201, 0x20u);
      swift_arrayDestroy();
      v208 = v203;
      v118 = v249;
      MEMORY[0x23B83BC04](v208, -1, -1);
      MEMORY[0x23B83BC04](v201, -1, -1);

      v209 = v224;
      v210 = v238;
    }
    else
    {
      sub_2392688AC(v107, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      sub_2392688AC(v198, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v209 = v224;
      v210 = v65;
    }
    v251(v209, v210);
    v219 = v246;
    sub_239292F08(v226, v246);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v121 + 56))(v219, 0, 1, v250);
  }

}

void sub_23928F83C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *);
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  char **v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int *v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  double v66;
  int v67;
  id v68;
  char *v69;
  id v70;
  id v71;
  char *v72;
  BOOL v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t (*v77)(char *);
  char v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __n128 *v82;
  double v83;
  uint64_t v84;
  id v85;
  char *v86;
  id v87;
  char *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  _BOOL4 v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  char *v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  void *v115;
  id v116;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  id v125;
  id v126;
  __n128 v127;
  __n128 v128;
  __n128 v129;
  uint64_t v130;
  __n128 v131;
  __n128 v132;
  __n128 v133;
  char *v134;
  char *v135;
  _QWORD *v136;
  id v137;
  id v138;
  id v139;
  uint64_t v140[4];

  v130 = a2;
  v140[3] = *MEMORY[0x24BDAC8D0];
  v133.n128_u64[0] = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v4 = *(_QWORD *)(v133.n128_u64[0] - 8);
  v5 = MEMORY[0x24BDAC7A8](v133.n128_u64[0]);
  v122 = (uint64_t)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v120 = (uint64_t)&v117 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v135 = (char *)&v117 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v117 - v11;
  v13 = sub_2393520B0();
  v136 = *(_QWORD **)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v124 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v119 = (char *)&v117 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v121 = (char *)&v117 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v117 - v20;
  v22 = sub_239352230();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131.n128_u64[0] = v2;
  v26 = *(void **)(v2 + 40);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BEE5610], v22);
  v27 = v26;
  LOBYTE(v26) = sub_239352254();
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v123 = v4;
  v28 = sub_239275BB8();
  v29 = (void (*)(char *))v136[2];
  v128.n128_u64[0] = v28;
  v129.n128_u64[0] = (unint64_t)v29;
  v29(v21);
  sub_2392751F8(a1, (uint64_t)v12);
  v134 = (char *)a1;
  sub_2392751F8(a1, (uint64_t)v135);
  v30 = sub_239352098();
  v31 = sub_239352560();
  v32 = os_log_type_enabled(v30, v31);
  v33 = &off_250AD4000;
  v132.n128_u64[0] = v13;
  if (v32)
  {
    v34 = swift_slowAlloc();
    v127.n128_u64[0] = swift_slowAlloc();
    v140[0] = v127.n128_u64[0];
    *(_DWORD *)v34 = 136381187;
    v139 = (id)sub_23925F3EC(0xD000000000000015, 0x800000023935B5E0, v140);
    sub_2393526B0();
    *(_WORD *)(v34 + 12) = 2082;
    sub_239352020();
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v35 = sub_2393528C0();
    v139 = (id)sub_23925F3EC(v35, v36, v140);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_2392688AC((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    *(_WORD *)(v34 + 22) = 2050;
    v37 = (int *)v133.n128_u64[0];
    v38 = (uint64_t)v135;
    v39 = objc_msgSend(*(id *)&v135[*(int *)(v133.n128_u64[0] + 20)], sel_count);
    sub_2392688AC(v38, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v139 = v39;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v30, v31, "MeshManager.%{private}s: Mesh anchor %{public}s num vertices before simplification = %{public}ld", (uint8_t *)v34, 0x20u);
    v40 = v127.n128_u64[0];
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v40, -1, -1);
    v41 = v34;
    v33 = &off_250AD4000;
    MEMORY[0x23B83BC04](v41, -1, -1);

    v127.n128_u64[0] = v136[1];
    ((void (*)(char *, unint64_t))v127.n128_u64[0])(v21, v132.n128_u64[0]);
  }
  else
  {
    sub_2392688AC((uint64_t)v135, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    sub_2392688AC((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

    v127.n128_u64[0] = v136[1];
    ((void (*)(char *, uint64_t))v127.n128_u64[0])(v21, v13);
    v37 = (int *)v133.n128_u64[0];
  }
  v42 = v37[5];
  v43 = (uint64_t)v134;
  v44 = objc_msgSend(*(id *)&v134[v42], sel_buffer);
  v45 = objc_msgSend(v44, sel_contents);
  v46 = v44;
  v47 = (uint64_t)objc_msgSend(*(id *)(v43 + v42), v33[182]);
  if ((unsigned __int128)(v47 * (__int128)3) >> 64 != (3 * v47) >> 63)
    goto LABEL_29;
  if ((unint64_t)(3 * v47 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v136 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_initWithBytesNoCopy_length_freeWhenDone_, v45, 12 * v47, 0);
  v48 = v37[6];
  v49 = objc_msgSend(*(id *)(v43 + v48), sel_buffer);
  v50 = objc_msgSend(v49, sel_contents);
  v51 = v49;
  v52 = (uint64_t)objc_msgSend(*(id *)(v43 + v48), v33[182]);
  if ((unsigned __int128)(v52 * (__int128)3) >> 64 != (3 * v52) >> 63)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((unint64_t)(3 * v52 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v135 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_initWithBytesNoCopy_length_freeWhenDone_, v50, 12 * v52, 0);
  v53 = v37[7];
  v54 = objc_msgSend(*(id *)(v43 + v53), sel_buffer);
  v55 = objc_msgSend(v54, sel_contents);
  v56 = v54;
  v57 = (uint64_t)objc_msgSend(*(id *)(v43 + v53), v33[182]);
  if ((unsigned __int128)(v57 * (__int128)3) >> 64 != (3 * v57) >> 63)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)(3 * v57 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v58 = v132.n128_u64[0];
  v59 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_initWithBytesNoCopy_length_freeWhenDone_, v55, 12 * v57, 0);
  v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE38570]), sel_init);
  v64 = v131.n128_u64[0];
  v65 = v131.n128_u64[0] + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  swift_beginAccess();
  LODWORD(v66) = *(_DWORD *)(v65 + 56);
  objc_msgSend(v63, sel_setVoxelSize_, v66);
  v138 = v61;
  v139 = v60;
  v137 = v62;
  v126 = v63;
  v67 = GESSAlgVertexClusterDownsample();
  v68 = v137;

  v69 = (char *)v138;
  v70 = v139;

  if (v67)
  {
    v125 = v68;
    v71 = objc_msgSend(v70, sel_length);
    v72 = (char *)objc_msgSend(v69, sel_length);
    v73 = __OFADD__(v71, v72);
    v74 = &v72[(_QWORD)v71];
    if (!v73)
    {
      v75 = (char *)objc_msgSend(v125, sel_length);
      v73 = __OFADD__(v74, v75);
      v76 = &v75[(_QWORD)v74];
      if (!v73)
      {
        v124 = v69;
        v77 = *(uint64_t (**)(char *))(**(_QWORD **)(v64 + 104) + 280);
        swift_retain();
        v78 = v77(v76);
        swift_release();
        if ((v78 & 1) != 0)
        {
          v79 = *(_QWORD *)(v64 + 104);
          v80 = v37[10];
          v81 = v134;
          v82 = (__n128 *)&v134[v37[9]];
          v127 = *v82;
          v128 = v82[1];
          v131 = v82[2];
          v133 = v82[3];
          v83 = *(double *)&v134[v80];
          v84 = v37[12];
          v129 = *(__n128 *)&v134[v37[11]];
          v132 = *(__n128 *)&v134[v84];
          v85 = v70;
          v86 = v124;
          v87 = v125;
          swift_retain();
          sub_2392712AC((uint64_t)v85, (uint64_t)v86, (uint64_t)v87, v79, v81, v130, v127, v128, v131, v133, v83, v129, v132);

          swift_release();
          v68 = v135;
          v70 = v136;
          v69 = v59;
        }
        else
        {
          v131.n128_u64[0] = (unint64_t)v59;
          v100 = v121;
          v101 = v58;
          ((void (*)(char *, unint64_t, unint64_t))v129.n128_u64[0])(v121, v128.n128_u64[0], v58);
          v102 = v120;
          sub_2392751F8((uint64_t)v134, v120);
          v103 = sub_239352098();
          v104 = sub_23935256C();
          v105 = os_log_type_enabled(v103, v104);
          v118 = v70;
          if (v105)
          {
            v106 = swift_slowAlloc();
            v107 = (void *)swift_slowAlloc();
            v139 = v107;
            *(_DWORD *)v106 = 136380931;
            v138 = (id)sub_23925F3EC(0xD000000000000015, 0x800000023935B5E0, (uint64_t *)&v139);
            sub_2393526B0();
            *(_WORD *)(v106 + 12) = 2082;
            v134 = (char *)(v106 + 14);
            sub_239352020();
            sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
            v108 = sub_2393528C0();
            v138 = (id)sub_23925F3EC(v108, v109, (uint64_t *)&v139);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            sub_2392688AC(v102, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
            _os_log_impl(&dword_23925B000, v103, v104, "MeshManager.%{private}s: Failed to copy simplified mesh anchor %{public}s. Heap full!", (uint8_t *)v106, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v107, -1, -1);
            MEMORY[0x23B83BC04](v106, -1, -1);

            v110 = v121;
          }
          else
          {
            sub_2392688AC(v102, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

            v110 = v100;
          }
          ((void (*)(char *, unint64_t))v127.n128_u64[0])(v110, v101);
          v111 = v119;
          *(_BYTE *)(v65 + 72) = 1;
          ((void (*)(char *, unint64_t, unint64_t))v129.n128_u64[0])(v111, v128.n128_u64[0], v101);
          v112 = sub_239352098();
          v113 = sub_239352554();
          if (os_log_type_enabled(v112, v113))
          {
            v114 = (uint8_t *)swift_slowAlloc();
            v115 = (void *)swift_slowAlloc();
            v139 = v115;
            *(_DWORD *)v114 = 136380675;
            v138 = (id)sub_23925F3EC(0xD000000000000015, 0x800000023935B5E0, (uint64_t *)&v139);
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v112, v113, "MeshManager.%{private}s: Trigerring all mesh anchor simplification in the next update.", v114, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v115, -1, -1);
            MEMORY[0x23B83BC04](v114, -1, -1);

            v116 = v136;
          }
          else
          {

            v116 = v135;
          }

          ((void (*)(char *, unint64_t))v127.n128_u64[0])(v111, v101);
          v68 = v125;
          v69 = v124;
          v70 = v118;
          (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v123 + 56))(v130, 1, 1, v133.n128_u64[0]);
        }
        goto LABEL_27;
      }
LABEL_36:
      __break(1u);
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v88 = v124;
  ((void (*)(char *, unint64_t, unint64_t))v129.n128_u64[0])(v124, v128.n128_u64[0], v58);
  v89 = v122;
  sub_2392751F8((uint64_t)v134, v122);
  v90 = sub_239352098();
  v91 = sub_23935256C();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = swift_slowAlloc();
    v118 = v70;
    v93 = v92;
    v94 = (void *)swift_slowAlloc();
    v139 = v94;
    *(_DWORD *)v93 = 136380931;
    v125 = v68;
    v138 = (id)sub_23925F3EC(0xD000000000000015, 0x800000023935B5E0, (uint64_t *)&v139);
    sub_2393526B0();
    *(_WORD *)(v93 + 12) = 2082;
    sub_239352020();
    v131.n128_u64[0] = (unint64_t)v59;
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v95 = sub_2393528C0();
    v138 = (id)sub_23925F3EC(v95, v96, (uint64_t *)&v139);
    v68 = v125;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_2392688AC(v89, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    _os_log_impl(&dword_23925B000, v90, v91, "MeshManager.%{private}s: Failed to simplify mesh anchor %{public}s", (uint8_t *)v93, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v94, -1, -1);
    v97 = v93;
    v70 = v118;
    MEMORY[0x23B83BC04](v97, -1, -1);

    v98 = v124;
    v99 = v132.n128_u64[0];
  }
  else
  {

    sub_2392688AC(v89, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v98 = v88;
    v99 = v58;
  }
  ((void (*)(char *, unint64_t))v127.n128_u64[0])(v98, v99);
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v123 + 56))(v130, 1, 1, v133.n128_u64[0]);
LABEL_27:

}

uint64_t sub_239290798(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t result;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int32 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float32x4_t *v56;
  float32x4_t v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int v70;
  simd_float4 v71;
  int64_t v72;
  __int128 v73;
  unint64_t v74;
  unint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  float32x2_t *v80;
  float32x4_t v81;
  float32x4_t v82;
  float32x4_t v83;
  float v84;
  float v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  char isUniquelyReferenced_nonNull_native;
  void (*v107)(uint64_t, uint64_t);
  char *v108;
  BOOL v109;
  char *v110;
  char *v111;
  NSObject *v112;
  uint64_t v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  __int128 v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  void (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t *v145;
  float32x4_t v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  simd_float4 v150;
  simd_float4 v151;
  simd_float4 v152;
  simd_float4 v153;
  __int128 v154;
  uint64_t v155;
  float32x4_t v156;
  float32x4_t v157;
  float32x4_t v158;
  float32x4_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int64_t v165;
  uint64_t v166;
  uint64_t v167;
  float32x4_t v168;
  __int128 v169;
  simd_float4 v170;
  simd_float4 v171;
  simd_float4x4 v172;
  simd_float4x4 v173;

  v2 = v1;
  v139 = sub_239352020();
  v138 = *(_QWORD *)(v139 - 8);
  v4 = MEMORY[0x24BDAC7A8](v139);
  v137 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v136 = (char *)&v122 - v6;
  v7 = sub_23925FB08(&qword_256928158);
  MEMORY[0x24BDAC7A8](v7);
  v135 = (uint64_t)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v155 = *(_QWORD *)(v147 - 8);
  v9 = MEMORY[0x24BDAC7A8](v147);
  v134 = (uint64_t)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v131 = (uint64_t)&v122 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v122 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v122 - v16;
  v18 = sub_2393520B0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v129 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v125 = (char *)&v122 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v130 = (char *)&v122 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v159.i64[0] = (uint64_t)&v122 - v26;
  v27 = sub_239352230();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (uint64_t *)((char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = *a1;
  v124 = a1[1];
  v156.i64[0] = a1[2];
  v151.i64[0] = a1[3];
  *(_QWORD *)&v154 = a1[4];
  v150.i64[0] = a1[5];
  v153.i64[0] = a1[6];
  v149 = a1[7];
  v152.i64[0] = a1[8];
  v148 = a1[9];
  v157.i32[0] = *((unsigned __int8 *)a1 + 80);
  v158.i64[0] = v2;
  v32 = *(void **)(v2 + 40);
  *v30 = v32;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x24BEE5610], v27);
  v33 = v32;
  LOBYTE(v32) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v28 + 8))(v30, v27);
  if ((v32 & 1) == 0)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return result;
  }
  v35 = sub_239275BB8();
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v142 = v35;
  v143 = v36;
  ((void (*)(uint64_t))v36)(v159.i64[0]);
  v37 = sub_239352098();
  v38 = sub_239352578();
  v39 = os_log_type_enabled(v37, v38);
  v144 = v18;
  v140 = v31;
  if (v39)
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v168.i64[0] = v41;
    *(_DWORD *)v40 = 136380675;
    v160 = sub_23925F3EC(0xD000000000000026, 0x800000023935B5B0, (uint64_t *)&v168);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v37, v38, "MeshManager.%{private}s: Processing updated mesh anchors without refinement...", v40, 0xCu);
    v31 = v140;
    swift_arrayDestroy();
    v42 = v41;
    v18 = v144;
    MEMORY[0x23B83BC04](v42, -1, -1);
    MEMORY[0x23B83BC04](v40, -1, -1);
  }

  v141 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v141(v159.i64[0], v18);
  v43 = v158.i64[0];
  v44 = v157.i32[0];
  v45 = v158.i64[0] + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  result = swift_beginAccess();
  v145 = (uint64_t *)v45;
  v46 = *(_QWORD *)(v45 + 8);
  v133 = v45 + 8;
  v47 = v147;
  if (*(_QWORD *)(v46 + 16))
    goto LABEL_57;
  if ((v44 & 1) != 0)
  {
    v48 = 0.0;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v56 = 0;
  }
  else
  {
    v57.i64[0] = v156.i64[0];
    v57.i64[1] = v151.i64[0];
    v159 = v57;
    v57.i64[0] = v154;
    v57.i64[1] = v150.i64[0];
    v158 = v57;
    v57.i64[0] = v153.i64[0];
    v57.i64[1] = v149;
    v157 = v57;
    v57.i64[0] = v152.i64[0];
    v57.i64[1] = v148;
    v146 = v57;
    v160 = v156.i64[0];
    v161 = v151.i64[0];
    v162 = v154;
    v163 = v150.i64[0];
    v164 = v153.i64[0];
    v165 = v149;
    v166 = v152.i64[0];
    v167 = v148;
    OCBoundingBox.scale(_:)(&v168, *(float32x4_t *)(v43 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection));
    v156 = v168;
    v154 = v169;
    v153 = v170;
    v152 = v171;
    type metadata accessor for MeshUtils.AABB();
    v168 = v156;
    v169 = v154;
    v170 = v153;
    v171 = v152;
    v56 = sub_239272F64();
    v58 = sub_2392DF0F4(v159);
    v49 = v59;
    v48 = v58;
    v51 = v60;
    v50 = v61;
    v53 = v62;
    v52 = v63;
    v55 = v64;
    v54 = v65;
  }
  v66 = *(_QWORD *)(v31 + 64);
  v148 = v31 + 64;
  v67 = 1 << *(_BYTE *)(v31 + 32);
  v68 = -1;
  if (v67 < 64)
    v68 = ~(-1 << v67);
  v69 = v68 & v66;
  v149 = (unint64_t)(v67 + 63) >> 6;
  if (v56)
    v70 = v44;
  else
    v70 = 1;
  LODWORD(v154) = v70;
  *(double *)v71.i64 = v48;
  v71.i64[1] = v49;
  v153 = v71;
  v71.i64[0] = v50;
  v71.i64[1] = v51;
  v152 = v71;
  v71.i64[0] = v52;
  v71.i64[1] = v53;
  v151 = v71;
  v71.i64[0] = v54;
  v71.i64[1] = v55;
  v150 = v71;
  result = swift_bridgeObjectRetain();
  v146.i64[0] = 0;
  v72 = 0;
  *(_QWORD *)&v73 = 136380931;
  v128 = v73;
  v123 = (unint64_t)"kMeshOverlapRemovalThreshold";
  v127 = 0x800000023935B5B0;
  v126 = MEMORY[0x24BEE4AD8] + 8;
  v132 = v17;
  do
  {
    while (1)
    {
      if (v69)
      {
        v74 = __clz(__rbit64(v69));
        v69 &= v69 - 1;
        v75 = v74 | (v72 << 6);
      }
      else
      {
        v76 = v72 + 1;
        if (__OFADD__(v72, 1))
        {
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        if (v76 >= v149)
          goto LABEL_45;
        v77 = *(_QWORD *)(v148 + 8 * v76);
        ++v72;
        if (!v77)
        {
          v72 = v76 + 1;
          if (v76 + 1 >= v149)
            goto LABEL_45;
          v77 = *(_QWORD *)(v148 + 8 * v72);
          if (!v77)
          {
            v72 = v76 + 2;
            if (v76 + 2 >= v149)
              goto LABEL_45;
            v77 = *(_QWORD *)(v148 + 8 * v72);
            if (!v77)
            {
              v72 = v76 + 3;
              if (v76 + 3 >= v149)
                goto LABEL_45;
              v77 = *(_QWORD *)(v148 + 8 * v72);
              if (!v77)
              {
                v78 = v76 + 4;
                if (v78 >= v149)
                  goto LABEL_45;
                v77 = *(_QWORD *)(v148 + 8 * v78);
                if (!v77)
                {
                  while (1)
                  {
                    v72 = v78 + 1;
                    if (__OFADD__(v78, 1))
                      goto LABEL_55;
                    if (v72 >= v149)
                      goto LABEL_45;
                    v77 = *(_QWORD *)(v148 + 8 * v72);
                    ++v78;
                    if (v77)
                      goto LABEL_32;
                  }
                }
                v72 = v78;
              }
            }
          }
        }
LABEL_32:
        v69 = (v77 - 1) & v77;
        v75 = __clz(__rbit64(v77)) + (v72 << 6);
      }
      v79 = *(_QWORD *)(v155 + 72);
      sub_2392751F8(*(_QWORD *)(v31 + 56) + v79 * v75, (uint64_t)v17);
      sub_239292F08((uint64_t)v17, (uint64_t)v15);
      if ((v154 & 1) != 0)
        break;
      v172.columns[0] = v153;
      v172.columns[1] = v152;
      v172.columns[2] = v151;
      v172.columns[3] = v150;
      v173 = __invert_f4(v172);
      v80 = (float32x2_t *)&v15[*(int *)(v47 + 36)];
      v81 = *(float32x4_t *)v80[2].f32;
      v82 = *(float32x4_t *)v80[4].f32;
      v83 = *(float32x4_t *)v80[6].f32;
      v159 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v173.columns[0], COERCE_FLOAT(*(_OWORD *)v80->f32)), (float32x4_t)v173.columns[1], *v80, 1), (float32x4_t)v173.columns[2], *(float32x4_t *)v80->f32, 2), (float32x4_t)v173.columns[3], *(float32x4_t *)v80->f32, 3);
      v158 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v173.columns[0], v81.f32[0]), (float32x4_t)v173.columns[1], *(float32x2_t *)v81.f32, 1), (float32x4_t)v173.columns[2], v81, 2), (float32x4_t)v173.columns[3], v81, 3);
      v157 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v173.columns[0], v82.f32[0]), (float32x4_t)v173.columns[1], *(float32x2_t *)v82.f32, 1), (float32x4_t)v173.columns[2], v82, 2), (float32x4_t)v173.columns[3], v82, 3);
      v156 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v173.columns[0], v83.f32[0]), (float32x4_t)v173.columns[1], *(float32x2_t *)v83.f32, 1), (float32x4_t)v173.columns[2], v83, 2), (float32x4_t)v173.columns[3], v83, 3);
      swift_retain();
      sub_239272FEC((uint64_t)v15, v159, v158, v157, v156);
      v85 = v84;
      swift_release();
      if (v85 > 0.0)
        break;
      result = sub_2392688AC((uint64_t)v15, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    }
    v86 = *v145;
    if (*(_QWORD *)(*v145 + 16) && (v87 = sub_239292F4C((uint64_t)v15), (v88 & 1) != 0))
    {
      v89 = v135;
      sub_2392751F8(*(_QWORD *)(v86 + 56) + v87 * v79, v135);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v155 + 56))(v89, 0, 1, v147);
      sub_23925FE28(v89, &qword_256928158);
    }
    else
    {
      v90 = v135;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(v135, 1, 1, v147);
      sub_23925FE28(v90, &qword_256928158);
      v91 = v130;
      v143(v130, v142, v18);
      v92 = v131;
      sub_2392751F8((uint64_t)v15, v131);
      v93 = sub_239352098();
      v94 = sub_239352578();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = swift_slowAlloc();
        v159.i64[0] = swift_slowAlloc();
        v168.i64[0] = v159.i64[0];
        *(_DWORD *)v95 = v128;
        *(_QWORD *)(v95 + 4) = sub_23925F3EC(0xD000000000000026, v127, (uint64_t *)&v168);
        *(_WORD *)(v95 + 12) = 2082;
        sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v158.i64[0] = (uint64_t)v93;
        v96 = v139;
        v97 = sub_2393528C0();
        *(_QWORD *)(v95 + 14) = sub_23925F3EC(v97, v98, (uint64_t *)&v168);
        swift_bridgeObjectRelease();
        sub_2392688AC(v92, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        v99 = (void *)v158.i64[0];
        _os_log_impl(&dword_23925B000, (os_log_t)v158.i64[0], v94, "MeshManager.%{private}s: Adding mesh anchor %{public}s without refinement", (uint8_t *)v95, 0x16u);
        v100 = v159.i64[0];
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v100, -1, -1);
        MEMORY[0x23B83BC04](v95, -1, -1);

        v141((uint64_t)v91, v144);
        goto LABEL_42;
      }
      sub_2392688AC(v92, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      v141((uint64_t)v91, v18);
    }
    v96 = v139;
LABEL_42:
    v101 = v138;
    v159.i64[0] = *(_QWORD *)(v138 + 16);
    v102 = (uint64_t)v136;
    ((void (*)(char *, char *, uint64_t))v159.i64[0])(v136, v15, v96);
    v103 = v96;
    v104 = v145;
    swift_beginAccess();
    v105 = v134;
    sub_2392751F8((uint64_t)v15, v134);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v160 = *v104;
    *v104 = 0x8000000000000000;
    sub_239293C84(v105, v102, isUniquelyReferenced_nonNull_native);
    *v104 = v160;
    swift_bridgeObjectRelease();
    v107 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
    v107(v102, v103);
    v108 = v137;
    ((void (*)(char *, char *, uint64_t))v159.i64[0])(v137, v15, v103);
    sub_239294364(v102, v108);
    v107(v102, v103);
    swift_endAccess();
    result = sub_2392688AC((uint64_t)v15, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v109 = __OFADD__(v146.i64[0]++, 1);
    v18 = v144;
    v31 = v140;
    v47 = v147;
    v17 = v132;
  }
  while (!v109);
  __break(1u);
LABEL_45:
  swift_release();
  v110 = v129;
  if (v56)
  {
    v111 = v125;
    v143(v125, v142, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v112 = sub_239352098();
    v113 = v31;
    v114 = sub_239352578();
    if (os_log_type_enabled(v112, v114))
    {
      v115 = swift_slowAlloc();
      v116 = swift_slowAlloc();
      v168.i64[0] = v116;
      *(_DWORD *)v115 = 136381187;
      v160 = sub_23925F3EC(0xD000000000000026, v123 | 0x8000000000000000, (uint64_t *)&v168);
      sub_2393526B0();
      *(_WORD *)(v115 + 12) = 2050;
      v160 = v146.i64[0];
      sub_2393526B0();
      *(_WORD *)(v115 + 22) = 2050;
      v160 = *(_QWORD *)(v113 + 16);
      v110 = v129;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v112, v114, "MeshManager.%{private}s: %{public}ld/%{public}ld mesh anchors intersect with bounding box.", (uint8_t *)v115, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v116, -1, -1);
      MEMORY[0x23B83BC04](v115, -1, -1);

      v117 = v125;
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v117 = v111;
    }
    v141((uint64_t)v117, v18);
  }
  v143(v110, v142, v18);
  v118 = sub_239352098();
  v119 = sub_239352578();
  if (os_log_type_enabled(v118, v119))
  {
    v120 = (uint8_t *)swift_slowAlloc();
    v121 = swift_slowAlloc();
    v168.i64[0] = v121;
    *(_DWORD *)v120 = 136380675;
    v160 = sub_23925F3EC(0xD000000000000026, v123 | 0x8000000000000000, (uint64_t *)&v168);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v118, v119, "MeshManager.%{private}s: Finished processing all updated mesh anchors.", v120, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v121, -1, -1);
    MEMORY[0x23B83BC04](v120, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
  return ((uint64_t (*)(char *, uint64_t))v141)(v110, v18);
}

uint64_t sub_239291850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t);
  void (*v21)(uint64_t);
  uint64_t v22;
  _BYTE v23[24];

  v1 = v0;
  v2 = sub_2393521F4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v23[-v7];
  v9 = sub_239352230();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(void **)(v1 + 40);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_239352254();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_2393521DC();
  v16 = sub_2393521D0();
  v17 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  swift_beginAccess();
  v18 = type metadata accessor for FreeformMeshManager.BackgroundData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, v17 + *(int *)(v18 + 52), v2);
  v19 = sub_2393521D0();
  v20 = *(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8);
  result = v20(v6, v2);
  if (v16 < v19)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (v16 - v19 >= 0x28FA6AE00)
  {
    v21 = *(void (**)(uint64_t))(**(_QWORD **)(v1 + 104) + 288);
    v22 = swift_retain();
    v21(v22);
    swift_release();
    swift_beginAccess();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 24))(v17 + *(int *)(v18 + 52), v8, v2);
    swift_endAccess();
  }
  return v20(v8, v2);
}

uint64_t sub_239291A60()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[10];
  char v8;

  sub_2392625B0(v0 + 16);

  swift_unknownObjectRelease();
  swift_release();
  sub_2392688AC(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData, type metadata accessor for FreeformMeshManager.BackgroundData);
  v1 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 144);
  v7[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 128);
  v7[9] = v1;
  v8 = *(_BYTE *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 160);
  v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 80);
  v7[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 64);
  v7[5] = v2;
  v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 112);
  v7[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 96);
  v7[7] = v3;
  v4 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 16);
  v7[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
  v7[1] = v4;
  v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 48);
  v7[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 32);
  v7[3] = v5;
  sub_239291D68((uint64_t)v7);
  return swift_deallocClassInstance();
}

uint64_t sub_239291B10(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_2569281D8);
  v10 = *(_QWORD *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23935283C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_239295578(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_239291D18(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_239291D40(uint64_t a1)
{
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_239291D68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for FreeformMeshManager(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692D060);
}

uint64_t sub_239291DC8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23928451C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_239291DF0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_239284EA8(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_239291E18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  *a1 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

float sub_239291E78@<S0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  const double *v5;
  float32x2_t v6;
  unint64_t v7;
  float32x2_t v8;
  float32x4_t v9;

  v3 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  if ((*(_BYTE *)(v3 + 48) & 1) != 0 || (*(_BYTE *)(v3 + 80) & 1) != 0)
  {
    LODWORD(v4) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_BYTE *)(a1 + 32) = 1;
  }
  else
  {
    v5 = (const double *)(v3 + 72);
    v6 = *(float32x2_t *)(v3 + 64);
    v7 = *(_QWORD *)(v3 + 40);
    v8 = *(float32x2_t *)(v3 + 32);
    v9 = (float32x4_t)vld1q_dup_f64(v5);
    *(float32x2_t *)&v4 = vsub_f32(v6, v8);
    *((_QWORD *)&v4 + 1) = vsubq_f32(v9, (float32x4_t)vdupq_n_s64(v7)).u32[2];
    *(float32x2_t *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = v4;
    *(_BYTE *)(a1 + 32) = 0;
  }
  return *(float *)&v4;
}

uint64_t sub_239291F38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_239291F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  simd_float4 v3;
  simd_float4 *v4;
  simd_float4 v5;
  simd_float4 v6;
  simd_float4 v7;
  CoreOC::OCBoundingBox v8;

  v1 = *(_QWORD *)(v0 + 80);
  result = sub_2392DF8CC(*(float32x4_t *)(v0 + 16), *(float32x4_t *)(v0 + 32), *(float32x4_t *)(v0 + 48), *(int8x16_t *)(v0 + 64));
  if ((result & 1) != 0)
  {
    OCBoundingBox.init(transform:)(&v8, (simd_float4x4 *)result);
    v6 = v8.transform.columns[1];
    v7 = v8.transform.columns[0];
    v5 = v8.transform.columns[2];
    v3 = v8.transform.columns[3];
    v4 = (simd_float4 *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
    result = swift_beginAccess();
    v4[6] = v7;
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v3;
    v4[10].i8[0] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_239292008()
{
  return swift_deallocObject();
}

uint64_t sub_239292018()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_239292038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_239292048()
{
  return swift_release();
}

uint64_t sub_239292050()
{
  uint64_t v0;

  return sub_239285760(v0);
}

uint64_t sub_239292058()
{
  return swift_deallocObject();
}

unint64_t sub_23929206C()
{
  unint64_t result;

  result = qword_256927E00;
  if (!qword_256927E00)
  {
    result = MEMORY[0x23B83BB44](&unk_239354CB4, &type metadata for FreeformMeshManager.ScanExtent);
    atomic_store(result, (unint64_t *)&qword_256927E00);
  }
  return result;
}

uint64_t sub_2392920B0()
{
  return type metadata accessor for FreeformMeshManager(0);
}

uint64_t sub_2392920B8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FreeformMeshManager.BackgroundData(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for FreeformMeshManager.Configuration()
{
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.Configuration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.Configuration()
{
  return &type metadata for FreeformMeshManager.Configuration;
}

__n128 initializeWithCopy for FreeformMeshManager.Extent(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.Extent(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.Extent(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.Extent()
{
  return &type metadata for FreeformMeshManager.Extent;
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.ScanExtent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_239292494 + 4 * byte_239354CA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2392924C8 + 4 * byte_239354CA0[v4]))();
}

uint64_t sub_2392924C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392924D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392924D8);
  return result;
}

uint64_t sub_2392924E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392924ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2392924F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392924F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.ScanExtent()
{
  return &type metadata for FreeformMeshManager.ScanExtent;
}

uint64_t destroy for FreeformMeshManager.MainQueueData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FreeformMeshManager.MainQueueData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FreeformMeshManager.MainQueueData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v6 = *(_OWORD *)(a2 + 112);
  v7 = *(_OWORD *)(a2 + 128);
  v8 = *(_OWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 112) = v6;
  return a1;
}

__n128 initializeWithTake for FreeformMeshManager.MainQueueData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for FreeformMeshManager.MainQueueData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.MainQueueData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 161))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.MainQueueData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 161) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 161) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.MainQueueData()
{
  return &type metadata for FreeformMeshManager.MainQueueData;
}

uint64_t sub_239292848(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = a2[3];
    v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    v8 = *((_OWORD *)a2 + 7);
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    *(_OWORD *)(a1 + 112) = v8;
    *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
    v9 = *(int *)(a3 + 52);
    v10 = (uint64_t)a2 + v9;
    v11 = a1 + v9;
    *(_QWORD *)(a1 + 136) = a2[17];
    v12 = sub_2393521F4();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v5;
}

uint64_t sub_239292958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_2393521F4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2392929B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  v7 = *(int *)(a3 + 52);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v10 = sub_2393521F4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_239292A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v8 = *(int *)(a3 + 52);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2393521F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_239292BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v6 = *(int *)(a3 + 52);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  v9 = sub_2393521F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_239292C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v6 = *(_QWORD *)(a2 + 136);
  v7 = *(int *)(a3 + 52);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 136) = v6;
  v10 = sub_2393521F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v9, v8, v10);
  return a1;
}

uint64_t sub_239292D54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_239292D60(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2393521F4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 52)], a2, v8);
  }
}

uint64_t sub_239292DDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_239292DE8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2393521F4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 52)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_239292E5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2393521F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_239292F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_239292F4C(uint64_t a1)
{
  uint64_t v2;

  sub_239352020();
  sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_239352290();
  return sub_239292FB8(a1, v2);
}

unint64_t sub_239292FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_239352020();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_239262570(&qword_256928170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_2393522B4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_2392930F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_239292F4C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_239293EB4();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_239352020();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_239292F08(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_2392939B0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_23929322C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239352020();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  sub_23925FB08((uint64_t *)&unk_256928180);
  v48 = a2;
  v12 = v11;
  v13 = sub_23935286C();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v45 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v2;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v44)
              goto LABEL_34;
            v27 = v45[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v12 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_239292F08(v31 + v32 * v24, v49);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_2392751F8(v33 + v32 * v24, v49);
    }
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v10, v7);
    result = sub_239292F08(v49, *(_QWORD *)(v14 + 56) + v32 * v22);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v14;
  return result;
}

uint64_t sub_239293620(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v4 = sub_239352020();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v2;
  v8 = *v2;
  sub_23925FB08(&qword_2569281D0);
  v9 = sub_23935286C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v35 = v39;
LABEL_42:
    *v35 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v38 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v42 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v22 >= v40)
    {
      swift_release();
      v35 = v39;
      v23 = v41;
      if ((v38 & 1) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v8 + 32);
        if (v36 >= 64)
          bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v36;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
        break;
    }
LABEL_23:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v42))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v4);
    v27 = *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v21);
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v4);
    *(_DWORD *)(*(_QWORD *)(v10 + 56) + 4 * v19) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  v25 = v22 + 2;
  if (v25 >= v40)
  {
LABEL_34:
    swift_release();
    v35 = v39;
    if ((v38 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v24 = v41[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v40)
      goto LABEL_34;
    v24 = v41[v17];
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

unint64_t sub_2392939B0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_239352020();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_239352740();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_239352290();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_239293C84(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_239352020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_239292F4C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
        return sub_23929507C(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_239293EB4();
      goto LABEL_7;
    }
    sub_23929322C(v17, a3 & 1);
    v24 = sub_239292F4C(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_239293E04(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_239293E04(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_239352020();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  result = sub_239292F08(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

void *sub_239293EB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  v1 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_239352020();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08((uint64_t *)&unk_256928180);
  v24 = v0;
  v8 = *v0;
  v9 = sub_239352860();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v24 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v25 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v26 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v19, v4);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_2392751F8(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v19, v7, v4);
    result = (void *)sub_239292F08((uint64_t)v3, *(_QWORD *)(v10 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_239294130()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_239352020();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_2569281D0);
  v6 = *v0;
  v7 = sub_239352860();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 4 * v18;
    v21 = *(_DWORD *)(*(_QWORD *)(v6 + 56) + v20);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    *(_DWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_239294364(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_239352020();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_239262570(&qword_256928168, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_239352290();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_239262570(&qword_256928170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_2393522B4();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23929492C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_2392945C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_239352020();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23925FB08(&qword_256928178);
  v6 = sub_2393527A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_239352290();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23929492C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_239352020();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2392945C0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_239294B30();
      goto LABEL_12;
    }
    sub_239294D54();
  }
  v12 = *v3;
  sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v13 = sub_239352290();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_239262570(&qword_256928170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_2393522B4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2393528FC();
  __break(1u);
  return result;
}

void *sub_239294B30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_239352020();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_256928178);
  v6 = *v0;
  v7 = sub_239352794();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_239294D54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_239352020();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_23925FB08(&qword_256928178);
  v7 = sub_2393527A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23929507C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392950C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_239352020();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_239262570(&qword_256928168, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_239352290();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_239262570(&qword_256928170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_2393522B4();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_239294B30();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_2392952FC(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_2392952FC(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_239352020();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_239352740();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_239352290();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

uint64_t sub_239295578(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_239295690()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_2392956C4()
{
  uint64_t v0;

  sub_23928676C((uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 104));
}

uint64_t sub_2392956D0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_239295704()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  v2 = *v1;
  v3 = v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *((_BYTE *)v1 + 96);
  *(_OWORD *)(v3 + 32) = *((_OWORD *)v1 + 5);
  *(_BYTE *)(v3 + 48) = v4;
  v5 = *((_BYTE *)v1 + 128);
  *(_OWORD *)(v3 + 64) = *((_OWORD *)v1 + 7);
  *(_BYTE *)(v3 + 80) = v5;
  *(_QWORD *)(v3 + 24) = v1[2];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 88) = v1[17];
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    goto LABEL_5;
  }
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount) = v9;
  if (v9)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_2392957F4()
{
  return swift_deallocObject();
}

__n128 initializeWithCopy for FreeformMeshManager.MeshRefinementParameters(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.MeshRefinementParameters(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[41])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.MeshRefinementParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.MeshRefinementParameters()
{
  return &type metadata for FreeformMeshManager.MeshRefinementParameters;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.MeshRefinementType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.MeshRefinementType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2392959A8 + 4 * byte_239354CAF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2392959DC + 4 * byte_239354CAA[v4]))();
}

uint64_t sub_2392959DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392959E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392959ECLL);
  return result;
}

uint64_t sub_2392959F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x239295A00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_239295A04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_239295A0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.MeshRefinementType()
{
  return &type metadata for FreeformMeshManager.MeshRefinementType;
}

unint64_t sub_239295A2C()
{
  unint64_t result;

  result = qword_25692D100[0];
  if (!qword_25692D100[0])
  {
    result = MEMORY[0x23B83BB44](&unk_239354F5C, &type metadata for FreeformMeshManager.MeshRefinementType);
    atomic_store(result, qword_25692D100);
  }
  return result;
}

uint64_t sub_239295A90(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_239295AD8(a1, a2);
}

uint64_t sub_239295AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void **v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  const __CFDictionary *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  const __CFDictionary *v32;
  uint64_t result;
  __CVPixelBufferPool *v34;
  CVPixelBufferPoolRef v35[2];

  v3 = v2;
  v35[1] = *(CVPixelBufferPoolRef *)MEMORY[0x24BDAC8D0];
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_23925FB08(&qword_256928270);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_239354F90;
  v7 = (void *)*MEMORY[0x24BDC56B8];
  type metadata accessor for CFString(0);
  v9 = v8;
  *(_QWORD *)(v6 + 56) = v8;
  *(_QWORD *)(v6 + 32) = v7;
  v10 = MEMORY[0x24BEE44F0];
  *(_DWORD *)(v6 + 64) = 1717855600;
  v11 = (void *)*MEMORY[0x24BDC5708];
  *(_QWORD *)(v6 + 88) = v10;
  *(_QWORD *)(v6 + 96) = v11;
  v12 = MEMORY[0x24BEE1E88];
  v13 = (void **)MEMORY[0x24BDC5650];
  *(_QWORD *)(v6 + 120) = v8;
  *(_QWORD *)(v6 + 128) = a1;
  v14 = *v13;
  *(_QWORD *)(v6 + 152) = v12;
  *(_QWORD *)(v6 + 160) = v14;
  *(_QWORD *)(v6 + 184) = v8;
  *(_QWORD *)(v6 + 192) = a2;
  v15 = (void *)*MEMORY[0x24BDC5788];
  *(_QWORD *)(v6 + 248) = v8;
  *(_QWORD *)(v6 + 216) = v12;
  *(_QWORD *)(v6 + 224) = v15;
  v16 = MEMORY[0x24BEE1328];
  *(_BYTE *)(v6 + 256) = 1;
  v17 = (void *)*MEMORY[0x24BDC5668];
  *(_QWORD *)(v6 + 312) = v8;
  *(_QWORD *)(v6 + 280) = v16;
  *(_QWORD *)(v6 + 288) = v17;
  v18 = objc_allocWithZone(MEMORY[0x24BDBCE70]);
  v19 = v7;
  v20 = v11;
  v21 = v14;
  v22 = v15;
  v23 = v17;
  v24 = objc_msgSend(v18, sel_init);
  *(_QWORD *)(v6 + 344) = sub_239295D5C();
  *(_QWORD *)(v6 + 320) = v24;
  v25 = (const __CFDictionary *)sub_239352548();
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_2393548B0;
  v27 = (void *)*MEMORY[0x24BDC56F0];
  v28 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v26 + 32) = *MEMORY[0x24BDC56F0];
  *(_QWORD *)(v26 + 56) = v9;
  *(_QWORD *)(v26 + 64) = 1;
  v29 = (void *)*MEMORY[0x24BDC56D0];
  *(_QWORD *)(v26 + 88) = v28;
  *(_QWORD *)(v26 + 96) = v29;
  *(_QWORD *)(v26 + 152) = v28;
  *(_QWORD *)(v26 + 120) = v9;
  *(_QWORD *)(v26 + 128) = 3;
  v30 = v27;
  v31 = v29;
  v32 = (const __CFDictionary *)sub_239352548();
  v35[0] = 0;
  result = CVPixelBufferPoolCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], v32, v25, v35);
  if ((_DWORD)result)
  {

    type metadata accessor for ImageFilter();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (v35[0])
  {
    v34 = v35[0];

    *(_QWORD *)(v3 + 32) = v34;
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_239295D5C()
{
  unint64_t result;

  result = qword_256928278;
  if (!qword_256928278)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256928278);
  }
  return result;
}

uint64_t type metadata accessor for ImageFilter()
{
  return objc_opt_self();
}

uint64_t sub_239295DB8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_239295DDC()
{
  swift_allocObject();
  return sub_239295E14();
}

uint64_t sub_239295E14()
{
  uint64_t result;

  swift_retain();
  result = OCImageFilterBilateralCreate();
  if ((_DWORD)result)
  {
    swift_release();
    type metadata accessor for BilateralImageFilter();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_239295EE0()
{
  uint64_t v0;
  uint64_t result;

  result = OCImageFilterDestroy();
  if ((_DWORD)result)
  {
    __break(1u);
  }
  else
  {

    return swift_deallocClassInstance();
  }
  return result;
}

BOOL sub_239295F14()
{
  return OCImageFilterStart() == 0;
}

BOOL sub_239295F34()
{
  return OCImageFilterStop() == 0;
}

CVPixelBufferRef sub_239295F54()
{
  uint64_t v0;
  CVReturn PixelBuffer;
  CVPixelBufferRef v2;
  CVPixelBufferRef v4[2];

  v4[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  PixelBuffer = CVPixelBufferPoolCreatePixelBuffer((CFAllocatorRef)*MEMORY[0x24BDBD240], *(CVPixelBufferPoolRef *)(v0 + 32), v4);
  v2 = v4[0];
  if (PixelBuffer || OCImageFilterApplyFilter())
  {

    return 0;
  }
  return v2;
}

void sub_239295FF0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

CVPixelBufferRef sub_23929601C()
{
  uint64_t v0;
  CVReturn PixelBuffer;
  CVPixelBufferRef v2;
  CVPixelBufferRef v4[2];

  v4[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  PixelBuffer = CVPixelBufferPoolCreatePixelBuffer((CFAllocatorRef)*MEMORY[0x24BDBD240], *(CVPixelBufferPoolRef *)(v0 + 32), v4);
  v2 = v4[0];
  if (PixelBuffer || OCImageFilterApplyCrossBilateralFilter())
  {

    return 0;
  }
  return v2;
}

uint64_t type metadata accessor for BilateralImageFilter()
{
  return objc_opt_self();
}

__n128 initializeWithCopy for BilateralImageFilter.BilateralImageFilterConfig(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for BilateralImageFilter.BilateralImageFilterConfig(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BilateralImageFilter.BilateralImageFilterConfig(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BilateralImageFilter.BilateralImageFilterConfig()
{
  return &type metadata for BilateralImageFilter.BilateralImageFilterConfig;
}

uint64_t type metadata accessor for CrossBilateralImageFilter()
{
  return objc_opt_self();
}

void type metadata accessor for OCImageFilterType(uint64_t a1)
{
  sub_239263BFC(a1, &qword_2569284E8);
}

uint64_t sub_23929618C()
{
  uint64_t result;

  result = sub_239296378((uint64_t)&unk_250AC4960);
  qword_25692D218 = result;
  return result;
}

BOOL sub_2392961B0(CVPixelBufferRef pixelBuffer)
{
  uint64_t v2;
  OSType PixelFormatType;

  if (qword_25692D210 != -1)
    swift_once();
  v2 = qword_25692D218;
  PixelFormatType = CVPixelBufferGetPixelFormatType(pixelBuffer);
  return sub_239296208(PixelFormatType, v2);
}

BOOL sub_239296208(unsigned int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = MEMORY[0x23B83A80C](*(_QWORD *)(a2 + 40), a1, 4);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_2392962D4(__CVBuffer *a1)
{
  return CVPixelBufferGetPixelFormatType(a1) == 1751410032
      || CVPixelBufferGetPixelFormatType(a1) == 1717855600
      || CVPixelBufferGetPixelFormatType(a1) == 1751411059
      || CVPixelBufferGetPixelFormatType(a1) == 1717856627;
}

BOOL sub_239296354(__CVBuffer *a1)
{
  return CVPixelBufferGetPixelFormatType(a1) == 1278226488;
}

uint64_t sub_239296378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_2569284F0);
    v3 = sub_2393527AC();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = *(_QWORD *)(v3 + 40);
    v8 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v9 = *(_DWORD *)(v6 + 4 * v4);
      result = MEMORY[0x23B83A80C](v7, v9, 4);
      v11 = result & v8;
      v12 = (result & (unint64_t)v8) >> 6;
      v13 = *(_QWORD *)(v5 + 8 * v12);
      v14 = 1 << (result & v8);
      v15 = *(_QWORD *)(v3 + 48);
      if ((v14 & v13) != 0)
      {
        while (*(_DWORD *)(v15 + 4 * v11) != v9)
        {
          v11 = (v11 + 1) & v8;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
        *(_DWORD *)(v15 + 4 * v11) = v9;
        v16 = *(_QWORD *)(v3 + 16);
        v17 = __OFADD__(v16, 1);
        v18 = v16 + 1;
        if (v17)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v18;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_239296498()
{
  return 0;
}

double sub_2392964A8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0x3FE0000000000000;
  result = 3.80295244e30;
  *(_OWORD *)(a1 + 8) = xmmword_239355060;
  return result;
}

uint64_t sub_2392964C0(float *a1)
{
  swift_allocObject();
  return sub_2392964F8(a1);
}

uint64_t sub_2392964F8(float *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v16 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + 48) = 0;
  v8 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 134350080;
    *(_QWORD *)&v13 = *(_QWORD *)a1;
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 2050;
    *(double *)&v13 = a1[2];
    sub_2393526B0();
    *(_WORD *)(v11 + 22) = 2050;
    *(double *)&v13 = a1[3];
    sub_2393526B0();
    *(_WORD *)(v11 + 32) = 2050;
    *(double *)&v13 = a1[4];
    sub_2393526B0();
    *(_WORD *)(v11 + 42) = 2050;
    *(double *)&v13 = a1[5];
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ExplicitFeedbackManager: ExplicitFeedback Configuration: motionTimeWindow %{public}f, isoThresholdLowLight %{public}f, isoThresholdTooDark %{public}f, ratioObjectInFOVThreshold %{public}f, tooFarRatioBoxAreaToImgArea %{public}f", (uint8_t *)v11, 0x34u);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = 0;
  v13 = *(_OWORD *)a1;
  v14 = *((_QWORD *)a1 + 2);
  result = OCExplicitFeedbackCreate();
  if ((_DWORD)result)
  {
    type metadata accessor for ExplicitFeedbackManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 32) = *((_QWORD *)a1 + 2);
  if (v15)
  {
    *(_QWORD *)(v2 + 40) = v15;
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_239296764()
{
  uint64_t result;

  result = OCExplicitFeedbackDestroy();
  if (!(_DWORD)result)
    return swift_deallocClassInstance();
  __break(1u);
  return result;
}

uint64_t sub_239296790()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 48) & 1) != 0)
    return 1;
  if (OCExplicitFeedbackStart())
    return 0;
  result = 1;
  *(_BYTE *)(v0 + 48) = 1;
  return result;
}

uint64_t sub_2392967D4()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 48) == 1)
  {
    if (OCExplicitFeedbackStop())
      return 0;
    *(_BYTE *)(v0 + 48) = 0;
  }
  return 1;
}

uint64_t sub_239296810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int16x8_t v11;
  double v13;
  double v14;
  uint64_t Size;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  __int128 v23;
  char v24;
  __int128 v25;
  char v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(v6 + 48) != 1)
    return 0;
  sub_239296E08(a4, (uint64_t)&v25);
  if ((v26 & 1) != 0
    || (sub_239296E08(a5, (uint64_t)&v23), v24 == 1)
    || !a2
    || (sub_239296E08(a3, (uint64_t)&v21), (v22 & 1) != 0))
  {
    if (OCExplicitFeedbackProcess())
      return 0;
  }
  else
  {
    sub_239296FB8((uint64_t)&unk_250AC4990);
    v14 = v13;
    swift_retain();
    Size = OCDataBufferGetSize();
    v16 = (_QWORD *)sub_239296C1C(Size, v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_239296CFC(0, v16[2], 0, v16);
    v17 = OCExplicitFeedbackProcess();
    sub_2393528D8();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v18 = swift_dynamicCastClass();
    if (!v18)
    {
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x24BEE4AF8];
    }
    v19 = *(_QWORD *)(v18 + 16);
    swift_release();
    if (v19)
    {
      swift_bridgeObjectRelease();
      v20 = sub_239296E50((uint64_t)v16, (uint64_t)(v16 + 4), 0, 1uLL);
      swift_release();
    }
    else
    {
      v20 = swift_dynamicCastClass();
      swift_release();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        v20 = MEMORY[0x24BEE4AF8];
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a6 + 8) = v20;
    if (v17)
      return 0;
  }
  *(_BYTE *)a6 = 0;
  v11.i64[0] = *(_QWORD *)&vshl_u16((uint16x4_t)vdup_n_s16(0), (uint16x4_t)0xFFFDFFFEFFFBFFFFLL) & 0xFF01FF01FF01FF01;
  *(_DWORD *)(a6 + 1) = vmovn_s16(v11).u32[0];
  *(_BYTE *)(a6 + 5) = 0;
  return 1;
}

uint64_t sub_239296C1C(uint64_t a1, double a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    result = sub_23935283C();
    __break(1u);
  }
  else if (a1)
  {
    sub_23925FB08(&qword_2569285E8);
    result = sub_239352488();
    v5 = 0;
    *(_QWORD *)(result + 16) = a1;
    do
    {
      v6 = result + 8 * v5++;
      *(double *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t type metadata accessor for ExplicitFeedbackManager()
{
  return objc_opt_self();
}

_QWORD *sub_239296CFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_2569285E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23926170C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_239296E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_25692A8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_239296E50(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 8 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_23925FB08(&qword_2569285E0);
      v9 = (char *)swift_allocObject();
      v10 = j__malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_239296FB8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = 0;
    v3 = 2;
    if ((unint64_t)(v1 - 1) < 2)
      v3 = v1 - 1;
    v4 = 0;
    do
    {
      if ((unint64_t)(v1 - 1) > 1)
      {
        __break(1u);
        goto LABEL_10;
      }
      v5 = *(_DWORD *)(result + 32 + 4 * v2);
      v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v2 & 1))) = v5;
      v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (!v3)
      goto LABEL_10;
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t destroy for ExplicitFeedbackInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s6CoreOC20ExplicitFeedbackInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExplicitFeedbackInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExplicitFeedbackInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplicitFeedbackInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplicitFeedbackInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplicitFeedbackInfo()
{
  return &type metadata for ExplicitFeedbackInfo;
}

void type metadata accessor for OCExplicitFeedbackConfig(uint64_t a1)
{
  sub_239263BFC(a1, &qword_2569285D8);
}

void sub_2392971DC()
{
  byte_25692D228 = 1;
  qword_25692D230 = 0xE100000000000000;
}

void sub_2392971F8()
{
  byte_25692D240 = 1;
  qword_25692D248 = 0xE100000000000000;
}

void sub_239297214()
{
  byte_25692D258 = 1;
  qword_25692D260 = 0xE100000000000000;
}

_OWORD *sub_239297230@<X0>(_OWORD *result@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>, __n128 a6@<Q3>, double a7@<D4>)
{
  __int128 v7;
  __int128 v8;

  v7 = result[1];
  v8 = result[2];
  *(_OWORD *)a2 = *result;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v8;
  *(__n128 *)(a2 + 48) = a3;
  *(__n128 *)(a2 + 64) = a4;
  *(__n128 *)(a2 + 80) = a5;
  *(__n128 *)(a2 + 96) = a6;
  *(double *)(a2 + 112) = a7;
  return result;
}

unint64_t sub_239297250()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  _OWORD v19[4];

  sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2393541C0;
  if (qword_25692D220 != -1)
    swift_once();
  v2 = 48;
  if (!byte_25692D228)
    v2 = 0;
  v3 = qword_25692D230;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v19[0] = *(_OWORD *)v0;
  v19[1] = v4;
  v19[2] = *(_OWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_2392DEB84((uint64_t)v19);
  v6 = v5;
  v7 = sub_23925FB08((uint64_t *)&unk_25692BD10);
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 48) = v6;
  if (qword_25692D238 != -1)
    swift_once();
  v8 = 49;
  if (!byte_25692D240)
    v8 = 0;
  v9 = qword_25692D248;
  *(_QWORD *)(inited + 80) = v8;
  *(_QWORD *)(inited + 88) = v9;
  v17 = *(int8x16_t *)(v0 + 64);
  v18 = *(int8x16_t *)(v0 + 48);
  v15 = *(int8x16_t *)(v0 + 96);
  v16 = *(int8x16_t *)(v0 + 80);
  swift_bridgeObjectRetain();
  sub_2392DEC48(v18, v17, v16, v15);
  *(_QWORD *)(inited + 120) = v7;
  *(_QWORD *)(inited + 96) = v10;
  if (qword_25692D250 != -1)
    swift_once();
  v11 = 50;
  v12 = qword_25692D260;
  if (!byte_25692D258)
    v11 = 0;
  *(_QWORD *)(inited + 128) = v11;
  *(_QWORD *)(inited + 136) = v12;
  sub_23925FB08(&qword_2569285F8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(inited + 168) = sub_23925FB08(&qword_256928600);
  *(_QWORD *)(inited + 144) = v13;
  swift_bridgeObjectRetain();
  return sub_23925DBD8(inited);
}

void sub_239297430()
{
  byte_25692D270 = 1;
  qword_25692D278 = 0xE100000000000000;
}

double sub_23929744C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 16);
}

uint64_t sub_23929747C(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_2392974B8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_2392974F4()
{
  byte_25692D288 = 1;
  qword_25692D290 = 0xE100000000000000;
}

id sub_239297510()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 24);
}

void sub_239297540(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

void sub_239297584()
{
  byte_25692D2A0 = 1;
  qword_25692D2A8 = 0xE100000000000000;
}

__n128 sub_2392975A0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  swift_beginAccess();
  result = *(__n128 *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  v5 = *(_OWORD *)(v1 + 64);
  v6 = *(_OWORD *)(v1 + 80);
  v7 = *(_OWORD *)(v1 + 96);
  v8 = *(_OWORD *)(v1 + 112);
  v9 = *(_OWORD *)(v1 + 128);
  v10 = *(_QWORD *)(v1 + 144);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  return result;
}

__n128 sub_239297600(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  swift_beginAccess();
  v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 112) = v3;
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 96);
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 112);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  result = *(__n128 *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v1 + 64) = result;
  *(_OWORD *)(v1 + 80) = v6;
  return result;
}

uint64_t (*sub_239297660())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

__n128 sub_23929769C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;

  v6 = swift_allocObject();
  *(double *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v6 + 112) = v7;
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(v6 + 144) = *(_QWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 48) = v8;
  result = *(__n128 *)(a2 + 32);
  v10 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(v6 + 64) = result;
  *(_OWORD *)(v6 + 80) = v10;
  return result;
}

void sub_239297710(uint64_t a1)
{
  swift_allocObject();
  sub_239297748(a1);
}

void sub_239297748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  void *DepthPointCloudDataBuffer;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37[16];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25692D268 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_3;
LABEL_33:
    v38 = 0u;
    v39 = 0u;
    goto LABEL_34;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_33;
LABEL_3:
  v8 = qword_25692D278;
  if (byte_25692D270)
    v9 = 48;
  else
    v9 = 0;
  swift_bridgeObjectRetain();
  v10 = sub_23925FAA4(v9, v8);
  if ((v11 & 1) == 0)
  {
    v38 = 0u;
    v39 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    sub_239298780((uint64_t)&v38);
    goto LABEL_36;
  }
  sub_2392987E0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  v12 = (void *)v37[0];
  if (qword_25692D280 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_11;
LABEL_40:
    v38 = 0u;
    v39 = 0u;

    goto LABEL_34;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_40;
LABEL_11:
  v13 = qword_25692D290;
  if (byte_25692D288)
    v14 = 49;
  else
    v14 = 0;
  swift_bridgeObjectRetain();
  v15 = sub_23925FAA4(v14, v13);
  if ((v16 & 1) != 0)
  {
    sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {

    goto LABEL_34;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_29;
  }
  v18 = v37[0];
  v17 = v37[1];
  if (qword_25692D298 != -1)
  {
    swift_once();
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_22;
LABEL_42:
    v38 = 0u;
    v39 = 0u;
    goto LABEL_43;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_42;
LABEL_22:
  v35 = v18;
  v36 = v17;
  v19 = v12;
  v20 = qword_25692D2A8;
  if (byte_25692D2A0)
    v21 = 50;
  else
    v21 = 0;
  swift_bridgeObjectRetain();
  v22 = sub_23925FAA4(v21, v20);
  if ((v23 & 1) != 0)
  {
    sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v22, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  v12 = v19;
  v18 = v35;
  v17 = v36;
LABEL_43:
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {

    sub_23927DAE0(v18, v17);
    goto LABEL_35;
  }
  sub_23925FB08(&qword_256927010);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_239297FDC(v37[0], (uint64_t)v37);
    sub_239298738((uint64_t)v37, (uint64_t)&v38);
    if (sub_23929881C((uint64_t)&v38) != 1)
    {
      v50 = v42;
      v51 = v43;
      v52 = v44;
      v53 = v45;
      v46 = v38;
      v47 = v39;
      v48 = v40;
      v49 = v41;
      objc_msgSend(v12, sel_doubleValue);
      *(_QWORD *)(v2 + 16) = v28;
      v29 = (void *)sub_239351F60();
      DepthPointCloudDataBuffer = (void *)OCNonModularSPI_NSData_CreateDepthPointCloudDataBuffer();

      if (DepthPointCloudDataBuffer)
      {
        v31 = DepthPointCloudDataBuffer;

        sub_23927DAE0(v18, v17);
        *(_QWORD *)(v2 + 24) = v31;
        v32 = v51;
        *(_OWORD *)(v2 + 96) = v50;
        *(_OWORD *)(v2 + 112) = v32;
        *(_OWORD *)(v2 + 128) = v52;
        *(_QWORD *)(v2 + 144) = v53;
        v33 = v47;
        *(_OWORD *)(v2 + 32) = v46;
        *(_OWORD *)(v2 + 48) = v33;
        v34 = v49;
        *(_OWORD *)(v2 + 64) = v48;
        *(_OWORD *)(v2 + 80) = v34;
      }
      else
      {
        __break(1u);
      }
      return;
    }
    sub_23927DAE0(v18, v17);

  }
  else
  {

    sub_23927DAE0(v18, v17);
  }
LABEL_36:
  v24 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
  v25 = sub_239352098();
  v26 = sub_23935256C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_23925B000, v25, v26, "Temporal pointcloud: Failed to initialize temporal LiDAR point cloud data from dictionary!", v27, 2u);
    MEMORY[0x23B83BC04](v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for TemporalDepthPointCloud();
  swift_deallocPartialClassInstance();
}

unint64_t sub_239297C40()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  double (*v9)(uint64_t);
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[16];

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
  v2 = (id)OCNonModularSPI_Serialization_CVBufferToData();

  if (!v2)
    return 0;
  v3 = sub_239351F6C();
  v5 = v4;

  sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2393541C0;
  if (qword_25692D268 != -1)
    swift_once();
  v7 = 48;
  if (!byte_25692D270)
    v7 = 0;
  v8 = qword_25692D278;
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = v8;
  v9 = *(double (**)(uint64_t))(*(_QWORD *)v0 + 104);
  v10 = swift_bridgeObjectRetain();
  v11 = v9(v10);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE13C8];
  *(double *)(inited + 48) = v11;
  if (qword_25692D280 != -1)
    swift_once();
  v12 = 49;
  if (!byte_25692D288)
    v12 = 0;
  v13 = qword_25692D290;
  *(_QWORD *)(inited + 80) = v12;
  *(_QWORD *)(inited + 88) = v13;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(inited + 96) = v3;
  *(_QWORD *)(inited + 104) = v5;
  swift_bridgeObjectRetain();
  sub_23927DB24(v3, v5);
  if (qword_25692D298 != -1)
    swift_once();
  v14 = 50;
  if (!byte_25692D2A0)
    v14 = 0;
  v15 = qword_25692D2A8;
  *(_QWORD *)(inited + 128) = v14;
  *(_QWORD *)(inited + 136) = v15;
  v16 = *(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v0 + 152);
  v17 = swift_bridgeObjectRetain();
  v16(v21, v17);
  v18 = sub_239297250();
  *(_QWORD *)(inited + 168) = sub_23925FB08(&qword_256927010);
  *(_QWORD *)(inited + 144) = v18;
  v19 = sub_23925DBD8(inited);
  sub_23927DAE0(v3, v5);
  return v19;
}

uint64_t sub_239297E40()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_239297E64(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_239297E80(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_239297E80(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23925FB08(&qword_25692B790);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_239352884();
  __break(1u);
  return result;
}

void sub_239297FDC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  int v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  int v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  id v57;
  void *v58;
  unsigned int v59;
  id v60;
  void *v61;
  unsigned int v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __n128 v67;
  __n128 v68;
  uint64_t v69;
  __n128 v70;
  _OWORD v71[7];
  unint64_t v72;
  __n128 v73[3];
  __int128 v74;
  __int128 v75;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25692D220 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_3;
LABEL_32:
    v74 = 0u;
    v75 = 0u;
    goto LABEL_33;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_32;
LABEL_3:
  v8 = qword_25692D230;
  if (byte_25692D228)
    v9 = 48;
  else
    v9 = 0;
  swift_bridgeObjectRetain();
  v10 = sub_23925FAA4(v9, v8);
  if ((v11 & 1) == 0)
  {
    v74 = 0u;
    v75 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v74);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v75 + 1))
  {
LABEL_33:
    swift_bridgeObjectRelease();
    sub_239298780((uint64_t)&v74);
    goto LABEL_34;
  }
  sub_23925FB08(&qword_256928718);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_34:
    v23 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
    v24 = sub_239352098();
    v25 = sub_23935256C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23925B000, v24, v25, "Temporal pointcloud: Failed to initialize LiDAR point cloud camera from dictionary!", v26, 2u);
      MEMORY[0x23B83BC04](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2392988DC((uint64_t)v71);
    goto LABEL_37;
  }
  v12 = *(_QWORD *)&v71[0];
  if (qword_25692D238 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_11;
LABEL_39:
    v74 = 0u;
    v75 = 0u;
LABEL_40:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_39;
LABEL_11:
  v70.n128_u64[0] = v12;
  v13 = qword_25692D248;
  if (byte_25692D240)
    v14 = 49;
  else
    v14 = 0;
  swift_bridgeObjectRetain();
  v15 = sub_23925FAA4(v14, v13);
  if ((v16 & 1) != 0)
  {
    sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v74);
  }
  else
  {
    v74 = 0u;
    v75 = 0u;
  }
  v17 = v70.n128_u64[0];
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v75 + 1))
    goto LABEL_40;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v18 = *(_QWORD *)&v71[0];
  if (qword_25692D250 != -1)
  {
    swift_once();
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_22;
LABEL_42:
    v74 = 0u;
    v75 = 0u;
    goto LABEL_43;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_42;
LABEL_22:
  v69 = v18;
  v19 = qword_25692D260;
  if (byte_25692D258)
    v20 = 50;
  else
    v20 = 0;
  swift_bridgeObjectRetain();
  v21 = sub_23925FAA4(v20, v19);
  if ((v22 & 1) != 0)
  {
    sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v74);
  }
  else
  {
    v74 = 0u;
    v75 = 0u;
  }
  swift_bridgeObjectRelease();
  v18 = v69;
  v17 = v70.n128_u64[0];
LABEL_43:
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v75 + 1))
    goto LABEL_40;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_27;
  v69 = *(_QWORD *)&v71[0];
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_239352854();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v28 = MEMORY[0x24BEE4AF8];
  if (v27)
  {
    *(_QWORD *)&v74 = MEMORY[0x24BEE4AF8];
    sub_239297E64(0, v27 & ~(v27 >> 63), 0);
    if (v27 < 0)
    {
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    v29 = 0;
    v30 = v74;
    v31 = v17 & 0xC000000000000001;
    do
    {
      if (v31)
        v32 = (id)MEMORY[0x23B83A68C](v29, v17);
      else
        v32 = *(id *)(v17 + 8 * v29 + 32);
      v33 = v32;
      objc_msgSend(v32, sel_floatValue);
      v35 = v34;

      *(_QWORD *)&v74 = v30;
      v37 = *(_QWORD *)(v30 + 16);
      v36 = *(_QWORD *)(v30 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_239297E64(v36 > 1, v37 + 1, 1);
        v30 = v74;
      }
      ++v29;
      *(_QWORD *)(v30 + 16) = v37 + 1;
      *(_DWORD *)(v30 + 4 * v37 + 32) = v35;
      v17 = v70.n128_u64[0];
    }
    while (v27 != v29);
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x24BEE4AF8];
  }
  sub_2392DEBF4(v30, v73, v38, v39, v40);
  v70 = v73[0];
  v67 = v73[2];
  v68 = v73[1];
  swift_bridgeObjectRelease();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v41 = sub_239352854();
    swift_bridgeObjectRelease();
    if (v41)
      goto LABEL_62;
LABEL_73:
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x24BEE4AF8];
    goto LABEL_74;
  }
  v41 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v41)
    goto LABEL_73;
LABEL_62:
  *(_QWORD *)&v74 = v28;
  sub_239297E64(0, v41 & ~(v41 >> 63), 0);
  if (v41 < 0)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v42 = 0;
  v43 = v74;
  v44 = v18;
  v45 = v18 & 0xC000000000000001;
  do
  {
    if (v45)
      v46 = (id)MEMORY[0x23B83A68C](v42, v44);
    else
      v46 = *(id *)(v44 + 8 * v42 + 32);
    v47 = v46;
    objc_msgSend(v46, sel_floatValue);
    v49 = v48;

    *(_QWORD *)&v74 = v43;
    v51 = *(_QWORD *)(v43 + 16);
    v50 = *(_QWORD *)(v43 + 24);
    if (v51 >= v50 >> 1)
    {
      sub_239297E64(v50 > 1, v51 + 1, 1);
      v43 = v74;
    }
    ++v42;
    *(_QWORD *)(v43 + 16) = v51 + 1;
    *(_DWORD *)(v43 + 4 * v51 + 32) = v49;
  }
  while (v41 != v42);
  swift_bridgeObjectRelease();
LABEL_74:
  sub_2392DED00(v43);
  v65 = v53;
  v66 = v52;
  v63 = v55;
  v64 = v54;
  swift_bridgeObjectRelease();
  v56 = v69;
  if ((v69 & 0xC000000000000001) != 0)
  {
    v57 = (id)MEMORY[0x23B83A68C](0, v69);
    goto LABEL_77;
  }
  if (!*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_84;
  }
  v57 = *(id *)(v69 + 32);
LABEL_77:
  v58 = v57;
  v59 = objc_msgSend(v57, sel_unsignedIntValue);

  if ((v56 & 0xC000000000000001) != 0)
  {
    v60 = (id)MEMORY[0x23B83A68C](1, v56);
LABEL_81:
    v61 = v60;
    swift_bridgeObjectRelease();
    v62 = objc_msgSend(v61, sel_unsignedIntValue);

    v71[0] = v70;
    v71[1] = v68;
    v71[2] = v67;
    v71[3] = v66;
    v71[4] = v65;
    v71[5] = v64;
    v71[6] = v63;
    v72 = __PAIR64__(v62, v59);
    sub_239298900((uint64_t)v71);
LABEL_37:
    sub_239298738((uint64_t)v71, (uint64_t)&v74);
    sub_239298738((uint64_t)&v74, a2);
    return;
  }
  if (*(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    v60 = *(id *)(v56 + 40);
    goto LABEL_81;
  }
LABEL_86:
  __break(1u);
}

uint64_t sub_239298738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_2569285F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_239298780(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23925FB08((uint64_t *)&unk_25692A930);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TemporalDepthPointCloud()
{
  return objc_opt_self();
}

unint64_t sub_2392987E0()
{
  unint64_t result;

  result = qword_256928608;
  if (!qword_256928608)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256928608);
  }
  return result;
}

uint64_t sub_23929881C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

__n128 initializeWithCopy for TemporalDepthPointCloud.Camera(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TemporalDepthPointCloud.Camera(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TemporalDepthPointCloud.Camera(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 120) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TemporalDepthPointCloud.Camera()
{
  return &type metadata for TemporalDepthPointCloud.Camera;
}

double sub_2392988DC(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 120) = 1;
  return result;
}

uint64_t sub_239298900(uint64_t result)
{
  *(_BYTE *)(result + 120) = 0;
  return result;
}

uint64_t sub_23929890C()
{
  swift_beginAccess();
  return swift_weakLoadStrong();
}

uint64_t sub_23929894C()
{
  swift_beginAccess();
  swift_weakAssign();
  return swift_release();
}

void (*sub_23929899C(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_239298A04;
}

void sub_239298A04(void **a1, char a2)
{
  void *v3;

  v3 = *a1;
  swift_weakAssign();
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

uint64_t sub_239298A70()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_239298AA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

double sub_239298ADC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 32);
}

uint64_t sub_239298B0C(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(double *)(v1 + 32) = a1;
  return result;
}

uint64_t sub_239298B48(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  *(_QWORD *)(v5 + 24) = a3;
  *(double *)(v5 + 32) = a1;
  return v5;
}

uint64_t sub_239298BD8()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_239298BFC@<X0>(char a1@<W1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *QuadMeshUsdaAssetsURLs;
  NSObject *v27;
  id v28;
  NSObject *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, _QWORD *);
  unsigned int (*v53)(char *, uint64_t, _QWORD *);
  void (*v54)(char *, char *, _QWORD *);
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  NSObject *v65;
  _QWORD *v66;
  unsigned int v67;
  char *v68;
  id v69;
  void *v70;
  id v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  void (*v88)(char *, _QWORD *);
  _QWORD *v89;
  void (*v90)(char *, _QWORD *);
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  NSObject *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  _QWORD *v105;
  uint64_t v106;
  unint64_t v107;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v100 = (char *)&v92 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v92 - v11;
  v13 = sub_23925FB08(&qword_256927AD0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v103 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v101 = (char *)&v92 - v16;
  v105 = (_QWORD *)sub_239351F3C();
  v17 = *(v105 - 1);
  v18 = MEMORY[0x24BDAC7A8](v105);
  v97 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v104 = (char *)&v92 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v92 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v98 = (char *)&v92 - v25;
  if ((a1 & 1) != 0)
  {
    QuadMeshUsdaAssetsURLs = (void *)CPGOutputGetQuadMeshUsdaAssetsURLs();
    if (!QuadMeshUsdaAssetsURLs)
    {
LABEL_3:
      v27 = 0;
LABEL_19:
      v41 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v41, v4);
      v42 = sub_239352098();
      v43 = sub_23935256C();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_23925B000, v42, v43, "Backend Manager: Failed to get output USDA assets!", v44, 2u);
        MEMORY[0x23B83BC04](v44, -1, -1);
        v45 = v27;
      }
      else
      {
        v45 = v42;
        v42 = v27;
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      v46 = sub_23925FB08(&qword_256928720);
      v47 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
      v48 = a2;
      return v47(v48, 1, 1, v46);
    }
  }
  else
  {
    QuadMeshUsdaAssetsURLs = (void *)CPGOutputGetUsdaAssetsURLs();
    if (!QuadMeshUsdaAssetsURLs)
      goto LABEL_3;
  }
  v93 = v12;
  v28 = QuadMeshUsdaAssetsURLs;
  v107 = 0;
  type metadata accessor for CFURL(0);
  v29 = v28;
  sub_239352440();
  v99 = v29;

  v30 = v107;
  if (!v107)
  {
    v27 = v99;
    goto LABEL_19;
  }
  if (v107 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_239352854();
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v94 = v4;
  v95 = a2;
  v96 = v5;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
    v40 = v105;
LABEL_24:
    v49 = *(_QWORD *)(v34 + 16);
    v50 = v103;
    if (v49)
    {
      v51 = v34 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v102 = *(_QWORD *)(v17 + 72);
      v105 = *(_QWORD **)(v17 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        ((void (*)(char *, unint64_t, _QWORD *))v105)(v50, v51, v40);
        v52 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v17 + 56);
        v52(v50, 0, 1, v40);
        v53 = *(unsigned int (**)(char *, uint64_t, _QWORD *))(v17 + 48);
        if (v53(v50, 1, v40) == 1)
          break;
        v54 = *(void (**)(char *, char *, _QWORD *))(v17 + 32);
        v54(v104, v50, v40);
        if (sub_239351E70() == 1633973109 && v55 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_41:
          swift_bridgeObjectRelease();
          v57 = (uint64_t)v101;
          v54(v101, v104, v40);
          v52((char *)v57, 0, 1, v40);
          v67 = v53((char *)v57, 1, v40);
          v58 = v96;
          if (v67 == 1)
            goto LABEL_35;
          v68 = v98;
          v54(v98, (char *)v57, v40);
          v69 = objc_allocWithZone(MEMORY[0x24BEBED00]);
          v70 = (void *)sub_239351ED0();
          v71 = objc_msgSend(v69, sel_initSceneFromURL_, v70);

          if (v71)
          {

            v72 = sub_23925FB08(&qword_256928720);
            v73 = v95;
            v74 = (char *)v95 + *(int *)(v72 + 48);
            v75 = *(int *)(v72 + 64);
            *v95 = v71;
            v54(v74, v68, v40);
            *(_QWORD *)((char *)v73 + v75) = v34;
            return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v73, 0, 1, v72);
          }
          swift_bridgeObjectRelease();
          v76 = sub_239275AB0();
          v77 = v68;
          v78 = v93;
          v79 = v40;
          v80 = v94;
          (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v93, v76, v94);
          v81 = v97;
          ((void (*)(char *, char *, _QWORD *))v105)(v97, v77, v79);
          v82 = sub_239352098();
          v83 = sub_23935256C();
          if (os_log_type_enabled(v82, v83))
          {
            v84 = swift_slowAlloc();
            v85 = swift_slowAlloc();
            v105 = (_QWORD *)v85;
            *(_DWORD *)v84 = 141558275;
            v106 = 1752392040;
            v107 = v85;
            sub_2393526B0();
            *(_WORD *)(v84 + 12) = 2081;
            v86 = sub_239351F30();
            v106 = sub_23925F3EC(v86, v87, (uint64_t *)&v107);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            v88 = *(void (**)(char *, _QWORD *))(v17 + 8);
            v88(v81, v79);
            _os_log_impl(&dword_23925B000, v82, v83, "Backend Manager: Failed to create USKScene for USDA URL = %{private,mask.hash}s", (uint8_t *)v84, 0x16u);
            v89 = v105;
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v89, -1, -1);
            MEMORY[0x23B83BC04](v84, -1, -1);

            (*(void (**)(char *, uint64_t))(v96 + 8))(v78, v94);
            v88(v98, v79);
          }
          else
          {

            v90 = *(void (**)(char *, _QWORD *))(v17 + 8);
            v90(v81, v79);

            (*(void (**)(char *, uint64_t))(v58 + 8))(v78, v80);
            v90(v77, v79);
          }
          v91 = v95;
          v46 = sub_23925FB08(&qword_256928720);
          v47 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
          v48 = v91;
          return v47(v48, 1, 1, v46);
        }
        v56 = sub_2393528CC();
        swift_bridgeObjectRelease();
        if ((v56 & 1) != 0)
          goto LABEL_41;
        (*(void (**)(char *, _QWORD *))(v17 + 8))(v104, v40);
        v50 = v103;
        v51 += v102;
        if (!--v49)
          goto LABEL_33;
      }
    }
    else
    {
      v52 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v17 + 56);
      swift_bridgeObjectRetain();
LABEL_33:
      v52(v50, 1, 1, v40);
    }
    swift_bridgeObjectRelease();
    v57 = (uint64_t)v101;
    v52(v101, 1, 1, v40);
    v58 = v96;
LABEL_35:
    swift_bridgeObjectRelease();
    sub_23925FE28(v57, &qword_256927AD0);
    v59 = sub_239275AB0();
    v60 = v100;
    v61 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v100, v59, v94);
    v62 = sub_239352098();
    v63 = sub_23935256C();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_23925B000, v62, v63, "Backend Manager: Failed to find USDA asset", v64, 2u);
      MEMORY[0x23B83BC04](v64, -1, -1);
      v65 = v99;
    }
    else
    {
      v65 = v62;
      v62 = v99;
    }
    v66 = v95;

    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v61);
    v46 = sub_23925FB08(&qword_256928720);
    v47 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
    v48 = v66;
    return v47(v48, 1, 1, v46);
  }
  v107 = MEMORY[0x24BEE4AF8];
  result = sub_23927D7AC(0, v31 & ~(v31 >> 63), 0);
  if ((v31 & 0x8000000000000000) == 0)
  {
    v33 = 0;
    v34 = v107;
    do
    {
      if ((v30 & 0xC000000000000001) != 0)
        v35 = (id)MEMORY[0x23B83A68C](v33, v30);
      else
        v35 = *(id *)(v30 + 8 * v33 + 32);
      v36 = v35;
      sub_239351F18();

      v107 = v34;
      v38 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v34 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_23927D7AC(v37 > 1, v38 + 1, 1);
        v34 = v107;
      }
      ++v33;
      *(_QWORD *)(v34 + 16) = v38 + 1;
      v39 = v34
          + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
          + *(_QWORD *)(v17 + 72) * v38;
      v40 = v105;
      (*(void (**)(unint64_t, char *, _QWORD *))(v17 + 32))(v39, v24, v105);
    }
    while (v31 != v33);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_239299560(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;

  v22 = a4;
  v23 = a5;
  v20 = a2;
  v21 = a3;
  v24 = *MEMORY[0x24BDAC8D0];
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_data, *(_OWORD *)&v20, *(_OWORD *)&v21, *(_OWORD *)&v22, *(_OWORD *)&v23);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_arraySize);
    v12 = objc_msgSend(v11, sel_dataNoCopy);
    sub_239351F6C();
    v14 = v13;

    __asm { BR              X10 }
  }
  v15 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
  v16 = sub_239352098();
  v17 = sub_23935256C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_23925B000, v16, v17, "Backend Manager: Failed to get the point array property data!", v18, 2u);
    MEMORY[0x23B83BC04](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

double sub_2392998C8(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  char **v11;
  NSObject *v12;
  NSObject *v13;
  float32x2_t v14;
  float32x2_t v15;
  float v16;
  float v17;
  uint8_t *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  void *v24;
  NSObject *v25;
  id v26;
  const char *v27;
  id v28;
  id v29;
  char **v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  int8x16_t v47;
  double result;
  uint64_t v49;
  NSObject *v50;
  id v51;
  int v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  id v58;

  v55 = a4;
  v56 = a5;
  v53 = a2;
  v54 = a3;
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_nodeIterator);
  v11 = &off_250AD4000;
  v12 = objc_msgSend(v10, sel_nextObject);
  if (!v12)
  {
    swift_unknownObjectRelease();
    return 0.0;
  }
  v13 = v12;
  v52 = 0;
  v14 = (float32x2_t)vdup_n_s32(0x7F800000u);
  v57 = *MEMORY[0x24BEBEE50];
  v15 = (float32x2_t)0x7F0000007FLL;
  v16 = -INFINITY;
  v17 = INFINITY;
  do
  {
    while (1)
    {
      objc_opt_self();
      v20 = swift_dynamicCastObjCClass();
      if (v20)
        break;
      v21 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21, v6);
      v22 = sub_239352098();
      v23 = sub_23935256C();
      if (os_log_type_enabled(v22, v23))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_23925B000, v22, v23, "Backend Manager: Failed to cast iterator in USKScene to USKNode!", v18, 2u);
        MEMORY[0x23B83BC04](v18, -1, -1);
        v19 = v13;
      }
      else
      {
        v19 = v22;
        v22 = v13;
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v13 = objc_msgSend(v10, v11[228]);
      if (!v13)
        goto LABEL_30;
    }
    v24 = (void *)v20;
    v51 = v10;
    v25 = v13;
    v26 = objc_msgSend(v24, sel_propertyList);
    v27 = v11[228];
    v58 = v26;
    v28 = objc_msgSend(v26, v27);
    if (!v28)
      goto LABEL_29;
    v29 = v28;
    v50 = v25;
    while (1)
    {
      v30 = v11;
      objc_opt_self();
      v31 = (void *)swift_dynamicCastObjCClass();
      if (!v31)
        break;
      v32 = v31;
      v33 = objc_msgSend(v31, sel_role);
      v34 = sub_2393522F0();
      v36 = v35;
      if (v34 == sub_2393522F0() && v36 == v37)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
      v39 = sub_2393528CC();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v39 & 1) != 0)
      {
LABEL_20:
        v40 = sub_239299560(v32, v53, v54, v55, v56);
        v42 = v41;
        v44 = v43;
        v46 = v45;

        if ((v46 & 1) != 0)
          goto LABEL_11;
        v14 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v14, (float32x2_t)__PAIR64__(v42, v40)), (int8x8_t)__PAIR64__(v42, v40), (int8x8_t)v14);
        v15 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32((float32x2_t)__PAIR64__(HIDWORD(v42), HIDWORD(v40)), v15), (int8x8_t)__PAIR64__(HIDWORD(v42), HIDWORD(v40)), (int8x8_t)v15);
        if (v17 > *(float *)&v44)
          v17 = *(float *)&v44;
        if (v16 <= *((float *)&v44 + 1))
          v16 = *((float *)&v44 + 1);
        v11 = v30;
        v29 = objc_msgSend(v58, (SEL)v30 + 252);
        v52 = 1;
        v25 = v50;
        if (!v29)
          goto LABEL_29;
      }
      else
      {

LABEL_11:
        v11 = v30;
        v29 = objc_msgSend(v58, (SEL)v30 + 252);
        if (!v29)
          goto LABEL_28;
      }
    }

LABEL_28:
    v25 = v50;
LABEL_29:
    swift_unknownObjectRelease();

    v10 = v51;
    v13 = objc_msgSend(v51, v11[228]);
  }
  while (v13);
LABEL_30:
  swift_unknownObjectRelease();
  if ((v52 & 1) != 0)
  {
    v47.i64[0] = v14.u32[0];
    v47.i64[1] = v14.u32[1];
    *(_QWORD *)&result = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)v15, 0x20uLL), v47).u64[0];
    return result;
  }
  return 0.0;
}

uint64_t sub_239299CEC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, float64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  float32x4_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  unsigned int v25;
  float v26;
  float v27;
  float v28;
  float v29;
  unint64_t v30;
  float v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  float64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  float32x2_t v49;
  uint64_t v56;
  unint64_t v57;
  uint8_t *v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  float64x2_t v64;
  float32x4_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  float64x2_t v69;
  _OWORD v70[9];
  float64x2_t v71;
  float64x2_t v72;
  float64x2_t v73;
  float64x2_t v74;
  float64x2_t v75;
  float64x2_t v76;
  float64x2_t v77;
  float64x2_t v78;
  float64x2_t v79[8];
  float64x2_t v80;
  float64x2_t v81;
  float64x2_t v82;
  float64x2_t v83;
  float64x2_t v84;
  float64x2_t v85;
  float64x2_t v86;
  float64x2_t v87;
  simd_float4x4 v88;
  simd_float4x4 v89;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v56 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v56 - v14;
  if (!a1 || (v16 = CPGSfmMapCopyBoundingBox()) == 0)
  {
    v41 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v41, v6);
    v42 = sub_239352098();
    v43 = sub_23935256C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_23925B000, v42, v43, "Backend Manager: Failed to get the initial SfM map bounding box!", v44, 2u);
      MEMORY[0x23B83BC04](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    sub_2392677D0((uint64_t)v70);
    goto LABEL_14;
  }
  v17 = v16;
  v69.f64[0] = a3;
  CPGBoundingBoxGetTransform();
  v79[0] = v80;
  v79[1] = v81;
  v79[2] = v82;
  v79[3] = v83;
  v79[4] = v84;
  v79[5] = v85;
  v79[6] = v86;
  v79[7] = v87;
  *(double *)v18.i64 = sub_2392DEE58(v79);
  *(double *)v88.columns[0].i64 = sub_2392DF0F4(v18);
  v89 = __invert_f4(v88);
  v67 = (float32x4_t)v89.columns[1];
  v68 = (float32x4_t)v89.columns[0];
  v65 = (float32x4_t)v89.columns[3];
  v66 = (float32x4_t)v89.columns[2];
  sub_2392998C8(a2, (__n128)v89.columns[0], (__n128)v89.columns[1], (__n128)v89.columns[2], (__n128)v89.columns[3]);
  if ((v22 & 1) == 0)
  {
    v23 = v19;
    v24 = v20;
    v25 = v21;
    v26 = *(float *)&v19;
    v62 = HIDWORD(v19);
    v27 = *((float *)&v19 + 1);
    v28 = *(float *)&v20;
    v29 = *(float *)&v21;
    v30 = HIDWORD(v21);
    v31 = *((float *)&v21 + 1);
    v32 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v32, v6);
    v33 = sub_239352098();
    v34 = sub_239352578();
    *(_QWORD *)&v64.f64[0] = v33;
    v63 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v57 = HIDWORD(v24);
      v35 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      *(_QWORD *)&v70[0] = v60;
      v61 = v17;
      *(_DWORD *)v35 = 136315138;
      v58 = v35 + 4;
      v59 = v35;
      *(_QWORD *)&v80.f64[0] = __PAIR64__(v62, v23);
      *(_QWORD *)&v80.f64[1] = __PAIR64__(v57, v24);
      *(_QWORD *)&v81.f64[0] = __PAIR64__(v30, v25);
      v36 = sub_23935232C();
      *(_QWORD *)&v80.f64[0] = sub_23925F3EC(v36, v37, (uint64_t *)v70);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      v38 = v64.f64[0];
      v39 = v59;
      _os_log_impl(&dword_23925B000, *(os_log_t *)&v64.f64[0], (os_log_type_t)v63, "Found recenter mesh bounds: %s", v59, 0xCu);
      v40 = v60;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v40, -1, -1);
      MEMORY[0x23B83BC04](v39, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    a3 = v69.f64[0];
    v49.f32[0] = (float)(v26 + v27) * -0.5;
    v49.f32[1] = -v28;
    v69 = vcvtq_f64_f32(v49);
    __asm { FMOV            V1.2D, #1.0 }
    _Q1.f64[0] = (float)((float)(v29 + v31) * -0.5);
    v64 = _Q1;
    sub_2392DEE24(&v71, v68, v67, v66, v65);
    v70[0] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_239355140, v71.f64[0]), (float64x2_t)xmmword_239355150, v71, 1), (float64x2_t)0, v72.f64[0]), v69, v72, 1);
    v70[1] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v71.f64[0]), (float64x2_t)0, v71, 1), (float64x2_t)xmmword_239355140, v72.f64[0]), v64, v72, 1);
    v70[2] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_239355140, v73.f64[0]), (float64x2_t)xmmword_239355150, v73, 1), (float64x2_t)0, v74.f64[0]), v69, v74, 1);
    v70[3] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v73.f64[0]), (float64x2_t)0, v73, 1), (float64x2_t)xmmword_239355140, v74.f64[0]), v64, v74, 1);
    v70[4] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_239355140, v75.f64[0]), (float64x2_t)xmmword_239355150, v75, 1), (float64x2_t)0, v76.f64[0]), v69, v76, 1);
    v70[5] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v75.f64[0]), (float64x2_t)0, v75, 1), (float64x2_t)xmmword_239355140, v76.f64[0]), v64, v76, 1);
    v70[6] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_239355140, v77.f64[0]), (float64x2_t)xmmword_239355150, v77, 1), (float64x2_t)0, v78.f64[0]), v69, v78, 1);
    v70[7] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v77.f64[0]), (float64x2_t)0, v77, 1), (float64x2_t)xmmword_239355140, v78.f64[0]), v64, v78, 1);
    sub_2392688E8((uint64_t)v70);
    CPGBoundingBoxRelease();
LABEL_14:
    sub_239268764((uint64_t)v70, (uint64_t)&v80, &qword_256928728);
    return sub_239268764((uint64_t)&v80, *(uint64_t *)&a3, &qword_256928728);
  }
  v45 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v45, v6);
  v46 = sub_239352098();
  v47 = sub_23935256C();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_23925B000, v46, v47, "Backend Manager: Failed to get the initial mesh bounds!", v48, 2u);
    MEMORY[0x23B83BC04](v48, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  sub_2392677D0((uint64_t)v70);
  CPGBoundingBoxRelease();
  sub_239268764((uint64_t)v70, (uint64_t)&v80, &qword_256928728);
  a3 = v69.f64[0];
  return sub_239268764((uint64_t)&v80, *(uint64_t *)&a3, &qword_256928728);
}

BOOL sub_23929A274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23929C16C(a1, (uint64_t)v4);
  v5 = sub_23925FB08(&qword_256928730);
  v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 3, v5);
  if (v6)
  {
    sub_23929C1B0((uint64_t)v4);
  }
  else
  {
    v7 = sub_239351F3C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  }
  return v6 == 0;
}

uint64_t sub_23929A330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _BYTE v9[144];
  float32x4_t v10[9];

  v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23929C16C(a1, (uint64_t)v4);
  v5 = sub_23925FB08(&qword_256928730);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 3, v5))
  {
    sub_23929C1B0((uint64_t)v4);
  }
  else
  {
    sub_239268764((uint64_t)&v4[*(int *)(v5 + 64)], (uint64_t)v9, &qword_256928738);
    sub_239268764((uint64_t)v9, (uint64_t)v10, &qword_256928738);
    if (sub_239269494((uint64_t)v10) != 1
      && (sub_2392DF8CC(v10[0], v10[1], v10[2], (int8x16_t)v10[3]) & 1) != 0)
    {
      v6 = sub_239351F3C();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
      return 1;
    }
    v8 = sub_239351F3C();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
  }
  return 0;
}

void sub_23929A468()
{
  byte_25692D2B8 = 1;
  qword_25692D2C0 = 0xE700000000000000;
}

void sub_23929A484()
{
  byte_25692D2D0 = 1;
  qword_25692D2D8 = 0xEE00706572707376;
}

void sub_23929A4AC()
{
  byte_25692D2E8 = 1;
  qword_25692D2F0 = 0xEA00000000006D66;
}

void sub_23929A4CC()
{
  byte_25692D300 = 1;
  qword_25692D308 = 0xEC0000006F666E69;
}

void sub_23929A4F0()
{
  byte_25692D318 = 1;
  qword_25692D320 = 0xEB00000000736564;
}

uint64_t sub_23929A514(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101[5];
  __int128 v102;
  __int128 v103;

  v2 = sub_2393520B0();
  v97 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v95 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v95 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v95 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v95 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v96 = (char *)&v95 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v95 - v20;
  if (qword_25692D2B0 != -1)
    swift_once();
  if (byte_25692D2B8)
    v22 = 0x7374726F706572;
  else
    v22 = 0;
  *(_QWORD *)&v99 = v22;
  *((_QWORD *)&v99 + 1) = qword_25692D2C0;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(a1 + 16) && (v23 = sub_23929C1EC((uint64_t)v101), (v24 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v23, (uint64_t)&v102);
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  sub_23929C21C((uint64_t)v101);
  v98 = v2;
  if (!*((_QWORD *)&v103 + 1))
  {
    sub_23925FE28((uint64_t)&v102, (uint64_t *)&unk_25692A930);
    goto LABEL_22;
  }
  sub_23925FB08(&qword_256928740);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v2 = v98;
LABEL_22:
    v29 = sub_239275AB0();
    v30 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v5, v29, v2);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_DWORD *)v33 = 136446210;
      v101[0] = v34;
      if (byte_25692D2B8)
        v35 = 0x7374726F706572;
      else
        v35 = 0;
      v36 = qword_25692D2C0;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v35, v36, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v31, v32, "Native dictionary has no \"%{public}s\" key.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v34, -1, -1);
      MEMORY[0x23B83BC04](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v2);
    }
    goto LABEL_63;
  }
  v25 = v99;
  if (qword_25692D2C8 != -1)
    swift_once();
  if (byte_25692D2D0)
    v26 = 0x6D5F74726F706572;
  else
    v26 = 0;
  *(_QWORD *)&v99 = v26;
  *((_QWORD *)&v99 + 1) = qword_25692D2D8;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(v25 + 16) && (v27 = sub_23929C1EC((uint64_t)v101), (v28 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)&v102);
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23929C21C((uint64_t)v101);
  if (!*((_QWORD *)&v103 + 1))
  {
    v41 = 0x6D5F74726F706572;
    sub_23925FE28((uint64_t)&v102, (uint64_t *)&unk_25692A930);
    goto LABEL_41;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    v41 = 0x6D5F74726F706572;
LABEL_41:
    v42 = sub_239275AB0();
    v44 = v97;
    v43 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v8, v42, v98);
    v45 = sub_239352098();
    v46 = sub_23935256C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_DWORD *)v47 = 136446210;
      v101[0] = v48;
      if (!byte_25692D2D0)
        v41 = 0;
      v49 = qword_25692D2D8;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v41, v49, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v45, v46, "Native dictionary has no \"%{public}s\" key.", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v48, -1, -1);
      MEMORY[0x23B83BC04](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v43);
    }
    goto LABEL_63;
  }
  v37 = v99;
  if (qword_25692D2F8 != -1)
    swift_once();
  if (byte_25692D300)
    v38 = 0x5F656D69746E7572;
  else
    v38 = 0;
  *(_QWORD *)&v99 = v38;
  *((_QWORD *)&v99 + 1) = qword_25692D308;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(v37 + 16) && (v39 = sub_23929C1EC((uint64_t)v101), (v40 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v37 + 56) + 32 * v39, (uint64_t)&v102);
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23929C21C((uint64_t)v101);
  if (!*((_QWORD *)&v103 + 1))
  {
    sub_23925FE28((uint64_t)&v102, (uint64_t *)&unk_25692A930);
LABEL_58:
    v55 = v98;
    v56 = sub_239275AB0();
    v57 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v11, v56, v55);
    v58 = sub_239352098();
    v59 = sub_23935256C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = 0x5F656D69746E7572;
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      *(_DWORD *)v61 = 136446210;
      v101[0] = v62;
      if (!byte_25692D300)
        v60 = 0;
      v63 = qword_25692D308;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v60, v63, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v58, v59, "Native dictionary has no \"%{public}s\" key.", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v62, -1, -1);
      MEMORY[0x23B83BC04](v61, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v55);
    }
    goto LABEL_63;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_58;
  v51 = v98;
  v50 = v99;
  if (qword_25692D310 != -1)
    swift_once();
  if (byte_25692D318)
    v52 = 0x6F635F726F727265;
  else
    v52 = 0;
  *(_QWORD *)&v99 = v52;
  *((_QWORD *)&v99 + 1) = qword_25692D320;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(v50 + 16) && (v53 = sub_23929C1EC((uint64_t)v101), (v54 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v50 + 56) + 32 * v53, (uint64_t)&v99);
  }
  else
  {
    v99 = 0u;
    v100 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23929C21C((uint64_t)v101);
  if (!*((_QWORD *)&v100 + 1))
  {
    sub_23925FE28((uint64_t)&v99, (uint64_t *)&unk_25692A930);
    v79 = sub_239275AB0();
    v80 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v14, v79, v51);
    v81 = sub_239352098();
    v82 = sub_23935256C();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc();
      v84 = swift_slowAlloc();
      *(_DWORD *)v83 = 136446210;
      v101[0] = v84;
      if (byte_25692D318)
        v85 = 0x6F635F726F727265;
      else
        v85 = 0;
      v86 = qword_25692D320;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v85, v86, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v81, v82, "Native dictionary has no \"%{public}s\" array...", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v84, -1, -1);
      MEMORY[0x23B83BC04](v83, -1, -1);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v80 + 8))(v14, v51);
    }
LABEL_63:
    v64 = 0;
    return v64 & 1;
  }
  sub_23925FDD4(&v99, &v102);
  sub_23925FB48((uint64_t)&v102, (uint64_t)v101);
  sub_23925FB08(&qword_256927CB0);
  if (!swift_dynamicCast())
  {
    v87 = sub_239275AB0();
    v88 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v17, v87, v51);
    v89 = sub_239352098();
    v90 = sub_23935256C();
    if (os_log_type_enabled(v89, v90))
    {
      v91 = (uint8_t *)swift_slowAlloc();
      v92 = swift_slowAlloc();
      *(_DWORD *)v91 = 136446210;
      v101[0] = v92;
      if (byte_25692D318)
        v93 = 0x6F635F726F727265;
      else
        v93 = 0;
      v94 = qword_25692D320;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v99 = sub_23925F3EC(v93, v94, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v89, v90, "Native dictionary can't coerce \"%{public}s\" array to [String]..", v91, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v92, -1, -1);
      MEMORY[0x23B83BC04](v91, -1, -1);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v17, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v51);
    }
    sub_23925FE04((uint64_t)&v102);
    goto LABEL_63;
  }
  v66 = (_QWORD *)v99;
  v67 = sub_239275AB0();
  v68 = v51;
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v69(v21, v67, v68);
  v70 = sub_239352098();
  v71 = sub_239352560();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v72 = 0;
    _os_log_impl(&dword_23925B000, v70, v71, "Checking error codes for automatic downsampling...", v72, 2u);
    MEMORY[0x23B83BC04](v72, -1, -1);
  }

  v73 = v98;
  v74 = *(void (**)(char *, uint64_t))(v97 + 8);
  v74(v21, v98);
  v64 = sub_23929B2D4(0xD00000000000001ALL, 0x800000023935B900, v66);
  swift_bridgeObjectRelease();
  v75 = v96;
  v69(v96, v67, v73);
  v76 = sub_239352098();
  v77 = sub_239352560();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v78 = 67240192;
    LODWORD(v101[0]) = v64 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v76, v77, "... downsampled = %{BOOL,public}d...", v78, 8u);
    MEMORY[0x23B83BC04](v78, -1, -1);
  }

  v74(v75, v98);
  sub_23925FE04((uint64_t)&v102);
  return v64 & 1;
}

uint64_t sub_23929B2D4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_2393528CC();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2393528CC() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23929B398(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101[5];
  __int128 v102;
  __int128 v103;

  v2 = sub_2393520B0();
  v97 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v95 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v95 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v95 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v95 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v96 = (char *)&v95 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v95 - v20;
  if (qword_25692D2B0 != -1)
    swift_once();
  if (byte_25692D2B8)
    v22 = 0x7374726F706572;
  else
    v22 = 0;
  *(_QWORD *)&v99 = v22;
  *((_QWORD *)&v99 + 1) = qword_25692D2C0;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(a1 + 16) && (v23 = sub_23929C1EC((uint64_t)v101), (v24 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v23, (uint64_t)&v102);
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  sub_23929C21C((uint64_t)v101);
  v98 = v2;
  if (!*((_QWORD *)&v103 + 1))
  {
    sub_23925FE28((uint64_t)&v102, (uint64_t *)&unk_25692A930);
    goto LABEL_22;
  }
  sub_23925FB08(&qword_256928740);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v2 = v98;
LABEL_22:
    v29 = sub_239275AB0();
    v30 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v5, v29, v2);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_DWORD *)v33 = 136446210;
      v101[0] = v34;
      if (byte_25692D2B8)
        v35 = 0x7374726F706572;
      else
        v35 = 0;
      v36 = qword_25692D2C0;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v35, v36, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v31, v32, "Native dictionary has no \"%{public}s\" key.", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v34, -1, -1);
      MEMORY[0x23B83BC04](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v2);
    }
    goto LABEL_63;
  }
  v25 = v99;
  if (qword_25692D2E0 != -1)
    swift_once();
  if (byte_25692D2E8)
    v26 = 0x735F74726F706572;
  else
    v26 = 0;
  *(_QWORD *)&v99 = v26;
  *((_QWORD *)&v99 + 1) = qword_25692D2F0;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(v25 + 16) && (v27 = sub_23929C1EC((uint64_t)v101), (v28 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)&v102);
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23929C21C((uint64_t)v101);
  if (!*((_QWORD *)&v103 + 1))
  {
    v41 = 0x735F74726F706572;
    sub_23925FE28((uint64_t)&v102, (uint64_t *)&unk_25692A930);
    goto LABEL_41;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    v41 = 0x735F74726F706572;
LABEL_41:
    v42 = sub_239275AB0();
    v44 = v97;
    v43 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v8, v42, v98);
    v45 = sub_239352098();
    v46 = sub_23935256C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_DWORD *)v47 = 136446210;
      v101[0] = v48;
      if (!byte_25692D2E8)
        v41 = 0;
      v49 = qword_25692D2F0;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v41, v49, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v45, v46, "Native dictionary has no \"%{public}s\" key.", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v48, -1, -1);
      MEMORY[0x23B83BC04](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v43);
    }
    goto LABEL_63;
  }
  v37 = v99;
  if (qword_25692D2F8 != -1)
    swift_once();
  if (byte_25692D300)
    v38 = 0x5F656D69746E7572;
  else
    v38 = 0;
  *(_QWORD *)&v99 = v38;
  *((_QWORD *)&v99 + 1) = qword_25692D308;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(v37 + 16) && (v39 = sub_23929C1EC((uint64_t)v101), (v40 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v37 + 56) + 32 * v39, (uint64_t)&v102);
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23929C21C((uint64_t)v101);
  if (!*((_QWORD *)&v103 + 1))
  {
    sub_23925FE28((uint64_t)&v102, (uint64_t *)&unk_25692A930);
LABEL_58:
    v55 = v98;
    v56 = sub_239275AB0();
    v57 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v11, v56, v55);
    v58 = sub_239352098();
    v59 = sub_23935256C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = 0x5F656D69746E7572;
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      *(_DWORD *)v61 = 136446210;
      v101[0] = v62;
      if (!byte_25692D300)
        v60 = 0;
      v63 = qword_25692D308;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v60, v63, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v58, v59, "Native dictionary has no \"%{public}s\" key.", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v62, -1, -1);
      MEMORY[0x23B83BC04](v61, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v55);
    }
    goto LABEL_63;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_58;
  v51 = v98;
  v50 = v99;
  if (qword_25692D310 != -1)
    swift_once();
  if (byte_25692D318)
    v52 = 0x6F635F726F727265;
  else
    v52 = 0;
  *(_QWORD *)&v99 = v52;
  *((_QWORD *)&v99 + 1) = qword_25692D320;
  swift_bridgeObjectRetain();
  sub_239352764();
  if (*(_QWORD *)(v50 + 16) && (v53 = sub_23929C1EC((uint64_t)v101), (v54 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v50 + 56) + 32 * v53, (uint64_t)&v99);
  }
  else
  {
    v99 = 0u;
    v100 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23929C21C((uint64_t)v101);
  if (!*((_QWORD *)&v100 + 1))
  {
    sub_23925FE28((uint64_t)&v99, (uint64_t *)&unk_25692A930);
    v79 = sub_239275AB0();
    v80 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v14, v79, v51);
    v81 = sub_239352098();
    v82 = sub_23935256C();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc();
      v84 = swift_slowAlloc();
      *(_DWORD *)v83 = 136446210;
      v101[0] = v84;
      if (byte_25692D318)
        v85 = 0x6F635F726F727265;
      else
        v85 = 0;
      v86 = qword_25692D320;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v102 = sub_23925F3EC(v85, v86, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v81, v82, "Native dictionary has no \"%{public}s\" array...", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v84, -1, -1);
      MEMORY[0x23B83BC04](v83, -1, -1);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v14, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v80 + 8))(v14, v51);
    }
LABEL_63:
    v64 = 0;
    return v64 & 1;
  }
  sub_23925FDD4(&v99, &v102);
  sub_23925FB48((uint64_t)&v102, (uint64_t)v101);
  sub_23925FB08(&qword_256927CB0);
  if (!swift_dynamicCast())
  {
    v87 = sub_239275AB0();
    v88 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v17, v87, v51);
    v89 = sub_239352098();
    v90 = sub_23935256C();
    if (os_log_type_enabled(v89, v90))
    {
      v91 = (uint8_t *)swift_slowAlloc();
      v92 = swift_slowAlloc();
      *(_DWORD *)v91 = 136446210;
      v101[0] = v92;
      if (byte_25692D318)
        v93 = 0x6F635F726F727265;
      else
        v93 = 0;
      v94 = qword_25692D320;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v99 = sub_23925F3EC(v93, v94, v101);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v89, v90, "Native dictionary can't coerce \"%{public}s\" array to [String]..", v91, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v92, -1, -1);
      MEMORY[0x23B83BC04](v91, -1, -1);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v17, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v88 + 8))(v17, v51);
    }
    sub_23925FE04((uint64_t)&v102);
    goto LABEL_63;
  }
  v66 = (_QWORD *)v99;
  v67 = sub_239275AB0();
  v68 = v51;
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v69(v21, v67, v68);
  v70 = sub_239352098();
  v71 = sub_239352560();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v72 = 0;
    _os_log_impl(&dword_23925B000, v70, v71, "Checking error codes for incomplete stitcking...", v72, 2u);
    MEMORY[0x23B83BC04](v72, -1, -1);
  }

  v73 = v98;
  v74 = *(void (**)(char *, uint64_t))(v97 + 8);
  v74(v21, v98);
  v64 = sub_23929B2D4(0xD00000000000002ALL, 0x800000023935B920, v66);
  swift_bridgeObjectRelease();
  v75 = v96;
  v69(v96, v67, v73);
  v76 = sub_239352098();
  v77 = sub_239352560();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v78 = 67240192;
    LODWORD(v101[0]) = v64 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v76, v77, "... has incomplete stitching = %{BOOL,public}d...", v78, 8u);
    MEMORY[0x23B83BC04](v78, -1, -1);
  }

  v74(v75, v98);
  sub_23925FE04((uint64_t)&v102);
  return v64 & 1;
}

void type metadata accessor for CFURL(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256928848);
}

uint64_t sub_23929C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23929C1B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23929C1EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23935274C();
  return sub_23929C2A8(a1, v2);
}

uint64_t sub_23929C21C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t type metadata accessor for RelocContext()
{
  return objc_opt_self();
}

__n128 initializeBufferWithCopyOfBuffer for MeshBounds(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for MeshBounds()
{
  return &type metadata for MeshBounds;
}

void type metadata accessor for simd_double4x4(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256928840);
}

unint64_t sub_23929C2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_23929C36C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x23B83A5FC](v9, a1);
      sub_23929C21C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_23929C36C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

unint64_t sub_23929C3A8(unint64_t result, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  float32x2_t v6;
  float *v7;
  float32x2_t v8;
  uint64_t v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float32x4_t v15;
  int8x16_t v16;

  if (!result)
    return 0;
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (a2)
    {
      v6 = (float32x2_t)vdup_n_s32(0x7F800000u);
      v7 = (float *)(result + 8);
      v8 = (float32x2_t)0x7F0000007FLL;
      v9 = 0x2AAAAAAAAAAAAAAALL;
      v10 = INFINITY;
      v11 = -INFINITY;
      while (v9)
      {
        v13 = *(v7 - 2);
        v12 = *(v7 - 1);
        v14 = *v7;
        v7 += 3;
        v15 = vaddq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a3, v13), a4, v12), a5, v14), a6);
        v6 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v6, *(float32x2_t *)v15.f32), *(int8x8_t *)v15.f32, (int8x8_t)v6);
        v8 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32(*(float32x2_t *)v15.f32, v8), *(int8x8_t *)v15.f32, (int8x8_t)v8);
        if (v15.f32[2] < v10)
          v10 = v15.f32[2];
        if (v11 <= v15.f32[2])
          v11 = v15.f32[2];
        --v9;
        if (!--a2)
        {
          v16.i64[0] = v6.u32[0];
          v16.i64[1] = v6.u32[1];
          return vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)v8, 0x20uLL), v16).u64[0];
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    return vdupq_n_s64(0xFF8000007F800000).u64[0];
  }
LABEL_16:
  __break(1u);
  return result;
}

double sub_23929C474@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  double result;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_DWORD *)(v1 + 56);
  v6 = *(_BYTE *)(v1 + 60);
  v7 = *(_BYTE *)(v1 + 61);
  v8 = *(_BYTE *)(v1 + 62);
  v9 = *(_BYTE *)(v1 + 63);
  v10 = *(_BYTE *)(v1 + 64);
  v11 = *(_BYTE *)(v1 + 65);
  v12 = *(_BYTE *)(v1 + 66);
  v13 = *(_BYTE *)(v1 + 67);
  v14 = *(_BYTE *)(v1 + 68);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  result = *(double *)(v1 + 48);
  *(double *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 44) = v6;
  *(_BYTE *)(a1 + 45) = v7;
  *(_BYTE *)(a1 + 46) = v8;
  *(_BYTE *)(a1 + 47) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 49) = v11;
  *(_BYTE *)(a1 + 50) = v12;
  *(_BYTE *)(a1 + 51) = v13;
  *(_BYTE *)(a1 + 52) = v14;
  return result;
}

double sub_23929C524(int *a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  double result;
  char v14;
  char v15;
  char v16;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 3);
  v6 = a1[10];
  v7 = *((_BYTE *)a1 + 45);
  v8 = *((_BYTE *)a1 + 46);
  v9 = *((_BYTE *)a1 + 47);
  v10 = *((_BYTE *)a1 + 48);
  v11 = *((_BYTE *)a1 + 49);
  v15 = *((_BYTE *)a1 + 50);
  v16 = *((_BYTE *)a1 + 44);
  v14 = *((_BYTE *)a1 + 51);
  v12 = *((_BYTE *)a1 + 52);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = *((_QWORD *)a1 + 2);
  *(_QWORD *)(v1 + 40) = v5;
  result = *((double *)a1 + 4);
  *(double *)(v1 + 48) = result;
  *(_DWORD *)(v1 + 56) = v6;
  *(_BYTE *)(v1 + 60) = v16;
  *(_BYTE *)(v1 + 61) = v7;
  *(_BYTE *)(v1 + 62) = v8;
  *(_BYTE *)(v1 + 63) = v9;
  *(_BYTE *)(v1 + 64) = v10;
  *(_BYTE *)(v1 + 65) = v11;
  *(_BYTE *)(v1 + 66) = v15;
  *(_BYTE *)(v1 + 67) = v14;
  *(_BYTE *)(v1 + 68) = v12;
  return result;
}

uint64_t sub_23929C610(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_23929C684(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_23929C684(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  double v22;
  char v23;
  float v24;
  float v25;
  uint64_t v26;
  float v27;
  uint64_t v28;
  float v29;
  float v30;
  uint64_t v36;
  float v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  _QWORD v62[2];
  id v63;
  uint64_t v64;
  double v65;
  _BYTE v66[176];

  v6 = v5;
  v63 = a4;
  v64 = a3;
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v62[0] = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v62 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v62 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v62 - v20;
  sub_23934BA80(v6 + 16);
  *(_QWORD *)(v6 + 112) = 0;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_QWORD *)(v6 + 128) = 0;
  *(_QWORD *)(v6 + 136) = 0;
  *(_QWORD *)(v6 + 160) = 2;
  *(_WORD *)(v6 + 168) = 0;
  *(_QWORD *)(v6 + 176) = 0x3FF0000000000000;
  v22 = COERCE_DOUBLE(sub_2392642BC());
  if ((v23 & 1) != 0)
    v22 = 0.75;
  *(double *)(v6 + 184) = v22;
  *(_WORD *)(v6 + 192) = 258;
  *(_DWORD *)(v6 + 196) = 1058642330;
  v24 = sub_2392DEB64(10.0);
  *(float *)(v6 + 200) = v24;
  v25 = sub_2392DEB64(5.0);
  *(float *)(v6 + 204) = v25;
  *(_DWORD *)(v6 + 208) = 1036831949;
  v26 = sub_2392642EC();
  v27 = *(float *)&v26;
  if ((v26 & 0x100000000) != 0)
    v27 = 0.075;
  *(float *)(v6 + 212) = v27;
  v28 = sub_239264310();
  v29 = *(float *)&v28;
  if ((v28 & 0x100000000) != 0)
    v29 = 7.5;
  v30 = sub_2392DEB64(v29);
  *(float *)(v6 + 216) = cosf(v30);
  *(_BYTE *)(v6 + 220) = 1;
  *(_OWORD *)(v6 + 224) = xmmword_2393552A0;
  *(_QWORD *)(v6 + 240) = 0;
  *(_OWORD *)(v6 + 248) = xmmword_2393552B0;
  sub_23929CC4C((uint64_t)v66);
  sub_239268764((uint64_t)v66, v6 + 272, &qword_256928850);
  __asm { FMOV            V11.2S, #-1.0 }
  *(_QWORD *)(v6 + 432) = _D11;
  *(_DWORD *)(v6 + 440) = -1082130432;
  v36 = sub_239263D0C();
  v37 = *(float *)&v36;
  if ((v36 & 0x100000000) != 0)
    v37 = 2.0;
  *(float *)(v6 + 444) = v37;
  *(_QWORD *)(v6 + 448) = 10;
  *(_QWORD *)(v6 + 456) = 0x3FC000003E4CCCCDLL;
  *(_QWORD *)(v6 + 472) = _D11;
  *(_QWORD *)(v6 + 480) = 0;
  *(_QWORD *)(v6 + 488) = 0x41200000BF800000;
  sub_239346E7C(v6 + 496);
  type metadata accessor for OCObjectCentricPoseGraph(0);
  v38 = sub_239346EBC(a1);
  v39 = v63;
  *(_QWORD *)(v6 + 72) = v38;
  *(_QWORD *)(v6 + 144) = a2;
  *(_QWORD *)(v6 + 120) = v39;
  swift_beginAccess();
  v40 = v64;
  *(float *)(v6 + 560) = v24;
  *(float *)(v6 + 564) = v25;
  *(_DWORD *)(v6 + 568) = 1036831949;
  *(double *)(v6 + 152) = a5;
  *(_QWORD *)(v6 + 464) = v40;
  v62[1] = a2;
  if (v40)
  {
    swift_retain();
    swift_retain();
    v41 = v39;
    v42 = sub_239275C74();
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v43(v21, v42, v10);
    v44 = sub_239352098();
    v45 = sub_239352578();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_23925B000, v44, v45, "Internal motion manager is available.", v46, 2u);
      MEMORY[0x23B83BC04](v46, -1, -1);
    }

    v47 = *(void (**)(char *, uint64_t))(v11 + 8);
    v47(v21, v10);
  }
  else
  {
    swift_retain();
    v48 = v39;
    v49 = sub_239275C74();
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v43(v19, v49, v10);
    v50 = sub_239352098();
    v51 = sub_239352578();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_23925B000, v50, v51, "Internal motion manager is not available, gyro gates not applied.", v52, 2u);
      MEMORY[0x23B83BC04](v52, -1, -1);
    }

    v47 = *(void (**)(char *, uint64_t))(v11 + 8);
    v47(v19, v10);
  }
  v53 = sub_239275C74();
  v43(v16, v53, v10);
  v54 = sub_239352098();
  v55 = sub_239352578();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v56 = 134349056;
    if (qword_25692D328 != -1)
      swift_once();
    v65 = *(float *)&dword_25692FDF8;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v54, v55, "IMU max angular speed threshold = %{public}f", v56, 0xCu);
    MEMORY[0x23B83BC04](v56, -1, -1);
  }

  v47(v16, v10);
  v57 = (char *)v62[0];
  v43((char *)v62[0], v53, v10);
  v58 = sub_239352098();
  v59 = sub_239352578();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v60 = 0;
    _os_log_impl(&dword_23925B000, v58, v59, "Initialized capture manager", v60, 2u);
    MEMORY[0x23B83BC04](v60, -1, -1);
  }

  swift_release();
  swift_release();
  v47(v57, v10);
  return v6;
}

double sub_23929CC4C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 1;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  return result;
}

int *sub_23929CC70()
{
  if (qword_25692D328 != -1)
    swift_once();
  return &dword_25692FDF8;
}

uint64_t sub_23929CCB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(_QWORD), uint64_t a6, float a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char v31;
  float v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  __n128 *v46;
  __n128 v47;
  __n128 v48;
  uint64_t (*v49)(_QWORD *, BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t), uint64_t, uint64_t, __n128, __n128, __n128, __n128);
  BOOL (*v50)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t);
  char v51;
  uint64_t v52;
  double *v53;
  uint64_t v54;
  char v55;
  char v56;
  float v57;
  uint64_t v58;
  void (*v59)(_QWORD *__return_ptr, uint64_t);
  char v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  NSObject *v70;
  os_log_type_t v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  double v77;
  char *v78;
  char *v79;
  void (*v80)(_QWORD);
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  __n128 v88;
  double *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD v93[8];
  unsigned __int8 v94;
  _QWORD v95[8];
  char v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  _QWORD v112[5];
  int v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  uint64_t v123[8];
  char v124;
  double v125[8];
  char v126;

  v8 = v7;
  v80 = a5;
  v81 = a6;
  sub_239268764(a2, (uint64_t)v93, &qword_25692A8A0);
  v13 = v93[0];
  v14 = v93[1];
  v87.n128_u64[0] = v93[2];
  v86.n128_u64[0] = v93[3];
  v84 = v93[5];
  v85.n128_u64[0] = v93[4];
  v15 = v93[7];
  v83 = v93[6];
  v82 = v94;
  v16 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x24BDAC7A8](v16);
  v89 = (double *)((char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_2393520B0();
  v90 = *(_QWORD *)(v18 - 8);
  v91 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v78 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v79 = (char *)&v75 - v21;
  v88.n128_u64[0] = *a4;
  v92 = (_QWORD *)a1;
  sub_2392E17DC(*(__CVBuffer **)(a1 + 8));
  v23 = v22;
  v25 = v24;
  v26 = 1;
  v27 = swift_beginAccess();
  *(_DWORD *)(v8 + 16) = v23;
  *(_QWORD *)(v8 + 24) = v25;
  v28 = *(_QWORD *)(v8 + 464);
  if (v28)
  {
    *(double *)&v29 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 176))(v27));
    v26 = v31 & 1;
    v32 = v30;
    if ((v31 & 1) != 0)
      v32 = -1.0;
  }
  else
  {
    *(double *)&v29 = 0.0;
    v30 = 0.0;
    v32 = -1.0;
  }
  *(float *)(v8 + 32) = v32;
  if ((*(_BYTE *)(v8 + 168) & 1) != 0
    || (*(_BYTE *)(v8 + 169) & 1) != 0
    || *(_QWORD *)(v8 + 128)
    || *(_QWORD *)(v8 + 136))
  {
    return 0;
  }
  v76 = *(double *)&v29;
  v77 = v30;
  (*(void (**)(void))(**(_QWORD **)(v8 + 144) + 120))();
  v33 = sub_2392E1120(a3);
  if ((v33 & 1) != 0)
    v34 = v13;
  else
    v34 = 0;
  if ((v33 & 1) != 0)
    v35 = v14;
  else
    v35 = 0;
  v95[0] = v34;
  v95[1] = v35;
  v36 = v87.n128_u64[0];
  if ((v33 & 1) == 0)
    v36 = 0;
  v37 = v86.n128_u64[0];
  if ((v33 & 1) == 0)
    v37 = 0;
  v39 = v84;
  v38 = v85.n128_u64[0];
  if ((v33 & 1) == 0)
  {
    v38 = 0;
    v39 = 0;
  }
  v40 = v83;
  if ((v33 & 1) != 0)
  {
    v41 = v15;
  }
  else
  {
    v40 = 0;
    v41 = 0;
  }
  v95[2] = v36;
  v95[3] = v37;
  v95[4] = v38;
  v95[5] = v39;
  v95[6] = v40;
  v95[7] = v41;
  v96 = v82 & 1 | ((v33 & 1) == 0);
  sub_239268764((uint64_t)v95, (uint64_t)v125, &qword_25692A8A0);
  v42 = (a7 <= 0.6) & ~v126;
  swift_beginAccess();
  sub_239349D30(v42);
  swift_endAccess();
  v123[0] = *(_QWORD *)sub_2392F3994();
  v112[0] = v88.n128_u64[0];
  sub_2392A0940();
  v43 = sub_23935271C();
  swift_beginAccess();
  sub_239349F90(v43 & 1);
  swift_endAccess();
  sub_239268764((uint64_t)v95, (uint64_t)v123, &qword_25692A8A0);
  v44 = *(_QWORD *)(v8 + 72);
  v45 = v92;
  v46 = (__n128 *)((char *)v92 + *(int *)(v16 + 40));
  v47 = v46[4];
  v85 = v46[3];
  v86 = v47;
  v48 = v46[6];
  v87 = v46[5];
  v88 = v48;
  if ((v124 & 1) != 0)
  {
    swift_beginAccess();
    v49 = *(uint64_t (**)(_QWORD *, BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t), uint64_t, uint64_t, __n128, __n128, __n128, __n128))(*(_QWORD *)v44 + 184);
    swift_retain();
    swift_retain();
    v50 = sub_23929FB18;
  }
  else
  {
    swift_beginAccess();
    v49 = *(uint64_t (**)(_QWORD *, BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t), uint64_t, uint64_t, __n128, __n128, __n128, __n128))(*(_QWORD *)v44 + 184);
    swift_retain();
    swift_retain();
    v50 = (BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t))sub_2392A0984;
  }
  v51 = v49(v95, v50, v8, v8 + 496, v85, v86, v87, v88);
  swift_endAccess();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_23934A1F0(v51 & 1);
  v52 = swift_endAccess();
  v53 = v89;
  v54 = *(_QWORD *)(v8 + 144);
  v55 = ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v54 + 152))(v52) & 1) != 0
      ? 0
      : (*(uint64_t (**)(void))(*(_QWORD *)v54 + 168))() ^ 1;
  swift_beginAccess();
  sub_23934A450(v55 & 1);
  swift_endAccess();
  *(_DWORD *)(v8 + 472) = -1082130432;
  if ((v26 & 1) != 0)
  {
    v56 = 1;
  }
  else
  {
    v57 = v77;
    *(float *)(v8 + 472) = v57;
    if (qword_25692D328 != -1)
      swift_once();
    v56 = *(float *)&dword_25692FDF8 > v57;
  }
  swift_beginAccess();
  sub_23934A6B0(v56);
  v58 = swift_endAccess();
  v59 = *(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v8 + 448);
  v59(v112, v58);
  v97 = v112[0];
  v98 = v112[1];
  v99 = v112[2];
  v100 = v112[3];
  v101 = v112[4];
  v102 = v113;
  v103 = v114;
  v104 = v115;
  v105 = v116;
  v106 = v117;
  v107 = v118;
  v108 = v119;
  v109 = v120;
  v110 = v121;
  v111 = v122;
  v60 = sub_23934BA54();
  swift_beginAccess();
  sub_239349AD0(v60 & 1);
  v61 = swift_endAccess();
  v59(v112, v61);
  if (v114 != 1)
    return 0;
  v62 = sub_239275C74();
  v63 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
  if ((v26 & 1) != 0)
  {
    v64 = v78;
    v63(v78, v62, v91);
    v65 = sub_239352098();
    v66 = sub_239352560();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_23925B000, v65, v66, "IMU ahead of video frame timestamp unknown.", v67, 2u);
      MEMORY[0x23B83BC04](v67, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v90 + 8))(v64, v91);
  }
  else
  {
    v63(v79, v62, v91);
    sub_239263508((uint64_t)v45, (uint64_t)v53);
    swift_retain();
    v70 = sub_239352098();
    v71 = sub_239352560();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = v76;
      v73 = v76;
      v74 = swift_slowAlloc();
      *(_DWORD *)v74 = 134349312;
      v125[0] = v73 - (*v53 + *(double *)(v8 + 152));
      sub_2393526B0();
      swift_release();
      sub_2392688AC((uint64_t)v53, type metadata accessor for OCCaptureData);
      *(_WORD *)(v74 + 12) = 2050;
      v125[0] = v77;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v70, v71, "IMU ahead of video frame timestamp by = %{public}f with speed = %{public}f", (uint8_t *)v74, 0x16u);
      MEMORY[0x23B83BC04](v74, -1, -1);
    }
    else
    {
      swift_release();
      sub_2392688AC((uint64_t)v53, type metadata accessor for OCCaptureData);
      v72 = v76;
    }

    (*(void (**)(char *, uint64_t))(v90 + 8))(v79, v91);
    *(double *)(v8 + 480) = v72;
  }
  *(_QWORD *)(v8 + 224) = *v45;
  sub_23929FE80();
  v68 = 1;
  sub_23929E428(1, 1, v80, v81);
  return v68;
}

uint64_t sub_23929D47C()
{
  return 0;
}

uint64_t sub_23929D484(char a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  char v20;
  void (*v21)(_QWORD);
  char *v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);

  v4 = v3;
  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - v13;
  v15 = sub_239275C74();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v35 = v15;
  v36 = v16;
  ((void (*)(char *))v16)(v14);
  v17 = sub_239352098();
  v18 = sub_239352578();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v34 = v8;
    v20 = a1;
    v21 = a2;
    v22 = v12;
    v23 = a3;
    v24 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_23925B000, v17, v18, "Trying manual capture...", v19, 2u);
    v25 = v24;
    a3 = v23;
    v12 = v22;
    a2 = v21;
    a1 = v20;
    v8 = v34;
    MEMORY[0x23B83BC04](v25, -1, -1);
  }

  v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v14, v8);
  if (*(_QWORD *)(v4 + 128))
  {
    swift_retain();
    sub_239352218();
    swift_release();
  }
  *(_QWORD *)(v4 + 128) = 0;
  swift_release();
  v27 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v4 + 144) + 104))(1);
  v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 576))(v27);
  if ((v28 & 1) != 0)
  {
    sub_23929E428(0, a1 & 1, a2, a3);
  }
  else
  {
    v36(v12, v35, v8);
    v29 = sub_239352098();
    v30 = sub_23935256C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_23925B000, v29, v30, "Ignoring manual capture, too frequent!", v31, 2u);
      MEMORY[0x23B83BC04](v31, -1, -1);
    }

    v26(v12, v8);
  }
  return v28 & 1;
}

uint64_t sub_23929D6F0(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  double *v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t result;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  double *v37;
  uint8_t *v38;
  uint8_t *v39;
  char v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  double *v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  double *v55;
  uint8_t *v56;
  uint8_t *v57;
  char v58;
  char *v59;
  NSObject *v60;
  os_log_type_t v61;
  double *v62;
  uint8_t *v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;

  v4 = v3;
  v68 = a1;
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v67 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)&v65 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v69 = (char *)&v65 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v65 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v65 - v18;
  v20 = *(int *)(type metadata accessor for OCCaptureData(0) + 48);
  v21 = *((unsigned __int8 *)a2 + v20);
  v22 = sub_239275C74();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  if (v21 == 1)
  {
    v23(v19, v22, v7);
    v24 = sub_239352098();
    v25 = sub_239352578();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v66 = v4;
      v27 = a3;
      v28 = a2;
      v29 = v26;
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23925B000, v24, v25, "Trying to add automatic capture shot...", v26, 2u);
      v30 = v29;
      a2 = v28;
      a3 = v27;
      v4 = v66;
      MEMORY[0x23B83BC04](v30, -1, -1);
    }

    v31 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    result = v31(v19, v7);
  }
  else
  {
    v23(v17, v22, v7);
    v33 = sub_239352098();
    v34 = sub_239352578();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v66 = v4;
      v36 = a3;
      v37 = a2;
      v38 = v35;
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23925B000, v33, v34, "Trying to add manual capture shot...", v35, 2u);
      v39 = v38;
      a2 = v37;
      a3 = v36;
      v4 = v66;
      MEMORY[0x23B83BC04](v39, -1, -1);
    }

    v31 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    result = v31(v17, v7);
  }
  if ((*((_BYTE *)a2 + v20) & 1) != 0)
  {
    v40 = sub_23929F4D8((uint64_t)a2);
    v41 = sub_239275C74();
    if ((v40 & 1) == 0)
    {
      v59 = v67;
      v23(v67, v41, v7);
      v60 = sub_239352098();
      v61 = sub_239352578();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = a2;
        v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v63 = 0;
        _os_log_impl(&dword_23925B000, v60, v61, "Shot image sharpness is not good, discard this shot!", v63, 2u);
        v64 = v63;
        a2 = v62;
        MEMORY[0x23B83BC04](v64, -1, -1);
      }

      v31(v59, v7);
      sub_23929DBDC((uint64_t)a2, v4);
      v58 = 0;
      return v58 & 1;
    }
    v23(v70, v41, v7);
    v42 = sub_239352098();
    v43 = sub_239352578();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = a2;
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_23925B000, v42, v43, "Passed post-capture check, saving image...", v45, 2u);
      v46 = v45;
      a2 = v44;
      MEMORY[0x23B83BC04](v46, -1, -1);
    }

    result = v31(v70, v7);
    v47 = *(_QWORD *)(v4 + 96);
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (!v48)
    {
      *(_QWORD *)(v4 + 96) = v49;
      sub_23929FB9C();
      if (*(_BYTE *)(v4 + 193) != 1)
        goto LABEL_21;
      goto LABEL_20;
    }
  }
  else
  {
    v50 = *(_QWORD *)(v4 + 104);
    v48 = __OFADD__(v50, 1);
    v51 = v50 + 1;
    if (!v48)
    {
      *(_QWORD *)(v4 + 104) = v51;
      sub_23929FB9C();
      if (*(_BYTE *)(v4 + 193) != 1)
      {
LABEL_21:
        sub_23929DBDC((uint64_t)a2, v4);
        v58 = 1;
        return v58 & 1;
      }
      v52 = sub_239275C74();
      v23(v69, v52, v7);
      v53 = sub_239352098();
      v54 = sub_239352578();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = a2;
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_23925B000, v53, v54, "Adding the manual shot to pose graph. It must be the first hidden shot at start capturing.", v56, 2u);
        v57 = v56;
        a2 = v55;
        MEMORY[0x23B83BC04](v57, -1, -1);
      }

      v31(v69, v7);
LABEL_20:
      v58 = sub_23929F78C(v68, a2, a3);
      sub_23929DBDC((uint64_t)a2, v4);
      return v58 & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23929DBDC(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t result;

  sub_2392E1A10(*(__CVBuffer **)(a1 + 8));
  v5 = v4;
  v7 = v6;
  swift_beginAccess();
  *(_DWORD *)(a2 + 36) = v5;
  *(_QWORD *)(a2 + 40) = v7;
  v8 = *(_DWORD *)(a2 + 488);
  *(_DWORD *)(a2 + 48) = *(_DWORD *)(a2 + 476);
  *(_DWORD *)(a2 + 52) = v8;
  v9 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for OCCaptureData(0) + 48));
  if (v9 == 1)
  {
    if (*(_QWORD *)(a2 + 128))
    {
      swift_retain();
      sub_239352218();
      swift_release();
    }
    *(_QWORD *)(a2 + 128) = 0;
  }
  else
  {
    if (*(_QWORD *)(a2 + 136))
    {
      swift_retain();
      sub_239352218();
      swift_release();
    }
    *(_QWORD *)(a2 + 136) = 0;
  }
  swift_release();
  result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(a2 + 144) + 104))(1);
  *(_BYTE *)(a2 + 192) = v9;
  return result;
}

uint64_t sub_23929DCE0(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t (*v7)(uint64_t, __n128, __n128, __n128, __n128);

  v7 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128))(**(_QWORD **)(v5 + 72) + 160);
  swift_retain();
  LOBYTE(a1) = v7(a1, a2, a3, a4, a5);
  swift_release();
  return a1 & 1;
}

uint64_t sub_23929DD48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  char v5;
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v2 + 72) + 152);
  swift_retain();
  v5 = v4(a1);
  swift_release();
  if ((v5 & 1) == 0)
    return v5 & 1;
  result = swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 112);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (!v8)
  {
    *(_QWORD *)(v2 + 112) = v9;
    return v5 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23929DDD8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(**(_QWORD **)(v0 + 72) + 168);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23929DE0C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(**(_QWORD **)(v0 + 72) + 176);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23929DE40()
{
  return sub_23929DEBC(1.0);
}

uint64_t sub_23929DE48()
{
  uint64_t v0;

  return sub_23929DEBC(*(double *)(v0 + 184));
}

double sub_23929DE54(char a1)
{
  uint64_t v1;
  double result;

  result = 1.0;
  if ((a1 & 1) != 0)
    return *(double *)(v1 + 184);
  return result;
}

uint64_t sub_23929DE64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 464);
  if (v1)
    return (*(uint64_t (**)(void))(*(_QWORD *)v1 + 184))();
  else
    return MEMORY[0x24BEE4AF8];
}

BOOL sub_23929DE9C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 169) & 1) == 0 && *(_QWORD *)(v0 + 136) == 0;
}

uint64_t sub_23929DEBC(double a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t aBlock;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  void *v45;
  uint64_t (*v46)();
  uint64_t v47;

  v3 = sub_2393521F4();
  v39 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v36 - v7;
  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v36 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v36 - v16;
  v18 = sub_239352170();
  MEMORY[0x24BDAC7A8](v18);
  v19 = v1[192];
  if (v19 != 2)
  {
    v38 = v3;
    if ((v19 & 1) != 0)
    {
      v1[168] = 1;
      v30 = swift_allocObject();
      swift_weakInit();
      v46 = sub_2392A08E4;
      v47 = v30;
      aBlock = MEMORY[0x24BDAC760];
      v43 = 1107296256;
      v44 = sub_239262EDC;
      v45 = &unk_250AC4D80;
      v37 = _Block_copy(&aBlock);
      v41 = MEMORY[0x24BEE4AF8];
      sub_2392A0850();
      swift_retain();
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_2392A0898();
      sub_239352734();
      sub_239352224();
      swift_allocObject();
      sub_23935220C();
      swift_release();
      swift_release();
      v31 = sub_239275C74();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v31, v8);
      v27 = sub_239352098();
      v32 = sub_23935256C();
      if (os_log_type_enabled(v27, v32))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_23925B000, v27, v32, "Set cooldown time for automatic shot", v29, 2u);
        goto LABEL_10;
      }
    }
    else
    {
      v1[169] = 1;
      v25 = swift_allocObject();
      swift_weakInit();
      v46 = sub_2392A07EC;
      v47 = v25;
      aBlock = MEMORY[0x24BDAC760];
      v43 = 1107296256;
      v44 = sub_239262EDC;
      v45 = &unk_250AC4D58;
      v37 = _Block_copy(&aBlock);
      v41 = MEMORY[0x24BEE4AF8];
      sub_2392A0850();
      swift_retain();
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_2392A0898();
      sub_239352734();
      sub_239352224();
      swift_allocObject();
      sub_23935220C();
      swift_release();
      swift_release();
      v26 = sub_239275C74();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v26, v8);
      v27 = sub_239352098();
      v28 = sub_23935256C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_23925B000, v27, v28, "Set cooldown time for manual shot", v29, 2u);
        v17 = v15;
LABEL_10:
        v33 = v38;
        MEMORY[0x23B83BC04](v29, -1, -1);
LABEL_13:

        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        sub_2393521DC();
        v34 = v40;
        MEMORY[0x23B83A0EC](v6, a1);
        v35 = *(void (**)(char *, uint64_t))(v39 + 8);
        v35(v6, v33);
        sub_2393525CC();
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v35)(v34, v33);
      }
      v17 = v15;
    }
    v33 = v38;
    goto LABEL_13;
  }
  v20 = sub_239275C74();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v20, v8);
  v21 = sub_239352098();
  v22 = sub_23935256C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_23925B000, v21, v22, "Failed to set cooldown time because last shot couldn't be added!", v23, 2u);
    MEMORY[0x23B83BC04](v23, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_23929E428(int a1, int a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t aBlock;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  void *v41;
  uint64_t (*v42)();
  uint64_t v43;

  v29 = a4;
  v30 = a3;
  v35 = a2;
  v34 = sub_239352164();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_2393521F4();
  v31 = *(_QWORD *)(v33 - 8);
  v8 = MEMORY[0x24BDAC7A8](v33);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - v11;
  v13 = sub_239352170();
  MEMORY[0x24BDAC7A8](v13);
  v14 = swift_allocObject();
  swift_weakInit();
  v36 = a1;
  if ((a1 & 1) != 0)
  {
    v42 = sub_2392A0938;
    v43 = v14;
    aBlock = MEMORY[0x24BDAC760];
    v39 = 1107296256;
    v40 = sub_239262EDC;
    v41 = &unk_250AC4DD0;
    _Block_copy(&aBlock);
    v37 = MEMORY[0x24BEE4AF8];
    sub_2392A0850();
    swift_retain();
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_2392A0898();
    sub_239352734();
    sub_239352224();
    swift_allocObject();
    v15 = sub_23935220C();
    swift_release();
    swift_release();
    *(_QWORD *)(v4 + 128) = v15;
  }
  else
  {
    v42 = sub_2392A0930;
    v43 = v14;
    aBlock = MEMORY[0x24BDAC760];
    v39 = 1107296256;
    v40 = sub_239262EDC;
    v41 = &unk_250AC4DA8;
    _Block_copy(&aBlock);
    v37 = MEMORY[0x24BEE4AF8];
    sub_2392A0850();
    swift_retain();
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_2392A0898();
    sub_239352734();
    sub_239352224();
    swift_allocObject();
    v16 = sub_23935220C();
    swift_release();
    swift_release();
    *(_QWORD *)(v4 + 136) = v16;
  }
  swift_retain();
  swift_release();
  sub_2393521DC();
  *v7 = 2;
  v17 = v32;
  v18 = v34;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v7, *MEMORY[0x24BEE5420], v34);
  MEMORY[0x23B83A0E0](v10, v7);
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v7, v18);
  v19 = *(void (**)(char *, uint64_t))(v31 + 8);
  v20 = v10;
  v21 = v33;
  v19(v20, v33);
  sub_2393525CC();
  result = ((uint64_t (*)(char *, uint64_t))v19)(v12, v21);
  *(_DWORD *)(v4 + 436) = *(_DWORD *)(v4 + 432);
  v23 = v36;
  *(_BYTE *)(v4 + 193) = v35 & 1;
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)(v4 + 80);
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      *(_QWORD *)(v4 + 80) = v26;
LABEL_9:
      v30(v23 & 1);
      (*(void (**)(_QWORD))(**(_QWORD **)(v4 + 144) + 104))(0);
      return swift_release();
    }
    __break(1u);
  }
  else
  {
    v27 = *(_QWORD *)(v4 + 88);
    v25 = __OFADD__(v27, 1);
    v28 = v27 + 1;
    if (!v25)
    {
      *(_QWORD *)(v4 + 88) = v28;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23929E820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = sub_239275C74();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v7 = sub_239352098();
    v8 = sub_239352578();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23925B000, v7, v8, "Created cancel request for automatic capture", v9, 2u);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (*(_QWORD *)(v5 + 128))
    {
      swift_retain();
      sub_239352218();
      swift_release();
    }
    *(_QWORD *)(v5 + 128) = 0;
    swift_release();
    (*(void (**)(uint64_t))(**(_QWORD **)(v5 + 144) + 104))(1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23929E99C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = sub_239275C74();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v7 = sub_239352098();
    v8 = sub_239352578();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23925B000, v7, v8, "Created cancel request for manual capture", v9, 2u);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (*(_QWORD *)(v5 + 136))
    {
      swift_retain();
      sub_239352218();
      swift_release();
    }
    *(_QWORD *)(v5 + 136) = 0;
    swift_release();
    (*(void (**)(uint64_t))(**(_QWORD **)(v5 + 144) + 104))(1);
    return swift_release();
  }
  return result;
}

BOOL sub_23929EB18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  float v22;
  double v23[2];

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v23 - v9;
  if (CVBufferCopyAttachment(*(CVBufferRef *)(a1 + 8), (CFStringRef)*MEMORY[0x24BDB1428], 0))
  {
    objc_opt_self();
    v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      objc_msgSend(v11, sel_floatValue);
      *(_DWORD *)(v2 + 488) = v12;
      v13 = sub_239275C74();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v13, v4);
      swift_retain();
      v14 = sub_239352098();
      v15 = sub_239352578();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v16 = 134349056;
        v23[1] = *(float *)(v2 + 488);
        sub_2393526B0();
        swift_release();
        _os_log_impl(&dword_23925B000, v14, v15, "postcheck: Focus pixel blur score = %{public}f", v16, 0xCu);
        MEMORY[0x23B83BC04](v16, -1, -1);

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v22 = *(float *)(v2 + 488);
      return v22 >= 0.0 && v22 < 10.0;
    }
    swift_unknownObjectRelease();
  }
  *(_DWORD *)(v2 + 488) = 0;
  v17 = sub_239275C74();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v17, v4);
  v18 = sub_239352098();
  v19 = sub_23935256C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_23925B000, v18, v19, "postcheck: missing blur score in still image data, not using focus pixel blur score in post capture check.", v20, 2u);
    MEMORY[0x23B83BC04](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return 1;
}

BOOL sub_23929EDC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __CVBuffer *v22;
  float v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  char *v33;
  uint64_t v34;
  uint8_t *v35;
  uint8_t *v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  char v41;
  double v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  double v54;
  void (*v55)(char *, uint64_t);
  double v56;
  double v58;
  BOOL v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  const char *v66;
  float v67;
  double v68;
  NSObject *v69;
  os_log_type_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  float v74;
  float v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  double v82;
  double v83;

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v76 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v80 = (char *)&v76 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)&v76 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v76 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v76 - v19;
  *(_DWORD *)(v2 + 476) = -1082130432;
  v21 = *(_QWORD *)(v2 + 464);
  if (!v21)
    return 1;
  v22 = *(__CVBuffer **)(a1 + 8);
  swift_retain();
  sub_2392E1A10(v22);
  v24 = v23;
  v25 = *(double *)a1 - v23;
  v26 = *(double *)a1 + 0.015;
  v27 = *(double *)(v2 + 224);
  if (v27 < v26 && v25 <= v27)
  {
    v29 = sub_239275C74();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v20, v29, v4);
    v30 = sub_239352098();
    v31 = sub_239352560();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v78 = (void (*)(char *, uint64_t, uint64_t))v4;
      v33 = v11;
      v34 = v21;
      v35 = v32;
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23925B000, v30, v31, "postcheck: IMU shot frame hit type 1 (triggering video frame time ~= shot frame time)!", v32, 2u);
      v36 = v35;
      v21 = v34;
      v11 = v33;
      v4 = (uint64_t)v78;
      MEMORY[0x23B83BC04](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  }
  v37 = *(double *)(v2 + 152);
  v38 = v25 + v37;
  v39 = v26 + v37;
  v83 = 0.0;
  *(double *)&v40 = COERCE_DOUBLE((*(uint64_t (**)(double *, double, double))(*(_QWORD *)v21 + 168))(&v83, v38, v26 + v37));
  if ((v41 & 1) != 0)
  {
    v50 = sub_239275C74();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v50, v4);
    v51 = sub_239352098();
    v52 = sub_23935256C();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      *(_DWORD *)v53 = 134349312;
      v82 = v38;
      sub_2393526B0();
      *(_WORD *)(v53 + 12) = 2050;
      v82 = v39;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v51, v52, "postcheck: No IMU data available from %{public}f to %{public}f", (uint8_t *)v53, 0x16u);
      MEMORY[0x23B83BC04](v53, -1, -1);
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  v42 = *(double *)&v40;
  v43 = sub_239275C74();
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v77 = v43;
  v78 = v44;
  ((void (*)(char *))v44)(v18);
  swift_retain();
  v45 = sub_239352098();
  v46 = sub_239352560();
  v47 = os_log_type_enabled(v45, v46);
  v79 = v21;
  if (v47)
  {
    v48 = swift_slowAlloc();
    *(_DWORD *)v48 = 134349312;
    v82 = *(double *)(v2 + 480) + (v38 + v39) * -0.5;
    sub_2393526B0();
    swift_release();
    *(_WORD *)(v48 + 12) = 2050;
    v82 = v42;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v45, v46, "postcheck: IMU ahead of shot frame timestamp by %{public}f with speed = %{public}f", (uint8_t *)v48, 0x16u);
    MEMORY[0x23B83BC04](v48, -1, -1);

  }
  else
  {

    swift_release();
  }
  v54 = v42;
  v55 = *(void (**)(char *, uint64_t))(v5 + 8);
  v55(v18, v4);
  v56 = *(double *)(v2 + 480);
  if (v38 <= v56 && v56 < v39)
  {
    v62 = v81;
    v61 = v77;
    v60 = v78;
    v78(v81, v77, v4);
    v63 = sub_239352098();
    v64 = sub_239352560();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      v66 = "postcheck: IMU shot frame hit type 2 (current time ~= shot frame time)!";
      goto LABEL_30;
    }
LABEL_31:

    v55(v62, v4);
    goto LABEL_32;
  }
  v58 = v56 + 0.05;
  v59 = v38 <= v58 && v58 < v39;
  v61 = v77;
  v60 = v78;
  if (v59)
  {
    v62 = v80;
    v78(v80, v77, v4);
    v63 = sub_239352098();
    v64 = sub_239352560();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      v66 = "postcheck: IMU shot frame hit type 3 (predicted time ~= shot frame time)!";
LABEL_30:
      _os_log_impl(&dword_23925B000, v63, v64, v66, v65, 2u);
      MEMORY[0x23B83BC04](v65, -1, -1);
      goto LABEL_31;
    }
    goto LABEL_31;
  }
LABEL_32:
  v67 = v54;
  *(float *)(v2 + 476) = v67;
  v60(v11, v61, v4);
  v68 = v83;
  swift_retain();
  v69 = sub_239352098();
  v70 = sub_239352560();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = v11;
    v72 = swift_slowAlloc();
    *(_DWORD *)v72 = 134349568;
    v82 = *(float *)(v2 + 476);
    sub_2393526B0();
    swift_release();
    *(_WORD *)(v72 + 12) = 2050;
    v82 = v24;
    sub_2393526B0();
    *(_WORD *)(v72 + 22) = 2050;
    v82 = v68;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v69, v70, "postcheck: Max IMU angular speed = %{public}f, exposureTime = %{public}f, computed from %{public}ld samples.", (uint8_t *)v72, 0x20u);
    v73 = v72;
    v11 = v71;
    MEMORY[0x23B83BC04](v73, -1, -1);

  }
  else
  {

    swift_release();
  }
  v55(v11, v4);
  v74 = *(float *)(v2 + 476);
  if (v74 < 0.0)
  {
    swift_release();
    return 0;
  }
  if (qword_25692D328 != -1)
    swift_once();
  v75 = *(float *)&dword_25692FDF8;
  swift_release();
  return v74 < v75;
}

uint64_t sub_23929F4D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  void (*v11)(double *__return_ptr, uint64_t);
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _DWORD v20[4];
  double v21;
  double v22;
  double v23;
  double v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  char v33;
  char v34;
  double v35[5];
  int v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  unsigned __int8 v43;
  char v44;
  char v45;

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23929EDC0(a1);
  swift_beginAccess();
  *(_BYTE *)(v2 + 67) = v8;
  v9 = sub_23929EB18(a1);
  swift_beginAccess();
  sub_23934AB60(v9);
  v10 = swift_endAccess();
  v11 = *(void (**)(double *__return_ptr, uint64_t))(*(_QWORD *)v2 + 448);
  v11(v35, v10);
  v20[2] = LODWORD(v35[0]);
  v21 = v35[1];
  v22 = v35[2];
  v23 = v35[3];
  v24 = v35[4];
  v25 = v36;
  v26 = v37;
  v27 = v38;
  v28 = v39;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v33 = v44;
  v34 = v45;
  v12 = j___s6CoreOC14CaptureFactorsV023focusPixelBlurScorePostC11CheckPassedSbvg();
  swift_beginAccess();
  sub_23934A90C(v12 & 1);
  v13 = swift_endAccess();
  v14 = ((_QWORD *(*)(double *__return_ptr, uint64_t))v11)(v35, v13);
  if (v43 == 1)
  {
    v15 = sub_239275C74();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    swift_retain();
    v16 = sub_239352098();
    v17 = sub_239352578();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134349056;
      v35[0] = *(float *)(v2 + 488);
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v16, v17, "postCaptureCheck: focus pixel blur score = %{public}f", v18, 0xCu);
      MEMORY[0x23B83BC04](v18, -1, -1);

    }
    else
    {

      swift_release();
    }
    v14 = (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11(v35, (uint64_t)v14);
  return v43;
}

uint64_t sub_23929F78C(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  char *v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t (*v22)(char *);
  char v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  double v26;
  char *v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  uint64_t (*v31)(char *);
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  _OWORD v37[4];
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v7 = type metadata accessor for VIOPoseNode(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OCObjectCentricPoseNode(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239268764(a3, (uint64_t)v37, &qword_25692A8A0);
  if ((v38 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    v17 = *a2;
    v18 = (char *)a2 + *(int *)(type metadata accessor for OCCaptureData(0) + 40);
    v20 = *((_OWORD *)v18 + 2);
    v19 = *((__n128 *)v18 + 3);
    v21 = *((_OWORD *)v18 + 1);
    v39 = *(_OWORD *)v18;
    v40 = v21;
    v41 = v20;
    sub_239346BBC((uint64_t)v13, &v39, (uint64_t)v9, v17, v19, *((__n128 *)v18 + 4), *((__n128 *)v18 + 5), *((__n128 *)v18 + 6));
    v22 = *(uint64_t (**)(char *))(**(_QWORD **)(v3 + 72) + 144);
    swift_retain();
    v23 = v22(v9);
    swift_release();
    v24 = type metadata accessor for VIOPoseNode;
    v25 = (uint64_t)v9;
  }
  else
  {
    v35 = (__n128)v37[1];
    v36 = (__n128)v37[0];
    v34 = (__n128)v37[2];
    v33 = (__n128)v37[3];
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    v26 = *a2;
    v27 = (char *)a2 + *(int *)(type metadata accessor for OCCaptureData(0) + 40);
    v28 = *((_OWORD *)v27 + 2);
    v29 = *((__n128 *)v27 + 3);
    v30 = *((_OWORD *)v27 + 1);
    v39 = *(_OWORD *)v27;
    v40 = v30;
    v41 = v28;
    sub_239346A88((uint64_t)v13, &v39, (uint64_t)v16, v26, v36, v35, v34, v33, v29, *((__n128 *)v27 + 4), *((__n128 *)v27 + 5), *((__n128 *)v27 + 6));
    v31 = *(uint64_t (**)(char *))(**(_QWORD **)(v3 + 72) + 136);
    swift_retain();
    v23 = v31(v16);
    swift_release();
    v24 = type metadata accessor for OCObjectCentricPoseNode;
    v25 = (uint64_t)v16;
  }
  sub_2392688AC(v25, v24);
  return v23 & 1;
}

BOOL sub_23929FA00(uint64_t a1, double a2, double a3, double a4, float32x4_t a5, double a6, double a7, double a8, float32x4_t a9)
{
  uint64_t v9;
  int32x4_t v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x4_t v14;
  int32x4_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x4_t v18;
  float v19;
  float v20;
  _BOOL8 result;
  float32x4_t v22;
  int8x16_t v23;
  float v24;

  v11 = (int32x4_t)vmulq_f32(a5, a5);
  v11.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), vadd_f32(*(float32x2_t *)v11.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1))).u32[0];
  v12 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  v13 = vmul_f32(v12, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v12, v12)));
  v14 = vmulq_n_f32(a5, vmul_f32(v13, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v13, v13))).f32[0]);
  v15 = (int32x4_t)vmulq_f32(a9, a9);
  v15.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v15, 2), vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v15.i8, 1))).u32[0];
  v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
  v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
  v18 = vmulq_f32(v14, vmulq_n_f32(a9, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]));
  v19 = sub_2392DF050(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v18, 2), vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.f32, 1))).f32[0], -1.0, 1.0);
  v20 = acosf(v19);
  result = 0;
  v22 = vsubq_f32(a5, a9);
  v23 = (int8x16_t)vmulq_f32(v22, v22);
  v24 = sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL))));
  *(float *)a1 = v20;
  *(_BYTE *)(a1 + 4) = 0;
  *(float *)(a1 + 8) = v24;
  *(_BYTE *)(a1 + 12) = 0;
  if (*(float *)(v9 + 200) >= v20)
    return v24 <= 0.1 || *(float *)(v9 + 204) >= v20;
  return result;
}

BOOL sub_23929FB18(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9)
{
  uint64_t v9;
  _BOOL8 result;
  float32x4_t v12;
  int8x16_t v18;
  float32x4_t v19;
  int8x16_t v20;
  float v21;

  result = 0;
  v12 = vmlaq_f32(vmulq_f32(a2, (float32x4_t)0), (float32x4_t)0, a3);
  __asm { FMOV            V1.4S, #-1.0 }
  v18 = (int8x16_t)vmulq_f32(vmlaq_f32(vmlaq_f32(v12, _Q1, a4), (float32x4_t)0, a5), vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(a6, (float32x4_t)0), (float32x4_t)0, a7), _Q1, a8), (float32x4_t)0, a9));
  _Q1.f32[0] = vaddv_f32(vadd_f32(*(float32x2_t *)v18.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL)));
  v19 = vsubq_f32(a5, a9);
  v20 = (int8x16_t)vmulq_f32(v19, v19);
  v21 = sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v20.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v20, v20, 8uLL))));
  *(_DWORD *)(a1 + 16) = _Q1.i32[0];
  *(_BYTE *)(a1 + 20) = 0;
  *(float *)(a1 + 24) = v21;
  *(_BYTE *)(a1 + 28) = 0;
  if (_Q1.f32[0] >= *(float *)(v9 + 216))
    return *(float *)(v9 + 212) >= v21;
  return result;
}

uint64_t sub_23929FB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22[5];
  float v23;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = v6 + v7;
  if (__OFADD__(v6, v7))
  {
    __break(1u);
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 104);
  v11 = __OFADD__(v9, v10);
  v12 = v9 + v10;
  if (v11)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v13 = (float)v12 / (float)v8;
  swift_beginAccess();
  *(float *)(v0 + 56) = v13;
  v14 = sub_239275C74();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v14, v1);
  swift_retain();
  v15 = sub_239352098();
  v16 = sub_239352578();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (_DWORD *)swift_slowAlloc();
    v21 = *(double *)&v8;
    v18 = v17;
    *v17 = 134350336;
    v22[0] = *(double *)(v0 + 80);
    sub_2393526B0();
    *((_WORD *)v18 + 6) = 2050;
    v22[0] = *(double *)(v0 + 96);
    sub_2393526B0();
    *((_WORD *)v18 + 11) = 2050;
    v22[0] = *(double *)(v0 + 88);
    sub_2393526B0();
    *((_WORD *)v18 + 16) = 2050;
    v22[0] = *(double *)(v0 + 104);
    v19 = sub_2393526B0();
    *((_WORD *)v18 + 21) = 2050;
    (*(void (**)(double *__return_ptr, uint64_t))(*(_QWORD *)v0 + 448))(v22, v19);
    v22[0] = v23;
    sub_2393526B0();
    swift_release();
    *((_WORD *)v18 + 26) = 2050;
    v22[0] = v21;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v15, v16, "CaptureStats: Automatic shots attempted = %{public}ld and captured = %{public}ld | Manual shots attempted = %{public}ld and captured = %{public}ld | Shot acceptance rate = %{public}f with attempt count = %{public}ld", (uint8_t *)v18, 0x3Eu);
    MEMORY[0x23B83BC04](v18, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_23929FE14()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 112);
}

uint64_t sub_23929FE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t sub_23929FE80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v11[2];

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239275C74();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134349056;
    v11[1] = *(_QWORD *)(v1 + 224);
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v7, v8, "Pre-check passed at timestamp = %{public}f", v9, 0xCu);
    MEMORY[0x23B83BC04](v9, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23929FFD4()
{
  uint64_t result;
  int v1;

  result = sub_239263D30();
  if ((result & 0x100000000) != 0)
    v1 = 1051931443;
  else
    v1 = result;
  dword_25692FDF8 = v1;
  return result;
}

uint64_t sub_2392A0000()
{
  uint64_t v0;
  uint64_t v2[20];

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_239268764(v0 + 272, (uint64_t)v2, &qword_256928850);
  sub_2392A0090(v2);
  swift_release();
  return v0;
}

uint64_t sub_2392A0070()
{
  sub_2392A0000();
  return swift_deallocClassInstance();
}

uint64_t *sub_2392A0090(uint64_t *a1)
{
  sub_2392A00F0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

uint64_t sub_2392A00F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  result = a12;
  if (a12 != 1)
    return sub_2392A0118(a12);
  return result;
}

uint64_t sub_2392A0118(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for CaptureManager()
{
  return objc_opt_self();
}

uint64_t destroy for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 88);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 96);
    v7 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 88) = v5;
    *(_QWORD *)(a1 + 96) = v6;
    v8 = *(_QWORD *)(a2 + 112);
    v9 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 104) = v7;
    *(_QWORD *)(a1 + 112) = v8;
    v10 = *(_QWORD *)(a2 + 128);
    v11 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 120) = v9;
    *(_QWORD *)(a1 + 128) = v10;
    v12 = *(_QWORD *)(a2 + 144);
    v13 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 144) = v12;
    *(_QWORD *)(a1 + 152) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v14;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    v15 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v15;
  }
  return a1;
}

uint64_t assignWithCopy for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v4 = a1 + 88;
  v5 = *(_QWORD *)(a1 + 88);
  v7 = a2 + 88;
  v6 = *(_QWORD *)(a2 + 88);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 88) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2392A0570(v4);
      *(_OWORD *)v4 = *(_OWORD *)v7;
      v9 = *(_OWORD *)(v7 + 32);
      v8 = *(_OWORD *)(v7 + 48);
      v10 = *(_OWORD *)(v7 + 16);
      *(_QWORD *)(v4 + 64) = *(_QWORD *)(v7 + 64);
      *(_OWORD *)(v4 + 32) = v9;
      *(_OWORD *)(v4 + 48) = v8;
      *(_OWORD *)(v4 + 16) = v10;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)v7;
    v11 = *(_OWORD *)(a2 + 104);
    v12 = *(_OWORD *)(a2 + 120);
    v13 = *(_OWORD *)(a2 + 136);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a2 + 152);
    *(_OWORD *)(v4 + 32) = v12;
    *(_OWORD *)(v4 + 48) = v13;
    *(_OWORD *)(v4 + 16) = v11;
  }
  return a1;
}

uint64_t sub_2392A0570(uint64_t a1)
{
  destroy for OCDepthPointCloud();
  return a1;
}

__n128 initializeWithTake for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v5 = a1 + 88;
  v7 = a2 + 88;
  v6 = *(_QWORD *)(a2 + 88);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_5;
  if (!v6)
  {
    sub_2392A0570(v5);
LABEL_5:
    v9 = *(_OWORD *)(v7 + 48);
    *(_OWORD *)(v5 + 32) = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(v5 + 48) = v9;
    *(_QWORD *)(v5 + 64) = *(_QWORD *)(v7 + 64);
    v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v10;
    return a1;
  }
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)(result + 88) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureManager.DepthWarpMotionScoreMetadata()
{
  return &type metadata for CaptureManager.DepthWarpMotionScoreMetadata;
}

uint64_t sub_2392A07C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2392A07EC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 169) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_2392A0838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2392A0848()
{
  return swift_release();
}

unint64_t sub_2392A0850()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25692A8E0;
  if (!qword_25692A8E0)
  {
    v1 = sub_239352170();
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_25692A8E0);
  }
  return result;
}

unint64_t sub_2392A0898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25692A8F0;
  if (!qword_25692A8F0)
  {
    v1 = sub_239262518((uint64_t *)&unk_2569281F0);
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25692A8F0);
  }
  return result;
}

uint64_t sub_2392A08E4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 168) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_2392A0930()
{
  return sub_23929E99C();
}

uint64_t sub_2392A0938()
{
  return sub_23929E820();
}

unint64_t sub_2392A0940()
{
  unint64_t result;

  result = qword_25692BD60;
  if (!qword_25692BD60)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureSession.Frame.Feedback, &type metadata for ObjectCaptureSession.Frame.Feedback);
    atomic_store(result, (unint64_t *)&qword_25692BD60);
  }
  return result;
}

unint64_t sub_2392A09A0()
{
  unint64_t result;

  result = sub_2392A09C4((uint64_t)&unk_250AC4DF8);
  qword_25692D338 = result;
  return result;
}

unint64_t sub_2392A09C4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_2569295A8);
  v2 = (_QWORD *)sub_239352878();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 40);
  while (1)
  {
    v5 = *((_BYTE *)v4 - 8);
    v6 = *v4;
    result = sub_2392C00F0(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2392A0ABC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_256929510);
  v2 = sub_239352878();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23926059C(v6, (uint64_t)v15, &qword_256929518);
    result = sub_23929C1EC((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_23925FDD4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_2392A0BFC()
{
  qword_25692D348 = (uint64_t)&unk_250AC4E88;
}

unint64_t sub_2392A0C10()
{
  unint64_t result;

  result = sub_2392C289C((uint64_t)&unk_250AC4F08, &qword_2569295F0);
  qword_25692D358 = result;
  return result;
}

uint64_t sub_2392A0C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int v13;
  uint64_t MaxPolyCount;
  uint64_t MaxTextureResolution;
  unint64_t v16;
  char *v17;
  int TextureFormat;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[20];

  LODWORD(v29) = a5;
  v28 = a4;
  v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[17] = 0;
  v32[18] = 0xE000000000000000;
  sub_239268820(a1, (uint64_t)v8, v9);
  v10 = sub_23925FB08(&qword_256928730);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 3, v10))
  {
    v11 = v8[*(int *)(v10 + 48)];
    sub_239268764((uint64_t)&v8[*(int *)(v10 + 64)], (uint64_t)v32, &qword_256928738);
    sub_239352380();
    __asm { BR              X9 }
  }
  LODWORD(v27) = 0;
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v26 = 0xD00000000000001ALL;
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v32[0];
  v13 = v27;
  if (!v28)
    v13 = 0;
  if (v13 == 1)
  {
    v23 = v32[0];
    v24 = v32[1];
    MaxPolyCount = CPGOutputModelOptionsGetMaxPolyCount();
    v32[0] = 0;
    v32[1] = 0xE000000000000000;
    sub_2393527C4();
    swift_bridgeObjectRelease();
    strcpy((char *)v32, "maxPolyCount: ");
    HIBYTE(v32[1]) = -18;
    v30 = MaxPolyCount;
    sub_2393528C0();
    sub_239352380();
    swift_bridgeObjectRelease();
    v22[2] = v32[0];
    v22[3] = v32[1];
    MaxTextureResolution = CPGOutputModelOptionsGetMaxTextureResolution();
    v32[0] = 0;
    v32[1] = 0xE000000000000000;
    sub_2393527C4();
    swift_bridgeObjectRelease();
    v32[0] = 0xD000000000000013;
    v32[1] = 0x800000023935CC30;
    v30 = MaxTextureResolution;
    sub_2393528C0();
    sub_239352380();
    swift_bridgeObjectRelease();
    v16 = 0;
    v22[0] = v32[0];
    v22[1] = v32[1];
    v17 = (char *)&unk_250AC4FD8;
    v32[0] = 0xD000000000000021;
    v32[1] = 0x800000023935CC50;
    v27 = 0x800000023935CCA0;
    v26 = 0x800000023935CCC0;
    v25 = 0x800000023935CC80;
    do
    {
      swift_bridgeObjectRetain();
      CPGOutputModelOptionsGetTextureDestination();
      TextureFormat = CPGOutputModelOptionsGetTextureFormat();
      v19 = 1735290926;
      if (TextureFormat)
        v19 = 0;
      if (TextureFormat == 1)
        v19 = 0x6765706A2ELL;
      if (TextureFormat == 2)
        v19 = 1920492846;
      v29 = v19;
      CPGOutputModelOptionsGetTextureLossyCompressionQuality();
      v30 = v32[0];
      v31 = v32[1];
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v21 = v30;
      v20 = v31;
      v30 = 0;
      v31 = 0xE000000000000000;
      sub_2393527C4();
      sub_239352380();
      sub_2393524E8();
      v30 = v21;
      v31 = v20;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32[0] = v30;
      v32[1] = v31;
      if (v16 <= 3)
        sub_239352380();
      ++v16;
      v17 += 16;
    }
    while (v16 != 5);
    swift_arrayDestroy();
    sub_239352380();
    v30 = v23;
    v31 = v24;
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v30;
  }
  return result;
}

void sub_2392A1808()
{
  sub_239352380();
  JUMPOUT(0x2392A0DECLL);
}

uint64_t sub_2392A1828(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_bridgeObjectRetain_n();
  v9 = sub_239352098();
  v10 = sub_23935256C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v16 = a1;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v18 = v13;
    *(_DWORD *)v12 = 136380675;
    swift_bridgeObjectRetain();
    v17 = sub_23925F3EC(v16, a2, &v18);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v9, v10, "Backend Manager.%{private}s failed to capture the instance!", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v13, -1, -1);
    MEMORY[0x23B83BC04](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2392A19F0(unsigned __int8 *a1)
{
  unsigned __int8 v3;
  unsigned int v4;

  v3 = *a1;
  v4 = a1[1];
  type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_2392A1A78((uint64_t)a1);
  return v3 | ((unint64_t)v4 << 32);
}

uint64_t sub_2392A1A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t MaxPolyCount;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t MaxTextureResolution;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  int64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t i;
  Swift::UInt v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  char isUniquelyReferenced_nonNull_native;
  char v59;
  unint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t result;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int64_t v81;
  __int128 v82;
  unint64_t v83;
  unint64_t v84;
  int64_t v85;
  unint64_t v86;
  int64_t v87;
  Swift::UInt v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  NSObject *v93;
  uint64_t v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  _QWORD v106[2];
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118[6];

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v106[0] = (char *)v106 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v114 = (char *)v106 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v106 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v106 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v106 - v18;
  v20 = *(_QWORD *)(a1 + 8);
  LODWORD(v110) = *(unsigned __int8 *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  LODWORD(v108) = *(unsigned __int8 *)(a1 + 36);
  v22 = CPGOutputModelOptionsCreate();
  v113 = v1;
  *(_QWORD *)(v1 + 16) = v22;
  if (!v22)
  {
    v72 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v72, v3);
    v73 = sub_239352098();
    v74 = sub_23935256C();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_23925B000, v73, v74, "Function to create output model options returned nil", v75, 2u);
      MEMORY[0x23B83BC04](v75, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  sub_2392DCD20(v118);
  v23 = sub_2392DF050((float)v20, (float)v118[4], (float)v118[3]);
  if ((~LODWORD(v23) & 0x7F800000) == 0)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if (v23 <= -9.2234e18)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v23 >= 9.2234e18)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v24 = (uint64_t)v23;
  v115 = v3;
  v112 = v4;
  if (v20 != (uint64_t)v23)
  {
    v25 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v19, v25, v3);
    v26 = sub_239352098();
    v27 = sub_23935256C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      *(_DWORD *)v28 = 134349312;
      v118[0] = v20;
      sub_2393526B0();
      *(_WORD *)(v28 + 12) = 2050;
      v118[0] = v24;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v26, v27, "Clamped max poly count: %{public}ld to device limit. %{public}ld is used.", (uint8_t *)v28, 0x16u);
      v29 = v28;
      v3 = v115;
      MEMORY[0x23B83BC04](v29, -1, -1);
    }

    v4 = v112;
    (*(void (**)(char *, uint64_t))(v112 + 8))(v19, v3);
  }
  if (CPGOutputModelOptionsSetMaxPolyCount())
  {
    MaxPolyCount = CPGOutputModelOptionsGetMaxPolyCount();
    v31 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v17, v31, v3);
    v32 = sub_239352098();
    v33 = sub_23935256C();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      *(_DWORD *)v34 = 134349312;
      v118[0] = v20;
      sub_2393526B0();
      *(_WORD *)(v34 + 12) = 2050;
      v118[0] = MaxPolyCount;
      v3 = v115;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v32, v33, "Error setting max poly count: %{public}ld to output model options for custom detail level, %{public}ld is used.", (uint8_t *)v34, 0x16u);
      v35 = v34;
      v4 = v112;
      MEMORY[0x23B83BC04](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
  }
  v36 = v110;
  LOBYTE(v118[0]) = v110;
  if ((PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.rawValue.getter() & 0x8000000000000000) == 0)
  {
    if (!CPGOutputModelOptionsSetMaxTextureResolution())
    {
LABEL_19:
      v43 = sub_2392C289C((uint64_t)&unk_250AC5020, &qword_2569295F8);
      v44 = v43;
      v45 = v43 + 64;
      v46 = 1 << *(_BYTE *)(v43 + 32);
      v47 = -1;
      if (v46 < 64)
        v47 = ~(-1 << v46);
      v48 = v47 & *(_QWORD *)(v43 + 64);
      v49 = (unint64_t)(v46 + 63) >> 6;
      v50 = 0;
      v51 = swift_bridgeObjectRetain();
      v111 = v21;
      v109 = v45;
      if (!v48)
        goto LABEL_25;
LABEL_22:
      v52 = __clz(__rbit64(v48));
      v48 &= v48 - 1;
      for (i = v52 | (v50 << 6); ; i = __clz(__rbit64(v56)) + (v50 << 6))
      {
        v54 = *(_QWORD *)(*(_QWORD *)(v44 + 48) + 8 * i);
        PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.init(rawValue:)(v54);
        v116 = v21;
        v117 = v118[0];
        sub_2392C296C();
        if ((sub_23935271C() & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v118[0] = v51;
          v60 = sub_2392C01BC(v54);
          v61 = *(_QWORD *)(v51 + 16);
          v62 = (v59 & 1) == 0;
          v63 = v61 + v62;
          if (__OFADD__(v61, v62))
            goto LABEL_97;
          v64 = v59;
          if (*(_QWORD *)(v51 + 24) >= v63)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_2392C140C();
          }
          else
          {
            sub_2392C0354(v63, isUniquelyReferenced_nonNull_native);
            v65 = sub_2392C01BC(v54);
            if ((v64 & 1) != (v66 & 1))
              goto LABEL_105;
            v60 = v65;
          }
          v21 = v111;
          v51 = v118[0];
          if ((v64 & 1) != 0)
          {
            *(_DWORD *)(*(_QWORD *)(v118[0] + 56) + 4 * v60) = 1;
          }
          else
          {
            *(_QWORD *)(v118[0] + 8 * (v60 >> 6) + 64) |= 1 << v60;
            *(_QWORD *)(*(_QWORD *)(v51 + 48) + 8 * v60) = v54;
            *(_DWORD *)(*(_QWORD *)(v51 + 56) + 4 * v60) = 1;
            v67 = *(_QWORD *)(v51 + 16);
            v68 = __OFADD__(v67, 1);
            v69 = v67 + 1;
            if (v68)
              goto LABEL_102;
            *(_QWORD *)(v51 + 16) = v69;
          }
          swift_bridgeObjectRelease();
          v3 = v115;
          v45 = v109;
          if (v48)
            goto LABEL_22;
        }
        else if (v48)
        {
          goto LABEL_22;
        }
LABEL_25:
        v55 = v50 + 1;
        if (__OFADD__(v50, 1))
        {
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
          goto LABEL_98;
        }
        if (v55 >= v49)
          goto LABEL_55;
        v56 = *(_QWORD *)(v45 + 8 * v55);
        ++v50;
        if (!v56)
        {
          v50 = v55 + 1;
          if (v55 + 1 >= v49)
            goto LABEL_55;
          v56 = *(_QWORD *)(v45 + 8 * v50);
          if (!v56)
          {
            v50 = v55 + 2;
            if (v55 + 2 >= v49)
              goto LABEL_55;
            v56 = *(_QWORD *)(v45 + 8 * v50);
            if (!v56)
            {
              v50 = v55 + 3;
              if (v55 + 3 >= v49)
                goto LABEL_55;
              v56 = *(_QWORD *)(v45 + 8 * v50);
              if (!v56)
              {
                v50 = v55 + 4;
                if (v55 + 4 >= v49)
                  goto LABEL_55;
                v56 = *(_QWORD *)(v45 + 8 * v50);
                if (!v56)
                {
                  v57 = v55 + 5;
                  if (v57 >= v49)
                  {
LABEL_55:
                    swift_release();
                    if ((v108 & 1) != 0)
                    {
                      LODWORD(v111) = 0;
                      v70 = 0xE300000000000000;
                      v71 = 6778480;
                    }
                    else
                    {
                      LODWORD(v111) = 1;
                      v70 = 0xE400000000000000;
                      v71 = 1734701162;
                    }
                    v108 = v71;
                    v77 = v51 + 64;
                    v78 = 1 << *(_BYTE *)(v51 + 32);
                    v79 = -1;
                    if (v78 < 64)
                      v79 = ~(-1 << v78);
                    v80 = v79 & *(_QWORD *)(v51 + 64);
                    v115 = (unint64_t)(v78 + 63) >> 6;
                    swift_bridgeObjectRetain();
                    v81 = 0;
                    *(_QWORD *)&v82 = 136446466;
                    v107 = v82;
                    v106[1] = MEMORY[0x24BEE4AD8] + 8;
                    v109 = v51 + 64;
                    v110 = v51;
                    while (1)
                    {
                      if (v80)
                      {
                        v83 = __clz(__rbit64(v80));
                        v80 &= v80 - 1;
                        v84 = v83 | (v81 << 6);
                      }
                      else
                      {
                        v85 = v81 + 1;
                        if (__OFADD__(v81, 1))
                          goto LABEL_95;
                        if (v85 >= v115)
                        {
LABEL_91:
                          swift_bridgeObjectRelease();
                          swift_release();
                          swift_bridgeObjectRelease();
                          v100 = sub_239275AB0();
                          v101 = v112;
                          v102 = v106[0];
                          (*(void (**)(_QWORD, uint64_t, uint64_t))(v112 + 16))(v106[0], v100, v3);
                          v103 = sub_239352098();
                          v104 = sub_239352578();
                          if (os_log_type_enabled(v103, v104))
                          {
                            v105 = (uint8_t *)swift_slowAlloc();
                            *(_WORD *)v105 = 0;
                            _os_log_impl(&dword_23925B000, v103, v104, "Finished populating custom detail output model option.", v105, 2u);
                            MEMORY[0x23B83BC04](v105, -1, -1);
                          }

                          return (*(uint64_t (**)(uint64_t, uint64_t))(v101 + 8))(v102, v3);
                        }
                        v86 = *(_QWORD *)(v77 + 8 * v85);
                        ++v81;
                        if (!v86)
                        {
                          v81 = v85 + 1;
                          if (v85 + 1 >= v115)
                            goto LABEL_91;
                          v86 = *(_QWORD *)(v77 + 8 * v81);
                          if (!v86)
                          {
                            v81 = v85 + 2;
                            if (v85 + 2 >= v115)
                              goto LABEL_91;
                            v86 = *(_QWORD *)(v77 + 8 * v81);
                            if (!v86)
                            {
                              v87 = v85 + 3;
                              if (v87 >= v115)
                                goto LABEL_91;
                              v86 = *(_QWORD *)(v77 + 8 * v87);
                              if (!v86)
                              {
                                while (1)
                                {
                                  v81 = v87 + 1;
                                  if (__OFADD__(v87, 1))
                                    goto LABEL_96;
                                  if (v81 >= v115)
                                    goto LABEL_91;
                                  v86 = *(_QWORD *)(v77 + 8 * v81);
                                  ++v87;
                                  if (v86)
                                    goto LABEL_81;
                                }
                              }
                              v81 = v87;
                            }
                          }
                        }
LABEL_81:
                        v80 = (v86 - 1) & v86;
                        v84 = __clz(__rbit64(v86)) + (v81 << 6);
                      }
                      v88 = *(_QWORD *)(*(_QWORD *)(v51 + 48) + 8 * v84);
                      if (qword_25692D350 != -1)
                        swift_once();
                      if (*(_QWORD *)(qword_25692D358 + 16))
                      {
                        sub_2392C01BC(v88);
                        if ((v89 & 1) != 0
                          && (CPGOutputModelOptionsSetTextureFormat()
                           || CPGOutputModelOptionsSetTextureLossyCompressionQuality()
                           || CPGOutputModelOptionsSetTextureDestination()))
                        {
                          v90 = sub_239275AB0();
                          v91 = v112;
                          v92 = v114;
                          (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v114, v90, v3);
                          swift_bridgeObjectRetain_n();
                          v93 = sub_239352098();
                          v94 = v3;
                          v95 = sub_23935256C();
                          if (os_log_type_enabled(v93, v95))
                          {
                            v96 = swift_slowAlloc();
                            v97 = swift_slowAlloc();
                            v118[0] = v97;
                            *(_DWORD *)v96 = v107;
                            PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.init(rawValue:)(v88);
                            v116 = v117;
                            v98 = sub_23935232C();
                            *(_QWORD *)(v96 + 4) = sub_23925F3EC(v98, v99, v118);
                            swift_bridgeObjectRelease();
                            *(_WORD *)(v96 + 12) = 2082;
                            swift_bridgeObjectRetain();
                            *(_QWORD *)(v96 + 14) = sub_23925F3EC(v108, v70, v118);
                            swift_bridgeObjectRelease_n();
                            _os_log_impl(&dword_23925B000, v93, v95, "Error setting texture format %{public}s to %{public}s for custom detail level!", (uint8_t *)v96, 0x16u);
                            swift_arrayDestroy();
                            MEMORY[0x23B83BC04](v97, -1, -1);
                            MEMORY[0x23B83BC04](v96, -1, -1);

                            (*(void (**)(char *, uint64_t))(v91 + 8))(v114, v94);
                          }
                          else
                          {

                            swift_bridgeObjectRelease_n();
                            (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v94);
                          }
                          v3 = v94;
                          v77 = v109;
                          v51 = v110;
                        }
                      }
                    }
                  }
                  v56 = *(_QWORD *)(v45 + 8 * v57);
                  if (!v56)
                  {
                    while (1)
                    {
                      v50 = v57 + 1;
                      if (__OFADD__(v57, 1))
                        goto LABEL_103;
                      if (v50 >= v49)
                        goto LABEL_55;
                      v56 = *(_QWORD *)(v45 + 8 * v50);
                      ++v57;
                      if (v56)
                        goto LABEL_54;
                    }
                  }
                  v50 = v57;
                }
              }
            }
          }
        }
LABEL_54:
        v48 = (v56 - 1) & v56;
      }
    }
    MaxTextureResolution = CPGOutputModelOptionsGetMaxTextureResolution();
    v38 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v38, v3);
    v39 = sub_239352098();
    v40 = sub_23935256C();
    if (!os_log_type_enabled(v39, v40))
    {
LABEL_18:

      (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
      goto LABEL_19;
    }
    v41 = swift_slowAlloc();
    *(_DWORD *)v41 = 134349312;
    LOBYTE(v118[0]) = v36;
    v42 = PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.rawValue.getter();
    if ((v42 & 0x8000000000000000) == 0)
    {
      v118[0] = v42;
      sub_2393526B0();
      *(_WORD *)(v41 + 12) = 2050;
      v118[0] = MaxTextureResolution;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v39, v40, "Error setting texture dimension: %{public}ld to output model options for custom detail level, %{public}ld is used.", (uint8_t *)v41, 0x16u);
      MEMORY[0x23B83BC04](v41, -1, -1);
      v4 = v112;
      goto LABEL_18;
    }
    goto LABEL_104;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392A26A8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;

  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1[8];
  if (!*(_QWORD *)(v42 + 16))
  {
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v24 = 0xD000000000000025;
    v25 = 0x800000023935C680;
LABEL_23:
    *(_QWORD *)(v24 + 8) = v25;
    *(_BYTE *)(v24 + 16) = 5;
    swift_willThrow();
    return v43;
  }
  v9 = *a1;
  v10 = a1[2];
  v40 = a1[1];
  v41 = v10;
  v11 = a1[4];
  v12 = a1[5];
  if ((a2 & 1) != 0)
    v13 = 34;
  else
    v13 = 22;
  v38 = a1[6];
  v39 = v11;
  v36 = a1[7];
  v37 = v12;
  result = CPGDepthPointCloudCreateWithSensorConfig();
  v43 = result;
  if (!result)
  {
    v44 = 0;
    v45 = 0xE000000000000000;
    sub_2393527C4();
    sub_239352380();
    v46 = v13;
    sub_2393528C0();
    sub_239352380();
    swift_bridgeObjectRelease();
    v26 = v44;
    v25 = v45;
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v24 = v26;
    goto LABEL_23;
  }
  v27[1] = v2;
  v35 = *(_QWORD *)(v9 + 16);
  if (!v35)
    return v43;
  v16 = 0;
  v33 = v39 + 32;
  v34 = v9 + 32;
  v31 = v37 + 32;
  v32 = v38 + 32;
  v29 = v42 + 32;
  v30 = v36 + 32;
  *(_QWORD *)&v15 = 134349056;
  v28 = v15;
  while (v16 < *(_QWORD *)(v41 + 16))
  {
    if (v16 >= *(_QWORD *)(v40 + 16))
      goto LABEL_26;
    if (v16 >= *(_QWORD *)(v39 + 16))
      goto LABEL_27;
    if (v16 >= *(_QWORD *)(v38 + 16))
      goto LABEL_28;
    if (v16 >= *(_QWORD *)(v37 + 16))
      goto LABEL_29;
    if (v16 >= *(_QWORD *)(v36 + 16))
      goto LABEL_30;
    if (v16 >= *(_QWORD *)(v42 + 16))
      goto LABEL_31;
    result = CPGDepthPointCloudAddPoint();
    if ((_DWORD)result)
    {
      v17 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
      v18 = v8;
      v19 = sub_239352098();
      v20 = sub_23935256C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = v5;
        v22 = swift_slowAlloc();
        *(_DWORD *)v22 = v28;
        *(_QWORD *)(v22 + 4) = v16;
        _os_log_impl(&dword_23925B000, v19, v20, "Failed to add point %{public}ld in LiDAR point cloud", (uint8_t *)v22, 0xCu);
        v23 = v22;
        v5 = v21;
        MEMORY[0x23B83BC04](v23, -1, -1);
      }

      v8 = v18;
      result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v18, v5);
    }
    if (v35 == ++v16)
      return v43;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2392A2A78(uint64_t a1, NSObject *a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  float32x4_t *v47;
  uint64_t v48;
  uint64_t v49;
  float32x4_t *v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  unsigned int (*v63)(int *, uint64_t, uint64_t);
  int v64;
  float64_t v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  void *v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  os_log_type_t v79;
  uint8_t *v80;
  NSObject *v81;
  void *v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  NSObject *v95;
  char *v96;
  double *v97;
  uint64_t v98;
  _QWORD *v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  float64_t v106;
  uint64_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  uint64_t v112;
  uint64_t v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  float64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  void *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*isa)(char *);
  char *v129;
  double *v130;
  os_log_type_t v131;
  uint8_t *v132;
  float64_t v133;
  int v134;
  char *v135;
  uint64_t v136;
  double *v137;
  os_log_type_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  float64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t NumberOfPoints;
  uint64_t v146;
  char *v147;
  os_log_type_t v148;
  uint8_t *v149;
  NSObject *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  NSObject *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  float32x4_t v164;
  float32x4_t v165;
  float32x4_t v166;
  float32x4_t v167;
  double *v168;
  double *v169;
  uint64_t v170;
  os_log_type_t v171;
  uint8_t *v172;
  uint64_t v173;
  float64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(uint64_t, uint64_t, uint64_t);
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  double *v185;
  NSObject *v186;
  os_log_type_t v187;
  _DWORD *v188;
  _DWORD *v189;
  float64_t v190;
  NSObject *v191;
  double *v192;
  os_log_type_t v193;
  _DWORD *v194;
  _DWORD *v195;
  float64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  float32x4_t v202;
  float32x4_t v203;
  float32x4_t v204;
  float32x4_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  double *v209;
  char *v210;
  uint64_t v211;
  double *v212;
  double *v213;
  double *v214;
  NSObject *v215;
  char *v216;
  NSObject *v217;
  double *v218;
  char *v219;
  NSObject *v220;
  char *v221;
  _QWORD *v222;
  NSObject *v223;
  uint64_t v224;
  double *v225;
  char *v226;
  uint64_t v227;
  NSObject *v228;
  float64_t v229;
  int *v230;
  uint64_t v231;
  float64x2_t v232;
  float64x2_t v233;
  float64x2_t v234;
  float64x2_t v235;
  float64x2_t v236;
  float64x2_t v237;
  float64x2_t v238;
  float64x2_t v239;
  float64x2_t v240[8];
  float64x2_t v241[8];
  float64x2_t v242[8];
  uint64_t v243;
  uint64_t v244;
  _BYTE v245[144];
  float64x2_t v246;
  float64x2_t v247;
  float64x2_t v248;
  float64x2_t v249;
  float64x2_t v250;
  float64x2_t v251;
  float64x2_t v252;
  float64x2_t v253;
  NSObject *v254;
  uint64_t v255;

  LODWORD(v224) = a3;
  v220 = a2;
  v255 = *MEMORY[0x24BDAC8D0];
  v230 = (int *)type metadata accessor for PhotogrammetrySample(0);
  v5 = MEMORY[0x24BDAC7A8](v230);
  v213 = (double *)((char *)&v198 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v209 = (double *)((char *)&v198 - v8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v218 = (double *)((char *)&v198 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v212 = (double *)((char *)&v198 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v222 = (uint64_t *)((char *)&v198 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v225 = (double *)((char *)&v198 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v214 = (double *)((char *)&v198 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v227 = (uint64_t)&v198 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v198 - v21);
  v23 = sub_2393520B0();
  v228 = *(NSObject **)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v217 = ((char *)&v198 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v24);
  v215 = ((char *)&v198 - v27);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v221 = (char *)&v198 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v210 = (char *)&v198 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v216 = (char *)&v198 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)&v229 = (char *)&v198 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v226 = (char *)&v198 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v219 = (char *)&v198 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v41 = ((char *)&v198 - v40);
  v42 = sub_23925FB08(&qword_256927628);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v211 = (uint64_t)&v198 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = (float32x4_t *)((char *)&v198 - v46);
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = (float32x4_t *)((char *)&v198 - v49);
  MEMORY[0x24BDAC7A8](v48);
  v52 = (int *)((char *)&v198 - v51);
  v231 = a1;
  if (!sub_2392961B0(*(CVPixelBufferRef *)(a1 + 8)))
  {
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v60 = 0xD00000000000002DLL;
    *(_QWORD *)(v60 + 8) = 0x800000023935C6B0;
    *(_BYTE *)(v60 + 16) = 5;
    swift_willThrow();
    return (uint64_t)v41;
  }
  v207 = v3;
  v208 = v23;
  v254 = 0;
  v53 = CPGSampleMetadataCreate();
  if (!v53
    || (v54 = sub_239352260(),
        v223 = v53,
        v55 = (void *)v54,
        v56 = CPGSampleMetadataSetFromCGImageProperties(),
        v55,
        v56))
  {
    sub_2392C3598();
    swift_allocError();
    v58 = 0xD000000000000030;
    v59 = "CPGSampleMetadataSetFromCGImageProperties failed";
LABEL_5:
    *(_QWORD *)v57 = v58;
    *(_QWORD *)(v57 + 8) = (unint64_t)(v59 - 32) | 0x8000000000000000;
    *(_BYTE *)(v57 + 16) = 5;
LABEL_6:
    swift_willThrow();
LABEL_103:
    CPGSampleMetadataRelease();
    return (uint64_t)v41;
  }
  v206 = v231 + v230[12];
  sub_23926059C(v206, (uint64_t)v52, &qword_256927628);
  v62 = type metadata accessor for PhotogrammetrySample.Camera(0);
  v63 = *(unsigned int (**)(int *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48);
  if (v63(v52, 1, v62) == 1)
  {
    sub_23925FE28((uint64_t)v52, &qword_256927628);
  }
  else
  {
    v64 = *v52;
    sub_2392688AC((uint64_t)v52, type metadata accessor for PhotogrammetrySample.Camera);
    if (v64 < 0)
      __break(1u);
    if (CPGSampleMetadataSetCameraID())
    {
      sub_2392C3598();
      swift_allocError();
      v58 = 0xD000000000000023;
      v59 = "CPGSampleMetadataSetCameraID failed";
      goto LABEL_5;
    }
  }
  sub_23926059C(v206, (uint64_t)v50, &qword_256927628);
  if (v63((int *)v50, 1, v62) == 1)
  {
    sub_23925FE28((uint64_t)v50, &qword_256927628);
  }
  else
  {
    v66 = v50[1];
    v203 = v50[2];
    v204 = v66;
    v205 = v50[3];
    sub_2392688AC((uint64_t)v50, type metadata accessor for PhotogrammetrySample.Camera);
    if (CPGSampleMetadataSetPrincipalPoint())
    {
      sub_2392C3598();
      swift_allocError();
      v58 = 0xD000000000000029;
      v59 = "CPGSampleMetadataSetPrincipalPoint failed";
      goto LABEL_5;
    }
    if (CPGSampleMetadataSetFocalLengthInPixel())
    {
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v75 = 0xD00000000000002DLL;
      *(_QWORD *)(v75 + 8) = 0x800000023935C930;
      *(_BYTE *)(v75 + 16) = 5;
      goto LABEL_6;
    }
  }
  sub_23926059C(v206, (uint64_t)v47, &qword_256927628);
  if (v63((int *)v47, 1, v62) == 1)
  {
    sub_23925FE28((uint64_t)v47, &qword_256927628);
    v65 = v229;
  }
  else
  {
    v67 = v47[4];
    v204 = v47[5];
    v205 = v67;
    v68 = v47[6];
    v202 = v47[7];
    v203 = v68;
    sub_2392688AC((uint64_t)v47, type metadata accessor for PhotogrammetrySample.Camera);
    sub_2392DEE24(v240, v205, v204, v203, v202);
    v246 = v240[0];
    v247 = v240[1];
    v248 = v240[2];
    v249 = v240[3];
    v250 = v240[4];
    v251 = v240[5];
    v252 = v240[6];
    v253 = v240[7];
    v69 = CPGSampleMetadataSetCameraTransform();
    v65 = v229;
    if (v69)
    {
      sub_2392C3598();
      swift_allocError();
      v58 = 0xD00000000000002ALL;
      v59 = "CPGSampleMetadataSetCameraTransform failed";
      goto LABEL_5;
    }
  }
  v205.i64[0] = v62;
  v70 = v231;
  if ((*(_BYTE *)(v231 + 64) & 1) == 0)
  {
    *(double *)&v71 = -*(double *)(v231 + 56);
    v246 = vnegq_f64((float64x2_t)vextq_s8(*(int8x16_t *)(v231 + 40), *(int8x16_t *)(v231 + 40), 8uLL));
    v247 = (float64x2_t)v71;
    if (CPGSampleMetadataSetGravity())
    {
      sub_2392C3598();
      swift_allocError();
      v58 = 0xD000000000000022;
      v59 = "CPGSampleMetadataSetGravity failed";
      goto LABEL_5;
    }
  }
  v72 = *(void **)(v70 + 24);
  if (v72)
  {
    v73 = v72;
    if (CPGSampleMetadataSetDepthMapWithConfidence())
    {
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v74 = 0xD000000000000031;
      *(_QWORD *)(v74 + 8) = 0x800000023935C860;
      *(_BYTE *)(v74 + 16) = 5;
      swift_willThrow();

      goto LABEL_103;
    }
    v76 = sub_239275AB0();
    ((void (*)(NSObject *, uint64_t, uint64_t))v228[2].isa)(v41, v76, v208);
    sub_239268820(v70, (uint64_t)v22, type metadata accessor for PhotogrammetrySample);
    v77 = sub_239352098();
    v78 = sub_239352578();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = v78;
      v80 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v80 = 134349056;
      v204.i64[0] = (uint64_t)(v80 + 4);
      v203.i64[0] = *v22;
      sub_2392688AC((uint64_t)v22, type metadata accessor for PhotogrammetrySample);
      *(_QWORD *)&v246.f64[0] = v203.i64[0];
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v77, v79, "Prepared depth data map of sample %{public}ld for reconstruction.", v80, 0xCu);
      v70 = v231;
      MEMORY[0x23B83BC04](v80, -1, -1);
      v81 = v73;
    }
    else
    {
      sub_2392688AC((uint64_t)v22, type metadata accessor for PhotogrammetrySample);
      v81 = v77;
      v77 = v73;
    }

    ((void (*)(NSObject *, uint64_t))v228[1].isa)(v41, v208);
    v65 = v229;
  }
  v82 = *(void **)(v70 + 72);
  if (v82)
  {
    v41 = v82;
    if (CPGSampleMetadataSetMaskWithCVPixelBuffer())
    {
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v83 = 0xD000000000000030;
      *(_QWORD *)(v83 + 8) = 0x800000023935C820;
      *(_BYTE *)(v83 + 16) = 5;
      swift_willThrow();

      goto LABEL_103;
    }

  }
  v84 = v230;
  sub_239268764(v70 + v230[13], (uint64_t)v245, &qword_256927630);
  v85 = v70;
  v86 = v227;
  sub_239268820(v85, v227, type metadata accessor for PhotogrammetrySample);
  sub_239268764((uint64_t)v245, (uint64_t)&v246, &qword_256927630);
  if (sub_239269494((uint64_t)&v246) == 1)
  {
    v87 = v86 + v84[14];
    v88 = *(_QWORD *)v87;
    v89 = *(_QWORD *)(v87 + 8);
    v90 = *(_QWORD *)(v87 + 16);
    v91 = *(_QWORD *)(v87 + 24);
    v203.i64[0] = *(_QWORD *)(v87 + 32);
    v92 = *(_QWORD *)(v87 + 40);
    v199 = v88;
    v200 = v92;
    v204.i64[0] = *(_QWORD *)(v87 + 48);
    v93 = *(_QWORD *)(v87 + 56);
    v201 = v90;
    v202.i64[0] = v93;
    v94 = *(_BYTE *)(v87 + 64);
    sub_2392688AC(v86, type metadata accessor for PhotogrammetrySample);
    v95 = v228;
    if ((v94 & 1) != 0)
      goto LABEL_50;
  }
  else
  {
    v89 = *(_QWORD *)&v250.f64[1];
    v91 = *(_QWORD *)&v251.f64[1];
    v199 = *(_QWORD *)&v250.f64[0];
    v200 = *(_QWORD *)&v252.f64[1];
    v203.i64[0] = *(_QWORD *)&v252.f64[0];
    v201 = *(_QWORD *)&v251.f64[0];
    v202.i64[0] = *(_QWORD *)&v253.f64[1];
    v204.i64[0] = *(_QWORD *)&v253.f64[0];
    sub_2392688AC(v86, type metadata accessor for PhotogrammetrySample);
    v95 = v228;
  }
  v97 = v225;
  v96 = v226;
  if ((v224 & 1) != 0)
  {
    v98 = sub_239275AB0();
    ((void (*)(float64_t, uint64_t, uint64_t))v95[2].isa)(COERCE_FLOAT64_T(*(_QWORD *)&v65), v98, v208);
    v99 = v222;
    sub_239268820(v231, (uint64_t)v222, type metadata accessor for PhotogrammetrySample);
    v100 = sub_239352098();
    v101 = sub_239352578();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = swift_slowAlloc();
      v103 = swift_slowAlloc();
      v244 = v103;
      *(_DWORD *)v102 = 136446466;
      *(_QWORD *)&v232.f64[0] = v199;
      *(_QWORD *)&v232.f64[1] = v89;
      *(_QWORD *)&v233.f64[0] = v201;
      *(_QWORD *)&v233.f64[1] = v91;
      *(_QWORD *)&v234.f64[0] = v203.i64[0];
      *(_QWORD *)&v234.f64[1] = v200;
      *(_QWORD *)&v235.f64[0] = v204.i64[0];
      *(_QWORD *)&v235.f64[1] = v202.i64[0];
      type metadata accessor for simd_float4x4(0);
      v104 = sub_23935232C();
      *(_QWORD *)&v232.f64[0] = sub_23925F3EC(v104, v105, &v244);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 12) = 2050;
      v106 = *(double *)v222;
      sub_2392688AC((uint64_t)v222, type metadata accessor for PhotogrammetrySample);
      v232.f64[0] = v106;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v100, v101, "Ignored setting CPG bounding box %{public}s for\nsample = %{public}ld", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      v107 = v103;
      v95 = v228;
      MEMORY[0x23B83BC04](v107, -1, -1);
      MEMORY[0x23B83BC04](v102, -1, -1);
    }
    else
    {
      sub_2392688AC((uint64_t)v99, type metadata accessor for PhotogrammetrySample);
    }

    ((void (*)(float64_t, uint64_t))v95[1].isa)(COERCE_FLOAT64_T(*(_QWORD *)&v229), v208);
  }
  else
  {
    v108.i64[0] = v199;
    v108.i64[1] = v89;
    v109.i64[0] = v201;
    v109.i64[1] = v91;
    v110.i64[0] = v203.i64[0];
    v110.i64[1] = v200;
    v111.i64[0] = v204.i64[0];
    v111.i64[1] = v202.i64[0];
    v244 = 0;
    sub_2392DEE24(v241, v108, v109, v110, v111);
    v232 = v241[0];
    v233 = v241[1];
    v234 = v241[2];
    v235 = v241[3];
    v236 = v241[4];
    v237 = v241[5];
    v238 = v241[6];
    v239 = v241[7];
    if (CPGBoundingBoxCreateFromTransform())
    {
      v112 = sub_239275AB0();
      v113 = v208;
      ((void (*)(char *, uint64_t, uint64_t))v95[2].isa)(v96, v112, v208);
      sub_239268820(v231, (uint64_t)v97, type metadata accessor for PhotogrammetrySample);
      v41 = sub_239352098();
      v114 = sub_23935256C();
      if (os_log_type_enabled(v41, v114))
      {
        v115 = swift_slowAlloc();
        v231 = swift_slowAlloc();
        v243 = v231;
        *(_DWORD *)v115 = 136446466;
        *(_QWORD *)&v232.f64[0] = v199;
        *(_QWORD *)&v232.f64[1] = v89;
        *(_QWORD *)&v233.f64[0] = v201;
        *(_QWORD *)&v233.f64[1] = v91;
        *(_QWORD *)&v234.f64[0] = v203.i64[0];
        *(_QWORD *)&v234.f64[1] = v200;
        *(_QWORD *)&v235.f64[0] = v204.i64[0];
        *(_QWORD *)&v235.f64[1] = v202.i64[0];
        type metadata accessor for simd_float4x4(0);
        v116 = sub_23935232C();
        *(_QWORD *)&v232.f64[0] = sub_23925F3EC(v116, v117, &v243);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v115 + 12) = 2050;
        v118 = *v97;
        sub_2392688AC((uint64_t)v97, type metadata accessor for PhotogrammetrySample);
        v232.f64[0] = v118;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v41, v114, "Failed to create CPG bounding box %{public}s for\nsample = %{public}ld", (uint8_t *)v115, 0x16u);
        v119 = v231;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v119, -1, -1);
        MEMORY[0x23B83BC04](v115, -1, -1);

        ((void (*)(char *, uint64_t))v228[1].isa)(v226, v208);
      }
      else
      {
        sub_2392688AC((uint64_t)v97, type metadata accessor for PhotogrammetrySample);

        ((void (*)(char *, uint64_t))v95[1].isa)(v226, v113);
      }
      sub_2392C3598();
      swift_allocError();
      v58 = 0xD000000000000028;
      v59 = "CPGBoundingBoxCreateFromTransform failed";
      goto LABEL_5;
    }
    if (!v244)
      goto LABEL_106;
    v134 = CPGSampleMetadataSetObjectBoundingBox();
    v135 = v219;
    if (v134)
    {
      v136 = sub_239275AB0();
      ((void (*)(char *, uint64_t, uint64_t))v95[2].isa)(v135, v136, v208);
      v137 = v214;
      sub_239268820(v231, (uint64_t)v214, type metadata accessor for PhotogrammetrySample);
      v41 = sub_239352098();
      v138 = sub_23935256C();
      if (os_log_type_enabled(v41, v138))
      {
        v139 = swift_slowAlloc();
        v231 = swift_slowAlloc();
        v243 = v231;
        *(_DWORD *)v139 = 136446466;
        *(_QWORD *)&v232.f64[0] = v199;
        *(_QWORD *)&v232.f64[1] = v89;
        *(_QWORD *)&v233.f64[0] = v201;
        *(_QWORD *)&v233.f64[1] = v91;
        *(_QWORD *)&v234.f64[0] = v203.i64[0];
        *(_QWORD *)&v234.f64[1] = v200;
        *(_QWORD *)&v235.f64[0] = v204.i64[0];
        *(_QWORD *)&v235.f64[1] = v202.i64[0];
        type metadata accessor for simd_float4x4(0);
        v140 = sub_23935232C();
        *(_QWORD *)&v232.f64[0] = sub_23925F3EC(v140, v141, &v243);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v139 + 12) = 2050;
        v142 = *v137;
        sub_2392688AC((uint64_t)v137, type metadata accessor for PhotogrammetrySample);
        v232.f64[0] = v142;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v41, v138, "Failed to set CPG bounding box %{public}s for\nsample = %{public}ld", (uint8_t *)v139, 0x16u);
        v143 = v231;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v143, -1, -1);
        MEMORY[0x23B83BC04](v139, -1, -1);

        ((void (*)(char *, uint64_t))v228[1].isa)(v219, v208);
      }
      else
      {
        sub_2392688AC((uint64_t)v137, type metadata accessor for PhotogrammetrySample);

        ((void (*)(char *, uint64_t))v95[1].isa)(v135, v208);
      }
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v156 = 0xD00000000000002CLL;
      *(_QWORD *)(v156 + 8) = 0x800000023935C7F0;
      *(_BYTE *)(v156 + 16) = 5;
      swift_willThrow();
      CPGBoundingBoxRelease();
      goto LABEL_103;
    }
    CPGBoundingBoxRelease();
  }
LABEL_50:
  v120 = v231;
  v121 = v231 + v230[17];
  if ((*(_BYTE *)(v121 + 8) & 1) == 0)
  {
    sub_2392DEFE0(*(double *)v121);
    v122 = (void *)sub_2393522CC();
    swift_bridgeObjectRelease();
    v41 = CPGSampleMetadataSetTimestamp();

    if ((_DWORD)v41)
    {
      sub_2392C3598();
      swift_allocError();
      v58 = 0xD000000000000024;
      v59 = "CPGSampleMetadataSetTimestamp failed";
      goto LABEL_5;
    }
  }
  v123 = *(void **)(v120 + 80);
  if (v123)
  {
    LOBYTE(v244) = 0;
    v124 = v123;
    sub_2392E0E94(&v244, &v232);
    v41 = *(NSObject **)&v236.f64[0];
    v229 = v232.f64[0];
    v226 = *(char **)&v233.f64[0];
    v227 = *(_QWORD *)&v232.f64[1];
    v125 = v207;
    v126 = sub_2392A26A8((uint64_t *)&v232, v244);
    v207 = v125;
    if (v125)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      CPGSampleMetadataRelease();
      return (uint64_t)v41;
    }
    v225 = (double *)v124;
    v144 = (char *)v126;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v229 = *(double *)&v144;
    NumberOfPoints = CPGDepthPointCloudGetNumberOfPoints();
    v146 = sub_239275AB0();
    isa = (void (*)(char *))v228[2].isa;
    v147 = v216;
    v227 = v146;
    isa(v216);
    v41 = sub_239352098();
    v148 = sub_239352578();
    if (os_log_type_enabled(v41, v148))
    {
      v149 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v149 = 134349056;
      *(_QWORD *)&v232.f64[0] = NumberOfPoints;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v41, v148, "Created LiDAR point cloud of %{public}llu points", v149, 0xCu);
      MEMORY[0x23B83BC04](v149, -1, -1);
    }

    v150 = v228[1].isa;
    ((void (*)(char *, uint64_t))v150)(v147, v208);
    if (!NumberOfPoints)
      goto LABEL_83;
    v228 = v150;
    v151 = v211;
    sub_23926059C(v206, v211, &qword_256927628);
    v152 = v205.i64[0];
    if (v63((int *)v151, 1, v205.i64[0]) == 1)
    {
      sub_23925FE28(v151, &qword_256927628);
    }
    else
    {
      v157 = v151 + *(int *)(v152 + 36);
      v158 = *(_QWORD *)v157;
      v159 = *(_QWORD *)(v157 + 8);
      v160 = *(_QWORD *)(v157 + 16);
      v161 = *(_QWORD *)(v157 + 24);
      v162 = *(_QWORD *)(v157 + 32);
      v224 = *(_QWORD *)(v157 + 40);
      v222 = *(_QWORD **)(v157 + 48);
      v226 = *(char **)(v157 + 56);
      v163 = *(_BYTE *)(v157 + 64);
      sub_2392688AC(v151, type metadata accessor for PhotogrammetrySample.Camera);
      if ((v163 & 1) == 0)
      {
        v164.i64[0] = v158;
        v164.i64[1] = v159;
        v165.i64[0] = v160;
        v165.i64[1] = v161;
        v166.i64[0] = v162;
        v166.i64[1] = v224;
        v167.i64[0] = (uint64_t)v222;
        v167.i64[1] = (uint64_t)v226;
        goto LABEL_77;
      }
    }
    v164 = *(float32x4_t *)MEMORY[0x24BDAEE00];
    v165 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
    v166 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
    v167 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
LABEL_77:
    v168 = v212;
    v169 = v225;
    sub_2392DEE24(v242, v164, v165, v166, v167);
    v232 = v242[0];
    v233 = v242[1];
    v234 = v242[2];
    v235 = v242[3];
    v236 = v242[4];
    v237 = v242[5];
    v238 = v242[6];
    v239 = v242[7];
    v41 = v223;
    if (CPGSampleMetadataSetDepthPointCloudWithExtrinsics())
    {
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v170 = 0xD000000000000038;
      *(_QWORD *)(v170 + 8) = 0x800000023935C750;
      *(_BYTE *)(v170 + 16) = 5;
      swift_willThrow();
      CPGDepthPointCloudRelease();

      goto LABEL_103;
    }
    ((void (*)(char *, uint64_t, uint64_t))isa)(v210, v227, v208);
    sub_239268820(v231, (uint64_t)v168, type metadata accessor for PhotogrammetrySample);
    v41 = sub_239352098();
    v171 = sub_239352578();
    if (os_log_type_enabled(v41, v171))
    {
      v172 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v172 = 134349056;
      v173 = (uint64_t)v168;
      v174 = *v168;
      sub_2392688AC(v173, type metadata accessor for PhotogrammetrySample);
      v232.f64[0] = v174;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v41, v171, "Successfully added LiDAR point cloud of sample %{public}ld", v172, 0xCu);
      MEMORY[0x23B83BC04](v172, -1, -1);
    }
    else
    {
      sub_2392688AC((uint64_t)v168, type metadata accessor for PhotogrammetrySample);
    }

    v150 = v228;
    ((void (*)(char *, uint64_t))v228)(v210, v208);
LABEL_83:
    CPGDepthPointCloudRelease();

    v153 = v207;
    v154 = v220;
    goto LABEL_84;
  }
  v127 = sub_239275AB0();
  isa = (void (*)(char *))v95[2].isa;
  v129 = v221;
  ((void (*)(char *, uint64_t, uint64_t))isa)(v221, v127, v208);
  v130 = v218;
  sub_239268820(v120, (uint64_t)v218, type metadata accessor for PhotogrammetrySample);
  v41 = sub_239352098();
  v131 = sub_23935256C();
  if (os_log_type_enabled(v41, v131))
  {
    v132 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v132 = 134349056;
    v133 = *v130;
    sub_2392688AC((uint64_t)v130, type metadata accessor for PhotogrammetrySample);
    v232.f64[0] = v133;
    v129 = v221;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v41, v131, "Sample %{public}ld missing LiDAR point cloud!", v132, 0xCu);
    MEMORY[0x23B83BC04](v132, -1, -1);
  }
  else
  {
    sub_2392688AC((uint64_t)v130, type metadata accessor for PhotogrammetrySample);
  }
  v153 = v207;
  v154 = v220;

  v155 = v129;
  v150 = v228[1].isa;
  ((void (*)(char *, uint64_t))v150)(v155, v208);
LABEL_84:
  if (v154)
  {
    v175 = v230[20];
    v176 = v231 + v230[19];
    v177 = *(_QWORD *)(v231 + v175);
    v178 = *(unsigned __int8 *)(v231 + v175 + 8);
    v179 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v154->isa + 13);
    swift_retain();
    v180 = v177;
    v41 = v154;
    v181 = v179(v176, v180, v178);
    swift_release();
  }
  else
  {
    v182 = v231 + v230[20];
    if ((*(_BYTE *)(v182 + 8) & 1) != 0)
      goto LABEL_99;
    v181 = *(_QWORD *)v182;
  }
  if ((v181 & 0x8000000000000000) == 0)
  {
    if (!(v181 >> 31))
    {
      v183 = CPGSampleMetadataSetSegmentID();
      v184 = sub_239275AB0();
      if (v183)
      {
        v41 = v217;
        ((void (*)(NSObject *, uint64_t, uint64_t))isa)(v217, v184, v208);
        v185 = v213;
        sub_239268820(v231, (uint64_t)v213, type metadata accessor for PhotogrammetrySample);
        v186 = sub_239352098();
        v187 = sub_23935256C();
        if (os_log_type_enabled(v186, v187))
        {
          v188 = (_DWORD *)swift_slowAlloc();
          v207 = v153;
          v189 = v188;
          *v188 = 134349312;
          *(_QWORD *)&v232.f64[0] = v181;
          sub_2393526B0();
          *((_WORD *)v189 + 6) = 2050;
          v41 = v150;
          v190 = *v185;
          sub_2392688AC((uint64_t)v185, type metadata accessor for PhotogrammetrySample);
          v232.f64[0] = v190;
          v150 = v41;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v186, v187, "Failed to set static segment ID %{public}ld for sample = %{public}ld", (uint8_t *)v189, 0x16u);
          MEMORY[0x23B83BC04](v189, -1, -1);
          v191 = v217;
        }
        else
        {
          sub_2392688AC((uint64_t)v185, type metadata accessor for PhotogrammetrySample);
          v191 = v41;
        }
      }
      else
      {
        v41 = v215;
        ((void (*)(NSObject *, uint64_t, uint64_t))isa)(v215, v184, v208);
        v192 = v209;
        sub_239268820(v231, (uint64_t)v209, type metadata accessor for PhotogrammetrySample);
        v186 = sub_239352098();
        v193 = sub_239352578();
        if (os_log_type_enabled(v186, v193))
        {
          v194 = (_DWORD *)swift_slowAlloc();
          v207 = v153;
          v195 = v194;
          *v194 = 134349312;
          *(_QWORD *)&v232.f64[0] = v181;
          sub_2393526B0();
          *((_WORD *)v195 + 6) = 2050;
          v41 = v150;
          v196 = *v192;
          sub_2392688AC((uint64_t)v192, type metadata accessor for PhotogrammetrySample);
          v232.f64[0] = v196;
          v150 = v41;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v186, v193, "Success in setting static segment ID %{public}ld for sample = %{public}ld", (uint8_t *)v195, 0x16u);
          MEMORY[0x23B83BC04](v195, -1, -1);
        }
        else
        {
          sub_2392688AC((uint64_t)v192, type metadata accessor for PhotogrammetrySample);
        }
        v191 = v215;
      }

      ((void (*)(NSObject *, uint64_t))v150)(v191, v208);
      goto LABEL_99;
    }
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
LABEL_99:
  if ((*(_QWORD *)v231 & 0x8000000000000000) == 0)
  {
    if (CPGSampleCreateWithCVPixelBuffer() || (v41 = v254) == 0)
    {
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v197 = 0xD000000000000028;
      *(_QWORD *)(v197 + 8) = 0x800000023935C720;
      *(_BYTE *)(v197 + 16) = 5;
      swift_willThrow();
    }
    goto LABEL_103;
  }
LABEL_107:
  result = sub_23935283C();
  __break(1u);
  return result;
}

_QWORD *sub_2392A45C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  float32x4_t v17;
  float32x4_t v18;
  float32x4_t v19;
  float32x4_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr);
  double v33;
  void *v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v55;
  float64x2_t v56;
  float64x2_t v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  float64x2_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  float64x2_t v80[8];
  _OWORD v81[8];
  _OWORD v82[6];
  uint64_t v83[6];
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float64x2_t v88[8];
  uint64_t v89[16];
  _OWORD v90[3];
  float64x2_t v91;
  float64x2_t v92;
  float64x2_t v93;
  float64x2_t v94;
  float64x2_t v95;
  float64x2_t v96;
  float64x2_t v97;
  float64x2_t v98;
  _OWORD v99[6];
  uint64_t v100;
  uint64_t v101;

  v101 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2393520B0();
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23925FB08(&qword_256927628);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v7 = type metadata accessor for PhotogrammetrySample(0);
  sub_23926059C(a1 + *(int *)(v7 + 48), (uint64_t)v6, &qword_256927628);
  v8 = type metadata accessor for PhotogrammetrySample.Camera(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_23925FE28((uint64_t)v6, &qword_256927628);
LABEL_4:
    v17 = *(float32x4_t *)MEMORY[0x24BDAEE00];
    v18 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
    v19 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
    v20 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48);
    goto LABEL_6;
  }
  v9 = &v6[*(int *)(v8 + 36)];
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v15 = *((_QWORD *)v9 + 4);
  v14 = *((_QWORD *)v9 + 5);
  v76 = *((_QWORD *)v9 + 6);
  v77 = v14;
  v78 = *((_QWORD *)v9 + 7);
  v16 = v9[64];
  sub_2392688AC((uint64_t)v6, type metadata accessor for PhotogrammetrySample.Camera);
  if ((v16 & 1) != 0)
    goto LABEL_4;
  v17.i64[0] = v10;
  v17.i64[1] = v11;
  v18.i64[0] = v12;
  v18.i64[1] = v13;
  v19.i64[0] = v15;
  v19.i64[1] = v77;
  v20.i64[0] = v76;
  v20.i64[1] = v78;
LABEL_6:
  sub_2392DEE24(v80, v17, v18, v19, v20);
  v56 = v80[0];
  v57 = v80[1];
  v54 = v80[2];
  v55 = v80[3];
  v52 = v80[4];
  v53 = v80[5];
  v50 = v80[6];
  v51 = v80[7];
  v21 = *(_QWORD *)(a1 + *(int *)(v7 + 92));
  if (v21 >> 62)
    goto LABEL_27;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v22; v22 = sub_239352854())
  {
    v72 = v22;
    v73 = v21 & 0xC000000000000001;
    v23 = 4;
    v71 = v21;
    while (1)
    {
      v26 = v23 - 4;
      if (!v73)
        break;
      v27 = MEMORY[0x23B83A68C](v23 - 4, v21);
      v28 = v23 - 3;
      if (__OFADD__(v26, 1))
        goto LABEL_26;
LABEL_15:
      v77 = v28;
      v78 = v23;
      v29 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v27 + 128))();
      LOBYTE(v99[0]) = 0;
      sub_2392E0E94(v99, &v91);
      v76 = v27;
      *(float64_t *)&v74 = v91.f64[1];
      *(float64_t *)&v75 = v91.f64[0];
      v70 = sub_2392A26A8((uint64_t *)&v91, v99[0]);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = swift_bridgeObjectRelease();
      v100 = 0;
      v31 = v76;
      v32 = *(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v76 + 152);
      ((void (*)(_OWORD *__return_ptr, uint64_t))v32)(v81, v30);
      v90[0] = v81[0];
      v90[1] = v81[1];
      v90[2] = v81[2];
      sub_2392DEDCC((float32x2_t *)v90, (uint64_t)v82);
      v74 = v82[2];
      v75 = v82[0];
      v67 = v82[3];
      v68 = v82[1];
      v69 = v82[4];
      v66 = v82[5];
      v32(v83);
      sub_2392DEE24(v88, v84, v85, v86, v87);
      v64 = v88[2];
      v65 = v88[0];
      v60 = v88[3];
      v61 = v88[1];
      v62 = v88[6];
      v63 = v88[4];
      v58 = v88[7];
      v59 = v88[5];
      v32(v89);
      v99[0] = v75;
      v99[1] = v68;
      v99[2] = v74;
      v99[3] = v67;
      v99[4] = v69;
      v99[5] = v66;
      v92 = v61;
      v91 = v65;
      v94 = v60;
      v93 = v64;
      v96 = v59;
      v95 = v63;
      v98 = v58;
      v97 = v62;
      if (CPGCameraCreateWithIntrinsicsExtrinsicsResolution())
      {
        CPGDepthPointCloudRelease();
        swift_release();
        v24 = v72;
        v25 = v78;
      }
      else
      {
        *(_QWORD *)&v99[0] = 0;
        v33 = (*(double (**)(void))(*(_QWORD *)v31 + 104))();
        sub_2392DEFE0(v33);
        v34 = (void *)sub_2393522CC();
        swift_bridgeObjectRelease();
        v92 = v57;
        v91 = v56;
        v94 = v55;
        v93 = v54;
        v96 = v53;
        v95 = v52;
        v98 = v51;
        v97 = v50;
        v35 = CPGTemporalDepthPointFrameCreateWithTimeCameraAndPointCloud();

        v25 = v78;
        if (v35)
        {
          CPGCameraRelease();
        }
        else
        {
          v36 = *(_QWORD *)&v99[0];
          if (!*(_QWORD *)&v99[0])
            __break(1u);
          v37 = v79;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v37 = sub_2392BFEC4(0, v37[2] + 1, 1, v37, &qword_2569295B8);
          v39 = v37[2];
          v38 = v37[3];
          if (v39 >= v38 >> 1)
            v37 = sub_2392BFEC4((_QWORD *)(v38 > 1), v39 + 1, 1, v37, &qword_2569295B8);
          v37[2] = v39 + 1;
          v37[v39 + 4] = v36;
          v79 = v37;
          CPGCameraRelease();
        }
        CPGDepthPointCloudRelease();
        swift_release();
        v24 = v72;
      }
      v23 = v25 + 1;
      v21 = v71;
      if (v77 == v24)
        goto LABEL_28;
    }
    v27 = *(_QWORD *)(v21 + 8 * v23);
    swift_retain();
    v28 = v23 - 3;
    if (!__OFADD__(v26, 1))
      goto LABEL_15;
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  v40 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v40, v49);
  v41 = v79;
  swift_bridgeObjectRetain();
  v42 = sub_239352098();
  v43 = sub_239352578();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v44 = 134349056;
    v91.f64[0] = (float64_t)v41[2];
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v42, v43, "Create %{public}ld temporal LiDAR point frames.", v44, 0xCu);
    MEMORY[0x23B83BC04](v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
  swift_beginAccess();
  return v79;
}

uint64_t sub_2392A4D7C()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B83BC88](v0 + 32);
}

uint64_t sub_2392A4DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2392A4E20(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B83BC88](v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2392A4E8C;
}

void sub_2392A4E8C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 40) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2392A4EFC()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B83BC88](v0 + 48);
}

uint64_t sub_2392A4F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2392A4FA0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B83BC88](v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2392A500C;
}

void sub_2392A500C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 56) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2392A507C()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B83BC88](v0 + 64);
}

uint64_t sub_2392A50C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2392A5120(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B83BC88](v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2392A518C;
}

void sub_2392A518C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 72) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2392A51FC()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B83BC88](v0 + 80);
}

uint64_t sub_2392A5240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 88) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2392A52A0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B83BC88](v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2392A530C;
}

void sub_2392A530C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 88) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_2392A537C()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x23B83BC88](v0 + 96);
}

uint64_t sub_2392A53C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 104) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_2392A5420(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x23B83BC88](v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v3[3] = v4;
  v3[4] = v5;
  return sub_2392A548C;
}

void sub_2392A548C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 104) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void *sub_2392A54FC()
{
  return &unk_2393554B0;
}

uint64_t sub_2392A5508(unsigned __int8 *a1)
{
  unint64_t v1;
  __int16 v2;
  int v3;
  unsigned int v4;

  v1 = sub_2392A19F0(a1);
  v4 = v1 & (v3 == 0);
  if (HIDWORD(v1))
    v4 = 0;
  if ((v2 & 0x101) != 0)
    return 0;
  else
    return v4;
}

uint64_t sub_2392A5540(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = sub_23925FB08(&qword_256928DE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PhotogrammetrySession.Request(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23925FE28(a1, &qword_256928DE8);
    v13 = sub_2392C0158(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_2392C159C();
        v17 = v22;
      }
      sub_2392C4FE0(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      sub_2392C0EF4(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_23925FE28((uint64_t)v8, &qword_256928DE8);
  }
  else
  {
    sub_2392C4FE0(a1, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_2392C10D4((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2392A5718(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;

  v2 = *((_QWORD *)a1 + 2);
  v3 = a1[24];
  v4 = a1[25];
  v5 = *((_DWORD *)a1 + 2);
  v6 = *a1 | ((unint64_t)*((unsigned int *)a1 + 1) << 32);
  if (v4)
    v7 = 256;
  else
    v7 = 0;
  if (a2[25])
    v8 = 256;
  else
    v8 = 0;
  return sub_2392C2840(v6, v5, v2, v7 | v3, *a2 | ((unint64_t)*((unsigned int *)a2 + 1) << 32), *((_DWORD *)a2 + 2), *((_QWORD *)a2 + 2), v8 | a2[24]);
}

uint64_t sub_2392A5770()
{
  return sub_2392C2D48();
}

uint64_t sub_2392A5788(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  int v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD v25[8];

  v25[7] = *MEMORY[0x24BDAC8D0];
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v25 - v9;
  MEMORY[0x24BDAC7A8](v8);
  sub_2392A19F0(a2);
  v25[6] = 0;
  v11 = (void *)sub_239351ED0();
  v12 = CPGSnapshotInfoLoadFromURL();

  if (v12)
  {
    v13 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23925B000, v14, v15, "Failed to load snapshot info from snapshot URL!", v16, 2u);
      MEMORY[0x23B83BC04](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
LABEL_11:
    v23 = 2;
    goto LABEL_12;
  }
  v17 = CPGSessionOptionsCreate();
  v18 = CPGSfmOptionsCreate();
  if (!v17 || !v18)
  {
    v19 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v19, v3);
    v20 = sub_239352098();
    v21 = sub_23935256C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_23925B000, v20, v21, "Failed to create CPG session options and sfm options!", v22, 2u);
      MEMORY[0x23B83BC04](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    CPGSfmOptionsRelease();
    CPGSessionOptionsRelease();
    goto LABEL_11;
  }
  sub_2392C3318();
  v23 = CPGSnapshotInfoCheckSessionOptionsCompatibility();
  CPGSfmOptionsRelease();
  CPGSessionOptionsRelease();
LABEL_12:
  CPGSnapshotInfoRelease();
  return v23;
}

uint64_t sub_2392A5BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x24BDAC8D0];
  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v4 = (void *)sub_239351ED0();
  v5 = CPGSnapshotInfoLoadFromURL();

  if (v5)
  {
    v6 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v7 = sub_239352098();
    v8 = sub_23935256C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23925B000, v7, v8, "Failed to load snapshot info from snapshot URL!", v9, 2u);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 2;
  }
  else
  {
    v10 = CPGSnapshotInfoCheckDeviceCompatibility();
    CPGSnapshotInfoRelease();
  }
  return v10;
}

uint64_t sub_2392A5D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t NumberOfSamples;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x24BDAC8D0];
  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v4 = (void *)sub_239351ED0();
  v5 = CPGSnapshotInfoLoadFromURL();

  if (v5)
  {
    v6 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v7 = sub_239352098();
    v8 = sub_23935256C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23925B000, v7, v8, "Failed to load snapshot info from snapshot URL!", v9, 2u);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  else
  {
    NumberOfSamples = CPGSnapshotInfoGetNumberOfSamples();
    CPGSnapshotInfoRelease();
  }
  return NumberOfSamples;
}

uint64_t sub_2392A5EC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  void (*v28)(unint64_t, unint64_t);
  uint64_t v29;
  uint64_t v30;

  v2 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_239351F3C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v28 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v28(0xD00000000000002FLL, 0x800000023935BF50);
  v12 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_23926059C(a1 + *(int *)(v12 + 32), (uint64_t)v4, &qword_256927AD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23925FE28((uint64_t)v4, &qword_256927AD0);
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000018;
    *(_QWORD *)(v13 + 8) = 0x800000023935BF80;
    *(_BYTE *)(v13 + 16) = 0;
    swift_willThrow();
    sub_2392688AC(a1, type metadata accessor for PhotogrammetrySession.Configuration);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    v27 = a1;
    v14 = sub_2392A19F0((unsigned __int8 *)a1);
    v15 = v11;
    v16 = v14;
    v18 = v17;
    v20 = v19;
    a1 = v21;
    v22 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v26 = v15;
    v22(v9, v15, v5);
    v23 = v30;
    v24 = (*(uint64_t (**)(char *, unint64_t, uint64_t, uint64_t, uint64_t))(v29 + 560))(v9, v16 & 0xFFFFFFFF00000001, v18, v20, a1 & 0x101);
    if (!v23)
    {
      a1 = v24;
      v28(0xD000000000000032, 0x800000023935BFA0);
    }
    sub_2392688AC(v27, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v26, v5);
  }
  return a1;
}

uint64_t sub_2392A616C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_2392A61EC(a1, a2 & 0xFFFFFFFF00000001, a3, a4, a5 & 0x101);
  return v10;
}

uint64_t sub_2392A61EC(uint64_t a1, unint64_t a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, void (*)(char *, uint64_t));
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  void *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  unsigned __int8 v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  unsigned int v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  id v104;
  int v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  _BYTE v110[24];
  uint64_t v111;

  v6 = v5;
  v97 = a4;
  v96 = a3;
  v102 = a1;
  v111 = *MEMORY[0x24BDAC8D0];
  v95 = HIDWORD(a2);
  v93 = a2 & 1;
  v94 = a5 & 1;
  v91 = a5 & 0x100;
  v7 = sub_23925FB08(&qword_256927AD0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v81 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v80 = (uint64_t)&v79 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v92 = (uint64_t)&v79 - v12;
  v13 = sub_239351F3C();
  v14 = *(_QWORD **)(v13 - 8);
  v88 = v13;
  v15 = v14;
  v103 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v89 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_2393520B0();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = (void (*)(char *, uint64_t))sub_2393525E4();
  v18 = *((_QWORD *)v98 - 1);
  MEMORY[0x24BDAC7A8](v98);
  v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2393525C0();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v21);
  v23 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 104) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v6 + 112) = 1008981770;
  v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15[7];
  v90(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL, 1, 1, v13);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = 0;
  v87 = OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue;
  v86 = sub_239261E08();
  sub_2393521B8();
  v104 = (id)MEMORY[0x24BEE4AF8];
  v84 = sub_239262570((unint64_t *)&qword_256927DD0, v22, MEMORY[0x24BEE5698]);
  v83 = sub_23925FB08(&qword_256927410);
  v85 = sub_2392C3664((unint64_t *)&qword_256927DE0, &qword_256927410);
  sub_239352734();
  v24 = *MEMORY[0x24BEE5750];
  v25 = *(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v18 + 104);
  v25(v20, v24, v98);
  *(_QWORD *)(v6 + v87) = sub_239352614();
  v87 = OBJC_IVAR____TtC6CoreOC9PGManager_processQueue;
  sub_2393521A0();
  v104 = (id)MEMORY[0x24BEE4AF8];
  sub_239352734();
  v25(v20, v24, v98);
  *(_QWORD *)(v6 + v87) = sub_239352614();
  v26 = v88;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleProgressBound) = 1036831949;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameRequestProgressBound) = 1063675494;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = 0;
  v27 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  v28 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) = 0;
  v29 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  sub_23925FB08(&qword_256928DD8);
  LOBYTE(v104) = 0;
  *(_QWORD *)(v6 + v29) = sub_239350EBC((uint64_t)&v104);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_session) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap) = 0;
  v30 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_2392677D0((uint64_t)v110);
  sub_239268764((uint64_t)v110, v30, &qword_256928728);
  v31 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) = MEMORY[0x24BEE4AF8];
  v32 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  *(_OWORD *)v32 = 0u;
  *(_OWORD *)(v32 + 16) = 0u;
  *(_OWORD *)(v32 + 32) = 0u;
  *(_OWORD *)(v32 + 48) = 0u;
  *(_BYTE *)(v32 + 64) = 1;
  v33 = OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  *(_QWORD *)(v6 + v33) = sub_2392C29B0(v31);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests) = v31;
  v34 = OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  *(_QWORD *)(v6 + v34) = sub_2392C2ADC(v31);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated) = 0;
  v35 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v35, v101);
  v36 = (void (*)(void))v103[2];
  v37 = v89;
  v36();
  v38 = sub_239352098();
  v39 = sub_239352578();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v87 = (uint64_t)v36;
    v41 = v40;
    v42 = swift_slowAlloc();
    v109 = v42;
    *(_DWORD *)v41 = 136380931;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v43 = sub_2393528C0();
    v104 = (id)sub_23925F3EC(v43, v44, &v109);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v98 = (void (*)(char *, uint64_t))v103[1];
    v98(v37, v26);
    *(_WORD *)(v41 + 12) = 2082;
    LOBYTE(v104) = v93;
    HIDWORD(v104) = v95;
    v105 = v96;
    v106 = v97;
    v107 = v94;
    v45 = v91 >> 8;
    v108 = BYTE1(v91);
    v46 = sub_23935232C();
    v104 = (id)sub_23925F3EC(v46, v47, &v109);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v38, v39, "Backend Manager: Initializing with snapshot URL = %{private}s and configuration = %{public}s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v42, -1, -1);
    v48 = v41;
    v36 = (void (*)(void))v87;
    MEMORY[0x23B83BC04](v48, -1, -1);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
  }
  else
  {
    v98 = (void (*)(char *, uint64_t))v103[1];
    v98(v37, v26);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
    v45 = v91 >> 8;
  }
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader) = 0;
  v49 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL;
  ((void (*)(uint64_t, uint64_t, uint64_t))v36)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, v102, v26);
  v90(v49, 0, 1, v26);
  v50 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  *(_BYTE *)v50 = v93;
  v51 = v96;
  *(_DWORD *)(v50 + 4) = v95;
  *(_DWORD *)(v50 + 8) = v51;
  *(_QWORD *)(v50 + 16) = v97;
  *(_BYTE *)(v50 + 24) = v94;
  *(_BYTE *)(v50 + 25) = v45;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples) = 0;
  type metadata accessor for SegmentIDConverter();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter) = sub_2392E2D90();
  v52 = (void *)objc_opt_self();
  v53 = objc_msgSend(v52, sel_defaultManager);
  v54 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL;
  v55 = v92;
  sub_23926059C(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, v92, &qword_256927AD0);
  v56 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v103[6];
  if (v56(v55, 1, v26) == 1)
    __break(1u);
  sub_239351F30();
  v57 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v58 = v55;
  v59 = (void (*)(uint64_t, uint64_t))v98;
  v98((char *)v58, v26);
  v60 = objc_msgSend(v53, sel_fileExistsAtPath_, v57);

  v61 = objc_msgSend(v52, sel_defaultManager);
  v62 = v54;
  if ((v60 & 1) != 0)
  {
    v63 = v81;
    sub_23926059C(v54, v81, &qword_256927AD0);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v56)(v63, 1, v26);
    if ((_DWORD)result != 1)
    {
      sub_239351F30();
      v65 = (void *)sub_2393522CC();
      swift_bridgeObjectRelease();
      v59(v63, v26);
      v104 = 0;
      v66 = objc_msgSend(v61, sel_contentsOfDirectoryAtPath_error_, v65, &v104);

      v67 = v104;
      if (v66)
      {
        v68 = sub_23935244C();

        v69 = *(_QWORD *)(v68 + 16);
        swift_bridgeObjectRelease();
        if (v69)
        {
          v70 = v82;
          sub_2392B0430();
          if (!v70)
            goto LABEL_21;
          goto LABEL_15;
        }
LABEL_13:
        v75 = v82;
        sub_2392AF810();
        if (!v75)
        {
          sub_2392B092C();
          sub_2392B1528();
LABEL_21:
          v78 = type metadata accessor for MemoryLogger();
          (*(void (**)(unint64_t, unint64_t))(v78 + 88))(0xD000000000000043, 0x800000023935C040);
          goto LABEL_19;
        }
LABEL_15:
        v59(v102, v26);
        swift_release();
        return v6;
      }
      v77 = v67;
      swift_release();
      sub_239351E58();

LABEL_18:
      swift_willThrow();
LABEL_19:
      v59(v102, v26);
      return v6;
    }
    __break(1u);
  }
  else
  {
    v71 = v80;
    sub_23926059C(v62, v80, &qword_256927AD0);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v56)(v71, 1, v26);
    if ((_DWORD)result != 1)
    {
      v72 = (void *)sub_239351ED0();
      v59(v71, v26);
      v104 = 0;
      v73 = objc_msgSend(v61, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v72, 1, 0, &v104);

      v74 = v104;
      if (v73)
        goto LABEL_13;
      v76 = v74;
      swift_release();
      sub_239351E58();

      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2392A6F80(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int16 v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v3 = sub_239351F3C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23925FB08(&qword_256927AD0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v25 - v11;
  v13 = type metadata accessor for MemoryLogger();
  v25[0] = *(_QWORD *)(v13 + 88);
  v25[1] = v13;
  ((void (*)(unint64_t, unint64_t))v25[0])(0xD00000000000003ELL, 0x800000023935C090);
  v14 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_23926059C((uint64_t)&a2[*(int *)(v14 + 32)], (uint64_t)v12, &qword_256927AD0);
  v27 = a2;
  v15 = sub_2392A19F0(a2);
  LODWORD(a2) = v16;
  v18 = v17;
  v20 = v19;
  v26 = v4;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v28 = v3;
  v21(v6, v29, v3);
  sub_23926059C((uint64_t)v12, (uint64_t)v10, &qword_256927AD0);
  type metadata accessor for PGManager();
  v22 = swift_allocObject();
  v23 = v25[2];
  sub_2392A719C(v6, (uint64_t)v10, v15 & 0xFFFFFFFF00000001, (int)a2, v18, v20 & 0x101);
  if (!v23)
    ((void (*)(unint64_t, unint64_t))v25[0])(0xD000000000000041, 0x800000023935C0D0);
  sub_2392688AC((uint64_t)v27, type metadata accessor for PhotogrammetrySession.Configuration);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v28);
  sub_23925FE28((uint64_t)v12, &qword_256927AD0);
  return v22;
}

uint64_t sub_2392A719C(char *a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(void);
  uint64_t v31;
  void (*v32)(char *, uint64_t, void (*)(char *, uint64_t));
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  void *v73;
  uint64_t v74;
  id v75;
  char *v76;
  void *v77;
  unsigned __int8 v78;
  char *v79;
  id v80;
  void *v81;
  unsigned int v82;
  id v83;
  char *v84;
  char v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  id v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  void (*v110)(void);
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  int v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  char v135[8];
  uint64_t v136;

  v7 = v6;
  v122 = a5;
  v121 = a4;
  v127 = a2;
  v125 = a1;
  v136 = *MEMORY[0x24BDAC8D0];
  v119 = HIDWORD(a3);
  v115 = a3 & 1;
  LODWORD(v108) = a6;
  v120 = a6 & 1;
  v8 = sub_239351F3C();
  v9 = *(_QWORD *)(v8 - 8);
  v128 = v8;
  v10 = v9;
  v123 = v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v116 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)&v99 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v109 = (char *)&v99 - v15;
  v126 = sub_2393520B0();
  v118 = *(_QWORD *)(v126 - 8);
  v16 = MEMORY[0x24BDAC7A8](v126);
  v100 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v117 = (char *)&v99 - v18;
  v19 = sub_23925FB08(&qword_256927AD0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v114 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v112 = (char *)&v99 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v106 = (char *)&v99 - v24;
  v124 = (void (*)(char *, uint64_t))sub_2393525E4();
  v107 = *((_QWORD *)v124 - 1);
  MEMORY[0x24BDAC7A8](v124);
  v26 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_2393525C0();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v27);
  v29 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v7 + 104) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v7 + 112) = 1008981770;
  v30 = *(void (**)(void))(v10 + 56);
  v111 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL;
  v110 = v30;
  v30();
  *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = 0;
  v105 = (char *)OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue;
  sub_239261E08();
  sub_2393521B8();
  v129 = (id)MEMORY[0x24BEE4AF8];
  v103 = sub_239262570((unint64_t *)&qword_256927DD0, v28, MEMORY[0x24BEE5698]);
  v102 = sub_23925FB08(&qword_256927410);
  v104 = sub_2392C3664((unint64_t *)&qword_256927DE0, &qword_256927410);
  sub_239352734();
  v31 = *MEMORY[0x24BEE5750];
  v32 = *(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v107 + 104);
  v32(v26, v31, v124);
  *(_QWORD *)&v105[v7] = sub_239352614();
  v107 = OBJC_IVAR____TtC6CoreOC9PGManager_processQueue;
  sub_2393521A0();
  v129 = (id)MEMORY[0x24BEE4AF8];
  sub_239352734();
  v32(v26, v31, v124);
  *(_QWORD *)(v7 + v107) = sub_239352614();
  v33 = v128;
  v34 = (uint64_t)v106;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 0;
  *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
  *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleProgressBound) = 1036831949;
  *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameRequestProgressBound) = 1063675494;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = 0;
  v35 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  v36 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) = 0;
  v37 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  sub_23925FB08(&qword_256928DD8);
  LOBYTE(v129) = 0;
  *(_QWORD *)(v7 + v37) = sub_239350EBC((uint64_t)&v129);
  v38 = v123;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_session) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap) = 0;
  v39 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_2392677D0((uint64_t)v135);
  sub_239268764((uint64_t)v135, v39, &qword_256928728);
  v40 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) = MEMORY[0x24BEE4AF8];
  v41 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  *(_OWORD *)v41 = 0u;
  *(_OWORD *)(v41 + 16) = 0u;
  *(_OWORD *)(v41 + 32) = 0u;
  *(_OWORD *)(v41 + 48) = 0u;
  *(_BYTE *)(v41 + 64) = 1;
  v42 = OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  *(_QWORD *)(v7 + v42) = sub_2392C29B0(v40);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests) = v40;
  v43 = OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  *(_QWORD *)(v7 + v43) = sub_2392C2ADC(v40);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated) = 0;
  sub_23926059C(v127, v34, &qword_256927AD0);
  v107 = *(_QWORD *)(v38 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v107)(v34, 1, v33) == 1)
  {
    sub_23925FE28(v34, &qword_256927AD0);
    v103 = 0;
    v44 = 0xE000000000000000;
  }
  else
  {
    v103 = sub_239351E7C();
    v44 = v45;
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v33);
  }
  LODWORD(v106) = (unsigned __int16)v108 & 0x100;
  v46 = sub_239275AB0();
  v47 = v118;
  v48 = *(char **)(v118 + 16);
  v49 = v117;
  v104 = v46;
  v105 = v48;
  ((void (*)(char *))v48)(v117);
  v50 = v109;
  v51 = v125;
  v108 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v108(v109, (uint64_t)v125, v33);
  swift_bridgeObjectRetain();
  v52 = sub_239352098();
  v53 = sub_239352578();
  LODWORD(v102) = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v54 = v38;
    v55 = swift_slowAlloc();
    v99 = swift_slowAlloc();
    v134 = v99;
    *(_DWORD *)v55 = 136381187;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v56 = sub_2393528C0();
    v129 = (id)sub_23925F3EC(v56, v57, &v134);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v124 = *(void (**)(char *, uint64_t))(v54 + 8);
    v124(v50, v128);
    *(_WORD *)(v55 + 12) = 2081;
    swift_bridgeObjectRetain();
    v129 = (id)sub_23925F3EC(v103, v44, &v134);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v55 + 22) = 2082;
    v58 = v115;
    LOBYTE(v129) = v115;
    HIDWORD(v129) = v119;
    v130 = v121;
    v131 = v122;
    v132 = v120;
    LODWORD(v109) = v106 >> 8;
    v133 = BYTE1(v106);
    v59 = sub_23935232C();
    v129 = (id)sub_23925F3EC(v59, v60, &v134);
    v61 = v125;
    sub_2393526B0();
    v33 = v128;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v52, (os_log_type_t)v102, "Backend Manager: Initializing with images URL = %{private}s, snapshotURL = %{private}s and configuration = %{public}s", (uint8_t *)v55, 0x20u);
    v62 = v99;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v62, -1, -1);
    MEMORY[0x23B83BC04](v55, -1, -1);

    v118 = *(_QWORD *)(v118 + 8);
    ((void (*)(char *, uint64_t))v118)(v117, v126);
    v63 = v116;
  }
  else
  {
    v124 = *(void (**)(char *, uint64_t))(v38 + 8);
    v124(v50, v33);

    swift_bridgeObjectRelease_n();
    v118 = *(_QWORD *)(v47 + 8);
    ((void (*)(char *, uint64_t))v118)(v49, v126);
    LODWORD(v109) = v106 >> 8;
    v63 = v116;
    v61 = v51;
    v58 = v115;
  }
  v64 = (uint64_t)v112;
  v65 = v108;
  v108(v112, (uint64_t)v61, v33);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v110)(v64, 0, 1, v33);
  v66 = v111;
  swift_beginAccess();
  sub_239267C70(v64, v66, &qword_256927AD0);
  swift_endAccess();
  type metadata accessor for ObjectCaptureImageFolderReader();
  v67 = (uint64_t)v113;
  v65(v113, (uint64_t)v61, v33);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader) = ObjectCaptureImageFolderReader.__allocating_init(url:)(v67);
  sub_23926059C(v127, v7 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, &qword_256927AD0);
  v68 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  *(_BYTE *)v68 = v58;
  v69 = v121;
  *(_DWORD *)(v68 + 4) = v119;
  *(_DWORD *)(v68 + 8) = v69;
  *(_QWORD *)(v68 + 16) = v122;
  *(_BYTE *)(v68 + 24) = v120;
  *(_BYTE *)(v68 + 25) = (_BYTE)v109;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples) = 0;
  type metadata accessor for SegmentIDConverter();
  *(_QWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter) = sub_2392E2D90();
  v70 = v128;
  v71 = v114;
  sub_23926059C(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, v114, &qword_256927AD0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v107)(v71, 1, v70) == 1)
  {
    sub_23925FE28(v71, &qword_256927AD0);
    v72 = (void (*)(uint64_t, uint64_t))v124;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v63, v71, v70);
    v73 = (void *)objc_opt_self();
    v74 = v70;
    v75 = objc_msgSend(v73, sel_defaultManager);
    sub_239351F30();
    v76 = v63;
    v77 = (void *)sub_2393522CC();
    swift_bridgeObjectRelease();
    v78 = objc_msgSend(v75, sel_fileExistsAtPath_, v77);

    if ((v78 & 1) != 0)
    {
      v79 = v76;
      v72 = (void (*)(uint64_t, uint64_t))v124;
      v124(v79, v74);
      v70 = v74;
    }
    else
    {
      v80 = objc_msgSend(v73, sel_defaultManager);
      v81 = (void *)sub_239351ED0();
      v129 = 0;
      v82 = objc_msgSend(v80, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v81, 1, 0, &v129);

      if (!v82)
      {
        v96 = v129;
        swift_release();
        sub_239351E58();

        swift_willThrow();
        sub_23925FE28(v127, &qword_256927AD0);
        v97 = v128;
        v98 = v124;
        v124(v125, v128);
        v98(v76, v97);
        return v7;
      }
      v83 = v129;
      v84 = v76;
      v70 = v128;
      v72 = (void (*)(uint64_t, uint64_t))v124;
      v124(v84, v128);
    }
  }
  v85 = sub_2392AF540();
  v86 = OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = v85 & 1;
  v87 = v100;
  v88 = v126;
  ((void (*)(char *, uint64_t, uint64_t))v105)(v100, v104, v126);
  swift_retain();
  v89 = sub_239352098();
  v90 = sub_239352578();
  if (os_log_type_enabled(v89, v90))
  {
    v91 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v91 = 67240192;
    LODWORD(v129) = *(unsigned __int8 *)(v7 + v86);
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v89, v90, "Backend Manager: ImageURL contains area mode data: %{BOOL,public}d", v91, 8u);
    v92 = v91;
    v70 = v128;
    MEMORY[0x23B83BC04](v92, -1, -1);

  }
  else
  {

    swift_release();
  }
  ((void (*)(char *, uint64_t))v118)(v87, v88);
  v93 = v101;
  sub_2392AF810();
  if (v93)
  {
    swift_release();
  }
  else
  {
    v94 = type metadata accessor for MemoryLogger();
    (*(void (**)(unint64_t, unint64_t))(v94 + 88))(0xD00000000000004FLL, 0x800000023935CEC0);
  }
  sub_23925FE28(v127, &qword_256927AD0);
  v72((uint64_t)v125, v70);
  return v7;
}

uint64_t sub_2392A81E0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(_QWORD *)(type metadata accessor for MemoryLogger() + 88);
  ((void (*)(unint64_t, unint64_t))v20[0])(0xD00000000000003CLL, 0x800000023935C120);
  v21 = a2;
  v9 = sub_2392A19F0(a2);
  v11 = v10;
  v13 = v12;
  LOWORD(a2) = v14;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v22 = a1;
  v15(v8, a1, a3);
  sub_23925FB08(&qword_256928DE0);
  swift_dynamicCast();
  v16 = v23;
  type metadata accessor for PGManager();
  v17 = swift_allocObject();
  v18 = v20[1];
  sub_2392A8380(v16, v9 & 0xFFFFFFFF00000001, v11, v13, (unsigned __int16)a2 & 0x101);
  if (!v18)
    ((void (*)(unint64_t, unint64_t))v20[0])(0xD00000000000003FLL, 0x800000023935C160);
  sub_2392688AC((uint64_t)v21, type metadata accessor for PhotogrammetrySession.Configuration);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, a3);
  return v17;
}

uint64_t sub_2392A8380(uint64_t a1, unint64_t a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  char v41;
  char v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unsigned int v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char v74;
  char v75;
  _BYTE v76[48];
  uint64_t v77;

  v6 = v5;
  v66 = a4;
  v65 = a3;
  v55 = a1;
  v64 = HIDWORD(a2);
  v63 = a2 & 1;
  v62 = a5 & 1;
  v50 = a5 & 0x100;
  v7 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_2393520B0();
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v67 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_2393525E4();
  v61 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2393525C0();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v12);
  v14 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 104) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v6 + 112) = 1008981770;
  v15 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL;
  v16 = sub_239351F3C();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v49 = v15;
  v52 = v16;
  v51 = v17;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v15, 1, 1);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = 0;
  v60 = OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue;
  v59 = sub_239261E08();
  sub_2393521B8();
  v71 = MEMORY[0x24BEE4AF8];
  v57 = sub_239262570((unint64_t *)&qword_256927DD0, v13, MEMORY[0x24BEE5698]);
  v56 = sub_23925FB08(&qword_256927410);
  v58 = sub_2392C3664((unint64_t *)&qword_256927DE0, &qword_256927410);
  sub_239352734();
  v18 = *MEMORY[0x24BEE5750];
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 104);
  v19(v11, v18, v70);
  *(_QWORD *)(v6 + v60) = sub_239352614();
  v61 = OBJC_IVAR____TtC6CoreOC9PGManager_processQueue;
  sub_2393521A0();
  v71 = MEMORY[0x24BEE4AF8];
  sub_239352734();
  v19(v11, v18, v70);
  *(_QWORD *)(v6 + v61) = sub_239352614();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleProgressBound) = 1036831949;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameRequestProgressBound) = 1063675494;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = 0;
  v20 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  v21 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) = 0;
  v22 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  sub_23925FB08(&qword_256928DD8);
  LOBYTE(v71) = 0;
  *(_QWORD *)(v6 + v22) = sub_239350EBC((uint64_t)&v71);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_session) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap) = 0;
  v23 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_2392677D0((uint64_t)v76);
  sub_239268764((uint64_t)v76, v23, &qword_256928728);
  v24 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) = MEMORY[0x24BEE4AF8];
  v25 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  *(_OWORD *)v25 = 0u;
  *(_OWORD *)(v25 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_BYTE *)(v25 + 64) = 1;
  v26 = OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  *(_QWORD *)(v6 + v26) = sub_2392C29B0(v24);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests) = v24;
  v27 = OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  *(_QWORD *)(v6 + v27) = sub_2392C2ADC(v24);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated) = 0;
  v28 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v28, v69);
  v29 = sub_239352098();
  v30 = sub_239352578();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v77 = v32;
    *(_DWORD *)v31 = 136446210;
    LOBYTE(v71) = v63;
    HIDWORD(v71) = v64;
    v72 = v65;
    v73 = v66;
    v74 = v62;
    v33 = v50 >> 8;
    v75 = BYTE1(v50);
    v34 = sub_23935232C();
    v71 = sub_23925F3EC(v34, v35, &v77);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v29, v30, "Backend Manager: Initializing from source and configuration = %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v32, -1, -1);
    MEMORY[0x23B83BC04](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
    v33 = v50 >> 8;
  }
  v36 = v54;
  v37 = (uint64_t)v53;
  v38 = v66;
  v39 = v65;
  v40 = v64;
  v41 = v62;
  v42 = v63;
  v43 = v52;
  v44 = v51;
  v45 = v49;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples) = v55;
  v46 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  *(_BYTE *)v46 = v42;
  *(_DWORD *)(v46 + 4) = v40;
  *(_DWORD *)(v46 + 8) = v39;
  *(_QWORD *)(v46 + 16) = v38;
  *(_BYTE *)(v46 + 24) = v41;
  *(_BYTE *)(v46 + 25) = v33;
  v44(v37, 1, 1, v43);
  swift_beginAccess();
  swift_retain();
  sub_239267C70(v37, v45, &qword_256927AD0);
  swift_endAccess();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader) = 0;
  v44(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, 1, 1, v43);
  type metadata accessor for SegmentIDConverter();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter) = sub_2392E2D90();
  sub_2392AF810();
  if (v36)
  {
    swift_release();
  }
  else
  {
    v47 = type metadata accessor for MemoryLogger();
    (*(void (**)(unint64_t, unint64_t))(v47 + 88))(0xD00000000000003DLL, 0x800000023935CE80);
  }
  swift_release();
  return v6;
}

uint64_t sub_2392A8CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(unint64_t, unint64_t);
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v6(0xD00000000000001ELL, 0x800000023935C1A0);
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_session);
  swift_beginAccess();
  if (*v7 && (*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    v8 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    v9 = sub_239352098();
    v10 = sub_23935256C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Backend Managercd .. deinit: user did not call close, we do an internal call.", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 632))(v12);
  }
  v6(0xD000000000000021, 0x800000023935C1C0);
  sub_2392625B0(v1 + 16);
  sub_2392625B0(v1 + 32);
  sub_2392625B0(v1 + 48);
  sub_2392625B0(v1 + 64);
  sub_2392625B0(v1 + 80);
  sub_2392625B0(v1 + 96);
  sub_23925FE28(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL, &qword_256927AD0);
  swift_release();
  sub_23925FE28(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, &qword_256927AD0);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_23925FE28(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest, &qword_256928DE8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2392A8FC4()
{
  sub_2392A8CE8();
  return swift_deallocClassInstance();
}

uint64_t sub_2392A8FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v19 = a1;
  v2 = sub_239352170();
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2393521C4();
  v20 = *(_QWORD *)(v5 - 8);
  v21 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PhotogrammetrySample(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v12 = swift_allocObject();
  swift_weakInit();
  sub_239268820(v19, (uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PhotogrammetrySample);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  sub_2392C4FE0((uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for PhotogrammetrySample);
  aBlock[4] = sub_2392C3640;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC50E0;
  v15 = _Block_copy(aBlock);
  v16 = v11;
  swift_retain();
  sub_239352188();
  v23 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v7, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_2392A9284(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t result;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  _QWORD *v51;
  __CVBuffer *v52;
  int64_t Width;
  int64_t Height;
  int64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61[3];
  uint64_t v62;

  v59 = a2;
  v2 = type metadata accessor for PhotogrammetrySample(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (uint64_t *)((char *)&v58 - v7);
  MEMORY[0x24BDAC7A8](v6);
  v60 = sub_2393520B0();
  v9 = *(_QWORD *)(v60 - 8);
  v10 = MEMORY[0x24BDAC7A8](v60);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v58 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v58 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v58 - v20;
  MEMORY[0x24BDAC7A8](v19);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0x706D617328646461, 0xEC000000293A656CLL);
  v23 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) != 0)
    {
      v30 = sub_239275AB0();
      v25 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v30, v60);
      v31 = sub_239352098();
      v32 = sub_239352578();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_23925B000, v31, v32, "Process has started, ignoring new samples.", v33, 2u);
        MEMORY[0x23B83BC04](v33, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      v34 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      v35 = v15;
      return v34(v35, v25);
    }
    v36 = sub_2392A2A78((uint64_t)v59, 0, 0);
    swift_beginAccess();
    v58 = v36;
    v37 = CPGSessionAddSampleWithCallbacks();
    if (v37)
    {
      v38 = v37;
      v39 = sub_239275AB0();
      v40 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v39, v60);
      sub_239268820((uint64_t)v59, (uint64_t)v5, type metadata accessor for PhotogrammetrySample);
      v41 = sub_239352098();
      v42 = sub_23935256C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        *(_DWORD *)v43 = 134349312;
        v44 = *v5;
        sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySample);
        v62 = v44;
        v40 = v60;
        sub_2393526B0();
        *(_WORD *)(v43 + 12) = 1026;
        LODWORD(v62) = v38;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v41, v42, "Failed to add sample of id = %{public}ld, with error code = %{public}d", (uint8_t *)v43, 0x12u);
        MEMORY[0x23B83BC04](v43, -1, -1);
      }
      else
      {
        sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySample);
      }
      v21 = v18;
    }
    else
    {
      v45 = v59;
      v46 = *v59;
      swift_beginAccess();
      sub_23927DD50(v61, v46);
      swift_endAccess();
      v47 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v21, v47, v60);
      sub_239268820((uint64_t)v45, (uint64_t)v8, type metadata accessor for PhotogrammetrySample);
      v41 = sub_239352098();
      v48 = sub_239352578();
      if (os_log_type_enabled(v41, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v49 = 134349056;
        v50 = *v8;
        sub_2392688AC((uint64_t)v8, type metadata accessor for PhotogrammetrySample);
        v62 = v50;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v41, v48, "Added sample of id = %{public}ld", v49, 0xCu);
        MEMORY[0x23B83BC04](v49, -1, -1);
      }
      else
      {
        sub_2392688AC((uint64_t)v8, type metadata accessor for PhotogrammetrySample);
      }
      v40 = v60;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v40);
    CPGSampleRelease();
    v51 = v59;
    sub_2392B18C0((uint64_t)v59);
    v52 = (__CVBuffer *)v51[1];
    Width = CVPixelBufferGetWidth(v52);
    Height = CVPixelBufferGetHeight(v52);
    v55 = Width * Height;
    if ((unsigned __int128)(Width * (__int128)Height) >> 64 == (Width * Height) >> 63)
    {
      if (v55 < 0)
      {
LABEL_33:
        result = sub_23935283C();
        __break(1u);
        return result;
      }
      v56 = (_QWORD *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated);
      swift_beginAccess();
      if (!__CFADD__(*v56, v55))
      {
        *v56 += v55;
        v57 = (_QWORD *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated);
        swift_beginAccess();
        if (*v57 != -1)
        {
          ++*v57;
          return swift_release();
        }
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v24 = sub_239275AB0();
  v25 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v24, v60);
  v26 = sub_239352098();
  v27 = sub_23935256C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_23925B000, v26, v27, "Skipped adding sample. Internal manager is closed!", v28, 2u);
    MEMORY[0x23B83BC04](v28, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
  v34 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v35 = v12;
  return v34(v35, v25);
}

uint64_t sub_2392A9AA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_239352170();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2393521C4();
  v8 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a1;
  aBlock[4] = sub_2392C36A8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5130;
  v14 = _Block_copy(aBlock);
  v15 = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_239352188();
  v20 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v5, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_2392A9CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  char v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  float32x4_t *v42;
  float32x4_t v43;
  float32x4_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int updated;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  _QWORD v77[2];
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  __int128 v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t *v90;
  float64x2_t v91;
  float64x2_t v92;
  float32x4_t v93;
  float64x2_t v94;
  uint64_t v95;
  float64x2_t v96;
  float64x2_t v97;
  float64x2_t v98;
  float64x2_t v99;
  float64x2_t v100;
  float64x2_t v101;
  float64x2_t v102;
  float64x2_t v103;
  float64x2_t v104[9];

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v77 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v77 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v77 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v77 - v17;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0xD00000000000002DLL, 0x800000023935CE50);
  v20 = Strong;
  v21 = *(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed);
  v87 = v3;
  if ((v21 & 1) != 0)
  {
    v22 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v22, v3);
    v23 = sub_239352098();
    v24 = sub_23935256C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23925B000, v23, v24, "Update VIO camera transform exited. Backend manager is closed.", v25, 2u);
      MEMORY[0x23B83BC04](v25, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v87);
  }
  v27 = (_QWORD *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_session);
  swift_beginAccess();
  v83 = v27;
  if (!*v27)
    return swift_release();
  if (!*(_QWORD *)(a2 + 16))
    return swift_release();
  if (!CPGSampleCameraTransformMapCreate())
    return swift_release();
  v79 = v10;
  v80 = v18;
  v78 = v13;
  v28 = *(_QWORD *)(a2 + 64);
  v88 = a2 + 64;
  v29 = 1 << *(_BYTE *)(a2 + 32);
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v31 = v30 & v28;
  v81 = v20;
  v32 = v20 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet;
  swift_bridgeObjectRetain();
  v90 = (uint64_t *)v32;
  swift_beginAccess();
  v82 = 0;
  v33 = 0;
  v89 = (unint64_t)(v29 + 63) >> 6;
  *(_QWORD *)&v34 = 134349314;
  v84 = v34;
  v77[1] = MEMORY[0x24BEE4AD8] + 8;
  v86 = v4;
  while (1)
  {
    if (v31)
    {
      v35 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v36 = v35 | (v33 << 6);
      goto LABEL_30;
    }
    v37 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      result = sub_23935283C();
      __break(1u);
      return result;
    }
    if (v37 >= v89)
      goto LABEL_47;
    v38 = *(_QWORD *)(v88 + 8 * v37);
    ++v33;
    if (!v38)
    {
      v33 = v37 + 1;
      if (v37 + 1 >= v89)
        goto LABEL_47;
      v38 = *(_QWORD *)(v88 + 8 * v33);
      if (!v38)
      {
        v33 = v37 + 2;
        if (v37 + 2 >= v89)
          goto LABEL_47;
        v38 = *(_QWORD *)(v88 + 8 * v33);
        if (!v38)
          break;
      }
    }
LABEL_29:
    v31 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v33 << 6);
LABEL_30:
    v40 = *v90;
    if (*(_QWORD *)(*v90 + 16))
    {
      v41 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v36);
      v42 = (float32x4_t *)(*(_QWORD *)(a2 + 56) + (v36 << 6));
      v43 = v42[1];
      v91 = *(float64x2_t *)v42;
      v92 = (float64x2_t)v43;
      v44 = v42[3];
      v93 = v42[2];
      v94 = (float64x2_t)v44;
      v45 = sub_239352974();
      v46 = -1 << *(_BYTE *)(v40 + 32);
      v47 = v45 & ~v46;
      if (((*(_QWORD *)(v40 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) != 0)
      {
        v48 = *(_QWORD *)(v40 + 48);
        if (*(_QWORD *)(v48 + 8 * v47) == v41)
        {
LABEL_36:
          if (v41 < 0)
            goto LABEL_58;
          sub_2392DEE24(v104, (float32x4_t)v91, (float32x4_t)v92, v93, (float32x4_t)v94);
          v96 = v104[0];
          v97 = v104[1];
          v98 = v104[2];
          v99 = v104[3];
          v100 = v104[4];
          v101 = v104[5];
          v102 = v104[6];
          v103 = v104[7];
          v50 = CPGSampleCameraTransformMapAddBySampleID();
          v51 = sub_239275AB0();
          v52 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
          if (v50)
          {
            v53 = v16;
            v52(v16, v51, v3);
            v54 = sub_239352098();
            v55 = sub_23935256C();
            if (os_log_type_enabled(v54, v55))
            {
              v56 = swift_slowAlloc();
              v57 = swift_slowAlloc();
              v95 = v57;
              *(_DWORD *)v56 = v84;
              *(_QWORD *)(v56 + 4) = v41;
              *(_WORD *)(v56 + 12) = 2082;
              v96 = v91;
              v97 = v92;
              v98 = (float64x2_t)v93;
              v99 = v94;
              type metadata accessor for simd_float4x4(0);
              v58 = sub_23935232C();
              *(_QWORD *)(v56 + 14) = sub_23925F3EC(v58, v59, &v95);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23925B000, v54, v55, "Failed to update to map sample of id = %{public}ld with updated VIO transform = %{public}s", (uint8_t *)v56, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v57, -1, -1);
              v60 = v56;
              v3 = v87;
              MEMORY[0x23B83BC04](v60, -1, -1);
            }

            v4 = v86;
            (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v3);
            v16 = v53;
          }
          else
          {
            v52(v80, v51, v3);
            v61 = sub_239352098();
            v62 = sub_239352578();
            if (os_log_type_enabled(v61, v62))
            {
              v63 = swift_slowAlloc();
              v77[0] = swift_slowAlloc();
              v95 = v77[0];
              *(_DWORD *)v63 = v84;
              *(_QWORD *)(v63 + 4) = v41;
              *(_WORD *)(v63 + 12) = 2082;
              v96 = v91;
              v97 = v92;
              v98 = (float64x2_t)v93;
              v99 = v94;
              type metadata accessor for simd_float4x4(0);
              v64 = sub_23935232C();
              *(_QWORD *)(v63 + 14) = sub_23925F3EC(v64, v65, &v95);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23925B000, v61, v62, "Updated to map sample of id = %{public}ld with updated VIO transform = %{public}s", (uint8_t *)v63, 0x16u);
              v82 = 1;
              v66 = v77[0];
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v66, -1, -1);
              v67 = v63;
              v3 = v87;
              MEMORY[0x23B83BC04](v67, -1, -1);

              v4 = v86;
              (*(void (**)(char *, uint64_t))(v86 + 8))(v80, v3);
            }
            else
            {

              v4 = v86;
              (*(void (**)(char *, uint64_t))(v86 + 8))(v80, v3);
              v82 = 1;
            }
          }
        }
        else
        {
          v49 = ~v46;
          while (1)
          {
            v47 = (v47 + 1) & v49;
            if (((*(_QWORD *)(v40 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) == 0)
              break;
            if (*(_QWORD *)(v48 + 8 * v47) == v41)
              goto LABEL_36;
          }
        }
      }
    }
  }
  v39 = v37 + 3;
  if (v39 < v89)
  {
    v38 = *(_QWORD *)(v88 + 8 * v39);
    if (!v38)
    {
      while (1)
      {
        v33 = v39 + 1;
        if (__OFADD__(v39, 1))
          goto LABEL_57;
        if (v33 >= v89)
          goto LABEL_47;
        v38 = *(_QWORD *)(v88 + 8 * v33);
        ++v39;
        if (v38)
          goto LABEL_29;
      }
    }
    v33 = v39;
    goto LABEL_29;
  }
LABEL_47:
  swift_release();
  if ((v82 & 1) != 0)
  {
    updated = CPGSessionUpdateSampleCameraTransforms();
    v69 = sub_239275AB0();
    v70 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    if (updated)
    {
      v70(v79, v69, v3);
      v71 = sub_239352098();
      v72 = sub_23935256C();
      if (os_log_type_enabled(v71, v72))
      {
        v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v73 = 0;
        _os_log_impl(&dword_23925B000, v71, v72, "Failed to update the sample camera transform map", v73, 2u);
        MEMORY[0x23B83BC04](v73, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v79, v3);
    }
    else
    {
      v70(v78, v69, v3);
      v74 = sub_239352098();
      v75 = sub_239352578();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v76 = 0;
        _os_log_impl(&dword_23925B000, v74, v75, "Success to update the sample camera transform map", v76, 2u);
        MEMORY[0x23B83BC04](v76, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v78, v3);
    }
  }
  CPGSampleCameraTransformMapRelease();
  return swift_release();
}

uint64_t sub_2392AA5D4(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 v19;
  void *v20;
  id v21;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v6 = v5;
  v25 = a4;
  v26 = a5;
  v23 = a2;
  v24 = a3;
  v8 = sub_239352170();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_2393521C4();
  v12 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a1;
  v18 = v24;
  *(__n128 *)(v17 + 32) = v23;
  *(__n128 *)(v17 + 48) = v18;
  v19 = v26;
  *(__n128 *)(v17 + 64) = v25;
  *(__n128 *)(v17 + 80) = v19;
  aBlock[4] = sub_2392C36D4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5180;
  v20 = _Block_copy(aBlock);
  v21 = v15;
  swift_retain();
  sub_239352188();
  v29 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v9, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v14, v11, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  swift_release();
  return swift_release();
}

uint64_t sub_2392AA824(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t (*v41)(char *, uint64_t);
  char *v42;
  int updated;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  float64x2_t v59;
  float32x4_t v60;
  float32x4_t v61;
  float32x4_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float32x4_t v65;
  float32x4_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;

  v61 = a3;
  v62 = a4;
  v59 = (float64x2_t)a1;
  v60 = a2;
  v81 = *MEMORY[0x24BDAC8D0];
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v57 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v57 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v57 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v57 - v21;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0xD00000000000003BLL, 0x800000023935CE10);
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    v29 = (_QWORD *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_session);
    swift_beginAccess();
    if (!*v29
      || (a6 & 0x8000000000000000) != 0
      || (sub_2392DF8CC((float32x4_t)v59, v60, v61, (int8x16_t)v62) & 1) == 0)
    {
      v34 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v34, v7);
      v35 = sub_239352098();
      v36 = sub_23935256C();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = swift_slowAlloc();
        v38 = swift_slowAlloc();
        v72.i64[0] = v38;
        *(_DWORD *)v37 = 134349314;
        v63.i64[0] = a6;
        sub_2393526B0();
        *(_WORD *)(v37 + 12) = 2082;
        v63 = (float32x4_t)v59;
        v64 = v60;
        v65 = v61;
        v66 = v62;
        type metadata accessor for simd_float4x4(0);
        v39 = sub_23935232C();
        v62.i64[0] = v7;
        v63.i64[0] = sub_23925F3EC(v39, v40, (uint64_t *)&v72);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v35, v36, "Invalid argument segmentID = %{public}ld or bounding box transform = %{public}s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v38, -1, -1);
        MEMORY[0x23B83BC04](v37, -1, -1);
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v62.i64[0]);
      }

      swift_release();
      v41 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      v42 = v14;
      return v41(v42, v7);
    }
    v80 = 0;
    sub_2392DEE24((float64x2_t *)&v63, (float32x4_t)v59, v60, v61, v62);
    v72 = v63;
    v73 = v64;
    v74 = v65;
    v75 = v66;
    v76 = v67;
    v77 = v68;
    v78 = v69;
    v79 = v70;
    if (CPGBoundingBoxCreateFromTransform())
    {
      v30 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v30, v7);
      v31 = sub_239352098();
      v32 = sub_23935256C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_23925B000, v31, v32, "Failed to create bounding box from transform.", v33, 2u);
        MEMORY[0x23B83BC04](v33, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      v41 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      v42 = v17;
      return v41(v42, v7);
    }
    if (a6 >> 31)
      __break(1u);
    updated = CPGSessionUpdateBoundingBoxBySegmentID();
    v44 = sub_239275AB0();
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    if (updated)
    {
      v45(v20, v44, v7);
      v46 = sub_239352098();
      v47 = sub_23935256C();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_23925B000, v46, v47, "Failed to update bounding box by segment ID.", v48, 2u);
        MEMORY[0x23B83BC04](v48, -1, -1);
      }

      v49 = *(void (**)(char *, uint64_t))(v8 + 8);
      v50 = v20;
    }
    else
    {
      v45(v22, v44, v7);
      v51 = sub_239352098();
      v52 = sub_239352578();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc();
        v58 = swift_slowAlloc();
        v71 = v58;
        *(_DWORD *)v53 = 136446466;
        v57 = v53 + 4;
        v72 = (float32x4_t)v59;
        v73 = v60;
        v74 = v61;
        v75 = v62;
        type metadata accessor for simd_float4x4(0);
        v54 = sub_23935232C();
        v62.i64[0] = v7;
        v72.i64[0] = sub_23925F3EC(v54, v55, &v71);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2050;
        v72.i64[0] = a6;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v51, v52, "Successfully updated bounding box transform = %{public}s for segmentID = %{public}ld", (uint8_t *)v53, 0x16u);
        v56 = v58;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v56, -1, -1);
        MEMORY[0x23B83BC04](v53, -1, -1);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v62.i64[0]);
LABEL_30:
        CPGBoundingBoxRelease();
        return swift_release();
      }

      v49 = *(void (**)(char *, uint64_t))(v8 + 8);
      v50 = v22;
    }
    v49(v50, v7);
    goto LABEL_30;
  }
  v24 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v24, v7);
  v25 = sub_239352098();
  v26 = sub_23935256C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_23925B000, v25, v26, "Update bounding box exited. Backend manager is closed.", v27, 2u);
    MEMORY[0x23B83BC04](v27, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
  v41 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  v42 = v11;
  return v41(v42, v7);
}

uint64_t sub_2392AAF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_239352170();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2393521C4();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_239352098();
  v13 = sub_239352578();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v26 = v1;
    v16 = v15;
    aBlock[0] = v15;
    v27 = v3;
    *(_DWORD *)v14 = 136380675;
    v32 = sub_23925F3EC(0x657A696C616E6966, 0xEF29287475706E49, aBlock);
    v3 = v27;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v12, v13, "Backend Manager.%{private}s called.", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    v1 = v26;
    MEMORY[0x23B83BC04](v17, -1, -1);
    MEMORY[0x23B83BC04](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v19 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_2392C36E4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC51A8;
  v20 = _Block_copy(aBlock);
  v21 = v18;
  swift_retain();
  v22 = v28;
  sub_239352188();
  v32 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  v23 = v31;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v22, v23, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v30);
  swift_release();
  return swift_release();
}

uint64_t sub_2392AB2D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v0 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v40 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v40 - v11;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0x657A696C616E6966, 0xEF29287475706E49);
  v14 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v15 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v15, v3);
    v16 = sub_239352098();
    v17 = sub_23935256C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23925B000, v16, v17, "Finalize input exited. Backend manager is closed.", v18, 2u);
      MEMORY[0x23B83BC04](v18, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    v20 = OBJC_IVAR____TtC6CoreOC9PGManager_processStarted;
    v21 = *(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted);
    v22 = sub_239275AB0();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    if ((v21 & 1) != 0)
    {
      v23(v10, v22, v3);
      v24 = sub_239352098();
      v25 = sub_239352578();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_23925B000, v24, v25, "Process has started, the input must have been finalized.", v26, 2u);
        MEMORY[0x23B83BC04](v26, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {
      v23(v12, v22, v3);
      v27 = sub_239352098();
      v28 = sub_239352578();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        v44[0] = v42;
        v41 = v29;
        *(_DWORD *)v29 = 136380675;
        v40 = v29 + 4;
        v43 = sub_23925F3EC(0x657A696C616E6966, 0xEF29287475706E49, v44);
        sub_2393526B0();
        v30 = v28;
        v31 = v41;
        _os_log_impl(&dword_23925B000, v27, v30, "Backend Manager.%{private}s happened", v41, 0xCu);
        v32 = v42;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v32, -1, -1);
        MEMORY[0x23B83BC04](v31, -1, -1);
      }

      v33 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
      if ((*(_BYTE *)(v14 + v20) & 1) == 0)
      {
        *(_BYTE *)(v14 + v20) = 1;
        if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 440))(v33))
        {
          v35 = v34;
          ObjectType = swift_getObjectType();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v35 + 8))(v2, ObjectType, v35);
          swift_unknownObjectRelease();
          sub_2392688AC((uint64_t)v2, type metadata accessor for PhotogrammetrySession.Output);
        }
      }
      swift_beginAccess();
      if (CPGSessionFinalizeInput() && (*(uint64_t (**)(void))(*(_QWORD *)v14 + 512))())
      {
        v38 = v37;
        v39 = swift_getObjectType();
        (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(v38 + 8))(0, 0, 1, v39, v38);
        swift_release();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
  }
}

uint64_t sub_2392AB7B8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  const void *v19;
  uint64_t (*v20)();
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t (*v40)();
  _QWORD *v41;

  v2 = v1;
  v4 = sub_239352170();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393521C4();
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader])
    {
      v12 = swift_retain();
      sub_2392B1BB0(v12, a1);
      swift_release();
      v13 = &unk_25692D000;
LABEL_6:
      v20 = 0;
      v31 = 0;
LABEL_7:
      v21 = *(void **)&v2[v13[111]];
      v22 = swift_allocObject();
      swift_weakInit();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v22;
      *(_QWORD *)(v23 + 24) = a1;
      v40 = sub_2392C3734;
      v41 = (_QWORD *)v23;
      aBlock = MEMORY[0x24BDAC760];
      v37 = 1107296256;
      v38 = sub_239262EDC;
      v39 = &unk_250AC5248;
      v24 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      v25 = v21;
      swift_retain();
      sub_239352188();
      v35 = v11;
      sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
      sub_239352734();
      MEMORY[0x23B83A4A0](0, v10, v6, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
      swift_release();
      swift_release();
      return sub_2392C373C((uint64_t)v20);
    }
    v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples];
    if (v14)
    {
      v15 = *(void **)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_processQueue];
      v16 = swift_allocObject();
      swift_weakInit();
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = v16;
      v17[3] = v14;
      v17[4] = a1;
      v40 = sub_2392C3750;
      v41 = v17;
      aBlock = MEMORY[0x24BDAC760];
      v37 = 1107296256;
      v38 = sub_239262EDC;
      v39 = &unk_250AC5298;
      v31 = _Block_copy(&aBlock);
      swift_retain_n();
      v30 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_239352188();
      v35 = MEMORY[0x24BEE4AF8];
      sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
      sub_239352734();
      v18 = v30;
      v19 = v31;
      MEMORY[0x23B83A4A0](0, v10, v6, v31);
      _Block_release(v19);
      swift_release();

      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
      v11 = MEMORY[0x24BEE4AF8];
      swift_release();
      swift_release();
      v13 = &unk_25692D000;
      goto LABEL_6;
    }
    v26 = *(void **)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue];
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = sub_2392C36EC;
    *(_QWORD *)(v27 + 24) = v1;
    v40 = sub_239292018;
    v41 = (_QWORD *)v27;
    aBlock = MEMORY[0x24BDAC760];
    v37 = 1107296256;
    v38 = sub_23928562C;
    v39 = &unk_250AC51F8;
    v28 = _Block_copy(&aBlock);
    v29 = v26;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v29, v28);

    _Block_release(v28);
    LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v28 & 1) == 0)
    {
      v31 = v1;
      v11 = MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)&unk_25692D000;
      v20 = sub_2392C36EC;
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2392ABCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;

  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0xD000000000000018, 0x800000023935CDF0);
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v13 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v13, v5);
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23925B000, v14, v15, "Process add sample exited. Backend manager is closed.", v16, 2u);
      MEMORY[0x23B83BC04](v16, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) != 0)
  {
    v18 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v18, v5);
    v19 = sub_239352098();
    v20 = sub_239352578();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_23925B000, v19, v20, "Process has started, ignoring new samples.", v21, 2u);
      MEMORY[0x23B83BC04](v21, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    sub_2392B2784(a2, a3, 0, 1, 0, 1);
    return swift_release();
  }
}

uint64_t sub_2392ABF70(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  v2 = type metadata accessor for PhotogrammetrySession.Output(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 1;
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440))(result);
    if (result)
    {
      v7 = v6;
      ObjectType = swift_getObjectType();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 8))(v5, ObjectType, v7);
      swift_unknownObjectRelease();
      return sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
  }
  return result;
}

uint64_t sub_2392AC04C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  uint64_t v66;
  uint64_t (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t ObjectType;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  char *v106;
  uint64_t (*v107)(_QWORD);
  uint64_t v108;
  uint64_t (*v109)(uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(_QWORD);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t);
  uint64_t v124;
  uint64_t (*v125)(_QWORD);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(_QWORD);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t Strong;
  char v162[144];

  v3 = sub_2393520B0();
  v143 = *(_QWORD *)(v3 - 8);
  v144 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v139 = (char *)&v136 - v7;
  v140 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x24BDAC7A8](v140);
  v9 = (char *)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239351F3C();
  v147 = *(_QWORD *)(v10 - 8);
  v148 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v146 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23925FB08(&qword_256929588);
  v156 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v150 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23925FB08(&qword_256929590);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (unint64_t *)((char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t *)((char *)&v136 - v18);
  v160 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v160);
  v159 = (uint64_t)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for PhotogrammetrySession.Request(0);
  v154 = *(_QWORD *)(v138 - 8);
  v21 = MEMORY[0x24BDAC7A8](v138);
  v157 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v142 = (char *)&v136 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v141 = (char *)&v136 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v153 = (uint64_t)&v136 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v136 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v149 = (uint64_t)&v136 - v32;
  v33 = sub_23925FB08(&qword_256928DE8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v137 = (uint64_t)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v136 - v36;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0xD000000000000018, 0x800000023935CDF0);
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v38 = sub_239275AB0();
    v40 = v143;
    v39 = v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v6, v38, v144);
    v41 = sub_239352098();
    v42 = sub_23935256C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_23925B000, v41, v42, "Process exited. Backend manager is closed.", v43, 2u);
      MEMORY[0x23B83BC04](v43, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v6, v39);
  }
  v45 = sub_2392B43EC((unint64_t)v162, a2);
  LODWORD(v152) = v46;
  v47 = *(_QWORD *)(v45 + 16);
  if (v47 != *(_QWORD *)(a2 + 16))
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v48 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  v49 = __OFADD__(v48, v47);
  v50 = v48 + v47;
  if (v49)
  {
LABEL_72:
    __break(1u);
    JUMPOUT(0x2392AD1B0);
  }
  v151 = (uint64_t)v9;
  v155 = v45;
  v51 = v162[0];
  v158 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  v52 = Strong;
  *(_QWORD *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v50;
  sub_2392AF268();
  if (*(_BYTE *)(v52 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) != 1)
  {
    v64 = *(_QWORD *)(v155 + 16);
    if (!v64)
    {
      swift_bridgeObjectRelease();
LABEL_45:
      v99 = sub_239275AB0();
      v101 = v143;
      v100 = v144;
      v102 = v139;
      (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v139, v99, v144);
      v103 = sub_239352098();
      v104 = sub_23935256C();
      if (os_log_type_enabled(v103, v104))
      {
        v105 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v105 = 0;
        _os_log_impl(&dword_23925B000, v103, v104, "Process has not started.", v105, 2u);
        MEMORY[0x23B83BC04](v105, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v102, v100);
    }
    v65 = *(uint64_t (**)(uint64_t))(*(_QWORD *)Strong + 440);
    v153 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
    v151 = OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled;
    v66 = v155 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    v156 = *(_QWORD *)(v154 + 72);
    swift_bridgeObjectRetain();
    v67 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v157;
    v152 = (uint64_t)v65;
    while (1)
    {
      v69 = sub_239268820(v66, (uint64_t)v67, type metadata accessor for PhotogrammetrySession.Request);
      if (v65(v69))
      {
        v71 = v70;
        ObjectType = swift_getObjectType();
        v73 = sub_23925FB08(&qword_256929550);
        v74 = v159;
        v75 = v64;
        v76 = v159 + *(int *)(v73 + 48);
        sub_239268820((uint64_t)v67, v159, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)v76 = 4;
        *(_BYTE *)(v76 + 8) = 1;
        v64 = v75;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 8))(v74, ObjectType, v71);
        swift_unknownObjectRelease();
        v77 = v74;
        v65 = (uint64_t (*)(uint64_t))v152;
        sub_2392688AC(v77, type metadata accessor for PhotogrammetrySession.Output);
      }
      v78 = *(_QWORD *)(Strong + v158);
      v49 = __OFSUB__(v78, 1);
      v79 = v78 - 1;
      if (v49)
        break;
      *(_QWORD *)(Strong + v158) = v79;
      if (v79 < 0)
        goto LABEL_67;
      if (!v79)
      {
        swift_retain();
        sub_239351148();
        v80 = swift_release();
        if (v162[0] == 1 || *(_BYTE *)(Strong + v151) == 1)
        {
          if (v65(v80))
          {
            v82 = v81;
            v83 = swift_getObjectType();
            v84 = v64;
            v85 = v159;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 8))(v85, v83, v82);
            swift_unknownObjectRelease();
            v86 = v85;
            v64 = v84;
            sub_2392688AC(v86, type metadata accessor for PhotogrammetrySession.Output);
          }
          v68 = Strong;
          v162[0] = 0;
          swift_retain();
          sub_2393511FC((uint64_t)v162);
          swift_release();
          *(_BYTE *)(v68 + v151) = 0;
        }
        else if (v65(v80))
        {
          v88 = v87;
          v89 = swift_getObjectType();
          v90 = v64;
          v91 = v159;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 8))(v91, v89, v88);
          swift_unknownObjectRelease();
          v92 = v91;
          v64 = v90;
          sub_2392688AC(v92, type metadata accessor for PhotogrammetrySession.Output);
        }
      }
      v67 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v157;
      sub_2392688AC((uint64_t)v157, type metadata accessor for PhotogrammetrySession.Request);
      v66 += v156;
      if (!--v64)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if ((v152 & 1) == 0)
    goto LABEL_10;
  v93 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_23926059C(v93, (uint64_t)v37, &qword_256928DE8);
  v94 = v138;
  v157 = *(char **)(v154 + 48);
  v95 = ((uint64_t (*)(char *, uint64_t, uint64_t))v157)(v37, 1, v138);
  sub_23925FE28((uint64_t)v37, &qword_256928DE8);
  if (v95 == 1)
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v51 != 7)
  {
    v162[0] = v51;
    if ((sub_2392B4AB4(v162) & 1) != 0)
    {
      v96 = v137;
      sub_23926059C(v93, v137, &qword_256928DE8);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v157)(v96, 1, v94) != 1)
      {
        v97 = Strong;
        v98 = sub_2392B51C4(v96);
        sub_2392688AC(v96, type metadata accessor for PhotogrammetrySession.Request);
        *(double *)(v97 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = v98;
LABEL_10:
        v53 = 0;
        v54 = v155;
        v55 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v155 + 16);
        v149 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
        v143 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests;
        v144 = OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap;
        v145 = v17;
        while (1)
        {
          if ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v53 == v55)
          {
            v56 = 1;
            v53 = (unint64_t)v55;
          }
          else
          {
            if (v53 >= *(_QWORD *)(v54 + 16))
              goto LABEL_68;
            v157 = (char *)(v53 + 1);
            v57 = (uint64_t)&v150[*(int *)(v12 + 48)];
            sub_239268820(v54+ ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))+ *(_QWORD *)(v154 + 72) * v53, v57, type metadata accessor for PhotogrammetrySession.Request);
            v58 = (uint64_t)v17 + *(int *)(v12 + 48);
            *v17 = v53;
            sub_2392C4FE0(v57, v58, type metadata accessor for PhotogrammetrySession.Request);
            v56 = 0;
            v53 = (unint64_t)v157;
          }
          v59 = v156;
          (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v156 + 56))(v17, v56, 1, v12);
          sub_239268764((uint64_t)v17, (uint64_t)v19, &qword_256929590);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v59 + 48))(v19, 1, v12) == 1)
            goto LABEL_37;
          v60 = *v19;
          sub_2392C4FE0((uint64_t)v19 + *(int *)(v12 + 48), (uint64_t)v31, type metadata accessor for PhotogrammetrySession.Request);
          if (v60 || (v152 & 0x100) == 0)
          {
            v61 = v153;
            sub_239268820((uint64_t)v31, v153, type metadata accessor for PhotogrammetrySession.Request);
            v62 = sub_23925FB08(&qword_256928730);
            v63 = (char *)&loc_2392AC678
                + dword_2392AD1BC[(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 3, v62)];
            __asm { BR              X9 }
          }
          sub_2392688AC((uint64_t)v31, type metadata accessor for PhotogrammetrySession.Request);
          v54 = v155;
        }
      }
LABEL_74:
      __break(1u);
      JUMPOUT(0x2392AD1BCLL);
    }
  }
  v106 = *(char **)(v155 + 16);
  if (!v106)
  {
LABEL_37:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v107 = *(uint64_t (**)(_QWORD))(*(_QWORD *)Strong + 440);
  v152 = OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled;
  v153 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  v108 = v155 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
  v156 = *(_QWORD *)(v154 + 72);
  swift_bridgeObjectRetain();
  v109 = type metadata accessor for PhotogrammetrySession.Request;
  v110 = v149;
  do
  {
    v112 = sub_239268820(v108, v110, v109);
    if (v107(v112))
    {
      v114 = v113;
      v115 = swift_getObjectType();
      v116 = *(int *)(sub_23925FB08(&qword_256929550) + 48);
      v157 = v106;
      v117 = v107;
      v118 = v159;
      v119 = v159 + v116;
      sub_239268820(v110, v159, v109);
      *(_QWORD *)v119 = 3;
      *(_BYTE *)(v119 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 8))(v118, v115, v114);
      swift_unknownObjectRelease();
      v120 = v118;
      v107 = v117;
      v106 = v157;
      sub_2392688AC(v120, type metadata accessor for PhotogrammetrySession.Output);
    }
    v121 = *(_QWORD *)(Strong + v158);
    v49 = __OFSUB__(v121, 1);
    v122 = v121 - 1;
    if (v49)
      goto LABEL_69;
    *(_QWORD *)(Strong + v158) = v122;
    if (v122 < 0)
      goto LABEL_70;
    v123 = v109;
    if (!v122)
    {
      swift_retain();
      sub_239351148();
      v124 = swift_release();
      if (v162[0] == 1 || *(_BYTE *)(Strong + v152) == 1)
      {
        v125 = v107;
        if (v107(v124))
        {
          v127 = v126;
          v128 = swift_getObjectType();
          v129 = v159;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 8))(v129, v128, v127);
          swift_unknownObjectRelease();
          sub_2392688AC(v129, type metadata accessor for PhotogrammetrySession.Output);
        }
        v111 = Strong;
        v162[0] = 0;
        swift_retain();
        sub_2393511FC((uint64_t)v162);
        swift_release();
        *(_BYTE *)(v111 + v152) = 0;
        v107 = v125;
      }
      else if (v107(v124))
      {
        v131 = v130;
        v132 = swift_getObjectType();
        v133 = v107;
        v134 = v159;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 8))(v134, v132, v131);
        swift_unknownObjectRelease();
        v135 = v134;
        v107 = v133;
        sub_2392688AC(v135, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
    v110 = v149;
    v109 = v123;
    sub_2392688AC(v149, v123);
    v108 += v156;
    --v106;
  }
  while (v106);
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2392AD1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v1 = sub_239352170();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v15 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2393521C4();
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = 1;
  swift_retain();
  sub_2393511FC((uint64_t)aBlock);
  swift_release();
  v8 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  v9 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_2392C375C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC52C0;
  v10 = _Block_copy(aBlock);
  v11 = v8;
  swift_retain();
  sub_239352188();
  v16 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v2, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v7, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_2392AD40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE v25[24];

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = &v25[-v6];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v25[-v8];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0x29286C65636E6163, 0xE800000000000000);
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) != 0)
  {
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
    {
      v11 = sub_239275AB0();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v7, v11, v0);
      v12 = sub_239352098();
      v13 = sub_23935256C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_23925B000, v12, v13, "Skip cancel. Backend manager is closed.", v14, 2u);
        MEMORY[0x23B83BC04](v14, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v7, v0);
    }
    else
    {
      swift_beginAccess();
      v20 = CPGSessionCancelProcessing();
      if (v20 != -10 && v20)
      {
        v21 = sub_239275AB0();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v9, v21, v0);
        v22 = sub_239352098();
        v23 = sub_23935256C();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v24 = 0;
          _os_log_impl(&dword_23925B000, v22, v23, "Cancel processing submits but failed", v24, 2u);
          MEMORY[0x23B83BC04](v24, -1, -1);
        }

        (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v9, v0);
      }
    }
  }
  else
  {
    v16 = sub_239275AB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v4, v16, v0);
    v17 = sub_239352098();
    v18 = sub_239352578();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23925B000, v17, v18, "Process has not started, nothing to cancel.", v19, 2u);
      MEMORY[0x23B83BC04](v19, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
  }
  return swift_release();
}

uint64_t sub_2392AD720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t result;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD v20[2];

  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = sub_239352098();
  v14 = sub_239352578();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = a3;
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134349056;
    v20[1] = a2;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v13, v14, "Processing cancellation status callback with code = %{public}llu", v16, 0xCu);
    v17 = v16;
    a3 = v15;
    MEMORY[0x23B83BC04](v17, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (a1)
  {
    if (a4)
    {
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a4 + 1688);
      swift_retain();
      v19(a1, a2, a3);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2392AD8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t result;
  void *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  _QWORD v21[2];
  uint64_t aBlock;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t (*v26)();
  uint64_t v27;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock = v10;
    *(_DWORD *)v9 = 136380675;
    v21[1] = sub_23925F3EC(0x292865736F6C63, 0xE700000000000000, &aBlock);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v7, v8, "Backend Manager.%{private}s called", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v10, -1, -1);
    MEMORY[0x23B83BC04](v9, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 1;
    v12 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
    v26 = nullsub_1;
    v27 = 0;
    v13 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v23 = 1107296256;
    v24 = sub_23928562C;
    v25 = &unk_250AC52E8;
    v14 = _Block_copy(&aBlock);
    v15 = v12;
    swift_release();
    dispatch_sync(v15, v14);

    _Block_release(v14);
    result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v16 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
      v17 = swift_allocObject();
      swift_weakInit();
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = sub_2392C3764;
      *(_QWORD *)(v18 + 24) = v17;
      v26 = sub_239295A70;
      v27 = v18;
      aBlock = v13;
      v23 = 1107296256;
      v24 = sub_23928562C;
      v25 = &unk_250AC5338;
      v19 = _Block_copy(&aBlock);
      v20 = v16;
      swift_retain();
      swift_release();
      dispatch_sync(v20, v19);

      _Block_release(v19);
      LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      result = swift_release();
      if ((v19 & 1) == 0)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2392ADBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  void (*v17)(char *, uint64_t);
  int v18;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28[3];

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - v5;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return sub_2392A1828(0x292865736F6C63, 0xE700000000000000);
  v7 = sub_239275AB0();
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v25 = v8;
    v11 = swift_slowAlloc();
    v26 = v4;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v24 = v7;
    v14 = v13;
    v28[0] = v13;
    *(_DWORD *)v12 = 136380675;
    v27 = sub_23925F3EC(0x292865736F6C63, 0xE700000000000000, v28);
    v8 = v25;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "Backend Manager.%{private}s happened.", v12, 0xCu);
    swift_arrayDestroy();
    v15 = v14;
    v7 = v24;
    MEMORY[0x23B83BC04](v15, -1, -1);
    v16 = v12;
    v4 = v26;
    MEMORY[0x23B83BC04](v16, -1, -1);
  }

  v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  v17(v6, v0);
  swift_beginAccess();
  v18 = CPGSessionCancelProcessing();
  if (v18 != -10 && v18 != 0)
  {
    v8(v4, v7, v0);
    v20 = sub_239352098();
    v21 = sub_23935256C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_23925B000, v20, v21, "Unexpected return state for cancel.", v22, 2u);
      MEMORY[0x23B83BC04](v22, -1, -1);
    }

    v17(v4, v0);
  }
  sub_2392B7E64();
  return swift_release();
}

uint64_t sub_2392ADEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = sub_239352170();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393521C4();
  v21 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PhotogrammetrySample(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  result = MEMORY[0x24BDAC7A8](v10);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
  {
    v19 = v4;
    v20 = v7;
    v14 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
    sub_239268820(a1, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PhotogrammetrySample);
    v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v1;
    sub_2392C4FE0((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for PhotogrammetrySample);
    aBlock[4] = sub_2392C395C;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_239262EDC;
    aBlock[3] = &unk_250AC5388;
    v17 = _Block_copy(aBlock);
    v18 = v14;
    swift_retain();
    sub_239352188();
    v22 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v9, v6, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392AE154(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t result;
  char *v21;
  double *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t ObjectType;
  _QWORD v42[2];
  char *v43;
  double *v44;
  _QWORD *v45;
  uint64_t v46;
  _OWORD v47[4];
  char v48;

  v4 = type metadata accessor for PhotogrammetrySample(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (_QWORD *)((char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v42 - v14;
  MEMORY[0x24BDAC7A8](v13);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
  {
    v46 = v8;
    result = sub_2392A2A78((uint64_t)a2, *(NSObject **)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter), 0);
    v21 = (char *)a2 + *(int *)(v4 + 80);
    if ((v21[8] & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v22 = (double *)((char *)a2 + *(int *)(v4 + 68));
      if (((_BYTE)v22[1] & 1) == 0)
      {
        v23 = *(_QWORD *)v21;
        v24 = *v22;
        type metadata accessor for RelocContext();
        v25 = swift_retain();
        sub_239298B48(v24, v25, v23);
        swift_beginAccess();
        v26 = CPGSessionLocalizeSample();
        if (!v26)
          return CPGSampleRelease();
        v27 = v26;
        v44 = v22;
        v28 = sub_239275AB0();
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v28, v46);
        sub_239268820((uint64_t)a2, (uint64_t)v7, type metadata accessor for PhotogrammetrySample);
        v29 = sub_239352098();
        v30 = sub_23935256C();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (_DWORD *)swift_slowAlloc();
          v43 = v21;
          v32 = v31;
          *v31 = 134349312;
          v42[1] = v31 + 1;
          v45 = a2;
          v33 = *v7;
          sub_2392688AC((uint64_t)v7, type metadata accessor for PhotogrammetrySample);
          *(_QWORD *)&v47[0] = v33;
          sub_2393526B0();
          *((_WORD *)v32 + 6) = 1026;
          LODWORD(v47[0]) = v27;
          a2 = v45;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v29, v30, "Failed to re-localize sample of id = %{public}ld with\nerror = %{public}d", (uint8_t *)v32, 0x12u);
          v34 = v32;
          v21 = v43;
          MEMORY[0x23B83BC04](v34, -1, -1);
        }
        else
        {
          sub_2392688AC((uint64_t)v7, type metadata accessor for PhotogrammetrySample);
        }

        v35 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v46);
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 464))(v35);
        if (!result)
          return CPGSampleRelease();
        if ((v21[8] & 1) == 0)
        {
          if (((_BYTE)v44[1] & 1) == 0)
          {
            v37 = v36;
            v38 = *a2;
            v39 = *(_QWORD *)v21;
            v40 = *v44;
            ObjectType = swift_getObjectType();
            memset(v47, 0, sizeof(v47));
            v48 = 1;
            (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v37 + 8))(v47, v38, v39, ObjectType, v37, v40);
            swift_unknownObjectRelease();
            return CPGSampleRelease();
          }
LABEL_19:
          __break(1u);
          return result;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  v16 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v16, v8);
  v17 = sub_239352098();
  v18 = sub_239352578();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_23925B000, v17, v18, "Process has started, ignore new re-localization queries.", v19, 2u);
    MEMORY[0x23B83BC04](v19, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_2392AE738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 104))(result);
  if (!result)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = result;
  v23 = (*(uint64_t (**)(void))(*(_QWORD *)a4 + 128))();
  v14 = (*(double (**)(void))(*(_QWORD *)a4 + 152))();
  v15 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v15, v8);
  v16 = sub_239352098();
  v17 = sub_239352578();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (_DWORD *)swift_slowAlloc();
    v21 = a1;
    v19 = v18;
    *v18 = 134349312;
    v24 = a2;
    v22 = a2;
    sub_2393526B0();
    *((_WORD *)v19 + 6) = 2050;
    v24 = v23;
    a2 = v22;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v16, v17, "Processing re-localization callback for query sample of id = %{public}llu in static segment ID = %{public}ld", (uint8_t *)v19, 0x16u);
    v20 = v19;
    a1 = v21;
    MEMORY[0x23B83BC04](v20, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!a1)
    goto LABEL_10;
  if (a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)v13 + 1712))(a1, a2, a3, v23, v14);
    swift_release();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2392AE954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[8];

  v1 = sub_239352170();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2393521C4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader))
  {
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v10 = 0xD00000000000003ALL;
    *(_QWORD *)(v10 + 8) = 0x800000023935C1F0;
    *(_BYTE *)(v10 + 16) = 6;
    return swift_willThrow();
  }
  else
  {
    v12 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
    v20 = v7;
    v13 = swift_allocObject();
    v19 = v2;
    v14 = v13;
    swift_weakInit();
    aBlock[4] = sub_2392C39A8;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_239262EDC;
    aBlock[3] = &unk_250AC53B0;
    v18 = _Block_copy(aBlock);
    v17 = v12;
    swift_retain();
    sub_239352188();
    aBlock[7] = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
    sub_239352734();
    v15 = v17;
    v16 = v18;
    MEMORY[0x23B83A4A0](0, v9, v4, v18);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v20);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_2392AEBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  int v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  int v23;
  uint8_t *v24;
  _BYTE v25[24];

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = &v25[-v6];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v25[-v8];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0x2928656D75736572, 0xE800000000000000);
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v11 = sub_239275AB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v4, v11, v0);
    v12 = sub_239352098();
    v13 = sub_23935256C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23925B000, v12, v13, "Skip resume. PGManager is closed.", v14, 2u);
      MEMORY[0x23B83BC04](v14, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
  }
  else
  {
    swift_beginAccess();
    v16 = CPGSessionResumeProcessingWithCallbacks();
    v17 = sub_239275AB0();
    v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16);
    if (v16)
    {
      v18(v7, v17, v0);
      v19 = sub_239352098();
      v20 = sub_23935256C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_23925B000, v19, v20, "Request resumption failure.", v21, 2u);
        MEMORY[0x23B83BC04](v21, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v7, v0);
    }
    else
    {
      v18(v9, v17, v0);
      v22 = sub_239352098();
      v23 = sub_239352578();
      if (os_log_type_enabled(v22, (os_log_type_t)v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23925B000, v22, (os_log_type_t)v23, "Request resumption success.", v24, 2u);
        MEMORY[0x23B83BC04](v24, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v9, v0);
    }
  }
}

uint64_t sub_2392AEEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  double v18;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - v7;
  swift_beginAccess();
  if (*(float *)(v1 + 112) <= 0.0001)
  {
    *(_DWORD *)(v1 + 112) = 1008981770;
    v13 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v13, v2);
    swift_retain();
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134349056;
      v18 = *(float *)(v1 + 112);
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v14, v15, "Invalid mobile sfm point cloud voxel dimension, resume to default value %{public}f", v16, 0xCu);
      MEMORY[0x23B83BC04](v16, -1, -1);

    }
    else
    {

      swift_release();
    }
    v8 = v6;
  }
  else
  {
    v9 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v9, v2);
    swift_retain();
    v10 = sub_239352098();
    v11 = sub_239352578();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 134349056;
      v18 = *(float *)(v1 + 112);
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v10, v11, "Mobile sfm point cloud voxel dimension set to %{public}f", v12, 0xCu);
      MEMORY[0x23B83BC04](v12, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

float sub_2392AF188()
{
  uint64_t v0;

  swift_beginAccess();
  return *(float *)(v0 + 112);
}

uint64_t sub_2392AF1B8(float a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(float *)(v1 + 112) = a1;
  return sub_2392AEEFC();
}

uint64_t (*sub_2392AF1F8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2392AF238;
}

uint64_t sub_2392AF238(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_2392AEEFC();
  return result;
}

uint64_t sub_2392AF268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[2];

  v1 = type metadata accessor for PhotogrammetrySession.Output(0);
  result = MEMORY[0x24BDAC7A8](v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  if (v5 < 0)
  {
    __break(1u);
  }
  else if (!v5)
  {
    swift_retain();
    sub_239351148();
    v6 = swift_release();
    if (v14[1] == 1 || *(_BYTE *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) == 1)
    {
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 440))(v6))
      {
        v8 = v7;
        ObjectType = swift_getObjectType();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 8))(v4, ObjectType, v8);
        swift_unknownObjectRelease();
        sub_2392688AC((uint64_t)v4, type metadata accessor for PhotogrammetrySession.Output);
      }
      v14[0] = 0;
      swift_retain();
      sub_2393511FC((uint64_t)v14);
      result = swift_release();
      *(_BYTE *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 440))(v6);
      if (result)
      {
        v11 = v10;
        v12 = swift_getObjectType();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 8))(v4, v12, v11);
        swift_unknownObjectRelease();
        return sub_2392688AC((uint64_t)v4, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
  }
  return result;
}

uint64_t sub_2392AF428()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2392AF46C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t sub_2392AF4B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2392AF4F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t sub_2392AF540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char v16;
  uint64_t v18;
  char v19;
  _BYTE v20[16];

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v6 = sub_23925FB08(&qword_2569295B0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader);
  if (v9)
  {
    v10 = *(void (**)(uint64_t))(*(_QWORD *)v9 + 160);
    v11 = swift_retain();
    v10(v11);
    swift_retain();
    sub_239352824();
    swift_release();
    swift_retain();
    sub_239352890();
    swift_release();
    swift_release();
    swift_release_n();
    v18 = type metadata accessor for PhotogrammetrySample(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v8, 1, v18) != 1)
    {
      v19 = v8[*(int *)(v18 + 56) + 64];
      sub_2392688AC((uint64_t)v8, type metadata accessor for PhotogrammetrySample);
      v16 = v19 ^ 1;
      return v16 & 1;
    }
  }
  else
  {
    v12 = sub_239275AB0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v5, v12, v1);
    v13 = sub_239352098();
    v14 = sub_23935256C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23925B000, v13, v14, "Backend Manager: Tried to check if image url contain area mode data without a valid input reader!", v15, 2u);
      MEMORY[0x23B83BC04](v15, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v1);
  }
  v16 = 0;
  return v16 & 1;
}

uint64_t sub_2392AF810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  void *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  const char *v43;
  void *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int v52;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v0 = sub_2393520B0();
  v59 = *(_QWORD *)(v0 - 8);
  v60 = v0;
  v1 = MEMORY[0x24BDAC7A8](v0);
  v56 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v58 = (char *)&v56 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v56 - v5;
  v6 = sub_239352020();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_239351F3C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v56 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v65 = (char *)&v56 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v56 - v22;
  v24 = CPGSessionOptionsCreate();
  v25 = CPGSfmOptionsCreate();
  v67 = v24;
  if (v24)
  {
    v62 = v25;
    v26 = v66;
    sub_23926059C(v66 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, (uint64_t)v11, &qword_256927AD0);
    v27 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_23925FE28((uint64_t)v11, &qword_256927AD0);
      v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v29 = objc_msgSend(v28, sel_temporaryDirectory);

      sub_239351F18();
      sub_239351EE8();
      v30 = *(void (**)(char *, uint64_t))(v13 + 8);
      v30(v16, v27);
      sub_239352014();
      sub_239351FF0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v64);
      v31 = v65;
      sub_239351EE8();
      swift_bridgeObjectRelease();
      v30(v19, v27);
      v32 = (void *)sub_239351ED0();
      v33 = CPGSessionOptionsSetWorkingDirectory();

      if (v33)
      {
        sub_2392C3598();
        swift_allocError();
        *(_QWORD *)v34 = 0xD00000000000002BLL;
        *(_QWORD *)(v34 + 8) = 0x800000023935D070;
        *(_BYTE *)(v34 + 16) = 1;
        swift_willThrow();
        v30(v31, v27);
LABEL_30:
        CPGSfmOptionsRelease();
        return CPGSessionOptionsRelease();
      }
      v30(v31, v27);
      v37 = v61;
      if (v62)
        goto LABEL_9;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v11, v12);
      if (CPGSessionOptionsSetSnapshotEnabled())
      {
        sub_2392C3598();
        swift_allocError();
        *(_QWORD *)v36 = 0xD00000000000002ALL;
        *(_QWORD *)(v36 + 8) = 0x800000023935D110;
        *(_BYTE *)(v36 + 16) = 1;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
        goto LABEL_30;
      }
      v44 = (void *)sub_239351ED0();
      v45 = CPGSessionOptionsSetWorkingDirectory();

      if (v45)
      {
        sub_2392C3598();
        swift_allocError();
        *(_QWORD *)v46 = 0xD00000000000002BLL;
        *(_QWORD *)(v46 + 8) = 0x800000023935D070;
        *(_BYTE *)(v46 + 16) = 1;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
      v37 = v61;
      if (v62)
      {
LABEL_9:
        if (*(_BYTE *)(v26 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) == 1)
        {
          CPGMaskingOptionsCreate();
          if (CPGMaskingOptionsSetMaskingType())
          {
            CPGMaskingOptionsRelease();
            v38 = sub_239275AB0();
            v39 = v58;
            (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v38, v60);
            v40 = sub_239352098();
            v41 = sub_23935256C();
            if (os_log_type_enabled(v40, v41))
            {
              v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v42 = 0;
              v43 = "Backend Manager: Failed to set CPG segmentation masking type";
LABEL_20:
              _os_log_impl(&dword_23925B000, v40, v41, v43, v42, 2u);
              MEMORY[0x23B83BC04](v42, -1, -1);
              goto LABEL_21;
            }
            goto LABEL_21;
          }
          v48 = CPGSessionOptionsSetMaskingOptions();
          CPGMaskingOptionsRelease();
          if (v48)
          {
            v49 = sub_239275AB0();
            v39 = v57;
            (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v57, v49, v60);
            v40 = sub_239352098();
            v41 = sub_23935256C();
            if (os_log_type_enabled(v40, v41))
            {
              v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v42 = 0;
              v43 = "Backend Manager: Failed to set CPG segmentation masking option to session option";
              goto LABEL_20;
            }
LABEL_21:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v60);
            goto LABEL_30;
          }
        }
        sub_2392C3318();
        if (v37)
          goto LABEL_30;
        CPGSfmOptionsSetPoseUpdateCallback();
        if ((*(_BYTE *)sub_239263DD0() & 1) != 0)
          CPGSfmOptionsSetTrackUpdateCallback();
        if (CPGSessionOptionsSetSfmOptions())
        {
          sub_2392C3598();
          swift_allocError();
          *(_QWORD *)v50 = 0xD000000000000026;
          *(_QWORD *)(v50 + 8) = 0x800000023935D0C0;
          v51 = 1;
        }
        else
        {
          swift_beginAccess();
          v52 = CPGSessionCreate();
          swift_endAccess();
          if (!v52)
          {
            sub_2392B0C34();
            v54 = sub_239275AB0();
            v55 = v56;
            (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v56, v54, v60);
            v40 = sub_239352098();
            v41 = sub_239352578();
            if (!os_log_type_enabled(v40, v41))
            {
              v39 = v55;
              goto LABEL_21;
            }
            v39 = v55;
            v42 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v42 = 0;
            v43 = "Successfully initialized the backend session.";
            goto LABEL_20;
          }
          sub_2392C3598();
          swift_allocError();
          *(_QWORD *)v50 = 0xD000000000000018;
          *(_QWORD *)(v50 + 8) = 0x800000023935D0F0;
          v51 = 3;
        }
        *(_BYTE *)(v50 + 16) = v51;
        swift_willThrow();
        goto LABEL_30;
      }
    }
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v47 = 0xD00000000000001ALL;
    *(_QWORD *)(v47 + 8) = 0x800000023935D0A0;
    *(_BYTE *)(v47 + 16) = 2;
    swift_willThrow();
    goto LABEL_30;
  }
  sub_2392C3598();
  swift_allocError();
  *(_QWORD *)v35 = 0xD00000000000001ELL;
  *(_QWORD *)(v35 + 8) = 0x800000023935D030;
  *(_BYTE *)(v35 + 16) = 1;
  swift_willThrow();
  CPGSfmOptionsRelease();
  return CPGSessionOptionsRelease();
}

uint64_t sub_2392B00E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint8_t *v18;
  uint8_t *v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD v21[2];
  int v22;
  uint64_t v23;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a2 && a3)
  {
    v11 = CPGUpdatedPosesCopySampleIDs();
    if (v11)
    {
      v12 = (void *)v11;
      v23 = 0;
      sub_239352440();

      v13 = v23;
      if (v23)
      {
        if (*(_QWORD *)(v23 + 16))
        {
          v14 = sub_239275AB0();
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v14, v6);
          swift_bridgeObjectRetain();
          v15 = sub_239352098();
          v16 = sub_239352578();
          v17 = v16;
          if (os_log_type_enabled(v15, v16))
          {
            v18 = (uint8_t *)swift_slowAlloc();
            v22 = v17;
            v19 = v18;
            *(_DWORD *)v18 = 134349056;
            v21[0] = *(_QWORD *)(v13 + 16);
            v21[1] = v18 + 4;
            swift_bridgeObjectRelease();
            v23 = v21[0];
            sub_2393526B0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23925B000, v15, (os_log_type_t)v22, "Processing pose update callback for %{public}ld samples", v19, 0xCu);
            MEMORY[0x23B83BC04](v19, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 1696);
    swift_retain();
    v20(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392B02E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a2 && a3)
  {
    v11 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
    v12 = sub_239352098();
    v13 = sub_239352578();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23925B000, v12, v13, "Received mobile sfm world tracks.", v14, 2u);
      MEMORY[0x23B83BC04](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 1704);
    swift_retain();
    v15(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392B0430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45[3];
  uint64_t v46;

  v2 = v0;
  v3 = sub_2393520B0();
  v44 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239351F3C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  sub_23926059C(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, (uint64_t)v7, &qword_256927AD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_23925FE28((uint64_t)v7, &qword_256927AD0);
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v15 = 0xD000000000000039;
    *(_QWORD *)(v15 + 8) = 0x800000023935CF10;
    *(_BYTE *)(v15 + 16) = 3;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    v17 = CPGSessionResumeOptionsCreate();
    if (v17)
    {
      v41 = v3;
      v42 = v14;
      v18 = v17;
      v19 = (void *)sub_239351ED0();
      swift_beginAccess();
      v20 = CPGSessionCreateWithSnapshotURL();
      swift_endAccess();

      if (v20)
      {
        sub_2392C3598();
        swift_allocError();
        *(_QWORD *)v21 = 0xD000000000000027;
        *(_QWORD *)(v21 + 8) = 0x800000023935CF80;
        *(_BYTE *)(v21 + 16) = 3;
        swift_willThrow();
        CPGSessionResumeOptionsRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v42, v8);
      }
      else
      {
        v23 = v42;
        v40 = v18;
        sub_2392B0C34();
        if (v1)
        {
          CPGSessionRelease();
          swift_willThrow();
          CPGSessionResumeOptionsRelease();
          return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v23, v8);
        }
        else
        {
          *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 1;
          v24 = sub_239275AB0();
          v26 = v43;
          v25 = v44;
          v27 = v41;
          (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v24, v41);
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v23, v8);
          v28 = sub_239352098();
          v29 = sub_239352578();
          v39 = v28;
          v38 = v29;
          if (os_log_type_enabled(v28, v29))
          {
            v30 = swift_slowAlloc();
            v37 = swift_slowAlloc();
            v45[0] = v37;
            *(_DWORD *)v30 = 141558275;
            v46 = 1752392040;
            sub_2393526B0();
            *(_WORD *)(v30 + 12) = 2081;
            v31 = sub_239351F30();
            v46 = sub_23925F3EC(v31, v32, v45);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            v33 = *(void (**)(char *, uint64_t))(v9 + 8);
            v33(v12, v8);
            v34 = v39;
            _os_log_impl(&dword_23925B000, v39, (os_log_type_t)v38, "Successfully initialized backend session with snapshot = %{private,mask.hash}s", (uint8_t *)v30, 0x16u);
            v35 = v37;
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v35, -1, -1);
            MEMORY[0x23B83BC04](v30, -1, -1);

            (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v41);
          }
          else
          {
            v33 = *(void (**)(char *, uint64_t))(v9 + 8);
            v33(v12, v8);

            (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
          }
          CPGSessionResumeOptionsRelease();
          return ((uint64_t (*)(char *, uint64_t))v33)(v23, v8);
        }
      }
    }
    else
    {
      sub_2392C3598();
      swift_allocError();
      *(_QWORD *)v22 = 0xD000000000000025;
      *(_QWORD *)(v22 + 8) = 0x800000023935CF50;
      *(_BYTE *)(v22 + 16) = 1;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
}

uint64_t sub_2392B092C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = CPGAddSampleCallbackBundleCreate();
  if (CPGAddSampleCallbackBundleSetStreamProcessingCallback())
  {
    CPGAddSampleCallbackBundleRelease();
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v6 = 0xD00000000000003CLL;
    *(_QWORD *)(v6 + 8) = 0x800000023935CFF0;
    *(_BYTE *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  else
  {
    v8 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Successfully set the add sample callback bundle.", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_2392B0AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  _QWORD v18[2];

  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a3 && a4)
  {
    v13 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
    v14 = sub_239352098();
    v15 = sub_239352578();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134349056;
      v18[1] = a2;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v14, v15, "Add sample stream processing callback for id = %{public}llu", v16, 0xCu);
      MEMORY[0x23B83BC04](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a4 + 1632);
    swift_retain();
    v17(a1, a2, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392B0C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  const char *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = CPGProcessingCallbackBundleCreate();
  if (CPGProcessingCallbackBundleSetCompleteOutputCallback())
  {
    CPGProcessingCallbackBundleRelease();
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v6 = 0xD00000000000003CLL;
    v7 = "CPGProcessingCallbackBundleSetCompleteOutputCallback failed!";
LABEL_7:
    *(_QWORD *)(v6 + 8) = (unint64_t)(v7 - 32) | 0x8000000000000000;
    *(_BYTE *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  if (CPGProcessingCallbackBundleSetProgressCallback())
  {
    CPGProcessingCallbackBundleRelease();
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v6 = 0xD000000000000036;
    v7 = "CPGProcessingCallbackBundleSetProgressCallback failed!";
    goto LABEL_7;
  }
  if (CPGProcessingCallbackBundleSetWarningCallback())
  {
    CPGProcessingCallbackBundleRelease();
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v6 = 0xD000000000000034;
    v7 = "CPGProcessingCallbackBundleSetWarningCallback failed";
    goto LABEL_7;
  }
  v9 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  v10 = sub_239352098();
  v11 = sub_239352578();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_23925B000, v10, v11, "Successfully set callback bundle.", v12, 2u);
    MEMORY[0x23B83BC04](v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2392B0E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *ModelURL;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  id v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t);
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a3;
  v7 = sub_2393520B0();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23925FB08(&qword_256927AD0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v44 - v14;
  v16 = sub_239351F3C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v44 - v22;
  v52 = a1;
  if (a1 && a2 && v53 && a4)
  {
    v49 = a2;
    v24 = v53;
    if (CPGOutputGetFailure())
    {
LABEL_11:
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a4 + 1680);
      swift_retain();
      v29(v52, v49, v24);
      return swift_release();
    }
    v48 = a4;
    ModelURL = (void *)CPGOutputGetModelURL();
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
    if (ModelURL
      && (v27 = ModelURL,
          v26(v13, 1, 1, v16),
          sub_239262570(&qword_2569295C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB20]),
          sub_2393528A8(),
          v27,
          v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48),
          v28(v13, 1, v16) != 1))
    {
      v30 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v30(v15, v13, v16);
      v26(v15, 0, 1, v16);
      if (v28(v15, 1, v16) != 1)
      {
        v30(v23, v15, v16);
        v31 = sub_239275AB0();
        v33 = v50;
        v32 = v51;
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v9, v31, v51);
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v23, v16);
        v34 = sub_239352098();
        v35 = sub_239352578();
        v36 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          v37 = swift_slowAlloc();
          v38 = swift_slowAlloc();
          v47 = v38;
          *(_DWORD *)v37 = 141558275;
          v54 = 1752392040;
          v55 = v38;
          v46 = v36;
          sub_2393526B0();
          *(_WORD *)(v37 + 12) = 2081;
          v44 = v37 + 14;
          v45 = v34;
          v39 = sub_239351F30();
          v54 = sub_23925F3EC(v39, v40, &v55);
          sub_2393526B0();
          swift_bridgeObjectRelease();
          v41 = *(void (**)(char *, uint64_t))(v17 + 8);
          v41(v20, v16);
          v42 = v45;
          _os_log_impl(&dword_23925B000, v45, (os_log_type_t)v46, "Processing output callback at url = %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
          v43 = v47;
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v43, -1, -1);
          MEMORY[0x23B83BC04](v37, -1, -1);

        }
        else
        {

          v41 = *(void (**)(char *, uint64_t))(v17 + 8);
          v41(v20, v16);
        }
        (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v32);
        v41(v23, v16);
        goto LABEL_10;
      }
    }
    else
    {
      v26(v15, 1, 1, v16);
    }
    sub_23925FE28((uint64_t)v15, &qword_256927AD0);
LABEL_10:
    a4 = v48;
    v24 = v53;
    goto LABEL_11;
  }
  return result;
}

void *sub_2392B12A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  char *v12;
  float v13;
  float v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  _QWORD v27[2];
  uint64_t v28;
  os_log_t v29;
  uint64_t v30;
  int v31;
  double v32;
  uint64_t v33;

  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  result = (void *)MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a2 && a3 && a4)
  {
    CPGProgressGetFractionCompleted();
    v14 = v13;
    result = (void *)CPGProgressGetMessage();
    if (result)
    {
      v15 = result;
      v16 = sub_2393522F0();
      v18 = v17;

      v19 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v19, v8);
      swift_bridgeObjectRetain();
      v20 = sub_239352098();
      v21 = sub_239352578();
      v31 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v28 = v16;
        v23 = v22;
        v30 = swift_slowAlloc();
        v33 = v30;
        *(_DWORD *)v23 = 134349314;
        v32 = v14;
        v29 = v20;
        sub_2393526B0();
        *(_WORD *)(v23 + 12) = 2082;
        v27[1] = v23 + 14;
        swift_bridgeObjectRetain();
        v32 = COERCE_DOUBLE(sub_23925F3EC(v28, v18, &v33));
        sub_2393526B0();
        swift_bridgeObjectRelease_n();
        v24 = v29;
        _os_log_impl(&dword_23925B000, v29, (os_log_type_t)v31, "Processing progress callback with fraction completed = %{public}f, message = %{public}s", (uint8_t *)v23, 0x16u);
        v25 = v30;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v25, -1, -1);
        MEMORY[0x23B83BC04](v23, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a4 + 1640);
      swift_retain();
      v26(a1, a2, a3);
      return (void *)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2392B1520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2392C3FB0(a3);
}

uint64_t sub_2392B1528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = CPGFinalizeInputCallbackBundleCreate();
  if (CPGFinalizeInputCallbackBundleSetCompletionCallback())
  {
    CPGFinalizeInputCallbackBundleRelease();
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v6 = 0xD00000000000003BLL;
    *(_QWORD *)(v6 + 8) = 0x800000023935CFB0;
    *(_BYTE *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  else
  {
    v8 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Successfully set finalizing input callback bundle.", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_2392B16B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *);
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint8_t *v20;
  void (*v21)(char *, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void (*v25)(uint64_t, uint64_t);
  void (*v26)(char *);
  uint64_t v27;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v26 - v12;
  if (a1 && a2 && a3)
  {
    v14 = sub_239275AB0();
    v15 = *(void (**)(char *))(v7 + 16);
    v27 = v14;
    v15(v13);
    v16 = sub_239352098();
    v17 = sub_239352578();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v26 = v15;
      v19 = v18;
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23925B000, v16, v17, "Finalize input C-callback", v18, 2u);
      v20 = v19;
      v15 = v26;
      MEMORY[0x23B83BC04](v20, -1, -1);
    }

    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v13, v6);
    if (CPGFinalizeInputResultGetErrorCode())
    {
      ((void (*)(char *, uint64_t, uint64_t))v15)(v10, v27, v6);
      v22 = sub_239352098();
      v23 = sub_23935256C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23925B000, v22, v23, "Error in finalizing input result!", v24, 2u);
        MEMORY[0x23B83BC04](v24, -1, -1);
      }

      v21(v10, v6);
    }
    v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 1720);
    swift_retain();
    v25(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392B18C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  BOOL v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = sub_2393520B0();
  v28 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v30 = sub_2392A45C8(a1)[2];
  if (v30)
  {
    v27 = v6;
    v29 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_session;
    swift_beginAccess();
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = v28;
    while (1)
    {
      result = CPGSessionAddTemporalDepthPointFrame();
      if ((_DWORD)result)
      {
        v14 = __OFADD__(v9++, 1);
        if (v14)
        {
          __break(1u);
          return result;
        }
        v15 = sub_239275AB0();
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, v15, v3);
        v16 = sub_239352098();
        v17 = sub_23935256C();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = v3;
          v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v19 = 0;
          _os_log_impl(&dword_23925B000, v16, v17, "Failed to add temporal LiDAR point frame.", v19, 2u);
          v20 = v19;
          v3 = v18;
          v12 = v28;
          MEMORY[0x23B83BC04](v20, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v3);
      }
      else
      {
        v14 = __OFADD__(v10++, 1);
        if (v14)
        {
          __break(1u);
LABEL_12:
          swift_bridgeObjectRelease();
          v6 = v27;
          goto LABEL_14;
        }
      }
      ++v11;
      CPGTemporalDepthPointFrameRelease();
      if (v30 == v11)
        goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  v9 = 0;
  v10 = 0;
  v12 = v28;
LABEL_14:
  v21 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v6, v21, v3);
  v22 = sub_239352098();
  v23 = sub_239352578();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = v3;
    v25 = swift_slowAlloc();
    *(_DWORD *)v25 = 134349312;
    v31 = v10;
    sub_2393526B0();
    *(_WORD *)(v25 + 12) = 2050;
    v31 = v9;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v22, v23, "Passed %{public}ld temporal LiDAR point frames to backend session, failed for %{public}ld frames.", (uint8_t *)v25, 0x16u);
    v26 = v25;
    v3 = v24;
    MEMORY[0x23B83BC04](v26, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v3);
}

uint64_t sub_2392B1BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v5 = sub_239352170();
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2393521C4();
  v8 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_2392C53C8;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5840;
  v14 = _Block_copy(aBlock);
  v15 = v11;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_239352188();
  v20 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_2392B1DF4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t ObjectType;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  unint64_t v77;
  os_log_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  *(_QWORD *)&v75 = a3;
  v77 = a2;
  v81 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v81);
  v4 = (uint64_t *)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_239351F3C();
  v8 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_2393520B0();
  v11 = *(_QWORD *)(v82 - 8);
  v12 = MEMORY[0x24BDAC7A8](v82);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v73 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v73 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v73 - v21;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0xD000000000000023, 0x800000023935CD70);
  v24 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v25 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v25, v82);
    v26 = sub_239352098();
    v27 = sub_23935256C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_23925B000, v26, v27, "Can't add new samples. Backend manager is closed", v28, 2u);
      MEMORY[0x23B83BC04](v28, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v82);
  }
  else
  {
    v30 = *(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted);
    v31 = sub_239275AB0();
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    if ((v30 & 1) != 0)
    {
      v32(v17, v31, v82);
      v33 = sub_239352098();
      v34 = sub_239352578();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_23925B000, v33, v34, "Process has started, ignore new samples.", v35, 2u);
        MEMORY[0x23B83BC04](v35, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v82);
    }
    else
    {
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
      v80 = v31;
      ((void (*)(char *))v32)(v22);
      v36 = sub_239352098();
      v37 = sub_239352578();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v78 = v36;
        v39 = v38;
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_23925B000, v78, v37, "Reconstruct from images url. The images url should be not nil.", v38, 2u);
        v40 = v39;
        v36 = v78;
        MEMORY[0x23B83BC04](v40, -1, -1);
      }

      v78 = *(os_log_t *)(v11 + 8);
      ((void (*)(char *, uint64_t))v78)(v22, v82);
      v41 = v24 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL;
      swift_beginAccess();
      sub_23926059C(v41, (uint64_t)v7, &qword_256927AD0);
      v42 = v76;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v76) == 1)
      {
        v43 = sub_23925FE28((uint64_t)v7, &qword_256927AD0);
        v44 = 0;
        v45 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, v42);
        v44 = sub_2392C2D48();
        v45 = v46 & 1;
        v43 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v42);
      }
      v47 = v77;
      v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v77 + 160))(v43);
      v49 = *(_QWORD *)(v24 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter);
      v50 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v47 + 184);
      v51 = swift_retain();
      v52 = v50(v51);
      (*(void (**)(_QWORD))(*(_QWORD *)v49 + 120))(v52 & 1);
      v53 = swift_release();
      v54 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v47 + 128))(v53);
      v73 = v48;
      v55 = sub_2392B2784(v48, v75, v54, 0, v44, v45);
      v74 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v47 + 176))(v55);
      v57 = *(_QWORD *)(v74 + 16);
      v58 = v82;
      if (v57)
      {
        v59 = (uint64_t *)(v74 + 32);
        v60 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 440);
        *(_QWORD *)&v56 = 134349056;
        v75 = v56;
        v76 = 0x800000023935CDA0;
        v77 = 0xD00000000000004ELL;
        do
        {
          v62 = *v59++;
          v61 = v62;
          v79(v20, v80, v58);
          v63 = sub_239352098();
          v64 = sub_239352578();
          if (os_log_type_enabled(v63, v64))
          {
            v65 = swift_slowAlloc();
            *(_DWORD *)v65 = v75;
            *(_QWORD *)(v65 + 4) = v61;
            _os_log_impl(&dword_23925B000, v63, v64, "invalidSample: id = %{public}ld", (uint8_t *)v65, 0xCu);
            v66 = v65;
            v58 = v82;
            MEMORY[0x23B83BC04](v66, -1, -1);
          }

          v67 = ((uint64_t (*)(char *, uint64_t))v78)(v20, v58);
          if (v60(v67))
          {
            v69 = v68;
            ObjectType = swift_getObjectType();
            v71 = v77;
            *v4 = v61;
            v4[1] = v71;
            v4[2] = v76;
            swift_storeEnumTagMultiPayload();
            v72 = ObjectType;
            v58 = v82;
            (*(void (**)(_QWORD *, uint64_t, uint64_t))(v69 + 8))(v4, v72, v69);
            swift_unknownObjectRelease();
            sub_2392688AC((uint64_t)v4, type metadata accessor for PhotogrammetrySession.Output);
          }
          --v57;
        }
        while (v57);
      }
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
}

uint64_t sub_2392B24A8(uint64_t a1, char a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;

  v4 = v3;
  v34 = a1;
  v7 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23925FB08(&qword_256928DE8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PhotogrammetrySession.Request(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v4 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_23926059C(v17, (uint64_t)v12, &qword_256928DE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_23925FE28((uint64_t)v12, &qword_256928DE8);
  v19 = sub_2392C4FE0((uint64_t)v12, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
  v20 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 440);
  if (v20(v19))
  {
    v22 = v21;
    ObjectType = swift_getObjectType();
    v24 = *(int *)(sub_23925FB08(&qword_256929560) + 48);
    sub_239268820((uint64_t)v16, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Request);
    *(double *)&v9[v24] = a3;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 8))(v9, ObjectType, v22);
    swift_unknownObjectRelease();
    sub_2392688AC((uint64_t)v9, type metadata accessor for PhotogrammetrySession.Output);
  }
  v35 = 0;
  v25 = sub_2392E64F0(v34, a2 & 1, &v35, (uint64_t)&v36);
  v26 = v36;
  v27 = v37;
  v28 = v38;
  if (v20(v25))
  {
    v30 = v29;
    v31 = swift_getObjectType();
    v32 = &v9[*(int *)(sub_23925FB08(&qword_256929568) + 48)];
    sub_239268820((uint64_t)v16, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)v32 = v26;
    v32[8] = v27;
    v32[9] = v28;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 8))(v9, v31, v30);
    swift_unknownObjectRelease();
    sub_2392688AC((uint64_t)v9, type metadata accessor for PhotogrammetrySession.Output);
  }
  return sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
}

uint64_t sub_2392B2784(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  float v83;
  int v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t *v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  unint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  unint64_t *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t *v121;
  NSObject *v122;
  os_log_type_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  BOOL v132;
  uint64_t v133;
  char *v134;
  NSObject *v135;
  os_log_type_t v136;
  uint8_t *v137;
  uint8_t *v138;
  uint64_t v139;
  char *v140;
  NSObject *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t v144;
  float v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  char *v151;
  unint64_t v152;
  unint64_t *v153;
  uint64_t (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t *v158;
  char *v159;
  unint64_t v160;
  __int128 v161;
  uint64_t v162;
  char *v163;
  __int128 v164;
  unint64_t *v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  unint64_t *v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t, uint64_t, uint64_t);
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  int v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  int64_t v185;
  char *v186;
  _QWORD *v187;
  uint64_t v188;
  void *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  int64_t v198;

  v7 = v6;
  LODWORD(v191) = a6;
  v167 = a5;
  v180 = a4;
  v157 = a3;
  v193 = a1;
  v9 = sub_2393520B0();
  v177 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v183 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v176 = (char *)&v151 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v174 = (char *)&v151 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v186 = (char *)&v151 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v163 = (char *)&v151 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v159 = (char *)&v151 - v20;
  v182 = type metadata accessor for PhotogrammetrySample(0);
  v192 = *(_QWORD *)(v182 - 8);
  v21 = MEMORY[0x24BDAC7A8](v182);
  v165 = (unint64_t *)((char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v21);
  v158 = (unint64_t *)((char *)&v151 - v24);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v153 = (unint64_t *)((char *)&v151 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v190 = (char **)((char *)&v151 - v27);
  v28 = sub_23925FB08(&qword_2569295B0);
  MEMORY[0x24BDAC7A8](v28);
  v181 = (char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v168);
  v169 = (char **)((char *)&v151 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v162 = type metadata accessor for PhotogrammetrySession.Request(0);
  v31 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v33 = (char *)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23925FB08(&qword_256928DE8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v156 = (uint64_t)&v151 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v151 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (char *)&v151 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v151 - v43;
  v178 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  LOBYTE(v197) = 0;
  swift_retain();
  sub_2393511FC((uint64_t)&v197);
  result = swift_release();
  v46 = *(_QWORD *)(a2 + 16);
  if (!v46)
    goto LABEL_72;
  result = sub_2392B43EC((unint64_t)&v197, a2);
  if (*(_QWORD *)(result + 16) == v46)
  {
    v166 = v191 & 1;
    sub_239268820(result + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)), (uint64_t)v44, type metadata accessor for PhotogrammetrySession.Request);
    swift_bridgeObjectRelease();
    v47 = v162;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v44, 0, 1, v162);
    sub_239268764((uint64_t)v44, (uint64_t)v42, &qword_256928DE8);
    v48 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
    swift_beginAccess();
    sub_239267C70((uint64_t)v42, v48, &qword_256928DE8);
    swift_endAccess();
    v155 = v48;
    sub_23926059C(v48, (uint64_t)v39, &qword_256928DE8);
    v154 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
    v49 = v154(v39, 1, v47);
    v184 = v7;
    v191 = v9;
    if (v49 == 1)
    {
      sub_23925FE28((uint64_t)v39, &qword_256928DE8);
    }
    else
    {
      v50 = sub_2392C4FE0((uint64_t)v39, (uint64_t)v33, type metadata accessor for PhotogrammetrySession.Request);
      v51 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 440);
      if (v51(v50))
      {
        v53 = v52;
        ObjectType = swift_getObjectType();
        v55 = *(int *)(sub_23925FB08(&qword_256929560) + 48);
        v56 = v169;
        sub_239268820((uint64_t)v33, (uint64_t)v169, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)((char *)v56 + v55) = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v53 + 8))(v56, ObjectType, v53);
        swift_unknownObjectRelease();
        sub_2392688AC((uint64_t)v56, type metadata accessor for PhotogrammetrySession.Output);
      }
      LOBYTE(v195) = 0;
      v57 = sub_2392E64F0(v167, v166, (char *)&v195, (uint64_t)&v197);
      v58 = v197;
      v59 = v198;
      v60 = BYTE1(v198);
      if (v51(v57))
      {
        v62 = v61;
        v63 = swift_getObjectType();
        v64 = sub_23925FB08(&qword_256929568);
        v65 = v169;
        v66 = (char *)v169 + *(int *)(v64 + 48);
        sub_239268820((uint64_t)v33, (uint64_t)v169, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)v66 = v58;
        v66[8] = v59;
        v66[9] = v60;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v62 + 8))(v65, v63, v62);
        swift_unknownObjectRelease();
        v67 = (uint64_t)v65;
        v9 = v191;
        sub_2392688AC(v67, type metadata accessor for PhotogrammetrySession.Output);
      }
      sub_2392688AC((uint64_t)v33, type metadata accessor for PhotogrammetrySession.Request);
      v7 = v184;
    }
    v68 = v183;
    v69 = v190;
    sub_2392DCD20(&v197);
    v179 = v198;
    swift_retain();
    v70 = sub_239352824();
    swift_release();
    v175 = OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter;
    v71 = OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
    v72 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_session;
    swift_retain();
    v193 = v72;
    swift_beginAccess();
    v73 = (uint64_t)v181;
    sub_239352890();
    v173 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v192 + 48);
    v75 = 0;
    if (v173(v73, 1, v182) == 1)
    {
LABEL_11:
      swift_release_n();
    }
    else
    {
      v75 = 0;
      v185 = 0;
      v189 = 0;
      v172 = v7 + v71;
      v82 = v157;
      if (v179 < v157)
        v82 = v179;
      v171 = &v196;
      v83 = (float)v82;
      v151 = (char *)&v195 + 4;
      *(_QWORD *)&v74 = 134349056;
      v161 = v74;
      v152 = 0x800000023935C610;
      *(_QWORD *)&v74 = 134349312;
      v164 = v74;
      v160 = 0x800000023935C5F0;
      v170 = v70;
      while (1)
      {
        sub_2392C4FE0(v73, (uint64_t)v69, type metadata accessor for PhotogrammetrySample);
        swift_retain();
        sub_239351148();
        swift_release();
        if ((v195 & 1) != 0)
        {
          sub_2392688AC((uint64_t)v69, type metadata accessor for PhotogrammetrySample);
          return swift_release_n();
        }
        v188 = v75;
        if (v185 >= v179)
          break;
        v85 = v189;
        sub_2392A2A78((uint64_t)v69, *(NSObject **)(v7 + v175), *(unsigned __int8 *)(v172 + 24));
        if (v85)
        {

          if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 440))(v86))
          {
            v88 = v87;
            v89 = swift_getObjectType();
            v90 = v169;
            *v169 = *v69;
            v90[1] = 0xD00000000000001CLL;
            v90[2] = v160;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, uint64_t, uint64_t))(v88 + 8))(v90, v89, v88);
            swift_unknownObjectRelease();
            sub_2392688AC((uint64_t)v90, type metadata accessor for PhotogrammetrySession.Output);
          }
          v91 = sub_239275AB0();
          v92 = v177;
          v192 = *(_QWORD *)(v177 + 16);
          ((void (*)(char *, uint64_t, uint64_t))v192)(v186, v91, v9);
          v93 = (uint64_t)v69;
          v94 = v165;
          sub_239268820(v93, (uint64_t)v165, type metadata accessor for PhotogrammetrySample);
          v95 = sub_239352098();
          v96 = sub_23935256C();
          if (os_log_type_enabled(v95, v96))
          {
            v97 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v97 = v161;
            v98 = *v94;
            sub_2392688AC((uint64_t)v94, type metadata accessor for PhotogrammetrySample);
            v195 = v98;
            v9 = v191;
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v95, v96, "Failed to convert sample of id = %{public}ld to internal sample type!", v97, 0xCu);
            MEMORY[0x23B83BC04](v97, -1, -1);
          }
          else
          {
            sub_2392688AC((uint64_t)v94, type metadata accessor for PhotogrammetrySample);
          }
          v109 = v176;

          v110 = *(void (**)(char *, uint64_t))(v92 + 8);
          v110(v186, v9);
          v189 = 0;
        }
        else
        {
          v189 = 0;
          v99 = CPGSessionAddSample();
          if (v99)
          {
            v100 = v99;
            v195 = 0;
            v196 = 0xE000000000000000;
            sub_2393527C4();
            swift_bridgeObjectRelease();
            v195 = 0xD00000000000002FLL;
            v196 = v152;
            v194 = v100;
            sub_2393528C0();
            sub_239352380();
            v101 = swift_bridgeObjectRelease();
            v102 = v195;
            v103 = v196;
            if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 440))(v101))
            {
              v105 = v104;
              v106 = swift_getObjectType();
              v107 = v169;
              *v169 = *v69;
              v107[1] = v102;
              v107[2] = v103;
              swift_storeEnumTagMultiPayload();
              v108 = v106;
              v9 = v191;
              (*(void (**)(_QWORD *, uint64_t, uint64_t))(v105 + 8))(v107, v108, v105);
              swift_unknownObjectRelease();
              sub_2392688AC((uint64_t)v107, type metadata accessor for PhotogrammetrySession.Output);
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v118 = v177;
            v119 = sub_239275AB0();
            v192 = *(_QWORD *)(v118 + 16);
            ((void (*)(char *, uint64_t, uint64_t))v192)(v163, v119, v9);
            v120 = (uint64_t)v69;
            v121 = v158;
            sub_239268820(v120, (uint64_t)v158, type metadata accessor for PhotogrammetrySample);
            v122 = sub_239352098();
            v123 = sub_23935256C();
            if (os_log_type_enabled(v122, v123))
            {
              v124 = swift_slowAlloc();
              *(_DWORD *)v124 = v164;
              v125 = *v121;
              sub_2392688AC((uint64_t)v121, type metadata accessor for PhotogrammetrySample);
              v195 = v125;
              sub_2393526B0();
              *(_WORD *)(v124 + 12) = 1026;
              LODWORD(v195) = v100;
              sub_2393526B0();
              _os_log_impl(&dword_23925B000, v122, v123, "Failed to add sample of id = %{public}ld, with error code = %{public}d", (uint8_t *)v124, 0x12u);
              v126 = v124;
              v9 = v191;
              MEMORY[0x23B83BC04](v126, -1, -1);
            }
            else
            {
              sub_2392688AC((uint64_t)v121, type metadata accessor for PhotogrammetrySample);
            }
            v109 = v176;

            v110 = *(void (**)(char *, uint64_t))(v118 + 8);
            v110(v163, v9);
          }
          else
          {
            v111 = sub_239275AB0();
            v112 = v177;
            v192 = *(_QWORD *)(v177 + 16);
            ((void (*)(char *, uint64_t, uint64_t))v192)(v159, v111, v9);
            v113 = v153;
            sub_239268820((uint64_t)v69, (uint64_t)v153, type metadata accessor for PhotogrammetrySample);
            v114 = sub_239352098();
            v115 = sub_239352578();
            if (os_log_type_enabled(v114, v115))
            {
              v116 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v116 = v161;
              v117 = *v113;
              sub_2392688AC((uint64_t)v113, type metadata accessor for PhotogrammetrySample);
              v195 = v117;
              v9 = v191;
              sub_2393526B0();
              _os_log_impl(&dword_23925B000, v114, v115, "Added sample of id = %{public}ld", v116, 0xCu);
              MEMORY[0x23B83BC04](v116, -1, -1);
            }
            else
            {
              sub_2392688AC((uint64_t)v113, type metadata accessor for PhotogrammetrySample);
            }
            v109 = v176;
            ++v185;

            v110 = *(void (**)(char *, uint64_t))(v112 + 8);
            v110(v159, v9);
          }
          CPGSampleRelease();
        }
        v127 = sub_2392A45C8((uint64_t)v190);
        v128 = v127[2];
        v187 = v127;
        v129 = 0;
        v130 = 0;
        if (v128)
        {
          v131 = v127 + 4;
          do
          {
            result = CPGSessionAddTemporalDepthPointFrame();
            if ((_DWORD)result)
            {
              v132 = __OFADD__(v129++, 1);
              if (v132)
              {
                __break(1u);
LABEL_70:
                __break(1u);
LABEL_71:
                __break(1u);
LABEL_72:
                __break(1u);
                goto LABEL_73;
              }
              v133 = sub_239275AB0();
              ((void (*)(char *, uint64_t, uint64_t))v192)(v109, v133, v9);
              v134 = v109;
              v135 = sub_239352098();
              v136 = sub_23935256C();
              if (os_log_type_enabled(v135, v136))
              {
                v137 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v137 = 0;
                _os_log_impl(&dword_23925B000, v135, v136, "Failed to add temporal LiDAR point frame.", v137, 2u);
                v138 = v137;
                v9 = v191;
                MEMORY[0x23B83BC04](v138, -1, -1);
              }

              v110(v134, v9);
              v109 = v134;
            }
            else
            {
              v132 = __OFADD__(v130++, 1);
              if (v132)
                goto LABEL_70;
            }
            CPGTemporalDepthPointFrameRelease();
            ++v131;
            --v128;
          }
          while (v128);
        }
        swift_bridgeObjectRelease();
        v139 = sub_239275AB0();
        v140 = v174;
        ((void (*)(char *, uint64_t, uint64_t))v192)(v174, v139, v9);
        v141 = sub_239352098();
        v142 = sub_239352578();
        if (os_log_type_enabled(v141, v142))
        {
          v143 = swift_slowAlloc();
          *(_DWORD *)v143 = v164;
          v195 = v130;
          sub_2393526B0();
          *(_WORD *)(v143 + 12) = 2050;
          v195 = v129;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v141, v142, "Passed %{public}ld temporal LiDAR point frames to backend session, failed for %{public}ld frames.", (uint8_t *)v143, 0x16u);
          v144 = v143;
          v9 = v191;
          MEMORY[0x23B83BC04](v144, -1, -1);
        }

        result = ((uint64_t (*)(char *, uint64_t))v110)(v140, v9);
        v75 = v188 + 1;
        v7 = v184;
        if (__OFADD__(v188, 1))
          goto LABEL_71;
        if ((v180 & 1) == 0)
        {
          v145 = (float)((float)v75 / v83) * 0.1;
          if (v145 > 0.1)
            v145 = 0.1;
          sub_2392B24A8(v167, v166, v145);
        }
        v69 = v190;
        sub_2392688AC((uint64_t)v190, type metadata accessor for PhotogrammetrySample);
        v73 = (uint64_t)v181;
        sub_239352890();
        v84 = v173(v73, 1, v182);
        v68 = v183;
        if (v84 == 1)
          goto LABEL_11;
      }
      swift_release();
      v146 = sub_239275AB0();
      v147 = v177;
      (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v68, v146, v9);
      v148 = sub_239352098();
      v149 = sub_23935256C();
      if (os_log_type_enabled(v148, v149))
      {
        v150 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v150 = v161;
        v195 = v179;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v148, v149, "Stop adding sample, exceeded max number of samples device limit: %{public}ld.", v150, 0xCu);
        MEMORY[0x23B83BC04](v150, -1, -1);
      }

      swift_release();
      (*(void (**)(char *, uint64_t))(v147 + 8))(v68, v9);
      sub_2392688AC((uint64_t)v69, type metadata accessor for PhotogrammetrySample);
      v75 = v188;
    }
    if ((v180 & 1) != 0 || v75 < v157)
      sub_2392B24A8(v167, v166, 0.1);
    v76 = v156;
    sub_23926059C(v155, v156, &qword_256928DE8);
    v77 = v154((char *)v76, 1, v162);
    result = sub_23925FE28(v76, &qword_256928DE8);
    if (v77 != 1)
      *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 1036831949;
    if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
    {
      *(_BYTE *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 1;
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 440))(result);
      if (result)
      {
        v79 = v78;
        v80 = swift_getObjectType();
        v81 = v169;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v79 + 8))(v81, v80, v79);
        swift_unknownObjectRelease();
        return sub_2392688AC((uint64_t)v81, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
  }
  else
  {
LABEL_73:
    __break(1u);
  }
  return result;
}

uint64_t sub_2392B3A30@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  uint64_t v22[3];
  char v23;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = 6;
  if (qword_25692D340 != -1)
    swift_once();
  if (a1 <= 25000)
  {
    v9 = 0;
  }
  else if (a1 < 50001)
  {
    v9 = 1;
  }
  else if (a1 < 100001)
  {
    v9 = 2;
  }
  else if (a1 < 250001)
  {
    v9 = 4;
  }
  else
  {
    if (a1 >= 30000001)
    {
      v8 = 6;
      goto LABEL_15;
    }
    v9 = 5;
  }
  v8 = *(_BYTE *)(qword_25692D348 + 32 + 16 * v9);
  v23 = v8;
LABEL_15:
  v10 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v20 = a2;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v22[0] = v15;
    *(_DWORD *)v14 = 136446210;
    LOBYTE(v21) = v8;
    v16 = sub_23935232C();
    v21 = sub_23925F3EC(v16, v17, v22);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v11, v12, "Selected %{public}s as next high detail level", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v15, -1, -1);
    v18 = v14;
    a2 = v20;
    MEMORY[0x23B83BC04](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = swift_beginAccess();
  *a2 = v23;
  return result;
}

uint64_t sub_2392B3CB8(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  unint64_t i;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t MaxPolyCount;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  v56 = a1;
  v55 = sub_2393520B0();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PhotogrammetrySession.Request(0);
  v61 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (uint64_t)&v53 - v9;
  v10 = sub_23925FB08(&qword_256929588);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23925FB08(&qword_256929590);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (unint64_t *)((char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v65 = (uint64_t *)((char *)&v53 - v17);
  v74 = 3;
  v73 = -1;
  v72 = 0;
  v71 = 0;
  v18 = *(_QWORD *)(a2 + 16);
  v57 = v2 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  v62 = a2;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  result = swift_beginAccess();
  i = 0;
  v58 = v11;
  v64 = v18;
  v21 = v18 == 0;
  if (v18)
    goto LABEL_5;
LABEL_4:
  v22 = 1;
  for (i = v18; ; ++i)
  {
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, v22, 1, v10);
    v25 = v65;
    sub_239268764((uint64_t)v16, (uint64_t)v65, &qword_256929590);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v25, 1, v10) == 1)
      break;
    v26 = v16;
    v27 = *v25;
    v28 = v10;
    v29 = (uint64_t)v25 + *(int *)(v10 + 48);
    v30 = v66;
    sub_2392C4FE0(v29, v66, type metadata accessor for PhotogrammetrySession.Request);
    sub_239268820(v30, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
    v31 = sub_23925FB08(&qword_256928730);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v8, 3, v31))
    {
      sub_2392688AC(v30, type metadata accessor for PhotogrammetrySession.Request);
      result = sub_2392688AC((uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      v16 = v26;
      v10 = v28;
      v21 = i >= v18;
      if (i == v18)
        goto LABEL_4;
      goto LABEL_5;
    }
    v59 = v27;
    v63 = v8[*(int *)(v31 + 48)];
    v68 = v63;
    v67 = 6;
    sub_2392C5024();
    sub_23935241C();
    sub_23935241C();
    if (v70 == v69)
    {
      MaxPolyCount = CPGOutputModelOptionsGetMaxPolyCount();
      sub_2392B3A30(MaxPolyCount, (char *)&v70);
      v33 = v70;
      v16 = v26;
      v10 = v28;
      if (qword_25692D330 != -1)
        swift_once();
      v34 = qword_25692D338;
      v35 = v66;
      if (*(_QWORD *)(qword_25692D338 + 16))
      {
        v36 = sub_2392C00F0(v33);
        if ((v37 & 1) != 0)
          goto LABEL_19;
      }
    }
    else
    {
      v16 = v26;
      v10 = v28;
      if (qword_25692D330 != -1)
        swift_once();
      v34 = qword_25692D338;
      v35 = v66;
      if (*(_QWORD *)(qword_25692D338 + 16))
      {
        v36 = sub_2392C00F0(v63);
        if ((v38 & 1) != 0)
        {
LABEL_19:
          v39 = 0;
          v40 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v36);
          goto LABEL_21;
        }
      }
    }
    v40 = 0;
    v39 = 1;
LABEL_21:
    v41 = sub_23929A330(v35);
    sub_2392688AC(v35, type metadata accessor for PhotogrammetrySession.Request);
    if ((v39 & 1) == 0)
    {
      if (v73 >= v40)
      {
        if (!((v40 != v73) | v41 & 1) && v71 == 1)
        {
          v74 = v63;
          v73 = v40;
          v72 = v59;
          v71 = 0;
        }
      }
      else
      {
        v74 = v63;
        v73 = v40;
        v72 = v59;
        v71 = v41 & 1;
      }
    }
    v42 = sub_239351F3C();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v8, v42);
    v11 = v58;
    v18 = v64;
    v21 = i >= v64;
    if (i == v64)
      goto LABEL_4;
LABEL_5:
    if (v21)
    {
      __break(1u);
      return result;
    }
    v23 = (uint64_t)&v60[*(int *)(v10 + 48)];
    sub_239268820(v62+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * i, v23, type metadata accessor for PhotogrammetrySession.Request);
    v24 = (uint64_t)v16 + *(int *)(v10 + 48);
    *v16 = i;
    sub_2392C4FE0(v23, v24, type metadata accessor for PhotogrammetrySession.Request);
    v22 = 0;
    v18 = v64;
  }
  swift_bridgeObjectRelease();
  v43 = sub_239275AB0();
  v44 = v54;
  v45 = v53;
  v46 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v43, v55);
  v47 = sub_239352098();
  v48 = sub_239352560();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v70 = v50;
    *(_DWORD *)v49 = 136446466;
    LOBYTE(v69) = v74;
    v51 = sub_23935232C();
    v69 = sub_23925F3EC(v51, v52, &v70);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2050;
    v69 = v72;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v47, v48, "Request with the highest detail level = %{public}s is at the index = %{public}ld", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v50, -1, -1);
    MEMORY[0x23B83BC04](v49, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  *v56 = v74;
  return v72;
}

uint64_t sub_2392B43EC(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _BYTE v54[12];
  int v55;
  _BYTE *v56;
  unint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _BYTE *v66;
  unint64_t v67;
  int8x16_t v68;
  float32x4_t v69;
  unint64_t v70;
  float32x4_t v71;
  float32x4_t v72;
  _BYTE v73[144];
  _OWORD v74[9];

  v5 = sub_23925FB08(&qword_256928DE8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v54[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v60 = &v54[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v59 = &v54[-v11];
  v12 = sub_23925FB08(&qword_256929588);
  v72.i64[0] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v66 = &v54[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_23925FB08(&qword_256929590);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (unint64_t *)&v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = (unint64_t *)&v54[-v18];
  v20 = type metadata accessor for PhotogrammetrySession.Request(0);
  v61 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (unint64_t)&v54[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v21);
  v71.i64[0] = (uint64_t)&v54[-v25];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = &v54[-v27];
  v29 = MEMORY[0x24BDAC7A8](v26);
  v32 = (unint64_t)&v54[-v31];
  v68.i64[0] = (uint64_t)&v54[-v31];
  v63 = a2;
  v33 = *(_QWORD *)(a2 + 16);
  if (!v33)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v58 = v29;
  v62 = (_BYTE *)a1;
  a1 = v2 + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) || *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
  {
    *v62 = 7;
    return swift_bridgeObjectRetain();
  }
  v57 = v23;
  v23 = v63;
  v35 = sub_2392B3CB8((char *)v74, v63);
  if (v35 >= v33)
    goto LABEL_29;
  v55 = LOBYTE(v74[0]);
  v65 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v36 = *(_QWORD *)(v61 + 72);
  v67 = v35;
  v64 = v23 + v65;
  v69.i64[0] = v36;
  sub_239268820(v23 + v65 + v36 * v35, v68.i64[0], type metadata accessor for PhotogrammetrySession.Request);
  v30 = sub_2392BFAA4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v23 = *(_QWORD *)(v30 + 16);
  v32 = *(_QWORD *)(v30 + 24);
  a1 = v23 + 1;
  v56 = v8;
  if (v23 >= v32 >> 1)
LABEL_30:
    v30 = sub_2392BFAA4(v32 > 1, a1, 1, v30);
  *(_QWORD *)(v30 + 16) = a1;
  v70 = v30;
  sub_2392C4FE0(v68.i64[0], v30 + v65 + v23 * v69.i64[0], type metadata accessor for PhotogrammetrySession.Request);
  swift_bridgeObjectRetain();
  v23 = 0;
  v68.i64[0] = v2;
  while (1)
  {
    if (v23 == v33)
    {
      v37 = 1;
      v23 = v33;
    }
    else
    {
      if (v23 >= v33)
      {
        __break(1u);
        goto LABEL_28;
      }
      v38 = (uint64_t)&v66[*(int *)(v12 + 48)];
      sub_239268820(v64 + v23 * v69.i64[0], v38, type metadata accessor for PhotogrammetrySession.Request);
      v39 = (uint64_t)v17 + *(int *)(v12 + 48);
      *v17 = v23;
      sub_2392C4FE0(v38, v39, type metadata accessor for PhotogrammetrySession.Request);
      v37 = 0;
      ++v23;
      v2 = v68.i64[0];
    }
    v40 = v72.i64[0];
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v72.i64[0] + 56))(v17, v37, 1, v12);
    sub_239268764((uint64_t)v17, (uint64_t)v19, &qword_256929590);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v40 + 48))(v19, 1, v12) == 1)
      break;
    a1 = *v19;
    sub_2392C4FE0((uint64_t)v19 + *(int *)(v12 + 48), (uint64_t)v28, type metadata accessor for PhotogrammetrySession.Request);
    if (a1 != v67)
    {
      sub_239268820((uint64_t)v28, v71.i64[0], type metadata accessor for PhotogrammetrySession.Request);
      v41 = v70;
      a1 = *(_QWORD *)(v70 + 16);
      v42 = *(_QWORD *)(v70 + 24);
      if (a1 >= v42 >> 1)
        v41 = sub_2392BFAA4(v42 > 1, a1 + 1, 1, v70);
      *(_QWORD *)(v41 + 16) = a1 + 1;
      v70 = v41;
      sub_2392C4FE0(v71.i64[0], v41 + v65 + a1 * v69.i64[0], type metadata accessor for PhotogrammetrySession.Request);
      v2 = v68.i64[0];
    }
    sub_2392688AC((uint64_t)v28, type metadata accessor for PhotogrammetrySession.Request);
  }
  result = swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v70 + 16))
  {
    __break(1u);
    goto LABEL_32;
  }
  v43 = v59;
  sub_239268820(v70 + v65, (uint64_t)v59, type metadata accessor for PhotogrammetrySession.Request);
  v44 = v61;
  v45 = v58;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v43, 0, 1, v58);
  v46 = v60;
  sub_239268764((uint64_t)v43, (uint64_t)v60, &qword_256928DE8);
  v47 = v2 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_239267C70((uint64_t)v46, v47, &qword_256928DE8);
  swift_endAccess();
  *v62 = v55;
  v48 = v47;
  v49 = (uint64_t)v56;
  sub_23926059C(v48, (uint64_t)v56, &qword_256928DE8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v49, 1, v45);
  v50 = v57;
  if ((_DWORD)result == 1)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  sub_239268820(v49, v57, type metadata accessor for PhotogrammetrySession.Request);
  v51 = sub_23925FB08(&qword_256928730);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 3, v51))
  {
    v52 = v70;
    swift_bridgeObjectRetain();
    sub_2392688AC(v50, type metadata accessor for PhotogrammetrySession.Request);
  }
  else
  {
    sub_239268764(v50 + *(int *)(v51 + 64), (uint64_t)v73, &qword_256928738);
    sub_239268764((uint64_t)v73, (uint64_t)v74, &qword_256928738);
    if (sub_239269494((uint64_t)v74) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v71 = (float32x4_t)v74[1];
      v72 = (float32x4_t)v74[0];
      v68 = (int8x16_t)v74[3];
      v69 = (float32x4_t)v74[2];
      swift_bridgeObjectRetain();
      sub_2392DF8CC(v72, v71, v69, v68);
    }
    v53 = sub_239351F3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v50, v53);
    v52 = v70;
  }
  sub_2392688AC(v49, type metadata accessor for PhotogrammetrySession.Request);
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_2392B4AB4(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint8_t *v33;
  int v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  v3 = sub_2393520B0();
  v66 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v62 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v58 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v58 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v58 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - v13;
  v15 = sub_23925FB08(&qword_256928DE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v64 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v61 = (uint64_t)&v58 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v58 - v20;
  v22 = *a1;
  v23 = v1;
  v24 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_23926059C(v24, (uint64_t)v21, &qword_256928DE8);
  v25 = type metadata accessor for PhotogrammetrySession.Request(0);
  v60 = *(_QWORD *)(v25 - 8);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v26 = v63(v21, 1, v25);
  sub_23925FE28((uint64_t)v21, &qword_256928DE8);
  if (v26 == 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v71 = 0;
  if (CPGRequestCreateWithDetail())
    return 0;
  v68 = v22;
  v67 = 6;
  sub_2392C5024();
  sub_23935241C();
  sub_23935241C();
  v27 = v66;
  if (v70 != v69)
    goto LABEL_10;
  if (!*(_QWORD *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 16))
  {
    v41 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v12, v41, v3);
    v42 = sub_239352098();
    v43 = sub_23935256C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_23925B000, v42, v43, "Output model options is nil", v44, 2u);
      MEMORY[0x23B83BC04](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v3);
    return 0;
  }
  v28 = v71;
  if (CPGRequestSetCustomOutputModelOptions())
    return 0;
  if (!v28)
    goto LABEL_33;
  v29 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v14, v29, v3);
  v30 = sub_239352098();
  v31 = sub_239352578();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_23925B000, v30, v31, "Set custom detail level for base frame request", v32, 2u);
    v33 = v32;
    v27 = v66;
    MEMORY[0x23B83BC04](v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v3);
LABEL_10:
  if (!v71)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  if (*(_BYTE *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25) == 1)
  {
    v34 = CPGRequestSetOutputQuadMeshEnabled();
    v35 = sub_239275AB0();
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    if (v34)
    {
      v37 = v65;
      v36(v65, v35, v3);
      v38 = sub_239352098();
      v39 = sub_23935256C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_23925B000, v38, v39, "Error setting quad mesh output for base frame request", v40, 2u);
        MEMORY[0x23B83BC04](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v3);
      goto LABEL_23;
    }
    v45 = v59;
    v36(v59, v35, v3);
    v46 = sub_239352098();
    v47 = sub_239352578();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_23925B000, v46, v47, "Set quad mesh model file for base frame request", v48, 2u);
      MEMORY[0x23B83BC04](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v45, v3);
  }
  swift_beginAccess();
  v49 = v71;
  result = CPGSessionProcessRequestWithCallbacks();
  if ((_DWORD)result)
  {
LABEL_23:
    CPGRequestRelease();
    return 0;
  }
  *(_QWORD *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = v49;
  if (!v49)
  {
    __break(1u);
    goto LABEL_35;
  }
  v51 = v64;
  sub_23926059C(v24, v64, &qword_256928DE8);
  result = v63((char *)v51, 1, v25);
  if ((_DWORD)result == 1)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  v52 = v61;
  sub_2392C4FE0(v51, v61, type metadata accessor for PhotogrammetrySession.Request);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v52, 0, 1, v25);
  swift_beginAccess();
  sub_2392A5540(v52, v49);
  swift_endAccess();
  v53 = sub_239275AB0();
  v54 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v62, v53, v3);
  v55 = sub_239352098();
  v56 = sub_239352578();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v57 = 0;
    _os_log_impl(&dword_23925B000, v55, v56, "Successfully passed a base frame request to backend session.", v57, 2u);
    MEMORY[0x23B83BC04](v57, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v54, v3);
  CPGRequestRelease();
  return 1;
}

double sub_2392B51C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD v13[6];

  v13[5] = *MEMORY[0x24BDAC8D0];
  v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239268820(a1, (uint64_t)v5, v6);
  v7 = sub_23925FB08(&qword_256928730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 3, v7))
  {
    sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
    return 0.0;
  }
  else
  {
    v13[4] = 0;
    if (!CPGRequestCreateWithDetail())
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25) != 1
        || !CPGRequestSetOutputQuadMeshEnabled())
      {
        swift_beginAccess();
        CPGSessionGetEstimatedProcessingTime();
        v8 = v10;
        CPGRequestRelease();
        v11 = sub_239351F3C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
        return v8;
      }
      CPGRequestRelease();
    }
    v9 = sub_239351F3C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
    return INFINITY;
  }
}

uint64_t sub_2392B5390(uint64_t a1, uint64_t a2, __int8 *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t MutableCopy;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  simd_float4x4 *v46;
  simd_float4x4 *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  const char *v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  float32x4_t v104;
  float32x4_t v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  float64x2_t v119[8];
  float64x2_t v120[8];
  _BYTE v121[144];
  _OWORD v122[9];
  _BYTE v123[144];
  _BYTE v124[136];
  uint64_t v125;
  float32x4_t v126[9];
  _BYTE v127[144];
  _BYTE v128[144];
  _BYTE v129[144];
  CoreOC::PhotogrammetrySession::Request::Geometry v130;
  uint64_t v131;
  _OWORD v132[9];
  _QWORD v133[20];

  v5 = v4;
  v118 = a1;
  v133[18] = *MEMORY[0x24BDAC8D0];
  v8 = sub_23925FB08(&qword_256928DE8);
  MEMORY[0x24BDAC7A8](v8);
  v112 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  v115 = v10;
  v116 = v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v113 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v114 = (char *)&v104 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v104 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v104 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v104 - v22;
  v117 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v117);
  v25 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a3;
  sub_239268764(a4, (uint64_t)v129, &qword_256928738);
  v27 = OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap;
  if (!*(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
    goto LABEL_81;
  v28 = v5 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_239268764(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform, (uint64_t)v127, &qword_256928728);
  sub_239268764((uint64_t)v127, (uint64_t)v128, &qword_256928728);
  if (sub_239269494((uint64_t)v128) == 1)
    goto LABEL_82;
  v125 = 0;
  sub_239268764((uint64_t)v129, (uint64_t)v126, &qword_256928738);
  if (sub_239269494((uint64_t)v126) == 1)
    goto LABEL_15;
  result = sub_2392DF8CC(v126[0], v126[1], v126[2], (int8x16_t)v126[3]);
  if ((result & 1) == 0)
    goto LABEL_15;
  if (!*(_QWORD *)(v5 + v27))
  {
    __break(1u);
    goto LABEL_84;
  }
  sub_239268764(v28, (uint64_t)v123, &qword_256928728);
  sub_239268764((uint64_t)v123, (uint64_t)v124, &qword_256928728);
  result = sub_239269494((uint64_t)v124);
  if ((_DWORD)result == 1)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  sub_239268764((uint64_t)v123, (uint64_t)v122, &qword_256928728);
  v110 = (float32x4_t)v122[3];
  v111 = (float32x4_t)v122[1];
  v106 = (float32x4_t)v122[2];
  v107 = (float32x4_t)v122[0];
  v108 = (float32x4_t)v122[7];
  v109 = (float32x4_t)v122[5];
  v104 = (float32x4_t)v122[6];
  v105 = (float32x4_t)v122[4];
  sub_239268764((uint64_t)v129, (uint64_t)v121, &qword_256928738);
  sub_239268764((uint64_t)v121, (uint64_t)v133, &qword_256928738);
  MutableCopy = CPGSfmMapCreateMutableCopy();
  if (MutableCopy)
  {
    v132[0] = v107;
    v132[1] = v111;
    v132[2] = v106;
    v132[3] = v110;
    v132[4] = v105;
    v132[5] = v109;
    v132[6] = v104;
    v132[7] = v108;
    if (!CPGSfmMapTransformBy())
    {
      sub_239268764((uint64_t)v133, (uint64_t)v132, &qword_256928738);
      if (sub_239269494((uint64_t)v132) == 1)
      {
        OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
        v110 = v43;
        v111 = v42;
        v108 = v45;
        v109 = v44;
        sub_2392E5BA4();
        PhotogrammetrySession.Request.Geometry.init(orientedBoundsTransform:rootTransform:)(&v130, v46, v47);
      }
      else
      {
        sub_239268764((uint64_t)v133, (uint64_t)&v130, &qword_256928738);
      }
      v110 = (float32x4_t)v130.rootTransform.columns[1];
      v111 = (float32x4_t)v130.rootTransform.columns[0];
      v108 = (float32x4_t)v130.rootTransform.columns[3];
      v109 = (float32x4_t)v130.rootTransform.columns[2];
      v106 = (float32x4_t)v130.orientedBoundsTransform.columns[1];
      v107 = (float32x4_t)v130.orientedBoundsTransform.columns[0];
      v104 = (float32x4_t)v130.orientedBoundsTransform.columns[3];
      v105 = (float32x4_t)v130.orientedBoundsTransform.columns[2];
      if ((sub_2392DF8CC((float32x4_t)v130.orientedBoundsTransform.columns[0], (float32x4_t)v130.orientedBoundsTransform.columns[1], (float32x4_t)v130.orientedBoundsTransform.columns[2], (int8x16_t)v130.orientedBoundsTransform.columns[3]) & 1) == 0)goto LABEL_88;
      v131 = 0;
      sub_2392DEE24(v119, v107, v106, v105, v104);
      v130.orientedBoundsTransform.columns[1] = (simd_float4)v119[1];
      v130.orientedBoundsTransform.columns[0] = (simd_float4)v119[0];
      v130.orientedBoundsTransform.columns[3] = (simd_float4)v119[3];
      v130.orientedBoundsTransform.columns[2] = (simd_float4)v119[2];
      v130.rootTransform.columns[1] = (simd_float4)v119[5];
      v130.rootTransform.columns[0] = (simd_float4)v119[4];
      v130.rootTransform.columns[3] = (simd_float4)v119[7];
      v130.rootTransform.columns[2] = (simd_float4)v119[6];
      if (!CPGBoundingBoxCreateFromTransform())
      {
        v48 = CPGSfmMapSetBoundingBox();
        CPGBoundingBoxRelease();
        if (!v48)
        {
LABEL_88:
          sub_2392DEE24(v120, v111, v110, v109, v108);
          v130.orientedBoundsTransform.columns[1] = (simd_float4)v120[1];
          v130.orientedBoundsTransform.columns[0] = (simd_float4)v120[0];
          v130.orientedBoundsTransform.columns[3] = (simd_float4)v120[3];
          v130.orientedBoundsTransform.columns[2] = (simd_float4)v120[2];
          v130.rootTransform.columns[1] = (simd_float4)v120[5];
          v130.rootTransform.columns[0] = (simd_float4)v120[4];
          v130.rootTransform.columns[3] = (simd_float4)v120[7];
          v130.rootTransform.columns[2] = (simd_float4)v120[6];
          if (!CPGSfmMapTransformBy())
          {
            CPGSfmMapRetain();
            CPGSfmMapRelease();
            if (CPGRequestCreateWithDetailAndSfmMap())
            {
              if ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 440))())
              {
                v50 = v49;
                ObjectType = swift_getObjectType();
                v52 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
                sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
                *(_QWORD *)v52 = 3;
                v52[8] = 1;
                swift_storeEnumTagMultiPayload();
                (*(void (**)(char *, uint64_t, uint64_t))(v50 + 8))(v25, ObjectType, v50);
                swift_unknownObjectRelease();
                sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
              }
              v53 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
              v35 = __OFSUB__(v53, 1);
              v54 = v53 - 1;
              if (!v35)
              {
                *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v54;
                sub_2392AF268();
                return CPGSfmMapRelease();
              }
              goto LABEL_80;
            }
            CPGSfmMapRelease();
            goto LABEL_34;
          }
        }
      }
    }
    MutableCopy = CPGSfmMapRelease();
  }
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 440))(MutableCopy))
  {
    v21 = v31;
    v32 = swift_getObjectType();
    v18 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
    sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)v18 = 3;
    v18[8] = 1;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(char *, uint64_t, char *))v21 + 1))(v25, v32, v21);
    swift_unknownObjectRelease();
    sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
  }
  v33 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  v34 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (!v35)
    goto LABEL_19;
  __break(1u);
LABEL_15:
  if (CPGRequestCreateWithDetail())
  {
    if ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 440))())
    {
      v38 = v37;
      v39 = swift_getObjectType();
      v40 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
      sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v40 = 3;
      v40[8] = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 8))(v25, v39, v38);
      swift_unknownObjectRelease();
      sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
    }
    v33 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
    v41 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    v35 = __OFSUB__(v41, 1);
    v36 = v41 - 1;
    if (!v35)
    {
LABEL_19:
      *(_QWORD *)(v5 + v33) = v36;
      return sub_2392AF268();
    }
    __break(1u);
    goto LABEL_75;
  }
LABEL_34:
  if (!v125)
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v130.orientedBoundsTransform.columns[0].i8[0] = v26;
  v124[0] = 6;
  sub_2392C5024();
  sub_23935241C();
  v55 = sub_23935241C();
  v56 = v115;
  if (v133[0] != *(_QWORD *)&v132[0])
    goto LABEL_52;
  if (!*(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 16))
    goto LABEL_43;
  if (!CPGRequestSetCustomOutputModelOptions())
  {
    v72 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v23, v72, v56);
    v73 = sub_239352098();
    v74 = sub_239352578();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_23925B000, v73, v74, "Set custom detail level model file request", v75, 2u);
      MEMORY[0x23B83BC04](v75, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v23, v56);
LABEL_52:
    v76 = v116;
    if (*(_BYTE *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25) == 1)
    {
      v77 = v125;
      if (CPGRequestSetOutputQuadMeshEnabled())
      {
        if ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 440))())
        {
          v79 = v78;
          v80 = swift_getObjectType();
          v81 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
          sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
          *(_QWORD *)v81 = 3;
          v81[8] = 1;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v79 + 8))(v25, v80, v79);
          swift_unknownObjectRelease();
          sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
        }
        v82 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
        v35 = __OFSUB__(v82, 1);
        v83 = v82 - 1;
        if (!v35)
        {
          *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v83;
          sub_2392AF268();
          v84 = sub_239275AB0();
          v85 = v114;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v114, v84, v56);
          v86 = sub_239352098();
          v87 = sub_23935256C();
          if (os_log_type_enabled(v86, v87))
          {
            v88 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v88 = 0;
            v89 = "Error setting quad mesh output model";
LABEL_71:
            _os_log_impl(&dword_23925B000, v86, v87, v89, v88, 2u);
            MEMORY[0x23B83BC04](v88, -1, -1);
            goto LABEL_72;
          }
          goto LABEL_72;
        }
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if (!v77)
      {
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
      }
      v90 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v18, v90, v56);
      v91 = sub_239352098();
      v92 = sub_239352578();
      if (os_log_type_enabled(v91, v92))
      {
        v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v93 = 0;
        _os_log_impl(&dword_23925B000, v91, v92, "Set quad mesh model file request", v93, 2u);
        MEMORY[0x23B83BC04](v93, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v56);
    }
    result = swift_beginAccess();
    v94 = v125;
    if (v125)
    {
      if (!CPGSessionProcessRequestWithCallbacks())
      {
        v101 = v112;
        sub_239268820(v118, v112, type metadata accessor for PhotogrammetrySession.Request);
        v102 = type metadata accessor for PhotogrammetrySession.Request(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v101, 0, 1, v102);
        swift_beginAccess();
        sub_2392A5540(v101, v94);
        swift_endAccess();
        v103 = sub_239275AB0();
        v85 = v113;
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v113, v103, v56);
        v86 = sub_239352098();
        v87 = sub_239352578();
        if (os_log_type_enabled(v86, v87))
        {
          v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v88 = 0;
          v89 = "Successfully passed the model file request to backend session.";
          goto LABEL_71;
        }
LABEL_72:

        (*(void (**)(char *, uint64_t))(v76 + 8))(v85, v56);
        return CPGRequestRelease();
      }
      if ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 440))())
      {
        v96 = v95;
        v97 = swift_getObjectType();
        v98 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
        sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)v98 = 3;
        v98[8] = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 8))(v25, v97, v96);
        swift_unknownObjectRelease();
        sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
      }
      v99 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      v35 = __OFSUB__(v99, 1);
      v100 = v99 - 1;
      if (!v35)
      {
        *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v100;
        sub_2392AF268();
        return CPGRequestRelease();
      }
      goto LABEL_76;
    }
LABEL_85:
    __break(1u);
    return result;
  }
  v55 = (*(uint64_t (**)(void))(*(_QWORD *)v5 + 440))();
  if (v55)
  {
    v21 = v57;
    v58 = swift_getObjectType();
    v59 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
    sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)v59 = 3;
    v59[8] = 1;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(char *, uint64_t, char *))v21 + 1))(v25, v58, v21);
    swift_unknownObjectRelease();
    v55 = sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
  }
  v33 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  v60 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  v35 = __OFSUB__(v60, 1);
  v36 = v60 - 1;
  if (!v35)
    goto LABEL_19;
  __break(1u);
LABEL_43:
  if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 440))(v55))
  {
    v62 = v61;
    v63 = swift_getObjectType();
    v64 = &v25[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
    sub_239268820(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)v64 = 3;
    v64[8] = 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 8))(v25, v63, v62);
    swift_unknownObjectRelease();
    sub_2392688AC((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
  }
  v65 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  v35 = __OFSUB__(v65, 1);
  v66 = v65 - 1;
  if (v35)
    goto LABEL_78;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v66;
  sub_2392AF268();
  v67 = sub_239275AB0();
  v68 = v116;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v21, v67, v56);
  v69 = sub_239352098();
  v70 = sub_23935256C();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v71 = 0;
    _os_log_impl(&dword_23925B000, v69, v70, "Output model options is nil", v71, 2u);
    MEMORY[0x23B83BC04](v71, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v21, v56);
}

uint64_t sub_2392B6234(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28[3];

  v2 = v1;
  v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  ObjectType = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v28[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud] + 16))
  {
    v7 = v2;
    sub_2392B67FC(a1);
    v14 = swift_bridgeObjectRetain();
    sub_2392E6378(v14, v28);
    *v13 = v28[0];
    v15 = swift_storeEnumTagMultiPayload();
    v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 440))(v15);
    if (v16)
    {
      v7 = (char *)v16;
      v18 = v17;
      ObjectType = swift_getObjectType();
      v19 = (uint64_t)&v10[*(int *)(sub_23925FB08(&qword_256929558) + 48)];
      sub_239268820(a1, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_239268820((uint64_t)v13, v19, type metadata accessor for PhotogrammetrySession.Result);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 8))(v10, ObjectType, v18);
      swift_unknownObjectRelease();
      sub_2392688AC((uint64_t)v10, type metadata accessor for PhotogrammetrySession.Output);
    }
    v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC6CoreOC9PGManager_requestNum];
    v21 = __OFSUB__(v20, 1);
    v22 = v20 - 1;
    if (!v21)
    {
      *(_QWORD *)&v2[OBJC_IVAR____TtC6CoreOC9PGManager_requestNum] = v22;
      sub_2392AF268();
      return sub_2392688AC((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Result);
    }
    __break(1u);
    goto LABEL_11;
  }
  sub_239268820(a1, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
  v2 += OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests;
  swift_beginAccess();
  v13 = *(_QWORD **)v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_11:
    v13 = (_QWORD *)sub_2392BFAA4(0, v13[2] + 1, 1, (unint64_t)v13);
    *(_QWORD *)v2 = v13;
  }
  v26 = v13[2];
  v25 = v13[3];
  if (v26 >= v25 >> 1)
  {
    v13 = (_QWORD *)sub_2392BFAA4(v25 > 1, v26 + 1, 1, (unint64_t)v13);
    *(_QWORD *)v2 = v13;
  }
  v13[2] = v26 + 1;
  sub_2392C4FE0((uint64_t)v7, (uint64_t)v13+ ((*(unsigned __int8 *)(ObjectType + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(ObjectType + 80))+ *(_QWORD *)(ObjectType + 72) * v26, type metadata accessor for PhotogrammetrySession.Request);
  return swift_endAccess();
}

uint64_t sub_2392B650C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[3];

  v2 = v1;
  v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (_QWORD *)((char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = &v2[OBJC_IVAR____TtC6CoreOC9PGManager_poses];
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v14 + 16))
  {
    v7 = v2;
    sub_2392B67FC(a1);
    v15 = swift_bridgeObjectRetain();
    sub_2392E6378(v15, v28);
    *v13 = v28[0];
    v16 = swift_storeEnumTagMultiPayload();
    v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 440))(v16);
    if (v17)
    {
      v7 = (char *)v17;
      v19 = v18;
      ObjectType = swift_getObjectType();
      v5 = (uint64_t)&v10[*(int *)(sub_23925FB08(&qword_256929558) + 48)];
      sub_239268820(a1, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_239268820((uint64_t)v13, v5, type metadata accessor for PhotogrammetrySession.Result);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 8))(v10, ObjectType, v19);
      swift_unknownObjectRelease();
      sub_2392688AC((uint64_t)v10, type metadata accessor for PhotogrammetrySession.Output);
    }
    v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC6CoreOC9PGManager_requestNum];
    v22 = __OFSUB__(v21, 1);
    v23 = v21 - 1;
    if (!v22)
    {
      *(_QWORD *)&v2[OBJC_IVAR____TtC6CoreOC9PGManager_requestNum] = v23;
      sub_2392AF268();
      return sub_2392688AC((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Result);
    }
    __break(1u);
    goto LABEL_11;
  }
  sub_239268820(a1, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
  v2 += OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests;
  swift_beginAccess();
  v13 = *(_QWORD **)v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_11:
    v13 = (_QWORD *)sub_2392BFAA4(0, v13[2] + 1, 1, (unint64_t)v13);
    *(_QWORD *)v2 = v13;
  }
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
  {
    v13 = (_QWORD *)sub_2392BFAA4(v26 > 1, v27 + 1, 1, (unint64_t)v13);
    *(_QWORD *)v2 = v13;
  }
  v13[2] = v27 + 1;
  sub_2392C4FE0((uint64_t)v7, (uint64_t)v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27, type metadata accessor for PhotogrammetrySession.Request);
  return swift_endAccess();
}

uint64_t sub_2392B67FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t result;
  char v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char v59[24];
  uint64_t v60;
  unsigned __int8 v61;
  unsigned __int8 v62;

  v2 = v1;
  v58 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v58);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23925FB08(&qword_256928DE8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v51 - v10;
  v12 = type metadata accessor for PhotogrammetrySession.Request(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59[0] = 6;
  sub_2392E64F0(0, 1, v59, (uint64_t)&v60);
  v56 = v60;
  v57 = v61;
  v55 = v62;
  v16 = v2 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_23926059C(v16, (uint64_t)v11, &qword_256928DE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v17 = sub_23925FE28((uint64_t)v11, &qword_256928DE8);
LABEL_10:
    v30 = v55;
    v31 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 440);
    v32 = v31(v17);
    if (v32)
    {
      v34 = v33;
      ObjectType = swift_getObjectType();
      v36 = *(int *)(sub_23925FB08(&qword_256929560) + 48);
      sub_239268820(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)&v5[v36] = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 8))(v5, ObjectType, v34);
      swift_unknownObjectRelease();
      v32 = sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    v37 = v31(v32);
    if (v37)
    {
      v39 = v38;
      v40 = swift_getObjectType();
      v41 = &v5[*(int *)(sub_23925FB08(&qword_256929568) + 48)];
      sub_239268820(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v41 = v56;
      v41[8] = v57;
      v41[9] = v30;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 8))(v5, v40, v39);
      swift_unknownObjectRelease();
      v37 = sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    v42 = v31(v37);
    if (v42)
    {
      v44 = v43;
      v45 = swift_getObjectType();
      v46 = *(int *)(sub_23925FB08(&qword_256929560) + 48);
      sub_239268820(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)&v5[v46] = 0x3FF0000000000000;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 8))(v5, v45, v44);
      swift_unknownObjectRelease();
      v42 = sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    result = v31(v42);
    if (result)
    {
      v48 = v47;
      v49 = swift_getObjectType();
      v50 = &v5[*(int *)(sub_23925FB08(&qword_256929568) + 48)];
      sub_239268820(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v50 = v56;
      v50[8] = v57;
      v50[9] = v30;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 8))(v5, v49, v48);
      swift_unknownObjectRelease();
      return sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    return result;
  }
  v54 = v9;
  sub_2392C4FE0((uint64_t)v11, (uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
  if ((static PhotogrammetrySession.Request.== infix(_:_:)(v15, a1) & 1) == 0)
  {
    v17 = sub_2392688AC((uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
    goto LABEL_10;
  }
  v53 = a1;
  v18 = *(uint64_t (**)(void))(*(_QWORD *)v2 + 440);
  v19 = v18();
  if (v19)
  {
    v51 = v20;
    v52 = swift_getObjectType();
    v21 = v18;
    v22 = *(int *)(sub_23925FB08(&qword_256929560) + 48);
    sub_239268820(v53, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)&v5[v22] = 0x3FF0000000000000;
    v18 = v21;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v5, v52);
    swift_unknownObjectRelease();
    v19 = sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  }
  v23 = ((uint64_t (*)(uint64_t))v18)(v19);
  v25 = (uint64_t)v54;
  if (v23)
  {
    v26 = v24;
    v27 = swift_getObjectType();
    v28 = &v5[*(int *)(sub_23925FB08(&qword_256929568) + 48)];
    sub_239268820(v53, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)v28 = v56;
    v28[8] = v57;
    v28[9] = v55;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 8))(v5, v27, v26);
    swift_unknownObjectRelease();
    sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  }
  sub_2392688AC((uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v25, 1, 1, v12);
  swift_beginAccess();
  sub_239267C70(v25, v16, &qword_256928DE8);
  return swift_endAccess();
}

uint64_t sub_2392B6DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  v38 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for PhotogrammetrySession.Result(0);
  v3 = MEMORY[0x24BDAC7A8](v43);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v29 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - v9;
  v11 = sub_239351F3C();
  v35 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v34 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PhotogrammetrySession.Request(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v45 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - v17;
  v33 = OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud;
  if (!*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v19 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform + 64) & 1) != 0)
  {
    __break(1u);
    JUMPOUT(0x2392B747CLL);
  }
  v20 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  swift_beginAccess();
  v32 = v20;
  if (!*(_QWORD *)(*(_QWORD *)v20 + 16))
  {
LABEL_8:
    __break(1u);
    JUMPOUT(0x2392B7474);
  }
  v41 = v8;
  v21 = (_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests);
  swift_beginAccess();
  v30 = v21;
  v22 = *v21;
  if (*(_QWORD *)(*v21 + 16))
  {
    v31 = v19;
    v40 = v5;
    v23 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
    v24 = v22 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v44 = *(_QWORD *)(v14 + 72);
    v29 = v22;
    swift_bridgeObjectRetain();
    v39 = v10;
    v42 = v23;
    sub_239268820(v24, (uint64_t)v18, type metadata accessor for PhotogrammetrySession.Request);
    v25 = v45;
    sub_239268820((uint64_t)v18, v45, type metadata accessor for PhotogrammetrySession.Request);
    v26 = sub_23925FB08(&qword_256928730);
    v27 = (char *)&loc_2392B7070
        + dword_2392B747C[(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 3, v26)];
    __asm { BR              X9 }
  }
  *v30 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_2392B748C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t result;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  char v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char v119;
  char v120[24];

  v1 = v0;
  v115 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v115);
  v114 = (uint64_t)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  v108 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v106 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v99 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v99 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v99 - v12;
  v14 = sub_23925FB08(&qword_256929540);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t *)((char *)&v99 - v18);
  v20 = (_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest);
  swift_beginAccess();
  v103 = v20;
  v21 = *v20;
  v22 = *(_QWORD *)(*v20 + 64);
  v104 = *v20 + 64;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v118 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  v111 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  v112 = OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest;
  v107 = OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled;
  v26 = (unint64_t)(v23 + 63) >> 6;
  v100 = v26 - 1;
  result = swift_bridgeObjectRetain();
  v28 = v25;
  v29 = 0;
  v105 = v26;
  v101 = v26 - 5;
  v110 = result;
  v102 = result + 104;
  v113 = (uint64_t *)v8;
  v109 = v17;
  while (1)
  {
    if (v28)
    {
      v116 = (v28 - 1) & v28;
      v117 = v29;
      v30 = __clz(__rbit64(v28)) | (v29 << 6);
LABEL_8:
      v31 = *(_QWORD *)(v110 + 56);
      *v17 = *(_QWORD *)(*(_QWORD *)(v110 + 48) + 8 * v30);
      v32 = v31 + *(_QWORD *)(v108 + 72) * v30;
      v33 = sub_23925FB08(&qword_256929548);
      sub_239268820(v32, (uint64_t)v17 + *(int *)(v33 + 48), type metadata accessor for PhotogrammetrySession.Request);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 0, 1, v33);
      goto LABEL_15;
    }
    v34 = v29 + 1;
    if (__OFADD__(v29, 1))
      goto LABEL_68;
    if (v34 >= v105)
    {
      v36 = v29;
    }
    else
    {
      v35 = *(_QWORD *)(v104 + 8 * v34);
      if (v35)
        goto LABEL_12;
      v36 = v29 + 1;
      if ((uint64_t)(v29 + 2) < v105)
      {
        v35 = *(_QWORD *)(v104 + 8 * (v29 + 2));
        if (v35)
        {
          v34 = v29 + 2;
LABEL_12:
          v116 = (v35 - 1) & v35;
          v117 = v34;
          v30 = __clz(__rbit64(v35)) + (v34 << 6);
          goto LABEL_8;
        }
        v36 = v29 + 2;
        if ((uint64_t)(v29 + 3) < v105)
        {
          v35 = *(_QWORD *)(v104 + 8 * (v29 + 3));
          if (v35)
          {
            v34 = v29 + 3;
            goto LABEL_12;
          }
          v34 = v29 + 4;
          v36 = v29 + 3;
          if ((uint64_t)(v29 + 4) < v105)
          {
            v35 = *(_QWORD *)(v104 + 8 * v34);
            if (v35)
              goto LABEL_12;
            while (v101 != v29)
            {
              v35 = *(_QWORD *)(v102 + 8 * v29++);
              if (v35)
              {
                v34 = v29 + 4;
                goto LABEL_12;
              }
            }
            v36 = v100;
          }
        }
      }
    }
    v37 = sub_23925FB08(&qword_256929548);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 1, 1, v37);
    v116 = 0;
    v117 = v36;
LABEL_15:
    sub_239268764((uint64_t)v17, (uint64_t)v19, &qword_256929540);
    v38 = sub_23925FB08(&qword_256929548);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v19, 1, v38) == 1)
      break;
    v39 = *v19;
    v40 = sub_2392C4FE0((uint64_t)v19 + *(int *)(v38 + 48), (uint64_t)v13, type metadata accessor for PhotogrammetrySession.Request);
    v41 = *(_QWORD *)(v1 + v112);
    if (v41)
    {
      sub_239268820((uint64_t)v13, (uint64_t)v11, type metadata accessor for PhotogrammetrySession.Request);
      if (v39 == v41)
      {
        v61 = sub_23929A274((uint64_t)v11);
        sub_239268820((uint64_t)v11, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
        if (!v61)
        {
          sub_2392688AC((uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
          v63 = (uint64_t)v11;
          v64 = type metadata accessor for PhotogrammetrySession.Request;
LABEL_34:
          sub_2392688AC(v63, v64);
          goto LABEL_5;
        }
        v62 = sub_23929A330((uint64_t)v8);
        sub_2392688AC((uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
        v40 = sub_2392688AC((uint64_t)v11, type metadata accessor for PhotogrammetrySession.Request);
        if ((v62 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        v40 = sub_2392688AC((uint64_t)v11, type metadata accessor for PhotogrammetrySession.Request);
      }
    }
    v42 = v19;
    v43 = v11;
    v44 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 440);
    result = v44(v40);
    if (result)
    {
      v46 = v45;
      ObjectType = swift_getObjectType();
      v48 = sub_23925FB08(&qword_256929550);
      v49 = v114;
      v50 = v44;
      v51 = v114 + *(int *)(v48 + 48);
      sub_239268820((uint64_t)v13, v114, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v51 = 5;
      *(_BYTE *)(v51 + 8) = 1;
      v44 = v50;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8))(v49, ObjectType, v46);
      swift_unknownObjectRelease();
      result = sub_2392688AC(v49, type metadata accessor for PhotogrammetrySession.Output);
    }
    v52 = *(_QWORD *)(v1 + v118);
    v53 = __OFSUB__(v52, 1);
    v54 = v52 - 1;
    if (v53)
    {
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    *(_QWORD *)(v1 + v118) = v54;
    v8 = (char *)v113;
    if (v54 < 0)
      goto LABEL_65;
    v11 = v43;
    v17 = v109;
    v19 = v42;
    if (!v54)
    {
      swift_retain();
      sub_239351148();
      v55 = swift_release();
      if (v120[0] != 1 && *(_BYTE *)(v1 + v107) != 1)
      {
        if (!v44(v55))
          goto LABEL_5;
        v66 = v65;
        v67 = swift_getObjectType();
        v68 = v114;
        swift_storeEnumTagMultiPayload();
        v69 = v67;
        v8 = (char *)v113;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 8))(v68, v69, v66);
        swift_unknownObjectRelease();
        v63 = v68;
        v64 = type metadata accessor for PhotogrammetrySession.Output;
        goto LABEL_34;
      }
      if (v44(v55))
      {
        v57 = v56;
        v58 = swift_getObjectType();
        v59 = v114;
        swift_storeEnumTagMultiPayload();
        v60 = v58;
        v8 = (char *)v113;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 8))(v59, v60, v57);
        swift_unknownObjectRelease();
        sub_2392688AC(v59, type metadata accessor for PhotogrammetrySession.Output);
      }
      v120[0] = 0;
      swift_retain();
      sub_2393511FC((uint64_t)v120);
      swift_release();
      *(_BYTE *)(v1 + v107) = 0;
    }
LABEL_5:
    result = sub_2392688AC((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Request);
    v28 = v116;
    v29 = v117;
  }
  swift_release();
  v70 = (uint64_t *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests);
  swift_beginAccess();
  v71 = *v70;
  v72 = *(_QWORD *)(*v70 + 16);
  if (!v72)
  {
LABEL_63:
    *v70 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    *v103 = MEMORY[0x24BEE4B00];
    return swift_bridgeObjectRelease();
  }
  v112 = *v70;
  v113 = v70;
  v73 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 440);
  v74 = v108;
  v75 = v71 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
  swift_bridgeObjectRetain();
  v116 = *(_QWORD *)(v74 + 72);
  v76 = v106;
  while (1)
  {
    v77 = sub_239268820(v75, v76, type metadata accessor for PhotogrammetrySession.Request);
    result = v73(v77);
    if (result)
    {
      v79 = v78;
      v80 = swift_getObjectType();
      v117 = v72;
      v81 = v1;
      v82 = v73;
      v83 = v80;
      v84 = sub_23925FB08(&qword_256929550);
      v85 = v114;
      v86 = v114 + *(int *)(v84 + 48);
      sub_239268820(v76, v114, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v86 = 5;
      *(_BYTE *)(v86 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      v87 = v83;
      v73 = v82;
      v1 = v81;
      v72 = v117;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 8))(v85, v87, v79);
      swift_unknownObjectRelease();
      result = sub_2392688AC(v85, type metadata accessor for PhotogrammetrySession.Output);
    }
    v88 = *(_QWORD *)(v1 + v118);
    v53 = __OFSUB__(v88, 1);
    v89 = v88 - 1;
    if (v53)
      break;
    *(_QWORD *)(v1 + v118) = v89;
    if (v89 < 0)
      goto LABEL_67;
    if (!v89)
    {
      swift_retain();
      sub_239351148();
      v90 = swift_release();
      if (v119 == 1 || *(_BYTE *)(v1 + v107) == 1)
      {
        if (v73(v90))
        {
          v92 = v91;
          v93 = swift_getObjectType();
          v94 = v114;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 8))(v94, v93, v92);
          swift_unknownObjectRelease();
          sub_2392688AC(v94, type metadata accessor for PhotogrammetrySession.Output);
        }
        v119 = 0;
        swift_retain();
        sub_2393511FC((uint64_t)&v119);
        swift_release();
        *(_BYTE *)(v1 + v107) = 0;
      }
      else if (v73(v90))
      {
        v96 = v95;
        v97 = swift_getObjectType();
        v98 = v114;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 8))(v98, v97, v96);
        swift_unknownObjectRelease();
        sub_2392688AC(v98, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
    v76 = v106;
    sub_2392688AC(v106, type metadata accessor for PhotogrammetrySession.Request);
    v75 += v116;
    if (!--v72)
    {
      swift_bridgeObjectRelease();
      v70 = v113;
      goto LABEL_63;
    }
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_2392B7E64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_session);
  swift_beginAccess();
  if (*v1)
    CPGSessionRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle))
    CPGAddSampleCallbackBundleRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle))
    CPGProcessingCallbackBundleRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle))
    CPGFinalizeInputCallbackBundleRelease();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
    CPGSfmMapRelease();
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 16);
  if (result)
    return CPGOutputModelOptionsRelease();
  return result;
}

uint64_t sub_2392B7F18(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  void (**v8)(char *, uint64_t, unsigned __int8 *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t, unsigned __int8 *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t Strong;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  void (**v57)(char *, uint64_t, unsigned __int8 *);
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  _QWORD *v61;
  char v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  unsigned __int8 v70;
  id v71;
  char *v72;
  void *v73;
  unsigned int v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  uint64_t result;
  uint64_t v85;
  uint64_t ObjCClassFromMetadata;
  void *v87;
  id v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  void (**v98)(char *, uint64_t, unsigned __int8 *);
  unsigned __int8 *v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void (*v107)(void (**)(char *, uint64_t, unsigned __int8 *), uint64_t);
  char *v108;
  void *v109;
  id v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  id v115;
  void *v116;
  id v117;
  id v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  int v123;
  id v124;
  void *v125;
  id v126;
  void *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  void (*v133)(void (**)(char *, uint64_t, unsigned __int8 *), uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char *v140;
  void *v141;
  unsigned int v142;
  unsigned __int8 *v143;
  uint64_t v144;
  char *v145;
  unsigned __int8 *v146;
  id v147;
  void *v148;
  id v149;
  void *v150;
  uint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  void *QuadMeshObjAssetsURLs;
  id v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  void *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  unsigned __int8 *v175;
  NSObject *v176;
  os_log_type_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  NSObject *v186;
  os_log_type_t v187;
  uint8_t *v188;
  uint8_t *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  NSObject *v193;
  os_log_type_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(char *, uint64_t);
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  NSObject *v210;
  os_log_type_t v211;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  void (*v218)(char *, uint64_t);
  void (*v219)(char *, uint64_t);
  id v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  id v224;
  char *v225;
  id v226;
  void (*v227)(char *, uint64_t, uint64_t);
  _QWORD *v228;
  uint64_t v229;
  void *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  unsigned __int8 *v248;
  void (**v249)(char *, uint64_t, unsigned __int8 *);
  char *v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  __int128 v254;
  __int128 v255;
  uint64_t v256;

  v256 = *MEMORY[0x24BDAC8D0];
  v7 = sub_2393520B0();
  v8 = *(void (***)(char *, uint64_t, unsigned __int8 *))(v7 - 8);
  v248 = (unsigned __int8 *)v7;
  v249 = v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v237 = (char *)&v220 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (unsigned __int8 *)&v220 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v220 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v239 = (char *)&v220 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v242 = (char *)&v220 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v236 = (char *)&v220 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v235 = (char *)&v220 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v240 = (char *)&v220 - v25;
  v26 = sub_23925FB08(&qword_256929528);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (uint64_t)&v220 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = sub_239351F3C();
  v251 = *(_QWORD *)(v247 - 8);
  v29 = MEMORY[0x24BDAC7A8](v247);
  v31 = (void (**)(char *, uint64_t, unsigned __int8 *))((char *)&v220 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = MEMORY[0x24BDAC7A8](v29);
  v238 = (char *)&v220 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v243 = (char *)&v220 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v234 = (char *)&v220 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v220 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38);
  v244 = (char *)&v220 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v241 = (char *)&v220 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v233 = (char *)&v220 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v220 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47);
  v246 = (char *)&v220 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v250 = (char *)&v220 - v52;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_2392A1828(0xD00000000000002BLL, 0x800000023935CB60);
    return CPGOutputRelease();
  }
  v54 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v55 = sub_239275AB0();
    v56 = v248;
    v57 = v249;
    v249[2](v16, v55, v248);
    v58 = sub_239352098();
    v59 = sub_23935256C();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_23925B000, v58, v59, "Can't copy to URL. Backend manager is closed.", v60, 2u);
      MEMORY[0x23B83BC04](v60, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    ((void (*)(char *, unsigned __int8 *))v57[1])(v16, v56);
    return CPGOutputRelease();
  }
  v225 = v40;
  v229 = swift_allocObject();
  *(_BYTE *)(v229 + 16) = 1;
  v61 = (_QWORD *)sub_239351E88();
  v62 = sub_239351EB8();
  v232 = a1;
  v230 = a3;
  if ((v62 & 1) == 0)
  {
    if (v61[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v63 = v61[2];
        if (v63)
        {
LABEL_10:
          v61[2] = v63 - 1;
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
    }
    else
    {
      __break(1u);
    }
    v61 = sub_2392C282C(v61);
    v63 = v61[2];
    if (v63)
      goto LABEL_10;
    goto LABEL_91;
  }
LABEL_11:
  v245 = v54;
  v231 = a4;
  v64 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v65 = (void *)sub_239352434();
  v228 = v61;
  swift_bridgeObjectRelease();
  v66 = objc_msgSend(v64, sel_pathWithComponents_, v65);

  v67 = v66;
  if (!v66)
  {
    sub_2393522F0();
    v67 = (void *)sub_2393522CC();
    swift_bridgeObjectRelease();
  }
  sub_2393522F0();
  sub_239351EAC();
  swift_bridgeObjectRelease();
  v68 = (void *)objc_opt_self();
  v69 = objc_msgSend(v68, sel_defaultManager);
  v70 = objc_msgSend(v69, sel_fileExistsAtPath_, v67);

  if ((v70 & 1) == 0)
  {
    v71 = objc_msgSend(v68, sel_defaultManager);
    v72 = v250;
    v73 = (void *)sub_239351ED0();
    *(_QWORD *)&v254 = 0;
    v74 = objc_msgSend(v71, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v73, 1, 0, &v254);

    if (!v74)
    {
      v95 = (id)v254;
      swift_bridgeObjectRelease();
      v96 = (char *)sub_239351E58();

      v246 = v96;
      swift_willThrow();
      v97 = sub_239275AB0();
      v99 = v248;
      v98 = v249;
      v249[2]((char *)v13, v97, v248);
      v100 = v251;
      v101 = v247;
      (*(void (**)(char *, char *, uint64_t))(v251 + 16))((char *)v31, v72, v247);
      v102 = sub_239352098();
      v103 = sub_23935256C();
      if (os_log_type_enabled(v102, v103))
      {
        v104 = swift_slowAlloc();
        v244 = (char *)swift_slowAlloc();
        *(_QWORD *)&v254 = v244;
        *(_DWORD *)v104 = 141558275;
        v252 = 1752392040;
        sub_2393526B0();
        *(_WORD *)(v104 + 12) = 2081;
        v105 = sub_239351F30();
        v252 = sub_23925F3EC(v105, v106, (uint64_t *)&v254);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        v107 = *(void (**)(void (**)(char *, uint64_t, unsigned __int8 *), uint64_t))(v100 + 8);
        v107(v31, v101);
        _os_log_impl(&dword_23925B000, v102, v103, "Failed to create directory = %{private,mask.hash}s", (uint8_t *)v104, 0x16u);
        v108 = v244;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v108, -1, -1);
        MEMORY[0x23B83BC04](v104, -1, -1);

        ((void (*)(unsigned __int8 *, unsigned __int8 *))v249[1])(v13, v248);
        v107((void (**)(char *, uint64_t, unsigned __int8 *))v250, v101);
      }
      else
      {

        v133 = *(void (**)(void (**)(char *, uint64_t, unsigned __int8 *), uint64_t))(v100 + 8);
        v133(v31, v101);
        ((void (*)(unsigned __int8 *, unsigned __int8 *))v98[1])(v13, v99);
        v133((void (**)(char *, uint64_t, unsigned __int8 *))v72, v101);
      }
      v134 = v231;
      v135 = (uint64_t)v230;
      v136 = v229;
      *(_BYTE *)(v229 + 16) = 0;
      v137 = v245;
      v138 = v136;
      goto LABEL_86;
    }
    v75 = (id)v254;
  }
  v76 = v245;
  v13 = (unsigned __int8 *)(v245 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration);
  sub_239298BFC(*(_BYTE *)(v245 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25), (_QWORD *)v28);
  v77 = sub_23925FB08(&qword_256928720);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v28, 1, v77) == 1)
  {
    (*(void (**)(char *, uint64_t))(v251 + 8))(v250, v247);
    swift_bridgeObjectRelease();
    sub_23925FE28(v28, &qword_256929528);
    v78 = v229;
    *(_BYTE *)(v229 + 16) = 0;
    sub_2392B9DE4(v76, v78, (uint64_t)v230, v231);
LABEL_97:
    swift_release();
    goto LABEL_98;
  }
  v79 = *(void **)v28;
  v80 = v28 + *(int *)(v77 + 48);
  v81 = *(_QWORD *)(v28 + *(int *)(v77 + 64));
  v227 = *(void (**)(char *, uint64_t, uint64_t))(v251 + 32);
  v227(v246, v80, v247);
  v226 = v79;
  v82 = objc_msgSend(v79, sel_rootNode);
  v83 = objc_msgSend(objc_msgSend(v82, sel_subtreeIterator), sel_nextObject);
  result = swift_unknownObjectRelease();
  v224 = v83;
  if (v83)
  {
    v85 = sub_2393522CC();
    v222 = sub_2393522CC();
    type metadata accessor for PGManager();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v87 = (void *)objc_opt_self();
    v88 = objc_msgSend(v87, sel_bundleForClass_, ObjCClassFromMetadata);
    v89 = objc_msgSend(v88, sel_infoDictionary);

    v220 = v82;
    v221 = v81;
    v223 = (void *)v85;
    if (v89)
    {
      v90 = sub_239352284();

      if (*(_QWORD *)(v90 + 16) && (v91 = sub_23925FAA4(0x656C646E75424643, 0xEF6E6F6973726556), (v92 & 1) != 0))
      {
        sub_23925FB48(*(_QWORD *)(v90 + 56) + 32 * v91, (uint64_t)&v254);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v255 + 1))
        {
          if (swift_dynamicCast())
          {
            v93 = v252;
            v94 = v253;
LABEL_33:
            OCGitHash()();
            *(_QWORD *)&v254 = v93;
            *((_QWORD *)&v254 + 1) = v94;
            swift_bridgeObjectRetain();
            sub_239352380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_239352380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v109 = (void *)sub_2393522CC();
            v110 = objc_msgSend(v87, sel_bundleWithIdentifier_, v109);

            if (v110
              && (v111 = objc_msgSend(v110, sel_infoDictionary, v220),
                  v110,
                  v111))
            {
              v112 = sub_239352284();

              if (*(_QWORD *)(v112 + 16)
                && (v113 = sub_23925FAA4(0x656C646E75424643, 0xEF6E6F6973726556), (v114 & 1) != 0))
              {
                sub_23925FB48(*(_QWORD *)(v112 + 56) + 32 * v113, (uint64_t)&v254);
              }
              else
              {
                v254 = 0u;
                v255 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((_QWORD *)&v255 + 1))
              {
                swift_dynamicCast();
                goto LABEL_40;
              }
            }
            else
            {
              v254 = 0u;
              v255 = 0u;
            }
            sub_23925FE28((uint64_t)&v254, (uint64_t *)&unk_25692A930);
LABEL_40:
            *(_QWORD *)&v254 = 0xD00000000000001BLL;
            *((_QWORD *)&v254 + 1) = 0x800000023935CD20;
            sub_239352380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_239352380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_239352380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_239352380();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_239352380();
            swift_bridgeObjectRelease();
            v115 = objc_allocWithZone(MEMORY[0x24BEBECD8]);
            v116 = (void *)sub_2393522CC();
            swift_bridgeObjectRelease();
            v117 = objc_msgSend(v115, sel_initWithString_, v116);

            v118 = v224;
            v119 = v223;
            v120 = (void *)v222;
            objc_msgSend(v224, sel_setDictionaryMetadataWithKey_dictionaryKey_value_, v223, v222, v117);

            v121 = (void *)sub_2393522CC();
            v122 = (void *)sub_2393522CC();
            if (v13[25])
              v123 = 256;
            else
              v123 = 0;
            sub_2392A0C3C(v231, *v13 | ((unint64_t)*((unsigned int *)v13 + 1) << 32), *((unsigned int *)v13 + 2), *((_QWORD *)v13 + 2), v123 | v13[24]);
            v124 = objc_allocWithZone(MEMORY[0x24BEBECD8]);
            v125 = (void *)sub_2393522CC();
            swift_bridgeObjectRelease();
            v126 = objc_msgSend(v124, sel_initWithString_, v125);

            objc_msgSend(v118, sel_setDictionaryMetadataWithKey_dictionaryKey_value_, v121, v122, v126);
            objc_msgSend(v226, sel_save);
            v127 = v230;
            if ((sub_239351EB8() & 1) != 0)
            {
              a4 = v221;
              a1 = v247;
              v31 = v249;
              if (v13[25] == 1)
                QuadMeshObjAssetsURLs = (void *)CPGOutputGetQuadMeshObjAssetsURLs();
              else
                QuadMeshObjAssetsURLs = (void *)CPGOutputGetObjAssetsURLs();
              v13 = v248;
              v144 = v245;
              if (QuadMeshObjAssetsURLs)
              {
                v163 = QuadMeshObjAssetsURLs;
                *(_QWORD *)&v254 = 0;
                type metadata accessor for CFURL(0);
                v164 = (char *)v163;
                sub_239352440();
                v244 = v164;

                v28 = v254;
                if ((_QWORD)v254)
                {
                  if (!((unint64_t)v254 >> 62))
                  {
                    v165 = *(_QWORD *)((v254 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    if (v165)
                    {
LABEL_64:
                      *(_QWORD *)&v254 = MEMORY[0x24BEE4AF8];
                      sub_23927D7AC(0, v165 & ~(v165 >> 63), 0);
                      if (v165 < 0)
                        __break(1u);
                      v166 = 0;
                      v167 = v254;
                      do
                      {
                        if ((v28 & 0xC000000000000001) != 0)
                          v168 = (id)MEMORY[0x23B83A68C](v166, v28);
                        else
                          v168 = *(id *)(v28 + 8 * v166 + 32);
                        v169 = v168;
                        sub_239351F18();

                        *(_QWORD *)&v254 = v167;
                        v171 = *(_QWORD *)(v167 + 16);
                        v170 = *(_QWORD *)(v167 + 24);
                        if (v171 >= v170 >> 1)
                        {
                          sub_23927D7AC(v170 > 1, v171 + 1, 1);
                          v167 = v254;
                        }
                        ++v166;
                        *(_QWORD *)(v167 + 16) = v171 + 1;
                        v227((char *)(v167+ ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80))+ *(_QWORD *)(v251 + 72) * v171), (uint64_t)v49, a1);
                      }
                      while (v165 != v166);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v13 = v248;
                      v31 = v249;
                      goto LABEL_95;
                    }
LABEL_94:
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v167 = MEMORY[0x24BEE4AF8];
LABEL_95:
                    v201 = sub_2392C4540(v167);
                    swift_bridgeObjectRelease();
                    v202 = sub_2392C4540(a4);
                    swift_bridgeObjectRelease();
                    v203 = sub_2392BA0E4(v202, v201);
                    MEMORY[0x24BDAC7A8](v203);
                    v127 = v230;
                    *(&v220 - 2) = v230;
                    sub_2392BA59C((void (*)(char *))sub_2392C5220, (uint64_t)(&v220 - 4), v203);
                    swift_bridgeObjectRelease();
                    v206 = sub_239275AB0();
                    v207 = v235;
                    v31[2](v235, v206, v13);
                    v208 = v251;
                    v209 = v233;
                    (*(void (**)(char *, void *, uint64_t))(v251 + 16))(v233, v127, a1);
                    v210 = sub_239352098();
                    v211 = sub_239352578();
                    if (os_log_type_enabled(v210, v211))
                    {
                      v213 = v209;
                      v214 = swift_slowAlloc();
                      v215 = swift_slowAlloc();
                      *(_QWORD *)&v254 = v215;
                      *(_DWORD *)v214 = 141558275;
                      v252 = 1752392040;
                      sub_2393526B0();
                      *(_WORD *)(v214 + 12) = 2081;
                      v216 = sub_239351F30();
                      v252 = sub_23925F3EC(v216, v217, (uint64_t *)&v254);
                      sub_2393526B0();
                      swift_bridgeObjectRelease();
                      v218 = *(void (**)(char *, uint64_t))(v251 + 8);
                      v218(v213, a1);
                      _os_log_impl(&dword_23925B000, v210, v211, "Save OBJ+USDA assets to directory = %{private,mask.hash}s", (uint8_t *)v214, 0x16u);
                      swift_arrayDestroy();
                      v127 = v230;
                      MEMORY[0x23B83BC04](v215, -1, -1);
                      MEMORY[0x23B83BC04](v214, -1, -1);

                      ((void (*)(char *, unsigned __int8 *))v31[1])(v235, v248);
                      v218(v246, a1);
                      v218(v250, a1);
                    }
                    else
                    {

                      v219 = *(void (**)(char *, uint64_t))(v208 + 8);
                      v219(v209, a1);

                      ((void (*)(char *, unsigned __int8 *))v31[1])(v207, v13);
                      v219(v246, a1);
                      v219(v250, a1);
                    }
LABEL_85:
                    v134 = v231;
                    v137 = v245;
                    v138 = v229;
                    v135 = (uint64_t)v127;
LABEL_86:
                    sub_2392B9DE4(v137, v138, v135, v134);
                    swift_release();
LABEL_98:
                    swift_release();
                    return CPGOutputRelease();
                  }
LABEL_93:
                  swift_bridgeObjectRetain();
                  v165 = sub_239352854();
                  swift_bridgeObjectRelease();
                  if (v165)
                    goto LABEL_64;
                  goto LABEL_94;
                }
              }
              else
              {
                v244 = 0;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v184 = sub_239275AB0();
              v185 = v240;
              v31[2](v240, v184, v13);
              v186 = sub_239352098();
              v187 = sub_23935256C();
              if (os_log_type_enabled(v186, v187))
              {
                v188 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v188 = 0;
                _os_log_impl(&dword_23925B000, v186, v187, "Failed to get output OBJ assets!", v188, 2u);
                v189 = v188;
                v185 = v240;
                MEMORY[0x23B83BC04](v189, -1, -1);
              }

              ((void (*)(char *, unsigned __int8 *))v31[1])(v185, v13);
              v204 = *(void (**)(char *, uint64_t))(v251 + 8);
              v204(v246, a1);
              v204(v250, a1);
LABEL_96:
              v205 = v229;
              *(_BYTE *)(v229 + 16) = 0;
              sub_2392B9DE4(v144, v205, (uint64_t)v127, v231);
              goto LABEL_97;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v128 = v251;
            v28 = *(_QWORD *)(v251 + 16);
            v129 = v241;
            a1 = v247;
            ((void (*)(char *, void *, uint64_t))v28)(v241, v127, v247);
            v130 = sub_239351E70();
            v49 = v131;
            if (v130 == 2053403509 && v131 == (char *)0xE400000000000000)
            {
              swift_bridgeObjectRelease();
              v31 = *(void (***)(char *, uint64_t, unsigned __int8 *))(v128 + 8);
              ((void (*)(char *, uint64_t))v31)(v129, a1);
              a4 = (uint64_t)v243;
              v132 = v244;
LABEL_56:
              v140 = v225;
              sub_239351EDC();
              sub_239351F00();
              ((void (*)(char *, uint64_t))v31)(v140, a1);
              v141 = (void *)sub_239351ED0();
              v142 = objc_msgSend(v226, sel_exportToURL_, v141);

              v143 = v248;
              v144 = v245;
              v145 = v242;
              if (v142)
              {
                v146 = v248;
                v147 = objc_allocWithZone(MEMORY[0x24BEBED00]);
                v148 = (void *)sub_239351ED0();
                v149 = objc_msgSend(v147, sel_initSceneFromURL_, v148);

                if (!v149)
                {
                  v190 = sub_239275AB0();
                  v191 = v236;
                  v249[2](v236, v190, v146);
                  v192 = v234;
                  ((void (*)(char *, char *, uint64_t))v28)(v234, v132, a1);
                  v193 = sub_239352098();
                  v194 = sub_23935256C();
                  if (os_log_type_enabled(v193, v194))
                  {
                    v195 = swift_slowAlloc();
                    v196 = swift_slowAlloc();
                    *(_QWORD *)&v254 = v196;
                    *(_DWORD *)v195 = 141558275;
                    v252 = 1752392040;
                    sub_2393526B0();
                    *(_WORD *)(v195 + 12) = 2081;
                    v197 = sub_239351F30();
                    v252 = sub_23925F3EC(v197, v198, (uint64_t *)&v254);
                    v127 = v230;
                    sub_2393526B0();
                    swift_bridgeObjectRelease();
                    ((void (*)(char *, uint64_t))v31)(v192, a1);
                    _os_log_impl(&dword_23925B000, v193, v194, "Failed to load the compiled USDC (%{private,mask.hash}s scene for archival.", (uint8_t *)v195, 0x16u);
                    swift_arrayDestroy();
                    v199 = v245;
                    MEMORY[0x23B83BC04](v196, -1, -1);
                    MEMORY[0x23B83BC04](v195, -1, -1);

                    ((void (*)(char *, unsigned __int8 *))v249[1])(v236, v248);
                    ((void (*)(char *, uint64_t))v31)(v244, a1);
                    ((void (*)(char *, uint64_t))v31)(v246, a1);
                    ((void (*)(char *, uint64_t))v31)(v250, a1);
                    v200 = v229;
                  }
                  else
                  {

                    ((void (*)(char *, uint64_t))v31)(v192, a1);
                    ((void (*)(char *, unsigned __int8 *))v249[1])(v191, v146);
                    ((void (*)(char *, uint64_t))v31)(v132, a1);
                    ((void (*)(char *, uint64_t))v31)(v246, a1);
                    ((void (*)(char *, uint64_t))v31)(v250, a1);
                    v200 = v229;
                    v199 = v245;
                  }
                  *(_BYTE *)(v200 + 16) = 0;
                  sub_2392B9DE4(v199, v200, (uint64_t)v127, v231);
                  goto LABEL_97;
                }
                v150 = (void *)sub_239351ED0();
                objc_msgSend(v149, sel_saveAndCreateUSDZPackageWithURL_, v150);

                v151 = sub_239275AB0();
                v249[2](v145, v151, v146);
                ((void (*)(uint64_t, void *, uint64_t))v28)(a4, v127, a1);
                v152 = sub_239352098();
                v153 = sub_239352578();
                v154 = v153;
                if (os_log_type_enabled(v152, v153))
                {
                  v155 = swift_slowAlloc();
                  v156 = swift_slowAlloc();
                  *(_QWORD *)&v254 = v156;
                  *(_DWORD *)v155 = 141558275;
                  v252 = 1752392040;
                  sub_2393526B0();
                  *(_WORD *)(v155 + 12) = 2081;
                  LODWORD(v251) = v154;
                  v157 = v243;
                  v158 = sub_239351F30();
                  v252 = sub_23925F3EC(v158, v159, (uint64_t *)&v254);
                  sub_2393526B0();
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))v31)(v157, a1);
                  _os_log_impl(&dword_23925B000, v152, (os_log_type_t)v251, "Save USD scene to USDZ = %{private,mask.hash}s", (uint8_t *)v155, 0x16u);
                  swift_arrayDestroy();
                  v160 = v156;
                  v127 = v230;
                  MEMORY[0x23B83BC04](v160, -1, -1);
                  MEMORY[0x23B83BC04](v155, -1, -1);

                  ((void (*)(char *, unsigned __int8 *))v249[1])(v242, v248);
                  v161 = v244;
                }
                else
                {

                  ((void (*)(uint64_t, uint64_t))v31)(a4, a1);
                  ((void (*)(char *, unsigned __int8 *))v249[1])(v145, v146);
                  v161 = v132;
                }
                ((void (*)(char *, uint64_t))v31)(v161, a1);
                ((void (*)(char *, uint64_t))v31)(v246, a1);
                ((void (*)(char *, uint64_t))v31)(v250, a1);
                goto LABEL_85;
              }
              v172 = sub_239275AB0();
              v173 = v239;
              v249[2](v239, v172, v143);
              v174 = v238;
              ((void (*)(char *, char *, uint64_t))v28)(v238, v132, a1);
              v175 = v143;
              v176 = sub_239352098();
              v177 = sub_23935256C();
              if (os_log_type_enabled(v176, v177))
              {
                v178 = swift_slowAlloc();
                v179 = swift_slowAlloc();
                *(_QWORD *)&v254 = v179;
                *(_DWORD *)v178 = 141558275;
                v252 = 1752392040;
                sub_2393526B0();
                *(_WORD *)(v178 + 12) = 2081;
                v180 = sub_239351F30();
                v252 = sub_23925F3EC(v180, v181, (uint64_t *)&v254);
                v127 = v230;
                sub_2393526B0();
                swift_bridgeObjectRelease();
                ((void (*)(char *, uint64_t))v31)(v174, a1);
                _os_log_impl(&dword_23925B000, v176, v177, "Failed to compile USDA to USDC = %{private,mask.hash}s", (uint8_t *)v178, 0x16u);
                swift_arrayDestroy();
                v182 = v179;
                v144 = v245;
                MEMORY[0x23B83BC04](v182, -1, -1);
                MEMORY[0x23B83BC04](v178, -1, -1);

                ((void (*)(char *, unsigned __int8 *))v249[1])(v239, v248);
                v183 = v244;
              }
              else
              {

                ((void (*)(char *, uint64_t))v31)(v174, a1);
                ((void (*)(char *, unsigned __int8 *))v249[1])(v173, v175);
                v183 = v132;
              }
              ((void (*)(char *, uint64_t))v31)(v183, a1);
              ((void (*)(char *, uint64_t))v31)(v246, a1);
              ((void (*)(char *, uint64_t))v31)(v250, a1);
              goto LABEL_96;
            }
            v139 = sub_2393528CC();
            swift_bridgeObjectRelease();
            v31 = *(void (***)(char *, uint64_t, unsigned __int8 *))(v128 + 8);
            ((void (*)(char *, uint64_t))v31)(v129, a1);
            a4 = (uint64_t)v243;
            v132 = v244;
            if ((v139 & 1) != 0)
              goto LABEL_56;
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
LABEL_32:
          v94 = 0xE500000000000000;
          v93 = 0x302E302E30;
          goto LABEL_33;
        }
      }
      else
      {
        v254 = 0u;
        v255 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v254 = 0u;
      v255 = 0u;
    }
    sub_23925FE28((uint64_t)&v254, (uint64_t *)&unk_25692A930);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_2392B9DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v27 = a3;
  v28 = a4;
  v29 = a2;
  v31 = sub_239352170();
  v34 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393521C4();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PhotogrammetrySession.Request(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_239351F3C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(id *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v27, v13);
  sub_239268820(v28, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v15 + *(unsigned __int8 *)(v10 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = swift_allocObject();
  v20 = v29;
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  sub_2392C4FE0((uint64_t)v12, v19 + v18, type metadata accessor for PhotogrammetrySession.Request);
  aBlock[4] = sub_2392C5310;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC57F0;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  swift_retain();
  swift_retain();
  sub_239352188();
  v35 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  v24 = v30;
  v23 = v31;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v8, v24, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  return swift_release();
}

uint64_t sub_2392BA0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;

  v4 = sub_239351F3C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = sub_23925FB08(&qword_256927AD0);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v17 + 63) >> 6;
  v26 = a2;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    sub_2392C1B14((uint64_t)v10, v8);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v25)
        goto LABEL_24;
      v23 = *(_QWORD *)(v16 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v25)
          goto LABEL_24;
        v23 = *(_QWORD *)(v16 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v25)
            goto LABEL_24;
          v23 = *(_QWORD *)(v16 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v25)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
LABEL_25:
    swift_release();
    return v26;
  }
  v23 = *(_QWORD *)(v16 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2392BA380()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  void *v5;
  unsigned int v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t (*v14)(char *, uint64_t);
  id v15;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x24BDAC8D0];
  v19 = sub_239351F3C();
  v0 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351EC4();
  sub_239351EF4();
  swift_bridgeObjectRelease();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_defaultManager);
  v5 = (void *)sub_239351ED0();
  v20[0] = 0;
  v6 = objc_msgSend(v4, sel_removeItemAtURL_error_, v5, v20);

  if (v6)
  {
    v7 = v20[0];
  }
  else
  {
    v8 = v20[0];
    v9 = (void *)sub_239351E58();

    swift_willThrow();
  }
  v10 = objc_msgSend(v3, sel_defaultManager);
  v11 = (void *)sub_239351ED0();
  v12 = (void *)sub_239351ED0();
  v20[0] = 0;
  v13 = objc_msgSend(v10, sel_copyItemAtURL_toURL_error_, v11, v12, v20);

  if ((v13 & 1) != 0)
  {
    v14 = *(uint64_t (**)(char *, uint64_t))(v0 + 8);
    v15 = v20[0];
    return v14(v2, v19);
  }
  else
  {
    v17 = v20[0];
    sub_239351E58();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v19);
  }
}

uint64_t sub_2392BA59C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(char *);

  v25 = a1;
  v5 = sub_239351F3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 56);
  v23 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v24 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * i, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v25(v8);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_release();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
      break;
    if (v17 >= v24)
      goto LABEL_27;
    v21 = *(_QWORD *)(v23 + 8 * v17);
    if (!v21)
    {
      v22 = v17 + 1;
      if (v17 + 1 >= v24)
        goto LABEL_27;
      v21 = *(_QWORD *)(v23 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 2;
      if (v17 + 2 >= v24)
        goto LABEL_27;
      v21 = *(_QWORD *)(v23 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 3;
      if (v17 + 3 >= v24)
        goto LABEL_27;
      v21 = *(_QWORD *)(v23 + 8 * v22);
      if (v21)
      {
LABEL_16:
        v17 = v22;
        goto LABEL_17;
      }
      v22 = v17 + 4;
      if (v17 + 4 < v24)
      {
        v21 = *(_QWORD *)(v23 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v17 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_30;
            if (v17 >= v24)
              goto LABEL_27;
            v21 = *(_QWORD *)(v23 + 8 * v17);
            ++v22;
            if (v21)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_27:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
      return swift_release();
    }
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2392BA860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = v3;
  v7 = sub_239352170();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2393521C4();
  v11 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGAddSampleStreamProcessingOutputRetain();
  v14 = *(void **)(v4 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = v15;
  v16[4] = a2;
  aBlock[4] = sub_2392C39B0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5400;
  v17 = _Block_copy(aBlock);
  v18 = v14;
  swift_retain();
  sub_239352188();
  v23 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v8, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_2392BAAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  int FlipRecommendation;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v19;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
    {
      v10 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
      v11 = sub_239352098();
      v12 = sub_239352578();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_23925B000, v11, v12, "Skip add sample callback. Backend manager is closed.", v13, 2u);
        MEMORY[0x23B83BC04](v13, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      FlipRecommendation = CPGAddSampleStreamProcessingOutputGetFlipRecommendation();
      if ((*(uint64_t (**)(void))(*(_QWORD *)v9 + 416))())
      {
        v16 = v15;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, BOOL, uint64_t, uint64_t))(v16 + 8))(a3, FlipRecommendation == 1, ObjectType, v16);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
  return CPGAddSampleStreamProcessingOutputRelease();
}

uint64_t sub_2392BAC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2392BC874(a1, a2, a3, MEMORY[0x24BE1FD28], (uint64_t)&unk_250AC5438, (uint64_t)sub_2392C39E0, (uint64_t)&unk_250AC5450);
}

uint64_t sub_2392BAC98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  float v38;
  float v39;
  double v40;
  double v41;
  unsigned int ProcessingStep;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  char v49;
  uint64_t v50;
  float v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t ObjectType;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;

  v75 = a1;
  v76 = a2;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23925FB08(&qword_256928DE8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PhotogrammetrySession.Request(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v70 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v70 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v71 = (uint64_t)&v70 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v70 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v74 = (uint64_t)&v70 - v25;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_2392A1828(0xD00000000000002BLL, 0x800000023935CD40);
    goto LABEL_37;
  }
  v27 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    v32 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
    swift_beginAccess();
    v33 = *(_QWORD *)v32;
    v34 = v75;
    if (!*(_QWORD *)(*(_QWORD *)v32 + 16))
      goto LABEL_36;
    v35 = sub_2392C0158(v75);
    if ((v36 & 1) == 0)
      goto LABEL_36;
    sub_239268820(*(_QWORD *)(v33 + 56) + *(_QWORD *)(v11 + 72) * v35, (uint64_t)v24, type metadata accessor for PhotogrammetrySession.Request);
    v37 = v74;
    sub_2392C4FE0((uint64_t)v24, v74, type metadata accessor for PhotogrammetrySession.Request);
    CPGProgressGetFractionCompleted();
    v39 = v38;
    CPGProgressGetEstimatedRemainingTime();
    v41 = v40;
    ProcessingStep = CPGProgressGetProcessingStep();
    if (ProcessingStep >= 7)
      v43 = 6;
    else
      v43 = 0x5040302010006uLL >> (8 * ProcessingStep);
    v44 = v27 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
    swift_beginAccess();
    sub_23926059C(v44, (uint64_t)v9, &qword_256928DE8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      v45 = sub_23925FE28((uint64_t)v9, &qword_256928DE8);
LABEL_23:
      v50 = (uint64_t)v72;
LABEL_31:
      v55 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 440);
      if (v55(v45))
      {
        v57 = v56;
        ObjectType = swift_getObjectType();
        v59 = *(int *)(sub_23925FB08(&qword_256929560) + 48);
        sub_239268820(v74, v50, type metadata accessor for PhotogrammetrySession.Request);
        *(double *)(v50 + v59) = v39;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 8))(v50, ObjectType, v57);
        swift_unknownObjectRelease();
        sub_2392688AC(v50, type metadata accessor for PhotogrammetrySession.Output);
      }
      v77 = v43;
      v60 = sub_2392E64F0(*(uint64_t *)&v41, 0, &v77, (uint64_t)&v78);
      v61 = v78;
      v62 = v79;
      v63 = v80;
      if (v55(v60))
      {
        v65 = v64;
        v66 = swift_getObjectType();
        v67 = v50 + *(int *)(sub_23925FB08(&qword_256929568) + 48);
        v68 = v74;
        sub_239268820(v74, v50, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)v67 = v61;
        *(_BYTE *)(v67 + 8) = v62;
        *(_BYTE *)(v67 + 9) = v63;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 8))(v50, v66, v65);
        swift_release();
        swift_unknownObjectRelease();
        sub_2392688AC(v50, type metadata accessor for PhotogrammetrySession.Output);
        sub_2392688AC(v68, type metadata accessor for PhotogrammetrySession.Request);
        goto LABEL_37;
      }
      sub_2392688AC(v74, type metadata accessor for PhotogrammetrySession.Request);
LABEL_36:
      swift_release();
      goto LABEL_37;
    }
    v46 = v71;
    sub_2392C4FE0((uint64_t)v9, v71, type metadata accessor for PhotogrammetrySession.Request);
    if ((static PhotogrammetrySession.Request.== infix(_:_:)(v46, v37) & 1) == 0)
    {
      v45 = sub_2392688AC(v46, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_23;
    }
    v47 = *(_QWORD *)(v27 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest);
    if (!v47 || v47 != v34)
    {
      v52 = v70;
      sub_2392C4FE0(v46, v70, type metadata accessor for PhotogrammetrySession.Request);
      v53 = sub_23925FB08(&qword_256928730);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 3, v53))
      {
        v45 = sub_2392688AC(v52, type metadata accessor for PhotogrammetrySession.Request);
        v51 = 1.0;
        v43 = 1;
      }
      else
      {
        v54 = sub_239351F3C();
        v45 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v52, v54);
        v51 = 1.0;
        v43 = 5;
      }
      v50 = (uint64_t)v72;
      goto LABEL_30;
    }
    sub_239268820(v37, (uint64_t)v19, type metadata accessor for PhotogrammetrySession.Request);
    v48 = sub_23929A274((uint64_t)v19);
    sub_239268820((uint64_t)v19, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
    if (v48)
    {
      v49 = sub_23929A330((uint64_t)v16);
      sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
      sub_2392688AC((uint64_t)v19, type metadata accessor for PhotogrammetrySession.Request);
      v50 = (uint64_t)v72;
      if ((v49 & 1) == 0)
      {
        v45 = sub_2392688AC(v46, type metadata accessor for PhotogrammetrySession.Request);
        v51 = 1.0;
LABEL_30:
        v39 = *(float *)(v27 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase)
            + (float)(v39 * (float)(v51 - *(float *)(v27 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase)));
        goto LABEL_31;
      }
    }
    else
    {
      sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
      sub_2392688AC((uint64_t)v19, type metadata accessor for PhotogrammetrySession.Request);
      v50 = (uint64_t)v72;
    }
    v45 = sub_2392688AC(v46, type metadata accessor for PhotogrammetrySession.Request);
    v41 = v41 + *(double *)(v27 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime);
    v51 = 0.9;
    goto LABEL_30;
  }
  v28 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v28, v2);
  v29 = sub_239352098();
  v30 = sub_23935256C();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_23925B000, v29, v30, "Skip progress callback. Backend manager is closed.", v31, 2u);
    MEMORY[0x23B83BC04](v31, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_37:
  CPGRequestRelease();
  return CPGProgressRelease();
}

uint64_t sub_2392BB3D8(uint64_t a1)
{
  uint64_t v1;
  uint8x8_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  void (**v36)(_QWORD, uint64_t, _QWORD);
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  uint64_t SfmMap;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  void **v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  void (**v59)(char *, uint64_t *);
  uint64_t *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  char *v64;
  void *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  float64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t Count;
  uint64_t v79;
  uint64_t Positions;
  uint64_t v81;
  uint64_t Colors;
  _DWORD *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _QWORD *v90;
  unint64_t v91;
  __n128 v92;
  float64_t v93;
  int16x8_t v94;
  unint64_t v95;
  unint64_t v96;
  __n128 *v97;
  uint64_t v98;
  float64_t v99;
  uint64_t *v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  __n128 v105;
  char *v106;
  char *v107;
  void **v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  _QWORD *v117;
  char v118;
  unint64_t v119;
  uint64_t v120;
  _BOOL8 v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  char *v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  uint64_t v131;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v133;
  char v134;
  uint64_t v135;
  _BOOL8 v136;
  uint64_t v137;
  char v138;
  unint64_t v139;
  char v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  char v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  float64_t v159;
  uint64_t *v160;
  NSObject *v161;
  os_log_type_t v162;
  uint8_t *v163;
  _QWORD v164[2];
  float64x2_t v165;
  float64x2_t v166;
  float64x2_t v167;
  float64x2_t v168;
  float64x2_t v169;
  float64x2_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  float64x2_t v174;
  float64x2_t v175;
  float64x2_t v176;
  float64x2_t v177;
  float64x2_t v178;
  float64x2_t v179;
  float64x2_t v180;
  uint64_t v181;
  float64x2_t v182;
  uint64_t v183;
  float64x2_t v184;
  char *v185;
  __n128 v186;
  char *v187;
  char *v188;
  float64x2_t v189;
  void **v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t *v194;
  _QWORD *v195;
  float64x2_t v196;
  float64x2_t v197;
  float64x2_t v198;
  float64x2_t v199;
  float64x2_t v200;
  float64x2_t v201;
  float64x2_t v202;
  float64x2_t v203;
  float64x2_t v204[8];
  float64x2_t v205;
  float64x2_t v206;
  float64x2_t v207;
  float64x2_t v208;
  float64x2_t v209;
  float64x2_t v210;
  float64x2_t v211;
  float64x2_t v212;
  _QWORD *v213;
  float64x2_t v214;
  float64x2_t v215;
  float64x2_t v216;
  float64x2_t v217;
  float64x2_t v218;
  float64x2_t v219;
  float64x2_t v220;
  float64x2_t v221;
  uint64_t v222;
  _BYTE v223[144];
  _BYTE v224[144];
  _BYTE v225[144];
  _OWORD v226[9];
  _OWORD v227[4];
  char v228;
  uint64_t v229;

  v3 = v1;
  v191 = a1;
  v229 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2393520B0();
  v193 = *(char **)(v4 - 8);
  v194 = (uint64_t *)v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v192 = (char *)v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v164 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v164 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v164 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v164 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v164 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)v164 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v164 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v164 - v28;
  v30 = sub_23925FB08(&qword_256929528);
  MEMORY[0x24BDAC7A8](v30);
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
  {
    v32 = &qword_256928728;
    sub_239268764(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform, (uint64_t)v225, &qword_256928728);
    sub_239268764((uint64_t)v225, (uint64_t)v226, &qword_256928728);
    if (sub_239269494((uint64_t)v226) == 1)
      goto LABEL_101;
    v33 = v3;
    v34 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) + 16);
    v36 = (void (**)(_QWORD, uint64_t, _QWORD))v193;
    v35 = v194;
    v37 = v192;
    if (v34)
    {
      if ((*(_BYTE *)(v33 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform + 64) & 1) != 0)
        goto LABEL_102;
      v32 = (uint64_t *)(v33 + OBJC_IVAR____TtC6CoreOC9PGManager_poses);
      swift_beginAccess();
      if (*(_QWORD *)(*v32 + 16))
      {
        v38 = sub_239275AB0();
        ((void (**)(char *, uint64_t, uint64_t *))v36)[2](v37, v38, v35);
        v39 = sub_239352098();
        v40 = sub_239352578();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v41 = 0;
          _os_log_impl(&dword_23925B000, v39, v40, "Base coordinate system built.", v41, 2u);
          MEMORY[0x23B83BC04](v41, -1, -1);
        }

        ((void (*)(char *, uint64_t *))v36[1])(v37, v35);
        return 1;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_88:
    swift_bridgeObjectRelease();
    v158 = sub_239275AB0();
    v159 = v182.f64[0];
    v160 = v32;
    (*((void (**)(_QWORD, uint64_t, uint64_t *))v37 + 2))(*(_QWORD *)&v182.f64[0], v158, v32);
    v161 = sub_239352098();
    v162 = sub_23935256C();
    if (os_log_type_enabled(v161, v162))
    {
      v163 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v163 = 0;
      _os_log_impl(&dword_23925B000, v161, v162, "Failed to get bounding box in world coordinate.", v163, 2u);
      MEMORY[0x23B83BC04](v163, -1, -1);
    }

    (*((void (**)(float64_t, uint64_t *))v37 + 1))(COERCE_FLOAT64_T(*(_QWORD *)&v159), v160);
    CPGSfmWorldTracksRelease();

    return 0;
  }
  v190 = (void **)((char *)v164 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v192 = v9;
  v188 = v27;
  *(_QWORD *)&v189.f64[0] = v12;
  v185 = v29;
  v186.n128_u64[0] = (unint64_t)v15;
  v183 = OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap;
  *(_QWORD *)&v184.f64[0] = v18;
  *(_QWORD *)&v182.f64[0] = v21;
  v187 = v24;
  v43 = v3 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_239268764(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform, (uint64_t)v223, &qword_256928728);
  sub_239268764((uint64_t)v223, (uint64_t)v224, &qword_256928728);
  if (sub_239269494((uint64_t)v224) != 1)
    goto LABEL_100;
  v44 = v3;
  v45 = OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud;
  if (*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) + 16))
  {
    __break(1u);
    goto LABEL_92;
  }
  v46 = v3 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform + 64) != 1)
    goto LABEL_100;
  v47 = (void **)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_poses);
  swift_beginAccess();
  if (*((_QWORD *)*v47 + 2))
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
  }
  v181 = v45;
  SfmMap = CPGOutputGetSfmMap();
  if (!SfmMap)
    goto LABEL_21;
  v49 = SfmMap;
  v50 = CPGSfmMapCopyAllSampleIDs();
  if (!v50)
    goto LABEL_21;
  v51 = (void *)v50;
  *(_QWORD *)&v226[0] = 0;
  sub_239352440();

  v52 = *(char **)&v226[0];
  if (!*(_QWORD *)&v226[0])
    goto LABEL_21;
  v53 = *(_QWORD *)(*(_QWORD *)&v226[0] + 16);
  if (!v53)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    v57 = sub_239275AB0();
    v58 = v192;
    v59 = (void (**)(char *, uint64_t *))v193;
    v60 = v194;
    (*((void (**)(char *, uint64_t, uint64_t *))v193 + 2))(v192, v57, v194);
    v61 = sub_239352098();
    v62 = sub_23935256C();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_23925B000, v61, v62, "Failed to get sfmMap or the sampleID array is empty.", v63, 2u);
      MEMORY[0x23B83BC04](v63, -1, -1);
    }

    v59[1](v58, v60);
    return 0;
  }
  v54 = v190;
  sub_239298BFC(*(_BYTE *)(v44 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25), v190);
  v55 = sub_23925FB08(&qword_256928720);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23925FE28((uint64_t)v54, &qword_256929528);
    v37 = v193;
    v56 = v194;
LABEL_27:
    v68 = sub_239275AB0();
    v69 = v189.f64[0];
    (*((void (**)(_QWORD, uint64_t, uint64_t *))v37 + 2))(*(_QWORD *)&v189.f64[0], v68, v56);
    v70 = sub_239352098();
    v71 = sub_23935256C();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_23925B000, v70, v71, "Failed to get mesh in world coordinate.", v72, 2u);
      MEMORY[0x23B83BC04](v72, -1, -1);
    }

LABEL_34:
    (*((void (**)(float64_t, uint64_t *))v37 + 1))(COERCE_FLOAT64_T(*(_QWORD *)&v69), v56);
    return 0;
  }
  v191 = v53;
  v64 = (char *)v54 + *(int *)(v55 + 48);
  v65 = *v54;
  swift_bridgeObjectRelease();
  v66 = sub_239351F3C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v64, v66);
  sub_239299CEC(v49, v65, COERCE_FLOAT64_T(v225));
  sub_239268764((uint64_t)v225, (uint64_t)v226, &qword_256928728);
  v67 = sub_239269494((uint64_t)v226);
  v37 = v193;
  v32 = v194;
  if (v67 == 1)
  {

    swift_bridgeObjectRelease();
    v56 = v32;
    goto LABEL_27;
  }
  v171 = v43;
  v192 = v52;
  v190 = v47;
  v173 = v65;
  v189 = (float64x2_t)v226[1];
  v179 = (float64x2_t)v226[3];
  v180 = (float64x2_t)v226[0];
  v177 = (float64x2_t)v226[5];
  v178 = (float64x2_t)v226[2];
  v175 = (float64x2_t)v226[7];
  v176 = (float64x2_t)v226[4];
  v174 = (float64x2_t)v226[6];
  v222 = 0;
  if (CPGSfmMapCopyTracksInsideBoundingBoxInWorldCoordinate() || (v77 = v222) == 0)
  {
    swift_bridgeObjectRelease();
    v73 = sub_239275AB0();
    v69 = v186.n128_f64[0];
    v56 = v32;
    (*((void (**)(unint64_t, uint64_t, uint64_t *))v37 + 2))(v186.n128_u64[0], v73, v32);
    v74 = sub_239352098();
    v75 = sub_23935256C();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      _os_log_impl(&dword_23925B000, v74, v75, "Failed to copy tracks inside bounding box in world coordinate.", v76, 2u);
      MEMORY[0x23B83BC04](v76, -1, -1);
    }

    goto LABEL_34;
  }
  v172 = v49;
  Count = CPGSfmWorldTracksGetCount();
  if (Count < 1
    || (v79 = Count, (Positions = CPGSfmWorldTracksGetPositions()) == 0)
    || (v81 = Positions, (Colors = CPGSfmWorldTracksGetColors()) == 0))
  {
    swift_bridgeObjectRelease();
    v98 = sub_239275AB0();
    v99 = v184.f64[0];
    v100 = v32;
    (*((void (**)(_QWORD, uint64_t, uint64_t *))v37 + 2))(*(_QWORD *)&v184.f64[0], v98, v32);
    v101 = sub_239352098();
    v102 = sub_23935256C();
    if (os_log_type_enabled(v101, v102))
    {
      v103 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v103 = 0;
      _os_log_impl(&dword_23925B000, v101, v102, "Failed to get positions or colors of world tracks.", v103, 2u);
      MEMORY[0x23B83BC04](v103, -1, -1);
    }

    (*((void (**)(float64_t, uint64_t *))v37 + 1))(COERCE_FLOAT64_T(*(_QWORD *)&v99), v100);
    CPGSfmWorldTracksRelease();

    return 0;
  }
  v83 = (_DWORD *)Colors;
  v186.n128_u64[0] = v79;
  v84 = v46;
  v85 = CPGSfmMapCopyBoundingBox();
  v36 = (void (**)(_QWORD, uint64_t, _QWORD))v173;
  if (!v85)
    goto LABEL_88;
  v164[0] = v85;
  v164[1] = v77;
  CPGBoundingBoxGetTransform();
  v165 = v214;
  v166 = v215;
  v167 = v216;
  v168 = v217;
  v169 = v218;
  v170 = v219;
  v184 = v221;
  v182 = v220;
  v214 = v180;
  v215 = v189;
  v216 = v178;
  v217 = v179;
  v218 = v176;
  v219 = v177;
  v220 = v174;
  v221 = v175;
  sub_2392688E8((uint64_t)&v214);
  sub_239268764((uint64_t)&v214, v171, &qword_256928728);
  v204[0] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v165.f64[0]), v178, v165, 1), v176, v166.f64[0]), v174, v166, 1);
  v204[1] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v165.f64[0]), v179, v165, 1), v177, v166.f64[0]), v175, v166, 1);
  v204[2] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v167.f64[0]), v178, v167, 1), v176, v168.f64[0]), v174, v168, 1);
  v204[3] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v167.f64[0]), v179, v167, 1), v177, v168.f64[0]), v175, v168, 1);
  v204[4] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v169.f64[0]), v178, v169, 1), v176, v170.f64[0]), v174, v170, 1);
  v204[5] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v169.f64[0]), v179, v169, 1), v177, v170.f64[0]), v175, v170, 1);
  v204[6] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v182.f64[0]), v178, v182, 1), v176, v184.f64[0]), v174, v184, 1);
  v204[7] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v182.f64[0]), v179, v182, 1), v177, v184.f64[0]), v175, v184, 1);
  *(double *)&v86 = sub_2392DEE58(v204);
  *(_OWORD *)v84 = v86;
  *(_OWORD *)(v84 + 16) = v87;
  *(_OWORD *)(v84 + 32) = v88;
  *(_OWORD *)(v84 + 48) = v89;
  *(_BYTE *)(v84 + 64) = 0;
  v90 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v91 = v186.n128_u64[0];
  do
  {
    v92 = *(__n128 *)(v81 + 16);
    v93 = vaddq_f64(v175, vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, *(double *)v81), v179, *(float64x2_t *)v81, 1), v177, v92.n128_f64[0])).f64[0];
    v92.n128_u64[0] = (unint64_t)vcvt_f32_f64(vaddq_f64(v174, vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, *(double *)v81), v178, *(float64x2_t *)v81, 1), v176, v92.n128_f64[0])));
    *(float *)&v93 = v93;
    v92.n128_u64[1] = LODWORD(v93);
    LODWORD(v93) = *v83;
    v94 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v93);
    v94.i16[3] = 255;
    sub_2392E6364(vmovn_s16(v94).u32[0], (__n128 *)&v196, v92);
    v186 = (__n128)v196;
    v2.i32[0] = LODWORD(v197.f64[0]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v90 = sub_2392BFDB8(0, v90[2] + 1, 1, v90);
    v96 = v90[2];
    v95 = v90[3];
    if (v96 >= v95 >> 1)
      v90 = sub_2392BFDB8((_QWORD *)(v95 > 1), v96 + 1, 1, v90);
    v90[2] = v96 + 1;
    v97 = (__n128 *)&v90[4 * v96];
    v97[2] = v186;
    v97[3].n128_u32[0] = vmovn_s16((int16x8_t)vmovl_u8(v2)).u32[0];
    ++v83;
    v81 += 32;
    --v91;
  }
  while (v91);
  *(_QWORD *)(v44 + v181) = v90;
  swift_bridgeObjectRelease();
  v104 = 0;
  v105.n128_u64[0] = 134349056;
  v186 = v105;
  v107 = v187;
  v106 = v188;
  v108 = v190;
  while (1)
  {
    v110 = *(_QWORD *)&v192[8 * v104 + 32];
    if ((CPGSfmMapIsSampleRegistered() & 1) != 0)
      break;
    v126 = sub_239275AB0();
    v127 = v185;
    (*((void (**)(char *, uint64_t, uint64_t *))v193 + 2))(v185, v126, v194);
    v128 = sub_239352098();
    v129 = sub_23935256C();
    if (os_log_type_enabled(v128, v129))
    {
      v130 = swift_slowAlloc();
      *(_DWORD *)v130 = v186.n128_u32[0];
      *(_QWORD *)(v130 + 4) = v110;
      _os_log_impl(&dword_23925B000, v128, v129, "Sample %{public}llu is not registered.", (uint8_t *)v130, 0xCu);
      v131 = v130;
      v108 = v190;
      MEMORY[0x23B83BC04](v131, -1, -1);
    }

    (*((void (**)(char *, uint64_t *))v193 + 1))(v127, v194);
    if (v110 < 0)
      goto LABEL_93;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v213 = *v108;
    v133 = v213;
    *v108 = (void *)0x8000000000000000;
    v119 = sub_2392C01BC(v110);
    v135 = v133[2];
    v136 = (v134 & 1) == 0;
    v137 = v135 + v136;
    if (__OFADD__(v135, v136))
      goto LABEL_94;
    v138 = v134;
    if (v133[3] >= v137)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2392C17C8();
    }
    else
    {
      sub_2392C0930(v137, isUniquelyReferenced_nonNull_native);
      v139 = sub_2392C01BC(v110);
      if ((v138 & 1) != (v140 & 1))
        goto LABEL_103;
      v119 = v139;
    }
    v107 = v187;
    v141 = v213;
    if ((v138 & 1) == 0)
    {
      v213[(v119 >> 6) + 8] |= 1 << v119;
      *(_QWORD *)(v141[6] + 8 * v119) = v110;
      v142 = v141[7] + 80 * v119;
      *(_OWORD *)(v142 + 32) = 0u;
      *(_OWORD *)(v142 + 48) = 0u;
      *(_OWORD *)v142 = 0u;
      *(_OWORD *)(v142 + 16) = 0u;
      *(_BYTE *)(v142 + 64) = 1;
      v143 = v141[2];
      v144 = __OFADD__(v143, 1);
      v145 = v143 + 1;
      if (v144)
        goto LABEL_97;
LABEL_79:
      v141[2] = v145;
      goto LABEL_51;
    }
LABEL_50:
    v109 = v141[7] + 80 * v119;
    *(_OWORD *)(v109 + 32) = 0u;
    *(_OWORD *)(v109 + 48) = 0u;
    *(_OWORD *)v109 = 0u;
    *(_OWORD *)(v109 + 16) = 0u;
    *(_BYTE *)(v109 + 64) = 1;
LABEL_51:
    v106 = v188;
    v108 = v190;
    *v190 = v141;
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_52:
    if (v191 == ++v104)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)(v44 + v183) = v172;
      CPGSfmMapRetain();
      CPGBoundingBoxRelease();
      CPGSfmWorldTracksRelease();

      return 1;
    }
  }
  v213 = 0;
  if (CPGSfmMapGetCameraBySampleID() || !v213)
  {
    v111 = sub_239275AB0();
    (*((void (**)(char *, uint64_t, uint64_t *))v193 + 2))(v107, v111, v194);
    v112 = sub_239352098();
    v113 = sub_23935256C();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = swift_slowAlloc();
      *(_DWORD *)v114 = v186.n128_u32[0];
      *(_QWORD *)(v114 + 4) = v110;
      _os_log_impl(&dword_23925B000, v112, v113, "Failed to get the camera of sample %{public}llu", (uint8_t *)v114, 0xCu);
      v115 = v114;
      v108 = v190;
      MEMORY[0x23B83BC04](v115, -1, -1);
    }

    (*((void (**)(char *, uint64_t *))v193 + 1))(v107, v194);
    if (v110 < 0)
      goto LABEL_95;
    swift_beginAccess();
    v116 = swift_isUniquelyReferenced_nonNull_native();
    v195 = *v108;
    v117 = v195;
    *v108 = (void *)0x8000000000000000;
    v119 = sub_2392C01BC(v110);
    v120 = v117[2];
    v121 = (v118 & 1) == 0;
    v122 = v120 + v121;
    if (__OFADD__(v120, v121))
      goto LABEL_96;
    v123 = v118;
    if (v117[3] >= v122)
    {
      if ((v116 & 1) == 0)
        sub_2392C17C8();
    }
    else
    {
      sub_2392C0930(v122, v116);
      v124 = sub_2392C01BC(v110);
      if ((v123 & 1) != (v125 & 1))
        goto LABEL_103;
      v119 = v124;
    }
    v107 = v187;
    v141 = v195;
    if ((v123 & 1) == 0)
    {
      v195[(v119 >> 6) + 8] |= 1 << v119;
      *(_QWORD *)(v141[6] + 8 * v119) = v110;
      v146 = v141[7] + 80 * v119;
      *(_OWORD *)(v146 + 32) = 0u;
      *(_OWORD *)(v146 + 48) = 0u;
      *(_OWORD *)v146 = 0u;
      *(_OWORD *)(v146 + 16) = 0u;
      *(_BYTE *)(v146 + 64) = 1;
      v147 = v141[2];
      v144 = __OFADD__(v147, 1);
      v145 = v147 + 1;
      if (v144)
        goto LABEL_98;
      goto LABEL_79;
    }
    goto LABEL_50;
  }
  if ((v110 & 0x8000000000000000) == 0)
  {
    CPGCameraGetTransform();
    v196 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v205.f64[0]), v178, v205, 1), v176, v206.f64[0]), v174, v206, 1);
    v197 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v205.f64[0]), v179, v205, 1), v177, v206.f64[0]), v175, v206, 1);
    v198 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v207.f64[0]), v178, v207, 1), v176, v208.f64[0]), v174, v208, 1);
    v199 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v207.f64[0]), v179, v207, 1), v177, v208.f64[0]), v175, v208, 1);
    v200 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v209.f64[0]), v178, v209, 1), v176, v210.f64[0]), v174, v210, 1);
    v201 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v209.f64[0]), v179, v209, 1), v177, v210.f64[0]), v175, v210, 1);
    v202 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v180, v211.f64[0]), v178, v211, 1), v176, v212.f64[0]), v174, v212, 1);
    v203 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v189, v211.f64[0]), v179, v211, 1), v177, v212.f64[0]), v175, v212, 1);
    *(double *)&v148 = sub_2392DEE58(&v196);
    v227[0] = v148;
    v227[1] = v149;
    v227[2] = v150;
    v227[3] = v151;
    v228 = 0;
    swift_beginAccess();
    v152 = swift_isUniquelyReferenced_nonNull_native();
    v195 = *v108;
    *v108 = (void *)0x8000000000000000;
    sub_2392C11F0((uint64_t)v227, v110, v152);
    *v108 = v195;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v153 = sub_239275AB0();
    (*((void (**)(char *, uint64_t, uint64_t *))v193 + 2))(v106, v153, v194);
    v154 = sub_239352098();
    v155 = sub_239352578();
    if (os_log_type_enabled(v154, v155))
    {
      v156 = swift_slowAlloc();
      *(_DWORD *)v156 = v186.n128_u32[0];
      *(_QWORD *)(v156 + 4) = v110;
      _os_log_impl(&dword_23925B000, v154, v155, "Get the camera pose of sample %{public}llu", (uint8_t *)v156, 0xCu);
      v157 = v156;
      v108 = v190;
      MEMORY[0x23B83BC04](v157, -1, -1);
    }

    v106 = v188;
    (*((void (**)(char *, uint64_t *))v193 + 1))(v188, v194);
    goto LABEL_52;
  }
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392BC62C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v27 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v27);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_2392C47F8(a1);
  v8 = v6;
  v9 = *(_QWORD *)(v6 + 16);
  if (v9)
  {
    v26 = a1;
    v10 = 0;
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 440);
    do
    {
      v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
      v6 = v11(v6, v7);
      if (v6)
      {
        v13 = v7;
        ObjectType = swift_getObjectType();
        *v5 = v12;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 8))(v5, ObjectType, v13);
        swift_unknownObjectRelease();
        v6 = sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
      }
      ++v10;
    }
    while (v9 != v10);
  }
  swift_bridgeObjectRelease();
  v15 = sub_2392C4E70();
  v16 = sub_23929A514(v15);
  if ((v16 & 1) != 0 && (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 440))(v16, v17))
  {
    v19 = v18;
    v20 = swift_getObjectType();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 8))(v5, v20, v19);
    swift_unknownObjectRelease();
    sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  }
  v21 = sub_23929B398(v15);
  result = swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 440))(result);
    if (result)
    {
      v24 = v23;
      v25 = swift_getObjectType();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v24 + 8))(v5, v25, v24);
      swift_unknownObjectRelease();
      return sub_2392688AC((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
  }
  return result;
}

uint64_t sub_2392BC850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2392BC874(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BE1FC90], (uint64_t)&unk_250AC5488, (uint64_t)sub_2392C39EC, (uint64_t)&unk_250AC54A0);
}

uint64_t sub_2392BC874(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v25 = a7;
  v12 = sub_239352170();
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2393521C4();
  v26 = *(_QWORD *)(v15 - 8);
  v27 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGRequestRetain();
  a4(a3);
  v18 = *(void **)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = v19;
  aBlock[4] = a6;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = v25;
  v21 = _Block_copy(aBlock);
  v22 = v18;
  swift_retain();
  sub_239352188();
  v29 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v17, v14, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
  swift_release();
  return swift_release();
}

uint64_t sub_2392BCAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t Strong;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  int Code;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ObjectType;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  char *v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _BYTE v154[144];
  _OWORD v155[9];
  uint64_t v156;
  uint64_t v157;

  v157 = *MEMORY[0x24BDAC8D0];
  v4 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v4);
  v136 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351F3C();
  v132 = *(_QWORD *)(v6 - 8);
  v133 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v137 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v138);
  v139 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23925FB08(&qword_256928DE8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v134 = (uint64_t)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v140 = (char *)&v128 - v12;
  v13 = sub_2393520B0();
  v14 = *(_QWORD *)(v13 - 8);
  v144 = v13;
  v145 = v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v128 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v130 = (char *)&v128 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v128 - v23;
  v25 = type metadata accessor for PhotogrammetrySession.Request(0);
  v26 = *(_QWORD *)(v25 - 8);
  v141 = v25;
  v142 = v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v135 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v131 = (uint64_t)&v128 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v128 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v128 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v128 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v143 = (uint64_t)&v128 - v40;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_2392A1828(0xD000000000000027, 0x800000023935CB30);
LABEL_22:
    CPGRequestRelease();
    return CPGOutputRelease();
  }
  v42 = a1;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v43 = sub_239275AB0();
    v44 = v144;
    v45 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v17, v43, v144);
    v46 = sub_239352098();
    v47 = sub_23935256C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_23925B000, v46, v47, "Skip output callback. Backend manager is closed.", v48, 2u);
      MEMORY[0x23B83BC04](v48, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v44);
    goto LABEL_22;
  }
  v129 = Strong;
  v49 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  swift_beginAccess();
  v50 = *(_QWORD *)v49;
  if (!*(_QWORD *)(*(_QWORD *)v49 + 16) || (v51 = sub_2392C0158(v42), (v52 & 1) == 0))
  {
    v71 = sub_239275AB0();
    v72 = v144;
    v73 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v24, v71, v144);
    v74 = sub_239352098();
    v75 = sub_23935256C();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      _os_log_impl(&dword_23925B000, v74, v75, "Resumed request handling is not implemented.", v76, 2u);
      MEMORY[0x23B83BC04](v76, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v24, v72);
    goto LABEL_22;
  }
  sub_239268820(*(_QWORD *)(v50 + 56) + *(_QWORD *)(v142 + 72) * v51, (uint64_t)v39, type metadata accessor for PhotogrammetrySession.Request);
  sub_2392C4FE0((uint64_t)v39, v143, type metadata accessor for PhotogrammetrySession.Request);
  v53 = a2;
  if (CPGOutputGetFailure())
  {
    Code = CPGProcessingFailureGetCode();
    v55 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v20, v55, v144);
    v56 = sub_239352098();
    v57 = sub_23935256C();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v58 = 67240192;
      LODWORD(v155[0]) = Code;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v56, v57, "Output error with code = %{public}d", v58, 8u);
      MEMORY[0x23B83BC04](v58, -1, -1);
    }

    v59 = (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v20, v144);
    if (!*(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
    {
      sub_2392B748C();
      v70 = (uint64_t)v140;
      goto LABEL_28;
    }
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v129 + 440))(v59))
    {
      v61 = v60;
      v62 = Code;
      ObjectType = swift_getObjectType();
      v64 = sub_23925FB08(&qword_256929550);
      v65 = v139;
      v66 = v139 + *(int *)(v64 + 48);
      sub_239268820(v143, v139, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v66 = v62;
      *(_BYTE *)(v66 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 8))(v65, ObjectType, v61);
      swift_unknownObjectRelease();
      sub_2392688AC(v65, type metadata accessor for PhotogrammetrySession.Output);
    }
    v67 = *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    v68 = __OFSUB__(v67, 1);
    v69 = v67 - 1;
    if (!v68)
    {
      *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v69;
      sub_2392AF268();
      v70 = (uint64_t)v140;
LABEL_28:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v70, 1, 1, v141);
      swift_beginAccess();
      sub_2392A5540(v70, v42);
      swift_endAccess();
      swift_release();
      sub_2392688AC(v143, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_71;
  }
  v78 = OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest;
  v79 = v129;
  v80 = *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest);
  v81 = v42;
  if (v80 && v80 == v42)
  {
    sub_239268820(v143, (uint64_t)v36, type metadata accessor for PhotogrammetrySession.Request);
    v82 = sub_23929A274((uint64_t)v36);
    sub_239268820((uint64_t)v36, (uint64_t)v33, type metadata accessor for PhotogrammetrySession.Request);
    if (v82)
      v83 = sub_23929A330((uint64_t)v33);
    else
      v83 = 1;
    sub_2392688AC((uint64_t)v33, type metadata accessor for PhotogrammetrySession.Request);
    sub_2392688AC((uint64_t)v36, type metadata accessor for PhotogrammetrySession.Request);
    v84 = v129;
    v79 = v129;
    if ((sub_2392BB3D8(v53) & 1) == 0)
    {
      sub_2392B748C();
      *(_DWORD *)(v84 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
      v115 = v140;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v140, 1, 1, v141);
      swift_beginAccess();
      v87 = (uint64_t)v115;
LABEL_67:
      v88 = v81;
      goto LABEL_68;
    }
    sub_2392B6DAC();
    if ((v83 & 1) != 0)
      *(_DWORD *)(v79 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 1063675494;
    v85 = OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted;
    if ((*(_BYTE *)(v79 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) & 1) == 0)
    {
      sub_2392BC62C(v53);
      v79 = v129;
      *(_BYTE *)(v129 + v85) = 1;
    }
    *(_QWORD *)(v79 + v78) = 0;
    if ((v83 & 1) != 0)
    {
      v86 = v140;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v140, 1, 1, v141);
      swift_beginAccess();
      v87 = (uint64_t)v86;
      v88 = v42;
LABEL_68:
      sub_2392A5540(v87, v88);
      goto LABEL_69;
    }
  }
  v89 = v79 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  v90 = v134;
  sub_23926059C(v89, v134, &qword_256928DE8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v90, 1, v141) == 1)
  {
    sub_23925FE28(v90, &qword_256928DE8);
    v91 = (uint64_t)v140;
    v92 = v145;
    v93 = (uint64_t)v137;
    v94 = (uint64_t)v135;
  }
  else
  {
    v95 = v90;
    v96 = v131;
    sub_2392C4FE0(v95, v131, type metadata accessor for PhotogrammetrySession.Request);
    v97 = static PhotogrammetrySession.Request.== infix(_:_:)(v96, v143);
    sub_2392688AC(v96, type metadata accessor for PhotogrammetrySession.Request);
    v91 = (uint64_t)v140;
    v92 = v145;
    v93 = (uint64_t)v137;
    v94 = (uint64_t)v135;
    if ((v97 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56))(v140, 1, 1, v141);
      swift_beginAccess();
      sub_239267C70(v91, v89, &qword_256928DE8);
      swift_endAccess();
      *(_DWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
    }
  }
  v156 = 0;
  if ((sub_23929A330(v143) & 1) != 0)
  {
    v156 = v53;
    v98 = v53;
    v99 = (uint64_t)v136;
    goto LABEL_53;
  }
  sub_239268764(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform, (uint64_t)v154, &qword_256928728);
  sub_239268764((uint64_t)v154, (uint64_t)v155, &qword_256928728);
  result = sub_239269494((uint64_t)v155);
  if ((_DWORD)result != 1)
  {
    v146 = v155[0];
    v147 = v155[1];
    v148 = v155[2];
    v149 = v155[3];
    v150 = v155[4];
    v151 = v155[5];
    v152 = v155[6];
    v153 = v155[7];
    v100 = CPGOutputCreateWithTransform();
    v99 = (uint64_t)v136;
    if (v100)
    {
      v145 = v49;
      v101 = sub_239275AB0();
      v102 = v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v130, v101, v144);
      v103 = sub_239352098();
      v104 = sub_23935256C();
      if (os_log_type_enabled(v103, v104))
      {
        v105 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v105 = 0;
        _os_log_impl(&dword_23925B000, v103, v104, "Backend Manager: Failed to transform backend output to base coordinate frame", v105, 2u);
        MEMORY[0x23B83BC04](v105, -1, -1);
      }

      v106 = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v102, v144);
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v129 + 440))(v106))
      {
        v108 = v107;
        v109 = swift_getObjectType();
        v110 = sub_23925FB08(&qword_256929550);
        v111 = v139;
        v112 = v139 + *(int *)(v110 + 48);
        sub_239268820(v143, v139, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)v112 = 3;
        *(_BYTE *)(v112 + 8) = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 8))(v111, v109, v108);
        swift_unknownObjectRelease();
        sub_2392688AC(v111, type metadata accessor for PhotogrammetrySession.Output);
      }
      v113 = *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      v68 = __OFSUB__(v113, 1);
      v114 = v113 - 1;
      if (v68)
LABEL_73:
        __break(1u);
      *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v114;
      sub_2392AF268();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v91, 1, 1, v141);
      swift_beginAccess();
      sub_2392A5540(v91, v81);
LABEL_69:
      swift_endAccess();
      swift_release();
      sub_2392688AC(v143, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_22;
    }
    v98 = v156;
LABEL_53:
    v117 = v132;
    v116 = v133;
    if (!v98)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    sub_239268820(v143, v94, type metadata accessor for PhotogrammetrySession.Request);
    v118 = sub_23925FB08(&qword_256928730);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48))(v94, 3, v118))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v99, 1, 1, v116);
      sub_2392688AC(v94, type metadata accessor for PhotogrammetrySession.Request);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 32))(v99, v94, v116);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v117 + 56))(v99, 0, 1, v116);
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v99, 1, v116) == 1)
    {
      v119 = sub_23925FE28(v99, &qword_256927AD0);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 32))(v93, v99, v116);
      if (v156)
      {
        sub_2392C40B0(v156, v143, v93);
        (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v93, v116);
LABEL_66:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v91, 1, 1, v141);
        swift_beginAccess();
        v87 = v91;
        goto LABEL_67;
      }
      v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v117 + 8))(v93, v116);
    }
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v129 + 440))(v119))
    {
      v121 = v120;
      v122 = swift_getObjectType();
      v123 = sub_23925FB08(&qword_256929550);
      v124 = v139;
      v125 = v139 + *(int *)(v123 + 48);
      sub_239268820(v143, v139, type metadata accessor for PhotogrammetrySession.Request);
      *(_QWORD *)v125 = 3;
      *(_BYTE *)(v125 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 8))(v124, v122, v121);
      swift_unknownObjectRelease();
      sub_2392688AC(v124, type metadata accessor for PhotogrammetrySession.Output);
    }
    v126 = *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    v68 = __OFSUB__(v126, 1);
    v127 = v126 - 1;
    if (v68)
      goto LABEL_72;
    *(_QWORD *)(v129 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v127;
    sub_2392AF268();
    goto LABEL_66;
  }
  __break(1u);
  return result;
}

uint64_t sub_2392BD948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_239352170();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2393521C4();
  v6 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  v10 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_2392C39F8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC54C8;
  v11 = _Block_copy(aBlock);
  v12 = v9;
  swift_retain();
  sub_239352188();
  v17 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v3, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v8, v5, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  swift_release();
  return swift_release();
}

uint64_t sub_2392BDB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_2392A1828(0xD000000000000037, 0x800000023935CAF0);
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v5 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    v6 = sub_239352098();
    v7 = sub_23935256C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_23925B000, v6, v7, "Skip cancellation status callback. Backend manager is closed.", v8, 2u);
      MEMORY[0x23B83BC04](v8, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    *(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 1;
    sub_2392B748C();
    return swift_release();
  }
}

uint64_t sub_2392BDCF8(uint64_t a1, uint64_t a2)
{
  return sub_2392BE568(a1, a2, MEMORY[0x24BE1FFE8], (uint64_t)&unk_250AC5500, (uint64_t)sub_2392C3A00, (uint64_t)&unk_250AC5518);
}

uint64_t sub_2392BDD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  float64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  uint8_t *v20;
  uint8_t *v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  unint64_t v29;
  _OWORD *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  float64_t v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  _OWORD *v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  float64_t v65;
  char v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  float64_t v75;
  _OWORD *v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  double v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  float64x2_t v105;
  float64x2_t v106;
  float64x2_t v107;
  float64x2_t v108;
  float64x2_t v109;
  float64x2_t v110;
  float64x2_t v111;
  float64x2_t v112;
  int v113;
  float64x2_t v114[8];
  uint64_t v115;
  uint64_t v116;
  float64x2_t v117[8];
  uint64_t v118;

  v118 = *MEMORY[0x24BDAC8D0];
  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v95 - v5;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_2392A1828(0xD000000000000029, 0x800000023935CAC0);
    return CPGUpdatedPosesRelease();
  }
  v8 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v9 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v9, v0);
    v10 = sub_239352098();
    v11 = sub_23935256C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23925B000, v10, v11, "Skip pose update callback. Backend manager is closed.", v12, 2u);
      MEMORY[0x23B83BC04](v12, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return CPGUpdatedPosesRelease();
  }
  v13 = CPGUpdatedPosesCopySampleIDs();
  if (!v13
    || (v14 = (void *)v13,
        v117[0].f64[0] = 0.0,
        sub_239352440(),
        v14,
        v15 = v117[0].f64[0],
        !*(_QWORD *)&v117[0].f64[0]))
  {
    if ((*(uint64_t (**)(void))(*(_QWORD *)v8 + 464))())
    {
      v27 = v26;
      ObjectType = swift_getObjectType();
      v29 = sub_2392C2C48(MEMORY[0x24BEE4AF8]);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 16))(v29, ObjectType, v27);
LABEL_63:
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      return CPGUpdatedPosesRelease();
    }
    swift_release();
    return CPGUpdatedPosesRelease();
  }
  v16 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v6, v16, v0);
  v17 = sub_239352098();
  v18 = sub_239352560();
  v19 = os_log_type_enabled(v17, v18);
  v101 = v15;
  if (v19)
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_23925B000, v17, v18, "Received pose updates from mobileSfM.", v20, 2u);
    v21 = v20;
    v15 = v101;
    MEMORY[0x23B83BC04](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v104 = sub_2392C2C48(MEMORY[0x24BEE4AF8]);
  v23 = sub_2392C2C48((uint64_t)v22);
  v113 = 0;
  v24 = *(_QWORD *)(*(_QWORD *)&v15 + 16);
  v103 = v23;
  if (!v24)
  {
LABEL_55:
    v81 = swift_bridgeObjectRelease();
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 464))(v81))
    {
      v83 = v82;
      v84 = swift_getObjectType();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v83 + 16))(v104, v84, v83);
      swift_bridgeObjectRelease();
      v85 = swift_unknownObjectRelease();
    }
    else
    {
      v85 = swift_bridgeObjectRelease();
    }
    v86 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 488);
    if (v86(v85))
    {
      v88 = v87;
      v89 = swift_getObjectType();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v88 + 8))(v103, v89, v88);
      swift_bridgeObjectRelease();
      v90 = swift_unknownObjectRelease();
    }
    else
    {
      v90 = swift_bridgeObjectRelease();
    }
    if (!v86(v90))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return CPGUpdatedPosesRelease();
    }
    v92 = v91;
    v93 = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v92 + 16))(v22, v93, v92);
    goto LABEL_63;
  }
  v25 = (uint64_t *)(*(_QWORD *)&v15 + 32);
  while (1)
  {
    v34 = *v25++;
    v33 = v34;
    if (CPGUpdatedPosesGetStateBySampleID())
      goto LABEL_19;
    if ((v113 - 1) < 2)
      break;
    if (v113 == 3)
    {
      if (v33 < 0)
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_2392BFEC4(0, v22[2] + 1, 1, v22, &qword_25692B740);
      v50 = v22[2];
      v49 = v22[3];
      if (v50 >= v49 >> 1)
        v22 = sub_2392BFEC4((_QWORD *)(v49 > 1), v50 + 1, 1, v22, &qword_25692B740);
      v22[2] = v50 + 1;
      v22[v50 + 4] = v33;
    }
LABEL_19:
    if (!--v24)
      goto LABEL_55;
  }
  v116 = 0;
  if (!CPGUpdatedPosesCopyObjectTransformBySampleID() && v116)
  {
    v102 = v22;
    if (v33 < 0)
      goto LABEL_67;
    v96 = v116;
    CPGObjectTransformGetTransformMatrix();
    v117[0] = v105;
    v117[1] = v106;
    v117[2] = v107;
    v117[3] = v108;
    v117[4] = v109;
    v117[5] = v110;
    v117[6] = v111;
    v117[7] = v112;
    *(double *)&v35 = sub_2392DEE58(v117);
    v97 = v35;
    v98 = v36;
    v99 = v37;
    v100 = v38;
    v39 = v104;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v105.f64[0] = v39;
    v42 = sub_2392C01BC(v33);
    v43 = *(_QWORD *)(v39 + 16);
    v44 = (v41 & 1) == 0;
    v45 = v43 + v44;
    if (__OFADD__(v43, v44))
      goto LABEL_69;
    v46 = v41;
    if (*(_QWORD *)(v39 + 24) >= v45)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2392C1974();
    }
    else
    {
      sub_2392C0C2C(v45, isUniquelyReferenced_nonNull_native);
      v47 = sub_2392C01BC(v33);
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_73;
      v42 = v47;
    }
    v51 = v105.f64[0];
    v104 = *(_QWORD *)&v105.f64[0];
    if ((v46 & 1) != 0)
    {
      v52 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&v105.f64[0] + 56) + (v42 << 6));
      v53 = v98;
      *v52 = v97;
      v52[1] = v53;
      v54 = v100;
      v52[2] = v99;
      v52[3] = v54;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)&v105.f64[0] + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v51 + 48) + 8 * v42) = v33;
      v55 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&v51 + 56) + (v42 << 6));
      v56 = v98;
      *v55 = v97;
      v55[1] = v56;
      v57 = v100;
      v55[2] = v99;
      v55[3] = v57;
      v58 = *(_QWORD *)(*(_QWORD *)&v51 + 16);
      v59 = __OFADD__(v58, 1);
      v60 = v58 + 1;
      if (v59)
        goto LABEL_71;
      *(_QWORD *)(*(_QWORD *)&v51 + 16) = v60;
    }
    v22 = v102;
    swift_bridgeObjectRelease();
    CPGObjectTransformRelease();
  }
  v115 = 0;
  if (CPGUpdatedPosesCopyCameraBySampleID() || !v115)
    goto LABEL_19;
  v102 = v22;
  if (v33 < 0)
    goto LABEL_68;
  v96 = v115;
  CPGCameraGetTransform();
  v114[0] = v105;
  v114[1] = v106;
  v114[2] = v107;
  v114[3] = v108;
  v114[4] = v109;
  v114[5] = v110;
  v114[6] = v111;
  v114[7] = v112;
  *(double *)&v61 = sub_2392DEE58(v114);
  v97 = v61;
  v98 = v62;
  v99 = v63;
  v100 = v64;
  v65 = *(double *)&v103;
  v66 = swift_isUniquelyReferenced_nonNull_native();
  v105.f64[0] = v65;
  v68 = sub_2392C01BC(v33);
  v69 = *(_QWORD *)(*(_QWORD *)&v65 + 16);
  v70 = (v67 & 1) == 0;
  v71 = v69 + v70;
  if (__OFADD__(v69, v70))
    goto LABEL_70;
  v72 = v67;
  if (*(_QWORD *)(*(_QWORD *)&v65 + 24) >= v71)
  {
    if ((v66 & 1) == 0)
      sub_2392C1974();
    goto LABEL_52;
  }
  sub_2392C0C2C(v71, v66);
  v73 = sub_2392C01BC(v33);
  if ((v72 & 1) == (v74 & 1))
  {
    v68 = v73;
LABEL_52:
    v75 = v105.f64[0];
    v103 = *(_QWORD *)&v105.f64[0];
    if ((v72 & 1) != 0)
    {
      v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&v105.f64[0] + 56) + (v68 << 6));
      v31 = v98;
      *v30 = v97;
      v30[1] = v31;
      v32 = v100;
      v30[2] = v99;
      v30[3] = v32;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)&v105.f64[0] + 8 * (v68 >> 6) + 64) |= 1 << v68;
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v75 + 48) + 8 * v68) = v33;
      v76 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&v75 + 56) + (v68 << 6));
      v77 = v98;
      *v76 = v97;
      v76[1] = v77;
      v78 = v100;
      v76[2] = v99;
      v76[3] = v78;
      v79 = *(_QWORD *)(*(_QWORD *)&v75 + 16);
      v59 = __OFADD__(v79, 1);
      v80 = v79 + 1;
      if (v59)
        goto LABEL_72;
      *(_QWORD *)(*(_QWORD *)&v75 + 16) = v80;
    }
    v22 = v102;
    swift_bridgeObjectRelease();
    CPGCameraRelease();
    goto LABEL_19;
  }
LABEL_73:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392BE544(uint64_t a1, uint64_t a2)
{
  return sub_2392BE568(a1, a2, MEMORY[0x24BE1FF80], (uint64_t)&unk_250AC5550, (uint64_t)sub_2392C3A2C, (uint64_t)&unk_250AC5568);
}

uint64_t sub_2392BE568(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v22 = a6;
  v10 = sub_239352170();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2393521C4();
  v13 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a2);
  v16 = *(void **)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = v17;
  aBlock[4] = a5;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = v22;
  v19 = _Block_copy(aBlock);
  v20 = v16;
  swift_retain();
  sub_239352188();
  v25 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_2392BE798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t Count;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  void (*v35)(char *, uint64_t);
  uint64_t Positions;
  double *v37;
  uint64_t Normals;
  float64x2_t *v39;
  uint64_t Colors;
  int *v41;
  float (*v42)(void);
  _QWORD *v43;
  double v44;
  float v45;
  double v46;
  float v47;
  double v48;
  float v49;
  double v50;
  int v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  float v55;
  float v56;
  float v57;
  __int128 v58;
  __int128 v59;
  unsigned int v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  void (*v64)(char *, uint64_t);
  uint8_t *v65;
  uint8_t *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint8_t *v71;
  int v72;
  id v73;
  uint64_t result;
  char *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t ObjectType;
  _QWORD v91[2];
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  float64x2_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;

  v101 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v91 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v91 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v96 = (char *)v91 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v91 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v91 - v18;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_2392A1828(0xD000000000000029, 0x800000023935CA90);
    return CPGSfmWorldTracksRelease();
  }
  v21 = Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) != 0)
  {
    v22 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v22, v2);
    v23 = sub_239352098();
    v24 = sub_23935256C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v2;
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23925B000, v23, v24, "Skip track update callback. Backend manager is closed.", v26, 2u);
      v27 = v26;
      v2 = v25;
      MEMORY[0x23B83BC04](v27, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return CPGSfmWorldTracksRelease();
  }
  v93 = v17;
  Count = CPGSfmWorldTracksGetCount();
  v29 = sub_239275AB0();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  if (Count < 1)
  {
    v30(v9, v29, v2);
    v67 = sub_239352098();
    v68 = sub_23935256C();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = v2;
      v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v70 = 0;
      _os_log_impl(&dword_23925B000, v67, v68, "Failed to fetch non-empty mobile sfm point cloud.", v70, 2u);
      v71 = v70;
      v2 = v69;
      MEMORY[0x23B83BC04](v71, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    return CPGSfmWorldTracksRelease();
  }
  v94 = v29;
  v95 = v30;
  ((void (*)(char *))v30)(v19);
  v31 = sub_239352098();
  v32 = sub_239352578();
  v33 = os_log_type_enabled(v31, v32);
  v97 = v21;
  if (v33)
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v34 = 134349056;
    v21 = v97;
    v100 = (id)Count;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v31, v32, "Fetched mobile sfm point cloud of size = %{public}ld", v34, 0xCu);
    MEMORY[0x23B83BC04](v34, -1, -1);
  }

  v35 = *(void (**)(char *, uint64_t))(v3 + 8);
  v35(v19, v2);
  Positions = CPGSfmWorldTracksGetPositions();
  if (!Positions
    || (v37 = (double *)Positions, (Normals = CPGSfmWorldTracksGetNormals()) == 0)
    || (v39 = (float64x2_t *)Normals, (Colors = CPGSfmWorldTracksGetColors()) == 0))
  {
    v95(v12, v94, v2);
    v62 = sub_239352098();
    v63 = sub_23935256C();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = v35;
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_23925B000, v62, v63, "Failed to get positions/normals/colors of world tracks.", v65, 2u);
      v66 = v65;
      v35 = v64;
      MEMORY[0x23B83BC04](v66, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    v35(v12, v2);
    return CPGSfmWorldTracksRelease();
  }
  v41 = (int *)Colors;
  v91[0] = v35;
  v92 = v2;
  v91[1] = a1;
  v42 = *(float (**)(void))(*(_QWORD *)v21 + 656);
  v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v44 = *v37;
    v45 = v42();
    v46 = v37[1];
    v47 = v42();
    v48 = v37[2];
    v49 = v42();
    v98 = *v39;
    v50 = v39[1].f64[0];
    v51 = *v41++;
    v52 = sub_2392DFAB4(v51);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v43 = sub_2392BFFCC(0, v43[2] + 1, 1, v43);
    v54 = v43[2];
    v53 = v43[3];
    if (v54 >= v53 >> 1)
      v43 = sub_2392BFFCC((_QWORD *)(v53 > 1), v54 + 1, 1, v43);
    v55 = v44;
    v56 = v46;
    v57 = v48;
    HIDWORD(v58) = 0;
    *(float *)&v58 = v55 / v45;
    *((float *)&v58 + 1) = v56 / v47;
    *((float *)&v58 + 2) = v57 / v49;
    *(float32x2_t *)&v59 = vcvt_f32_f64(v98);
    *(float *)&v60 = v50;
    *((_QWORD *)&v59 + 1) = v60;
    v43[2] = v54 + 1;
    v61 = (uint64_t)&v43[6 * v54 + 4];
    *(_OWORD *)v61 = v58;
    *(_OWORD *)(v61 + 16) = v59;
    *(_DWORD *)(v61 + 32) = v52;
    *(_DWORD *)(v61 + 36) = 0;
    v39 += 2;
    v37 += 4;
    --Count;
  }
  while (Count);
  v100 = 0;
  swift_bridgeObjectRetain();
  v72 = OCDataBufferCreateWithIOSurface();
  v73 = v100;
  result = swift_bridgeObjectRelease();
  if (v72)
  {
    swift_bridgeObjectRelease();
    v75 = v96;
    v76 = v92;
    v95(v96, v94, v92);
    v77 = sub_239352098();
    v78 = sub_23935256C();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v79 = 0;
      _os_log_impl(&dword_23925B000, v77, v78, "Failed to convert world tracks to data buffer.", v79, 2u);
      MEMORY[0x23B83BC04](v79, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    ((void (*)(char *, uint64_t))v91[0])(v75, v76);
LABEL_42:

    return CPGSfmWorldTracksRelease();
  }
  v80 = v92;
  if (v73)
  {
    type metadata accessor for OCDataBuffer();
    v81 = v73;
    swift_bridgeObjectRelease();
    v82 = sub_239351B44((uint64_t)v81);
    v83 = v93;
    v95(v93, v94, v80);
    v84 = sub_239352098();
    v85 = sub_239352578();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v86 = 134349056;
      v99 = (*(uint64_t (**)(void))(*(_QWORD *)v82 + 96))();
      v83 = v93;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v84, v85, "Data buffer size of mobile sfm point cloud is %{public}ld", v86, 0xCu);
      MEMORY[0x23B83BC04](v86, -1, -1);
    }

    v87 = ((uint64_t (*)(char *, uint64_t))v91[0])(v83, v92);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v97 + 536))(v87))
    {
      v89 = v88;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 8))(v82, ObjectType, v89);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_release();
    goto LABEL_42;
  }
  __break(1u);
  return result;
}

void sub_2392BF054(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _OWORD v20[4];
  char v21;
  float64x2_t v22[4];
  __int128 v23;

  if (CPGLocalizationUpdatesGetState() == 1 && CPGLocalizationUpdatesGetObjectTransform())
  {
    if ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 464))())
    {
      v10 = v9;
      ObjectType = swift_getObjectType();
      CPGObjectTransformGetTransformMatrix();
      v12.n128_f64[0] = sub_2392DEE58(v22);
      v20[0] = v12;
      v20[1] = v13;
      v20[2] = v14;
      v20[3] = v15;
      v21 = 0;
      if ((a3 & 0x8000000000000000) == 0)
      {
        v12.n128_f64[0] = a1;
        (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v10 + 8))(v20, a3, a5, ObjectType, v10, v12);
LABEL_9:
        swift_unknownObjectRelease();
        return;
      }
LABEL_12:
      __break(1u);
    }
  }
  else if ((*(uint64_t (**)(void))(*(_QWORD *)v5 + 464))())
  {
    v17 = v16;
    v18 = swift_getObjectType();
    v19.n128_u64[1] = 0;
    memset(v22, 0, sizeof(v22));
    LOBYTE(v23) = 1;
    if ((a3 & 0x8000000000000000) == 0)
    {
      v19.n128_f64[0] = a1;
      (*(void (**)(float64x2_t *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 8))(v22, a3, a5, v18, v17, v19);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_12;
  }
}

uint64_t sub_2392BF1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_239352170();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2393521C4();
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGFinalizeInputResultRetain();
  v13 = *(void **)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = v14;
  v15[4] = a1;
  aBlock[4] = sub_2392C3A58;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC55B8;
  v16 = _Block_copy(aBlock);
  v17 = v13;
  swift_retain();
  sub_239352188();
  v22 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v7, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_2392BF404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t Strong;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t ErrorCode;
  int v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  _QWORD v27[6];

  v27[5] = *MEMORY[0x24BDAC8D0];
  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v27 - v5;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_BYTE *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed);
    v10 = sub_239275AB0();
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    if ((v9 & 1) != 0)
    {
      v11(v4, v10, v0);
      v12 = sub_239352098();
      v13 = sub_23935256C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_23925B000, v12, v13, "Skip finalize input callback exited. Backend Manager is closed.", v14, 2u);
        MEMORY[0x23B83BC04](v14, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }
    else
    {
      v11(v6, v10, v0);
      v15 = sub_239352098();
      v16 = sub_239352578();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_23925B000, v15, v16, "Finalize input Swift callback", v17, 2u);
        MEMORY[0x23B83BC04](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      ErrorCode = CPGFinalizeInputResultGetErrorCode();
      v19 = ErrorCode;
      if ((_DWORD)ErrorCode)
      {
        v20 = 0;
        v21 = 1;
      }
      else
      {
        v27[1] = 0;
        ErrorCode = CPGRequestCreateWithDetail();
        v20 = 0;
        v21 = (_DWORD)ErrorCode != 0;
        if (!(_DWORD)ErrorCode)
        {
          CPGSessionGetEstimatedProcessingTime();
          v20 = v22;
          ErrorCode = CPGRequestRelease();
        }
      }
      if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 512))(ErrorCode))
      {
        v24 = v23;
        ObjectType = swift_getObjectType();
        (*(void (**)(BOOL, uint64_t, _BOOL8, uint64_t, uint64_t))(v24 + 8))(v19 == 0, v20, v21, ObjectType, v24);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    sub_2392A1828(0xD000000000000030, 0x800000023935CA50);
  }
  return CPGFinalizeInputResultRelease();
}

uint64_t sub_2392BF724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a4;
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    v22 = swift_beginAccess();
    if (*(_BYTE *)(a2 + 16) == 1)
    {
      v23 = sub_239351F3C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v16, a3, v23);
      v24 = swift_storeEnumTagMultiPayload();
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440))(v24);
      if (result)
      {
        v26 = v25;
        ObjectType = swift_getObjectType();
        v28 = (uint64_t)&v13[*(int *)(sub_23925FB08(&qword_256929558) + 48)];
        sub_239268820(v38, (uint64_t)v13, type metadata accessor for PhotogrammetrySession.Request);
        sub_239268820((uint64_t)v16, v28, type metadata accessor for PhotogrammetrySession.Result);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 8))(v13, ObjectType, v26);
        swift_unknownObjectRelease();
        result = sub_2392688AC((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Output);
      }
      v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      v30 = __OFSUB__(v29, 1);
      v31 = v29 - 1;
      if (!v30)
      {
        *(_QWORD *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v31;
        sub_2392AF268();
        return sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Result);
      }
      __break(1u);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 440))(v22);
      if (result)
      {
        v33 = v32;
        v34 = swift_getObjectType();
        v35 = &v13[*(int *)(sub_23925FB08(&qword_256929550) + 48)];
        sub_239268820(v38, (uint64_t)v13, type metadata accessor for PhotogrammetrySession.Request);
        *(_QWORD *)v35 = 5;
        v35[8] = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 8))(v13, v34, v33);
        swift_unknownObjectRelease();
        result = sub_2392688AC((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Output);
      }
      v36 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      v30 = __OFSUB__(v36, 1);
      v37 = v36 - 1;
      if (!v30)
      {
        *(_QWORD *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v37;
        return sub_2392AF268();
      }
    }
    __break(1u);
    return result;
  }
  v17 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v17, v7);
  v18 = sub_239352098();
  v19 = sub_23935256C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_23925B000, v18, v19, "Defer in copy fails. Backend manager is closed.", v20, 2u);
    MEMORY[0x23B83BC04](v20, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2392BFAA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_256929570);
  v10 = *(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23935283C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2392C3E98(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_2392BFCAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_2569278A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2392C4450(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2392BFDB8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_256929538);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2392C4710(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2392BFEC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      sub_23925FB08(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23926170C(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2392BFFCC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_2569295C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_239263A48(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_2392C00F0(uint64_t a1)
{
  uint64_t v2;

  sub_2392C50AC();
  v2 = sub_239352290();
  return sub_2392C01F4(a1, v2);
}

unint64_t sub_2392C0158(uint64_t a1)
{
  uint64_t v2;

  sub_239352980();
  sub_23935298C();
  v2 = sub_2393529B0();
  return sub_2392C02B8(a1, v2);
}

unint64_t sub_2392C01BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_239352974();
  return sub_2392C02B8(a1, v2);
}

unint64_t sub_2392C01F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_2392C50F0();
    do
    {
      if ((sub_2393522B4() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2392C02B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_2392C0354(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  sub_23925FB08(&qword_2569295F8);
  result = sub_23935286C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v17);
      result = sub_239352974();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2392C05F0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;

  v3 = v2;
  v5 = type metadata accessor for PhotogrammetrySession.Request(0);
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_23925FB08(&qword_256929580);
  v38 = a2;
  result = sub_23935286C();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v36 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v34 = v2;
    v35 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_34;
        v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_34;
          v21 = v36[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v35)
                  goto LABEL_34;
                v21 = v36[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v38 & 1) != 0)
        sub_2392C4FE0(v25, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      else
        sub_239268820(v25, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      sub_239352980();
      sub_23935298C();
      result = sub_2393529B0();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_2392C4FE0((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for PhotogrammetrySession.Request);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_2392C0930(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v3 = v2;
  v5 = *v2;
  sub_23925FB08(&qword_256929530);
  result = sub_23935286C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v8 = 0;
    v39 = (uint64_t *)(v5 + 64);
    v40 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = 1 << *(_BYTE *)(v5 + 32);
    v36 = v3;
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v17 >= v38)
          goto LABEL_31;
        v18 = v39[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v38)
            goto LABEL_31;
          v18 = v39[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v38)
            {
LABEL_31:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_38;
              }
              if (v35 >= 64)
                bzero(v39, 8 * v38);
              else
                *v39 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v39[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v38)
                  goto LABEL_31;
                v18 = v39[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(v5 + 56) + 80 * v16;
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v44 = *(_BYTE *)(v20 + 64);
      v42 = *(_QWORD *)(v20 + 48);
      v43 = *(_QWORD *)(v20 + 56);
      v22 = *(_QWORD *)(v20 + 32);
      v41 = *(_QWORD *)(v20 + 40);
      v23 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      v25 = *(_QWORD *)v20;
      v26 = *(_QWORD *)(v20 + 8);
      result = sub_239352974();
      v27 = -1 << *(_BYTE *)(v7 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v12 + 8 * v29);
        }
        while (v33 == -1);
        v13 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v21;
      v14 = *(_QWORD *)(v7 + 56) + 80 * v13;
      *(_QWORD *)v14 = v25;
      *(_QWORD *)(v14 + 8) = v26;
      *(_QWORD *)(v14 + 16) = v23;
      *(_QWORD *)(v14 + 24) = v24;
      *(_QWORD *)(v14 + 32) = v22;
      *(_QWORD *)(v14 + 40) = v41;
      *(_QWORD *)(v14 + 48) = v42;
      *(_QWORD *)(v14 + 56) = v43;
      *(_BYTE *)(v14 + 64) = v44;
      ++*(_QWORD *)(v7 + 16);
      v5 = v40;
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2392C0C2C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  sub_23925FB08(&qword_25692B700);
  result = sub_23935286C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v33 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_38;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + (v18 << 6));
      v37 = v23[2];
      v38 = v23[3];
      v35 = *v23;
      v36 = v23[1];
      result = sub_239352974();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
      v16 = (_OWORD *)(*(_QWORD *)(v7 + 56) + (v15 << 6));
      *v16 = v35;
      v16[1] = v36;
      v16[2] = v37;
      v16[3] = v38;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

unint64_t sub_2392C0EF4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_239352740();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_239352980();
        sub_23935298C();
        result = sub_2393529B0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v3);
        v12 = (_QWORD *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_2392C10D4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2392C0158(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17
            + *(_QWORD *)(*(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 72) * v10;
        return sub_2392C5068(a1, v18);
      }
      return sub_2392C130C(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2392C159C();
      goto LABEL_7;
    }
    sub_2392C05F0(v13, a3 & 1);
    v20 = sub_2392C0158(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_2392C130C(v10, a2, a1, v16);
    }
  }
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392C11F0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2392C01BC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_239268764(a1, v16[7] + 80 * v10, &qword_25692A8A0);
      return sub_2392C1398(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2392C17C8();
      goto LABEL_7;
    }
    sub_2392C0930(v13, a3 & 1);
    v18 = sub_2392C01BC(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_239268764(a1, v16[7] + 80 * v10, &qword_25692A8A0);
      return sub_2392C1398(v10, a2, a1, v16);
    }
  }
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392C130C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for PhotogrammetrySession.Request(0);
  result = sub_2392C4FE0(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, type metadata accessor for PhotogrammetrySession.Request);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_2392C1398(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_239268764(a3, a4[7] + 80 * a1, &qword_25692A8A0);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_2392C140C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  sub_23925FB08(&qword_2569295F8);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 4 * v15;
    v19 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2392C159C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_256929580);
  v5 = *v0;
  v6 = sub_239352860();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_239268820(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for PhotogrammetrySession.Request);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_2392C4FE0((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for PhotogrammetrySession.Request);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2392C17C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;

  v1 = v0;
  sub_23925FB08(&qword_256929530);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v29 = __clz(__rbit64(v27));
    v12 = (v27 - 1) & v27;
    v15 = v29 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 80 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)(v19 + 64);
    v21 = *(_OWORD *)v19;
    v22 = *(_OWORD *)(v19 + 16);
    v23 = *(_OWORD *)(v19 + 32);
    v24 = *(_OWORD *)(v19 + 48);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v25 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v25 = v21;
    *(_OWORD *)(v25 + 16) = v22;
    *(_OWORD *)(v25 + 32) = v23;
    *(_OWORD *)(v25 + 48) = v24;
    *(_BYTE *)(v25 + 64) = v20;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2392C1974()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;

  v1 = v0;
  sub_23925FB08(&qword_25692B700);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v28 = __clz(__rbit64(v26));
    v12 = (v26 - 1) & v26;
    v15 = v28 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = v15 << 6;
    v19 = (__int128 *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v24 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v24 = v20;
    v24[1] = v21;
    v24[2] = v22;
    v24[3] = v23;
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2392C1B14(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_239262570(&qword_2569295D0, v11, MEMORY[0x24BDCDAF0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_239352290();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_239262570(&qword_2569295D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v21 = sub_2393522B4();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_2392C20DC((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_2392C1D70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_239351F3C();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23925FB08(&qword_2569295E0);
  v6 = sub_2393527A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_239262570(&qword_2569295D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
      result = sub_239352290();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_2392C20DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2392C1D70();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2392C22E0();
      goto LABEL_12;
    }
    sub_2392C2504();
  }
  v12 = *v3;
  sub_239262570(&qword_2569295D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  v13 = sub_239352290();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_239262570(&qword_2569295D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v18 = sub_2393522B4();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2393528FC();
  __break(1u);
  return result;
}

void *sub_2392C22E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_2569295E0);
  v6 = *v0;
  v7 = sub_239352794();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2392C2504()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_23925FB08(&qword_2569295E0);
  v7 = sub_2393527A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_239262570(&qword_2569295D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    result = sub_239352290();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

_QWORD *sub_2392C282C(_QWORD *a1)
{
  return sub_2392BFCAC(0, a1[2], 0, a1);
}

uint64_t sub_2392C2840(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  BOOL v8;
  uint64_t result;

  v8 = ((a1 & 1) == 0) != (a5 & 1) && HIDWORD(a1) == HIDWORD(a5);
  result = 0;
  if (v8 && a2 == a6)
  {
    if (a3)
    {
      if (!a7 || a3 != a7)
        return result;
    }
    else if (a7)
    {
      return result;
    }
    if (((a4 ^ a8) & 1) == 0)
      return ((a4 & 0x100) == 0) ^ ((unsigned __int16)(a8 & 0x100) >> 8);
  }
  return result;
}

unint64_t sub_2392C289C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  _DWORD *i;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_23925FB08(a2);
    v4 = (_QWORD *)sub_239352878();
    for (i = (_DWORD *)(a1 + 40); ; i += 4)
    {
      v6 = *((_QWORD *)i - 1);
      v7 = *i;
      result = sub_2392C01BC(v6);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v4[6] + 8 * result) = v6;
      *(_DWORD *)(v4[7] + 4 * result) = v7;
      v10 = v4[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v4[2] = v12;
      if (!--v2)
        return (unint64_t)v4;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2392C296C()
{
  unint64_t result;

  result = qword_256928DC8;
  if (!qword_256928DC8)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs, &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs);
    atomic_store(result, (unint64_t *)&qword_256928DC8);
  }
  return result;
}

unint64_t sub_2392C29B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_256929530);
    v3 = (_QWORD *)sub_239352878();
    for (i = (uint64_t *)(a1 + 56); ; i += 12)
    {
      v19 = v1;
      v5 = *(i - 3);
      v6 = *(i - 1);
      v7 = *i;
      v9 = i[1];
      v8 = i[2];
      v11 = i[3];
      v10 = i[4];
      v12 = i[5];
      v21 = i[6];
      v20 = *((_BYTE *)i + 56);
      result = sub_2392C01BC(v5);
      if ((v14 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v15 = v3[7] + 80 * result;
      *(_QWORD *)v15 = v6;
      *(_QWORD *)(v15 + 8) = v7;
      *(_QWORD *)(v15 + 16) = v9;
      *(_QWORD *)(v15 + 24) = v8;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v10;
      *(_QWORD *)(v15 + 48) = v12;
      *(_QWORD *)(v15 + 56) = v21;
      *(_BYTE *)(v15 + 64) = v20;
      v16 = v3[2];
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
        goto LABEL_10;
      v3[2] = v18;
      v1 = v19 - 1;
      if (v19 == 1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2392C2ADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_23925FB08(&qword_2569295E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_23925FB08(&qword_256929580);
    v7 = (_QWORD *)sub_239352878();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23926059C(v9, (uint64_t)v5, &qword_2569295E8);
      v11 = *v5;
      result = sub_2392C0158(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for PhotogrammetrySession.Request(0);
      result = sub_2392C4FE0(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, type metadata accessor for PhotogrammetrySession.Request);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2392C2C48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  unint64_t result;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_25692B700);
    v3 = (_QWORD *)sub_239352878();
    for (i = (_OWORD *)(a1 + 48); ; i += 5)
    {
      v5 = *((_QWORD *)i - 2);
      v14 = i[1];
      v15 = *i;
      v12 = i[3];
      v13 = i[2];
      result = sub_2392C01BC(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      v8 = (_OWORD *)(v3[7] + (result << 6));
      *v8 = v15;
      v8[1] = v14;
      v8[2] = v13;
      v8[3] = v12;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_2392C2D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  int v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  double v44;
  double v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)v52 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v52 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v52 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v52 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v52 - v17;
  type metadata accessor for ObjectCaptureImageFolderReader();
  sub_239279C30();
  v52[0] = v1;
  v19 = v0;
  if (!CPGSessionOptionsCreate())
  {
    v25 = sub_239275AB0();
    v26 = v52[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v52[0] + 16))(v4, v25, v0);
    v27 = sub_239352098();
    v28 = sub_23935256C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_23925B000, v27, v28, "Failed to create session options!", v29, 2u);
      MEMORY[0x23B83BC04](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v0);
    goto LABEL_23;
  }
  if (CPGSessionOptionsSetAutoMaskingEnabled())
  {
    v20 = sub_239275AB0();
    v21 = v52[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v52[0] + 16))(v7, v20, v19);
    v22 = sub_239352098();
    v23 = sub_23935256C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_23925B000, v22, v23, "Failed to enable auto masking in session options!", v24, 2u);
      MEMORY[0x23B83BC04](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v19);
  }
  else
  {
    if (*sub_2392DD988() == 1)
    {
      v30 = CPGSessionOptionsSetReconstructionPowerSetting();
      v31 = sub_239275AB0();
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v52[0] + 16);
      if (v30)
      {
        v32(v16, v31, v0);
        v33 = sub_239352098();
        v34 = sub_23935256C();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v35 = 0;
          _os_log_impl(&dword_23925B000, v33, v34, "Failed to set reconstruction power setting in session options!", v35, 2u);
          MEMORY[0x23B83BC04](v35, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v52[0] + 8))(v16, v0);
        goto LABEL_23;
      }
      v32(v18, v31, v0);
      v36 = sub_239352098();
      v37 = sub_239352578();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_23925B000, v36, v37, "Use low power mode to reconstruct on iPhones.", v38, 2u);
        MEMORY[0x23B83BC04](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v52[0] + 8))(v18, v0);
    }
    v53 = 0;
    if (CPGRequestCreateWithDetail() || !v53)
    {
      v39 = sub_239275AB0();
      v40 = v52[0];
      (*(void (**)(char *, uint64_t, uint64_t))(v52[0] + 16))(v10, v39, v19);
      v41 = sub_239352098();
      v42 = sub_23935256C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v43 = 0;
        _os_log_impl(&dword_23925B000, v41, v42, "Failed to create request with detail level!", v43, 2u);
        MEMORY[0x23B83BC04](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v19);
    }
    else
    {
      CPGSessionGetEstimatedProcessingTimeByNumberOfPixels();
      v47 = v52[0];
      if (v46 > 0.0)
      {
        v44 = v46;
        CPGRequestRelease();
        CPGSessionOptionsRelease();
        return *(_QWORD *)&v44;
      }
      v48 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v13, v48, v19);
      v49 = sub_239352098();
      v50 = sub_23935256C();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_23925B000, v49, v50, "Failed to get estimated processing time by number of pixels!", v51, 2u);
        MEMORY[0x23B83BC04](v51, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v19);
    }
    CPGRequestRelease();
  }
LABEL_23:
  CPGSessionOptionsRelease();
  v44 = 0.0;
  return *(_QWORD *)&v44;
}

uint64_t sub_2392C3318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  uint8_t *v10;
  int v11;
  NSObject *v12;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (CPGSessionOptionsSetAutoMaskingEnabled())
  {
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v4 = 0xD00000000000002DLL;
    v5 = "CPGSessionOptionsSetAutoMaskingEnabled failed";
  }
  else
  {
    if (*sub_2392DD988() == 1)
    {
      if (CPGSessionOptionsSetReconstructionPowerSetting())
      {
        sub_2392C3598();
        swift_allocError();
        *(_QWORD *)v4 = 0xD000000000000035;
        v5 = "CPGSessionOptionsSetReconstructionPowerSetting failed";
        goto LABEL_11;
      }
      v6 = sub_239275AB0();
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
      v12 = sub_239352098();
      v7 = sub_239352578();
      v11 = v7;
      if (os_log_type_enabled(v12, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v10 = v8;
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_23925B000, v12, (os_log_type_t)v11, "Using low power mode for reconstruction on iPhones", v8, 2u);
        MEMORY[0x23B83BC04](v10, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    CPGSfmOptionsSetSampleOrdering();
    CPGSfmOptionsSetFeatureSensitivity();
    CPGSfmOptionsSetProcessingMode();
    CPGSfmOptionsSetUsePriors();
    CPGSfmOptionsSetPowerSetting();
    result = CPGSessionOptionsSetSfmOptions();
    if (!(_DWORD)result)
      return result;
    sub_2392C3598();
    swift_allocError();
    *(_QWORD *)v4 = 0xD000000000000026;
    v5 = "CPGSessionOptionsSetSfmOptions failed!";
  }
LABEL_11:
  *(_QWORD *)(v4 + 8) = (unint64_t)(v5 - 32) | 0x8000000000000000;
  *(_BYTE *)(v4 + 16) = 1;
  return swift_willThrow();
}

unint64_t sub_2392C3598()
{
  unint64_t result;

  result = qword_256928DD0;
  if (!qword_256928DD0)
  {
    result = MEMORY[0x23B83BB44](&unk_2393554CC, &type metadata for PGManager.Error);
    atomic_store(result, (unint64_t *)&qword_256928DD0);
  }
  return result;
}

uint64_t type metadata accessor for PGManager()
{
  uint64_t result;

  result = qword_25692D5F0;
  if (!qword_25692D5F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2392C3618()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2392C3640()
{
  return sub_2392C3968((uint64_t (*)(_QWORD, uint64_t))sub_2392A9284);
}

uint64_t sub_2392C364C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2392C365C()
{
  return swift_release();
}

uint64_t sub_2392C3664(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_239262518(a2);
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2392C36A8()
{
  uint64_t v0;

  return sub_2392A9CDC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2392C36B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392C36D4()
{
  float32x4_t *v0;

  return sub_2392AA824(v0[2], v0[3], v0[4], v0[5], v0[1].i64[0], v0[1].u64[1]);
}

uint64_t sub_2392C36E4()
{
  return sub_2392AB2D0();
}

uint64_t sub_2392C36EC()
{
  uint64_t v0;

  return sub_2392ABF70(v0);
}

uint64_t sub_2392C36F4()
{
  return swift_deallocObject();
}

uint64_t sub_2392C3708()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2392C3734()
{
  uint64_t v0;

  return sub_2392AC04C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2392C373C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2392C3750()
{
  uint64_t *v0;

  return sub_2392ABCEC(v0[2], v0[3], v0[4]);
}

uint64_t sub_2392C375C()
{
  return sub_2392AD40C();
}

uint64_t sub_2392C3764()
{
  return sub_2392ADBF0();
}

uint64_t sub_2392C376C()
{
  return swift_deallocObject();
}

uint64_t sub_2392C3780()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for PhotogrammetrySample(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;

  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[12];
  v5 = type metadata accessor for PhotogrammetrySample.Camera(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_239352674();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v7);

  }
  v9 = v3 + v1[18];
  v10 = sub_239351FD8();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v3 + v1[19];
  v13 = sub_239352020();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2392C395C()
{
  return sub_2392C3968((uint64_t (*)(_QWORD, uint64_t))sub_2392AE154);
}

uint64_t sub_2392C3968(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PhotogrammetrySample(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_2392C39A8()
{
  return sub_2392AEBC8();
}

uint64_t sub_2392C39B0()
{
  uint64_t *v0;

  return sub_2392BAAA0(v0[2], v0[3], v0[4]);
}

uint64_t sub_2392C39BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392C39E0()
{
  uint64_t v0;

  return sub_2392BAC98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2392C39EC()
{
  uint64_t v0;

  return sub_2392BCAB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2392C39F8()
{
  return sub_2392BDB5C();
}

uint64_t sub_2392C3A00()
{
  return sub_2392BDD1C();
}

uint64_t sub_2392C3A08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392C3A2C()
{
  uint64_t v0;

  return sub_2392BE798(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2392C3A34()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392C3A58()
{
  return sub_2392BF404();
}

uint64_t sub_2392C3A68()
{
  return type metadata accessor for PGManager();
}

void sub_2392C3A70()
{
  unint64_t v0;
  unint64_t v1;

  sub_23926B494(319, (unint64_t *)&qword_256928E18, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
  {
    sub_23926B494(319, qword_256928E20, (void (*)(uint64_t))type metadata accessor for PhotogrammetrySession.Request);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_2392C3BE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for PGManager.Error(uint64_t a1)
{
  return sub_2392C3C0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_2392C3C0C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s6CoreOC9PGManagerC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2392C3BE4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PGManager.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2392C3BE4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2392C3C0C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PGManager.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2392C3C0C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PGManager.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PGManager.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2392C3D90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2392C3D98(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PGManager.Error()
{
  return &type metadata for PGManager.Error;
}

__n128 initializeWithCopy for PGManager.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PGManager.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[26])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PGManager.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PGManager.Configuration()
{
  return &type metadata for PGManager.Configuration;
}

void type metadata accessor for CPGSfmFeatureSensitivity(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929500);
}

void type metadata accessor for CPGSfmSampleOrdering(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929508);
}

uint64_t sub_2392C3E98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392C3FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
    v8 = sub_239352098();
    v9 = sub_239352578();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23925B000, v8, v9, "Processing warning generated.", v10, 2u);
      MEMORY[0x23B83BC04](v10, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_2392C40B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[7];

  v27 = a3;
  v29 = a2;
  v25 = a1;
  v32 = sub_239352170();
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2393521C4();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  v26 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v26 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_239351F3C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = sub_23935217C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGOutputRetain();
  sub_239261E08();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5490], v11);
  v28 = sub_239352620();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v8);
  sub_239268820(v29, (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PhotogrammetrySession.Request);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (v10 + *(unsigned __int8 *)(v26 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v25;
  *(_QWORD *)(v18 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v16, (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_2392C4FE0((uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for PhotogrammetrySession.Request);
  aBlock[4] = sub_2392C5204;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5778;
  v19 = _Block_copy(aBlock);
  swift_retain();
  v20 = v30;
  sub_239352188();
  v36 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_2392C3664((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0);
  v22 = v31;
  v21 = v32;
  sub_239352734();
  v23 = (void *)v28;
  MEMORY[0x23B83A4A0](0, v20, v22, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v21);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
  swift_release();
  return swift_release();
}

uint64_t sub_2392C4450(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392C4540(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_239351F3C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_239262570(&qword_2569295D0, v3, MEMORY[0x24BDCDAF0]);
  v19 = sub_239352518();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_2392C1B14((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

char *sub_2392C4710(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392C47F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t SfmMap;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v58 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v58 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - v13;
  SfmMap = CPGOutputGetSfmMap();
  if (!SfmMap)
  {
    v35 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v35, v2);
    v36 = sub_239352098();
    v37 = sub_23935256C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v61 = a1;
      v62 = v39;
      v60 = v2;
      *(_DWORD *)v38 = 136446210;
      v40 = sub_23935232C();
      v61 = sub_23925F3EC(v40, v41, &v62);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v36, v37, "Can't get SfM map from native output %{public}s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v39, -1, -1);
      MEMORY[0x23B83BC04](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v60);
      return MEMORY[0x24BEE4AF8];
    }

    v49 = *(void (**)(char *, uint64_t))(v3 + 8);
    v50 = v6;
LABEL_27:
    v49(v50, v2);
    return MEMORY[0x24BEE4AF8];
  }
  v16 = SfmMap;
  v17 = CPGSfmMapCopyAllSampleIDs();
  if (!v17)
  {
    v42 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v42, v2);
    v43 = sub_239352098();
    v44 = sub_23935256C();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v61 = v16;
      v62 = v46;
      v60 = v2;
      *(_DWORD *)v45 = 136446210;
      v47 = sub_23935232C();
      v61 = sub_23925F3EC(v47, v48, &v62);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v43, v44, "Can't get sample ids from SfM map %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v46, -1, -1);
      MEMORY[0x23B83BC04](v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v60);
      return MEMORY[0x24BEE4AF8];
    }

    v49 = *(void (**)(char *, uint64_t))(v3 + 8);
    v50 = v9;
    goto LABEL_27;
  }
  v18 = (void *)v17;
  v62 = 0;
  sub_239352440();

  v20 = v62;
  if (!v62)
  {
    v51 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v51, v2);
    v52 = sub_239352098();
    v53 = sub_23935256C();
    if (os_log_type_enabled(v52, (os_log_type_t)v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v61 = (uint64_t)v18;
      v62 = v55;
      v60 = v2;
      *(_DWORD *)v54 = 136446210;
      sub_23925FB08(&qword_256929520);
      v56 = sub_23935232C();
      v61 = sub_23925F3EC(v56, v57, &v62);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v52, (os_log_type_t)v53, "Can't convert sample ids array: %{public}s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v55, -1, -1);
      MEMORY[0x23B83BC04](v54, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v60);
      return MEMORY[0x24BEE4AF8];
    }

    v49 = *(void (**)(char *, uint64_t))(v3 + 8);
    v50 = v12;
    goto LABEL_27;
  }
  v21 = *(_QWORD *)(v62 + 16);
  if (v21)
  {
    v22 = 0;
    v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v19 = 134349056;
    v58 = v19;
    v59 = v21;
    v60 = v62;
    while (1)
    {
      v24 = *(_QWORD *)(v20 + 8 * v22 + 32);
      if ((CPGSfmMapIsSampleRegistered() & 1) == 0)
      {
        v25 = v16;
        v26 = sub_239275AB0();
        v27 = v3;
        v28 = v2;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v14, v26, v2);
        v29 = sub_239352098();
        v30 = sub_239352560();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc();
          *(_DWORD *)v31 = v58;
          *(_QWORD *)(v31 + 4) = v24;
          _os_log_impl(&dword_23925B000, v29, v30, "Adding low quality sample: id=%{public}llu...", (uint8_t *)v31, 0xCu);
          MEMORY[0x23B83BC04](v31, -1, -1);
        }

        v2 = v28;
        result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v28);
        if (v24 < 0)
        {
          __break(1u);
          return result;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_2392BFEC4(0, v23[2] + 1, 1, v23, &qword_25692B740);
        v16 = v25;
        v34 = v23[2];
        v33 = v23[3];
        v20 = v60;
        if (v34 >= v33 >> 1)
          v23 = sub_2392BFEC4((_QWORD *)(v33 > 1), v34 + 1, 1, v23, &qword_25692B740);
        v23[2] = v34 + 1;
        v23[v34 + 4] = v24;
        v3 = v27;
        v21 = v59;
      }
      if (v21 == ++v22)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v23;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_2392C4E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *Properties;
  const __CFDictionary *v5;
  CFDictionaryRef Copy;
  unint64_t result;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Properties = (void *)CPGOutputGetProperties();
  if (!Properties
    || (v5 = Properties, Copy = CFDictionaryCreateCopy(0, v5), v5, !Copy)
    || (v13 = 0, sub_239352278(), Copy, (result = v13) == 0))
  {
    v8 = sub_239275AB0();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
    v9 = sub_239352098();
    v10 = sub_23935256C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Can't convert backend properties dict to [AnyHashable: Any]!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return sub_2392A0ABC(MEMORY[0x24BEE4AF8]);
  }
  return result;
}

uint64_t sub_2392C4FE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2392C5024()
{
  unint64_t result;

  result = qword_256929578;
  if (!qword_256929578)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Request.Detail, &type metadata for PhotogrammetrySession.Request.Detail);
    atomic_store(result, (unint64_t *)&qword_256929578);
  }
  return result;
}

uint64_t sub_2392C5068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2392C50AC()
{
  unint64_t result;

  result = qword_256929598;
  if (!qword_256929598)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Request.Detail, &type metadata for PhotogrammetrySession.Request.Detail);
    atomic_store(result, (unint64_t *)&qword_256929598);
  }
  return result;
}

unint64_t sub_2392C50F0()
{
  unint64_t result;

  result = qword_2569295A0;
  if (!qword_2569295A0)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Request.Detail, &type metadata for PhotogrammetrySession.Request.Detail);
    atomic_store(result, (unint64_t *)&qword_2569295A0);
  }
  return result;
}

uint64_t sub_2392C5134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = sub_239351F3C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  swift_release();
  v7 = v0 + v3;
  v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v7, v1);
  v9 = sub_23925FB08(&qword_256928730);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v6, 3, v9))v8(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_2392C5204()
{
  return sub_2392C531C((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t))sub_2392B7F18);
}

uint64_t sub_2392C5210()
{
  return swift_deallocObject();
}

uint64_t sub_2392C5220()
{
  return sub_2392BA380();
}

uint64_t sub_2392C5238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = sub_239351F3C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 80);
  v6 = (v3 + v4 + v5) & ~v5;
  swift_release();
  swift_release();
  v7 = v0 + v3;
  v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v7, v1);
  v9 = sub_23925FB08(&qword_256928730);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v6, 3, v9))v8(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_2392C5310()
{
  return sub_2392C531C((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t))sub_2392BF724);
}

uint64_t sub_2392C531C(uint64_t (*a1)(_QWORD, _QWORD, unint64_t, unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(sub_239351F3C() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v3, v1 + ((v3 + v4 + v5) & ~v5));
}

uint64_t sub_2392C5394()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2392C53C8()
{
  uint64_t v0;

  return sub_2392B1DF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void type metadata accessor for CPGOutputModelTextureDestination(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929600);
}

void type metadata accessor for CPGOutputModelTextureType(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929608);
}

void type metadata accessor for OCCoveragePoint(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929610);
}

void type metadata accessor for CFArray(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929618);
}

unint64_t sub_2392C54E4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_2392CEF10(*a1);
  *a2 = result;
  return result;
}

void sub_2392C550C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2392C553C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_239352674();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v0, 1, 2, v1);
}

uint64_t sub_2392C55F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  int v10;
  int v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_239352674();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239352680();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239268820(v1, (uint64_t)v8, v9);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  if (v10)
  {
    return v10 != 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v12 == *MEMORY[0x24BEDF330])
    {
      return 2;
    }
    else if (v12 == *MEMORY[0x24BEDF340])
    {
      return 4;
    }
    else if (v12 == *MEMORY[0x24BEDF348])
    {
      return 5;
    }
    else
    {
      if (v12 != *MEMORY[0x24BEDF338])
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return 0;
      }
      return 3;
    }
  }
}

void *sub_2392C577C(__CVBuffer *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v10;
  const __CFString *v11;
  CFTypeRef v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  const __CFString *v18;
  CFTypeRef v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  CFTypeRef v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  const __CFString *v34;
  CFTypeRef v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  const __CFString *v48;
  CFTypeRef v49;
  void *result;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  _OWORD v62[2];
  __int128 v63;
  uint64_t ObjectType;
  unint64_t v65;

  v10 = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  v65 = v10;
  v11 = (const __CFString *)*MEMORY[0x24BDD9470];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x24BDD9470]))
  {
    v12 = CVBufferCopyAttachment(a1, v11, 0);
    if (v12)
    {
      *(_QWORD *)&v63 = v12;
      v13 = sub_23925FB08(&qword_256927010);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v14 = sub_2393522F0();
        v16 = v15;
        ObjectType = v13;
        *(_QWORD *)&v63 = *(_QWORD *)&v62[0];
        sub_23925FDD4(&v63, v62);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v65 = 0x8000000000000000;
        sub_2392CDDE4(v62, v14, v16, isUniquelyReferenced_nonNull_native);
        v65 = v10;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  v18 = (const __CFString *)*MEMORY[0x24BDD96E8];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x24BDD96E8]))
  {
    v19 = CVBufferCopyAttachment(a1, v18, 0);
    if (v19)
    {
      *(_QWORD *)&v63 = v19;
      v20 = sub_23925FB08(&qword_256927010);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v21 = *(_QWORD *)&v62[0];
        v22 = sub_2393522F0();
        v24 = v23;
        ObjectType = v20;
        *(_QWORD *)&v63 = v21;
        sub_23925FDD4(&v63, v62);
        v25 = v65;
        v26 = swift_isUniquelyReferenced_nonNull_native();
        v65 = 0x8000000000000000;
        sub_2392CDDE4(v62, v22, v24, v26);
        v65 = v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  v27 = CVBufferCopyAttachment(a1, (CFStringRef)*MEMORY[0x24BDD9698], 0);
  v28 = sub_2393522F0();
  v30 = v28;
  v31 = v29;
  if (v27)
  {
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v63 = v27;
    sub_23925FDD4(&v63, v62);
    swift_unknownObjectRetain();
    v32 = v65;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    v65 = 0x8000000000000000;
    sub_2392CDDE4(v62, v30, v31, v33);
    v65 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2392CC97C(v28, v29, &v63);
    swift_bridgeObjectRelease();
    sub_23925FE28((uint64_t)&v63, (uint64_t *)&unk_25692A930);
  }
  v34 = (const __CFString *)*MEMORY[0x24BDD95D0];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x24BDD95D0]))
  {
    v35 = CVBufferCopyAttachment(a1, v34, 0);
    if (v35)
    {
      *(_QWORD *)&v63 = v35;
      v36 = sub_23925FB08(&qword_256927010);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v37 = a5;
        v38 = a2;
        v39 = a3;
        v40 = a4;
        v41 = *(_QWORD *)&v62[0];
        v61 = sub_2393522F0();
        v43 = v42;
        ObjectType = v36;
        *(_QWORD *)&v63 = v41;
        a4 = v40;
        a3 = v39;
        a2 = v38;
        a5 = v37;
        sub_23925FDD4(&v63, v62);
        v44 = v65;
        v45 = swift_isUniquelyReferenced_nonNull_native();
        v65 = 0x8000000000000000;
        sub_2392CDDE4(v62, v61, v43, v45);
        v65 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  if ((a5 & 1) != 0)
  {
    swift_unknownObjectRelease();
    return (void *)v65;
  }
  sub_23925FB08(&qword_256927400);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_2393541C0;
  *(_QWORD *)(v46 + 32) = a2;
  *(_QWORD *)(v46 + 40) = a3;
  *(_QWORD *)(v46 + 48) = a4;
  v47 = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  v48 = (const __CFString *)*MEMORY[0x24BDD9670];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x24BDD9670]))
  {
    swift_bridgeObjectRelease();
    v49 = CVBufferCopyAttachment(a1, v48, 0);
    if (v49 && (*(_QWORD *)&v63 = v49, sub_23925FB08(&qword_256927010), swift_dynamicCast()))
      v47 = *(_QWORD *)&v62[0];
    else
      v47 = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
  }
  result = (void *)OCNonModularSPI_AppleMakerNote_FocusAccelerometerVector();
  if (result)
  {
    v51 = result;
    v52 = sub_2393522F0();
    v54 = v53;

    ObjectType = sub_23925FB08(&qword_256929620);
    *(_QWORD *)&v63 = v46;
    sub_23925FDD4(&v63, v62);
    v55 = swift_isUniquelyReferenced_nonNull_native();
    sub_2392CDDE4(v62, v52, v54, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = sub_2393522F0();
    v58 = v57;
    ObjectType = sub_23925FB08(&qword_256927010);
    *(_QWORD *)&v63 = v47;
    sub_23925FDD4(&v63, v62);
    v59 = v65;
    v60 = swift_isUniquelyReferenced_nonNull_native();
    v65 = 0x8000000000000000;
    sub_2392CDDE4(v62, v56, v58, v60);
    v65 = v59;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)v65;
  }
  __break(1u);
  return result;
}

unint64_t sub_2392C5D48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = sub_23925FB08(&qword_256929AD8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_256929AC8);
  v6 = sub_239352878();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v12, (uint64_t)v5, &qword_256929AD8);
    result = sub_2392CC8B0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_239351F3C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2392C5EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = sub_23925FB08(&qword_256929AD0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_256929A88);
  v6 = sub_239352878();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v12, (uint64_t)v5, &qword_256929AD0);
    result = sub_239292F4C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_239352020();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2392C6070(uint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23925FE28(a1, &qword_25692B620);
    v13 = sub_2392CC948(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_2392CEAC4();
        v17 = v22;
      }
      sub_2392D05D0(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8);
      sub_2392CD980(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_23925FE28((uint64_t)v8, &qword_25692B620);
  }
  else
  {
    sub_2392D05D0(a1, (uint64_t)v12);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_2392CE064((uint64_t)v12, v19, a2);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2392C6240@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  float v7;
  float v8;
  float v9;
  unint64_t v10;
  char v11;

  if (!result)
  {
    v11 = 0;
    goto LABEL_12;
  }
  v3 = result;
  v4 = *(_QWORD *)(sub_239352530() + 16);
  result = swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_10:
    v11 = 1;
LABEL_12:
    *a2 = v11;
    return result;
  }
  v5 = 0;
  v6 = v3 + 16;
  while (1)
  {
    result = sub_239352530();
    if (v5 >= *(_QWORD *)(result + 16))
      break;
    v7 = *(float *)(result + 16 * v5 + 32);
    swift_bridgeObjectRelease();
    *(double *)(v6 - 16) = v7;
    result = sub_239352530();
    if (v5 >= *(_QWORD *)(result + 16))
      goto LABEL_14;
    v8 = *(float *)(result + 16 * v5 + 36);
    swift_bridgeObjectRelease();
    *(double *)(v6 - 8) = v8;
    result = sub_239352530();
    if (v5 >= *(_QWORD *)(result + 16))
      goto LABEL_15;
    v9 = *(float *)(result + 16 * v5 + 40);
    swift_bridgeObjectRelease();
    *(double *)v6 = v9;
    result = sub_239352524();
    if (v5 >= *(_QWORD *)(result + 16))
      goto LABEL_16;
    v10 = *(_QWORD *)(result + 8 * v5 + 32);
    result = swift_bridgeObjectRelease();
    if (v10 >> 31)
      goto LABEL_17;
    ++v5;
    *(_DWORD *)(v6 + 8) = v10;
    v6 += 32;
    if (v4 == v5)
      goto LABEL_10;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_2392C6360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    sub_23925FB08(&qword_256929628);
    swift_allocObject();
    swift_retain();
    v1 = sub_2393520EC();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2392C63EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_239352170();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393521C4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(a3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_2392D0FF8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5C78;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_239352188();
  v20 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v7, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_2392C662C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t sub_2392C665C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2392C668C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    sub_2392C6360();
    sub_23925FB08(&qword_256929628);
    sub_239263A08(&qword_256929630, &qword_256929628, MEMORY[0x24BDB9E58]);
    v1 = sub_239352134();
    swift_release();
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2392C6740(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.shotID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 20);
  v4 = sub_239351F3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.error.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_2392CEF34(v4, v5);
}

BOOL ObjectCaptureHEICBundleWriter.WriteInfo.isSuccess.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 24) + 8) == 3;
}

BOOL ObjectCaptureHEICBundleWriter.WriteInfo.isError.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 24) + 8) != 3;
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.init(shotID:url:error:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  v6 = *a3;
  v7 = a3[1];
  *a4 = a1;
  v8 = type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0);
  v9 = (char *)a4 + *(int *)(v8 + 20);
  v10 = sub_239351F3C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
  v12 = (_QWORD *)((char *)a4 + *(int *)(v8 + 24));
  *v12 = v6;
  v12[1] = v7;
  return result;
}

uint64_t sub_2392C68A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v2 = v0;
    sub_23925FB08(&qword_256929638);
    swift_allocObject();
    v1 = sub_2393520E0();
    *(_QWORD *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2392C691C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 328))();
  *a2 = result;
  return result;
}

uint64_t sub_2392C694C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2392C697C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = *(_QWORD *)(v0 + 40);
  }
  else
  {
    v2 = v0;
    sub_2392C68A4();
    sub_23925FB08(&qword_256929638);
    sub_239263A08(&qword_256929640, &qword_256929638, MEMORY[0x24BDB9CB0]);
    v1 = sub_239352134();
    swift_release();
    *(_QWORD *)(v2 + 40) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2392C6A30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t ObjectCaptureHEICBundleWriter.__allocating_init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ObjectCaptureHEICBundleWriter.init(publishers:url:)(a1, a2);
  return v4;
}

uint64_t ObjectCaptureHEICBundleWriter.init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int v46;
  unint64_t *v47;
  unint64_t v48;
  const char *v49;
  id v51;
  void *v52;
  unsigned __int8 v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  id v76;
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  id v104[5];

  v3 = v2;
  v102 = a2;
  v96 = a1;
  v104[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23925FB08(&qword_256929648);
  v89 = *(_QWORD *)(v4 - 8);
  v90 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v88 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_23925FB08(&qword_256929650);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23925FB08(&qword_256929658);
  MEMORY[0x24BDAC7A8](v7);
  v87 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23925FB08(&qword_256929660);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v100 = *(_QWORD *)(v10 - 8);
  v101 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10;
  MEMORY[0x24BDAC7A8](v10);
  v99 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_2393525E4();
  v95 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v97 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2393525C0();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v13);
  v15 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v15);
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_subscriptions) = MEMORY[0x24BEE4B08];
  v16 = (_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
  *v16 = 0;
  v16[1] = 0;
  v17 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotMetadataMap;
  v18 = (void *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v3 + v17) = sub_2392CEF58(MEMORY[0x24BEE4AF8]);
  v19 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotFeatureMatchabilityScoreMap;
  *(_QWORD *)(v3 + v19) = sub_2392CF0C0((uint64_t)v18);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID) = -1;
  v20 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_urlToShotIDMap;
  *(_QWORD *)(v3 + v20) = sub_2392C5D48((uint64_t)v18);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_heicWriteHandle) = 0;
  v94 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue;
  v21 = sub_239261E08();
  sub_2393521B8();
  v104[0] = v18;
  v93 = sub_239262570((unint64_t *)&qword_256927DD0, v14, MEMORY[0x24BEE5698]);
  v92 = sub_23925FB08(&qword_256927410);
  sub_239263A08((unint64_t *)&qword_256927DE0, &qword_256927410, MEMORY[0x24BEE12C8]);
  sub_239352734();
  v91 = *MEMORY[0x24BEE5750];
  v95 = *(_QWORD *)(v95 + 104);
  v22 = v98;
  ((void (*)(char *))v95)(v97);
  *(_QWORD *)(v3 + v94) = sub_239352614();
  v94 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveQueue;
  sub_2393521B8();
  v104[0] = (id)MEMORY[0x24BEE4AF8];
  sub_239352734();
  v23 = v97;
  v24 = v91;
  v25 = v22;
  v26 = (void (*)(char *, uint64_t, uint64_t))v95;
  ((void (*)(char *, _QWORD, uint64_t))v95)(v97, v91, v25);
  *(_QWORD *)(v3 + v94) = sub_239352614();
  v27 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateQueue;
  sub_2393521B8();
  sub_2393525B4();
  v26(v23, v24, v98);
  v98 = v21;
  *(_QWORD *)(v3 + v27) = sub_239352614();
  v28 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup;
  *(_QWORD *)(v3 + v28) = dispatch_group_create();
  v29 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup;
  *(_QWORD *)(v3 + v29) = dispatch_group_create();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_isWritingCancelled) = 0;
  v30 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  sub_23925FB08(&qword_256929668);
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v3 + v30) = v31;
  v32 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems;
  *(_QWORD *)(v3 + v32) = sub_2392C5EDC(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_meshWriter) = 0;
  v33 = v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_url;
  v34 = sub_239351F3C();
  v35 = *(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8);
  v35[2](v33, v102, v34);
  v36 = sub_239275A60();
  (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v100 + 16))(v99, v36, v101);
  swift_retain_n();
  v37 = sub_239352098();
  v38 = sub_239352578();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v97 = (char *)v35;
    v40 = v39;
    v41 = (void *)swift_slowAlloc();
    *(_DWORD *)v40 = 141558275;
    v103 = 1752392040;
    v104[0] = v41;
    sub_2393526B0();
    *(_WORD *)(v40 + 12) = 2081;
    v42 = sub_239351F30();
    v103 = sub_23925F3EC(v42, v43, (uint64_t *)v104);
    sub_2393526B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v37, v38, "HEIC Writer: Writer output URL: %{private,mask.hash}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v41, -1, -1);
    v44 = v40;
    v35 = (void (**)(uint64_t, uint64_t, uint64_t))v97;
    MEMORY[0x23B83BC04](v44, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v100 + 8))(v99, v101);
  v45 = (_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_heicWriteHandle);
  swift_beginAccess();
  v46 = OCNonModularSPI_CMPhoto_HeicWriteCreate();
  swift_endAccess();
  if (v46)
  {
    swift_release();
    sub_2392CF194();
    swift_allocError();
    v48 = 0xD000000000000039;
    v49 = "HEIC Writer: Failed to initialize the HEIC bundle writer.";
LABEL_8:
    *v47 = v48;
    v47[1] = (unint64_t)(v49 - 32) | 0x8000000000000000;
    goto LABEL_9;
  }
  if (OCNonModularSPI_CMPhoto_HeicWriteStart())
  {
    OCNonModularSPI_CMPhoto_HeicReadDestroy();
    *v45 = 0;
    swift_release();
    sub_2392CF194();
    swift_allocError();
    v48 = 0xD000000000000034;
    v49 = "HEIC Writer: Failed to start the HEIC bundle writer.";
    goto LABEL_8;
  }
  v51 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v52 = (void *)sub_239351ED0();
  v104[0] = 0;
  v53 = objc_msgSend(v51, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v52, 1, 0, v104);

  if ((v53 & 1) != 0)
  {
    v99 = (char *)v34;
    v54 = v96;
    v55 = (void *)(*(uint64_t (**)(id))(*(_QWORD *)v96 + 216))(v104[0]);
    v57 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue;
    v103 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue);
    v56 = (id)v103;
    v104[0] = v55;
    v95 = sub_2393525D8();
    v101 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56);
    v58 = (uint64_t)v87;
    v101(v87, 1, 1, v95);
    v59 = v56;
    sub_23925FB08(&qword_256929678);
    v97 = (char *)v35;
    sub_239263A08(&qword_256929680, &qword_256929678, MEMORY[0x24BDB9AF8]);
    v60 = v3;
    v100 = sub_239262570(&qword_256929688, (uint64_t (*)(uint64_t))sub_239261E08, MEMORY[0x24BEE5670]);
    v61 = v81;
    sub_23935214C();
    sub_23925FE28(v58, &qword_256929658);

    swift_release();
    v62 = swift_allocObject();
    swift_weakInit();
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = sub_2392CF1FC;
    *(_QWORD *)(v63 + 24) = v62;
    sub_239263A08(&qword_256929690, &qword_256929660, MEMORY[0x24BDB9A08]);
    v64 = v83;
    sub_239352140();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v64);
    swift_beginAccess();
    sub_2393520BC();
    swift_endAccess();
    v65 = swift_release();
    v66 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v54 + 264))(v65);
    v67 = v57;
    v103 = *(_QWORD *)(v3 + v57);
    v68 = (id)v103;
    v104[0] = v66;
    v69 = v95;
    v101((char *)v58, 1, 1, v95);
    v70 = v68;
    sub_23925FB08(&qword_256929698);
    sub_239263A08(&qword_2569296A0, &qword_256929698, MEMORY[0x24BDB9AF8]);
    v71 = v84;
    sub_23935214C();
    sub_23925FE28(v58, &qword_256929658);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_239263A08(&qword_2569296A8, &qword_256929650, MEMORY[0x24BDB9A08]);
    v72 = v86;
    sub_239352140();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v71, v72);
    swift_beginAccess();
    sub_2393520BC();
    swift_endAccess();
    v73 = swift_release();
    v74 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v96 + 312))(v73);
    v103 = *(_QWORD *)(v60 + v67);
    v75 = (id)v103;
    v104[0] = v74;
    v101((char *)v58, 1, 1, v69);
    v76 = v75;
    sub_23925FB08(&qword_2569296B0);
    sub_239263A08(&qword_2569296B8, &qword_2569296B0, MEMORY[0x24BDB9AF8]);
    v77 = v88;
    v3 = v60;
    sub_23935214C();
    sub_23925FE28(v58, &qword_256929658);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_239263A08(&qword_2569296C0, &qword_256929648, MEMORY[0x24BDB9A08]);
    v78 = v90;
    sub_239352140();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v77, v78);
    swift_beginAccess();
    sub_2393520BC();
    swift_endAccess();
    swift_release();
    swift_release();
    (*((void (**)(uint64_t, char *))v97 + 1))(v102, v99);
    return v3;
  }
  v79 = v104[0];
  swift_release();
  sub_239351E58();

LABEL_9:
  swift_willThrow();
  swift_release();
  ((void (*)(uint64_t, uint64_t))v35[1])(v102, v34);
  return v3;
}

uint64_t sub_2392C7860(uint64_t *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char isUniquelyReferenced_nonNull_native;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = sub_239351F3C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[4];
  v31 = a1[3];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v30 = v14;
    sub_239350E44();
    OCSignPostsAriadneDbgCode();
    result = kdebug_trace();
    v17 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID;
    v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID);
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v16 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID) = v20;
      sub_2392CC540(*a2);
      sub_239351EA0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
      v28 = v12;
      v29 = a2;
      v21 = *(_QWORD *)(v16 + v17);
      v22 = v13;
      v23 = (uint64_t *)(v16 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_urlToShotIDMap);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = *v23;
      *v23 = 0x8000000000000000;
      sub_2392CDF14(v21, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
      *v23 = v36;
      swift_bridgeObjectRelease();
      v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v8, v4);
      swift_endAccess();
      v26 = *(_QWORD *)(v16 + v17);
      *(_QWORD *)&v32 = v11;
      *((_QWORD *)&v32 + 1) = v28;
      v33 = v22;
      v34 = v31;
      v35 = v30;
      sub_2392C8FAC(v26, &v32, (uint64_t)v29, (uint64_t)v10);
      sub_239350E50();
      OCSignPostsAriadneDbgCode();
      kdebug_trace();
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v25)(v10, v4);
    }
  }
  return result;
}

uint64_t sub_2392C7A98(double *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  double v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *a1;
    sub_239268820((uint64_t)a1, (uint64_t)v4, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
    swift_beginAccess();
    sub_2392C6070((uint64_t)v4, v6);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

unint64_t sub_2392C7BA8(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t result;
  unint64_t v31;
  unint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t i;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  double v75;
  uint8_t *v76;
  void (*v77)(char *, uint64_t);
  id v78;
  char *v79;
  char *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint8_t *v84;
  unint64_t v85;
  void (*v86)(uint64_t);
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  void (*v91)(uint64_t);
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint8_t *v100;
  _QWORD *v101;
  int v102;
  int v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  int64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  id v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  int64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t *v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  double v136;
  uint64_t v137;

  v115 = sub_23925FB08(&qword_256929AA0);
  MEMORY[0x24BDAC7A8](v115);
  v116 = (int64_t *)((char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_239351F3C();
  v133 = *(_QWORD *)(v3 - 8);
  v134 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v127 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v132 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393520B0();
  v118 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v120 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v119 = (char *)&v109 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v110 = (char *)&v109 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v114 = (char *)&v109 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v117 = (char *)&v109 - v17;
  v18 = sub_23925FB08(&qword_256929AA8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (int64_t *)((char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v23 = (double *)((char *)&v109 - v22);
  v24 = sub_2393521F4();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v123 = (char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v109 - v28;
  v122 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v31 = result;
  v111 = v25;
  v112 = v24;
  v113 = v8;
  sub_239350E74();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v121 = v29;
  sub_2393521DC();
  v32 = v31;
  v33 = *(id *)(v31 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup);
  sub_2393525A8();

  v34 = v31 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotMetadataMap;
  swift_beginAccess();
  v35 = *(_QWORD *)v34;
  v36 = *(_QWORD *)(*(_QWORD *)v34 + 64);
  v124 = *(_QWORD *)v34 + 64;
  v37 = 1 << *(_BYTE *)(v35 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v131 = v32 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_url;
  v125 = v32;
  v40 = (uint64_t *)(v32 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_urlToShotIDMap);
  v128 = v35;
  swift_bridgeObjectRetain();
  v130 = v40;
  result = swift_beginAccess();
  v41 = 0;
  v126 = (unint64_t)(v37 + 63) >> 6;
  v109 = v126 - 1;
  v129 = xmmword_2393548B0;
  for (i = (uint64_t)v132; ; result = sub_2392688AC(i, type metadata accessor for ObjectCaptureSession.Metadata.Shot))
  {
    if (v39)
    {
      v43 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      v44 = v43 | (v41 << 6);
LABEL_9:
      v45 = *(_QWORD *)(v128 + 56);
      *v21 = *(_QWORD *)(*(_QWORD *)(v128 + 48) + 8 * v44);
      v46 = v45 + *(_QWORD *)(v127 + 72) * v44;
      v47 = sub_23925FB08(&qword_256929AB0);
      sub_239268820(v46, (uint64_t)v21 + *(int *)(v47 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v21, 0, 1, v47);
      goto LABEL_28;
    }
    v48 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v48 < v126)
    {
      v49 = *(_QWORD *)(v124 + 8 * v48);
      if (v49)
        goto LABEL_13;
      v50 = v41 + 2;
      ++v41;
      if (v48 + 1 < v126)
      {
        v49 = *(_QWORD *)(v124 + 8 * v50);
        if (v49)
          goto LABEL_16;
        v41 = v48 + 1;
        if (v48 + 2 < v126)
        {
          v49 = *(_QWORD *)(v124 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
LABEL_13:
            v39 = (v49 - 1) & v49;
            v44 = __clz(__rbit64(v49)) + (v48 << 6);
            v41 = v48;
            goto LABEL_9;
          }
          v50 = v48 + 3;
          v41 = v48 + 2;
          if (v48 + 3 < v126)
          {
            v49 = *(_QWORD *)(v124 + 8 * v50);
            if (!v49)
            {
              while (1)
              {
                v48 = v50 + 1;
                if (__OFADD__(v50, 1))
                  goto LABEL_57;
                if (v48 >= v126)
                {
                  v41 = v109;
                  goto LABEL_27;
                }
                v49 = *(_QWORD *)(v124 + 8 * v48);
                ++v50;
                if (v49)
                  goto LABEL_13;
              }
            }
LABEL_16:
            v48 = v50;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_27:
    v51 = sub_23925FB08(&qword_256929AB0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v21, 1, 1, v51);
    v39 = 0;
LABEL_28:
    sub_239268764((uint64_t)v21, (uint64_t)v23, &qword_256929AA8);
    v52 = sub_23925FB08(&qword_256929AB0);
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v23, 1, v52) == 1)
      break;
    v53 = *v23;
    sub_2392D05D0((uint64_t)v23 + *(int *)(v52 + 48), i);
    sub_23925FB08(&qword_2569278A0);
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v129;
    *(_QWORD *)(v54 + 32) = sub_239351F30();
    *(_QWORD *)(v54 + 40) = v55;
    v136 = COERCE_DOUBLE(sub_2392DEFE0(v53));
    v137 = v56;
    v57 = (void *)objc_opt_self();
    sub_239352380();
    v58 = v137;
    *(double *)(v54 + 48) = v136;
    *(_QWORD *)(v54 + 56) = v58;
    v59 = (void *)sub_239352434();
    swift_bridgeObjectRelease();
    v60 = objc_msgSend(v57, sel_pathWithComponents_, v59);

    sub_2393522F0();
    sub_239351EA0();
    swift_bridgeObjectRelease();
    v61 = *v130;
    if (*(_QWORD *)(*v130 + 16))
    {
      swift_bridgeObjectRetain();
      v62 = sub_2392CC8B0((uint64_t)v5);
      if ((v63 & 1) != 0)
      {
        v64 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v62);
        swift_bridgeObjectRelease();
        sub_2392CA380(v64, i, (uint64_t)v5);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    (*(void (**)(char *, uint64_t))(v133 + 8))(v5, v134);
  }
  swift_release();
  v65 = *(id *)(v125 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup);
  sub_2393525A8();

  sub_2393521DC();
  v66 = sub_2393521D0();
  result = sub_2393521D0();
  v67 = v66 - result;
  if (v66 < result)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return result;
  }
  v68 = sub_239275A60();
  v69 = v118;
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
  v71 = v117;
  v72 = v113;
  v70(v117, v68, v113);
  v73 = sub_239352098();
  v74 = sub_239352578();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (double)v67;
    v76 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v76 = 134349056;
    v136 = v75 / 1000000000.0;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v73, v74, "HEIC Writer: Update all images used %{public}f seconds.", v76, 0xCu);
    MEMORY[0x23B83BC04](v76, -1, -1);
  }

  v77 = *(void (**)(char *, uint64_t))(v69 + 8);
  v77(v71, v72);
  sub_239350E80();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v78 = v122;
  v79 = v120;
  if (v122 == (id)7)
  {
    if (*(uint64_t *)(v125 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten) < 1)
    {
      v96 = v110;
      v70(v110, v68, v72);
      v97 = sub_239352098();
      v98 = sub_239352578();
      if (os_log_type_enabled(v97, v98))
      {
        v99 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v99 = 0;
        _os_log_impl(&dword_23925B000, v97, v98, "HEIC Writer: Failed to write HEIC bundle, no files written!", v99, 2u);
        v100 = v99;
        v96 = v110;
        MEMORY[0x23B83BC04](v100, -1, -1);
      }

      v77(v96, v72);
      v85 = v125;
      v86 = *(void (**)(uint64_t))(v125
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
      if (v86)
      {
        v87 = (uint64_t)v116;
        *v116 = 0xD00000000000001DLL;
        *(_QWORD *)(v87 + 8) = 0x800000023935D5A0;
LABEL_49:
        swift_storeEnumTagMultiPayload();
        swift_retain();
        v86(v87);
        v85 = v125;
        sub_2392C373C((uint64_t)v86);
        sub_23925FE28(v87, &qword_256929AA0);
      }
    }
    else
    {
      v80 = v114;
      v70(v114, v68, v72);
      v81 = sub_239352098();
      v82 = sub_239352578();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v83 = 0;
        _os_log_impl(&dword_23925B000, v81, v82, "HEIC Writer: Successfully wrote HEIC bundle.", v83, 2u);
        v84 = v83;
        v80 = v114;
        MEMORY[0x23B83BC04](v84, -1, -1);
      }

      v77(v80, v72);
      v85 = v125;
      v86 = *(void (**)(uint64_t))(v125
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
      if (v86)
      {
        v87 = (uint64_t)v116;
        (*(void (**)(uint64_t *, unint64_t, uint64_t))(v133 + 16))(v116, v131, v134);
        goto LABEL_49;
      }
    }
  }
  else
  {
    v70(v119, v68, v72);
    sub_2392D0F0C(v78);
    v88 = sub_239352098();
    v89 = sub_23935256C();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      _os_log_impl(&dword_23925B000, v88, v89, "HEIC Writer: Failed to write HEIC bundle.", v90, 2u);
      MEMORY[0x23B83BC04](v90, -1, -1);
    }

    v77(v119, v72);
    v85 = v125;
    v91 = *(void (**)(uint64_t))(v125
                                         + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
    if (v91)
    {
      v92 = v122;
      v136 = *(double *)&v122;
      sub_2392D0F1C();
      swift_retain();
      v93 = sub_23935292C();
      v94 = (uint64_t)v116;
      *v116 = v93;
      *(_QWORD *)(v94 + 8) = v95;
      swift_storeEnumTagMultiPayload();
      v91(v94);
      v85 = v125;
      sub_2392C373C((uint64_t)v91);
      sub_2392D0F60(v92);
      sub_23925FE28(v94, &qword_256929AA0);
    }
    else
    {
      sub_2392D0F60(v122);
    }
  }
  v101 = (_QWORD *)(v85 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_heicWriteHandle);
  swift_beginAccess();
  v102 = OCNonModularSPI_CMPhoto_HeicWriteStop();
  v103 = OCNonModularSPI_CMPhoto_HeicWriteDestroy();
  *v101 = 0;
  v70(v79, v68, v72);
  v104 = sub_239352098();
  v105 = sub_239352578();
  if (os_log_type_enabled(v104, v105))
  {
    v106 = swift_slowAlloc();
    *(_DWORD *)v106 = 67240448;
    v135 = v102;
    sub_2393526B0();
    *(_WORD *)(v106 + 8) = 1026;
    v135 = v103;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v104, v105, "HEIC Writer: HEIC bundle writer stopped with state %{public}d and destroyed with state %{public}d", (uint8_t *)v106, 0xEu);
    MEMORY[0x23B83BC04](v106, -1, -1);
  }
  swift_release();

  v77(v79, v72);
  v107 = *(void (**)(char *, uint64_t))(v111 + 8);
  v108 = v112;
  v107(v123, v112);
  return ((uint64_t (*)(char *, uint64_t))v107)(v121, v108);
}

uint64_t sub_2392C8978()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_2392C89CC(v0);
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_2392C89CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v2 = sub_23925FB08(&qword_256929A90);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v30 - v6;
  v33 = a1;
  v8 = (unint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems);
  swift_beginAccess();
  v9 = *v8;
  v10 = *(_QWORD *)(*v8 + 64);
  v34 = *v8 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v14 = (unint64_t)(v11 + 63) >> 6;
  v31 = v14 - 1;
  v32 = v8;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v13)
    goto LABEL_8;
LABEL_6:
  v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v19 = v18 | (v16 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v9 + 48);
    v21 = sub_239352020();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v19, v21);
    v22 = *(_QWORD *)(v9 + 56);
    v23 = sub_23925FB08(&qword_256929A98);
    *(_QWORD *)&v5[*(int *)(v23 + 48)] = *(_QWORD *)(v22 + 8 * v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 0, 1, v23);
    swift_retain();
    while (1)
    {
      sub_239268764((uint64_t)v5, (uint64_t)v7, &qword_256929A90);
      v28 = sub_23925FB08(&qword_256929A98);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v7, 1, v28) == 1)
      {
        swift_release();
        *(_BYTE *)(v33 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_isWritingCancelled) = 1;
        v29 = sub_2392C5EDC(MEMORY[0x24BEE4AF8]);
        *v32 = v29;
        return swift_bridgeObjectRelease();
      }
      sub_239352218();
      swift_release();
      v17 = sub_239352020();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v7, v17);
      if (v13)
        goto LABEL_6;
LABEL_8:
      v24 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v24 < v14)
      {
        v25 = *(_QWORD *)(v34 + 8 * v24);
        if (v25)
          goto LABEL_11;
        v26 = v16 + 2;
        ++v16;
        if (v24 + 1 < v14)
        {
          v25 = *(_QWORD *)(v34 + 8 * v26);
          if (v25)
            goto LABEL_14;
          v16 = v24 + 1;
          if (v24 + 2 < v14)
          {
            v25 = *(_QWORD *)(v34 + 8 * (v24 + 2));
            if (v25)
            {
              v24 += 2;
              goto LABEL_11;
            }
            v26 = v24 + 3;
            v16 = v24 + 2;
            if (v24 + 3 < v14)
              break;
          }
        }
      }
LABEL_25:
      v27 = sub_23925FB08(&qword_256929A98);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 1, 1, v27);
      v13 = 0;
    }
    v25 = *(_QWORD *)(v34 + 8 * v26);
    if (v25)
    {
LABEL_14:
      v24 = v26;
LABEL_11:
      v13 = (v25 - 1) & v25;
      v19 = __clz(__rbit64(v25)) + (v24 << 6);
      v16 = v24;
      continue;
    }
    break;
  }
  while (1)
  {
    v24 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v24 >= v14)
    {
      v16 = v31;
      goto LABEL_25;
    }
    v25 = *(_QWORD *)(v34 + 8 * v24);
    ++v26;
    if (v25)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2392C8D04()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems;
  swift_beginAccess();
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v5 = *(os_unfair_lock_s **)(v0 + v1);
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  return v4;
}

uint64_t sub_2392C8DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v6 = sub_239352020();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v10;
  *v10 = 0x8000000000000000;
  sub_2392CE17C(a3, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *v10 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_endAccess();
}

uint64_t sub_2392C8EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v6 = sub_239292F4C(a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  v8 = 0;
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v5;
    v14 = *v5;
    *v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2392CECE0();
      v10 = v14;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = sub_239352020();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v6, v12);
    v8 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v6);
    sub_2392CDB44(v6, v14);
    *v5 = v14;
    swift_bridgeObjectRelease();
  }
  *a3 = v8;
  return swift_endAccess();
}

uint64_t sub_2392C8FAC(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD aBlock[6];
  __int128 v87;
  __int128 v88;
  uint64_t v89;

  v5 = v4;
  v71 = a4;
  v70 = a3;
  v73 = a1;
  v64 = sub_2393520B0();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v77 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_239352170();
  MEMORY[0x24BDAC7A8](v75);
  v74 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239351F3C();
  v10 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  v82 = v10;
  v69 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v12;
  v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v68 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v68 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v66 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_239352020();
  v79 = *(_QWORD **)(v83 - 8);
  v15 = v79[8];
  v16 = MEMORY[0x24BDAC7A8](v83);
  v76 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v60 - v18;
  v65 = (char *)&v60 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v60 - v20;
  v22 = a2[1];
  v87 = *a2;
  v88 = v22;
  v89 = *((_QWORD *)a2 + 4);
  v60 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  v23 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  swift_retain();
  os_unfair_lock_lock(v23 + 4);
  sub_2392C9738(v5);
  os_unfair_lock_unlock(v23 + 4);
  swift_release();
  sub_239352014();
  v24 = swift_allocObject();
  v78 = v24;
  *(_QWORD *)(v24 + 16) = 0;
  v72 = (uint64_t *)(v24 + 16);
  v25 = swift_allocObject();
  v62 = v5;
  swift_weakInit();
  v26 = v79;
  v27 = (void (*)(char *, uint64_t, uint64_t))v79[2];
  v80 = v21;
  v28 = v83;
  v61 = v27;
  v27(v19, (uint64_t)v21, v83);
  sub_239268820(v70, (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v29 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v12, v71, v81);
  v30 = (*((unsigned __int8 *)v26 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v26 + 80);
  v31 = (v15 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (*(unsigned __int8 *)(v68 + 80) + v32 + 40) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v34 = (v14 + *(unsigned __int8 *)(v29 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v35 = (v69 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v25;
  ((void (*)(unint64_t, char *, uint64_t))v26[4])(v36 + v30, v65, v28);
  *(_QWORD *)(v36 + v31) = v78;
  v37 = v36 + v32;
  *(_QWORD *)(v37 + 32) = v89;
  v38 = v88;
  *(_OWORD *)v37 = v87;
  *(_OWORD *)(v37 + 16) = v38;
  sub_2392D05D0(v66, v36 + v33);
  (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v36 + v34, v67, v81);
  *(_QWORD *)(v36 + v35) = v73;
  aBlock[4] = sub_2392D0DE0;
  aBlock[5] = v36;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5C28;
  _Block_copy(aBlock);
  v85 = MEMORY[0x24BEE4AF8];
  swift_retain();
  swift_retain();
  sub_2392D0E8C((uint64_t)&v87);
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  sub_239352224();
  swift_allocObject();
  v39 = sub_23935220C();
  swift_release();
  swift_release();
  v40 = v72;
  swift_beginAccess();
  *v40 = v39;
  swift_release();
  v41 = *v40;
  if (*v40)
  {
    v42 = v62;
    v43 = *(os_unfair_lock_s **)(v62 + v60);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v43 + 4);
    v44 = (uint64_t)v80;
    sub_2392C8DA0(v42, (uint64_t)v80, v41);
    os_unfair_lock_unlock(v43 + 4);
    swift_release();
    dispatch_group_enter(*(dispatch_group_t *)(v42
                                             + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup));
    sub_239352608();
    v45 = sub_239275A60();
    v46 = v63;
    v47 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v77, v45, v64);
    v61(v76, v44, v83);
    v48 = sub_239352098();
    v49 = sub_239352554();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v85 = v51;
      *(_DWORD *)v50 = 136315138;
      v52 = v76;
      v53 = sub_239351FF0();
      v84 = sub_23925F3EC(v53, v54, &v85);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      v55 = (void (*)(char *, uint64_t))v79[1];
      v56 = v83;
      v55(v52, v83);
      _os_log_impl(&dword_23925B000, v48, v49, "HEIC Writer: Save work item submitted: %s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v51, -1, -1);
      MEMORY[0x23B83BC04](v50, -1, -1);
      swift_release();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v77, v64);
      v55(v80, v56);
    }
    else
    {
      swift_release();

      v57 = (void (*)(char *, uint64_t))v79[1];
      v58 = v83;
      v57(v76, v83);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v77, v47);
      v57(v80, v58);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t))v26[1])(v80, v83);
  }
  return swift_release();
}

uint64_t sub_2392C9738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_isWritingCancelled) == 1)
  {
    v7 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
    v8 = sub_239352098();
    v9 = sub_23935256C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23925B000, v8, v9, "HEIC Writer: Writer is cancelled!", v10, 2u);
      MEMORY[0x23B83BC04](v10, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_2392C9848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE v41[16];
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[2];
  uint64_t v52;

  v48 = a6;
  v45 = a5;
  v49 = a2;
  v43 = type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0);
  MEMORY[0x24BDAC7A8](v43);
  v44 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_239352020();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_2393520B0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v41[-v16];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    v47 = a4;
    swift_beginAccess();
    v46 = (_QWORD *)(a3 + 16);
    if (*(_QWORD *)(a3 + 16) && (swift_retain(), v20 = sub_239352200(), swift_release(), (v20 & 1) == 0))
    {
      v33 = v47;
      v34 = v48;
      v35 = *(_OWORD *)(v47 + 16);
      v51[0] = *(_OWORD *)v47;
      v51[1] = v35;
      v52 = *(_QWORD *)(v47 + 32);
      sub_2392CB474((uint64_t *)v51, v45, v48);
      sub_2392C68A4();
      v36 = *(_QWORD *)(v19 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID);
      v37 = v43;
      v38 = v44;
      v39 = &v44[*(int *)(v43 + 20)];
      v40 = sub_239351F3C();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v39, v34, v40);
      *v38 = v36;
      *(_OWORD *)((char *)v38 + *(int *)(v37 + 24)) = xmmword_239355A40;
      sub_2393520D4();
      swift_release();
      sub_2392688AC((uint64_t)v38, type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo);
      v23 = v49;
    }
    else
    {
      v21 = sub_239275A60();
      v48 = v14;
      v22 = v13;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
      v23 = v49;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v12, v49, v9);
      v24 = sub_239352098();
      v25 = sub_239352554();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v45 = v19;
        v27 = (uint8_t *)v26;
        v28 = swift_slowAlloc();
        v42 = v22;
        v29 = v28;
        *(_QWORD *)&v51[0] = v28;
        *(_DWORD *)v27 = 136315138;
        v44 = v27 + 4;
        v30 = sub_239351FF0();
        v50 = sub_23925F3EC(v30, v31, (uint64_t *)v51);
        v23 = v49;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
        _os_log_impl(&dword_23925B000, v24, v25, "HEIC Writer: Save work item cancelled: %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v29, -1, -1);
        v32 = v27;
        v19 = v45;
        MEMORY[0x23B83BC04](v32, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v17, v42);
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);

        (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v17, v22);
      }
      v33 = v47;
    }
    sub_2392C9F98(v19, v23, v46, v33);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392C9F98(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];

  v43 = (uint64_t *)a4;
  v44 = sub_239352020();
  v7 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - v14;
  v16 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  v41 = a1;
  v45 = a1;
  v46 = a2;
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  sub_2392D0B94(v49);
  os_unfair_lock_unlock(v16 + 4);
  swift_release();
  swift_release();
  swift_beginAccess();
  *a3 = 0;
  swift_release();
  v17 = sub_239275A60();
  v40 = v11;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19 = v10;
  v18(v15, v17, v10);
  v39 = v7;
  v20 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v44);
  v21 = sub_239352098();
  v22 = sub_239352554();
  if (os_log_type_enabled(v21, v22))
  {
    v38 = v19;
    v23 = swift_slowAlloc();
    v37 = v18;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v48 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_239351FF0();
    v47 = sub_23925F3EC(v26, v27, &v48);
    v28 = v38;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v44);
    _os_log_impl(&dword_23925B000, v21, v22, "HEIC Writer: Save work item removed from active: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v25, -1, -1);
    v29 = v24;
    v18 = v37;
    MEMORY[0x23B83BC04](v29, -1, -1);

    v30 = *(void (**)(char *, uint64_t))(v40 + 8);
    v19 = v28;
    v30(v15, v28);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v44);

    v30 = *(void (**)(char *, uint64_t))(v40 + 8);
    v30(v15, v19);
  }
  dispatch_group_leave(*(dispatch_group_t *)(v41
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup));
  v31 = v42;
  v18(v42, v17, v19);
  v32 = v43;
  sub_2392D0E8C((uint64_t)v43);
  v33 = sub_239352098();
  v34 = sub_239352554();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v35 = 134349056;
    v48 = *v32;
    sub_2393526B0();
    sub_2392D0ECC((uint64_t)v32);
    _os_log_impl(&dword_23925B000, v33, v34, "HEIC Writer: High-resolution pixel buffer %{public}f released after saving HEIC.", v35, 0xCu);
    MEMORY[0x23B83BC04](v35, -1, -1);
  }
  else
  {
    sub_2392D0ECC((uint64_t)v32);
  }

  return ((uint64_t (*)(char *, uint64_t))v30)(v31, v19);
}

uint64_t sub_2392CA380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD aBlock[7];

  v66 = a2;
  v67 = a3;
  v69 = a1;
  v59 = sub_2393520B0();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v73 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_239352170();
  MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_239351F3C();
  v75 = *(_QWORD *)(v65 - 8);
  v6 = *(_QWORD *)(v75 + 64);
  MEMORY[0x24BDAC7A8](v65);
  v61 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v64 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v64 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239352020();
  v10 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  v77 = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v72 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v55 - v14;
  v60 = (char *)&v55 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v55 - v16;
  v55 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  v18 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  swift_retain();
  os_unfair_lock_lock(v18 + 4);
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  sub_239352014();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  v68 = (uint64_t *)(v19 + 16);
  v62 = swift_allocObject();
  v57 = v3;
  swift_weakInit();
  v20 = v77;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  v74 = v17;
  v56 = v21;
  v21(v15, (uint64_t)v17, v9);
  v22 = v63;
  sub_239268820(v66, v63, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v23 = v75;
  v24 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v67, v65);
  v25 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v26 = (v11 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (*(unsigned __int8 *)(v64 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v28 = (v8 + *(unsigned __int8 *)(v23 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v62;
  v31 = v30 + v25;
  v32 = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v31, v60, v76);
  *(_QWORD *)(v30 + v26) = v19;
  v33 = v19;
  sub_2392D05D0(v22, v30 + v27);
  (*(void (**)(unint64_t, char *, uint64_t))(v75 + 32))(v30 + v28, v61, v24);
  *(_QWORD *)(v30 + v29) = v69;
  aBlock[4] = sub_2392D0614;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5BD8;
  _Block_copy(aBlock);
  v79 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  swift_retain();
  swift_retain();
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  sub_239352224();
  swift_allocObject();
  v34 = sub_23935220C();
  swift_release();
  swift_release();
  v35 = v68;
  swift_beginAccess();
  *v35 = v34;
  swift_release();
  v36 = *v35;
  if (*v35)
  {
    v37 = v57;
    v38 = *(os_unfair_lock_s **)(v57 + v55);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v38 + 4);
    v39 = (uint64_t)v74;
    sub_2392C8DA0(v37, (uint64_t)v74, v36);
    os_unfair_lock_unlock(v38 + 4);
    swift_release();
    sub_239352608();
    dispatch_group_enter(*(dispatch_group_t *)(v37
                                             + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup));
    v40 = sub_239275A60();
    v41 = v58;
    v42 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v73, v40, v59);
    v56(v72, v39, v76);
    v43 = sub_239352098();
    v44 = sub_239352554();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v79 = v46;
      *(_DWORD *)v45 = 136315138;
      v75 = v33;
      v47 = v72;
      v48 = sub_239351FF0();
      v78 = sub_23925F3EC(v48, v49, &v79);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      v50 = v76;
      v51 = *(void (**)(char *, uint64_t))(v77 + 8);
      v51(v47, v76);
      _os_log_impl(&dword_23925B000, v43, v44, "HEIC Writer: Update work item submitted: %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v46, -1, -1);
      MEMORY[0x23B83BC04](v45, -1, -1);
      swift_release();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v73, v59);
      v51(v74, v50);
    }
    else
    {
      swift_release();

      v52 = v76;
      v53 = *(void (**)(char *, uint64_t))(v77 + 8);
      v53(v72, v76);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v73, v42);
      v53(v74, v52);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v74, v76);
  }
  return swift_release();
}

uint64_t sub_2392CAA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[4];

  v46 = a5;
  v47 = a2;
  v44 = a4;
  v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0);
  MEMORY[0x24BDAC7A8](v43);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2393520B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v39 - v17;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v41 = v9;
    swift_beginAccess();
    v45 = (_QWORD *)(a3 + 16);
    if (*(_QWORD *)(a3 + 16) && (swift_retain(), v21 = sub_239352200(), swift_release(), (v21 & 1) == 0))
    {
      v33 = v46;
      sub_2392D06CC(v44, v46);
      sub_2392C68A4();
      v34 = *(_QWORD *)(v20 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID);
      v35 = v43;
      v36 = v41;
      v37 = (char *)v41 + *(int *)(v43 + 20);
      v38 = sub_239351F3C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v37, v33, v38);
      *v36 = v34;
      *(_OWORD *)((char *)v36 + *(int *)(v35 + 24)) = xmmword_239355A40;
      sub_2393520D4();
      swift_release();
      sub_2392688AC((uint64_t)v36, type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo);
      v23 = v47;
    }
    else
    {
      v22 = sub_239275A60();
      v44 = v15;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v22, v14);
      v23 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v47, v10);
      v24 = sub_239352098();
      v25 = sub_239352554();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v40 = v20;
        v27 = (uint8_t *)v26;
        v28 = swift_slowAlloc();
        v46 = v14;
        v29 = v28;
        v48[0] = v28;
        *(_DWORD *)v27 = 136315138;
        v43 = (uint64_t)(v27 + 4);
        v30 = sub_239351FF0();
        v48[2] = sub_23925F3EC(v30, v31, v48);
        v23 = v47;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        _os_log_impl(&dword_23925B000, v24, v25, "HEIC Writer: Update work item cancelled: %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v29, -1, -1);
        v32 = v27;
        v20 = v40;
        MEMORY[0x23B83BC04](v32, -1, -1);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v46);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v14);
      }
    }
    sub_2392CB1D0(v20, v23, v45);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392CB1D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v28 = a3;
  v5 = sub_239352020();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2393520B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  v27 = a1;
  v29 = a1;
  v30 = a2;
  swift_retain();
  os_unfair_lock_lock(v13 + 4);
  sub_2392D0B94(v32);
  os_unfair_lock_unlock(v13 + 4);
  swift_release();
  swift_release();
  v14 = sub_239275A60();
  v25 = v10;
  v26 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v9);
  v23 = v6;
  v24 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v15 = sub_239352098();
  v16 = sub_239352554();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v32[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_239351FF0();
    v31 = sub_23925F3EC(v19, v20, v32);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
    _os_log_impl(&dword_23925B000, v15, v16, "HEIC Writer: Update work item removed from active: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v18, -1, -1);
    MEMORY[0x23B83BC04](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
  }

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  dispatch_group_leave(*(dispatch_group_t *)(v27
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup));
  v21 = v28;
  swift_beginAccess();
  *v21 = 0;
  return swift_release();
}

void sub_2392CB474(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  __CVBuffer *v19;
  id v20;
  __CVBuffer *v21;
  int v22;
  __CVBuffer *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  size_t Width;
  size_t Height;
  __CVBuffer *v29;
  id v30;
  id v31;
  id v32;
  __CVBuffer *v33;
  id v34;
  id v35;
  _OWORD *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  _QWORD *v56;
  unint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  _QWORD *v76;
  void *v77;
  id v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  void *v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  char v100;
  char v101;
  __int128 v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  void *v110;
  void *v111;
  id v112;
  void *v113;
  id v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  int v121;
  int *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  char *v126;
  void *v127;
  void (*v128)(char *, uint64_t);
  id v129;
  char *v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  id v154;
  void *v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  BOOL v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(char *, uint64_t, uint64_t);
  uint64_t v166;
  char *v167;
  id v168;
  __CVBuffer *v169;
  id v170;
  id v171;
  id v172;
  __CVBuffer *v173;
  id v174;
  id v175;
  NSObject *v176;
  os_log_type_t v177;
  uint8_t *v178;
  __CVBuffer *v179;
  char *v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  _QWORD *v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _OWORD *v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  id v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  _QWORD *v208;
  _OWORD v209[10];
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  _OWORD v214[10];
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  id v219;
  _BYTE v220[160];
  _BYTE v221[128];
  id v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  int v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  id v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  int v248;
  __int128 v249;
  __int128 v250;
  _BYTE v251[160];
  _BYTE v252[128];
  __CVBuffer *v253;
  uint64_t v254;

  v193 = a3;
  v254 = *MEMORY[0x24BDAC8D0];
  v198 = sub_2393520B0();
  v6 = *(_QWORD *)(v198 - 8);
  MEMORY[0x24BDAC7A8](v198);
  v8 = (char *)&v179 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v179 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_239352020();
  v194 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v192 = (char *)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v14 = MEMORY[0x24BDAC7A8](v205);
  v202 = (uint64_t)&v179 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v195 = (uint64_t)&v179 - v16;
  v17 = *a1;
  v19 = (__CVBuffer *)a1[1];
  v18 = (void *)a1[2];
  v20 = (id)a1[3];
  v199 = (id)a1[4];
  v203 = v18;
  v204 = v20;
  if (v18)
  {
    v21 = v18;
    if (!sub_2392962D4(v21))
      goto LABEL_23;

    v20 = v204;
  }
  if (v20)
  {
    v21 = (__CVBuffer *)v20;
    if (sub_239296494(v21))
    {

      goto LABEL_7;
    }
LABEL_23:
    sub_2392CF194();
    swift_allocError();
    *v55 = 0;
    v55[1] = 0;
    swift_willThrow();

    return;
  }
LABEL_7:
  v200 = a2 + *(int *)(v205 + 28);
  sub_239268764(v200, (uint64_t)v251, &qword_25692A8C0);
  sub_239268764((uint64_t)v251, (uint64_t)v252, &qword_25692A8C0);
  v22 = sub_2392687A8((uint64_t)v252);
  v190 = v11;
  if (v22 != 1)
  {
    v23 = v253;
    if (v253)
    {
      sub_239268764((uint64_t)v251, (uint64_t)&v223, &qword_25692A8C0);
      v24 = (id)v231;
      if (!sub_239296354(v23)
        || (v25 = v12, v26 = a2, Width = CVPixelBufferGetWidth(v23), Width != CVPixelBufferGetWidth(v19))
        || (a2 = v26, v12 = v25, Height = CVPixelBufferGetHeight(v23), Height != CVPixelBufferGetHeight(v19)))
      {
        sub_2392CF194();
        swift_allocError();
        *v56 = 0;
        v56[1] = 0;
        swift_willThrow();
        sub_2392D0230((uint64_t)v251);
        return;
      }
      sub_2392D0230((uint64_t)v251);
    }
  }
  v183 = v12;
  v189 = v3;
  v230 = 0;
  v228 = 0u;
  v229 = 0u;
  v226 = 0u;
  v227 = 0u;
  v224 = 0u;
  v225 = 0u;
  v223 = 0u;
  v231 = 0u;
  v232 = 0u;
  v233 = 0u;
  v234 = 0;
  v235 = 0u;
  v236 = 0u;
  v237 = 0u;
  v238 = 0u;
  v239 = 0u;
  v240 = 0u;
  v241 = 0u;
  v242 = 0u;
  v243 = 0u;
  v244 = 0u;
  v245 = 0u;
  v246 = 0u;
  v247 = 0u;
  v248 = 0;
  v249 = 0u;
  v250 = 0u;
  v29 = objc_retainAutorelease(v19);
  *(_QWORD *)&v223 = v29;
  if (v203)
  {
    v30 = objc_retainAutorelease(v203);
    *(_QWORD *)&v224 = v203;
  }
  if (v204)
  {
    v31 = objc_retainAutorelease(v204);
    *((_QWORD *)&v224 + 1) = v204;
  }
  v180 = v8;
  v196 = v6;
  sub_239268764(v200, (uint64_t)v220, &qword_25692A8C0);
  sub_239268764((uint64_t)v220, (uint64_t)v221, &qword_25692A8C0);
  if (sub_2392687A8((uint64_t)v221) != 1)
  {
    v32 = v222;
    if (v222)
    {
      v33 = v29;
      v34 = objc_retainAutorelease(v222);
      sub_239268764((uint64_t)v220, (uint64_t)&v215, &qword_25692A8C0);
      v35 = v219;

      v29 = v33;
      *(_QWORD *)&v225 = v32;
    }
  }
  v36 = (_OWORD *)(a2 + *(int *)(v205 + 20));
  v37 = v36[1];
  v231 = *v36;
  v232 = v37;
  v38 = v36[3];
  v233 = v36[2];
  v39 = v36[4];
  v40 = v36[5];
  v197 = v36;
  v41 = v36[6];
  v226 = v38;
  v227 = v39;
  v228 = v40;
  v229 = v41;
  v42 = *(int *)(v205 + 40);
  v191 = a2;
  v43 = a2 + v42;
  v44 = *(_QWORD *)v43;
  v45 = *(_QWORD *)(v43 + 8);
  v46 = *(_QWORD *)(v43 + 16);
  v47 = *(_BYTE *)(v43 + 24);
  v179 = v29;
  v48 = sub_2392C577C(v29, v44, v45, v46, v47);
  v49 = sub_2393522F0();
  v51 = v50;
  if (v48[2])
  {
    v52 = v49;
    swift_bridgeObjectRetain();
    v53 = sub_23925FAA4(v52, v51);
    if ((v54 & 1) != 0)
    {
      sub_23925FB48(v48[7] + 32 * v53, (uint64_t)&v215);
    }
    else
    {
      v215 = 0u;
      v216 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v215 = 0u;
    v216 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v216 + 1))
  {
    sub_23925FB08(&qword_256927010);
    if (swift_dynamicCast())
    {
      v57 = *(_QWORD *)&v214[0];
      goto LABEL_33;
    }
  }
  else
  {
    sub_23925FE28((uint64_t)&v215, (uint64_t *)&unk_25692A930);
  }
  v57 = sub_23925DBD8(MEMORY[0x24BEE4AF8]);
LABEL_33:
  v58 = (void *)OCNonModularSPI_AppleMakerNote_Timestamp();
  if (!v58)
  {
    __break(1u);
    goto LABEL_110;
  }
  v59 = v58;
  v51 = sub_2393522F0();
  v61 = v60;

  *((_QWORD *)&v216 + 1) = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v215 = v17;
  sub_23925FDD4(&v215, v214);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v210 = v57;
  sub_2392CDDE4(v214, v51, v61, isUniquelyReferenced_nonNull_native);
  v63 = (_QWORD *)v210;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v64 = (void *)OCNonModularSPI_AppleMakerNote_Camera();
  if (!v64)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  v65 = v64;
  v66 = sub_2393522F0();
  v68 = v67;

  v69 = OCNonModularSPI_AppleMakerNote_BackWideAngleCamera();
  v211 = MEMORY[0x24BEE3F88];
  LODWORD(v210) = v69;
  sub_23925FDD4(&v210, v209);
  v70 = swift_isUniquelyReferenced_nonNull_native();
  v208 = v63;
  sub_2392CDDE4(v209, v66, v68, v70);
  v71 = v208;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = sub_2393522F0();
  v74 = v73;
  v181 = sub_23925FB08(&qword_256927010);
  v211 = v181;
  *(_QWORD *)&v210 = v71;
  sub_23925FDD4(&v210, v209);
  v184 = v71;
  swift_bridgeObjectRetain();
  v75 = swift_isUniquelyReferenced_nonNull_native();
  v208 = v48;
  sub_2392CDDE4(v209, v72, v74, v75);
  v76 = v208;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v77 = (void *)sub_239352260();
  v182 = v76;
  swift_bridgeObjectRelease();
  v78 = objc_retainAutorelease(v77);

  *((_QWORD *)&v223 + 1) = v78;
  v79 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  LOBYTE(v230) = sub_2392C55F8();
  v230 = v230;
  OCNonModularSPI_Serialization_InvalidObjectTransform();
  v239 = v80;
  v240 = v81;
  v241 = v82;
  v242 = v83;
  sub_239268764(v200, (uint64_t)v214, &qword_25692A8C0);
  v84 = v191;
  v85 = v195;
  sub_239268820(v191, v195, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  sub_239268764((uint64_t)v214, (uint64_t)&v215, &qword_25692A8C0);
  if (sub_2392687A8((uint64_t)&v215) == 1)
  {
    v86 = (int *)v205;
    v87 = v85 + *(int *)(v205 + 32);
    v88 = v196;
    if ((*(_BYTE *)(v87 + 73) & 1) != 0)
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      v187 = v90;
      v188 = v89;
      v185 = v92;
      v186 = v91;
    }
    else
    {
      v188 = *(_OWORD *)v87;
      v187 = *(_OWORD *)(v87 + 16);
      v186 = *(_OWORD *)(v87 + 32);
      v185 = *(_OWORD *)(v87 + 48);
    }
  }
  else
  {
    v187 = v216;
    v188 = v215;
    v185 = v218;
    v186 = v217;
    v88 = v196;
    v86 = (int *)v205;
  }
  sub_2392688AC(v85, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v243 = v188;
  v244 = v187;
  v245 = v186;
  v246 = v185;
  v93 = *(void **)(v84 + v86[11]);
  if (v93)
  {
    v94 = v93;
    v95 = *(_QWORD *)(sub_239352530() + 16);
    swift_bridgeObjectRelease();
    if (v95)
    {
      v96 = *(_QWORD *)(sub_239352530() + 16);
      swift_bridgeObjectRelease();
      if (v96 >> 58)
      {
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      *(_QWORD *)&v210 = sub_2392CFDD8(32 * v96);
      *((_QWORD *)&v210 + 1) = v97;
      v98 = v94;
      v99 = v189;
      sub_2392CFF0C((uint64_t)&v210);
      v101 = v100;
      v189 = v99;

      v102 = v210;
      if ((v101 & 1) != 0)
      {
        v103 = (id)sub_239351F60();

        sub_23927DAE0(v102, *((unint64_t *)&v102 + 1));
        v104 = v103;

        *(_QWORD *)&v247 = v104;
      }
      else
      {
        sub_23927DAE0(v210, *((unint64_t *)&v210 + 1));

      }
      v84 = v191;
    }
    else
    {

    }
  }
  v105 = v199;
  if (v199)
  {
    v106 = objc_retainAutorelease(v199);
    *((_QWORD *)&v225 + 1) = v105;
  }
  v107 = *(void **)((char *)v197 + *(int *)(v79 + 28));
  if (!v107)
  {
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  v51 = v79;
  v108 = v107;
  v109 = (id)OCNonModularSPI_AVCameraCalibrationData_CreateDictionaryFrom();
  if (!v109)
  {
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  v110 = v109;
  sub_239352284();
  swift_bridgeObjectRelease();

  v111 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  v112 = objc_retainAutorelease(v111);

  v234 = v112;
  v88 = v196;
  v84 = v191;
  v86 = (int *)v205;
LABEL_54:
  sub_239351B38();
  swift_bridgeObjectRetain();
  v113 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v114 = objc_retainAutorelease(v113);

  *((_QWORD *)&v247 + 1) = v114;
  sub_239268764(v200, (uint64_t)v209, &qword_25692A8C0);
  sub_239268764((uint64_t)v209, (uint64_t)&v210, &qword_25692A8C0);
  LODWORD(v114) = sub_2392687A8((uint64_t)&v210);
  v115 = v212;
  v116 = v213;
  sub_239268820(v84, v202, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  if ((_DWORD)v114 != 1 && (v116 & 1) == 0)
  {
    sub_2392688AC(v202, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v117 = v194;
    goto LABEL_59;
  }
  v118 = v202 + v86[8];
  v115 = *(_QWORD *)(v118 + 64);
  v119 = *(_BYTE *)(v118 + 72);
  v120 = *(_BYTE *)(v118 + 73);
  sub_2392688AC(v202, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v121 = -1;
  if ((v120 & 1) == 0)
  {
    v117 = v194;
    if ((v119 & 1) != 0)
      goto LABEL_61;
LABEL_59:
    if (v115 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else
    {
      v121 = v115;
      if (v115 <= 0x7FFFFFFF)
        goto LABEL_61;
    }
    __break(1u);
    goto LABEL_91;
  }
  v117 = v194;
LABEL_61:
  v248 = v121;
  v122 = v86;
  v123 = (uint64_t)v190;
  sub_23926059C(v84 + v86[6], (uint64_t)v190, &qword_2569281C0);
  v124 = v183;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v123, 1, v183) == 1)
  {
    sub_23925FE28(v123, &qword_2569281C0);
  }
  else
  {
    v125 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 32);
    v205 = v79;
    v126 = v192;
    v125(v192, v123, v124);
    sub_239351FF0();
    v127 = (void *)sub_2393522CC();
    swift_bridgeObjectRelease();
    v128 = *(void (**)(char *, uint64_t))(v117 + 8);
    v129 = objc_retainAutorelease(v127);
    v130 = v126;
    v88 = v196;
    v79 = v205;
    v128(v130, v124);

    *(_QWORD *)&v249 = v129;
  }
  v131 = *(unsigned __int8 *)(v84 + v122[9]);
  if (v131 != 2)
  {
    LOBYTE(v208) = v131 & 1;
    v132 = ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter();
    if (v132 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (v132 <= 0x7FFFFFFF)
        goto LABEL_68;
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  LODWORD(v132) = -1;
LABEL_68:
  DWORD2(v249) = v132;
  v133 = v84 + v122[12];
  if ((*(_BYTE *)(v133 + 8) & 1) != 0)
  {
    LODWORD(v134) = -1;
  }
  else
  {
    v134 = *(_QWORD *)v133;
    if (v134 < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    if (v134 > 0x7FFFFFFF)
    {
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
  }
  HIDWORD(v249) = v134;
  v135 = (char *)v197 + *(int *)(v79 + 32);
  if ((v135[64] & 1) == 0)
  {
    v137 = *((_OWORD *)v135 + 1);
    v136 = *((_OWORD *)v135 + 2);
    v138 = *(_OWORD *)v135;
    v140 = *((_QWORD *)v135 + 6);
    v139 = *((_QWORD *)v135 + 7);
    v235 = v138;
    v236 = v137;
    v237 = v136;
    *((_QWORD *)&v238 + 1) = v139;
    *(_QWORD *)&v238 = v140;
  }
  v205 = *(_QWORD *)(v84 + v122[13]);
  v141 = v205;
  if (!(v205 >> 62))
  {
    v51 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFF8) + 0x10);
    v142 = v201;
    if (!v51)
      goto LABEL_102;
    swift_bridgeObjectRetain();
    goto LABEL_77;
  }
LABEL_93:
  swift_bridgeObjectRetain();
  v151 = sub_239352854();
  swift_bridgeObjectRelease();
  if (v151)
  {
    swift_bridgeObjectRetain();
    v152 = sub_239352854();
    if (!v152)
    {
LABEL_100:
      swift_bridgeObjectRelease();
      v153 = (void *)sub_239352434();
      swift_bridgeObjectRelease();
      v154 = objc_retainAutorelease(v153);

      *(_QWORD *)&v250 = v154;
      v88 = v196;
      goto LABEL_101;
    }
    v51 = v152;
    if (v152 < 1)
    {
      __break(1u);
      goto LABEL_97;
    }
LABEL_112:
    v141 = v205;
LABEL_77:
    v143 = 0;
    v144 = v141 & 0xC000000000000001;
    v145 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if (v144)
      {
        v146 = MEMORY[0x23B83A68C](v143, v141);
      }
      else
      {
        v146 = *(_QWORD *)(v141 + 8 * v143 + 32);
        swift_retain();
      }
      v147 = (*(uint64_t (**)(void))(*(_QWORD *)v146 + 192))();
      if (v147)
      {
        v148 = v147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v145 = sub_2392CC7A4(0, v145[2] + 1, 1, v145);
        v150 = v145[2];
        v149 = v145[3];
        if (v150 >= v149 >> 1)
          v145 = sub_2392CC7A4((_QWORD *)(v149 > 1), v150 + 1, 1, v145);
        v145[2] = v150 + 1;
        v145[v150 + 4] = v148;
        v141 = v205;
      }
      ++v143;
      swift_release();
    }
    while (v51 != v143);
    goto LABEL_100;
  }
LABEL_101:
  v142 = v201;
LABEL_102:
  swift_beginAccess();
  v155 = (void *)sub_239351ED0();
  v156 = OCNonModularSPI_CMPhoto_write();

  v157 = v198;
  if (v156)
  {
    swift_bridgeObjectRelease();
    v206 = 0;
    v207 = 0xE000000000000000;
    sub_2393527C4();
    sub_239352380();
    sub_2393524D0();
    v158 = v206;
    v159 = v207;
    sub_2392CF194();
    swift_allocError();
    *v160 = v158;
    v160[1] = v159;
    swift_willThrow();
  }
  else
  {
    v161 = *(_QWORD *)(v142 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten);
    v162 = __OFADD__(v161, 1);
    v163 = v161 + 1;
    if (v162)
      __break(1u);
    *(_QWORD *)(v142 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten) = v163;
    v164 = sub_239275A60();
    v165 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
    v166 = v88;
    v167 = v180;
    v165(v180, v164, v157);
    v168 = v199;
    v169 = v179;
    v170 = v203;
    v171 = v204;
    v172 = v168;
    v173 = v169;
    v174 = v170;
    v175 = v171;
    v176 = sub_239352098();
    v177 = sub_239352578();
    if (os_log_type_enabled(v176, v177))
    {
      v178 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v178 = 134349056;
      v206 = v17;
      sub_2393526B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v176, v177, "HEIC Writer: Successfully saved image HEIC file at time = %{public}f", v178, 0xCu);
      MEMORY[0x23B83BC04](v178, -1, -1);

      (*(void (**)(char *, uint64_t))(v196 + 8))(v167, v198);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v198);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_2392CC540(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_23925FB08(&qword_2569278A0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v2 + 32) = sub_239351F30();
  *(_QWORD *)(v2 + 40) = v3;
  v10 = sub_2392DEFE0(a1);
  v11 = v4;
  v5 = (void *)objc_opt_self();
  sub_239352380();
  *(_QWORD *)(v2 + 48) = v10;
  *(_QWORD *)(v2 + 56) = v11;
  v6 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_pathWithComponents_, v6);

  v8 = sub_2393522F0();
  return v8;
}

uint64_t ObjectCaptureHEICBundleWriter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_url;
  v2 = sub_239351F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_2392C373C(*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ObjectCaptureHEICBundleWriter.__deallocating_deinit()
{
  ObjectCaptureHEICBundleWriter.deinit();
  return swift_deallocClassInstance();
}

_QWORD *sub_2392CC7A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_256929A80);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2392D0290(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_2392CC8B0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_239351F3C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0];
  sub_239262570(&qword_2569295D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  v3 = sub_239352290();
  return sub_2392CE4F4(a1, v3, v2, &qword_2569295D8, MEMORY[0x24BDCDB00]);
}

unint64_t sub_2392CC948(double a1)
{
  uint64_t v2;

  v2 = sub_239352974();
  return sub_2392CE624(v2, a1);
}

double sub_2392CC97C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23925FAA4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2392CE6BC();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_23925FDD4((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_2392CD7AC(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_2392CCA6C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_23925FB08((uint64_t *)&unk_25692B770);
  v6 = sub_23935286C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_23925FDD4(v24, v35);
      }
      else
      {
        sub_23925FB48((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_239352980();
      sub_23935235C();
      result = sub_2393529B0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_23925FDD4(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2392CCD68(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_239351F3C();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  sub_23925FB08(&qword_256929AC8);
  v8 = sub_23935286C();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_239262570(&qword_2569295D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    result = sub_239352290();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2392CD104(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v3 = v2;
  v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_23925FB08(&qword_256929AB8);
  result = sub_23935286C();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v36 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v34 = v3;
    v35 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v36;
        if (v20 >= v35)
          goto LABEL_34;
        v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v35)
            goto LABEL_34;
          v21 = v36[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v36 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v35)
                  goto LABEL_34;
                v21 = v36[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v37 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((a2 & 1) != 0)
        sub_2392D05D0(v25, (uint64_t)v7);
      else
        sub_239268820(v25, (uint64_t)v7, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      result = sub_239352974();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_2392D05D0((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_2392CD418(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_239352020();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_23925FB08(&qword_256929A88);
  v42 = a2;
  v10 = sub_23935286C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

unint64_t sub_2392CD7AC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_239352740();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_239352980();
        swift_bridgeObjectRetain();
        sub_23935235C();
        v10 = sub_2393529B0();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2392CD980(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_239352740();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_239352974();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2392CDB44(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_239352020();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_239352740();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_239352290();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_2392CDDE4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23925FAA4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        sub_23925FE04((uint64_t)v19);
        return sub_23925FDD4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2392CE6BC();
      goto LABEL_7;
    }
    sub_2392CCA6C(v15, a4 & 1);
    v21 = sub_23925FAA4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2392CE2D8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392CDF14(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_239351F3C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_2392CC8B0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2392CE8A0();
    goto LABEL_7;
  }
  sub_2392CCD68(result, a3 & 1);
  result = sub_2392CC8B0(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_239352908();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2392CE340(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_2392CE064(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2392CC948(a3);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a2 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17
            + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 72)
            * v10;
        return sub_2392D0F80(a1, v18);
      }
      return sub_2392CE3D8(v10, a1, v16, a3);
    }
    if (v15 >= v13 && (a2 & 1) == 0)
    {
      sub_2392CEAC4();
      goto LABEL_7;
    }
    sub_2392CD104(v13, a2 & 1);
    v20 = sub_2392CC948(a3);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_2392CE3D8(v10, a1, v16, a3);
    }
  }
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_2392CE17C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_239352020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_239292F4C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2392CECE0();
    goto LABEL_7;
  }
  sub_2392CD418(v17, a3 & 1);
  v23 = sub_239292F4C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_239352908();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2392CE45C(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_2392CE2D8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23925FDD4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_2392CE340(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_239351F3C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_2392CE3D8(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  *(double *)(a3[6] + 8 * a1) = a4;
  v7 = a3[7];
  v8 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  result = sub_2392D05D0(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1);
  v10 = a3[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a3[2] = v12;
  return result;
}

uint64_t sub_2392CE45C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_239352020();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_2392CE4F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_239262570(v21, v20, v22);
      v17 = sub_2393522B4();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_2392CE624(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

void *sub_2392CE6BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_23925FB08((uint64_t *)&unk_25692B770);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_23925FB48(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23925FDD4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2392CE8A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_239351F3C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_256929AC8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_239352860();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2392CEAC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_256929AB8);
  v6 = *v0;
  v7 = sub_239352860();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v27 = v1;
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v10 + 8 * v23);
    ++v13;
    if (!v24)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v17)
        goto LABEL_26;
      v24 = *(_QWORD *)(v10 + 8 * v13);
      if (!v24)
        break;
    }
LABEL_25:
    v16 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v19);
    v22 = *(_QWORD *)(v3 + 72) * v19;
    sub_239268820(*(_QWORD *)(v6 + 56) + v22, (uint64_t)v5, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = (void *)sub_2392D05D0((uint64_t)v5, *(_QWORD *)(v8 + 56) + v22);
  }
  v25 = v23 + 2;
  if (v25 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v10 + 8 * v25);
  if (v24)
  {
    v13 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v24 = *(_QWORD *)(v10 + 8 * v13);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2392CECE0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_239352020();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_256929A88);
  v24 = v0;
  v5 = *v0;
  v6 = sub_239352860();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_2392CEF10(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

uint64_t type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692DA20);
}

uint64_t sub_2392CEF34(uint64_t a1, unint64_t a2)
{
  if (a2 != 3)
    return sub_2392CEF44(a1, a2);
  return a1;
}

uint64_t sub_2392CEF44(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_2392CEF58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_23925FB08(&qword_256929AE8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (double *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_23925FB08(&qword_256929AB8);
    v7 = (_QWORD *)sub_239352878();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23926059C(v9, (uint64_t)v5, &qword_256929AE8);
      v11 = *v5;
      result = sub_2392CC948(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(double *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      result = sub_2392D05D0(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2392CF0C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double *i;
  double v5;
  int v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_256929AE0);
    v3 = (_QWORD *)sub_239352878();
    for (i = (double *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *(_DWORD *)i;
      result = sub_2392CC948(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(double *)(v3[6] + 8 * result) = v5;
      *(_DWORD *)(v3[7] + 4 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2392CF194()
{
  unint64_t result;

  result = qword_256929670;
  if (!qword_256929670)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureHEICBundleWriter.Error, &type metadata for ObjectCaptureHEICBundleWriter.Error);
    atomic_store(result, (unint64_t *)&qword_256929670);
  }
  return result;
}

uint64_t sub_2392CF1D8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2392CF1FC(uint64_t *a1, double *a2)
{
  return sub_2392C7860(a1, a2);
}

uint64_t sub_2392CF204()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392CF228(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = sub_23925FB08(&qword_256929AC0);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_2392CF26C(double *a1)
{
  return sub_2392C7A98(a1);
}

unint64_t sub_2392CF274(id *a1)
{
  return sub_2392C7BA8(a1);
}

unint64_t sub_2392CF280()
{
  unint64_t result;

  result = qword_2569296C8;
  if (!qword_2569296C8)
  {
    result = MEMORY[0x23B83BB44](&unk_239355840, &type metadata for ARCameraTrackingStateFlattened);
    atomic_store(result, (unint64_t *)&qword_2569296C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ARCameraTrackingStateFlattened(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ARCameraTrackingStateFlattened(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2392CF3A0 + 4 * byte_23935583B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2392CF3D4 + 4 * byte_239355836[v4]))();
}

uint64_t sub_2392CF3D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392CF3DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392CF3E4);
  return result;
}

uint64_t sub_2392CF3F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392CF3F8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2392CF3FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392CF404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ARCameraTrackingStateFlattened()
{
  return &type metadata for ARCameraTrackingStateFlattened;
}

uint64_t sub_2392CF420()
{
  return type metadata accessor for ObjectCaptureHEICBundleWriter(0);
}

uint64_t type metadata accessor for ObjectCaptureHEICBundleWriter(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692DA10);
}

uint64_t sub_2392CF43C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351F3C();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for ObjectCaptureHEICBundleWriter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.completionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.writeStatusPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.__allocating_init(publishers:url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.cancelActiveWritingWorkItems()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.activeWriteQueueSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

unint64_t destroy for ObjectCaptureHEICBundleWriter.Error(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s6CoreOC29ObjectCaptureHEICBundleWriterC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ObjectCaptureHEICBundleWriter.Error(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ObjectCaptureHEICBundleWriter.Error(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.Error(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_2392CF778(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2392CF790(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureHEICBundleWriter.Error()
{
  return &type metadata for ObjectCaptureHEICBundleWriter.Error;
}

uint64_t *initializeBufferWithCopyOfBuffer for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_239351F3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 < 4)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = v14;
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

unint64_t destroy for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_239351F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result >= 4)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for ObjectCaptureHEICBundleWriter.WriteInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239351F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *((_QWORD *)v12 + 1);
  if (v13 < 4)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ObjectCaptureHEICBundleWriter.WriteInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239351F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(_QWORD *)((char *)a1 + v10 + 8);
  v14 = v12[1];
  if (v13 == 3)
  {
    if (v14 >= 4)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v14 == 3)
  {
    sub_2392CFAB0((uint64_t)v11);
    goto LABEL_11;
  }
  if (v13 >= 3)
  {
    if (v14 >= 3)
    {
      *v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_23925FE28((uint64_t)v11, &qword_2569299F0);
    goto LABEL_11;
  }
  if (v14 < 3)
  {
LABEL_11:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    return a1;
  }
LABEL_8:
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2392CFAB0(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
    swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for ObjectCaptureHEICBundleWriter.WriteInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239351F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for ObjectCaptureHEICBundleWriter.WriteInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239351F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(_QWORD *)((char *)a1 + v10 + 8);
  v14 = v12[1];
  if (v13 != 3)
  {
    if (v14 == 3)
    {
      sub_2392CFAB0((uint64_t)v11);
    }
    else if (v13 >= 3)
    {
      if (v14 >= 3)
      {
        *v11 = *v12;
        v11[1] = v14;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_23925FE28((uint64_t)v11, &qword_2569299F0);
    }
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.WriteInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2392CFC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return ((_DWORD)v9 - 3) & ~(((int)v9 - 3) >> 31);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.WriteInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2392CFCD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_239351F3C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 + 3);
  return result;
}

uint64_t sub_2392CFD58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351F3C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2392CFDD8(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_239351DB0();
      swift_allocObject();
      sub_239351D8C();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_239351F54();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_2392CFE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  result = sub_239351D80();
  if (!result)
    goto LABEL_9;
  v6 = result;
  result = sub_239351DA4();
  v7 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, a1))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  sub_239351D98();
  sub_2392C6240(v6 + v7, &v9);
  if (!v2)
    v8 = v9;
  return v8 & 1;
}

void sub_2392CFF0C(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2392CFF64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  sub_2392C6240((uint64_t)&v8, &v7);
  if (!v1)
    v2 = v7;
  v5 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v3 = v8;
  v3[1] = v5;
  return v2 & 1;
}

uint64_t sub_2392D0230(uint64_t a1)
{
  sub_239268954(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(id *)(a1 + 128));
  return a1;
}

uint64_t sub_2392D0290(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_23925FB08(&qword_256927010);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392D0398()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392D03BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void (*v18)(unint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = sub_239352020();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v19 = *(_QWORD *)(v6 + 64);
  v8 = sub_239351F3C();
  v21 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  swift_release();
  v18 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v18(v0 + v3, v1);
  swift_release();
  v20 = v7;
  v9 = v0 + v7;
  v10 = v0 + v7 + v5[5];
  v11 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v12 = v10 + *(int *)(v11 + 24);
  v13 = sub_239352674();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v9 + v5[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v15, 1, v1))
    v18(v15, v1);
  v16 = *(void **)(v9 + v5[7] + 128);
  if (v16 != (void *)1)

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v0 + ((v20 + v19 + v21) & ~v21), v23);
  return swift_deallocObject();
}

uint64_t sub_2392D05D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392D0614()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(sub_239352020() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_239351F3C() - 8) + 80);
  return sub_2392CAA9C(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), v0 + v5, v0 + ((v5 + v6 + v7) & ~v7));
}

uint64_t sub_2392D06B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2392D06C4()
{
  return swift_release();
}

uint64_t sub_2392D06CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  int updated;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char *v30;
  NSObject *v31;
  int v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _BYTE v47[160];
  _OWORD v48[10];
  uint64_t v49;

  v43 = a2;
  v44 = sub_2393520B0();
  v49 = *(_QWORD *)(v44 - 8);
  v3 = MEMORY[0x24BDAC7A8](v44);
  v38 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v38 - v5;
  v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (uint64_t *)((char *)&v38 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v38 - v15;
  sub_239268764(a1 + *(int *)(v14 + 28), (uint64_t)v47, &qword_25692A8C0);
  sub_239268820(a1, (uint64_t)v16, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  sub_239268764((uint64_t)v47, (uint64_t)v48, &qword_25692A8C0);
  if (sub_2392687A8((uint64_t)v48) == 1)
  {
    v17 = &v16[*(int *)(v7 + 32)];
    if ((v17[73] & 1) != 0)
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      v41 = v19;
      v42 = v18;
      v39 = v21;
      v40 = v20;
    }
    else
    {
      v42 = *(_OWORD *)v17;
      v41 = *((_OWORD *)v17 + 1);
      v40 = *((_OWORD *)v17 + 2);
      v39 = *((_OWORD *)v17 + 3);
    }
  }
  else
  {
    v41 = v48[1];
    v42 = v48[0];
    v39 = v48[3];
    v40 = v48[2];
  }
  v22 = v44;
  sub_2392688AC((uint64_t)v16, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v23 = (void *)sub_239351ED0();
  updated = OCNonModularSPI_CMPhoto_updateInplace();

  v25 = sub_239275A60();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  if (updated)
  {
    v26(v6, v25, v22);
    sub_239268820(a1, (uint64_t)v13, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v27 = sub_239352098();
    v28 = sub_23935256C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 134349056;
      v22 = v44;
      v45 = *v13;
      sub_2393526B0();
      sub_2392688AC((uint64_t)v13, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      _os_log_impl(&dword_23925B000, v27, v28, "HEIC Writer: Failed to update image HEIC file at\ntime = %{public}f!\nTry updating with new file.", v29, 0xCu);
      MEMORY[0x23B83BC04](v29, -1, -1);
    }
    else
    {
      sub_2392688AC((uint64_t)v13, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v6, v22);
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_2393527C4();
    sub_239352380();
    sub_2393524D0();
    v34 = v45;
    v35 = v46;
    sub_2392CF194();
    swift_allocError();
    *v36 = v34;
    v36[1] = v35;
    return swift_willThrow();
  }
  else
  {
    v30 = v38;
    v26(v38, v25, v22);
    sub_239268820(a1, (uint64_t)v10, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v31 = sub_239352098();
    v32 = sub_239352578();
    if (os_log_type_enabled(v31, (os_log_type_t)v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v33 = 134349056;
      v45 = *v10;
      sub_2393526B0();
      sub_2392688AC((uint64_t)v10, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      _os_log_impl(&dword_23925B000, v31, (os_log_type_t)v32, "HEIC Writer: Success updating image HEIC file at time = %{public}f", v33, 0xCu);
      MEMORY[0x23B83BC04](v33, -1, -1);
    }
    else
    {
      sub_2392688AC((uint64_t)v10, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v30, v22);
  }
}

uint64_t sub_2392D0B94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2392C8EA4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2392D0B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void (*v18)(unint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = sub_239352020();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v19 = *(_QWORD *)(v6 + 64);
  v8 = sub_239351F3C();
  v20 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  swift_release();
  v18 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v18(v0 + v3, v1);
  swift_release();

  v21 = v7;
  v9 = v0 + v7;
  v10 = v0 + v7 + v5[5];
  v11 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v12 = v10 + *(int *)(v11 + 24);
  v13 = sub_239352674();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v9 + v5[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v15, 1, v1))
    v18(v15, v1);
  v16 = *(void **)(v9 + v5[7] + 128);
  if (v16 != (void *)1)

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v0 + ((v19 + v20 + v21) & ~v20), v23);
  return swift_deallocObject();
}

uint64_t sub_2392D0DE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(sub_239352020() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_239351F3C() - 8) + 80);
  return sub_2392C9848(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), v0 + v4, v0 + v6, v0 + ((v7 + v8 + v6) & ~v8));
}

uint64_t sub_2392D0E8C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(id *)(a1 + 32);
  v6 = v2;
  v7 = v3;
  v8 = v4;
  return a1;
}

uint64_t sub_2392D0ECC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);

  return a1;
}

id sub_2392D0F0C(id result)
{
  if ((unint64_t)result >= 7)
    return result;
  return result;
}

unint64_t sub_2392D0F1C()
{
  unint64_t result;

  result = qword_25692B7D0;
  if (!qword_25692B7D0)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureSession.Error, &type metadata for ObjectCaptureSession.Error);
    atomic_store(result, (unint64_t *)&qword_25692B7D0);
  }
  return result;
}

void sub_2392D0F60(id a1)
{
  if (a1 != (id)7)
    sub_2392D0F70(a1);
}

void sub_2392D0F70(id a1)
{
  if ((unint64_t)a1 >= 7)

}

uint64_t sub_2392D0F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392D0FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2392C63EC(a1, a2, v2);
}

uint64_t sub_2392D0FCC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392D0FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (_QWORD *)(result + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
    *v4 = v1;
    v4[1] = v2;
    swift_retain();
    sub_2392C373C(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392D1098(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  const __CFAllocator *v12;
  __CFString *v13;
  CFURLRef v14;
  void *v15;
  void *v16;
  id v19[2];

  v19[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self();
  v19[0] = 0;
  v7 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, a1, 3, v19);
  v8 = v19[0];
  if (v7)
  {
    v9 = sub_239351F6C();
    v11 = v10;

    v12 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v13 = (__CFString *)sub_2393522CC();
    v14 = CFURLCreateWithFileSystemPath(v12, v13, kCFURLPOSIXPathStyle, 0);

    if (v14)
    {
      sub_239351F18();
      sub_239351F78();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

      sub_23927DAE0(v9, v11);
      return 1;
    }
    sub_23927DAE0(v9, v11);
  }
  else
  {
    v15 = v8;
    v16 = (void *)sub_239351E58();

    swift_willThrow();
  }
  return 0;
}

BOOL sub_2392D1280(CGImage *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  const __CFAllocator *v6;
  __CFString *v7;
  const __CFURL *v8;
  __CFString *v9;
  CGImageDestination *v10;
  _BOOL8 v11;
  uint64_t v13;

  v2 = sub_23935208C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v7 = (__CFString *)sub_2393522CC();
  v8 = CFURLCreateWithFileSystemPath(v6, v7, kCFURLPOSIXPathStyle, 0);

  if (!v8)
    return 0;
  sub_239352080();
  sub_239352074();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = (__CFString *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v10 = CGImageDestinationCreateWithURL(v8, v9, 1uLL, 0);

  if (v10)
  {
    CGImageDestinationAddImage(v10, a1, 0);
    v11 = CGImageDestinationFinalize(v10);

    v8 = v10;
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

uint64_t sub_2392D13CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    sub_23925FB08(&qword_256929AF0);
    swift_allocObject();
    swift_retain();
    v1 = sub_2393520EC();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2392D1458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_239352170();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393521C4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(a3 + 32);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  aBlock[4] = sub_2392DCC54;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC5E98;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_239352188();
  v20 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v7, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_2392D1690@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 192))();
  *a2 = result;
  return result;
}

uint64_t sub_2392D16C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    sub_2392D13CC();
    sub_23925FB08(&qword_256929AF0);
    sub_239263A08(&qword_256929AF8, &qword_256929AF0, MEMORY[0x24BDB9E58]);
    v1 = sub_239352134();
    swift_release();
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t ObjectCaptureBundleWriter.__allocating_init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ObjectCaptureBundleWriter.init(publishers:url:)(a1, a2);
  return v4;
}

uint64_t ObjectCaptureBundleWriter.init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  unsigned int v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  unsigned int v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  unsigned int v77;
  id v78;
  id v79;
  void *v80;
  unsigned int v81;
  id v82;
  id v83;
  void *v84;
  unsigned int v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  unsigned int v93;
  id v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  unsigned int v101;
  id v102;
  id v103;
  void *v104;
  unsigned __int8 v105;
  uint64_t v106;
  void *v107;
  id v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  id v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t, char *);
  id v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  char *v130;
  id v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  id v136;
  void (*v137)(uint64_t, uint64_t, uint64_t, char *);
  id v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  id v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  id v149;
  id v150;
  char *v151;
  uint64_t v152;
  id v153;
  void (*v155)(uint64_t, uint64_t, uint64_t, char *);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184[4];

  v3 = v2;
  v182 = a2;
  v178 = a1;
  v184[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23925FB08(&qword_256929B00);
  v173 = *(_QWORD *)(v4 - 8);
  v174 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v172 = (char *)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_23925FB08(&qword_256929B08);
  v169 = *(_QWORD *)(v171 - 8);
  MEMORY[0x24BDAC7A8](v171);
  v168 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_23925FB08(&qword_256929B10);
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v165 = (char *)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_23925FB08(&qword_256929648);
  v163 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v162 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_23925FB08(&qword_256929650);
  v160 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v159 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23925FB08(&qword_256929658);
  MEMORY[0x24BDAC7A8](v10);
  v170 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23925FB08(&qword_256929660);
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v156 = (char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_2393520B0();
  *(_QWORD *)&v180 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v179 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2393525E4();
  v176 = *(_QWORD *)(v14 - 8);
  v177 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2393525C0();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v17);
  v19 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v19);
  v20 = sub_239261E08();
  v2[2] = 0;
  v2[3] = 0;
  sub_2393521AC();
  v184[0] = (id)MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_256927DD0, v18, MEMORY[0x24BEE5698]);
  sub_23925FB08(&qword_256927410);
  sub_239263A08((unint64_t *)&qword_256927DE0, &qword_256927410, MEMORY[0x24BEE12C8]);
  sub_239352734();
  (*(void (**)(char *, _QWORD, uint64_t))(v176 + 104))(v16, *MEMORY[0x24BEE5750], v177);
  v175 = v20;
  v2[4] = sub_239352614();
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_subscriptions) = MEMORY[0x24BEE4B08];
  v21 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
  *v21 = 0;
  v21[1] = 0;
  v22 = (char *)v2 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata;
  *((_DWORD *)v22 + 8) = 0;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v23 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotMetadataMap;
  v24 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v3 + v23) = sub_2392CEF58(MEMORY[0x24BEE4AF8]);
  v25 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap;
  *(_QWORD *)((char *)v3 + v25) = sub_2392DB0C4(v24);
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sequenceID) = 0;
  v26 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_isPeridot;
  *((_BYTE *)v3 + v26) = sub_2392DE5DC();
  v27 = (char *)v3 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_url;
  v28 = sub_239351F3C();
  v176 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v27, v182, v28);
  v29 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v179, v29, v181);
  swift_retain_n();
  v30 = sub_239352098();
  v31 = sub_239352578();
  v32 = os_log_type_enabled(v30, v31);
  v177 = v28;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v34 = (void *)swift_slowAlloc();
    *(_DWORD *)v33 = 141558275;
    v183 = 1752392040;
    v184[0] = v34;
    sub_2393526B0();
    *(_WORD *)(v33 + 12) = 2081;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v35 = sub_2393528C0();
    v183 = sub_23925F3EC(v35, v36, (uint64_t *)v184);
    sub_2393526B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v30, v31, "Bundle Writer: Writer output URL: %{private,mask.hash}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v34, -1, -1);
    MEMORY[0x23B83BC04](v33, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v180 + 8))(v179, v181);
  v37 = (uint64_t)v3;
  v38 = (void *)objc_opt_self();
  v39 = objc_msgSend(v38, sel_defaultManager);
  v40 = (void *)sub_239351ED0();
  v184[0] = 0;
  v41 = objc_msgSend(v39, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v40, 1, 0, v184);

  if (!v41)
  {
    v153 = v184[0];
LABEL_18:
    swift_release();
LABEL_19:
    sub_239351E58();

    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v182, v177);
    return v37;
  }
  v181 = (uint64_t)v3;
  v42 = v184[0];
  v43 = objc_msgSend(v38, sel_defaultManager);
  sub_23925FB08(&qword_2569278A0);
  v44 = swift_allocObject();
  v180 = xmmword_2393548B0;
  *(_OWORD *)(v44 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v44 + 32) = sub_239351F30();
  *(_QWORD *)(v44 + 40) = v45;
  v46 = (void *)objc_opt_self();
  *(_QWORD *)(v44 + 48) = 0x736567616D69;
  *(_QWORD *)(v44 + 56) = 0xE600000000000000;
  v47 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v46, sel_pathWithComponents_, v47);

  sub_2393522F0();
  v49 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  LODWORD(v47) = objc_msgSend(v43, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v49, 1, 0, v184);

  v50 = v184[0];
  if (!(_DWORD)v47)
    goto LABEL_17;
  v51 = v184[0];
  v52 = objc_msgSend(v38, sel_defaultManager);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v180;
  *(_QWORD *)(v53 + 32) = sub_239351F30();
  *(_QWORD *)(v53 + 40) = v54;
  *(_QWORD *)(v53 + 48) = 0x616D5F6874706564;
  *(_QWORD *)(v53 + 56) = 0xEA00000000007370;
  v55 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v46, sel_pathWithComponents_, v55);

  sub_2393522F0();
  v57 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  LODWORD(v55) = objc_msgSend(v52, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v57, 1, 0, v184);

  v50 = v184[0];
  if (!(_DWORD)v55)
    goto LABEL_17;
  v58 = v184[0];
  v59 = objc_msgSend(v38, sel_defaultManager);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v180;
  *(_QWORD *)(v60 + 32) = sub_239351F30();
  *(_QWORD *)(v60 + 40) = v61;
  *(_QWORD *)(v60 + 48) = 0x6E656469666E6F63;
  *(_QWORD *)(v60 + 56) = 0xEF7370616D5F6563;
  v62 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v63 = objc_msgSend(v46, sel_pathWithComponents_, v62);

  sub_2393522F0();
  v64 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  LODWORD(v62) = objc_msgSend(v59, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v64, 1, 0, v184);

  v50 = v184[0];
  if (!(_DWORD)v62)
  {
LABEL_17:
    v153 = v50;
    v37 = v181;
    goto LABEL_18;
  }
  v65 = v184[0];
  v66 = objc_msgSend(v38, sel_defaultManager);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v180;
  *(_QWORD *)(v67 + 32) = sub_239351F30();
  *(_QWORD *)(v67 + 40) = v68;
  *(_QWORD *)(v67 + 48) = 0x6775626564;
  *(_QWORD *)(v67 + 56) = 0xE500000000000000;
  v69 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v70 = objc_msgSend(v46, sel_pathWithComponents_, v69);

  sub_2393522F0();
  v71 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v72 = objc_msgSend(v66, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v71, 1, 0, v184);

  v73 = v184[0];
  v37 = v181;
  if (!v72)
    goto LABEL_21;
  v74 = v184[0];
  v75 = objc_msgSend(v38, sel_defaultManager);
  sub_2392D58D4();
  v76 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v77 = objc_msgSend(v75, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v76, 1, 0, v184);

  v73 = v184[0];
  if (!v77)
    goto LABEL_21;
  v78 = v184[0];
  v79 = objc_msgSend(v38, sel_defaultManager);
  sub_2392D58E8();
  v80 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v81 = objc_msgSend(v79, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v80, 1, 0, v184);

  v73 = v184[0];
  if (!v81)
    goto LABEL_21;
  v82 = v184[0];
  v83 = objc_msgSend(v38, sel_defaultManager);
  sub_2392D5904();
  v84 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v85 = objc_msgSend(v83, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v84, 1, 0, v184);

  v73 = v184[0];
  if (!v85)
    goto LABEL_21;
  v86 = v184[0];
  v87 = objc_msgSend(v38, sel_defaultManager);
  v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = v180;
  *(_QWORD *)(v88 + 32) = sub_2392D591C();
  *(_QWORD *)(v88 + 40) = v89;
  *(_QWORD *)(v88 + 48) = 0xD000000000000012;
  *(_QWORD *)(v88 + 56) = 0x800000023935D5F0;
  v90 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v91 = objc_msgSend(v46, sel_pathWithComponents_, v90);

  sub_2393522F0();
  v92 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v93 = objc_msgSend(v87, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v92, 1, 0, v184);

  v73 = v184[0];
  if (!v93)
    goto LABEL_21;
  v94 = v184[0];
  v95 = objc_msgSend(v38, sel_defaultManager);
  v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = v180;
  *(_QWORD *)(v96 + 32) = sub_2392D591C();
  *(_QWORD *)(v96 + 40) = v97;
  *(_QWORD *)(v96 + 48) = 0x736172656D6163;
  *(_QWORD *)(v96 + 56) = 0xE700000000000000;
  v98 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v99 = objc_msgSend(v46, sel_pathWithComponents_, v98);

  sub_2393522F0();
  v100 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v101 = objc_msgSend(v95, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v100, 1, 0, v184);

  v73 = v184[0];
  if (!v101)
    goto LABEL_21;
  v102 = v184[0];
  v103 = objc_msgSend(v38, sel_defaultManager);
  sub_2392D5AC4();
  v104 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v184[0] = 0;
  v105 = objc_msgSend(v103, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v104, 1, 0, v184);

  v73 = v184[0];
  if ((v105 & 1) == 0)
  {
LABEL_21:
    v153 = v73;
    swift_release();
    goto LABEL_19;
  }
  v106 = v178;
  v107 = (void *)(*(uint64_t (**)(id))(*(_QWORD *)v178 + 216))(v184[0]);
  v183 = *(_QWORD *)(v37 + 32);
  v108 = (id)v183;
  v184[0] = v107;
  v109 = sub_2393525D8();
  v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56);
  v111 = (uint64_t)v170;
  v179 = (char *)v109;
  v110(v170, 1, 1, v109);
  v112 = v108;
  sub_23925FB08(&qword_256929678);
  v113 = MEMORY[0x24BDB9AF8];
  sub_239263A08(&qword_256929680, &qword_256929678, MEMORY[0x24BDB9AF8]);
  *(_QWORD *)&v180 = sub_239262570(&qword_256929688, (uint64_t (*)(uint64_t))sub_239261E08, MEMORY[0x24BEE5670]);
  v114 = v156;
  sub_23935214C();
  sub_23925FE28(v111, &qword_256929658);

  swift_release();
  v115 = swift_allocObject();
  swift_weakInit();
  v116 = swift_allocObject();
  *(_QWORD *)(v116 + 16) = sub_2392DB1C0;
  *(_QWORD *)(v116 + 24) = v115;
  sub_239263A08(&qword_256929690, &qword_256929660, MEMORY[0x24BDB9A08]);
  v117 = v158;
  sub_239352140();
  swift_release();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v114, v117);
  v118 = v181 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_subscriptions;
  swift_beginAccess();
  sub_2393520BC();
  swift_endAccess();
  v119 = swift_release();
  v120 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v106 + 264))(v119);
  v183 = *(_QWORD *)(v181 + 32);
  v121 = (id)v183;
  v184[0] = v120;
  v122 = v109;
  v123 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v110;
  v155 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v110;
  v110((char *)v111, 1, 1, v122);
  v124 = v121;
  sub_23925FB08(&qword_256929698);
  sub_239263A08(&qword_2569296A0, &qword_256929698, v113);
  v125 = v159;
  sub_23935214C();
  sub_23925FE28(v111, &qword_256929658);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_239263A08(&qword_2569296A8, &qword_256929650, MEMORY[0x24BDB9A08]);
  v126 = v161;
  sub_239352140();
  swift_release();
  (*(void (**)(char *, uint64_t))(v160 + 8))(v125, v126);
  swift_beginAccess();
  sub_2393520BC();
  swift_endAccess();
  v127 = swift_release();
  v128 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v106 + 312))(v127);
  v183 = *(_QWORD *)(v181 + 32);
  v129 = (id)v183;
  v184[0] = v128;
  v130 = v179;
  v123(v111, 1, 1, v179);
  v131 = v129;
  sub_23925FB08(&qword_2569296B0);
  sub_239263A08(&qword_2569296B8, &qword_2569296B0, MEMORY[0x24BDB9AF8]);
  v132 = v162;
  sub_23935214C();
  sub_23925FE28(v111, &qword_256929658);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_239263A08(&qword_2569296C0, &qword_256929648, MEMORY[0x24BDB9A08]);
  v133 = v164;
  sub_239352140();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v132, v133);
  v158 = v118;
  swift_beginAccess();
  sub_2393520BC();
  swift_endAccess();
  v134 = swift_release();
  v135 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v178 + 360))(v134);
  v183 = *(_QWORD *)(v181 + 32);
  v136 = (id)v183;
  v184[0] = v135;
  v137 = v155;
  v155(v111, 1, 1, v130);
  v138 = v136;
  sub_23925FB08(&qword_256929B18);
  sub_239263A08(&qword_256929B20, &qword_256929B18, MEMORY[0x24BDB9AF8]);
  v139 = v165;
  sub_23935214C();
  sub_23925FE28(v111, &qword_256929658);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_239263A08(&qword_256929B28, &qword_256929B10, MEMORY[0x24BDB9A08]);
  v140 = v167;
  sub_239352158();
  swift_release();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v139, v140);
  swift_beginAccess();
  sub_2393520BC();
  swift_endAccess();
  v141 = swift_release();
  v142 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v178 + 408))(v141);
  v183 = *(_QWORD *)(v181 + 32);
  v143 = (id)v183;
  v184[0] = v142;
  v137(v111, 1, 1, v130);
  v144 = v143;
  sub_23925FB08(&qword_256929B30);
  sub_239263A08(&qword_256929B38, &qword_256929B30, MEMORY[0x24BDB9AF8]);
  v145 = v168;
  sub_23935214C();
  sub_23925FE28(v111, &qword_256929658);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_239263A08(&qword_256929B40, &qword_256929B08, MEMORY[0x24BDB9A08]);
  v146 = v171;
  sub_239352158();
  swift_release();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v145, v146);
  swift_beginAccess();
  sub_2393520BC();
  swift_endAccess();
  v147 = swift_release();
  v148 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v178 + 504))(v147);
  v183 = *(_QWORD *)(v181 + 32);
  v149 = (id)v183;
  v184[0] = v148;
  v137(v111, 1, 1, v179);
  v37 = v181;
  v150 = v149;
  sub_23925FB08(&qword_256929B48);
  sub_239263A08(&qword_256929B50, &qword_256929B48, MEMORY[0x24BDB9AF8]);
  v151 = v172;
  sub_23935214C();
  sub_23925FE28(v111, &qword_256929658);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_239263A08(&qword_256929B58, &qword_256929B00, MEMORY[0x24BDB9A08]);
  v152 = v174;
  sub_239352158();
  swift_release();
  (*(void (**)(char *, uint64_t))(v173 + 8))(v151, v152);
  swift_beginAccess();
  sub_2393520BC();
  swift_endAccess();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v182, v177);
  return v37;
}

uint64_t sub_2392D30A4(__int128 *a1, double *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t result;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double *v44;
  _QWORD aBlock[6];
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v44 = a2;
  v3 = sub_239352170();
  v43 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_2393521C4();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v38 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23935217C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  v47 = *a1;
  v48 = v16;
  v49 = *((_QWORD *)a1 + 4);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    v37 = v3;
    v19 = *v44;
    sub_239268820((uint64_t)v44, (uint64_t)v15, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
    swift_beginAccess();
    sub_2392C6070((uint64_t)v15, v19);
    swift_endAccess();
    v20 = *(double *)&v47;
    v21 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sequenceID;
    v22 = *(_QWORD *)(v18 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sequenceID);
    v23 = (uint64_t *)(v18 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = *v23;
    *v23 = 0x8000000000000000;
    sub_2392D8E88(v22, isUniquelyReferenced_nonNull_native, v20);
    *v23 = v46;
    swift_bridgeObjectRelease();
    result = swift_endAccess();
    v25 = *(_QWORD *)(v18 + v21);
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v18 + v21) = v27;
      sub_239261E08();
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5490], v9);
      v28 = (void *)sub_239352620();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v29 = v38;
      sub_239268820((uint64_t)v44, v38, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v30 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = v18;
      v32 = v48;
      *(_OWORD *)(v31 + 24) = v47;
      *(_OWORD *)(v31 + 40) = v32;
      *(_QWORD *)(v31 + 56) = v49;
      sub_2392D05D0(v29, v31 + v30);
      aBlock[4] = sub_2392DCBEC;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_239262EDC;
      aBlock[3] = &unk_250AC5E48;
      v33 = _Block_copy(aBlock);
      swift_retain();
      sub_2392D0E8C((uint64_t)&v47);
      v34 = v39;
      sub_239352188();
      v46 = MEMORY[0x24BEE4AF8];
      sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
      v35 = v42;
      v36 = v37;
      sub_239352734();
      MEMORY[0x23B83A4A0](0, v34, v35, v33);
      _Block_release(v33);
      swift_release();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v36);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v41);
      return swift_release();
    }
  }
  return result;
}

void sub_2392D354C(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  int v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint8_t *v48;
  double v49;
  uint64_t (*v50)();
  void (*v51)(_QWORD *);
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, int *);
  uint64_t (*v55)();
  void (*v56)(_QWORD *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  int *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD v67[4];
  _BYTE v68[32];
  _BYTE v69[160];
  _QWORD v70[18];
  char v71;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v65 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v66 = *((_QWORD *)v9 - 1);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  swift_beginAccess();
  v13 = *v12;
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = *(double *)a2;
    v15 = sub_2392CC948(*(double *)a2);
    if ((v16 & 1) != 0)
    {
      v63 = v7;
      v64 = v6;
      v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
      sub_2392D5AE0(v17, v14);
      v18 = (void *)sub_2393522CC();
      swift_bridgeObjectRelease();
      v62 = objc_retainAutorelease(v18);
      objc_msgSend(v62, sel_UTF8String);
      savePixelBufferToJpeg();
      v19 = *(void **)(a2 + 16);
      if (v19)
      {
        v20 = v19;
        v61 = v9;
        v21 = v20;
        sub_2392D5B00(v17, v14);
        v22 = (void *)sub_2393522CC();
        swift_bridgeObjectRelease();
        v23 = v21;
        v9 = v61;
        v24 = v23;
        v25 = objc_retainAutorelease(v22);
        objc_msgSend(v25, sel_UTF8String);
        savePixelBufferFloat32ToTiff();

      }
      v26 = *(void **)(a2 + 24);
      if (v26)
      {
        v27 = v26;
        sub_2392D5D48(v17, v14);
        v28 = (void *)sub_2393522CC();
        swift_bridgeObjectRelease();
        v29 = v27;
        v30 = objc_retainAutorelease(v28);
        objc_msgSend(v30, sel_UTF8String);
        savePixelBufferOneComponent8ToPng();

      }
      sub_239268764((uint64_t)a3 + v9[7], (uint64_t)v69, &qword_25692A8C0);
      sub_239268764((uint64_t)v69, (uint64_t)v70, &qword_25692A8C0);
      v31 = sub_2392687A8((uint64_t)v70);
      v32 = v70[17];
      v33 = v71;
      sub_239268820((uint64_t)a3, (uint64_t)v11, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      if (v31 == 1 || (v33 & 1) != 0)
      {
        v34 = &v11[v9[8]];
        v35 = *((_QWORD *)v34 + 8);
        v36 = v34[72];
        v37 = v34[73];
        sub_2392688AC((uint64_t)v11, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        if (((v37 | v36) & 1) != 0)
          v32 = -1;
        else
          v32 = v35;
      }
      else
      {
        sub_2392688AC((uint64_t)v11, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      }
      v38 = v64;
      v39 = v65;
      v40 = *a3;
      v41 = sub_2392D6124(v17, *a3);
      v43 = sub_2392DB448((uint64_t)a3 + v9[5], v32, v40, v41, v42);
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0)
      {
        v44 = sub_239275A60();
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v39, v44, v38);
        v45 = sub_239352098();
        v46 = sub_23935256C();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v47 = 0;
          _os_log_impl(&dword_23925B000, v45, v46, "Bundle Writer: Failed to write shot camera to bundle!", v47, 2u);
          v48 = v47;
          v38 = v64;
          MEMORY[0x23B83BC04](v48, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v63 + 8))(v39, v38);
      }
      sub_2392D85C0(a3);
      v49 = *a3;
      v50 = sub_2392D5890();
      v51 = sub_2392D3A10(v67, v49);
      v53 = v52;
      v54 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v66 + 48);
      if (!v54(v52, 1, v9))
      {
        *(_QWORD *)(v53 + v9[13]) = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRelease();
      }
      ((void (*)(_QWORD *, _QWORD))v51)(v67, 0);
      ((void (*)(_BYTE *, _QWORD))v50)(v68, 0);
      v55 = sub_2392D5890();
      v56 = sub_2392D3A10(v67, v49);
      v58 = v57;
      if (!v54(v57, 1, v9))
      {
        v59 = v9[11];
        v60 = *(void **)(v58 + v59);
        *(_QWORD *)(v58 + v59) = 0;

      }
      ((void (*)(_QWORD *, _QWORD))v56)(v67, 0);
      ((void (*)(_BYTE *, _QWORD))v55)(v68, 0);

    }
  }
}

void (*sub_2392D3A10(_QWORD *a1, double a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2392D913C(v4, a2);
  return sub_2392D3A64;
}

void sub_2392D3A64(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_2392D3A94(double *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  double v6;
  uint64_t v7;
  _BYTE v8[24];

  v2 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *a1;
    sub_239268820((uint64_t)a1, (uint64_t)v4, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
    swift_beginAccess();
    sub_2392C6070((uint64_t)v4, v6);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_2392D3BA4(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void (*v18)(uint64_t *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v2 = sub_23925FB08(&qword_256929E58);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v35 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - v13;
  v15 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    if ((sub_2392D6584() & 1) != 0)
    {
      if ((sub_2392D7A70() & 1) != 0)
      {
        if (sub_2392D8020())
        {
          v18 = *(void (**)(uint64_t *))(v17
                                                 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
          if (v15 == (void *)7)
          {
            if (v18)
            {
              v19 = v17 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_url;
              v20 = sub_239351F3C();
              (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v4, v19, v20);
              swift_storeEnumTagMultiPayload();
              swift_retain();
              v18(v4);
              sub_2392C373C((uint64_t)v18);
              swift_release();
              return sub_23925FE28((uint64_t)v4, &qword_256929E58);
            }
          }
          else if (v18)
          {
            sub_2392D0F1C();
            v33 = swift_allocError();
            *v34 = v15;
            *v4 = v33;
            swift_storeEnumTagMultiPayload();
            sub_2392DCA3C(v15);
            sub_2392DCA3C(v15);
            sub_2392DCA4C((uint64_t)v18);
            v18(v4);
            sub_2392C373C((uint64_t)v18);
            swift_release();
            sub_2392D0F60(v15);
            return sub_23925FE28((uint64_t)v4, &qword_256929E58);
          }
          return swift_release();
        }
        else
        {
          v29 = sub_239275A60();
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v29, v5);
          v30 = sub_239352098();
          v31 = sub_23935256C();
          if (os_log_type_enabled(v30, v31))
          {
            v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v32 = 0;
            _os_log_impl(&dword_23925B000, v30, v31, "Bundle Writer: Failed to write thumbnail image to bundle!", v32, 2u);
            MEMORY[0x23B83BC04](v32, -1, -1);
          }

          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        }
      }
      else
      {
        v25 = sub_239275A60();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v25, v5);
        v26 = sub_239352098();
        v27 = sub_23935256C();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v28 = 0;
          _os_log_impl(&dword_23925B000, v26, v27, "Bundle Writer: Failed to write cameras with mobileSfM poses to bundle!", v28, 2u);
          MEMORY[0x23B83BC04](v28, -1, -1);
        }

        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      }
    }
    else
    {
      v21 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v14, v21, v5);
      v22 = sub_239352098();
      v23 = sub_23935256C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23925B000, v22, v23, "Bundle Writer: Failed to write metadata to bundle!", v24, 2u);
        MEMORY[0x23B83BC04](v24, -1, -1);
      }

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    }
  }
  return result;
}

uint64_t sub_2392D3FE0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  double *v36;
  void *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[6];

  v2 = sub_239352170();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v55 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2393521C4();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23935217C();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393520B0();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23925FB08((uint64_t *)&unk_25692B680);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23925FB08(&qword_2569281C0);
  v49 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v49 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v48 - v17;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    v21 = *(int *)(v10 + 48);
    v22 = (uint64_t)&v12[v21];
    v23 = *(int *)(v10 + 64);
    v48 = *a1;
    sub_23926059C((uint64_t)a1 + v21, v22, &qword_2569281C0);
    v24 = *(double *)((char *)a1 + v23);
    sub_239268764(v22, (uint64_t)v18, &qword_2569281C0);
    v25 = (uint64_t *)(v20 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    v26 = *v25;
    v27 = (uint64_t)v18;
    if (*(_QWORD *)(v26 + 16) && (v28 = sub_2392CC948(v24), (v29 & 1) != 0))
    {
      v30 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v28);
      sub_239261E08();
      v31 = v50;
      v32 = v51;
      (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v6, *MEMORY[0x24BEE5490], v51);
      v33 = v48;
      swift_bridgeObjectRetain();
      v59 = sub_239352620();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
      sub_23926059C(v27, (uint64_t)v16, &qword_2569281C0);
      v34 = v27;
      v35 = (*(unsigned __int8 *)(v49 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      v36 = (double *)swift_allocObject();
      *((_QWORD *)v36 + 2) = v20;
      v36[3] = v24;
      *((_QWORD *)v36 + 4) = v30;
      sub_239268764((uint64_t)v16, (uint64_t)v36 + v35, &qword_2569281C0);
      *(_QWORD *)((char *)v36 + ((v14 + v35 + 7) & 0xFFFFFFFFFFFFFFF8)) = v33;
      aBlock[4] = sub_2392DC9EC;
      aBlock[5] = v36;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_239262EDC;
      aBlock[3] = &unk_250AC5DF8;
      v37 = _Block_copy(aBlock);
      swift_retain();
      v38 = v52;
      sub_239352188();
      v60 = MEMORY[0x24BEE4AF8];
      sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
      v39 = v55;
      v40 = v57;
      sub_239352734();
      v41 = (void *)v59;
      MEMORY[0x23B83A4A0](0, v38, v39, v37);
      _Block_release(v37);
      swift_release();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v40);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
      sub_23925FE28(v34, &qword_2569281C0);
      return swift_release();
    }
    else
    {
      v42 = sub_239275A60();
      v44 = v58;
      v43 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v9, v42, v59);
      v45 = sub_239352098();
      v46 = sub_23935256C();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_23925B000, v45, v46, "Bundle Writer: Failed to get sequence id for plane!", v47, 2u);
        MEMORY[0x23B83BC04](v47, -1, -1);
      }
      swift_release();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v43);
      return sub_23925FE28((uint64_t)v18, &qword_2569281C0);
    }
  }
  return result;
}

uint64_t sub_2392D4550(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t inited;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  id v46;
  int8x16_t v47;
  int8x16_t v48;
  int8x16_t v49;
  int8x16_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  __n128 v55;
  double v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  void *v69;
  NSObject *v70;
  void *v71;
  id v72;
  char *v73;
  void *v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  const __CFAllocator *v79;
  __CFString *v80;
  CFURLRef v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  NSObject *v91;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t (*v105)(char *, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  char *v111;
  unint64_t v112;
  _OWORD v113[2];
  __int128 v114;
  uint64_t v115;
  uint64_t v116;

  v107 = a5;
  v116 = *MEMORY[0x24BDAC8D0];
  v97 = sub_2393520B0();
  v8 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_239352020();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v111 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_239351F3C();
  v93 = *(_QWORD *)(v14 - 8);
  v94 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v98 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23925FB08(&qword_2569281C0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v106 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v93 - v19;
  sub_2392D5F70(a3, a1);
  v99 = sub_2393522CC();
  swift_bridgeObjectRelease();
  v104 = sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_239354060;
  *(_QWORD *)(inited + 32) = 0x64657463656C6573;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = sub_23925FB08(&qword_256929E50);
  sub_23926059C(a4, (uint64_t)v20, &qword_2569281C0);
  v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v22 = v105(v20, 1, v11);
  v95 = v10;
  v96 = v8;
  if (v22 == 1)
  {
    sub_23925FE28((uint64_t)v20, &qword_2569281C0);
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v23 = sub_239351FF0();
    v24 = v25;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  }
  *(_QWORD *)(inited + 48) = v23;
  *(_QWORD *)(inited + 56) = v24;
  v26 = sub_23925DBD8(inited);
  v27 = *(_QWORD *)(v107 + 64);
  v100 = v107 + 64;
  v28 = 1 << *(_BYTE *)(v107 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v27;
  v101 = (unint64_t)(v28 + 63) >> 6;
  swift_bridgeObjectRetain();
  v31 = 0;
  v103 = xmmword_2393541C0;
  v32 = (uint64_t)v111;
  v102 = v12;
  v33 = v106;
  if (!v30)
    goto LABEL_8;
LABEL_7:
  v34 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  v35 = v34 | (v31 << 6);
  v36 = (_QWORD *)v107;
  while (1)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v33, v36[6] + *(_QWORD *)(v12 + 72) * v35, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v33, 0, 1, v11);
    if (v105(v33, 1, v11) == 1)
      goto LABEL_32;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v32, v33, v11);
    if (!v36[2])
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v40 = sub_239292F4C(v32);
    if ((v41 & 1) == 0)
      goto LABEL_42;
    v42 = *(void **)(v36[7] + 8 * v40);
    v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = v103;
    *(_QWORD *)(v43 + 32) = 0x726F66736E617274;
    *(_QWORD *)(v43 + 40) = 0xE90000000000006DLL;
    v44 = v11;
    v45 = v31;
    v46 = v42;
    objc_msgSend(v46, sel_transform);
    sub_2392DEC48(v47, v48, v49, v50);
    v52 = v51;
    v53 = sub_23925FB08((uint64_t *)&unk_25692BD10);
    *(_QWORD *)(v43 + 48) = v52;
    *(_QWORD *)(v43 + 72) = v53;
    *(_QWORD *)(v43 + 80) = 0x7265746E6563;
    *(_QWORD *)(v43 + 88) = 0xE600000000000000;
    objc_msgSend(v46, sel_center);
    v55 = v54;
    v55.n128_u32[3] = v110.n128_u32[3];
    v110 = v55;
    *(_QWORD *)&v56 = sub_2392DED7C(v55).n128_u64[0];
    *(_QWORD *)(v43 + 96) = v57;
    *(_QWORD *)(v43 + 120) = v53;
    *(_QWORD *)(v43 + 128) = 0x746E65747865;
    *(_QWORD *)(v43 + 136) = 0xE600000000000000;
    v58 = objc_msgSend(v46, sel_planeExtent, v56);
    objc_msgSend(v58, sel_width);
    v109 = v59;

    v60 = objc_msgSend(v46, sel_planeExtent);
    objc_msgSend(v60, sel_height);
    v108 = v61;

    v62.n128_u64[0] = v109;
    v62.n128_u64[1] = v108;
    sub_2392DED7C(v62);
    *(_QWORD *)(v43 + 168) = v53;
    *(_QWORD *)(v43 + 144) = v63;
    v64 = sub_23925DBD8(v43);
    v65 = sub_239351FF0();
    v67 = v66;
    v115 = sub_23925FB08(&qword_256927010);
    *(_QWORD *)&v114 = v64;
    sub_23925FDD4(&v114, v113);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v112 = v26;
    sub_2392CDDE4(v113, v65, v67, isUniquelyReferenced_nonNull_native);
    v26 = v112;

    v31 = v45;
    v11 = v44;
    v12 = v102;
    v32 = (uint64_t)v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v32, v11);
    v33 = v106;
    if (v30)
      goto LABEL_7;
LABEL_8:
    v37 = v31 + 1;
    v36 = (_QWORD *)v107;
    if (__OFADD__(v31, 1))
      goto LABEL_43;
    if (v37 >= v101)
      break;
    v38 = *(_QWORD *)(v100 + 8 * v37);
    ++v31;
    if (!v38)
    {
      v31 = v37 + 1;
      if (v37 + 1 >= v101)
        break;
      v38 = *(_QWORD *)(v100 + 8 * v31);
      if (!v38)
      {
        v31 = v37 + 2;
        if (v37 + 2 >= v101)
          break;
        v38 = *(_QWORD *)(v100 + 8 * v31);
        if (!v38)
        {
          v31 = v37 + 3;
          if (v37 + 3 >= v101)
            break;
          v38 = *(_QWORD *)(v100 + 8 * v31);
          if (!v38)
          {
            v31 = v37 + 4;
            if (v37 + 4 >= v101)
              break;
            v38 = *(_QWORD *)(v100 + 8 * v31);
            if (!v38)
            {
              v39 = v37 + 5;
              if (v39 >= v101)
                break;
              v38 = *(_QWORD *)(v100 + 8 * v39);
              if (v38)
              {
                v31 = v39;
                goto LABEL_25;
              }
              while (1)
              {
                v31 = v39 + 1;
                if (__OFADD__(v39, 1))
                  break;
                if (v31 >= v101)
                  goto LABEL_31;
                v38 = *(_QWORD *)(v100 + 8 * v31);
                ++v39;
                if (v38)
                  goto LABEL_25;
              }
LABEL_44:
              __break(1u);
            }
          }
        }
      }
    }
LABEL_25:
    v30 = (v38 - 1) & v38;
    v35 = __clz(__rbit64(v38)) + (v31 << 6);
  }
LABEL_31:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v33, 1, 1, v11);
LABEL_32:
  swift_release();
  v69 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  v70 = v99;
  sub_2393522F0();
  v71 = (void *)objc_opt_self();
  *(_QWORD *)&v114 = 0;
  v72 = objc_msgSend(v71, sel_dataWithJSONObject_options_error_, v69, 3, &v114);
  v73 = v98;
  if (v72)
  {
    v74 = v72;
    v75 = (id)v114;
    v76 = sub_239351F6C();
    v78 = v77;

    v79 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v80 = (__CFString *)sub_2393522CC();
    v81 = CFURLCreateWithFileSystemPath(v79, v80, kCFURLPOSIXPathStyle, 0);

    if (v81)
    {
      sub_239351F18();
      sub_239351F78();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v73, v94);

      sub_23927DAE0(v76, v78);
      return swift_bridgeObjectRelease();
    }
    sub_23927DAE0(v76, v78);
  }
  else
  {
    v82 = (id)v114;
    v83 = (void *)sub_239351E58();

    swift_willThrow();
  }

  swift_bridgeObjectRelease();
  v84 = sub_239275A60();
  v86 = v95;
  v85 = v96;
  v87 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v84, v97);
  v88 = sub_239352098();
  v89 = sub_23935256C();
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v90 = 0;
    _os_log_impl(&dword_23925B000, v88, v89, "Bundle Writer: Failed to write plane data to bundle!", v90, 2u);
    MEMORY[0x23B83BC04](v90, -1, -1);
    v91 = v70;
  }
  else
  {
    v91 = v88;
    v88 = v70;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v86, v87);
}

unint64_t sub_2392D4E38(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_256929E40);
  v2 = (_QWORD *)sub_239352878();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23925FAA4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2392D4F50(double *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  double v30;
  uint64_t v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD aBlock[6];

  v2 = sub_239352170();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v52 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2393521C4();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23935217C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = *((_QWORD *)a1 + 1);
  v16 = *((_QWORD *)a1 + 2);
  v57 = *((_QWORD *)a1 + 3);
  v58 = v16;
  v50 = *((_QWORD *)a1 + 4);
  v49 = *((_QWORD *)a1 + 5);
  v48 = *((_QWORD *)a1 + 6);
  v47 = *((_QWORD *)a1 + 7);
  v46 = *((_QWORD *)a1 + 8);
  v17 = a1[9];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = result;
    v20 = (uint64_t *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    v21 = *v20;
    if (*(_QWORD *)(v21 + 16) && (v22 = sub_2392CC948(v17), (v23 & 1) != 0))
    {
      v44 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      sub_239261E08();
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5490], v6);
      v43 = v14;
      swift_bridgeObjectRetain();
      v42 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v50;
      swift_bridgeObjectRetain();
      v25 = v49;
      swift_bridgeObjectRetain();
      v26 = v48;
      swift_bridgeObjectRetain();
      v27 = v47;
      swift_bridgeObjectRetain();
      v28 = v46;
      swift_bridgeObjectRetain();
      v45 = sub_239352620();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v29 = (double *)swift_allocObject();
      *((_QWORD *)v29 + 2) = v19;
      v29[3] = v17;
      v30 = v43;
      *((_QWORD *)v29 + 4) = v44;
      v29[5] = v30;
      v31 = v58;
      *((_QWORD *)v29 + 6) = v42;
      *((_QWORD *)v29 + 7) = v31;
      *((_QWORD *)v29 + 8) = v57;
      *((_QWORD *)v29 + 9) = v24;
      *((_QWORD *)v29 + 10) = v25;
      *((_QWORD *)v29 + 11) = v26;
      *((_QWORD *)v29 + 12) = v27;
      *((_QWORD *)v29 + 13) = v28;
      aBlock[4] = sub_2392DC904;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_239262EDC;
      aBlock[3] = &unk_250AC5DA8;
      v32 = _Block_copy(aBlock);
      swift_retain();
      v33 = v51;
      sub_239352188();
      v59 = MEMORY[0x24BEE4AF8];
      sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_23925FB08((uint64_t *)&unk_2569281F0);
      sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
      v34 = v52;
      v35 = v56;
      sub_239352734();
      v36 = (void *)v45;
      MEMORY[0x23B83A4A0](0, v33, v34, v32);
      _Block_release(v32);
      swift_release();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v54);
      return swift_release();
    }
    else
    {
      v37 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v37, v10);
      v38 = sub_239352098();
      v39 = sub_23935256C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v40 = 134217984;
        *(double *)aBlock = v17;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v38, v39, "Bundle Writer: Failed to get sequence id for depth point cloud for timestamp: %f!", v40, 0xCu);
        MEMORY[0x23B83BC04](v40, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  return result;
}

uint64_t sub_2392D5480(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[4];
  uint64_t v15;

  v7 = sub_239351F3C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2392D5F8C(a3, a1);
  v11 = *(_OWORD *)(a4 + 48);
  v14[2] = *(_OWORD *)(a4 + 32);
  v14[3] = v11;
  v15 = *(_QWORD *)(a4 + 64);
  v12 = *(_OWORD *)(a4 + 16);
  v14[0] = *(_OWORD *)a4;
  v14[1] = v12;
  sub_239351EAC();
  swift_bridgeObjectRelease();
  sub_2392DB984((uint64_t *)v14, (uint64_t)v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_2392D5570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[9];

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    v33 = v5;
    v34 = v3;
    v35 = v2;
    v12 = sub_2392D6140(0, *(double *)a1);
    v36 = v13;
    v37 = v12;
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a1 + 16);
    v17 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 32);
    v18 = *(_QWORD *)(a1 + 40);
    v19 = *(_QWORD *)(a1 + 48);
    v39 = v6;
    v40 = v11;
    v38 = v7;
    v21 = *(_QWORD *)(a1 + 56);
    v20 = *(_QWORD *)(a1 + 64);
    v22 = *(_QWORD *)(a1 + 72);
    v41[0] = v14;
    v41[1] = v15;
    v41[2] = v17;
    v41[3] = v16;
    v41[4] = v18;
    v41[5] = v19;
    v41[6] = v21;
    v41[7] = v20;
    v41[8] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_239351EAC();
    swift_bridgeObjectRelease();
    sub_2392DB984(v41, (uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = *(double *)a1;
    sub_2392D6354(0, *(double *)a1);
    v24 = type metadata accessor for OCBundleData(0);
    LOBYTE(v16) = sub_2392DC418(a1 + *(int *)(v24 + 24), v23);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      return swift_release();
    }
    else
    {
      v25 = sub_239275A60();
      v27 = v34;
      v26 = v35;
      v28 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v25, v35);
      v29 = sub_239352098();
      v30 = sub_23935256C();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_23925B000, v29, v30, "Bundle Writer: Failed to write camera to bundle!", v31, 2u);
        MEMORY[0x23B83BC04](v31, -1, -1);
      }

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    }
  }
  return result;
}

uint64_t (*sub_2392D5890())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2392D58D4()
{
  return sub_2392D5938(0x73656E616C70, 0xE600000000000000);
}

uint64_t sub_2392D58E8()
{
  return sub_2392D5938(0xD000000000000012, 0x800000023935D5F0);
}

uint64_t sub_2392D5904()
{
  return sub_2392D5938(0x736172656D6163, 0xE700000000000000);
}

uint64_t sub_2392D591C()
{
  return sub_2392D5938(0x6D6172665F6C6C61, 0xEA00000000007365);
}

uint64_t sub_2392D5938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;

  sub_23925FB08(&qword_2569278A0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2393548B0;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v5 + 32) = sub_239351F30();
  *(_QWORD *)(v5 + 40) = v6;
  v7 = (void *)objc_opt_self();
  strcpy((char *)(v5 + 48), "experimental");
  *(_BYTE *)(v5 + 61) = 0;
  *(_WORD *)(v5 + 62) = -5120;
  v8 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_pathWithComponents_, v8);

  v10 = sub_2393522F0();
  v12 = v11;

  *(_QWORD *)(v4 + 32) = v10;
  *(_QWORD *)(v4 + 40) = v12;
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 56) = a2;
  v13 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v7, sel_pathWithComponents_, v13);

  v15 = sub_2393522F0();
  return v15;
}

uint64_t sub_2392D5AC4()
{
  return sub_2392D5938(0xD00000000000001BLL, 0x800000023935D800);
}

uint64_t sub_2392D5AE0(uint64_t a1, double a2)
{
  return sub_2392D5B2C(a1, 0x736567616D69, 0xE600000000000000, a2);
}

uint64_t sub_2392D5B00(uint64_t a1, double a2)
{
  return sub_2392D5B2C(a1, 0x616D5F6874706564, 0xEA00000000007370, a2);
}

uint64_t sub_2392D5B2C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  sub_23925FB08(&qword_2569278A0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2393548B0;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v9 + 32) = sub_239351F30();
  *(_QWORD *)(v9 + 40) = v10;
  v11 = (void *)objc_opt_self();
  *(_QWORD *)(v9 + 48) = a2;
  *(_QWORD *)(v9 + 56) = a3;
  v12 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_pathWithComponents_, v12);

  v14 = sub_2393522F0();
  v16 = v15;

  *(_QWORD *)(v8 + 32) = v14;
  *(_QWORD *)(v8 + 40) = v16;
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v17 = swift_allocObject();
  v18 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v17 + 16) = xmmword_239354060;
  v19 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v17 + 56) = v18;
  *(_QWORD *)(v17 + 64) = v19;
  *(_QWORD *)(v17 + 32) = a1;
  v25 = sub_239352308();
  v26 = v20;
  sub_239352380();
  sub_2392DEFE0(a4);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  *(_QWORD *)(v8 + 48) = v25;
  *(_QWORD *)(v8 + 56) = v26;
  v21 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v11, sel_pathWithComponents_, v21);

  v23 = sub_2393522F0();
  return v23;
}

uint64_t sub_2392D5D48(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  sub_23925FB08(&qword_2569278A0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2393548B0;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v5 + 32) = sub_239351F30();
  *(_QWORD *)(v5 + 40) = v6;
  v7 = (void *)objc_opt_self();
  *(_QWORD *)(v5 + 48) = 0x6E656469666E6F63;
  *(_QWORD *)(v5 + 56) = 0xEF7370616D5F6563;
  v8 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_pathWithComponents_, v8);

  v10 = sub_2393522F0();
  v12 = v11;

  *(_QWORD *)(v4 + 32) = v10;
  *(_QWORD *)(v4 + 40) = v12;
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v13 + 16) = xmmword_239354060;
  v15 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = a1;
  v21 = sub_239352308();
  v22 = v16;
  sub_239352380();
  sub_2392DEFE0(a2);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  *(_QWORD *)(v4 + 48) = v21;
  *(_QWORD *)(v4 + 56) = v22;
  v17 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v7, sel_pathWithComponents_, v17);

  v19 = sub_2393522F0();
  return v19;
}

uint64_t sub_2392D5F70(uint64_t a1, double a2)
{
  return sub_2392D5FA4(a1, sub_2392D58D4, a2);
}

uint64_t sub_2392D5F8C(uint64_t a1, double a2)
{
  return sub_2392D5FA4(a1, sub_2392D58E8, a2);
}

uint64_t sub_2392D5FA4(uint64_t a1, uint64_t (*a2)(void), double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  sub_23925FB08(&qword_2569278A0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v6 + 32) = a2();
  *(_QWORD *)(v6 + 40) = v7;
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v8 + 16) = xmmword_239354060;
  v10 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = a1;
  v17 = sub_239352308();
  v18 = v11;
  sub_239352380();
  sub_2392DEFE0(a3);
  sub_239352380();
  swift_bridgeObjectRelease();
  v12 = (void *)objc_opt_self();
  sub_239352380();
  *(_QWORD *)(v6 + 48) = v17;
  *(_QWORD *)(v6 + 56) = v18;
  v13 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_pathWithComponents_, v13);

  v15 = sub_2393522F0();
  return v15;
}

uint64_t sub_2392D6124(uint64_t a1, double a2)
{
  return sub_2392D5FA4(a1, sub_2392D5904, a2);
}

uint64_t sub_2392D6140(uint64_t a1, double a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v4 = (void *)objc_opt_self();
  sub_23925FB08(&qword_2569278A0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2393548B0;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v6 + 32) = sub_2392D591C();
  *(_QWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 48) = 0xD000000000000012;
  *(_QWORD *)(v6 + 56) = 0x800000023935D5F0;
  v8 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v4, sel_pathWithComponents_, v8);

  v10 = sub_2393522F0();
  v12 = v11;

  *(_QWORD *)(v5 + 32) = v10;
  *(_QWORD *)(v5 + 40) = v12;
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v13 + 16) = xmmword_239354060;
  v15 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = a1;
  v21 = sub_239352308();
  v22 = v16;
  sub_239352380();
  sub_2392DEFE0(a2);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  *(_QWORD *)(v5 + 48) = v21;
  *(_QWORD *)(v5 + 56) = v22;
  v17 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v4, sel_pathWithComponents_, v17);

  v19 = sub_2393522F0();
  return v19;
}

uint64_t sub_2392D6354(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  sub_23925FB08(&qword_2569278A0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2393548B0;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v5 + 32) = sub_2392D591C();
  *(_QWORD *)(v5 + 40) = v6;
  v7 = (void *)objc_opt_self();
  *(_QWORD *)(v5 + 48) = 0x736172656D6163;
  *(_QWORD *)(v5 + 56) = 0xE700000000000000;
  v8 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_pathWithComponents_, v8);

  v10 = sub_2393522F0();
  v12 = v11;

  *(_QWORD *)(v4 + 32) = v10;
  *(_QWORD *)(v4 + 40) = v12;
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v13 = swift_allocObject();
  v14 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v13 + 16) = xmmword_239354060;
  v15 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v13 + 56) = v14;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 32) = a1;
  v21 = sub_239352308();
  v22 = v16;
  sub_239352380();
  sub_2392DEFE0(a2);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  *(_QWORD *)(v4 + 48) = v21;
  *(_QWORD *)(v4 + 56) = v22;
  v17 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v7, sel_pathWithComponents_, v17);

  v19 = sub_2393522F0();
  return v19;
}

uint64_t sub_2392D6568(uint64_t a1, double a2)
{
  return sub_2392D5FA4(a1, sub_2392D5AC4, a2);
}

uint64_t sub_2392D6584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjCClassFromMetadata;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned __int8 v129;
  unsigned __int8 v130;
  uint64_t v131;
  _QWORD *v132;
  double *v133;
  uint64_t v134;
  double v135;
  uint64_t v136;
  uint64_t inited;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  int8x16_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  int8x16_t v152;
  int8x16_t v153;
  int8x16_t v154;
  int8x16_t v155;
  uint64_t v156;
  int8x16_t v157;
  int8x16_t v158;
  int8x16_t v159;
  int8x16_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  int8x16_t v173;
  int8x16_t v174;
  int8x16_t v175;
  int8x16_t v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  double *v187;
  double v188;
  uint64_t v189;
  unint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char isUniquelyReferenced_nonNull_native;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  void *v200;
  id v201;
  uint64_t v203;
  unint64_t v204;
  id v205;
  id v206;
  uint64_t v207;
  _QWORD *v208;
  int8x16_t v209;
  uint64_t v210;
  uint64_t v211;
  __int128 v212;
  uint64_t *v213;
  uint64_t v214;
  __int128 v215;
  uint64_t v216;
  _QWORD *v217;
  _QWORD *v218;
  _QWORD *v219;
  char *v220;
  _QWORD *v221;
  _QWORD *v222;
  _QWORD *v223;
  _QWORD *v224;
  _QWORD *v225;
  uint64_t v226;
  char *v227;
  uint64_t *v228;
  uint64_t v229;
  int8x16_t v230;
  int8x16_t v231;
  int8x16_t v232;
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  __int128 v236;
  uint64_t *v237;
  uint64_t v238;
  int8x16_t v239;
  int *v240;
  uint64_t v241;
  char v242;
  _BYTE v243[160];
  _OWORD v244[20];
  _OWORD v245[10];
  __int128 v246;
  __int128 v247;
  uint64_t v248;
  unsigned __int8 v249;
  uint64_t v250;
  _OWORD v251[4];

  v1 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  MEMORY[0x24BDAC7A8](v1);
  v226 = (uint64_t)&v203 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23925FB08(&qword_256929AB0);
  v234 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v225 = (uint64_t *)((char *)&v203 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v7);
  v224 = (uint64_t *)((char *)&v203 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v223 = (uint64_t *)((char *)&v203 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v222 = (uint64_t *)((char *)&v203 - v14);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v221 = (uint64_t *)((char *)&v203 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v208 = (uint64_t *)((char *)&v203 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v220 = (char *)&v203 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v219 = (uint64_t *)((char *)&v203 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v218 = (uint64_t *)((char *)&v203 - v24);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v217 = (uint64_t *)((char *)&v203 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v237 = (uint64_t *)((char *)&v203 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v228 = (uint64_t *)((char *)&v203 - v29);
  v30 = sub_239351FD8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v203 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_239352044();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v203 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = v0;
  v39 = v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata;
  v40 = *(int **)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata + 8);
  if (!v40)
  {
    v54 = 0;
    return v54 & 1;
  }
  v233 = v36;
  v235 = v31;
  v41 = v30;
  v241 = *(_QWORD *)v39;
  v42 = *(_QWORD *)(v39 + 16);
  v43 = *(_QWORD *)(v39 + 24);
  v238 = v6;
  v239.i64[0] = v42;
  LODWORD(v236) = *(_DWORD *)(v39 + 32);
  type metadata accessor for ObjectCaptureSession(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v45 = (void *)objc_opt_self();
  v240 = v40;
  swift_bridgeObjectRetain();
  v46 = v43;
  swift_bridgeObjectRetain();
  v206 = objc_msgSend(v45, sel_bundleForClass_, ObjCClassFromMetadata);
  v47 = objc_msgSend(v206, sel_infoDictionary);
  v227 = v5;
  if (!v47)
  {
    v246 = 0u;
    v247 = 0u;
    v50 = v41;
LABEL_11:
    v52 = v235;
    goto LABEL_13;
  }
  v48 = v47;
  v49 = sub_239352284();

  v50 = v41;
  if (!*(_QWORD *)(v49 + 16))
  {
    v246 = 0u;
    v247 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v51 = sub_23925FAA4(0xD00000000000001ALL, 0x800000023935D7C0);
  v52 = v235;
  if ((v53 & 1) == 0)
  {
    v246 = 0u;
    v247 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_23925FB48(*(_QWORD *)(v49 + 56) + 32 * v51, (uint64_t)&v246);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v247 + 1))
  {
LABEL_13:
    sub_23925FE28((uint64_t)&v246, (uint64_t *)&unk_25692A930);
    goto LABEL_14;
  }
  if (!swift_dynamicCast())
  {
LABEL_14:
    v232.i64[0] = 0xE300000000000000;
    v231.i64[0] = 4271950;
    goto LABEL_15;
  }
  v232.i64[0] = *((_QWORD *)&v245[0] + 1);
  v231.i64[0] = *(_QWORD *)&v245[0];
LABEL_15:
  v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  sub_23935202C();
  v56 = (void *)sub_239352038();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v233);
  objc_msgSend(v55, sel_setLocale_, v56);

  v57 = (void *)sub_2393522CC();
  objc_msgSend(v55, sel_setDateFormat_, v57);

  sub_239351FCC();
  v58 = (void *)sub_239351F90();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v50);
  v205 = v55;
  v59 = objc_msgSend(v55, sel_stringFromDate_, v58);

  v235 = sub_2393522F0();
  v61 = v60;

  v216 = sub_23925FB08(&qword_25692B720);
  v62 = swift_allocObject();
  v215 = xmmword_239355A70;
  *(_OWORD *)(v62 + 16) = xmmword_239355A70;
  *(_QWORD *)(v62 + 32) = 0x6E6F6973726576;
  *(_QWORD *)(v62 + 40) = 0xE700000000000000;
  v63 = v240;
  *(_QWORD *)(v62 + 48) = v241;
  *(_QWORD *)(v62 + 56) = v63;
  v64 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v62 + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v62 + 80) = 0x696669746E656469;
  v65 = v239.i64[0];
  *(_QWORD *)(v62 + 88) = 0xEA00000000007265;
  *(_QWORD *)(v62 + 96) = v65;
  *(_QWORD *)(v62 + 104) = v46;
  *(_QWORD *)(v62 + 120) = v64;
  *(_QWORD *)(v62 + 128) = 0x6567617265766F63;
  *(_QWORD *)(v62 + 136) = 0xE800000000000000;
  v66 = MEMORY[0x24BEE14E8];
  *(_DWORD *)(v62 + 144) = v236;
  *(_QWORD *)(v62 + 168) = v66;
  *(_QWORD *)(v62 + 176) = 0x6F69737265567773;
  v67 = v231.i64[0];
  *(_QWORD *)(v62 + 184) = 0xE90000000000006ELL;
  *(_QWORD *)(v62 + 192) = v67;
  *(_QWORD *)(v62 + 200) = v232.i64[0];
  *(_QWORD *)(v62 + 216) = v64;
  strcpy((char *)(v62 + 224), "systemVersion");
  *(_WORD *)(v62 + 238) = -4864;
  v68 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v69 = objc_msgSend(v68, sel_currentDevice);
  v70 = objc_msgSend(v69, sel_systemVersion);

  v71 = sub_2393522F0();
  v73 = v72;

  v74 = v64;
  *(_QWORD *)(v62 + 240) = v71;
  *(_QWORD *)(v62 + 248) = v73;
  *(_QWORD *)(v62 + 264) = v64;
  *(_QWORD *)(v62 + 272) = 0x7954656369766564;
  *(_QWORD *)(v62 + 280) = 0xEA00000000006570;
  v75 = objc_msgSend(v68, sel_currentDevice);
  v76 = objc_msgSend(v75, sel_model);

  v77 = sub_2393522F0();
  v79 = v78;

  *(_QWORD *)(v62 + 288) = v77;
  *(_QWORD *)(v62 + 296) = v79;
  *(_QWORD *)(v62 + 312) = v64;
  *(_QWORD *)(v62 + 320) = 0x656D695465746164;
  v80 = v235;
  *(_QWORD *)(v62 + 328) = 0xE800000000000000;
  *(_QWORD *)(v62 + 336) = v80;
  *(_QWORD *)(v62 + 344) = v61;
  *(_QWORD *)(v62 + 360) = v64;
  *(_QWORD *)(v62 + 368) = 1936154996;
  *(_QWORD *)(v62 + 376) = 0xE400000000000000;
  v81 = sub_23925FB08(&qword_256929E20);
  v82 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v62 + 384) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v62 + 408) = v81;
  *(_QWORD *)(v62 + 416) = 1953066613;
  *(_QWORD *)(v62 + 424) = 0xE400000000000000;
  *(_QWORD *)(v62 + 432) = 109;
  *(_QWORD *)(v62 + 440) = 0xE100000000000000;
  *(_QWORD *)(v62 + 456) = v74;
  *(_QWORD *)(v62 + 464) = 0x6F64697265507369;
  *(_QWORD *)(v62 + 472) = 0xE900000000000074;
  v83 = v207;
  v84 = (char *)(v207 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_isPeridot);
  swift_beginAccess();
  v85 = *v84;
  *(_QWORD *)(v62 + 504) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v62 + 480) = v85;
  sub_2392DB2E0(v241, (uint64_t)v240);
  v86 = sub_23925DBD8(v62);
  v250 = v82;
  v87 = (uint64_t *)(v83 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotMetadataMap);
  swift_beginAccess();
  v88 = *v87;
  swift_bridgeObjectRetain_n();
  v89 = sub_2392D9600(v88);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v246 = v89;
  sub_2392D957C((_QWORD **)&v246);
  swift_bridgeObjectRelease();
  v90 = *(_QWORD *)(v246 + 16);
  v91 = (uint64_t)v227;
  v92 = v238;
  if (v90)
  {
    v203 = v246;
    v204 = v86;
    v214 = (uint64_t)v228 + *(int *)(v238 + 48);
    v93 = v234;
    v94 = v246 + ((*((unsigned __int8 *)v234 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v234 + 80));
    v213 = (uint64_t *)(v207 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    v235 = v90 - 1;
    v210 = v93[9];
    v236 = xmmword_2393548B0;
    v212 = xmmword_239354060;
    v211 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      v229 = v94;
      v95 = v228;
      sub_23926059C(v94, (uint64_t)v228, &qword_256929AB0);
      v96 = *(int *)(v92 + 48);
      v97 = v237;
      v98 = (uint64_t)v237 + v96;
      v99 = *v95;
      *v237 = *v95;
      sub_2392D05D0(v214, (uint64_t)v97 + v96);
      v100 = *(int *)(v92 + 48);
      v101 = v217;
      v102 = (uint64_t)v217 + v100;
      *v217 = v99;
      v241 = v98;
      sub_239268820(v98, (uint64_t)v101 + v100, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v240 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      v103 = v102 + v240[12];
      v104 = *(_QWORD *)v103;
      v105 = *(_BYTE *)(v103 + 8);
      sub_2392688AC(v102, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v106 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if ((v105 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v246 = v104;
        v106 = sub_23934BB6C();
      }
      v234 = v106;
      v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = v215;
      *(_QWORD *)(v107 + 32) = 0x64496172656D6163;
      *(_QWORD *)(v107 + 40) = 0xE800000000000000;
      *(_QWORD *)(v107 + 48) = 0;
      *(_QWORD *)(v107 + 72) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v107 + 80) = 0x556E6F6973736573;
      *(_QWORD *)(v107 + 88) = 0xEB00000000444955;
      v108 = *(int *)(v92 + 48);
      v109 = v218;
      v110 = (uint64_t)v218 + v108;
      *v218 = v99;
      sub_239268820(v241, (uint64_t)v109 + v108, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_23926059C(v110 + v240[6], v91, &qword_2569281C0);
      sub_2392688AC(v110, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v111 = sub_239352020();
      v112 = *(_QWORD *)(v111 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v91, 1, v111) == 1)
      {
        sub_23925FE28(v91, &qword_2569281C0);
        v113 = (uint64_t *)(v107 + 96);
        *(_QWORD *)(v107 + 120) = MEMORY[0x24BEE0D00];
      }
      else
      {
        v114 = sub_239351FF0();
        v116 = v115;
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v91, v111);
        v113 = (uint64_t *)(v107 + 96);
        *(_QWORD *)(v107 + 120) = MEMORY[0x24BEE0D00];
        if (v116)
        {
          *v113 = v114;
          v117 = v220;
          goto LABEL_24;
        }
      }
      v117 = v220;
      *v113 = 0;
      v116 = 0xE000000000000000;
LABEL_24:
      *(_QWORD *)(v107 + 104) = v116;
      *(_QWORD *)(v107 + 128) = 0x49746E656D676573;
      *(_QWORD *)(v107 + 136) = 0xE900000000000064;
      v118 = *(int *)(v92 + 48);
      v119 = v219;
      v120 = (uint64_t)v219 + v118;
      *v219 = v99;
      sub_239268820(v241, (uint64_t)v119 + v118, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_239268764(v120 + v240[7], (uint64_t)v245, &qword_25692A8C0);
      sub_2392688F0((uint64_t)v245, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2392687CC);
      sub_2392688AC(v120, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_239268764((uint64_t)v245, (uint64_t)&v246, &qword_25692A8C0);
      if (sub_2392687A8((uint64_t)&v246) == 1)
      {
        v121 = 0;
        v122 = 1;
      }
      else
      {
        v121 = v248;
        v122 = v249;
        sub_2392688F0((uint64_t)v245, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
      }
      v123 = (uint64_t)v117 + *(int *)(v92 + 48);
      *v117 = v99;
      sub_239268820(v241, v123, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      *(_QWORD *)(v107 + 168) = MEMORY[0x24BEE1768];
      if (v122)
      {
        v124 = *(int *)(v92 + 48);
        v125 = v208;
        v126 = (uint64_t)v208 + v124;
        *v208 = v99;
        sub_239268820(v123, (uint64_t)v125 + v124, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v127 = v126 + v240[8];
        v128 = *(_QWORD *)(v127 + 64);
        v129 = *(_BYTE *)(v127 + 72);
        v130 = *(_BYTE *)(v127 + 73);
        sub_2392688AC(v126, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        if (((v130 | v129) & 1) != 0)
          v121 = -1;
        else
          v121 = v128;
      }
      *(_QWORD *)(v107 + 144) = v121;
      sub_23925FE28((uint64_t)v117, &qword_256929AB0);
      *(_QWORD *)(v107 + 176) = 0x6D617473656D6974;
      *(_QWORD *)(v107 + 184) = 0xE900000000000070;
      v131 = *(int *)(v92 + 48);
      v132 = v221;
      v133 = (double *)((char *)v221 + v131);
      *v221 = v99;
      v134 = v241;
      sub_239268820(v241, (uint64_t)v132 + v131, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v135 = *v133;
      sub_2392688AC((uint64_t)v133, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      *(_QWORD *)(v107 + 192) = sub_2392DEFE0(v135);
      *(_QWORD *)(v107 + 200) = v136;
      *(_QWORD *)(v107 + 216) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v107 + 224) = 0x6172656D6163;
      *(_QWORD *)(v107 + 232) = 0xE600000000000000;
      v233 = sub_23925FB08(&qword_256929E28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v236;
      *(_QWORD *)(inited + 32) = 0x69736E6972746E69;
      *(_QWORD *)(inited + 40) = 0xEA00000000007363;
      v138 = (uint64_t)v132 + *(int *)(v92 + 48);
      *v132 = v99;
      sub_239268820(v134, v138, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v139 = v240;
      v140 = v226;
      sub_239268820(v138 + v240[5], v226, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_2392688AC(v138, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v141 = *(_OWORD *)(v140 + 16);
      v251[0] = *(_OWORD *)v140;
      v251[1] = v141;
      v251[2] = *(_OWORD *)(v140 + 32);
      sub_2392688AC(v140, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_2392DEB84((uint64_t)v251);
      *(_QWORD *)(inited + 48) = v142;
      *(_QWORD *)(inited + 56) = 0x726F66736E617274;
      *(_QWORD *)(inited + 64) = 0xE90000000000006DLL;
      v143 = (uint64_t)v132 + *(int *)(v92 + 48);
      *v132 = v99;
      sub_239268820(v134, v143, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_239268820(v143 + v139[5], v140, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_2392688AC(v143, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v239 = *(int8x16_t *)(v140 + 48);
      v144 = *(int8x16_t *)(v140 + 64);
      v231 = *(int8x16_t *)(v140 + 80);
      v232 = v144;
      v230 = *(int8x16_t *)(v140 + 96);
      sub_2392688AC(v140, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_2392DEC48(v239, v232, v231, v230);
      *(_QWORD *)(inited + 72) = v145;
      v146 = sub_2392D4E38(inited);
      v147 = sub_23925FB08(&qword_256929E30);
      *(_QWORD *)(v107 + 240) = v146;
      v239.i64[0] = v147;
      *(_QWORD *)(v107 + 264) = v147;
      *(_QWORD *)(v107 + 272) = 0x7463656A626FLL;
      *(_QWORD *)(v107 + 280) = 0xE600000000000000;
      v148 = swift_initStackObject();
      *(_OWORD *)(v148 + 16) = v236;
      *(_QWORD *)(v148 + 32) = 0x676E69646E756F62;
      *(_QWORD *)(v148 + 40) = 0xEB00000000786F42;
      v149 = *(int *)(v92 + 48);
      v150 = v222;
      v151 = (uint64_t)v222 + v149;
      *v222 = v99;
      sub_239268820(v134, (uint64_t)v150 + v149, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_239268764(v151 + v139[7], (uint64_t)v243, &qword_25692A8C0);
      sub_2392688F0((uint64_t)v243, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2392687CC);
      sub_2392688AC(v151, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_239268764((uint64_t)v243, (uint64_t)v244, &qword_25692A8C0);
      if (sub_2392687A8((uint64_t)v244) == 1)
      {
        OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      }
      else
      {
        v231 = (int8x16_t)v244[1];
        v232 = (int8x16_t)v244[0];
        v230 = (int8x16_t)v244[2];
        v209 = (int8x16_t)v244[3];
        sub_2392688F0((uint64_t)v243, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
        v155 = v209;
        v154 = v230;
        v153 = v231;
        v152 = v232;
      }
      sub_2392DEC48(v152, v153, v154, v155);
      *(_QWORD *)(v148 + 48) = v156;
      *(_QWORD *)(v148 + 56) = 0x726F66736E617274;
      *(_QWORD *)(v148 + 64) = 0xE90000000000006DLL;
      OCNonModularSPI_Serialization_InvalidObjectTransform();
      sub_2392DEC48(v157, v158, v159, v160);
      *(_QWORD *)(v148 + 72) = v161;
      *(_QWORD *)(v107 + 288) = sub_2392D4E38(v148);
      *(_QWORD *)(v107 + 312) = v239.i64[0];
      *(_QWORD *)(v107 + 320) = 0x656E656373;
      *(_QWORD *)(v107 + 328) = 0xE500000000000000;
      v162 = swift_initStackObject();
      *(_OWORD *)(v162 + 16) = v212;
      *(_QWORD *)(v162 + 32) = 0x676E69646E756F62;
      *(_QWORD *)(v162 + 40) = 0xEB00000000786F42;
      v163 = *(int *)(v238 + 48);
      v164 = v223;
      v165 = (uint64_t)v223 + v163;
      *v223 = v99;
      sub_239268820(v241, (uint64_t)v164 + v163, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v166 = v165 + v240[8];
      v167 = *(_QWORD *)v166;
      v168 = *(_QWORD *)(v166 + 8);
      v169 = *(_QWORD *)(v166 + 16);
      v170 = *(_QWORD *)(v166 + 24);
      v171 = *(_QWORD *)(v166 + 32);
      v232.i64[0] = *(_QWORD *)(v166 + 40);
      v231.i64[0] = *(_QWORD *)(v166 + 48);
      v233 = *(_QWORD *)(v166 + 56);
      v172 = *(unsigned __int8 *)(v166 + 73);
      sub_2392688AC(v165, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      if (v172 == 1)
      {
        OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      }
      else
      {
        v173.i64[0] = v167;
        v173.i64[1] = v168;
        v174.i64[0] = v169;
        v174.i64[1] = v170;
        v175.i64[0] = v171;
        v175.i64[1] = v232.i64[0];
        v176.i64[0] = v231.i64[0];
        v176.i64[1] = v233;
      }
      sub_2392DEC48(v173, v174, v175, v176);
      *(_QWORD *)(v162 + 48) = v177;
      *(_QWORD *)(v107 + 336) = sub_2392D4E38(v162);
      v92 = v238;
      *(_QWORD *)(v107 + 360) = v239.i64[0];
      *(_QWORD *)(v107 + 368) = 0x4D65727574706163;
      *(_QWORD *)(v107 + 376) = 0xEB0000000065646FLL;
      v178 = *(int *)(v92 + 48);
      v179 = v224;
      v180 = (uint64_t)v224 + v178;
      *v224 = v99;
      sub_239268820(v241, (uint64_t)v179 + v178, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v181 = *(unsigned __int8 *)(v180 + v240[9]);
      sub_2392688AC(v180, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v91 = (uint64_t)v227;
      if (v181 == 2)
      {
        v182 = -1;
      }
      else
      {
        v242 = v181 & 1;
        v182 = ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter();
      }
      v183 = v234;
      *(_QWORD *)(v107 + 384) = v182;
      *(_QWORD *)(v107 + 408) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v107 + 416) = 0x6B63616264656566;
      *(_QWORD *)(v107 + 424) = 0xE800000000000000;
      v184 = sub_23925FB08(&qword_256927CB0);
      *(_QWORD *)(v107 + 432) = v183;
      *(_QWORD *)(v107 + 456) = v184;
      *(_QWORD *)(v107 + 464) = 0x65636E6575716573;
      *(_QWORD *)(v107 + 472) = 0xEA00000000006449;
      v185 = *(int *)(v92 + 48);
      v186 = v225;
      v187 = (double *)((char *)v225 + v185);
      *v225 = v99;
      sub_239268820(v241, (uint64_t)v186 + v185, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v188 = *v187;
      sub_2392688AC((uint64_t)v187, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v189 = *v213;
      if (*(_QWORD *)(*v213 + 16) && (v190 = sub_2392CC948(v188), (v191 & 1) != 0))
        v192 = *(_QWORD *)(*(_QWORD *)(v189 + 56) + 8 * v190);
      else
        v192 = -1;
      *(_QWORD *)(v107 + 504) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v107 + 480) = v192;
      sub_23925DBD8(v107);
      sub_239352260();
      v193 = swift_bridgeObjectRelease();
      MEMORY[0x23B83A2CC](v193);
      sub_2392D8BB4(*(_QWORD *)((v250 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_2393524A0();
      sub_239352464();
      sub_23925FE28((uint64_t)v237, &qword_256929AB0);
      if (!v235)
      {
        swift_release();
        v86 = v204;
        goto LABEL_48;
      }
      --v235;
      v94 = v229 + v210;
    }
  }
  swift_release();
LABEL_48:
  v194 = v250;
  *((_QWORD *)&v247 + 1) = sub_23925FB08(&qword_256929E38);
  *(_QWORD *)&v246 = v194;
  sub_23925FDD4(&v246, v245);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v244[0] = v86;
  sub_2392CDDE4(v245, 0x73746F6873, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v196 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  sub_23925FB08(&qword_2569278A0);
  v197 = swift_allocObject();
  *(_OWORD *)(v197 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v197 + 32) = sub_239351F30();
  *(_QWORD *)(v197 + 40) = v198;
  v199 = (void *)objc_opt_self();
  strcpy((char *)(v197 + 48), "metadata.json");
  *(_WORD *)(v197 + 62) = -4864;
  v200 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v201 = objc_msgSend(v199, sel_pathWithComponents_, v200);

  sub_2393522F0();
  v54 = sub_2392D1098((uint64_t)v196);

  swift_bridgeObjectRelease();
  return v54 & 1;
}

uint64_t sub_2392D7A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t result;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  double v34;
  int v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  int64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int64_t v66;
  uint64_t v67;
  int *v68;
  _BYTE v69[160];
  _QWORD v70[18];
  char v71;

  v1 = sub_2393520B0();
  v58 = *(_QWORD *)(v1 - 8);
  v59 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v57 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v62 = *((_QWORD *)v68 - 1);
  v3 = MEMORY[0x24BDAC7A8](v68);
  v67 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v55 - v5;
  v7 = sub_23925FB08(&qword_256929AA8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (double *)((char *)&v55 - v11);
  v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotMetadataMap);
  swift_beginAccess();
  v14 = *v13;
  v15 = *(_QWORD *)(*v13 + 64);
  v60 = *v13 + 64;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v63 = v14;
  v64 = v0;
  v19 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  swift_bridgeObjectRetain();
  v65 = v19;
  result = swift_beginAccess();
  v66 = 0;
  v61 = (unint64_t)(v16 + 63) >> 6;
  v56 = v61 - 1;
  v21 = &qword_256929AB0;
  if (!v18)
    goto LABEL_6;
LABEL_4:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v23 = v22 | (v66 << 6);
LABEL_5:
  v24 = *(_QWORD *)(v63 + 56);
  *v10 = *(_QWORD *)(*(_QWORD *)(v63 + 48) + 8 * v23);
  v25 = v24 + *(_QWORD *)(v62 + 72) * v23;
  v26 = sub_23925FB08(v21);
  sub_239268820(v25, (uint64_t)v10 + *(int *)(v26 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 0, 1, v26);
  while (1)
  {
    sub_239268764((uint64_t)v10, (uint64_t)v12, &qword_256929AA8);
    v31 = v21;
    v32 = sub_23925FB08(v21);
    v33 = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v12, 1, v32);
    if (v33 == 1)
    {
      swift_release();
      v48 = sub_239275A60();
      v50 = v57;
      v49 = v58;
      v51 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v48, v59);
      v52 = sub_239352098();
      v53 = sub_239352560();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_23925B000, v52, v53, "Bundle Writer: Saved shot cameras with mobileSfM poses to the bundle!", v54, 2u);
        MEMORY[0x23B83BC04](v54, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
      return v33 == 1;
    }
    v34 = *v12;
    sub_2392D05D0((uint64_t)v12 + *(int *)(v32 + 48), (uint64_t)v6);
    sub_239268764((uint64_t)&v6[v68[7]], (uint64_t)v69, &qword_25692A8C0);
    sub_239268764((uint64_t)v69, (uint64_t)v70, &qword_25692A8C0);
    v35 = sub_2392687A8((uint64_t)v70);
    v36 = v70[17];
    v37 = v71;
    sub_239268820((uint64_t)v6, v67, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    if (v35 == 1 || (v37 & 1) != 0)
    {
      v38 = v67 + v68[8];
      v39 = *(_QWORD *)(v38 + 64);
      v40 = *(_BYTE *)(v38 + 72);
      v41 = *(_BYTE *)(v38 + 73);
      sub_2392688AC(v67, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v36 = ((v41 | v40) & 1) != 0 ? -1 : v39;
    }
    else
    {
      sub_2392688AC(v67, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    v42 = *v65;
    if (!*(_QWORD *)(*v65 + 16))
      break;
    v43 = sub_2392CC948(v34);
    if ((v44 & 1) == 0)
      break;
    v45 = sub_2392D6568(*(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43), v34);
    v47 = sub_2392DB448((uint64_t)&v6[v68[5]], v36, v34, v45, v46);
    swift_bridgeObjectRelease();
    result = sub_2392688AC((uint64_t)v6, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    if ((v47 & 1) == 0)
      goto LABEL_37;
    v21 = v31;
    if (v18)
      goto LABEL_4;
LABEL_6:
    v27 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v27 < v61)
    {
      v28 = *(_QWORD *)(v60 + 8 * v27);
      if (v28)
        goto LABEL_9;
      v29 = v66 + 2;
      ++v66;
      if (v27 + 1 < v61)
      {
        v28 = *(_QWORD *)(v60 + 8 * v29);
        if (v28)
          goto LABEL_12;
        v66 = v27 + 1;
        if (v27 + 2 < v61)
        {
          v28 = *(_QWORD *)(v60 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_9;
          }
          v29 = v27 + 3;
          v66 = v27 + 2;
          if (v27 + 3 < v61)
          {
            v28 = *(_QWORD *)(v60 + 8 * v29);
            if (!v28)
            {
              while (1)
              {
                v27 = v29 + 1;
                if (__OFADD__(v29, 1))
                  break;
                if (v27 >= v61)
                {
                  v66 = v56;
                  goto LABEL_23;
                }
                v28 = *(_QWORD *)(v60 + 8 * v27);
                ++v29;
                if (v28)
                  goto LABEL_9;
              }
LABEL_43:
              __break(1u);
              return result;
            }
LABEL_12:
            v27 = v29;
LABEL_9:
            v18 = (v28 - 1) & v28;
            v23 = __clz(__rbit64(v28)) + (v27 << 6);
            v66 = v27;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v30 = sub_23925FB08(v21);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 1, 1, v30);
    v18 = 0;
  }
  sub_2392688AC((uint64_t)v6, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
LABEL_37:
  swift_release();
  return v33 == 1;
}

BOOL sub_2392D8020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  const __CFAllocator *v17;
  __CFString *v18;
  const __CFURL *v19;
  CGImageSourceRef v20;
  CGImageSource *v21;
  uint64_t inited;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  const __CFDictionary *v30;
  CGImageRef ThumbnailAtIndex;
  CGImage *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  BOOL v38;
  uint64_t v40;

  v1 = v0;
  v2 = sub_23925FB08(&qword_256929AA8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (double *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23925FB08(&qword_256929AE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (double *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  sub_2392D8438(v8, v4);
  swift_bridgeObjectRelease();
  v9 = sub_23925FB08(&qword_256929AB0);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_23925FE28((uint64_t)v4, &qword_256929AA8);
    return 0;
  }
  v10 = (uint64_t)v4 + *(int *)(v9 + 48);
  v11 = (uint64_t)v7 + *(int *)(v5 + 48);
  *v7 = *v4;
  sub_2392D05D0(v10, v11);
  v12 = *v7;
  sub_2392688AC((uint64_t)v7 + *(int *)(v5 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  swift_beginAccess();
  v14 = *v13;
  if (!*(_QWORD *)(v14 + 16))
    return 0;
  v15 = sub_2392CC948(v12);
  if ((v16 & 1) == 0)
    return 0;
  v17 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  sub_2392D5AE0(*(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15), v12);
  v18 = (__CFString *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v19 = CFURLCreateWithFileSystemPath(v17, v18, kCFURLPOSIXPathStyle, 0);

  if (!v19)
    return 0;
  v20 = CGImageSourceCreateWithURL(v19, 0);
  if (!v20)
  {

    return 0;
  }
  v21 = v20;
  sub_23925FB08(&qword_256927418);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2393541C0;
  v23 = (void *)*MEMORY[0x24BDD9788];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD9788];
  v24 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 40) = 1;
  v25 = (void *)*MEMORY[0x24BDD9778];
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 72) = v25;
  *(_BYTE *)(inited + 80) = 1;
  v26 = (void *)*MEMORY[0x24BDD9808];
  *(_QWORD *)(inited + 104) = v24;
  *(_QWORD *)(inited + 112) = v26;
  *(_QWORD *)(inited + 144) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 120) = 640;
  v27 = v23;
  v28 = v25;
  v29 = v26;
  sub_239261E44(inited);
  type metadata accessor for CFString(0);
  sub_239262570(&qword_256927420, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_239354334);
  v30 = (const __CFDictionary *)sub_239352260();
  swift_bridgeObjectRelease();
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v21, 0, v30);
  if (!ThumbnailAtIndex)
  {

    return 0;
  }
  v32 = ThumbnailAtIndex;
  sub_23925FB08(&qword_2569278A0);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2393548B0;
  *(_QWORD *)(v33 + 32) = sub_239351F30();
  *(_QWORD *)(v33 + 40) = v34;
  v35 = (void *)objc_opt_self();
  strcpy((char *)(v33 + 48), "thumbnail.jpg");
  *(_WORD *)(v33 + 62) = -4864;
  v36 = (void *)sub_239352434();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v35, sel_pathWithComponents_, v36);

  sub_2393522F0();
  v38 = sub_2392D1280(v32);

  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_2392D8438@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_23925FB08(&qword_256929AB0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v24 = v5;
  v9 = sub_2392DA8C8(v8);
  v10 = sub_2392DAE44(a1);
  v12 = v11;
  v14 = v13 & 1;
  v15 = sub_2392DAECC(v10, v11, v13 & 1, v9, a1);
  v17 = v16;
  v19 = v18 & 1;
  sub_2392DC3EC(v10, v12, v14);
  v20 = (uint64_t)v7 + *(int *)(v4 + 48);
  sub_2392DB01C(v20, v15, v17, v19, a1);
  *v7 = v21;
  *a2 = v21;
  sub_239268820(v20, (uint64_t)a2 + *(int *)(v4 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  sub_23925FE28((uint64_t)v7, &qword_256929AB0);
  sub_2392DC3EC(v15, v17, v19);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(a2, 0, 1, v4);
}

uint64_t sub_2392D85C0(double *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  double v20;
  void *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  double (*v25)(void);
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  char *v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  unint64_t v53;
  double *v54;
  uint64_t v55;
  uint64_t v56;
  double (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[4];
  uint64_t v63;
  _OWORD v64[4];
  uint64_t v65;
  _QWORD v66[16];

  v2 = sub_2393520B0();
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v44 - v5;
  v6 = sub_239351F3C();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 52);
  v54 = a1;
  v9 = *(_QWORD *)((char *)a1 + v8);
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  swift_bridgeObjectRetain();
  v10 = sub_239352854();
  if (!v10)
    return swift_bridgeObjectRelease();
LABEL_3:
  v45 = (_BYTE *)(v61 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_isPeridot);
  v52 = (uint64_t *)(v61 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  v53 = v9 & 0xC000000000000001;
  swift_beginAccess();
  v11 = 4;
  v46 = v10;
  v47 = v9;
  while (1)
  {
    v13 = v11 - 4;
    if (v53)
    {
      v14 = MEMORY[0x23B83A68C](v11 - 4, v9);
      v15 = v11 - 3;
      if (__OFADD__(v13, 1))
        goto LABEL_22;
    }
    else
    {
      v14 = *(_QWORD *)(v9 + 8 * v11);
      swift_retain();
      v15 = v11 - 3;
      if (__OFADD__(v13, 1))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    v16 = *v52;
    if (!*(_QWORD *)(*v52 + 16))
      break;
    v17 = sub_2392CC948(*v54);
    if ((v18 & 1) == 0)
      break;
    v59 = v15;
    v60 = v11;
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    v57 = *(double (**)(void))(*(_QWORD *)v14 + 104);
    v58 = v19;
    v20 = v57();
    sub_2392D6140(v19, v20);
    v21 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v14 + 128))();
    v22 = v45;
    swift_beginAccess();
    sub_2392E0E94(v22, v64);
    swift_endAccess();

    v62[0] = v64[0];
    v62[1] = v64[1];
    v62[2] = v64[2];
    v62[3] = v64[3];
    v63 = v65;
    v23 = (uint64_t)v48;
    sub_239351EAC();
    swift_bridgeObjectRelease();
    sub_2392DB984((uint64_t *)v62, v23);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v23, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = swift_bridgeObjectRelease();
    v25 = v57;
    v26 = ((double (*)(uint64_t))v57)(v24);
    v27 = sub_2392D6354(v58, v26);
    v29 = v28;
    v30 = (*(_QWORD *(**)(_QWORD *__return_ptr))(*(_QWORD *)v14 + 152))(v66);
    v31 = ((double (*)(_QWORD *))v25)(v30);
    LOBYTE(v23) = sub_2392DC0B8((uint64_t)v66, v31, v27, v29);
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      swift_release();
      v12 = v46;
      v33 = v59;
      v32 = v60;
    }
    else
    {
      v34 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v51, v34, v56);
      v35 = sub_239352098();
      v36 = sub_23935256C();
      v37 = os_log_type_enabled(v35, v36);
      v33 = v59;
      v32 = v60;
      if (v37)
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_23925B000, v35, v36, "Bundle Writer: Failed to write camera to bundle!", v38, 2u);
        MEMORY[0x23B83BC04](v38, -1, -1);
      }

      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v56);
      v12 = v46;
    }
    v11 = v32 + 1;
    v9 = v47;
    if (v33 == v12)
      return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v39 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v44, v39, v56);
  v40 = sub_239352098();
  v41 = sub_23935256C();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_23925B000, v40, v41, "Bundle Writer: Failed to get sequence ID from temporal depth point cloud timestamp", v42, 2u);
    MEMORY[0x23B83BC04](v42, -1, -1);
  }

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v44, v56);
}

uint64_t ObjectCaptureBundleWriter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_url;
  v2 = sub_239351F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_2392C373C(*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise));
  sub_2392DB2E0(*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata), *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ObjectCaptureBundleWriter.__deallocating_deinit()
{
  ObjectCaptureBundleWriter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2392D8BB4(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_239352470();
  return result;
}

uint64_t sub_2392D8BE0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  sub_23925FB08(&qword_256929E60);
  result = sub_23935286C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_239352974();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2392D8E88(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2392CC948(a3);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_2392D8FB0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(double *)(v16[6] + v18) = a3;
    *(_QWORD *)(v16[7] + v18) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_2392D8BE0(result, a2 & 1);
  result = sub_2392CC948(a3);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_239352908();
  __break(1u);
  return result;
}

void *sub_2392D8FB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_23925FB08(&qword_256929E60);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_2392D913C(_QWORD *a1, double a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2392D93CC(v4);
  v4[9] = sub_2392D91F4(v4 + 4, isUniquelyReferenced_nonNull_native, a2);
  return sub_2392D91B8;
}

void sub_2392D91B8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_2392D91F4(_QWORD *a1, char a2, double a3))(double **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(double **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = v3;
  *(double *)v8 = a3;
  v9 = sub_23925FB08(&qword_25692B620);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_2392CC948(a3);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a2 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        v21 = *(_QWORD *)(v20 - 8);
        sub_2392D05D0(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_2392D937C;
      }
LABEL_11:
      v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a2 & 1) == 0)
    {
      sub_2392CEAC4();
      goto LABEL_7;
    }
    sub_2392CD104(v16, a2 & 1);
    v23 = sub_2392CC948(a3);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(double **))sub_239352908();
  __break(1u);
  return result;
}

void sub_2392D937C(double **a1)
{
  double *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)*((_QWORD *)*a1 + 2);
  sub_2392D93F8((uint64_t)v2, *((_BYTE *)*a1 + 32), *((uint64_t **)*a1 + 1), *((_QWORD *)*a1 + 3), **a1);
  sub_23925FE28((uint64_t)v2, &qword_25692B620);
  free(v2);
  free(v1);
}

uint64_t (*sub_2392D93CC(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2392D93EC;
}

uint64_t sub_2392D93EC(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_2392D93F8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t result;
  _QWORD *v21;
  uint64_t v22;

  v10 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v22 - v18;
  sub_23926059C(a1, (uint64_t)v12, &qword_25692B620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    result = sub_23925FE28((uint64_t)v12, &qword_25692B620);
    if ((a2 & 1) != 0)
      return sub_2392CD980(a4, *a3);
  }
  else
  {
    sub_2392D05D0((uint64_t)v12, (uint64_t)v19);
    v21 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_2392D05D0((uint64_t)v19, v21[7] + *(_QWORD *)(v14 + 72) * a4);
    }
    else
    {
      sub_2392D05D0((uint64_t)v19, (uint64_t)v17);
      return sub_2392CE3D8(a4, (uint64_t)v17, v21, a5);
    }
  }
  return result;
}

uint64_t sub_2392D957C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_23925FB08(&qword_256929AB0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_2392DAE30(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_2392D9738(v6);
  *a1 = v3;
  return result;
}

size_t sub_2392D9600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23925FB08(&qword_256929E48);
  v3 = *(_QWORD *)(sub_23925FB08(&qword_256929AB0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_23925FB08(&qword_256929AB0) - 8) + 80);
      v10 = sub_2392DAB38(&v11, (uint64_t)v6 + ((v9 + 32) & ~v9), v1, a1);
      swift_bridgeObjectRetain();
      sub_23925FDCC();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2392D9738(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  double *v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  double *v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  double *v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  double *v128;
  double *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;

  v2 = v1;
  v4 = sub_23925FB08(&qword_256929AB0);
  v125 = *(_QWORD *)(v4 - 8);
  v126 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v122 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v131 = (uint64_t)&v116 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v129 = (double *)((char *)&v116 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v128 = (double *)((char *)&v116 - v11);
  v12 = a1[1];
  result = sub_2393528B4();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      return sub_2392DA114(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v118 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v124 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v117 = MEMORY[0x24BEE4AF8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      if (v20 >= 2)
      {
        v109 = *a1;
        do
        {
          v110 = v20 - 2;
          if (v20 < 2)
            goto LABEL_133;
          if (!v109)
            goto LABEL_145;
          v111 = v18;
          v112 = *(_QWORD *)&v18[16 * v110 + 32];
          v113 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_2392DA348(v109 + *(_QWORD *)(v125 + 72) * v112, v109 + *(_QWORD *)(v125 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v109 + *(_QWORD *)(v125 + 72) * v113, v124);
          if (v2)
            break;
          if (v113 < v112)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_23927F8E8((uint64_t)v18);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_135;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v20 > v115)
            goto LABEL_136;
          memmove(&v111[16 * v20 + 16], &v111[16 * v20 + 32], 16 * (v115 - v20));
          *((_QWORD *)v111 + 2) = v115 - 1;
          v20 = v115 - 1;
          v18 = v111;
        }
        while (v115 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v117 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_239352488();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v125 + 80);
    v117 = v16;
    v124 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v130 = a1;
  while (1)
  {
    v21 = v19 + 1;
    v123 = v19;
    if (v19 + 1 >= v12)
    {
      v28 = v19 + 1;
      goto LABEL_24;
    }
    v120 = *a1;
    v22 = v120;
    v132 = *(_QWORD *)(v125 + 72);
    v23 = v128;
    sub_23926059C(v120 + v132 * v21, (uint64_t)v128, &qword_256929AB0);
    v24 = v22 + v132 * v19;
    v25 = v129;
    sub_23926059C(v24, (uint64_t)v129, &qword_256929AB0);
    v26 = *v23;
    v27 = *v25;
    sub_23925FE28((uint64_t)v25, &qword_256929AB0);
    sub_23925FE28((uint64_t)v23, &qword_256929AB0);
    v28 = v19 + 2;
    if (v19 + 2 >= v12)
    {
LABEL_21:
      if (v26 >= v27)
        goto LABEL_24;
LABEL_42:
      if (v28 < v19)
        goto LABEL_139;
      if (v19 < v28)
      {
        v127 = v12;
        v119 = v18;
        v49 = 0;
        v50 = v132;
        v51 = v132 * (v28 - 1);
        v52 = v28 * v132;
        v53 = v19 * v132;
        do
        {
          if (v19 != v28 + v49 - 1)
          {
            v121 = v2;
            v54 = v120;
            if (!v120)
              goto LABEL_144;
            v55 = v120 + v53;
            sub_239268764(v120 + v53, v122, &qword_256929AB0);
            if (v53 < v51 || v55 >= v54 + v52)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v53 != v51)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_239268764(v122, v54 + v51, &qword_256929AB0);
            a1 = v130;
            v2 = v121;
            v50 = v132;
          }
          ++v19;
          --v49;
          v51 -= v50;
          v52 -= v50;
          v53 += v50;
        }
        while (v19 < v28 + v49);
        v18 = v119;
        v19 = v123;
        v12 = v127;
      }
      goto LABEL_24;
    }
    v121 = v2;
    v119 = v18;
    v127 = v132 * v21;
    v29 = v120;
    v30 = v19 + 2;
    v31 = v132 * (v19 + 2);
    while (1)
    {
      v32 = v12;
      v33 = v128;
      sub_23926059C(v29 + v31, (uint64_t)v128, &qword_256929AB0);
      v34 = v129;
      sub_23926059C(v29 + v127, (uint64_t)v129, &qword_256929AB0);
      v35 = *v33 >= *v34;
      sub_23925FE28((uint64_t)v34, &qword_256929AB0);
      sub_23925FE28((uint64_t)v33, &qword_256929AB0);
      if (v26 < v27 == v35)
        break;
      v29 += v132;
      ++v30;
      v12 = v32;
      if (v32 == v30)
      {
        v28 = v32;
        v18 = v119;
        v2 = v121;
        v19 = v123;
        goto LABEL_21;
      }
    }
    v18 = v119;
    v28 = v30;
    v2 = v121;
    v19 = v123;
    v12 = v32;
    if (v26 < v27)
      goto LABEL_42;
LABEL_24:
    if (v28 >= v12)
      goto LABEL_56;
    if (__OFSUB__(v28, v19))
      goto LABEL_137;
    if (v28 - v19 >= v118)
      goto LABEL_56;
    if (__OFADD__(v19, v118))
      goto LABEL_140;
    v36 = v19 + v118 >= v12 ? v12 : v19 + v118;
    if (v36 < v19)
      break;
    if (v28 != v36)
    {
      v119 = v18;
      v120 = v36;
      v121 = v2;
      v37 = *(_QWORD *)(v125 + 72);
      v132 = v37 * (v28 - 1);
      v127 = v37;
      v38 = v28 * v37;
      do
      {
        v39 = 0;
        while (1)
        {
          v40 = v28;
          v41 = *a1;
          v42 = v128;
          sub_23926059C(v38 + v39 + *a1, (uint64_t)v128, &qword_256929AB0);
          v43 = v132 + v39 + v41;
          v44 = v129;
          sub_23926059C(v43, (uint64_t)v129, &qword_256929AB0);
          v45 = *v42;
          v46 = *v44;
          sub_23925FE28((uint64_t)v44, &qword_256929AB0);
          sub_23925FE28((uint64_t)v42, &qword_256929AB0);
          if (v45 >= v46)
            break;
          v47 = *a1;
          if (!*a1)
            goto LABEL_142;
          v48 = v47 + v132 + v39;
          sub_239268764(v47 + v38 + v39, v131, &qword_256929AB0);
          swift_arrayInitWithTakeFrontToBack();
          sub_239268764(v131, v48, &qword_256929AB0);
          v39 -= v127;
          ++v19;
          v28 = v40;
          a1 = v130;
          if (v40 == v19)
            goto LABEL_35;
        }
        v28 = v40;
LABEL_35:
        ++v28;
        v132 += v127;
        v38 += v127;
        v19 = v123;
      }
      while (v28 != v120);
      v28 = v120;
      v2 = v121;
      v18 = v119;
    }
LABEL_56:
    if (v28 < v19)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v132 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_23927F6E0(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v58 = *((_QWORD *)v18 + 2);
    v57 = *((_QWORD *)v18 + 3);
    v20 = v58 + 1;
    if (v58 >= v57 >> 1)
      v18 = sub_23927F6E0((char *)(v57 > 1), v58 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v59 = v18 + 32;
    v60 = &v18[16 * v58 + 32];
    v61 = v132;
    *(_QWORD *)v60 = v19;
    *((_QWORD *)v60 + 1) = v61;
    if (v58)
    {
      while (1)
      {
        v62 = v20 - 1;
        if (v20 >= 4)
        {
          v67 = &v59[16 * v20];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_121;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_122;
          v74 = v20 - 2;
          v75 = &v59[16 * v20 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_124;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_127;
          if (v79 >= v70)
          {
            v97 = &v59[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_131;
            v90 = v65 < v100;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v91 = *((_QWORD *)v18 + 4);
            v92 = *((_QWORD *)v18 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_87;
          }
          v64 = *((_QWORD *)v18 + 4);
          v63 = *((_QWORD *)v18 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_123;
        v74 = v20 - 2;
        v80 = &v59[16 * v20 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_126;
        v86 = &v59[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_129;
        if (__OFADD__(v84, v89))
          goto LABEL_130;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_93:
          if (v90)
            v62 = v74;
          goto LABEL_95;
        }
LABEL_87:
        if ((v85 & 1) != 0)
          goto LABEL_125;
        v93 = &v59[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_128;
        if (v96 < v84)
          goto LABEL_14;
LABEL_95:
        v101 = v62 - 1;
        if (v62 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v102 = *a1;
        if (!*a1)
          goto LABEL_143;
        v103 = v18;
        v104 = &v59[16 * v101];
        v105 = *(_QWORD *)v104;
        v106 = &v59[16 * v62];
        v107 = *((_QWORD *)v106 + 1);
        sub_2392DA348(v102 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v104, v102 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v106, v102 + *(_QWORD *)(v125 + 72) * v107, v124);
        if (v2)
          goto LABEL_115;
        if (v107 < v105)
          goto LABEL_118;
        if (v62 > *((_QWORD *)v103 + 2))
          goto LABEL_119;
        *(_QWORD *)v104 = v105;
        *(_QWORD *)&v59[16 * v101 + 8] = v107;
        v108 = *((_QWORD *)v103 + 2);
        if (v62 >= v108)
          goto LABEL_120;
        v18 = v103;
        v20 = v108 - 1;
        memmove(&v59[16 * v62], v106 + 16, 16 * (v108 - 1 - v62));
        *((_QWORD *)v103 + 2) = v108 - 1;
        a1 = v130;
        if (v108 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v132;
    if (v132 >= v12)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23935283C();
  __break(1u);
  return result;
}

uint64_t sub_2392DA114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a1;
  v28 = sub_23925FB08(&qword_256929AB0);
  v7 = MEMORY[0x24BDAC7A8](v28);
  v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v29 = (double *)((char *)&v25 - v10);
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (double *)((char *)&v25 - v13);
  v31 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v34 = v15 * (v31 - 1);
    v30 = v15;
    v33 = v15 * v31;
LABEL_5:
    v16 = 0;
    v17 = v27;
    while (1)
    {
      v18 = *a4;
      sub_23926059C(v33 + v16 + *a4, (uint64_t)v14, &qword_256929AB0);
      v19 = v34 + v16 + v18;
      v20 = v29;
      sub_23926059C(v19, (uint64_t)v29, &qword_256929AB0);
      v21 = *v14;
      v22 = *v20;
      sub_23925FE28((uint64_t)v20, &qword_256929AB0);
      result = sub_23925FE28((uint64_t)v14, &qword_256929AB0);
      if (v21 >= v22)
      {
LABEL_4:
        v34 += v30;
        v33 += v30;
        if (++v31 == v26)
          return result;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v23 + v34 + v16;
      sub_239268764(v23 + v33 + v16, v32, &qword_256929AB0);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_239268764(v32, v24, &qword_256929AB0);
      v16 -= v30;
      if (v31 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2392DA348(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v21;
  double v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v26;
  unint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double v33;
  double v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;

  v40 = sub_23925FB08(&qword_256929AB0);
  v8 = MEMORY[0x24BDAC7A8](v40);
  v10 = (double *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (double *)((char *)&v38 - v11);
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v43 = a1;
  v42 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v28 = a4 + v19;
      v41 = a4 + v19;
      v43 = a2;
      v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v30 = -v14;
        do
        {
          v31 = a3 + v30;
          sub_23926059C(v28 + v30, (uint64_t)v12, &qword_256929AB0);
          v32 = a2 + v30;
          sub_23926059C(a2 + v30, (uint64_t)v10, &qword_256929AB0);
          v33 = *v12;
          v34 = *v10;
          sub_23925FE28((uint64_t)v10, &qword_256929AB0);
          sub_23925FE28((uint64_t)v12, &qword_256929AB0);
          if (v33 >= v34)
          {
            v35 = v41;
            v41 += v30;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v30;
          }
          v28 = v41;
          if (v41 <= a4)
            break;
          a2 = v32;
          a3 += v30;
        }
        while (v32 > v39);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v39 = a4 + v18;
    v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_23926059C(a2, (uint64_t)v12, &qword_256929AB0);
        sub_23926059C(a4, (uint64_t)v10, &qword_256929AB0);
        v21 = *v12;
        v22 = *v10;
        sub_23925FE28((uint64_t)v10, &qword_256929AB0);
        sub_23925FE28((uint64_t)v12, &qword_256929AB0);
        v23 = v43;
        if (v21 >= v22)
        {
          v26 = v42 + v14;
          if (v43 < v42 || v43 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v42 = v26;
          v24 = a2;
        }
        else
        {
          v24 = a2 + v14;
          if (v43 < a2 || v43 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v43 = v23 + v14;
        a4 = v42;
        if (v42 >= v39)
          break;
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_68:
    sub_2392DA7B8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392DA7B8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_23925FB08(&qword_256929AB0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_239352884();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

unint64_t sub_2392DA8C8(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x23B83BC10](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x23B83BC10](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2392DA950(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_256929E48);
  v10 = *(_QWORD *)(sub_23925FB08(&qword_256929AB0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23925FB08(&qword_256929AB0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392DAB38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_23925FB08(&qword_256929AB0);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v31 - v13;
  v15 = *(_QWORD *)(a4 + 64);
  v36 = a4 + 64;
  v16 = -1 << *(_BYTE *)(a4 + 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v30 = v36;
    *a1 = a4;
    a1[1] = v30;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v33 = -1 << *(_BYTE *)(a4 + 32);
  v34 = a1;
  v19 = 0;
  v20 = 0;
  v35 = (unint64_t)(63 - v16) >> 6;
  v32 = v35 - 1;
  v21 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    v27 = *(_QWORD *)(a4 + 56);
    v28 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v23);
    v29 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    sub_239268820(v27 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v23, (uint64_t)v11 + *(int *)(v38 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    *v11 = v28;
    sub_239268764((uint64_t)v11, (uint64_t)v14, &qword_256929AB0);
    result = sub_239268764((uint64_t)v14, a2, &qword_256929AB0);
    if (v20 == v21)
    {
      a3 = v21;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v37 + 72);
    if (v18)
      goto LABEL_8;
LABEL_9:
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v24 >= v35)
      goto LABEL_33;
    v25 = *(_QWORD *)(v36 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v35)
      {
        v18 = 0;
        v19 = v24;
      }
      else
      {
        v25 = *(_QWORD *)(v36 + 8 * v19);
        if (v25)
          goto LABEL_14;
        v26 = v24 + 2;
        if (v24 + 2 >= v35)
          goto LABEL_33;
        v25 = *(_QWORD *)(v36 + 8 * v26);
        if (v25)
        {
LABEL_17:
          v24 = v26;
          goto LABEL_18;
        }
        v19 = v24 + 3;
        if (v24 + 3 < v35)
        {
          v25 = *(_QWORD *)(v36 + 8 * v19);
          if (v25)
          {
LABEL_14:
            v24 = v19;
            goto LABEL_18;
          }
          v26 = v24 + 4;
          if (v24 + 4 >= v35)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v25 = *(_QWORD *)(v36 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              v24 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_42;
              if (v24 >= v35)
              {
                v18 = 0;
                v19 = v32;
                goto LABEL_37;
              }
              v25 = *(_QWORD *)(v36 + 8 * v24);
              ++v26;
              if (v25)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v33;
      a1 = v34;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2392DAE30(_QWORD *a1)
{
  return sub_2392DA950(0, a1[2], 0, a1);
}

uint64_t sub_2392DAE44(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2392DAECC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  if (a4 < 0)
    goto LABEL_25;
  if (!a4)
  {
    v11 = result;
LABEL_22:
    sub_2392DC3F8(result, a2, a3 & 1);
    return v11;
  }
  v5 = 0;
  v6 = a5 + 64;
  v7 = 1 << *(_BYTE *)(a5 + 32);
  v8 = *(_DWORD *)(a5 + 36);
  v9 = (unint64_t)(v7 + 63) >> 6;
  v10 = a5 + 88;
  v11 = result;
  v12 = a2;
  while ((v11 & 0x8000000000000000) == 0 && (uint64_t)v11 < v7)
  {
    if (v12 != v8)
      goto LABEL_24;
    v13 = v11 >> 6;
    v14 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
    if ((v14 & (1 << v11)) == 0)
      goto LABEL_24;
    v15 = v14 & (-2 << (v11 & 0x3F));
    if (v15)
    {
      v11 = __clz(__rbit64(v15)) | v11 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v16 = v13 + 1;
      v11 = v7;
      if (v13 + 1 < v9)
      {
        v17 = *(_QWORD *)(v6 + 8 * v16);
        if (!v17)
        {
          v16 = v13 + 2;
          v11 = v7;
          if (v13 + 2 >= v9)
            goto LABEL_5;
          v17 = *(_QWORD *)(v6 + 8 * v16);
          if (!v17)
          {
            while (v9 - 3 != v13)
            {
              v17 = *(_QWORD *)(v10 + 8 * v13++);
              if (v17)
              {
                v16 = v13 + 2;
                goto LABEL_13;
              }
            }
            v11 = v7;
            goto LABEL_5;
          }
        }
LABEL_13:
        v11 = __clz(__rbit64(v17)) + (v16 << 6);
      }
    }
LABEL_5:
    ++v5;
    v12 = v8;
    if (v5 == a4)
      goto LABEL_22;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2392DB01C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 56);
    v8 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    return sub_239268820(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a2, v6, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_2392DB0C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  double *i;
  double v5;
  double v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_256929E60);
    v3 = (_QWORD *)sub_239352878();
    for (i = (double *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_2392CC948(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(double *)(v3[6] + v9) = v5;
      *(double *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_2392DB19C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2392DB1C0(__int128 *a1, double *a2)
{
  return sub_2392D30A4(a1, a2);
}

uint64_t sub_2392DB1C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392DB1EC(double *a1)
{
  return sub_2392D3A94(a1);
}

uint64_t sub_2392DB1F4(void **a1)
{
  return sub_2392D3BA4(a1);
}

uint64_t sub_2392DB1FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v1 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = *((_DWORD *)a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata;
    v8 = v2;
    v9 = *(_QWORD *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata);
    v10 = *(_QWORD *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata + 8);
    *(_QWORD *)v7 = v8;
    *(_QWORD *)(v7 + 8) = v1;
    *(_QWORD *)(v7 + 16) = v4;
    *(_QWORD *)(v7 + 24) = v3;
    *(_DWORD *)(v7 + 32) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2392DB2E0(v9, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392DB2C8(uint64_t *a1)
{
  return sub_2392D3FE0(a1);
}

uint64_t sub_2392DB2D0(double *a1)
{
  return sub_2392D4F50(a1);
}

uint64_t sub_2392DB2D8(uint64_t a1)
{
  return sub_2392D5570(a1);
}

uint64_t sub_2392DB2E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2392DB310()
{
  return type metadata accessor for ObjectCaptureBundleWriter();
}

uint64_t type metadata accessor for ObjectCaptureBundleWriter()
{
  uint64_t result;

  result = qword_25692DA70;
  if (!qword_25692DA70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2392DB354()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351F3C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureBundleWriter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureBundleWriter.completionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ObjectCaptureBundleWriter.__allocating_init(publishers:url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t sub_2392DB448(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int *v23;
  int8x16_t *v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  int8x16_t *v27;
  uint64_t v28;
  char v29;
  int8x16_t *v30;
  uint64_t v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  const __CFAllocator *v40;
  __CFString *v41;
  CFURLRef v42;
  void *v43;
  void *v44;
  uint64_t v46;
  _QWORD v47[2];
  unint64_t v48;
  _OWORD v49[3];
  _OWORD v50[2];
  __int128 v51;
  uint64_t v52;
  uint64_t v53;

  v47[1] = a5;
  v53 = *MEMORY[0x24BDAC8D0];
  v8 = sub_239351F3C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_239354F90;
  *(_QWORD *)(inited + 32) = 0x64496172656D6163;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v13 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = 0x49746E656D676573;
  *(_QWORD *)(inited + 88) = 0xE900000000000064;
  *(_QWORD *)(inited + 96) = a2;
  *(_QWORD *)(inited + 120) = v13;
  *(_QWORD *)(inited + 128) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 136) = 0xE900000000000070;
  v14 = sub_2392DEFE0(a3);
  v15 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 144) = v14;
  *(_QWORD *)(inited + 152) = v16;
  *(_QWORD *)(inited + 168) = v15;
  *(_QWORD *)(inited + 176) = 0x69736E6972746E69;
  *(_QWORD *)(inited + 184) = 0xEA00000000007363;
  v17 = *(_OWORD *)(a1 + 16);
  v49[0] = *(_OWORD *)a1;
  v49[1] = v17;
  v49[2] = *(_OWORD *)(a1 + 32);
  sub_2392DEB84((uint64_t)v49);
  v19 = v18;
  v20 = sub_23925FB08((uint64_t *)&unk_25692BD10);
  *(_QWORD *)(inited + 192) = v19;
  *(_QWORD *)(inited + 216) = v20;
  *(_QWORD *)(inited + 224) = 0x726F66736E617274;
  *(_QWORD *)(inited + 232) = 0xE90000000000006DLL;
  sub_2392DEC48(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 96));
  *(_QWORD *)(inited + 264) = v20;
  *(_QWORD *)(inited + 240) = v21;
  v22 = sub_23925DBD8(inited);
  v23 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v24 = (int8x16_t *)(a1 + v23[8]);
  if ((v24[4].i8[0] & 1) == 0)
  {
    sub_2392DEC48(*v24, v24[1], v24[2], v24[3]);
    v52 = v20;
    *(_QWORD *)&v51 = v25;
    sub_23925FDD4(&v51, v50);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48 = v22;
    sub_2392CDDE4(v50, 0xD000000000000014, 0x800000023935D780, isUniquelyReferenced_nonNull_native);
    v22 = v48;
    swift_bridgeObjectRelease();
  }
  v27 = (int8x16_t *)(a1 + v23[9]);
  if ((v27[4].i8[0] & 1) == 0)
  {
    sub_2392DEC48(*v27, v27[1], v27[2], v27[3]);
    v52 = v20;
    *(_QWORD *)&v51 = v28;
    sub_23925FDD4(&v51, v50);
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v22;
    sub_2392CDDE4(v50, 0xD000000000000021, 0x800000023935D750, v29);
    v22 = v48;
    swift_bridgeObjectRelease();
  }
  v30 = (int8x16_t *)(a1 + v23[10]);
  if ((v30[4].i8[0] & 1) == 0)
  {
    sub_2392DEC48(*v30, v30[1], v30[2], v30[3]);
    v52 = v20;
    *(_QWORD *)&v51 = v31;
    sub_23925FDD4(&v51, v50);
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v48 = v22;
    sub_2392CDDE4(v50, 0xD00000000000001FLL, 0x800000023935D730, v32);
    swift_bridgeObjectRelease();
  }
  v33 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  v34 = (void *)objc_opt_self();
  *(_QWORD *)&v51 = 0;
  v35 = objc_msgSend(v34, sel_dataWithJSONObject_options_error_, v33, 3, &v51);
  v36 = (id)v51;
  if (!v35)
  {
    v43 = v36;
    v44 = (void *)sub_239351E58();

    swift_willThrow();
LABEL_12:
    v46 = 0;
    goto LABEL_13;
  }
  v37 = sub_239351F6C();
  v39 = v38;

  v40 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v41 = (__CFString *)sub_2393522CC();
  v42 = CFURLCreateWithFileSystemPath(v40, v41, kCFURLPOSIXPathStyle, 0);

  if (!v42)
  {
    sub_23927DAE0(v37, v39);
    goto LABEL_12;
  }
  sub_239351F18();
  sub_239351F78();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  sub_23927DAE0(v37, v39);
  v46 = 1;
LABEL_13:

  return v46;
}

unint64_t sub_2392DB984(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;

  v4 = sub_239352320();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v13 = a1[4];
  v12 = a1[5];
  v15 = a1[6];
  v14 = a1[7];
  v16 = a1[8];
  v17 = 0xD00000000000007FLL;
  v18 = 0x800000023935D6B0;
  v61 = 0xD00000000000007FLL;
  v62 = 0x800000023935D6B0;
  result = *(_QWORD *)(v14 + 16);
  if (!result)
    goto LABEL_13;
  if (result > *(_QWORD *)(v9 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (result > *(_QWORD *)(v8 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > *(_QWORD *)(v11 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result > *(_QWORD *)(v10 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result > *(_QWORD *)(v13 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (result > *(_QWORD *)(v12 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (result > *(_QWORD *)(v15 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result <= *(_QWORD *)(v16 + 16))
  {
    v45 = a2;
    v46 = v7;
    v47 = v5;
    v48 = v4;
    v20 = 0;
    v21 = 0;
    v56 = v8 + 32;
    v57 = v9 + 32;
    v54 = v10 + 32;
    v55 = v11 + 32;
    v52 = v12 + 32;
    v53 = v13 + 32;
    v50 = v14 + 32;
    v51 = v15 + 32;
    v49 = result;
    do
    {
      v58 = v21 + 1;
      LOBYTE(v59) = *(_BYTE *)(v57 + v21);
      v59 = sub_2393528C0();
      v60 = v22;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v23 = v59;
      v24 = v60;
      LOBYTE(v59) = *(_BYTE *)(v56 + v21);
      sub_2393528C0();
      v59 = v23;
      v60 = v24;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v25 = v59;
      v26 = v60;
      LOBYTE(v59) = *(_BYTE *)(v55 + v21);
      sub_2393528C0();
      v59 = v25;
      v60 = v26;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v27 = v59;
      v28 = v60;
      sub_2393524DC();
      v59 = v27;
      v60 = v28;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v29 = v59;
      v30 = v60;
      sub_2393524DC();
      v59 = v29;
      v60 = v30;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v31 = v59;
      v32 = v60;
      sub_2393524DC();
      v59 = v31;
      v60 = v32;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v33 = v59;
      v34 = v60;
      sub_2393524DC();
      v59 = v33;
      v60 = v34;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v35 = v59;
      v36 = v60;
      sub_2393524DC();
      v59 = v35;
      v60 = v36;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v37 = v59;
      v38 = v60;
      sub_2393524DC();
      v59 = v37;
      v60 = v38;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v39 = v59;
      v40 = v60;
      sub_2393524DC();
      v59 = v39;
      v60 = v40;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v41 = v59;
      v42 = v60;
      sub_2393524DC();
      v59 = v41;
      v60 = v42;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      v43 = v59;
      v44 = v60;
      sub_2393524DC();
      v59 = v43;
      v60 = v44;
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v59 = 10;
      v60 = 0xE100000000000000;
      sub_239352380();
      swift_bridgeObjectRelease();
      sub_239352380();
      swift_bridgeObjectRelease();
      v20 += 16;
      v21 = v58;
    }
    while (v49 != v58);
    v17 = v61;
    v18 = v62;
    v5 = v47;
    v4 = v48;
    v7 = v46;
LABEL_13:
    v59 = v17;
    v60 = v18;
    sub_239352314();
    sub_2392753CC();
    sub_2393526EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_bridgeObjectRelease();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2392DC0B8(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  const __CFAllocator *v25;
  __CFString *v26;
  CFURLRef v27;
  void *v28;
  void *v29;
  uint64_t v31;
  _QWORD v32[3];
  id v33;
  _OWORD v34[17];
  uint64_t v35;

  v32[1] = a4;
  v35 = *MEMORY[0x24BDAC8D0];
  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_239354680;
  *(_QWORD *)(inited + 32) = 0x64496172656D6163;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v11 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 1;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 88) = 0xE900000000000070;
  v12 = MEMORY[0x24BEE13C8];
  *(double *)(inited + 96) = a2;
  *(_QWORD *)(inited + 120) = v12;
  *(_QWORD *)(inited + 128) = 0x69736E6972746E69;
  *(_QWORD *)(inited + 136) = 0xEA00000000007363;
  v13 = *(_OWORD *)(a1 + 16);
  v34[0] = *(_OWORD *)a1;
  v34[1] = v13;
  v34[2] = *(_OWORD *)(a1 + 32);
  sub_2392DEB84((uint64_t)v34);
  v15 = v14;
  v16 = sub_23925FB08((uint64_t *)&unk_25692BD10);
  *(_QWORD *)(inited + 144) = v15;
  *(_QWORD *)(inited + 168) = v16;
  *(_QWORD *)(inited + 176) = 0x726F66736E617274;
  *(_QWORD *)(inited + 184) = 0xE90000000000006DLL;
  sub_2392DEC48(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 96));
  *(_QWORD *)(inited + 216) = v16;
  *(_QWORD *)(inited + 192) = v17;
  sub_23925DBD8(inited);
  v18 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  v19 = (void *)objc_opt_self();
  v33 = 0;
  v20 = objc_msgSend(v19, sel_dataWithJSONObject_options_error_, v18, 3, &v33);
  v21 = v33;
  if (!v20)
  {
    v28 = v21;
    v29 = (void *)sub_239351E58();

    swift_willThrow();
LABEL_6:
    v31 = 0;
    goto LABEL_7;
  }
  v22 = sub_239351F6C();
  v24 = v23;

  v25 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v26 = (__CFString *)sub_2393522CC();
  v27 = CFURLCreateWithFileSystemPath(v25, v26, kCFURLPOSIXPathStyle, 0);

  if (!v27)
  {
    sub_23927DAE0(v22, v24);
    goto LABEL_6;
  }
  sub_239351F18();
  sub_239351F78();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  sub_23927DAE0(v22, v24);
  v31 = 1;
LABEL_7:

  return v31;
}

uint64_t sub_2392DC3EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2392DC3F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

void type metadata accessor for CFDictionary(uint64_t a1)
{
  sub_239263BFC(a1, &qword_256929E68);
}

uint64_t sub_2392DC418(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int8x16_t *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  int8x16_t *v22;
  uint64_t v23;
  char v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  const __CFAllocator *v32;
  __CFString *v33;
  CFURLRef v34;
  void *v35;
  void *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _OWORD v42[3];
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v40 = sub_239351F3C();
  v4 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_239354680;
  *(_QWORD *)(inited + 32) = 0x64496172656D6163;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v8 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 48) = 1;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 88) = 0xE900000000000070;
  v9 = sub_2392DEFE0(a2);
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0x69736E6972746E69;
  *(_QWORD *)(inited + 136) = 0xEA00000000007363;
  v12 = *(_OWORD *)(a1 + 16);
  v42[0] = *(_OWORD *)a1;
  v42[1] = v12;
  v42[2] = *(_OWORD *)(a1 + 32);
  sub_2392DEB84((uint64_t)v42);
  v14 = v13;
  v15 = sub_23925FB08((uint64_t *)&unk_25692BD10);
  *(_QWORD *)(inited + 144) = v14;
  *(_QWORD *)(inited + 168) = v15;
  *(_QWORD *)(inited + 176) = 0x726F66736E617274;
  *(_QWORD *)(inited + 184) = 0xE90000000000006DLL;
  sub_2392DEC48(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 96));
  *(_QWORD *)(inited + 216) = v15;
  *(_QWORD *)(inited + 192) = v16;
  v17 = sub_23925DBD8(inited);
  v18 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v19 = (int8x16_t *)(a1 + *(int *)(v18 + 28));
  if ((v19[4].i8[0] & 1) == 0)
  {
    sub_2392DEC48(*v19, v19[1], v19[2], v19[3]);
    v45 = v15;
    *(_QWORD *)&v44 = v20;
    sub_23925FDD4(&v44, v43);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41 = v17;
    sub_2392CDDE4(v43, 0xD000000000000014, 0x800000023935D780, isUniquelyReferenced_nonNull_native);
    v17 = v41;
    swift_bridgeObjectRelease();
  }
  v22 = (int8x16_t *)(a1 + *(int *)(v18 + 36));
  if ((v22[4].i8[0] & 1) == 0)
  {
    sub_2392DEC48(*v22, v22[1], v22[2], v22[3]);
    v45 = v15;
    *(_QWORD *)&v44 = v23;
    sub_23925FDD4(&v44, v43);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v41 = v17;
    sub_2392CDDE4(v43, 0xD00000000000001ALL, 0x800000023935D7E0, v24);
    swift_bridgeObjectRelease();
  }
  v25 = (void *)sub_239352260();
  swift_bridgeObjectRelease();
  v26 = (void *)objc_opt_self();
  *(_QWORD *)&v44 = 0;
  v27 = objc_msgSend(v26, sel_dataWithJSONObject_options_error_, v25, 3, &v44);
  v28 = (id)v44;
  if (!v27)
  {
    v35 = v28;
    v36 = (void *)sub_239351E58();

    swift_willThrow();
LABEL_10:
    v38 = 0;
    goto LABEL_11;
  }
  v29 = sub_239351F6C();
  v31 = v30;

  v32 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v33 = (__CFString *)sub_2393522CC();
  v34 = CFURLCreateWithFileSystemPath(v32, v33, kCFURLPOSIXPathStyle, 0);

  if (!v34)
  {
    sub_23927DAE0(v29, v31);
    goto LABEL_10;
  }
  sub_239351F18();
  sub_239351F78();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v40);

  sub_23927DAE0(v29, v31);
  v38 = 1;
LABEL_11:

  return v38;
}

uint64_t sub_2392DC898()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2392DC904()
{
  uint64_t v0;

  return sub_2392D5480(*(double *)(v0 + 24), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), v0 + 40);
}

uint64_t sub_2392DC918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2392DC928()
{
  return swift_release();
}

uint64_t sub_2392DC930()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_23925FB08(&qword_2569281C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = sub_239352020();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2392DC9EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23925FB08(&qword_2569281C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_2392D4550(*(double *)(v0 + 24), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

id sub_2392DCA3C(id result)
{
  if (result != (id)7)
    return sub_2392D0F0C(result);
  return result;
}

uint64_t sub_2392DCA4C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2392DCA5C()
{
  id *v0;
  int *v1;
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v1 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();

  v3 = (char *)v0 + v2;
  v4 = (char *)v0 + v2 + v1[5];
  v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v6 = &v4[*(int *)(v5 + 24)];
  v7 = sub_239352674();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = &v3[v1[6]];
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  v12 = *(void **)&v3[v1[7] + 128];
  if (v12 != (void *)1)

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2392DCBEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 80);
  sub_2392D354C(*(_QWORD *)(v0 + 16), v0 + 24, (double *)(v0 + ((v1 + 64) & ~v1)));
}

uint64_t sub_2392DCC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2392D1458(a1, a2, v2);
}

uint64_t sub_2392DCC28()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2392DCC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = (_QWORD *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
    v5 = *(_QWORD *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
    *v4 = v1;
    v4[1] = v2;
    swift_retain();
    sub_2392C373C(v5);
    return swift_release();
  }
  return result;
}

void *sub_2392DCCFC()
{
  return &unk_239355BF8;
}

void *sub_2392DCD08()
{
  return &unk_239355BFC;
}

void *sub_2392DCD14()
{
  return &unk_239355C00;
}

uint64_t sub_2392DCD20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t MaxImageDimension;
  uint64_t MaxNumberOfSamples;
  uint64_t MaxTotalPixelCount;
  uint64_t MaxBakedOutputTriangleCount;
  uint64_t MinBakedOutputTriangleCount;

  CPGProcessingLimitsForCurrentDevice();
  MaxImageDimension = CPGProcessingLimitsGetMaxImageDimension();
  MaxNumberOfSamples = CPGProcessingLimitsGetMaxNumberOfSamples();
  MaxTotalPixelCount = CPGProcessingLimitsGetMaxTotalPixelCount();
  MaxBakedOutputTriangleCount = CPGProcessingLimitsGetMaxBakedOutputTriangleCount();
  MinBakedOutputTriangleCount = CPGProcessingLimitsGetMinBakedOutputTriangleCount();
  sub_2392E75CC(MaxImageDimension, MaxNumberOfSamples, MaxTotalPixelCount, MaxBakedOutputTriangleCount, MinBakedOutputTriangleCount, a1);
  return CPGProcessingLimitsRelease();
}

void sub_2392DCDA8()
{
  qword_25692DA88 = (uint64_t)&unk_250AC5EF0;
}

_QWORD *sub_2392DCDBC(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  _QWORD *v6;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  int64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  int64_t v21;
  _QWORD *v22;

  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_2392BFCAC(0, a1[2] + 1, 1, a1);
  v3 = a1[2];
  v2 = a1[3];
  v4 = v2 >> 1;
  v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    a1 = sub_2392BFCAC((_QWORD *)(v2 > 1), v3 + 1, 1, a1);
    v2 = a1[3];
    v4 = v2 >> 1;
  }
  a1[2] = v5;
  v6 = &a1[2 * v3];
  v6[4] = 0x332C363164615069;
  v6[5] = 0xE800000000000000;
  v7 = v3 + 2;
  if (v4 < v7)
    a1 = sub_2392BFCAC((_QWORD *)(v2 > 1), v7, 1, a1);
  a1[2] = v7;
  v8 = &a1[2 * v5];
  v8[4] = 0x342C363164615069;
  v8[5] = 0xE800000000000000;
  v10 = a1[2];
  v9 = a1[3];
  v11 = v9 >> 1;
  v12 = v10 + 1;
  if (v9 >> 1 <= v10)
  {
    a1 = sub_2392BFCAC((_QWORD *)(v9 > 1), v10 + 1, 1, a1);
    v9 = a1[3];
    v11 = v9 >> 1;
  }
  a1[2] = v12;
  v13 = &a1[2 * v10];
  v13[4] = 0x352C363164615069;
  v13[5] = 0xE800000000000000;
  v14 = v10 + 2;
  if (v11 < v14)
    a1 = sub_2392BFCAC((_QWORD *)(v9 > 1), v14, 1, a1);
  a1[2] = v14;
  v15 = &a1[2 * v12];
  v15[4] = 0x362C363164615069;
  v15[5] = 0xE800000000000000;
  v17 = a1[2];
  v16 = a1[3];
  v18 = v16 >> 1;
  v19 = v17 + 1;
  if (v16 >> 1 <= v17)
  {
    a1 = sub_2392BFCAC((_QWORD *)(v16 > 1), v17 + 1, 1, a1);
    v16 = a1[3];
    v18 = v16 >> 1;
  }
  a1[2] = v19;
  v20 = &a1[2 * v17];
  v20[4] = 0x3731656E6F685069;
  v20[5] = 0xEA0000000000312CLL;
  v21 = v17 + 2;
  if (v18 < v21)
    a1 = sub_2392BFCAC((_QWORD *)(v16 > 1), v21, 1, a1);
  a1[2] = v21;
  v22 = &a1[2 * v19];
  v22[4] = 0x3731656E6F685069;
  v22[5] = 0xEA0000000000322CLL;
  return a1;
}

uint64_t sub_2392DCFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v21;
  int v22;
  void *v23;
  void *ObjCClassFromMetadata;
  unsigned int v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - v5;
  v7 = sub_2392DD448();
  if (v8)
  {
    v9 = v8;
    v28 = v7;
    v10 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v6, v10, v0);
    swift_bridgeObjectRetain_n();
    v11 = sub_239352098();
    v12 = sub_239352578();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v30 = v14;
      *(_DWORD *)v13 = 136380931;
      v29 = sub_23925F3EC(0x70707553434F7369, 0xEF2928646574726FLL, &v30);
      sub_2393526B0();
      *(_WORD *)(v13 + 12) = 2082;
      swift_bridgeObjectRetain();
      v29 = sub_23925F3EC(v28, v9, &v30);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23925B000, v11, v12, "%{private}s: Device model detected at runtime: %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v14, -1, -1);
      MEMORY[0x23B83BC04](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    if (qword_25692DA80 != -1)
      swift_once();
    v21 = sub_2392DCDBC((_QWORD *)qword_25692DA88);
    v22 = sub_23929B2D4(v28, v9, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = (void *)type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v25 = objc_msgSend(ObjCClassFromMetadata, sel_isSupported);
    if (!v25)
      return v22 & v25;
    v26 = objc_msgSend(v23, sel_recommendedVideoFormatForHighResolutionFrameCapturing);

    if (v26)
    {
      v25 = objc_msgSend(ObjCClassFromMetadata, sel_supportsFrameSemantics_, 8);
      if (v25)
        v25 = objc_msgSend(ObjCClassFromMetadata, sel_supportsFrameSemantics_, 16);
      return v22 & v25;
    }
    return 0;
  }
  else
  {
    v15 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v15, v0);
    v16 = sub_239352098();
    v17 = sub_23935256C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v30 = v19;
      *(_DWORD *)v18 = 136380675;
      v29 = sub_23925F3EC(0x70707553434F7369, 0xEF2928646574726FLL, &v30);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v16, v17, "%{private}s: Failed to get device model at runtime.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v19, -1, -1);
      MEMORY[0x23B83BC04](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
}

uint64_t sub_2392DD448()
{
  uint64_t v0;
  mach_port_t v1;
  const __CFDictionary *v2;
  io_service_t MatchingService;
  __CFString *v4;
  CFTypeRef CFProperty;
  CFTypeID v6;
  uint64_t v8;
  CFTypeID v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  unint64_t v18;

  v0 = sub_239352320();
  MEMORY[0x24BDAC7A8](v0);
  v1 = *MEMORY[0x24BDD8B18];
  v2 = IOServiceMatching("IOPlatformExpertDevice");
  MatchingService = IOServiceGetMatchingService(v1, v2);
  v4 = (__CFString *)sub_2393522CC();
  CFProperty = IORegistryEntryCreateCFProperty(MatchingService, v4, (CFAllocatorRef)*MEMORY[0x24BDBD240], 0);

  if (!CFProperty)
    goto LABEL_15;
  v6 = CFGetTypeID(CFProperty);
  if (v6 == CFStringGetTypeID())
  {
    if (swift_dynamicCast())
      v8 = v17;
    else
      v8 = 0;
    goto LABEL_6;
  }
  v9 = CFGetTypeID(CFProperty);
  if (v9 != CFDataGetTypeID() || (swift_unknownObjectRetain(), !swift_dynamicCast()))
  {
    swift_unknownObjectRelease();
LABEL_15:
    IOObjectRelease(MatchingService);
    return 0;
  }
  sub_239352314();
  v8 = sub_2393522FC();
  v11 = v10;
  if (!v10)
    goto LABEL_19;
  swift_bridgeObjectRetain();
  v12 = sub_2392DD9FC(v8, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_19;
  if (v12 || v14 != 0xE100000000000000)
  {
    v16 = sub_2393528CC();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      goto LABEL_18;
LABEL_19:
    swift_unknownObjectRelease();
    sub_23927DAE0(v17, v18);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  sub_2392DDA74();
  swift_unknownObjectRelease();
  sub_23927DAE0(v17, v18);
  swift_bridgeObjectRelease();
LABEL_6:
  IOObjectRelease(MatchingService);
  return v8;
}

uint64_t sub_2392DD6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22[2];

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v5 = objc_msgSend(v4, sel_model);

  v6 = sub_2393522F0();
  v8 = v7;

  v9 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v9, v0);
  swift_bridgeObjectRetain_n();
  v10 = sub_239352098();
  v11 = sub_239352578();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v19 = v6;
    v13 = v12;
    v14 = swift_slowAlloc();
    v22[0] = v14;
    *(_DWORD *)v13 = 136380931;
    v20 = sub_23925F3EC(0xD000000000000013, 0x800000023935D840, v22);
    sub_2393526B0();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    v20 = sub_23925F3EC(v19, v8, v22);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v10, v11, "%{private}s: Device type detected at runtime: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v14, -1, -1);
    v15 = v13;
    v6 = v19;
    MEMORY[0x23B83BC04](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v22[0] = v6;
  v22[1] = v8;
  v20 = 0x656E6F685069;
  v21 = 0xE600000000000000;
  sub_2392753CC();
  v16 = sub_239352704();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_2392DD968()
{
  uint64_t result;

  result = sub_2392DD6C4();
  byte_25692FE10 = result & 1;
  return result;
}

char *sub_2392DD988()
{
  if (qword_25692DA90 != -1)
    swift_once();
  return &byte_25692FE10;
}

uint64_t sub_2392DD9C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t MaxNumberOfSamples;

  CPGProcessingLimitsForCurrentDevice();
  MaxNumberOfSamples = CPGProcessingLimitsGetMaxNumberOfSamples();
  sub_2392E6378(MaxNumberOfSamples, a1);
  return CPGProcessingLimitsRelease();
}

uint64_t sub_2392DD9FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_239352368();
  return sub_2393523F8();
}

uint64_t sub_2392DDA74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((*v0 & 0xFFFFFFFFFFFFLL) != 0)
    {
LABEL_5:
      sub_239352368();
      return sub_23935238C();
    }
    __break(1u);
  }
  if ((v1 & 0xF00000000000000) != 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

uint64_t sub_2392DDAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t result;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v38;
  uint64_t v39;
  char v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v59 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v59 - v8;
  v10 = sub_2392DD448();
  if (!v11)
  {
    v23 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v23, v0);
    v24 = sub_239352098();
    v25 = sub_23935256C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v68 = v27;
      *(_DWORD *)v26 = 136380675;
      v66 = sub_23925F3EC(0xD00000000000001DLL, 0x800000023935D860, &v68);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v24, v25, "%{private}s: Failed to get device model at runtime!", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v27, -1, -1);
      MEMORY[0x23B83BC04](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      return 0;
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  v12 = v10;
  v13 = v11;
  v14 = sub_239275A60();
  v15 = *(void (**)(char *))(v1 + 16);
  v63 = v14;
  v15(v9);
  swift_bridgeObjectRetain_n();
  v16 = sub_239352098();
  v17 = sub_239352578();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v61 = v0;
    v20 = v19;
    v68 = v19;
    *(_DWORD *)v18 = 136380931;
    v62 = v7;
    v66 = sub_23925F3EC(0xD00000000000001DLL, 0x800000023935D860, &v68);
    v60 = v1;
    sub_2393526B0();
    *(_WORD *)(v18 + 12) = 2082;
    swift_bridgeObjectRetain();
    v66 = sub_23925F3EC(v12, v13, &v68);
    v7 = v62;
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v16, v17, "%{private}s: Device model detected at runtime: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    v21 = v20;
    v0 = v61;
    MEMORY[0x23B83BC04](v21, -1, -1);
    MEMORY[0x23B83BC04](v18, -1, -1);

    v22 = *(void (**)(char *, uint64_t))(v60 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v22 = *(void (**)(char *, uint64_t))(v1 + 8);
  }
  v22(v9, v0);
  v68 = v12;
  v69 = v13;
  v66 = 44;
  v67 = 0xE100000000000000;
  sub_2392753CC();
  v29 = (_QWORD *)sub_2393526C8();
  if (!v29[2])
  {
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t, uint64_t))v15)(v7, v63, v0);
    swift_bridgeObjectRetain();
    v41 = sub_239352098();
    v42 = sub_23935256C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v68 = v44;
      *(_DWORD *)v43 = 136380931;
      v62 = v7;
      v66 = sub_23925F3EC(0xD00000000000001DLL, 0x800000023935D860, &v68);
      sub_2393526B0();
      *(_WORD *)(v43 + 12) = 2082;
      swift_bridgeObjectRetain();
      v66 = sub_23925F3EC(v12, v13, &v68);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23925B000, v41, v42, "%{private}s: Failed to parse device model: %{public}s!", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v44, -1, -1);
      MEMORY[0x23B83BC04](v43, -1, -1);

      v45 = v62;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v45 = v7;
    }
    v22(v45, v0);
    return 0;
  }
  swift_bridgeObjectRelease();
  if (!v29[2])
  {
    __break(1u);
LABEL_70:
    swift_bridgeObjectRelease();
    return 0;
  }
  v30 = v29[4];
  v31 = v29[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((sub_2392DE3D0() & 1) == 0)
    goto LABEL_70;
  v68 = v30;
  v69 = v31;
  v66 = 0x656E6F685069;
  v67 = 0xE600000000000000;
  v64 = 0;
  v65 = 0xE000000000000000;
  v32 = sub_2393526E0();
  v34 = v33;
  result = swift_bridgeObjectRelease();
  v35 = HIBYTE(v34) & 0xF;
  v36 = v32 & 0xFFFFFFFFFFFFLL;
  if (!((v34 & 0x2000000000000000) != 0 ? HIBYTE(v34) & 0xF : v32 & 0xFFFFFFFFFFFFLL))
    goto LABEL_70;
  if ((v34 & 0x1000000000000000) == 0)
  {
    if ((v34 & 0x2000000000000000) == 0)
    {
      if ((v32 & 0x1000000000000000) != 0)
        v38 = (unsigned __int8 *)((v34 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v38 = (unsigned __int8 *)sub_2393527F4();
      v39 = (uint64_t)sub_23925FE64(v38, v36, 10);
      LOBYTE(v32) = v40 & 1;
      goto LABEL_60;
    }
    v68 = v32;
    v69 = v34 & 0xFFFFFFFFFFFFFFLL;
    if (v32 == 43)
    {
      if (!v35)
        goto LABEL_74;
      if (v35 == 1 || (BYTE1(v32) - 48) > 9u)
        goto LABEL_47;
      v39 = (BYTE1(v32) - 48);
      if (v35 != 2)
      {
        if ((BYTE2(v32) - 48) > 9u)
          goto LABEL_47;
        v39 = 10 * (BYTE1(v32) - 48) + (BYTE2(v32) - 48);
        v46 = v35 - 3;
        if (v46)
        {
          v47 = (unsigned __int8 *)&v68 + 3;
          while (1)
          {
            v48 = *v47 - 48;
            if (v48 > 9)
              goto LABEL_47;
            v49 = 10 * v39;
            if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63)
              goto LABEL_47;
            v39 = v49 + v48;
            if (__OFADD__(v49, v48))
              goto LABEL_47;
            LOBYTE(v32) = 0;
            ++v47;
            if (!--v46)
              goto LABEL_60;
          }
        }
      }
    }
    else
    {
      if (v32 == 45)
      {
        if (v35)
        {
          if (v35 != 1 && (BYTE1(v32) - 48) <= 9u)
          {
            if (v35 == 2)
            {
              LOBYTE(v32) = 0;
              v39 = -(uint64_t)(BYTE1(v32) - 48);
              goto LABEL_60;
            }
            if ((BYTE2(v32) - 48) <= 9u)
            {
              v39 = -10 * (BYTE1(v32) - 48) - (BYTE2(v32) - 48);
              v54 = v35 - 3;
              if (!v54)
                goto LABEL_59;
              v55 = (unsigned __int8 *)&v68 + 3;
              while (1)
              {
                v56 = *v55 - 48;
                if (v56 > 9)
                  break;
                v57 = 10 * v39;
                if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63)
                  break;
                v39 = v57 - v56;
                if (__OFSUB__(v57, v56))
                  break;
                LOBYTE(v32) = 0;
                ++v55;
                if (!--v54)
                  goto LABEL_60;
              }
            }
          }
LABEL_47:
          v39 = 0;
          LOBYTE(v32) = 1;
          goto LABEL_60;
        }
        __break(1u);
LABEL_74:
        __break(1u);
        return result;
      }
      if (!v35 || (v32 - 48) > 9u)
        goto LABEL_47;
      v39 = (v32 - 48);
      if (v35 != 1)
      {
        if ((BYTE1(v32) - 48) > 9u)
          goto LABEL_47;
        v39 = 10 * (v32 - 48) + (BYTE1(v32) - 48);
        v50 = v35 - 2;
        if (v50)
        {
          v51 = (unsigned __int8 *)&v68 + 2;
          while (1)
          {
            v52 = *v51 - 48;
            if (v52 > 9)
              goto LABEL_47;
            v53 = 10 * v39;
            if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63)
              goto LABEL_47;
            v39 = v53 + v52;
            if (__OFADD__(v53, v52))
              goto LABEL_47;
            LOBYTE(v32) = 0;
            ++v51;
            if (!--v50)
              goto LABEL_60;
          }
        }
      }
    }
LABEL_59:
    LOBYTE(v32) = 0;
    goto LABEL_60;
  }
  v39 = (uint64_t)sub_23925FC64(v32, v34, 10);
  LOBYTE(v32) = v58;
LABEL_60:
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    return 0;
  else
    return v39;
}

uint64_t sub_2392DE3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_2393523A4();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_2393523A4();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_2393528CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_2393523A4();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_2393523A4();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_2392DE534()
{
  uint64_t v0;
  char v1;
  BOOL v3;

  if (qword_25692DA90 != -1)
    swift_once();
  if (byte_25692FE10 == 1)
  {
    v0 = sub_2392DDAC8();
    v3 = (v1 & 1) == 0 && v0 > 12;
  }
  else
  {
    v3 = 1;
  }
  byte_25692FE11 = v3;
}

char *sub_2392DE59C()
{
  if (qword_25692DA98 != -1)
    swift_once();
  return &byte_25692FE11;
}

BOOL sub_2392DE5DC()
{
  uint64_t v0;
  char v1;

  v0 = sub_2392DDAC8();
  return (v1 & 1) == 0 && v0 > 15;
}

uint64_t sub_2392DE5FC()
{
  uint64_t result;
  char v1;
  BOOL v3;

  result = sub_239263F88();
  if (result == 2)
  {
    result = sub_2392DDAC8();
    v3 = (v1 & 1) == 0 && result > 15;
  }
  else
  {
    v3 = result & 1;
  }
  byte_25692FE12 = v3;
  return result;
}

char *sub_2392DE63C()
{
  if (qword_25692DAA0 != -1)
    swift_once();
  return &byte_25692FE12;
}

uint64_t sub_2392DE67C(__CVBuffer *a1, __CVBuffer *a2, __CVBuffer *a3, uint64_t a4, char a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9, double a10, double a11)
{
  int64_t Width;
  int64_t Height;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  int64_t v24;
  uint64_t result;
  float v26;
  float v27;
  int64_t v28;
  float v29;
  float v30;
  int64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  _BOOL4 v40;
  int64_t v41;
  float v42;
  unint64_t v43;
  unint64_t v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float32x4_t v49;
  float32x4_t v50;
  float32x4_t v51;
  float32x4_t v52;
  uint64_t v53;
  int64_t v58;
  int64_t v59;
  __CVBuffer *v60;
  float v61;
  __CVBuffer *v62;
  float v63;
  float v64;
  float v65;
  float v66[3];

  Width = CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  v20 = Height;
  v21 = (double)Width;
  if ((a5 & 1) != 0)
    v22 = (double)Height;
  else
    v22 = 1.0;
  if ((a5 & 1) == 0)
    v21 = 1.0;
  v23 = v21 * a10;
  v24 = CVPixelBufferGetWidth(a2);
  v62 = a2;
  result = CVPixelBufferGetHeight(a2);
  v59 = v24;
  v26 = v23;
  v27 = (float)((float)((float)v24 / (float)Width) * v26) + 0.5;
  if (v27 <= -9.2234e18)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v27 >= 9.2234e18)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v28 = result;
  v29 = v22 * a11;
  v30 = (float)((float)((float)result / (float)v20) * v29) + 0.5;
  if ((LODWORD(v27) & 0x7F800000) == 0x7F800000
    || (COERCE_UNSIGNED_INT((float)((float)((float)result / (float)v20) * v29) + 0.5) & 0x7F800000) == 2139095040)
  {
    goto LABEL_55;
  }
  if (v30 <= -9.2234e18)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v30 >= 9.2234e18)
  {
LABEL_57:
    __break(1u);
    return result;
  }
  result = 0;
  v32 = (uint64_t)v27;
  if (((uint64_t)v27 & 0x8000000000000000) == 0 && v24 > v32)
  {
    v33 = (uint64_t)v30;
    if (((uint64_t)v30 & 0x8000000000000000) == 0 && v28 > v33)
    {
      v34 = MEMORY[0x24BEE14E8];
      sub_23926C03C(v62, (uint64_t)v27, (uint64_t)v30, MEMORY[0x24BEE14E8], (uint64_t)v66);
      result = sub_23926C03C(a3, v32, v33, v34, (uint64_t)&v65);
      if (v65 < 0.8)
      {
        v53 = a4;
        v35 = v32 - 3;
        if (!__OFSUB__(v32, 3))
        {
          v36 = -3;
          v37 = MEMORY[0x24BEE4AF8];
          v38 = MEMORY[0x24BEE14E8];
          v60 = a3;
          v58 = v32;
          while (1)
          {
            v39 = v35 >= 0 && v35 < v59;
            v40 = v39;
            a4 = -3;
            do
            {
              if (v40)
              {
                v41 = v33 + a4;
                if (__OFADD__(v33, a4))
                {
                  __break(1u);
                  goto LABEL_53;
                }
                if ((v41 & 0x8000000000000000) == 0 && v41 < v28)
                {
                  sub_23926C03C(v62, v35, v33 + a4, v38, (uint64_t)&v65);
                  v42 = v65;
                  result = sub_23926C03C(a3, v35, v33 + a4, v38, (uint64_t)&v65);
                  if (v65 > 0.7)
                  {
                    result = swift_isUniquelyReferenced_nonNull_native();
                    if ((result & 1) == 0)
                    {
                      result = (uint64_t)sub_239281EC4(0, *(_QWORD *)(v37 + 16) + 1, 1, (char *)v37);
                      v37 = result;
                    }
                    v44 = *(_QWORD *)(v37 + 16);
                    v43 = *(_QWORD *)(v37 + 24);
                    if (v44 >= v43 >> 1)
                    {
                      result = (uint64_t)sub_239281EC4((char *)(v43 > 1), v44 + 1, 1, (char *)v37);
                      v37 = result;
                    }
                    *(_QWORD *)(v37 + 16) = v44 + 1;
                    *(float *)(v37 + 4 * v44 + 32) = v42;
                    a3 = v60;
                  }
                }
              }
              ++a4;
            }
            while (a4 != 4);
            if (v36 == 3)
              break;
            ++v36;
            v35 = v58 + v36;
            if (__OFADD__(v58, v36))
              goto LABEL_42;
          }
          if (!*(_QWORD *)(v37 + 16))
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          sub_2392DEAA8(v37);
          v63 = v46;
          swift_bridgeObjectRelease();
          v45 = v63;
          v66[0] = v63;
          a4 = v53;
          if (v63 <= 0.0)
            return 0;
          goto LABEL_47;
        }
LABEL_42:
        __break(1u);
      }
      v45 = v66[0];
      if (v66[0] > 0.0)
      {
LABEL_47:
        v47 = v45 * (float)(v26 - COERCE_FLOAT(*(_OWORD *)(a4 + 32)));
        v61 = (float)(v45 * (float)(v29 - COERCE_FLOAT(HIDWORD(*(_QWORD *)(a4 + 32))))) / *(float *)(a4 + 20);
        v64 = v45;
        v48 = *(float *)a4;
        ARVisionCameraToRenderingCoordinateTransform();
        return vaddq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v52.f32[0]), a7, *(float32x2_t *)v52.f32, 1), a8, v52, 2), a9, v52, 3), vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v49.f32[0]), a7, *(float32x2_t *)v49.f32, 1), a8, v49, 2), a9,
                         v49,
                         3),
                       v47 / v48),
                     vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v50.f32[0]), a7, *(float32x2_t *)v50.f32, 1), a8, v50, 2), a9, v50, 3), v61), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a6, v51.f32[0]), a7, *(float32x2_t *)v51.f32, 1), a8, v51, 2), a9, v51, 3), v64)).u64[0];
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_2392DEAA8(uint64_t a1)
{
  unint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (!*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = a1;
  swift_bridgeObjectRetain();
  sub_2392E3EB0(&v3);
  v1 = *(_QWORD *)(v3 + 16);
  if ((v1 & 1) != 0)
  {
    if ((v1 - 1) >> 1 < v1)
      return swift_release();
    goto LABEL_10;
  }
  if (v1 >> 1 >= v1)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v1 >= 2)
    return swift_release();
LABEL_11:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

float sub_2392DEB64(float a1)
{
  return (float)(a1 / 180.0) * 3.1416;
}

int32x2_t sub_2392DEB84(uint64_t a1)
{
  uint64_t v2;
  int8x16_t v3;
  int8x16_t v4;
  __int128 v5;
  int32x2_t v6;
  int32x2_t v7;
  int32x2_t result;

  sub_23925FB08(&qword_25692B790);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_239355B80;
  v3 = *(int8x16_t *)a1;
  v4 = *(int8x16_t *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 32);
  v6 = vzip1_s32(*(int32x2_t *)a1, *(int32x2_t *)v4.i8);
  *(_DWORD *)(v2 + 64) = DWORD2(v5);
  v7 = vzip2_s32(*(int32x2_t *)v4.i8, *(int32x2_t *)&v5);
  DWORD1(v5) = v3.i32[1];
  *(int32x2_t *)(v2 + 32) = v6;
  *(_QWORD *)(v2 + 40) = v5;
  result = vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  *(int32x2_t *)(v2 + 48) = v7;
  *(int32x2_t *)(v2 + 56) = result;
  return result;
}

uint64_t sub_2392DEBF4@<X0>(uint64_t result@<X0>, __n128 *a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>)
{
  if (*(_QWORD *)(result + 16) == 9)
  {
    a4.n128_u32[0] = *(_DWORD *)(result + 32);
    a3.n128_u32[0] = *(_DWORD *)(result + 36);
    a3.n128_u32[1] = *(_DWORD *)(result + 48);
    a3.n128_u32[2] = *(_DWORD *)(result + 60);
    a4.n128_u32[1] = *(_DWORD *)(result + 44);
    a4.n128_u32[2] = *(_DWORD *)(result + 56);
    a5.n128_u32[0] = *(_DWORD *)(result + 40);
    a5.n128_u32[1] = *(_DWORD *)(result + 52);
    a5.n128_u32[2] = *(_DWORD *)(result + 64);
    *a2 = a4;
    a2[1] = a3;
    a2[2] = a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

int32x2_t sub_2392DEC48(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4)
{
  uint64_t v4;
  int8x8_t v5;
  int32x2_t v6;
  int32x2_t v7;
  uint64_t v8;
  int32x2_t result;

  sub_23925FB08(&qword_25692B790);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_239355B90;
  *(int32x2_t *)(v4 + 32) = vzip1_s32(*(int32x2_t *)a1.i8, *(int32x2_t *)a2.i8);
  *(_DWORD *)(v4 + 40) = a3.i32[0];
  *(_QWORD *)(v4 + 44) = __PAIR64__(a1.u32[1], a4.u32[0]);
  *(int32x2_t *)(v4 + 52) = vzip2_s32(*(int32x2_t *)a2.i8, *(int32x2_t *)a3.i8);
  v5 = (int8x8_t)vextq_s8(a1, a1, 8uLL).u64[0];
  *(int8x8_t *)(v4 + 60) = vext_s8(*(int8x8_t *)a4.i8, v5, 4uLL);
  v6 = (int32x2_t)vextq_s8(a3, a3, 8uLL).u64[0];
  v7 = (int32x2_t)vextq_s8(a2, a2, 8uLL).u64[0];
  *(int32x2_t *)(v4 + 68) = vzip1_s32(v7, v6);
  LODWORD(v8) = vextq_s8(a4, a4, 8uLL).u32[0];
  HIDWORD(v8) = v5.i32[1];
  *(_QWORD *)(v4 + 76) = v8;
  result = vzip2_s32(v7, v6);
  *(int32x2_t *)(v4 + 84) = result;
  *(_DWORD *)(v4 + 92) = a4.i32[3];
  return result;
}

uint64_t sub_2392DED00(uint64_t result)
{
  if (*(_QWORD *)(result + 16) != 16)
    __break(1u);
  return result;
}

__n128 sub_2392DED7C(__n128 a1)
{
  uint64_t v1;
  __n128 result;

  sub_23925FB08(&qword_25692B790);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2393541C0;
  result = a1;
  *(_QWORD *)(v1 + 32) = a1.n128_u64[0];
  *(_DWORD *)(v1 + 40) = a1.n128_u32[2];
  return result;
}

float64x2_t sub_2392DEDCC@<Q0>(float32x2_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  float64x2_t v4;
  unint64_t v5;
  float64x2_t result;

  *(double *)&v2 = a1[1].f32[0];
  *(double *)&v3 = a1[3].f32[0];
  v4 = vcvtq_f64_f32(a1[2]);
  *(double *)&v5 = COERCE_FLOAT(*(_QWORD *)&a1[5]);
  result = vcvtq_f64_f32(a1[4]);
  *(float64x2_t *)a2 = vcvtq_f64_f32(*a1);
  *(_OWORD *)(a2 + 16) = v2;
  *(float64x2_t *)(a2 + 32) = v4;
  *(_OWORD *)(a2 + 48) = v3;
  *(float64x2_t *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v5;
  return result;
}

float64x2_t sub_2392DEE24@<Q0>(float64x2_t *a1@<X8>, float32x4_t a2@<Q0>, float32x4_t a3@<Q1>, float32x4_t a4@<Q2>, float32x4_t a5@<Q3>)
{
  float64x2_t result;

  *a1 = vcvtq_f64_f32(*(float32x2_t *)a2.f32);
  a1[1] = vcvt_hight_f64_f32(a2);
  a1[2] = vcvtq_f64_f32(*(float32x2_t *)a3.f32);
  a1[3] = vcvt_hight_f64_f32(a3);
  a1[4] = vcvtq_f64_f32(*(float32x2_t *)a4.f32);
  a1[5] = vcvt_hight_f64_f32(a4);
  result = vcvt_hight_f64_f32(a5);
  a1[6] = vcvtq_f64_f32(*(float32x2_t *)a5.f32);
  a1[7] = result;
  return result;
}

double sub_2392DEE58(float64x2_t *a1)
{
  double result;

  *(_QWORD *)&result = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*a1), a1[1]).u64[0];
  return result;
}

uint64_t sub_2392DEE8C(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  sub_2392DEC48(a1, a2, a3, a4);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = MEMORY[0x24BEE14E8];
    v9 = MEMORY[0x24BEE1568];
    do
    {
      v10 = *(_DWORD *)(v5 + 4 * v7 + 32);
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_239354060;
      *(_QWORD *)(v11 + 56) = v8;
      *(_QWORD *)(v11 + 64) = v9;
      *(_DWORD *)(v11 + 32) = v10;
      sub_239352308();
      sub_239352380();
      swift_bridgeObjectRelease();
      if (v7 < v6 - 1)
        sub_239352380();
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_239352380();
  return 91;
}

uint64_t sub_2392DEFE0(double a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_239354060;
  v3 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v2 + 64) = v3;
  *(double *)(v2 + 32) = a1;
  return sub_239352308();
}

float sub_2392DF050(float result, float a2, float a3)
{
  if (result <= a2)
    result = a2;
  if (result > a3)
    return a3;
  return result;
}

double sub_2392DF064()
{
  double result;

  xmmword_25692FE20 = xmmword_239354910;
  *(_OWORD *)algn_25692FE30 = xmmword_239355BA0;
  result = -0.000348046946;
  xmmword_25692FE40 = xmmword_239355BB0;
  unk_25692FE50 = xmmword_239355BC0;
  return result;
}

void sub_2392DF098()
{
  if (qword_25692DAA8 != -1)
    swift_once();
  *(simd_float4x4 *)zmmword_25692FE60 = __invert_f4(*(simd_float4x4 *)zmmword_25692FE20);
}

double sub_2392DF0F4(float32x4_t a1)
{
  int8x16_t v1;
  float32x2_t v2;
  float32x2_t v3;
  double result;

  v1 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v1.i8 = vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL));
  v1.i32[0] = vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v1.i8, 1)).u32[0];
  v2 = vrsqrte_f32((float32x2_t)v1.u32[0]);
  v3 = vmul_f32(v2, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v2, v2)));
  *(_QWORD *)&result = vmulq_n_f32(a1, vmul_f32(v3, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v3, v3))).f32[0]).u64[0];
  return result;
}

double sub_2392DF1A0(float32x4_t a1, double a2, double a3, double a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  int8x16_t v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x4_t v11;
  double result;

  v8 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v8.i8 = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL));
  v8.i32[0] = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1)).u32[0];
  v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  v11 = vmulq_n_f32(a1, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  *(_QWORD *)&result = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a5, v11.f32[0]), a6, *(float32x2_t *)v11.f32, 1), a7, v11, 2), a8, v11, 3).u64[0];
  return result;
}

__n128 sub_2392DF290@<Q0>(uint64_t a1@<X8>, float32x4_t a2@<Q0>, float32x4_t a3@<Q1>, float32x4_t a4@<Q2>, float32x4_t a5@<Q3>, float32x4_t a6@<Q4>, float32x4_t a7@<Q5>, float32x4_t a8@<Q6>, float32x4_t a9@<Q7>, float32x4_t a10, float32x4_t a11, float32x4_t a12, float32x4_t a13)
{
  int8x16_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x4_t v18;
  int8x16_t v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x4_t v22;
  int8x16_t v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x4_t v26;
  __n128 result;
  float32x4_t v28;
  simd_float4 v29;
  simd_float4 v30;
  float32x4_t v31;
  simd_float4x4 v36;
  simd_float4x4 v37;

  v14 = (int8x16_t)vmulq_f32(a6, a6);
  v15 = vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL));
  v15.i32[0] = vadd_f32(v15, (float32x2_t)vdup_lane_s32((int32x2_t)v15, 1)).u32[0];
  v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
  v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
  v18 = vmulq_n_f32(a6, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]);
  v19 = (int8x16_t)vmulq_f32(a7, a7);
  *(float32x2_t *)v19.i8 = vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL));
  v19.i32[0] = vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1)).u32[0];
  v20 = vrsqrte_f32((float32x2_t)v19.u32[0]);
  v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v20, v20)));
  v22 = vmulq_n_f32(a7, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v21, v21))).f32[0]);
  v23 = (int8x16_t)vmulq_f32(a8, a8);
  *(float32x2_t *)v23.i8 = vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL));
  v23.i32[0] = vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v23.i8, 1)).u32[0];
  v24 = vrsqrte_f32((float32x2_t)v23.u32[0]);
  v25 = vmul_f32(v24, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v24, v24)));
  v26 = vmulq_n_f32(a8, vmul_f32(v25, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v25, v25))).f32[0]);
  v36.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, v22.f32[0]), a11, *(float32x2_t *)v22.f32, 1), a12, v22, 2), a13, v22, 3);
  v30 = v36.columns[1];
  v31 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, v18.f32[0]), a11, *(float32x2_t *)v18.f32, 1), a12, v18, 2), a13, v18, 3);
  v36.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, a9.f32[0]), a11, *(float32x2_t *)a9.f32, 1), a12, a9, 2), a13, a9, 3);
  v28 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(a10, v26.f32[0]), a11, *(float32x2_t *)v26.f32, 1), a12, v26, 2), a13, v26, 3);
  v29 = v36.columns[3];
  v36.columns[0] = (simd_float4)v31;
  v36.columns[2] = (simd_float4)v28;
  v37 = __invert_f4(v36);
  *(float32x4_t *)a1 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a2.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a2.f32, 1), (float32x4_t)v37.columns[2], a2, 2), (float32x4_t)v37.columns[3], a2, 3);
  *(float32x4_t *)(a1 + 16) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a3.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a3.f32, 1), (float32x4_t)v37.columns[2], a3, 2), (float32x4_t)v37.columns[3], a3, 3);
  *(float32x4_t *)(a1 + 32) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a4.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a4.f32, 1), (float32x4_t)v37.columns[2], a4, 2), (float32x4_t)v37.columns[3], a4, 3);
  *(float32x4_t *)(a1 + 48) = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v37.columns[0], a5.f32[0]), (float32x4_t)v37.columns[1], *(float32x2_t *)a5.f32, 1), (float32x4_t)v37.columns[2], a5, 2), (float32x4_t)v37.columns[3], a5, 3);
  *(float32x4_t *)(a1 + 64) = v31;
  *(simd_float4 *)(a1 + 80) = v30;
  result = (__n128)v29;
  *(float32x4_t *)(a1 + 96) = v28;
  *(simd_float4 *)(a1 + 112) = v29;
  return result;
}

void sub_2392DF434(float a1)
{
  if (a1 <= 0.0)
    __break(1u);
}

double sub_2392DF468(simd_float4x4 *a1, double a2, double a3, double a4, double a5, double a6, double a7, float32x4_t a8)
{
  int32x4_t v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x4_t *v11;
  float32x4_t v12;
  int8x16_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  float32x4_t v19;
  float32x4_t v20;
  int64_t v21;
  float32x4_t v22;
  float32x4_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  float32x4_t v27;
  uint64_t v28;
  float32x4_t v29;
  unint64_t v30;
  int64_t v31;
  float32x4_t v32;
  int64_t v33;
  char v34;
  char v35;
  float32x4_t v36;
  int64x2_t v37;
  int64x2_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  __n128 v42;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x4_t v49;
  int8x16_t v50;
  int8x16_t v52;
  float32x4_t v53;
  simd_float4 v54;
  simd_float4 v55;
  simd_float4 v56;
  simd_float4 v57;
  CoreOC::OCBoundingBox v58;
  float32x4_t v59[3];
  float32x4_t v60[3];
  float32x4_t v61[3];
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65[3];

  OCBoundingBox.init(transform:)(&v58, a1);
  v56 = v58.transform.columns[1];
  v57 = v58.transform.columns[0];
  v54 = v58.transform.columns[3];
  v55 = v58.transform.columns[2];
  OCBoundingBox.rotation.getter(v59);
  v53 = v59[0];
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  OCBoundingBox.rotation.getter(v60);
  v50 = (int8x16_t)v60[1];
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  OCBoundingBox.rotation.getter(v61);
  v46 = v61[2];
  v8 = (int32x4_t)vmulq_f32(a8, a8);
  v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
  v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  v48 = vmulq_n_f32(a8, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  sub_23925FB08(&qword_25692C170);
  v11 = (float32x4_t *)swift_allocObject();
  *(float32x2_t *)v12.f32 = vsub_f32(0, *(float32x2_t *)v53.f32);
  v12.f32[2] = 0.0 - v53.f32[2];
  v12.i32[3] = 0;
  *(float32x2_t *)v13.i8 = vsub_f32(0, *(float32x2_t *)v46.f32);
  *(float *)&v13.i32[2] = 0.0 - v46.f32[2];
  v13.i32[3] = 0;
  v11[2] = v53;
  v11[3] = v12;
  v47 = v12;
  v11[4] = v46;
  v11[5] = (float32x4_t)v13;
  v52 = v13;
  v58.transform.columns[0].i64[0] = MEMORY[0x24BEE4AF8];
  sub_239297E64(0, 4, 0);
  v14 = v58.transform.columns[0].i64[0];
  v16 = *(_QWORD *)(v58.transform.columns[0].i64[0] + 16);
  v15 = *(_QWORD *)(v58.transform.columns[0].i64[0] + 24);
  v17 = v15 >> 1;
  v18 = v16 + 1;
  if (v15 >> 1 <= v16)
  {
    sub_239297E64(v15 > 1, v16 + 1, 1);
    v14 = v58.transform.columns[0].i64[0];
    v15 = *(_QWORD *)(v58.transform.columns[0].i64[0] + 24);
    v17 = v15 >> 1;
  }
  v19 = v48;
  v20 = vmulq_f32(v48, v53);
  *(_QWORD *)(v14 + 16) = v18;
  *(_DWORD *)(v14 + 4 * v16 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v20, 2), vaddq_f32(v20, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.f32, 1))).u32[0];
  v21 = v16 + 2;
  if (v17 < v21)
  {
    sub_239297E64(v15 > 1, v21, 1);
    v19 = v48;
    v14 = v58.transform.columns[0].i64[0];
  }
  v22 = vmulq_f32(v19, v47);
  *(_QWORD *)(v14 + 16) = v21;
  *(_DWORD *)(v14 + 4 * v18 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).u32[0];
  v23 = v11[4];
  v25 = *(_QWORD *)(v14 + 16);
  v24 = *(_QWORD *)(v14 + 24);
  v26 = v25 + 1;
  if (v25 >= v24 >> 1)
  {
    v44 = v11[4];
    sub_239297E64(v24 > 1, v25 + 1, 1);
    v23 = v44;
    v19 = v48;
  }
  v27 = vmulq_f32(v19, v23);
  v28 = v58.transform.columns[0].i64[0];
  *(_QWORD *)(v58.transform.columns[0].i64[0] + 16) = v26;
  *(_DWORD *)(v28 + 4 * v25 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v27, 2), vaddq_f32(v27, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v27.f32, 1))).u32[0];
  v29 = v11[5];
  v30 = *(_QWORD *)(v28 + 24);
  v31 = v25 + 2;
  if (v31 > (uint64_t)(v30 >> 1))
  {
    v45 = v11[5];
    sub_239297E64(v30 > 1, v31, 1);
    v29 = v45;
    v19 = v48;
    v28 = v58.transform.columns[0].i64[0];
  }
  v32 = vmulq_f32(v19, v29);
  *(_QWORD *)(v28 + 16) = v31;
  *(_DWORD *)(v28 + 4 * v26 + 32) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).u32[0];
  swift_setDeallocating();
  swift_deallocClassInstance();
  v33 = sub_2392E4EFC(0, *(_QWORD *)(v28 + 16), v28);
  v35 = v34;
  swift_release();
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  *(__n64 *)v36.f32 = OCBoundingBox.extent.getter();
  v49 = v36;
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  OCBoundingBox.rotation.getter((float32x4_t *)&v62);
  if ((v35 & 1) != 0)
  {
    v50 = v63;
    v52 = v62;
    v53 = (float32x4_t)v64;
  }
  else if (v33 == 1)
  {
    v40 = (int8x16_t)vrev64q_s32((int32x4_t)v49);
    v49 = (float32x4_t)vextq_s8(v40, v40, 0xCuLL);
    v52 = (int8x16_t)v46;
    v53 = v47;
  }
  else if (v33)
  {
    v37.i64[0] = v33;
    v38.i64[0] = 3;
    v41 = (int8x16_t)vdupq_lane_s64(vceqq_s64(v37, v38).i64[0], 0);
    v53 = (float32x4_t)vbslq_s8(v41, v52, v64);
    v50 = vbslq_s8(v41, v50, v63);
    v52 = vbslq_s8(v41, (int8x16_t)v47, v62);
  }
  else
  {
    v39 = (int8x16_t)vrev64q_s32((int32x4_t)v49);
    v49 = (float32x4_t)vextq_s8(v39, v39, 0xCuLL);
  }
  v58.transform.columns[0] = v57;
  v58.transform.columns[1] = v56;
  v58.transform.columns[2] = v55;
  v58.transform.columns[3] = v54;
  v42 = OCBoundingBox.position.getter();
  v65[0] = v52;
  v65[1] = v50;
  v65[2] = (int8x16_t)v53;
  OCBoundingBox.init(position:extent:rotation:)((uint64_t)v65, (uint64_t)&v58, v42, v49);
  return *(double *)v58.transform.columns[0].i64;
}

uint64_t sub_2392DF8CC(float32x4_t a1, float32x4_t a2, float32x4_t a3, int8x16_t a4)
{
  int8x16_t v4;
  float32x2_t v5;
  float32x2_t v6;
  float32x4_t v7;
  int8x16_t v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x4_t v11;
  int8x16_t v12;
  float32x2_t v13;
  float32x2_t v14;

  v4 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v4.i8 = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  v4.i32[0] = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1)).u32[0];
  v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  v7 = vmulq_n_f32(a1, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  v8 = (int8x16_t)vmulq_f32(a2, a2);
  *(float32x2_t *)v8.i8 = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL));
  v8.i32[0] = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1)).u32[0];
  v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  v11 = vmulq_n_f32(a2, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  v12 = (int8x16_t)vmulq_f32(a3, a3);
  *(float32x2_t *)v12.i8 = vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL));
  v12.i32[0] = vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1)).u32[0];
  v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
  v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
  return sub_2392E0EFC(v7, v11, vmulq_n_f32(a3, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]), a4);
}

void __swiftcall getRotatedPlaneTransform(_:)(simd_float4x4 *__return_ptr retstr, ARPlaneAnchor *a2)
{
  ARPlaneExtent *v3;
  float v4;
  float v5;
  __float2 v6;
  __n128 v7;

  -[ARPlaneAnchor transform](a2, sel_transform);
  v3 = -[ARPlaneAnchor planeExtent](a2, sel_planeExtent);
  -[ARPlaneExtent rotationOnYAxis](v3, sel_rotationOnYAxis);
  v5 = v4;

  v6 = __sincosf_stret(v5 * 0.5);
  v7 = (__n128)vmulq_n_f32((float32x4_t)xmmword_239355BE0, v6.__sinval);
  v7.n128_u32[3] = LODWORD(v6.__cosval);
  MEMORY[0x23B83A428](v7);
}

float sub_2392DFA64(void *a1, void *a2)
{
  float32x4_t v3;
  float32x4_t v4;
  float32x4_t v6;

  objc_msgSend(a1, sel_transform);
  v6 = v3;
  objc_msgSend(a2, sel_transform);
  return fabsf(COERCE_FLOAT(vsubq_f32(v6, v4).i32[1]));
}

uint64_t sub_2392DFAB4(int a1)
{
  int8x8_t v1;
  uint32x2_t v2;

  v1.i32[0] = BYTE1(a1);
  v1.i32[1] = BYTE2(a1);
  v2 = vshl_u32((uint32x2_t)vand_s8(v1, (int8x8_t)0xFF000000FFLL), (uint32x2_t)0x800000010);
  return v2.i32[0] | (a1 << 24) | v2.i32[1] | 0xFFu;
}

void sub_2392DFAF4(uint64_t a1@<X0>, char a2@<W1>, simd_float4 *a3@<X8>)
{
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  simd_float4x4 *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  float v16;
  float v17;
  float v18;
  unsigned int v19;
  float v20;
  unint64_t v21;
  float32x4_t *v22;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  simd_float4 v33;
  simd_float4 v34;
  simd_float4 v35;
  simd_float4 v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  uint64_t v43;
  uint64_t v44;
  __int32 v45;
  simd_float4 *v46;
  float32x4_t v48;
  float32x4_t v49;
  float32x4_t v50;
  CoreOC::OCVoxelCloud v51;

  v5 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 96);
  if (((uint64_t (*)(uint64_t))v5)(a1) > 0 && (v6 = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 136))()) != 0)
  {
    v7 = v6;
    v8 = v5();
    v10 = (_QWORD *)sub_2392DFE70(v8, (__n128)0, (__n128)0, (__n128)0);
    v11 = v10[2];
    v46 = a3;
    if (v11)
    {
      v12 = 0;
      v13 = 0;
      while (1)
      {
        v14 = v7 + v12 * 8;
        v15 = *(_OWORD *)(v7 + v12 * 8);
        v16 = floorf(*(float *)&v15);
        if ((~LODWORD(v16) & 0x7F800000) == 0)
          break;
        if (v16 <= -2147500000.0)
          goto LABEL_29;
        if (v16 >= 2147500000.0)
          goto LABEL_30;
        v17 = floorf(*((float *)&v15 + 1));
        if ((~LODWORD(v17) & 0x7F800000) == 0)
          goto LABEL_31;
        if (v17 <= -2147500000.0)
          goto LABEL_32;
        if (v17 >= 2147500000.0)
          goto LABEL_33;
        v18 = floorf(*((float *)&v15 + 2));
        if ((~LODWORD(v18) & 0x7F800000) == 0)
          goto LABEL_34;
        if (v18 <= -2147500000.0)
          goto LABEL_35;
        if (v18 >= 2147500000.0)
          goto LABEL_36;
        v48 = *(float32x4_t *)(v14 + 16);
        v19 = *(_DWORD *)(v14 + 32);
        v20 = *(float *)(v14 + 36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_2392639F4(v10);
        v21 = v10[2];
        if (v13 >= v21)
          goto LABEL_37;
        v24.i32[3] = 1;
        v24.i32[0] = (int)v16;
        v24.i32[1] = (int)v17;
        v24.i32[2] = (int)v18;
        v22 = (float32x4_t *)&v10[v12];
        v23 = v48;
        v23.i32[3] = 0;
        v22[2] = v24;
        v22[3] = v23;
        v24.f32[0] = (float)HIBYTE(v19) / 255.0;
        v25 = v24;
        v25.f32[1] = (float)BYTE2(v19) / 255.0;
        v26 = v25;
        v26.f32[2] = (float)BYTE1(v19) / 255.0;
        v27 = v26;
        v27.f32[3] = (float)v19 / 255.0;
        if ((a2 & 1) != 0)
        {
          if (qword_25692DAB0 != -1)
          {
            v49 = v27;
            v43 = v25.i64[0];
            v41 = v26;
            swift_once();
            v26 = v41;
            v25.i64[0] = v43;
            v24.f32[0] = (float)HIBYTE(v19) / 255.0;
            v27 = v49;
          }
          v29 = *(float32x4_t *)zmmword_25692FE60;
          v28 = *(float32x4_t *)&zmmword_25692FE60[16];
          v31 = *(float32x4_t *)&zmmword_25692FE60[32];
          v30 = *(float32x4_t *)&zmmword_25692FE60[48];
          if (qword_25692DAA8 != -1)
          {
            v50 = v27;
            v44 = v25.i64[0];
            v45 = v24.i32[0];
            v40 = *(float32x4_t *)&zmmword_25692FE60[48];
            v42 = v26;
            v38 = *(float32x4_t *)&zmmword_25692FE60[16];
            v39 = *(float32x4_t *)&zmmword_25692FE60[32];
            v37 = *(float32x4_t *)zmmword_25692FE60;
            swift_once();
            v29 = v37;
            v28 = v38;
            v31 = v39;
            v30 = v40;
            v26 = v42;
            v25.i64[0] = v44;
            v24.i32[0] = v45;
            v27 = v50;
          }
          v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v24.f32[0]), v28, *(float32x2_t *)v25.f32, 1), v31, v26, 2), v30, v27, 3);
          v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*(float32x4_t *)zmmword_25692FE20, v20 * v32.f32[0]), *(float32x4_t *)&zmmword_25692FE20[16], *(float32x2_t *)v32.f32, 1), *(float32x4_t *)&zmmword_25692FE20[32], v32, 2), *(float32x4_t *)&zmmword_25692FE20[48], v32, 3);
          v21 = v10[2];
        }
        if (v13 >= v21)
          goto LABEL_38;
        ++v13;
        *(float32x4_t *)&v10[v12 + 8] = v27;
        v12 += 6;
        if (v11 == v13)
          goto LABEL_27;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
    }
    else
    {
LABEL_27:
      OCVoxelCloud.init(voxels:transform:)(&v51, (Swift::OpaquePointer)v10, v9);
      v33 = v51.transform.columns[0];
      v34 = v51.transform.columns[1];
      v35 = v51.transform.columns[2];
      v36 = v51.transform.columns[3];
      v46->i64[0] = (uint64_t)v51.voxels._rawValue;
      v46->i64[1] = 0;
      v46[1] = v33;
      v46[2] = v34;
      v46[3] = v35;
      v46[4] = v36;
    }
  }
  else
  {
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
}

uint64_t sub_2392DFE70(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  __n128 *v7;

  if (a1 < 0)
  {
    result = sub_23935283C();
    __break(1u);
  }
  else
  {
    v4 = a1;
    if (a1)
    {
      type metadata accessor for OCVoxel(0);
      result = sub_239352488();
      *(_QWORD *)(result + 16) = v4;
      v6 = 32;
      do
      {
        v7 = (__n128 *)(result + v6);
        *v7 = a2;
        v7[1] = a3;
        v7[2] = a4;
        v6 += 48;
        --v4;
      }
      while (v4);
    }
    else
    {
      return MEMORY[0x24BEE4AF8];
    }
  }
  return result;
}

uint64_t sub_2392DFF34(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  __n128 *v7;

  if (a1 < 0)
  {
    result = sub_23935283C();
    __break(1u);
  }
  else
  {
    v4 = a1;
    if (a1)
    {
      type metadata accessor for OCPoint(0);
      result = sub_239352488();
      *(_QWORD *)(result + 16) = v4;
      v6 = 32;
      do
      {
        v7 = (__n128 *)(result + v6);
        *v7 = a2;
        v7[1] = a3;
        v7[2] = a4;
        v6 += 48;
        --v4;
      }
      while (v4);
    }
    else
    {
      return MEMORY[0x24BEE4AF8];
    }
  }
  return result;
}

uint64_t sub_2392DFFF8(unsigned int a1, unint64_t a2)
{
  uint64_t result;
  unsigned int *v5;
  unint64_t v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_23935283C();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_239352488();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = vdupq_n_s32(a1);
  v8 = (int32x4_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_2392E00E0@<X0>(uint64_t a1@<X0>, char a2@<W1>, __n128 *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  uint64_t (*v10)(void);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unsigned int v18;
  float v19;
  float32x4_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  _QWORD *v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  unint64_t v36;
  unint64_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x4_t v42;
  float32x4_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v50;
  __int32 v51;
  __int128 v52;
  float32x4_t v53;
  float32x4_t v54;
  __n128 v55[4];
  unint64_t v56;
  unint64_t v57;

  v10 = *(uint64_t (**)(void))(*(_QWORD *)a1 + 96);
  result = ((uint64_t (*)(uint64_t))v10)(a1);
  if (result > 0 && (result = (*(uint64_t (**)(void))(*(_QWORD *)a1 + 136))()) != 0)
  {
    v12 = result;
    v13 = v10();
    v14 = (_QWORD *)sub_2392DFF34(v13, (__n128)0, (__n128)0, (__n128)0);
    v15 = v14[2];
    if (v15)
    {
      v16 = 0;
      v17 = 0;
      while (1)
      {
        v50 = *(_OWORD *)(v12 + v16 + 16);
        v52 = *(_OWORD *)(v12 + v16);
        v18 = *(_DWORD *)(v12 + v16 + 32);
        v19 = *(float *)(v12 + v16 + 36);
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_2392E48BC(v14);
          v14 = (_QWORD *)result;
        }
        v21 = v14[2];
        if (v17 >= v21)
          break;
        v23 = v50;
        v22 = v52;
        HIDWORD(v22) = 1.0;
        v24 = &v14[v16 / 8];
        HIDWORD(v23) = 0;
        *((_OWORD *)v24 + 2) = v22;
        *((_OWORD *)v24 + 3) = v23;
        v20.f32[0] = (float)HIBYTE(v18) / 255.0;
        v25 = v20;
        v25.f32[1] = (float)BYTE2(v18) / 255.0;
        v26 = v25;
        v26.f32[2] = (float)BYTE1(v18) / 255.0;
        v27 = v26;
        v27.f32[3] = (float)v18 / 255.0;
        if ((a2 & 1) != 0)
        {
          if (qword_25692DAB0 != -1)
          {
            v53 = v27;
            v42 = v26;
            v44 = v25.i64[0];
            result = swift_once();
            v26 = v42;
            v25.i64[0] = v44;
            v20.f32[0] = (float)HIBYTE(v18) / 255.0;
            v27 = v53;
          }
          v28 = *(float32x4_t *)zmmword_25692FE60;
          v29 = *(float32x4_t *)&zmmword_25692FE60[16];
          v31 = *(float32x4_t *)&zmmword_25692FE60[32];
          v30 = *(float32x4_t *)&zmmword_25692FE60[48];
          if (qword_25692DAA8 != -1)
          {
            v51 = v20.i32[0];
            v54 = v27;
            v43 = v26;
            v45 = v25.i64[0];
            v40 = *(float32x4_t *)&zmmword_25692FE60[32];
            v41 = *(float32x4_t *)&zmmword_25692FE60[48];
            v38 = *(float32x4_t *)zmmword_25692FE60;
            v39 = *(float32x4_t *)&zmmword_25692FE60[16];
            result = swift_once();
            v28 = v38;
            v29 = v39;
            v31 = v40;
            v30 = v41;
            v26 = v43;
            v25.i64[0] = v45;
            v20.i32[0] = v51;
            v27 = v54;
          }
          v32 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v28, v20.f32[0]), v29, *(float32x2_t *)v25.f32, 1), v31, v26, 2), v30, v27, 3);
          v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*(float32x4_t *)zmmword_25692FE20, v19 * v32.f32[0]), *(float32x4_t *)&zmmword_25692FE20[16], *(float32x2_t *)v32.f32, 1), *(float32x4_t *)&zmmword_25692FE20[32], v32, 2), *(float32x4_t *)&zmmword_25692FE20[48], v32, 3);
          v21 = v14[2];
        }
        if (v17 >= v21)
          goto LABEL_20;
        ++v17;
        *(float32x4_t *)&v14[v16 / 8 + 8] = v27;
        v16 += 48;
        if (v15 == v17)
          goto LABEL_18;
      }
      __break(1u);
LABEL_20:
      __break(1u);
    }
    else
    {
LABEL_18:
      result = sub_239346914((unint64_t)v14, v55, a4, a5, a6, a7);
      v33 = v55[1];
      v34 = v55[2];
      v35 = v55[3];
      v37 = v56;
      v36 = v57;
      a3->n128_u64[0] = v55[0].n128_u64[0];
      a3->n128_u64[1] = 0;
      a3[1] = v33;
      a3[2] = v34;
      a3[3] = v35;
      a3[4].n128_u64[0] = v37;
      a3[4].n128_u64[1] = v36;
    }
  }
  else
  {
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

__n128 sub_2392E0374@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int8x16_t v14;
  unint64_t v15;
  int8x16_t v16;
  float32x4_t v17;
  unsigned __int32 v18;
  unsigned __int32 v19;
  __int128 v20;
  __int128 v21;
  uint32x4_t v22;
  _OWORD *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 result;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41[4];
  uint64_t v42;
  uint64_t v43;

  v3 = a1->n128_u64[1];
  if (!v3)
    goto LABEL_15;
  v4 = a1->n128_u64[0];
  v39 = a1[3];
  v40 = a1[2];
  v37 = a1[5];
  v38 = a1[4];
  v5 = *(uint64_t (**)(void))(*(_QWORD *)a1->n128_u64[0] + 96);
  v6 = swift_retain();
  if (((uint64_t (*)(uint64_t))v5)(v6) <= 0
    || (v7 = (*(uint64_t (**)(void))(*(_QWORD *)v4 + 136))()) == 0
    || (v8 = v7, (v9 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 136))()) == 0))
  {
    swift_release();
LABEL_15:
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  v10 = v9;
  v11 = v5();
  v12 = (_QWORD *)sub_2392DFF34(v11, (__n128)0, (__n128)0, (__n128)0);
  v13 = v12[2];
  if (v13)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_2392E48BC(v12);
    v15 = 0;
    v16.i64[0] = 0xFF000000FFLL;
    v16.i64[1] = 0xFF000000FFLL;
    v17 = (float32x4_t)vdupq_n_s32(0x437F0000u);
    do
    {
      v18 = *(_DWORD *)(v8 + v15 + 32);
      v14.i32[0] = v18;
      v19 = vshrq_n_u32((uint32x4_t)v14, 0x18uLL).u32[0];
      v14.i32[1] = HIWORD(v18);
      v14.i32[2] = v18 >> 8;
      v20 = *(_OWORD *)(v8 + v15);
      v21 = *(_OWORD *)(v8 + v15 + 16);
      v14.i32[3] = v18;
      v22 = (uint32x4_t)vandq_s8(v14, v16);
      v22.i32[0] = v19;
      HIDWORD(v20) = 1.0;
      v23 = &v12[v15 / 8];
      HIDWORD(v21) = 0;
      v23[2] = v20;
      v23[3] = v21;
      v14 = (int8x16_t)vdivq_f32(vcvtq_f32_u32(v22), v17);
      v23[4] = v14;
      v15 += 48;
      --v13;
    }
    while (v13);
  }
  v24 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 96))();
  v25 = sub_2392DFFF8(0, v24);
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
    goto LABEL_23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if (v26 < 8)
    {
LABEL_13:
      v27 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    v25 = (unint64_t)sub_2392E48D0(v25);
    if (v26 < 8)
      goto LABEL_13;
  }
  if (v25 - v10 < 0xFFFFFFFFFFFFFFE0)
  {
    v29 = 0;
    v27 = v26 & 0x7FFFFFFFFFFFFFF8;
    v30 = v26 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      v31 = *(_OWORD *)(v10 + v29 + 16);
      v32 = v25 + v29;
      *(_OWORD *)(v32 + 32) = *(_OWORD *)(v10 + v29);
      *(_OWORD *)(v32 + 48) = v31;
      v29 += 32;
      v30 -= 8;
    }
    while (v30);
    if (v26 == v27)
      goto LABEL_23;
  }
  else
  {
    v27 = 0;
  }
  do
  {
LABEL_22:
    *(_DWORD *)(v25 + 4 * v27 + 32) = *(_DWORD *)(v10 + 4 * v27);
    ++v27;
  }
  while (v26 != v27);
LABEL_23:
  sub_239346984((unint64_t)v12, v25, v41, v40, v39, v38, v37);
  swift_release();
  result = v41[2];
  v33 = v41[3];
  v35 = v42;
  v34 = v43;
  v36 = v41[1];
  *(__n128 *)a2 = v41[0];
  *(__n128 *)(a2 + 16) = v36;
  *(__n128 *)(a2 + 32) = result;
  *(__n128 *)(a2 + 48) = v33;
  *(_QWORD *)(a2 + 64) = v35;
  *(_QWORD *)(a2 + 72) = v34;
  return result;
}

_BYTE *sub_2392E05E4(void *a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *result;
  BOOL v6;
  uint64_t v7;

  v2 = objc_msgSend(a1, sel_length);
  if (v2 < 1)
    return 0;
  v3 = 0;
  v4 = v2;
  while (1)
  {
    result = objc_msgSend(a1, sel_echoIds);
    if (!result[v3])
      break;
    if (__OFADD__(v3, 3))
      v3 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v3 += 3;
    if (v3 >= v4)
      return 0;
  }
  v6 = __OFADD__(v3, 2);
  v7 = v3 + 2;
  if (!v6)
  {
    if (v7 < v4)
      return (_BYTE *)(*((_BYTE *)objc_msgSend(a1, sel_echoIds) + v7) == 2);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_2392E0690@<X0>(void *a1@<X0>, char a2@<W1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v7;
  unsigned __int8 v8;
  float v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  float v20;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unsigned int v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  _QWORD *v70;
  _QWORD *v71;
  __int128 v72;
  __int128 v73;
  float32x4_t v74;
  __int128 v75;
  unsigned int v76;
  __int128 v78;
  char v79;
  char v80;
  char v81;
  __int128 v82;
  __int128 v83;
  char v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _QWORD *v89;

  v7 = sub_2392E05E4(a1);
  v8 = v7;
  *a3 = v7 & 1;
  if ((v7 & 1) != 0)
    v9 = 0.8;
  else
    v9 = 0.9;
  if ((v7 & 1) != 0)
    v10 = 3;
  else
    v10 = 2;
  OCDepthPointCloud.init()(&v85);
  result = (uint64_t)objc_msgSend(a1, sel_length);
  if ((int)result >= 1)
  {
    v12 = 0;
    v84 = v8 & a2;
    v13 = (int)result;
    do
    {
      v15 = v12;
      v16 = __OFADD__(v12, v10);
      v12 += v10;
      if (v16)
        v17 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v17 = v12;
      result = (uint64_t)objc_msgSend(a1, sel_echoIds);
      if (!*(_BYTE *)(result + v15))
      {
        if ((v84 & 1) != 0)
        {
          v18 = v15 + 2;
          if (__OFADD__(v15, 2))
          {
            __break(1u);
            return result;
          }
          goto LABEL_29;
        }
        v19 = *((float *)objc_msgSend(a1, sel_confidences) + v15);
        v20 = *((float *)objc_msgSend(a1, sel_confidences) + v15 + 1);
        v78 = *((_OWORD *)objc_msgSend(a1, sel_points) + v15);
        result = (uint64_t)objc_msgSend(a1, sel_points);
        if (v9 < (float)(v19 - v20))
        {
          v18 = v15;
LABEL_29:
          if (v18 != -1)
          {
            result = (uint64_t)objc_msgSend(a1, sel_points);
            if (fabsf(*(float *)(result + 16 * v18 + 8)) >= 0.000001)
            {
              v79 = *((_BYTE *)objc_msgSend(a1, sel_bankIds) + v18);
              v22 = (char *)v85;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v22 = sub_2392E3DB8(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
              v24 = *((_QWORD *)v22 + 2);
              v23 = *((_QWORD *)v22 + 3);
              v25 = v24 + 1;
              if (v24 >= v23 >> 1)
              {
                v63 = sub_2392E3DB8((char *)(v23 > 1), v24 + 1, 1, v22);
                v25 = v24 + 1;
                v22 = v63;
              }
              *((_QWORD *)v22 + 2) = v25;
              v22[v24 + 32] = v79;
              *(_QWORD *)&v85 = v22;
              v80 = *((_BYTE *)objc_msgSend(a1, sel_spotIds) + v18);
              v26 = (char *)*((_QWORD *)&v85 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v26 = sub_2392E3DB8(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
              v28 = *((_QWORD *)v26 + 2);
              v27 = *((_QWORD *)v26 + 3);
              v29 = v28 + 1;
              if (v28 >= v27 >> 1)
              {
                v64 = sub_2392E3DB8((char *)(v27 > 1), v28 + 1, 1, v26);
                v29 = v28 + 1;
                v26 = v64;
              }
              *((_QWORD *)v26 + 2) = v29;
              v26[v28 + 32] = v80;
              *((_QWORD *)&v85 + 1) = v26;
              v81 = *((_BYTE *)objc_msgSend(a1, sel_echoIds) + v18);
              v30 = (char *)v86;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v30 = sub_2392E3DB8(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
              v32 = *((_QWORD *)v30 + 2);
              v31 = *((_QWORD *)v30 + 3);
              v33 = v32 + 1;
              if (v32 >= v31 >> 1)
              {
                v65 = sub_2392E3DB8((char *)(v31 > 1), v32 + 1, 1, v30);
                v33 = v32 + 1;
                v30 = v65;
              }
              *((_QWORD *)v30 + 2) = v33;
              v30[v32 + 32] = v81;
              *(_QWORD *)&v86 = v30;
              v34 = *((_DWORD *)objc_msgSend(a1, sel_euclideanDistances) + v18);
              v35 = (char *)*((_QWORD *)&v86 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v35 = sub_239281EC4(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
              v37 = *((_QWORD *)v35 + 2);
              v36 = *((_QWORD *)v35 + 3);
              v38 = v37 + 1;
              if (v37 >= v36 >> 1)
              {
                v66 = sub_239281EC4((char *)(v36 > 1), v37 + 1, 1, v35);
                v38 = v37 + 1;
                v35 = v66;
              }
              *((_QWORD *)v35 + 2) = v38;
              *(_DWORD *)&v35[4 * v37 + 32] = v34;
              *((_QWORD *)&v86 + 1) = v35;
              v39 = *((_DWORD *)objc_msgSend(a1, sel_confidences) + v18);
              v40 = (char *)v87;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v40 = sub_239281EC4(0, *((_QWORD *)v40 + 2) + 1, 1, v40);
              v42 = *((_QWORD *)v40 + 2);
              v41 = *((_QWORD *)v40 + 3);
              v43 = v42 + 1;
              if (v42 >= v41 >> 1)
              {
                v67 = sub_239281EC4((char *)(v41 > 1), v42 + 1, 1, v40);
                v43 = v42 + 1;
                v40 = v67;
              }
              *((_QWORD *)v40 + 2) = v43;
              *(_DWORD *)&v40[4 * v42 + 32] = v39;
              *(_QWORD *)&v87 = v40;
              v44 = *((_DWORD *)objc_msgSend(a1, sel_intensities) + v18);
              v45 = (char *)*((_QWORD *)&v87 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v45 = sub_239281EC4(0, *((_QWORD *)v45 + 2) + 1, 1, v45);
              v47 = *((_QWORD *)v45 + 2);
              v46 = *((_QWORD *)v45 + 3);
              v48 = v47 + 1;
              if (v47 >= v46 >> 1)
              {
                v68 = sub_239281EC4((char *)(v46 > 1), v47 + 1, 1, v45);
                v48 = v47 + 1;
                v45 = v68;
              }
              *((_QWORD *)v45 + 2) = v48;
              *(_DWORD *)&v45[4 * v47 + 32] = v44;
              *((_QWORD *)&v87 + 1) = v45;
              v49 = *((_DWORD *)objc_msgSend(a1, sel_signalToNoiseRatios) + v18);
              v50 = (char *)v88;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v50 = sub_239281EC4(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
              v52 = *((_QWORD *)v50 + 2);
              v51 = *((_QWORD *)v50 + 3);
              v53 = v52 + 1;
              if (v52 >= v51 >> 1)
              {
                v69 = sub_239281EC4((char *)(v51 > 1), v52 + 1, 1, v50);
                v53 = v52 + 1;
                v50 = v69;
              }
              *((_QWORD *)v50 + 2) = v53;
              *(_DWORD *)&v50[4 * v52 + 32] = v49;
              *(_QWORD *)&v88 = v50;
              v82 = *((_OWORD *)objc_msgSend(a1, sel_cameraPixels) + v18);
              v54 = (_QWORD *)*((_QWORD *)&v88 + 1);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v54 = sub_2392E3CAC(0, v54[2] + 1, 1, v54);
              v56 = v54[2];
              v55 = v54[3];
              v57 = v56 + 1;
              if (v56 >= v55 >> 1)
              {
                v70 = sub_2392E3CAC((_QWORD *)(v55 > 1), v56 + 1, 1, v54);
                v57 = v56 + 1;
                v54 = v70;
              }
              v54[2] = v57;
              *(_OWORD *)&v54[2 * v56 + 4] = v82;
              *((_QWORD *)&v88 + 1) = v54;
              v83 = *((_OWORD *)objc_msgSend(a1, sel_points) + v18);
              v75 = *((_OWORD *)objc_msgSend(a1, sel_points) + v18);
              v74 = *((float32x4_t *)objc_msgSend(a1, sel_points) + v18);
              v58 = v89;
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                result = (uint64_t)sub_239275064(0, v58[2] + 1, 1, v58);
                v58 = (_QWORD *)result;
              }
              v60 = v58[2];
              v59 = v58[3];
              v61 = v60 + 1;
              v62 = v76;
              if (v60 >= v59 >> 1)
              {
                result = (uint64_t)sub_239275064((_QWORD *)(v59 > 1), v60 + 1, 1, v58);
                v62 = v76;
                v61 = v60 + 1;
                v58 = (_QWORD *)result;
              }
              *(float32x2_t *)&v14 = vmul_f32((float32x2_t)__PAIR64__(DWORD1(v75), v83), (float32x2_t)0xBA83126F3A83126FLL);
              *((_QWORD *)&v14 + 1) = __PAIR64__(v62, COERCE_UNSIGNED_INT(vmuls_lane_f32(-0.001, v74, 2)));
              v58[2] = v61;
              *(_OWORD *)&v58[2 * v60 + 4] = v14;
              v89 = v58;
              v76 = HIDWORD(v14);
            }
          }
          continue;
        }
        v18 = v15 + 1;
        if ((float)(v19 - v20) < (float)-v9)
          goto LABEL_29;
        if (v9 < v19 && v9 < v20)
        {
          if (*((float *)&v78 + 2) <= COERCE_FLOAT(*(_QWORD *)(result + 16 * v15 + 24)))
            v18 = v15;
          goto LABEL_29;
        }
      }
    }
    while (v17 < v13);
  }
  v71 = v89;
  v72 = v86;
  *(_OWORD *)a4 = v85;
  *(_OWORD *)(a4 + 16) = v72;
  v73 = v88;
  *(_OWORD *)(a4 + 32) = v87;
  *(_OWORD *)(a4 + 48) = v73;
  *(_QWORD *)(a4 + 64) = v71;
  return result;
}

uint64_t sub_2392E0E14@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v4;

  return sub_2392E0690(a1, a2, &v4, a3);
}

void filteredDepthPointCloud(_:)(_QWORD *a1@<X8>)
{
  id v2;
  id v3;
  char v4;

  v2 = (id)OCNonModularSPI_ADJasperPointCloud_CreatePointCloud();
  if (v2)
  {
    v3 = v2;
    sub_2392E0690(v2, 0, &v4, (uint64_t)a1);

  }
  else
  {
    OCDepthPointCloud.init()(a1);
  }
}

void sub_2392E0E94(_BYTE *a1@<X1>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;

  v4 = (id)OCNonModularSPI_ADJasperPointCloud_CreatePointCloud();
  if (v4)
  {
    v5 = v4;
    sub_2392E0690(v4, 0, a1, (uint64_t)a2);

  }
  else
  {
    *a1 = 0;
    OCDepthPointCloud.init()(a2);
  }
}

uint64_t sub_2392E0EFC(float32x4_t a1, float32x4_t a2, float32x4_t a3, int8x16_t a4)
{
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t v6;
  uint32x4_t v7;
  float32x4_t v8;
  float32x4_t v9;
  float32x4_t v10;
  int32x4_t v11;
  int32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  uint32x4_t v15;
  float32x4_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  uint32x2_t v20;

  v4 = *(float32x4_t *)(MEMORY[0x24BDAEDF8] + 16);
  v5 = *(float32x4_t *)(MEMORY[0x24BDAEDF8] + 32);
  v6 = (float32x4_t)vdupq_n_s32(0x38D1B717u);
  v7 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_lane_f32(vmlaq_lane_f32(vmulq_lane_f32(a1, *(float32x2_t *)a1.f32, 1), a2, *(float32x2_t *)a2.f32, 1), a3, *(float32x2_t *)a3.f32, 1), v4)), (int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a1, a1.f32[0]), a2, a2.f32[0]), a3, a3.f32[0]), *MEMORY[0x24BDAEDF8]))),
                     (int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_laneq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(a1, a1, 2), a2, a2, 2), a3, a3, 2), v5)));
  v7.i32[3] = v7.i32[2];
  if ((vminvq_u32(v7) & 0x80000000) == 0)
    return 0;
  v8 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a1, 2);
  v9 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a2, 2);
  v10 = (float32x4_t)vzip1q_s32((int32x4_t)v8, (int32x4_t)v9);
  v11 = vzip1q_s32((int32x4_t)a1, (int32x4_t)a3);
  v12 = vzip1q_s32((int32x4_t)a2, (int32x4_t)0);
  v13 = (float32x4_t)vzip2q_s32(v11, v12);
  v13.i32[2] = vdupq_lane_s32(*(int32x2_t *)&a3, 1).i32[2];
  v14 = (float32x4_t)vzip1q_s32(v11, v12);
  v10.i32[2] = a3.i32[2];
  v15 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, a2.f32[0]), v13, *(float32x2_t *)a2.f32, 1), v9, v10), v4)), (int8x16_t)vcgeq_f32(v6, vabdq_f32(vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, a1.f32[0]), v13, *(float32x2_t *)a1.f32, 1), v8, v10), *MEMORY[0x24BDAEDF8]))), (int8x16_t)vcgeq_f32(v6,
                                   vabdq_f32(vmlaq_f32(vmlaq_lane_f32(vmulq_n_f32(v14, a3.f32[0]), v13, *(float32x2_t *)a3.f32, 1), (float32x4_t)vdupq_laneq_s32((int32x4_t)a3, 2), v10), v5)));
  v15.i32[3] = v15.i32[2];
  if ((vminvq_u32(v15) & 0x80000000) == 0)
    return 0;
  v16 = vmulq_f32(a1, vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8(vextq_s8((int8x16_t)a3, (int8x16_t)a3, 0xCuLL), (int8x16_t)a3, 8uLL), vnegq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a2, (int32x4_t)a2), (int8x16_t)a2, 0xCuLL))), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a3, (int32x4_t)a3), (int8x16_t)a3, 0xCuLL), (float32x4_t)vextq_s8(vextq_s8((int8x16_t)a2, (int8x16_t)a2, 0xCuLL), (int8x16_t)a2, 8uLL)));
  if (vabds_f32(1.0, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).f32[0]) >= 0.0001)return 0;
  v17 = (float32x2_t)vzip2_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a1, (int8x16_t)a1, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a2, (int8x16_t)a2, 8uLL));
  v18 = (float32x2_t)vzip2_s32((int32x2_t)*(_OWORD *)&vextq_s8((int8x16_t)a3, (int8x16_t)a3, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8(a4, a4, 8uLL));
  v19 = (float32x2_t)vdup_n_s32(0x38D1B717u);
  v20 = (uint32x2_t)vand_s8((int8x8_t)vcge_f32(v19, vabs_f32(vadd_f32(v18, (float32x2_t)0xBF80000080000000))), (int8x8_t)vcge_f32(v19, vabs_f32(v17)));
  return vpmin_u32(v20, v20).u32[0] >> 31;
}

float sub_2392E10A0(float32x4_t a1, int32x2_t a2, int32x4_t a3)
{
  float v3;

  v3 = (float)(vaddq_f32(vaddq_f32((float32x4_t)vdupq_lane_s32(a2, 1), a1), (float32x4_t)vdupq_laneq_s32(a3, 2)).f32[0]
             + -1.0)
     * 0.5;
  if (v3 <= -1.0)
    v3 = -1.0;
  if (v3 > 1.0)
    v3 = 1.0;
  return (float)(acosf(v3) * 180.0) / 3.1416;
}

float sub_2392E1104(double a1, double a2, double a3, float32x4_t a4)
{
  float32x4_t v4;

  v4 = vmulq_f32(a4, a4);
  return sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), vaddq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1))).f32[0]);
}

uint64_t sub_2392E1120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v12;

  v2 = sub_239352674();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239352680();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2392E4FE4(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2))
  {
    sub_2392E5028((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v9 == *MEMORY[0x24BEDF340] || v9 == *MEMORY[0x24BEDF338])
      return 0;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 1;
}

float sub_2392E1250(uint64_t a1)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  float v14;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
    return -1.0;
  v2 = sub_23925FAA4(0x73726F736E6553, 0xE700000000000000);
  if ((v3 & 1) == 0)
    return -1.0;
  sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v17);
  sub_23925FB08(&qword_256927010);
  if ((swift_dynamicCast() & 1) == 0)
    return -1.0;
  if (*(_QWORD *)(v16 + 16) && (v4 = sub_23925FAA4(0x69736E6972746E49, 0xEA00000000007363), (v5 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v16 + 56) + 32 * v4, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast() & 1) == 0)
    return -1.0;
  if (*(_QWORD *)(v16 + 16) && (v6 = sub_23925FAA4(4343634, 0xE300000000000000), (v7 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v16 + 56) + 32 * v6, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast() & 1) == 0)
    return -1.0;
  if (*(_QWORD *)(v16 + 16) && (v8 = sub_23925FAA4(0x656C6F686E6950, 0xE700000000000000), (v9 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v16 + 56) + 32 * v8, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast() & 1) == 0)
    return -1.0;
  if (*(_QWORD *)(v16 + 16) && (v10 = sub_23925FAA4(0x654C206C61636F46, 0xEC0000006874676ELL), (v11 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v16 + 56) + 32 * v10, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
    goto LABEL_36;
  if ((swift_dynamicCast() & 1) == 0)
    return -1.0;
  if (*(_QWORD *)(v16 + 16) && (v12 = sub_23925FAA4(1635017028, 0xE400000000000000), (v13 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v16 + 56) + 32 * v12, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
  {
LABEL_36:
    sub_23925FE28((uint64_t)&v17, (uint64_t *)&unk_25692A930);
    return -1.0;
  }
  sub_23925FB08((uint64_t *)&unk_25692BD10);
  if ((swift_dynamicCast() & 1) == 0)
    return -1.0;
  if (!*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRelease();
    return -1.0;
  }
  v14 = *(float *)(v16 + 32);
  swift_bridgeObjectRelease();
  return v14;
}

