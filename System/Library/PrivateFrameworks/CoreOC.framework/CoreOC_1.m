float sub_2392E155C(uint64_t a1)
{
  float v1;
  unint64_t v3;
  char v4;
  double v6;
  _BYTE v7[32];

  v1 = -1.0;
  if (*(_QWORD *)(a1 + 16))
  {
    v3 = sub_23925FAA4(0x657275736F707845, 0xEC000000656D6954);
    if ((v4 & 1) != 0)
    {
      sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)v7);
      if ((swift_dynamicCast() & 1) != 0)
        return v6;
    }
  }
  return v1;
}

uint64_t sub_2392E15FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;
  id v7;
  void *v8;
  unint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;

  v2 = sub_2393522F0();
  if (!*(_QWORD *)(a1 + 16) || (v4 = sub_23925FAA4(v2, v3), (v5 & 1) == 0))
  {
    v14 = 0u;
    v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
  {
LABEL_12:
    sub_23925FE28((uint64_t)&v14, (uint64_t *)&unk_25692A930);
LABEL_13:
    if (!*(_QWORD *)(a1 + 16))
      return -1;
    goto LABEL_14;
  }
  sub_23925FB08(&qword_256928718);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    goto LABEL_13;
  if (!(v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_19:
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a1 + 16))
      return -1;
LABEL_14:
    v9 = sub_23925FAA4(0x6E69614744707369, 0xE800000000000000);
    if ((v10 & 1) != 0)
    {
      sub_23925FB48(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v14);
      sub_2392987E0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = (void *)v13;
        goto LABEL_17;
      }
    }
    return -1;
  }
  swift_bridgeObjectRetain();
  v12 = sub_239352854();
  result = swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_19;
LABEL_7:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v7 = (id)MEMORY[0x23B83A68C](0);
    goto LABEL_10;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v13 + 32);
LABEL_10:
    v8 = v7;
    swift_bridgeObjectRelease();
LABEL_17:
    v11 = objc_msgSend(v8, sel_integerValue);

    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void sub_2392E17DC(__CVBuffer *a1)
{
  __CFString *v2;
  int HasAttachment;
  __CFString *v4;
  int v5;
  __CFString *v6;
  CFTypeRef v7;
  __CFString *v8;
  CFTypeRef v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  CFTypeRef v13[4];

  v2 = (__CFString *)sub_2393522CC();
  HasAttachment = CVBufferHasAttachment(a1, v2);

  if (!HasAttachment)
    return;
  v4 = (__CFString *)sub_2393522CC();
  v5 = CVBufferHasAttachment(a1, v4);

  if (!v5)
    return;
  v6 = (__CFString *)sub_2393522CC();
  v7 = CVBufferCopyAttachment(a1, v6, 0);

  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  v13[0] = v7;
  sub_23925FB08(&qword_256927010);
  swift_dynamicCast();
  sub_2392E1250(v12);
  swift_bridgeObjectRelease();
  v8 = (__CFString *)sub_2393522CC();
  v9 = CVBufferCopyAttachment(a1, v8, 0);

  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v13[0] = v9;
  swift_dynamicCast();
  sub_2392E155C(v12);
  if (*(_QWORD *)(v12 + 16))
  {
    v10 = sub_23925FAA4(0x6C6576654C78754CLL, 0xE800000000000000);
    if ((v11 & 1) != 0)
    {
      sub_23925FB48(*(_QWORD *)(v12 + 56) + 32 * v10, (uint64_t)v13);
      swift_dynamicCast();
    }
  }
  sub_2392E15FC(v12);
  swift_bridgeObjectRelease();
}

void sub_2392E1A10(__CVBuffer *a1)
{
  __CFString *v2;
  int HasAttachment;
  const __CFString *v4;
  __CFString *v5;
  CFTypeRef v6;
  uint64_t v7;

  v2 = (__CFString *)sub_2393522CC();
  HasAttachment = CVBufferHasAttachment(a1, v2);

  if (HasAttachment)
  {
    v4 = (const __CFString *)*MEMORY[0x24BDD9470];
    if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x24BDD9470]))
    {
      v5 = (__CFString *)sub_2393522CC();
      v6 = CVBufferCopyAttachment(a1, v5, 0);

      if (v6)
      {
        sub_23925FB08(&qword_256927010);
        swift_dynamicCast();
        sub_2392E1250(v7);
        swift_bridgeObjectRelease();
        if (CVBufferCopyAttachment(a1, v4, 0))
        {
          swift_dynamicCast();
          sub_2392E155C(v7);
          sub_2392E15FC(v7);
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

unint64_t sub_2392E1B98(_QWORD *a1, double a2, double a3)
{
  uint64_t v3;
  unint64_t result;
  int64_t v8;
  float v9;
  uint64_t v10;
  _QWORD *(*v11)(double *__return_ptr, int64_t);
  char v12;
  int64_t v13;
  float v14;
  float v17;
  float v18;
  double v19;
  float v20;
  char v21;
  char v22;

  if (a2 >= a3)
    goto LABEL_20;
  *a1 = 0;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 128))();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  v8 = result;
  if (!result)
  {
LABEL_20:
    v9 = 0.0;
    v12 = 1;
    goto LABEL_27;
  }
  v9 = 0.0;
  v10 = 0;
  v11 = *(_QWORD *(**)(double *__return_ptr, int64_t))(*(_QWORD *)v3 + 216);
  v12 = 1;
  v13 = result;
  while (1)
  {
    if (v8 < v13)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    result = (unint64_t)v11(&v19, --v13);
    if ((v21 & 1) == 0)
      break;
LABEL_6:
    if (!v13)
      goto LABEL_27;
  }
  v14 = v20;
  if (v19 >= a2 && v19 < a3)
  {
    if (__OFADD__(v10++, 1))
      goto LABEL_29;
    *a1 = v10;
    v17 = v9;
    if ((v12 & 1) != 0)
      v17 = v14;
    if (v17 > v14)
      v14 = v17;
    v9 = v14;
    v12 = 0;
    goto LABEL_6;
  }
  if (v19 < a3)
    goto LABEL_6;
  if (__OFADD__(v10, 1))
    goto LABEL_31;
  *a1 = v10 + 1;
  v18 = v9;
  if ((v12 & 1) != 0)
    v18 = v14;
  if (v18 > v14)
    v14 = v18;
  v9 = v14;
  v12 = 0;
LABEL_27:
  v22 = v12;
  return LODWORD(v9) | ((unint64_t)(v12 & 1) << 32);
}

uint64_t *sub_2392E1CE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  uint64_t v6;
  int v7;

  v3 = *a2;
  v4 = *((_DWORD *)a2 + 2);
  type metadata accessor for DepthWarpCircularBuffer(0);
  swift_allocObject();
  v6 = v3;
  v7 = v4;
  return sub_239350224(a1, (uint64_t)&v6);
}

uint64_t sub_2392E1D48(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;

  v4 = v3;
  v103 = a2;
  v7 = sub_2393520B0();
  v104 = *(_QWORD *)(v7 - 8);
  v105 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v98 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v98 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v102 = (char *)&v98 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v101 = (char *)&v98 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v98 - v21;
  v23 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_239352020();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = -1;
  v29 = a1;
  v31 = v30;
  v33 = v32;
  sub_23926059C(v29, (uint64_t)v25, &qword_2569281C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v31) == 1)
  {
    v34 = sub_23925FE28((uint64_t)v25, &qword_2569281C0);
    if ((a3 & 1) == 0)
    {
      if (((*(uint64_t (**)(uint64_t))(*v4 + 112))(v34) & 1) != 0)
      {
        v110 = -1;
        v35 = sub_239275A60();
        v37 = v104;
        v36 = v105;
        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v16, v35, v105);
        v38 = sub_239352098();
        v39 = sub_239352554();
        if (os_log_type_enabled(v38, v39))
        {
          v40 = swift_slowAlloc();
          v41 = swift_slowAlloc();
          v108 = v41;
          *(_DWORD *)v40 = 136380931;
          v107 = sub_23925F3EC(0xD000000000000029, 0x800000023935D8C0, &v108);
          sub_2393526B0();
          *(_WORD *)(v40 + 12) = 2048;
          v107 = -1;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v38, v39, "SegmentIDConverter.%{private}s:\nSample has a nil session UUID but need to reset legacy id. Final segment ID is: %ld", (uint8_t *)v40, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v41, -1, -1);
          MEMORY[0x23B83BC04](v40, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v36);
        goto LABEL_22;
      }
      v69 = v103;
      v110 = v103;
      v70 = sub_239275A60();
      v71 = v104;
      v62 = v105;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v13, v70, v105);
      v72 = sub_239352098();
      v73 = sub_239352554();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v108 = v75;
        *(_DWORD *)v74 = 136380931;
        v107 = sub_23925F3EC(0xD000000000000029, 0x800000023935D8C0, &v108);
        sub_2393526B0();
        *(_WORD *)(v74 + 12) = 2048;
        v107 = v69;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v72, v73, "SegmentIDConverter.%{private}s:\nSample has a nil session UUID. Final segment ID is the same with original: %ld", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v75, -1, -1);
        MEMORY[0x23B83BC04](v74, -1, -1);
      }

      v60 = *(void (**)(char *, uint64_t))(v71 + 8);
      v68 = v13;
      goto LABEL_20;
    }
LABEL_14:
    v61 = sub_239275A60();
    v63 = v104;
    v62 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v10, v61, v105);
    v64 = sub_239352098();
    v65 = sub_239352554();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v108 = v67;
      *(_DWORD *)v66 = 136380675;
      v107 = sub_23925F3EC(0xD000000000000029, 0x800000023935D8C0, &v108);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v64, v65, "SegmentIDConverter.%{private}s:\nSample has a nil segment ID. Final segment ID is -1.", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v67, -1, -1);
      MEMORY[0x23B83BC04](v66, -1, -1);
    }

    v60 = *(void (**)(char *, uint64_t))(v63 + 8);
    v68 = v10;
LABEL_20:
    v76 = v62;
LABEL_21:
    v60(v68, v76);
LABEL_22:
    swift_beginAccess();
    return v110;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v25, v31);
  if ((a3 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v31);
    goto LABEL_14;
  }
  v42 = v103;
  v100 = v33;
  if (v103 < 0)
  {
    v101 = v28;
    v79 = sub_239275A60();
    v81 = v104;
    v80 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v22, v79, v105);
    v82 = sub_239352098();
    v83 = sub_239352554();
    if (os_log_type_enabled(v82, v83))
    {
      v77 = -1;
      v84 = swift_slowAlloc();
      v99 = v31;
      v85 = v84;
      v86 = swift_slowAlloc();
      v108 = v86;
      *(_DWORD *)v85 = 136380931;
      v107 = sub_23925F3EC(0xD000000000000029, 0x800000023935D8C0, &v108);
      sub_2393526B0();
      *(_WORD *)(v85 + 12) = 2048;
      v107 = v42;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v82, v83, "SegmentIDConverter.%{private}s:\nSample has a negative segment ID: %ld.\nFinal segment ID is -1.", (uint8_t *)v85, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v86, -1, -1);
      MEMORY[0x23B83BC04](v85, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v22, v105);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v99);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v81 + 8))(v22, v80);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v31);
      return -1;
    }
    return v77;
  }
  v99 = v31;
  v43 = sub_239351FF0();
  v45 = v44;
  v108 = v42;
  sub_2393528C0();
  v98 = v43;
  v108 = v43;
  v109 = v45;
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  v47 = v108;
  v46 = v109;
  swift_beginAccess();
  v48 = v4[3];
  if (*(_QWORD *)(v48 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = sub_23925FAA4(v47, v46);
    if ((v50 & 1) != 0)
    {
      v51 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v49);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v110 = v51;
      v52 = sub_239275A60();
      v54 = v104;
      v53 = v105;
      v55 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v101, v52, v105);
      swift_bridgeObjectRetain();
      v56 = sub_239352098();
      v57 = sub_239352554();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = swift_slowAlloc();
        v59 = swift_slowAlloc();
        v108 = v59;
        *(_DWORD *)v58 = 136381443;
        v106 = sub_23925F3EC(0xD000000000000029, 0x800000023935D8C0, &v108);
        sub_2393526B0();
        *(_WORD *)(v58 + 12) = 2080;
        swift_bridgeObjectRetain();
        v106 = sub_23925F3EC(v98, v45, &v108);
        sub_2393526B0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v58 + 22) = 2048;
        v106 = v42;
        sub_2393526B0();
        *(_WORD *)(v58 + 32) = 2048;
        v106 = v51;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v56, v57, "SegmentIDConverter.%{private}s:\nFound existing ID with session UUID: %s and\noriginal segment ID: %ld.\nFinal segment ID is %ld.", (uint8_t *)v58, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v59, -1, -1);
        MEMORY[0x23B83BC04](v58, -1, -1);

        (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v105);
        v60 = *(void (**)(char *, uint64_t))(v100 + 8);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
        v60 = *(void (**)(char *, uint64_t))(v33 + 8);
      }
      v68 = v28;
      v76 = v99;
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v101 = v28;
  v87 = v4[4];
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v106 = v4[3];
  v4[3] = 0x8000000000000000;
  sub_2392E4BEC(v87, v47, v46, isUniquelyReferenced_nonNull_native);
  v4[3] = v106;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_endAccess();
  v89 = v4[4];
  v110 = v89;
  if (!__OFADD__(v89, 1))
  {
    v4[4] = v89 + 1;
    v90 = sub_239275A60();
    v91 = v104;
    v92 = v105;
    v93 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v102, v90, v105);
    swift_bridgeObjectRetain();
    v94 = sub_239352098();
    v95 = sub_239352554();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = swift_slowAlloc();
      v97 = swift_slowAlloc();
      v108 = v97;
      *(_DWORD *)v96 = 136381443;
      v106 = sub_23925F3EC(0xD000000000000029, 0x800000023935D8C0, &v108);
      sub_2393526B0();
      *(_WORD *)(v96 + 12) = 2080;
      swift_bridgeObjectRetain();
      v106 = sub_23925F3EC(v98, v45, &v108);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v96 + 22) = 2048;
      v106 = v103;
      sub_2393526B0();
      *(_WORD *)(v96 + 32) = 2048;
      v106 = v89;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v94, v95, "SegmentIDConverter.%{private}s:\nFound new ID with session UUID: %s and\noriginal segment ID: %ld.\nFinal segment ID is %ld.", (uint8_t *)v96, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v97, -1, -1);
      MEMORY[0x23B83BC04](v96, -1, -1);

      (*(void (**)(char *, uint64_t))(v91 + 8))(v102, v92);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v92);
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v99);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_2392E2A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _DWORD v11[2];

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  v7 = sub_239352098();
  v8 = sub_239352554();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 67109120;
    swift_beginAccess();
    v11[1] = *(unsigned __int8 *)(v1 + 16);
    sub_2393526B0();
    swift_release();
    _os_log_impl(&dword_23925B000, v7, v8, "SegmentIDConverter: should reset legacy segment id: %{BOOL}d", v9, 8u);
    MEMORY[0x23B83BC04](v9, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2392E2B7C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2392E2BAC(char a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return sub_2392E2A08();
}

uint64_t (*sub_2392E2BEC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2392E2C2C;
}

uint64_t sub_2392E2C2C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_2392E2A08();
  return result;
}

unint64_t sub_2392E2C5C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_25692A1F8);
  v2 = (_QWORD *)sub_239352878();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23925FAA4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2392E2D6C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2392E2D90()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = sub_2392E2C5C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 32) = 0;
  return v0;
}

uint64_t sub_2392E2DD4()
{
  return sub_2392E2DEC(&OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime);
}

uint64_t sub_2392E2DE0()
{
  return sub_2392E2DEC(&OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime);
}

uint64_t sub_2392E2DEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = sub_23925FB08(qword_256929E70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v12 - v7;
  sub_2393521DC();
  v9 = sub_2393521F4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_2392E5064((uint64_t)v8, (uint64_t)v6);
  v10 = v1 + *a1;
  swift_beginAccess();
  sub_2392E50AC((uint64_t)v6, v10);
  return swift_endAccess();
}

unint64_t sub_2392E2ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v22[24];

  v1 = sub_23925FB08(qword_256929E70);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v22[-v5];
  v7 = sub_2393521F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v22[-v12];
  v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_23926059C(v14, (uint64_t)v6, qword_256929E70);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  v18 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_23926059C(v18, (uint64_t)v4, qword_256929E70);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17(v11, v4, v7);
  v20 = sub_2393521D0();
  result = sub_2393521D0();
  if (v20 < result)
  {
    __break(1u);
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v21(v11, v7);
    return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v13, v7);
  }
  return result;
}

unint64_t sub_2392E3100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v22[24];

  v1 = sub_23925FB08(qword_256929E70);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v22[-v5];
  v7 = sub_2393521F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v22[-v12];
  v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_23926059C(v14, (uint64_t)v6, qword_256929E70);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  v18 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_23926059C(v18, (uint64_t)v4, qword_256929E70);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17(v11, v4, v7);
  v20 = sub_2393521D0();
  result = sub_2393521D0();
  if (v20 < result)
  {
    __break(1u);
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v21(v11, v7);
    return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v13, v7);
  }
  return result;
}

unint64_t sub_2392E3334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v22[24];

  v1 = sub_23925FB08(qword_256929E70);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v22[-v5];
  v7 = sub_2393521F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v22[-v12];
  v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_23926059C(v14, (uint64_t)v6, qword_256929E70);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  v18 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_23926059C(v18, (uint64_t)v4, qword_256929E70);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17(v11, v4, v7);
  v20 = sub_2393521D0();
  result = sub_2393521D0();
  if (v20 < result)
  {
    __break(1u);
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v21(v11, v7);
    return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v13, v7);
  }
  return result;
}

unint64_t sub_2392E356C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v18;
  unint64_t result;
  unint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v22[24];

  v1 = sub_23925FB08(qword_256929E70);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v22[-v5];
  v7 = sub_2393521F4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v22[-v12];
  v14 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  swift_beginAccess();
  sub_23926059C(v14, (uint64_t)v6, qword_256929E70);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    v16 = (uint64_t)v6;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  v18 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime;
  swift_beginAccess();
  sub_23926059C(v18, (uint64_t)v4, qword_256929E70);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    v16 = (uint64_t)v4;
    return sub_23925FE28(v16, qword_256929E70);
  }
  v17(v11, v4, v7);
  v20 = sub_2393521D0();
  result = sub_2393521D0();
  if (v20 < result)
  {
    __break(1u);
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v21(v11, v7);
    return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v13, v7);
  }
  return result;
}

uint64_t sub_2392E37A4()
{
  uint64_t v0;

  sub_23925FE28(v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime, qword_256929E70);
  sub_23925FE28(v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime, qword_256929E70);
  return swift_deallocClassInstance();
}

uint64_t sub_2392E37FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_startTime;
  v2 = sub_2393521F4();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtCV6CoreOC4Util5Timer_stopTime, 1, 1, v2);
  return v0;
}

double sub_2392E3884(float32x4_t a1)
{
  double result;

  *(_QWORD *)&result = vmulq_laneq_f32(vmulq_lane_f32(a1, *(float32x2_t *)a1.f32, 1), a1, 2).u64[0];
  return result;
}

uint64_t sub_2392E3890(uint64_t a1)
{
  size_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 64);
  v2 = MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v12[1] = (char *)v12 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v12 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v12 - v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23935277C();
  sub_23935277C();
  sub_23935277C();
  sub_239352770();
  memcpy(v3, v10, v1);
  sub_239352788();
  memcpy(v3, v8, v1);
  sub_239352788();
  return sub_239352788();
}

float sub_2392E3A5C()
{
  return 0.00001;
}

BOOL sub_2392E3A6C(float a1, float a2, float a3)
{
  return vabds_f32(a3, a1) <= a2;
}

_QWORD *sub_2392E3A7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_25692A208);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_239263A48(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2392E3BA0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_2569285F8);
      v10 = (char *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2392E5294(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2392E3CAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_25692A200);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2392752E4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2392E3DB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_23925FB08(&qword_256928200);
      v10 = (char *)swift_allocObject();
      v11 = j__malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2392E537C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2392E3EB0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2392E4EE8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2392E3F18(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2392E3F18(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  float v14;
  float v15;
  float v16;
  float v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  float *v24;
  float v25;
  uint64_t v26;
  float *v27;
  float v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  float v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  float *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_2393528B4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(float *)(v81 + 4 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (float *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_2392E45A8((float *)(v86 + 4 * v90), (float *)(v86 + 4 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 4 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_23927F8E8((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_239352488();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (float *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 4;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(float *)(v10 + 4 * v9);
      v15 = *(float *)(v10 + 4 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (int *)(v95 + 4 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (float *)(v95 + 4 * v9);
      do
      {
        v25 = *(float *)(v10 + 4 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23927F6E0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_23927F6E0((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_2392E45A8((float *)(v10 + 4 * *(_QWORD *)v73), (float *)(v10 + 4 * *(_QWORD *)v76), v10 + 4 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_23935283C();
  __break(1u);
  return result;
}

uint64_t sub_2392E45A8(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  float *v19;
  float v20;
  uint64_t result;
  float *v22;
  float *v23;
  float *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 2;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 3;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 2;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 4 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        v17 = (float *)(a3 - 4);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 4 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_2392E4814((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

char *sub_2392E4814(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 3;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -4)
  {
    result = (char *)sub_239352884();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
      return (char *)memmove(result, v3, 4 * v7);
  }
  return result;
}

_QWORD *sub_2392E48BC(_QWORD *a1)
{
  return sub_2392E3A7C(0, a1[2], 0, a1);
}

char *sub_2392E48D0(uint64_t a1)
{
  return sub_2392E3BA0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2392E48E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_23925FB08(&qword_25692A1F8);
  v37 = a2;
  v6 = sub_23935286C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_239352980();
    sub_23935235C();
    result = sub_2393529B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2392E4BEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23925FAA4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_2392E4D3C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_2392E48E4(result, a4 & 1);
  result = sub_23925FAA4(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_239352908();
  __break(1u);
  return result;
}

void *sub_2392E4D3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_23925FB08(&qword_25692A1F8);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2392E4EE8(uint64_t a1)
{
  return sub_239297E80(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

int64_t sub_2392E4EFC(int64_t result, int64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;

  if (result == a2)
    return 0;
  if (a2 < result)
    goto LABEL_25;
  if (result >= a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v4 = result + 1;
  v3 = result;
  if (result + 1 == a2)
    return v3;
  if (result + 1 >= a2)
    goto LABEL_22;
  if ((result & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(a3 + 16);
    if (v5 <= result)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v4 >= v5)
    {
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    if (*(float *)(a3 + 32 + 4 * result) >= *(float *)(a3 + 32 + 4 * v4))
      v4 = result;
    if (result + 2 == a2)
      return v4;
    v6 = result;
    v3 = v4;
    while (v6 + 2 < a2)
    {
      if (v4 >= v5)
        goto LABEL_23;
      if (v6 + 2 >= v5)
        goto LABEL_24;
      if (*(float *)(a3 + 32 + 4 * v4) < *(float *)(a3 + 40 + 4 * v6))
      {
        v3 = v6 + 2;
        v4 = v6 + 2;
      }
      if (a2 - 2 == ++v6)
        return v3;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2392E4FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_239352680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392E5028(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_239352680();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2392E5064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(qword_256929E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392E50AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(qword_256929E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ColorConversionMatrix()
{
  return &type metadata for ColorConversionMatrix;
}

uint64_t initializeBufferWithCopyOfBuffer for OCDepthWarpData(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OCDepthWarpData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OCDepthWarpData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OCDepthWarpData()
{
  return &type metadata for OCDepthWarpData;
}

uint64_t type metadata accessor for DepthWarpCircularBuffer(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692DAC8);
}

uint64_t type metadata accessor for SegmentIDConverter()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Util()
{
  return &type metadata for Util;
}

uint64_t sub_2392E51B8()
{
  return type metadata accessor for Util.Timer(0);
}

uint64_t type metadata accessor for Util.Timer(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692DAD8);
}

void sub_2392E51D4()
{
  unint64_t v0;

  sub_2392E5240();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2392E5240()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25692A108[0])
  {
    sub_2393521F4();
    v0 = sub_2393526A4();
    if (!v1)
      atomic_store(v0, qword_25692A108);
  }
}

char *sub_2392E5294(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_239352884();
  __break(1u);
  return result;
}

char *sub_2392E537C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_239352884();
  __break(1u);
  return result;
}

void type metadata accessor for OCPoint(uint64_t a1)
{
  sub_239263BFC(a1, &qword_25692A210);
}

uint64_t ObjectContour.points.getter()
{
  return swift_bridgeObjectRetain();
}

int32x2_t sub_2392E547C()
{
  int32x2_t result;

  result = vdup_n_s32(0x7F800000u);
  qword_25692DAF0 = (uint64_t)result;
  return result;
}

uint64_t ObjectContour.init(points:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)(result + 16) < 3uLL)
  {
    swift_bridgeObjectRelease();
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t ObjectContour.encloses(point:)()
{
  return OCObjectContourIsPointInsideObjectContour();
}

double ObjectContour.closestPoint(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t inited;
  unint64_t *v7;
  BOOL v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  double v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[8];

  v20[7] = *MEMORY[0x24BDAC8D0];
  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_23925FB08(&qword_25692B740);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2393548B0;
  *(_QWORD *)(inited + 32) = 0;
  v7 = (unint64_t *)(inited + 32);
  *(_QWORD *)(inited + 40) = 0;
  v19 = 0;
  if (OCObjectContourGetNearestPoints())
    v8 = 1;
  else
    v8 = v19 < 1;
  if (!v8)
  {
    v15 = *v7;
    if ((*v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(_QWORD *)(v5 + 16))
    {
      v14 = (uint64_t *)(v5 + 32 + 8 * v15);
      goto LABEL_14;
    }
    __break(1u);
  }
  v9 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v9, v1);
  v10 = sub_239352098();
  v11 = sub_239352578();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v20[0] = v13;
    *(_DWORD *)v12 = 136380675;
    v18 = sub_23925F3EC(0xD000000000000011, 0x800000023935D990, v20);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v10, v11, "Object Contour.%{private}s: Failed to get nearest points!", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v13, -1, -1);
    MEMORY[0x23B83BC04](v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (qword_25692DAE8 != -1)
    swift_once();
  v14 = &qword_25692DAF0;
LABEL_14:
  v16 = *(double *)v14;
  swift_bridgeObjectRelease();
  return v16;
}

double ObjectContour.center()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25692DAE8 != -1)
    swift_once();
  v12 = qword_25692DAF0;
  v4 = &v12;
  if (OCObjectContourGetCenterOfMass())
  {
    v5 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    v6 = sub_239352098();
    v7 = sub_239352578();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v13[0] = v9;
      *(_DWORD *)v8 = 136380675;
      v11 = sub_23925F3EC(0x29287265746E6563, 0xE800000000000000, v13);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v6, v7, "Object Contour.%{private}s: Invalid center!", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v9, -1, -1);
      MEMORY[0x23B83BC04](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v4 = &qword_25692DAF0;
  }
  return *(double *)v4;
}

ValueMetadata *type metadata accessor for ObjectContour()
{
  return &type metadata for ObjectContour;
}

unint64_t PhotogrammetrySession.Error.localizedDescription.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    __asm { BR              X9 }
  sub_2393527C4();
  swift_bridgeObjectRelease();
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  return 0xD00000000000002ELL;
}

CoreOC::PhotogrammetrySession::Request::Detail_optional __swiftcall PhotogrammetrySession.Request.Detail.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 7;
  if ((unint64_t)rawValue < 7)
    v2 = rawValue;
  *v1 = v2;
  return (CoreOC::PhotogrammetrySession::Request::Detail_optional)rawValue;
}

uint64_t PhotogrammetrySession.Request.Detail.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

CoreOC::PhotogrammetrySession::Request::Detail_optional sub_2392E5B4C(Swift::Int *a1)
{
  return PhotogrammetrySession.Request.Detail.init(rawValue:)(*a1);
}

__n128 PhotogrammetrySession.Request.Geometry.orientedBoundsTransform.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

void PhotogrammetrySession.Request.Geometry.orientedBoundsTransform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*PhotogrammetrySession.Request.Geometry.orientedBoundsTransform.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySession.Request.Geometry.rootTransform.getter()
{
  __n128 *v0;

  return v0[4];
}

void PhotogrammetrySession.Request.Geometry.rootTransform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v4[7] = a4;
}

uint64_t (*PhotogrammetrySession.Request.Geometry.rootTransform.modify())()
{
  return nullsub_1;
}

__n128 sub_2392E5BA4()
{
  return *(__n128 *)MEMORY[0x24BDAEE00];
}

void __swiftcall PhotogrammetrySession.Request.Geometry.init(orientedBoundsTransform:rootTransform:)(CoreOC::PhotogrammetrySession::Request::Geometry *__return_ptr retstr, simd_float4x4 *orientedBoundsTransform, simd_float4x4 *rootTransform)
{
  simd_float4 v3;
  simd_float4 v4;
  simd_float4 v5;
  simd_float4 v6;
  simd_float4 v7;
  simd_float4 v8;
  simd_float4 v9;
  simd_float4 v10;

  retstr->orientedBoundsTransform.columns[0] = v3;
  retstr->orientedBoundsTransform.columns[1] = v4;
  retstr->orientedBoundsTransform.columns[2] = v5;
  retstr->orientedBoundsTransform.columns[3] = v6;
  retstr->rootTransform.columns[0] = v7;
  retstr->rootTransform.columns[1] = v8;
  retstr->rootTransform.columns[2] = v9;
  retstr->rootTransform.columns[3] = v10;
}

uint64_t PhotogrammetrySession.Request.Geometry.hash(into:)()
{
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  return sub_2392EB4A8();
}

uint64_t static PhotogrammetrySession.Request.Geometry.== infix(_:_:)(float32x4_t *a1, float32x4_t *a2)
{
  if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[1], a2[1]), (int8x16_t)vceqq_f32(*a1, *a2)), vandq_s8((int8x16_t)vceqq_f32(a1[2], a2[2]), (int8x16_t)vceqq_f32(a1[3], a2[3])))) & 0x80000000) != 0)return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[6], a2[6]), (int8x16_t)vceqq_f32(a1[7], a2[7])), vandq_s8((int8x16_t)vceqq_f32(a1[5], a2[5]), (int8x16_t)vceqq_f32(a1[4], a2[4])))) >> 31;
  else
    return 0;
}

uint64_t PhotogrammetrySession.Request.Geometry.hashValue.getter()
{
  sub_239352980();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  return sub_2393529B0();
}

uint64_t sub_2392E5DB4()
{
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  return sub_2392EB4A8();
}

uint64_t sub_2392E5E58()
{
  sub_239352980();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  sub_2392EB4A8();
  return sub_2393529B0();
}

uint64_t sub_2392E5F18(float32x4_t *a1, float32x4_t *a2)
{
  uint64_t result;

  result = sub_2392EB51C(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
  if ((_DWORD)result)
    return sub_2392EB51C(a1[4], a1[5], a1[6], a1[7], a2[4], a2[5], a2[6], a2[7]);
  return result;
}

uint64_t PhotogrammetrySession.Request.init(modelFile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[144];

  v4 = sub_23925FB08(&qword_256928730);
  v5 = *(int *)(v4 + 48);
  v6 = a2 + *(int *)(v4 + 64);
  v7 = sub_239351F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  sub_2392677D0((uint64_t)v9);
  sub_2392EB548((uint64_t)v9, v6);
  *(_BYTE *)(a2 + v5) = 5;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 0, 3, v4);
}

void PhotogrammetrySession.Request.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_239351F3C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239268820(v1, (uint64_t)v5, v6);
  v7 = sub_23925FB08(&qword_256928730);
  v8 = (char *)sub_2392E6104
     + 4
     * a6[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 3, v7)+ 5];
  __asm { BR              X10 }
}

uint64_t sub_2392E6104()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  sub_2392EB548(v1 + *(int *)(v4 + 64), (uint64_t)(v0 + 17));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v1, v2);
  sub_23935298C();
  sub_239262570(&qword_2569295D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23935229C();
  sub_23935298C();
  sub_2392EB548((uint64_t)(v0 + 17), v6 - 224);
  if (sub_239269494(v6 - 224) == 1)
  {
    sub_239352998();
  }
  else
  {
    sub_2392EB548((uint64_t)(v0 + 17), (uint64_t)(v0 + 8));
    v7 = v0[9];
    *v0 = v0[8];
    v0[1] = v7;
    v8 = v0[11];
    v0[2] = v0[10];
    v0[3] = v8;
    v9 = v0[13];
    v0[4] = v0[12];
    v0[5] = v9;
    v10 = v0[15];
    v0[6] = v0[14];
    v0[7] = v10;
    sub_239352998();
    sub_2392EB4A8();
    sub_2392EB4A8();
    sub_2392EB4A8();
    sub_2392EB4A8();
    sub_2392EB4A8();
    sub_2392EB4A8();
    sub_2392EB4A8();
    sub_2392EB4A8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
}

uint64_t PhotogrammetrySession.Request.hashValue.getter()
{
  sub_239352980();
  PhotogrammetrySession.Request.hash(into:)();
  return sub_2393529B0();
}

uint64_t sub_2392E62D8()
{
  sub_239352980();
  PhotogrammetrySession.Request.hash(into:)();
  return sub_2393529B0();
}

uint64_t sub_2392E6318()
{
  sub_239352980();
  PhotogrammetrySession.Request.hash(into:)();
  return sub_2393529B0();
}

__n128 PhotogrammetrySession.PointCloud.Point.position.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t PhotogrammetrySession.PointCloud.Point.color.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_2392E6364@<X0>(uint64_t result@<X0>, __n128 *a2@<X8>, __n128 a3@<Q0>)
{
  *a2 = a3;
  a2[1].n128_u32[0] = result;
  return result;
}

uint64_t PhotogrammetrySession.PointCloud.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2392E6378@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t PhotogrammetrySession.ProcessStage.localizedDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2392E63B4
                                                                     + 4 * asc_239355CC8[*v0 + 3]))(0xD000000000000013, 0x800000023935DA90);
}

uint64_t sub_2392E63B4()
{
  return 0x6C41206567616D49;
}

uint64_t sub_2392E63D8(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_2392E63F0()
{
  return 0x6E6547206873654DLL;
}

uint64_t sub_2392E6414()
{
  return 0x2065727574786554;
}

uint64_t sub_2392E6438()
{
  return 0x617A696D6974704FLL;
}

BOOL static PhotogrammetrySession.ProcessStage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PhotogrammetrySession.ProcessStage.hash(into:)()
{
  return sub_23935298C();
}

uint64_t PhotogrammetrySession.ProcessStage.hashValue.getter()
{
  sub_239352980();
  sub_23935298C();
  return sub_2393529B0();
}

uint64_t PhotogrammetrySession.Output.ProgressInfo.estimatedRemainingTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void PhotogrammetrySession.Output.ProgressInfo.processStage.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

uint64_t sub_2392E64F0@<X0>(uint64_t result@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_BYTE *)(a4 + 9) = v4;
  return result;
}

void PhotogrammetrySession.Output.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for PhotogrammetrySession.Result(0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v5);
  sub_239268820(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_2392E6664 + 4 * word_239355CD2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2392E6664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = v2 + *(int *)(sub_23925FB08(&qword_256929550) + 48);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_2392C4FE0(v2, v0, type metadata accessor for PhotogrammetrySession.Request);
  *(_QWORD *)(v3 - 112) = 0;
  *(_QWORD *)(v3 - 104) = 0xE000000000000000;
  sub_2393527C4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 - 112) = 0x2074736575716552;
  *(_QWORD *)(v3 - 104) = 0xE800000000000000;
  sub_239268820(v0, v1, type metadata accessor for PhotogrammetrySession.Request);
  sub_23935232C();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  *(_QWORD *)(v3 - 128) = v5;
  *(_BYTE *)(v3 - 120) = v6;
  PhotogrammetrySession.Error.localizedDescription.getter();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  v7 = *(_QWORD *)(v3 - 112);
  sub_2392688AC(v0, type metadata accessor for PhotogrammetrySession.Request);
  return v7;
}

BOOL static PhotogrammetrySession.Configuration.SampleOrdering.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PhotogrammetrySession.Configuration.SampleOrdering.hash(into:)()
{
  return sub_23935298C();
}

uint64_t PhotogrammetrySession.Configuration.isObjectMaskingEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PhotogrammetrySession.Configuration.isObjectMaskingEnabled.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.isObjectMaskingEnabled.modify())()
{
  return nullsub_1;
}

void PhotogrammetrySession.Configuration.sampleOrdering.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *PhotogrammetrySession.Configuration.sampleOrdering.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.sampleOrdering.modify())()
{
  return nullsub_1;
}

void PhotogrammetrySession.Configuration.featureSensitivity.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *PhotogrammetrySession.Configuration.featureSensitivity.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.featureSensitivity.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.maxPolyCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.maxPolyCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.maxPolyCount.modify())()
{
  return nullsub_1;
}

CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional __swiftcall PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.init(rawValue:)(Swift::UInt rawValue)
{
  _BYTE *v1;

  if ((uint64_t)rawValue <= 4095)
  {
    if (rawValue == 1024)
    {
      *v1 = 0;
      return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
    }
    if (rawValue == 2048)
    {
      *v1 = 1;
      return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
    }
LABEL_12:
    *v1 = 5;
    return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
  }
  if (rawValue == 0x4000)
  {
    *v1 = 4;
    return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
  }
  if (rawValue == 0x2000)
  {
    *v1 = 3;
    return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
  }
  if (rawValue != 4096)
    goto LABEL_12;
  *v1 = 2;
  return (CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional)rawValue;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.rawValue.getter()
{
  char *v0;

  return qword_239356658[*v0];
}

BOOL sub_2392E6D30(char *a1, char *a2)
{
  return qword_239356658[*a1] == qword_239356658[*a2];
}

CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureDimension_optional sub_2392E6D54(Swift::UInt *a1)
{
  return PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.init(rawValue:)(*a1);
}

void sub_2392E6D5C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_239356658[*v1];
}

uint64_t sub_2392E6D74()
{
  sub_239352980();
  sub_23935298C();
  return sub_2393529B0();
}

uint64_t sub_2392E6DC0()
{
  return sub_23935298C();
}

uint64_t sub_2392E6DF4()
{
  sub_239352980();
  sub_23935298C();
  return sub_2393529B0();
}

void PhotogrammetrySession.Configuration.CustomDetailSpecification.maxTextureDimension.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *PhotogrammetrySession.Configuration.CustomDetailSpecification.maxTextureDimension.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.maxTextureDimension.modify())()
{
  return nullsub_1;
}

CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureMapOutputs __swiftcall PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.init(rawValue:)(CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureMapOutputs rawValue)
{
  CoreOC::PhotogrammetrySession::Configuration::CustomDetailSpecification::TextureMapOutputs *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.diffuseColor.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.normal.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.roughness.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.displacement.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.ambientOcclusion.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void sub_2392E6EA8()
{
  qword_25692DB08 = 31;
}

uint64_t sub_2392E6EB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_25692DB00 != -1)
    result = swift_once();
  *a1 = qword_25692DB08;
  return result;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_QWORD *sub_2392E6F64@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_2392E6F70(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_2392E6F84(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_2392E6F8C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_2392E6FA0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_2392E6FB4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2392E6FC8(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_2392E6FF8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2392E7024@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_2392E7048(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_2392E705C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_2392E7070(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_2392E7084@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2392E7098(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_2392E70AC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_2392E70C0(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_2392E70D4()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_2392E70E4()
{
  return sub_239352728();
}

_QWORD *sub_2392E70FC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_2392E7110@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void PhotogrammetrySession.Configuration.CustomDetailSpecification.outputTextureMaps.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

_QWORD *PhotogrammetrySession.Configuration.CustomDetailSpecification.outputTextureMaps.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.outputTextureMaps.modify())()
{
  return nullsub_1;
}

uint64_t static PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = *(unsigned __int8 *)(a2 + 4);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(float *)a1 == *(float *)a2;
  return result;
}

uint64_t sub_2392E717C(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = *(unsigned __int8 *)(a2 + 4);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(float *)a1 == *(float *)a2;
  return result;
}

void PhotogrammetrySession.Configuration.CustomDetailSpecification.textureFormat.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 28);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 4) = v2;
}

uint64_t PhotogrammetrySession.Configuration.CustomDetailSpecification.textureFormat.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 4);
  *(_DWORD *)(v1 + 24) = *(_DWORD *)result;
  *(_BYTE *)(v1 + 28) = v2;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.CustomDetailSpecification.textureFormat.modify())()
{
  return nullsub_1;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV25CustomDetailSpecificationVAGycfC_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  if (qword_25692DB00 != -1)
    result = swift_once();
  v2 = qword_25692DB08;
  *(_QWORD *)a1 = 30000000;
  *(_BYTE *)(a1 + 8) = 3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  return result;
}

void PhotogrammetrySession.Configuration.customDetailSpecification.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  char v5;

  v2 = *(_BYTE *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_DWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 36);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 28) = v5;
}

uint64_t PhotogrammetrySession.Configuration.customDetailSpecification.setter(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  int v4;
  char v5;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)(result + 16);
  v4 = *(_DWORD *)(result + 24);
  v5 = *(_BYTE *)(result + 28);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_DWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 36) = v5;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.customDetailSpecification.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.snapshotURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySession.Configuration(0) + 32);
  return sub_2392EBA18(v3, a1);
}

uint64_t PhotogrammetrySession.Configuration.snapshotURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySession.Configuration(0) + 32);
  return sub_2392EBA60(a1, v3);
}

uint64_t (*PhotogrammetrySession.Configuration.snapshotURL.modify())()
{
  type metadata accessor for PhotogrammetrySession.Configuration(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.ignoreBoundingBox.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySession.Configuration(0) + 36));
}

uint64_t PhotogrammetrySession.Configuration.ignoreBoundingBox.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PhotogrammetrySession.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*PhotogrammetrySession.Configuration.ignoreBoundingBox.modify())()
{
  type metadata accessor for PhotogrammetrySession.Configuration(0);
  return nullsub_1;
}

uint64_t PhotogrammetrySession.Configuration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_WORD *)a1 = 1;
  *(_BYTE *)(a1 + 2) = 0;
  if (qword_25692DB00 != -1)
    swift_once();
  v2 = qword_25692DB08;
  *(_QWORD *)(a1 + 8) = 30000000;
  *(_BYTE *)(a1 + 16) = 3;
  *(_QWORD *)(a1 + 24) = v2;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = 1;
  v3 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v4 = a1 + *(int *)(v3 + 32);
  v5 = sub_239351F3C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_BYTE *)(a1 + *(int *)(v3 + 36)) = 0;
  return result;
}

uint64_t PhotogrammetrySession.Configuration.init(snapshotURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_WORD *)a2 = 1;
  *(_BYTE *)(a2 + 2) = 0;
  if (qword_25692DB00 != -1)
    swift_once();
  v4 = qword_25692DB08;
  *(_QWORD *)(a2 + 8) = 30000000;
  *(_BYTE *)(a2 + 16) = 3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_DWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 36) = 1;
  v5 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v6 = a2 + *(int *)(v5 + 32);
  v7 = sub_239351F3C();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v10(v6, 1, 1, v7);
  *(_BYTE *)(a2 + *(int *)(v5 + 36)) = 0;
  sub_23925FE28(v6, &qword_256927AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, a1, v7);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v10)(v6, 0, 1, v7);
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxImageDim.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxNumSamples.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxNumPixels.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PhotogrammetrySession.HardwareSpecs.maxPolyCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t PhotogrammetrySession.HardwareSpecs.minPolyCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_2392E75CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_2392E75DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_2392E760C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2392E7668()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2392E769C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2392E76E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_2392E7710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    sub_2392EAE28();
    sub_23925FB08(&qword_25692A218);
    sub_239263A08(&qword_25692A220, &qword_25692A218, MEMORY[0x24BDB9CB0]);
    v1 = sub_239352134();
    swift_release();
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2392E77C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(_QWORD **)a1 + 184))();
}

uint64_t sub_2392E77EC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239268820(a1, (uint64_t)v6, v7);
  v8 = *a2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
  swift_beginAccess();
  sub_2392EBE44((uint64_t)v6, v8);
  return swift_endAccess();
}

uint64_t sub_2392E789C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
  swift_beginAccess();
  return sub_239268820(v3, a1, type metadata accessor for PhotogrammetrySession.Configuration);
}

uint64_t sub_2392E78F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
  swift_beginAccess();
  sub_2392EBE44(a1, v3);
  return swift_endAccess();
}

uint64_t static PhotogrammetrySession.isSupported.getter()
{
  type metadata accessor for PGManager();
  return sub_2392A576C() & 1;
}

uint64_t static PhotogrammetrySession.estimatedReconstructionTime(imagesURL:)(uint64_t a1)
{
  return sub_2392E79FC(a1, (uint64_t (*)(uint64_t))sub_2392A5770);
}

uint64_t static PhotogrammetrySession.isConfigurationCompatibleWithSnapshot(configuration:snapshotURL:)(unsigned __int8 *a1, uint64_t a2)
{
  type metadata accessor for PGManager();
  return sub_2392A5788(a2, a1);
}

uint64_t static PhotogrammetrySession.isDeviceCompatibleWithSnapshot(snapshotURL:)()
{
  type metadata accessor for PGManager();
  return sub_2392A5BC8();
}

uint64_t static PhotogrammetrySession.getNumberOfSamplesInSnapshot(snapshotURL:)(uint64_t a1)
{
  return sub_2392E79FC(a1, (uint64_t (*)(uint64_t))sub_2392A5D3C);
}

uint64_t sub_2392E79FC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  type metadata accessor for PGManager();
  return a2(a1);
}

uint64_t sub_2392E7A38()
{
  return sub_2392DCD20(&xmmword_25692DB20);
}

double static PhotogrammetrySession.hardwareSpecs.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v4;

  if (qword_25692DB10 != -1)
    swift_once();
  v2 = qword_25692DB40;
  result = *(double *)&xmmword_25692DB20;
  v4 = *(_OWORD *)algn_25692DB30;
  *(_OWORD *)a1 = xmmword_25692DB20;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  return result;
}

uint64_t PhotogrammetrySession.__allocating_init(snapshotURL:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  void (*v20)(unint64_t, unint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v20 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v20(0xD00000000000002ELL, 0x800000023935DCE0);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v23 = a1;
  v12(v5, a1, v2);
  *(_WORD *)v9 = 1;
  v9[2] = 0;
  if (qword_25692DB00 != -1)
    swift_once();
  v13 = qword_25692DB08;
  *((_QWORD *)v9 + 1) = 30000000;
  v9[16] = 3;
  *((_QWORD *)v9 + 3) = v13;
  *((_DWORD *)v9 + 8) = 0;
  v9[36] = 1;
  v14 = (uint64_t)&v9[*(int *)(v6 + 32)];
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v15(v14, 1, 1, v2);
  v9[*(int *)(v6 + 36)] = 0;
  sub_23925FE28(v14, &qword_256927AD0);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v14, v5, v2);
  v15(v14, 0, 1, v2);
  sub_2392C4FE0((uint64_t)v9, (uint64_t)v11, type metadata accessor for PhotogrammetrySession.Configuration);
  v16 = v22;
  v17 = (*(uint64_t (**)(char *))(v21 + 208))(v11);
  if (!v16)
    v20(0xD000000000000031, 0x800000023935DD10);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v23, v2);
  return v17;
}

uint64_t PhotogrammetrySession.__allocating_init(configuration:)(unsigned __int8 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PhotogrammetrySession.init(configuration:)(a1);
  return v2;
}

uint64_t PhotogrammetrySession.init(configuration:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*isa)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint8_t *v38;
  void (*v39)(char *, uint64_t);
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  unsigned int v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  id v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  id v79;
  uint64_t v80;
  void (*v81)(uint64_t, _UNKNOWN **);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  NSObject *v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t);
  NSObject *v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint8_t *v99;
  char *v100;
  unsigned __int8 *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  NSObject *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118[5];

  v2 = v1;
  v118[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v4);
  v113 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351F3C();
  v115 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v100 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v114 = (char *)&v99 - v9;
  v112 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v10 = MEMORY[0x24BDAC7A8](v112);
  v106 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v99 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v99 - v15;
  v17 = sub_2393520B0();
  v18 = *(NSObject **)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v105 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v104 = (char *)&v99 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v108 = (char *)&v99 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v99 - v25;
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 0;
  v27 = sub_239275AB0();
  isa = (void (*)(char *, uint64_t, uint64_t))v18[2].isa;
  v109 = v27;
  v110 = isa;
  v111 = v18;
  ((void (*)(char *))isa)(v26);
  sub_239268820((uint64_t)a1, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);
  v29 = sub_239352098();
  v30 = sub_239352578();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v101 = a1;
    v32 = (uint8_t *)v31;
    v33 = (void *)swift_slowAlloc();
    v102 = v6;
    v34 = v33;
    v118[0] = v33;
    v103 = v2;
    *(_DWORD *)v32 = 136446210;
    v99 = v32 + 4;
    sub_239268820((uint64_t)v16, (uint64_t)v14, type metadata accessor for PhotogrammetrySession.Configuration);
    v35 = sub_23935232C();
    v117 = sub_23925F3EC(v35, v36, (uint64_t *)v118);
    v2 = v103;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);
    _os_log_impl(&dword_23925B000, v29, v30, "Backend Session: Initializing with configuration = %{public}s", v32, 0xCu);
    swift_arrayDestroy();
    v37 = v34;
    v6 = v102;
    MEMORY[0x23B83BC04](v37, -1, -1);
    v38 = v32;
    a1 = v101;
    MEMORY[0x23B83BC04](v38, -1, -1);
  }
  else
  {
    sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);
  }

  v39 = (void (*)(char *, uint64_t))v111[1].isa;
  v39(v26, v17);
  v40 = sub_2392A5508(a1);
  v42 = v114;
  v41 = v115;
  v43 = v113;
  if ((v40 & 1) == 0)
  {
    v44 = v108;
    v110(v108, v109, v17);
    v45 = sub_239352098();
    v46 = sub_23935256C();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_23925B000, v45, v46, "Backend Session: Cannot resume from snapshot URL with non-default configuration!", v47, 2u);
      MEMORY[0x23B83BC04](v47, -1, -1);
    }

    v39(v44, v17);
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v48 = 2;
    goto LABEL_20;
  }
  sub_2392EBA18((uint64_t)&a1[*(int *)(v112 + 32)], v113);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v43, 1, v6) == 1)
  {
    sub_23925FE28(v43, &qword_256927AD0);
LABEL_19:
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v48 = 0;
LABEL_20:
    *(_BYTE *)(v48 + 8) = 1;
    swift_willThrow();
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Configuration);
LABEL_21:
    LODWORD(v60) = 0;
    goto LABEL_22;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v42, v43, v6);
  if ((sub_239351E64() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v6);
    goto LABEL_19;
  }
  v112 = (uint64_t)v39;
  v113 = v17;
  v49 = (void *)objc_opt_self();
  v50 = objc_msgSend(v49, sel_defaultManager);
  sub_239351F30();
  v51 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(v50, sel_fileExistsAtPath_, v51);

  if (!v52)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v42, v6);
    goto LABEL_19;
  }
  v53 = objc_msgSend(v49, (SEL)&off_250AD42B0 + 7);
  sub_239351F30();
  v54 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v118[0] = 0;
  v55 = objc_msgSend(v53, sel_contentsOfDirectoryAtPath_error_, v54, v118);

  v56 = v118[0];
  v57 = v42;
  if (!v55)
  {
    v79 = v118[0];
    sub_239351E58();

    swift_willThrow();
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v42, v6);
    goto LABEL_21;
  }
  v58 = sub_23935244C();
  v59 = v56;

  v60 = *(_QWORD *)(v58 + 16);
  swift_bridgeObjectRelease();
  if (v60)
  {
    v61 = v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
    sub_239268820((uint64_t)a1, v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    type metadata accessor for PGManager();
    swift_beginAccess();
    v62 = v61;
    v63 = v106;
    sub_239268820(v62, v106, type metadata accessor for PhotogrammetrySession.Configuration);
    v64 = v107;
    v65 = sub_2392A5EC0(v63);
    if (!v64)
    {
      *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) = v65;
      v81 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v65 + 448);
      swift_retain();
      v82 = swift_retain();
      v81(v82, &off_250AC61D0);
      swift_release();
      v110(v104, v109, v113);
      v83 = v115;
      v84 = v100;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v100, v42, v6);
      v85 = sub_239352098();
      v86 = v6;
      v87 = sub_239352560();
      v111 = v85;
      if (os_log_type_enabled(v85, v87))
      {
        v88 = swift_slowAlloc();
        v89 = swift_slowAlloc();
        v110 = (void (*)(char *, uint64_t, uint64_t))v89;
        *(_DWORD *)v88 = 141558275;
        v116 = 1752392040;
        v117 = v89;
        sub_2393526B0();
        *(_WORD *)(v88 + 12) = 2081;
        v101 = a1;
        sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v90 = v86;
        v91 = sub_2393528C0();
        v116 = sub_23925F3EC(v91, v92, &v117);
        a1 = v101;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        v93 = *(void (**)(char *, uint64_t))(v115 + 8);
        v93(v84, v86);
        v94 = v111;
        _os_log_impl(&dword_23925B000, v111, v87, "Backend Session: initialized with snapshot URL = %{private,mask.hash}s", (uint8_t *)v88, 0x16u);
        v95 = v110;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v95, -1, -1);
        v96 = v88;
        v57 = v114;
        MEMORY[0x23B83BC04](v96, -1, -1);

        ((void (*)(char *, uint64_t))v112)(v104, v113);
      }
      else
      {
        v93 = *(void (**)(char *, uint64_t))(v83 + 8);
        v93(v84, v86);

        ((void (*)(char *, uint64_t))v112)(v104, v113);
        v90 = v86;
      }
      v98 = type metadata accessor for MemoryLogger();
      (*(void (**)(unint64_t, unint64_t))(v98 + 88))(0xD000000000000032, 0x800000023935DD50);
      sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Configuration);
      v93(v57, v90);
      return v2;
    }
    v66 = v105;
    v67 = v113;
    v110(v105, v109, v113);
    v68 = v64;
    v69 = v64;
    v70 = sub_239352098();
    v71 = sub_23935256C();
    if (os_log_type_enabled(v70, v71))
    {
      v102 = v6;
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v116 = (uint64_t)v64;
      v117 = v73;
      v103 = v2;
      *(_DWORD *)v72 = 136446210;
      v111 = (v72 + 4);
      v74 = v64;
      sub_23925FB08(&qword_2569273F8);
      v75 = sub_23935232C();
      v116 = sub_23925F3EC(v75, v76, &v117);
      v2 = v103;
      sub_2393526B0();
      v6 = v102;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v70, v71, "Backend Session: initialization error = %{public}s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v73, -1, -1);
      MEMORY[0x23B83BC04](v72, -1, -1);

      v77 = v105;
    }
    else
    {

      v77 = v66;
    }
    ((void (*)(char *, uint64_t))v112)(v77, v67);
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v97 = 2;
    LODWORD(v60) = 1;
    *(_BYTE *)(v97 + 8) = 1;
    swift_willThrow();

    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v6);
  }
  else
  {
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v80 = 0;
    *(_BYTE *)(v80 + 8) = 1;
    swift_willThrow();
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v42, v6);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  swift_release();
  if ((_DWORD)v60)
    sub_2392688AC(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
  swift_release();
  type metadata accessor for PhotogrammetrySession(0);
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t PhotogrammetrySession.__allocating_init(imagesURL:snapshotURL:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(unint64_t, unint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v19 = a2;
  v20 = a1;
  v2 = sub_239351F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - v10;
  v12 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v12(0xD000000000000039, 0x800000023935DD90);
  *(_WORD *)v11 = 1;
  v11[2] = 0;
  if (qword_25692DB00 != -1)
    swift_once();
  v13 = qword_25692DB08;
  *((_QWORD *)v11 + 1) = 30000000;
  v11[16] = 3;
  *((_QWORD *)v11 + 3) = v13;
  *((_DWORD *)v11 + 8) = 0;
  v11[36] = 1;
  v14 = (uint64_t)&v11[*(int *)(v6 + 32)];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, 1, 1, v2);
  v11[*(int *)(v6 + 36)] = 0;
  sub_2392EBEE0(v19, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
  sub_239268820((uint64_t)v11, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Configuration);
  v15 = v18[2];
  v16 = (*(uint64_t (**)(char *, char *))(v18[1] + 216))(v5, v9);
  if (!v15)
    v12(0xD00000000000003CLL, 0x800000023935DDD0);
  sub_23925FE28(v19, &qword_256927AD0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v20, v2);
  sub_2392688AC((uint64_t)v11, type metadata accessor for PhotogrammetrySession.Configuration);
  return v16;
}

uint64_t PhotogrammetrySession.__allocating_init(imagesURL:configuration:)(char *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PhotogrammetrySession.init(imagesURL:configuration:)(a1, a2);
  return v4;
}

uint64_t PhotogrammetrySession.init(imagesURL:configuration:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  os_log_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  int v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t result;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  unsigned __int8 *v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  id v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(uint64_t, _UNKNOWN **);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char *v107;
  os_log_type_t v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  os_log_t v118;
  int v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  void (*v127)(char *, uint64_t, uint64_t);
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t);
  char *v130;
  unsigned __int8 *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  void (*v140)(char *, uint64_t);
  char *v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  id v148[4];

  v3 = v2;
  v145 = a2;
  v148[3] = *(id *)MEMORY[0x24BDAC8D0];
  v122 = sub_23925FB08(&qword_256927AD0);
  v5 = MEMORY[0x24BDAC7A8](v122);
  v121 = (uint64_t)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v125 = (uint64_t)&v117 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v135 = (uint64_t)&v117 - v9;
  v138 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v10 = MEMORY[0x24BDAC7A8](v138);
  v131 = (unsigned __int8 *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v141 = (char *)&v117 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v137 = (uint64_t)&v117 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v117 - v16;
  v18 = sub_239351F3C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v123 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v130 = (char *)&v117 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v117 - v24;
  v26 = sub_2393520B0();
  v27 = *(void (**)(char *, uint64_t))(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v126 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v124 = (char *)&v117 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v117 - v32;
  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 0;
  v34 = sub_239275AB0();
  v140 = v27;
  v35 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v27 + 2);
  v128 = v34;
  v144 = v26;
  v129 = v35;
  ((void (*)(char *))v35)(v33);
  v36 = a1;
  v127 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v127(v25, (uint64_t)a1, v18);
  v139 = v17;
  sub_239268820(v145, (uint64_t)v17, type metadata accessor for PhotogrammetrySession.Configuration);
  v37 = sub_239352098();
  v38 = sub_239352578();
  v39 = v38;
  v40 = os_log_type_enabled(v37, v38);
  v143 = v18;
  v134 = v19;
  if (v40)
  {
    v41 = swift_slowAlloc();
    v136 = v36;
    v42 = v41;
    v120 = (void *)swift_slowAlloc();
    v148[0] = v120;
    *(_DWORD *)v42 = 136380931;
    v133 = v3;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v119 = v39;
    v43 = sub_2393528C0();
    v147 = sub_23925F3EC(v43, v44, (uint64_t *)v148);
    v118 = v37;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    v142 = *(void (**)(char *, uint64_t))(v19 + 8);
    v142(v25, v18);
    *(_WORD *)(v42 + 12) = 2082;
    v45 = (uint64_t)v139;
    sub_239268820((uint64_t)v139, v137, type metadata accessor for PhotogrammetrySession.Configuration);
    v46 = sub_23935232C();
    v147 = sub_23925F3EC(v46, v47, (uint64_t *)v148);
    sub_2393526B0();
    v3 = v133;
    swift_bridgeObjectRelease();
    sub_2392688AC(v45, type metadata accessor for PhotogrammetrySession.Configuration);
    v48 = v118;
    _os_log_impl(&dword_23925B000, v118, (os_log_type_t)v119, "Backend Session: Initializing with images URL = %{private}s and configuration = %{public}s", (uint8_t *)v42, 0x16u);
    v49 = v120;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v49, -1, -1);
    v50 = v42;
    v51 = v136;
    MEMORY[0x23B83BC04](v50, -1, -1);

    v52 = (void (*)(char *, uint64_t))*((_QWORD *)v140 + 1);
    v52(v33, v144);
  }
  else
  {
    v142 = *(void (**)(char *, uint64_t))(v19 + 8);
    v142(v25, v18);
    sub_2392688AC((uint64_t)v139, type metadata accessor for PhotogrammetrySession.Configuration);

    v52 = (void (*)(char *, uint64_t))*((_QWORD *)v140 + 1);
    v52(v33, v144);
    v51 = v36;
  }
  v53 = sub_239351E64();
  v54 = v145;
  v55 = (uint64_t)v141;
  if ((v53 & 1) == 0)
  {
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v68 = 1;
    *(_BYTE *)(v68 + 8) = 1;
    swift_willThrow();
    LODWORD(v63) = 0;
    v60 = v143;
    goto LABEL_23;
  }
  v140 = v52;
  v56 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_239351F30();
  v57 = (void *)sub_2393522CC();
  swift_bridgeObjectRelease();
  v148[0] = 0;
  v58 = objc_msgSend(v56, sel_contentsOfDirectoryAtPath_error_, v57, v148);

  v59 = v148[0];
  v60 = v143;
  if (!v58)
  {
    v69 = v148[0];
    sub_239351E58();

    goto LABEL_20;
  }
  v61 = sub_23935244C();
  v62 = v59;

  v63 = *(_QWORD *)(v61 + 16);
  swift_bridgeObjectRelease();
  if (!v63)
  {
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v70 = 1;
    *(_BYTE *)(v70 + 8) = 1;
    swift_willThrow();
    goto LABEL_23;
  }
  v64 = v138;
  v65 = v135;
  sub_2392EBA18(v54 + *(int *)(v138 + 32), v135);
  v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
  v67 = v66(v65, 1, v60);
  sub_23925FE28(v65, &qword_256927AD0);
  sub_239268820(v54, v55, type metadata accessor for PhotogrammetrySession.Configuration);
  if (v67 == 1)
  {
    sub_2392688AC(v55, type metadata accessor for PhotogrammetrySession.Configuration);
LABEL_14:
    v75 = v3;
    v76 = v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
    sub_239268820(v54, v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    type metadata accessor for PGManager();
    v77 = (uint64_t)v130;
    v78 = v127;
    v127(v130, (uint64_t)v51, v60);
    swift_beginAccess();
    v79 = v76;
    v80 = v131;
    sub_239268820(v79, (uint64_t)v131, type metadata accessor for PhotogrammetrySession.Configuration);
    v81 = v132;
    v82 = sub_2392A6F80(v77, v80);
    v136 = v51;
    if (!v81)
    {
      *(_QWORD *)(v75 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) = v82;
      v96 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v82 + 448);
      swift_retain();
      v97 = swift_retain();
      v96(v97, &off_250AC61D0);
      swift_release();
      v98 = v124;
      v99 = v144;
      v129(v124, v128, v144);
      v100 = v123;
      v78(v123, (uint64_t)v51, v60);
      swift_retain_n();
      v101 = sub_239352098();
      v102 = sub_239352560();
      if (os_log_type_enabled(v101, v102))
      {
        v103 = swift_slowAlloc();
        v104 = swift_slowAlloc();
        v141 = (char *)v104;
        *(_DWORD *)v103 = 141558787;
        v146 = 1752392040;
        v147 = v104;
        v3 = v75;
        sub_2393526B0();
        *(_WORD *)(v103 + 12) = 2081;
        sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v105 = sub_2393528C0();
        v146 = sub_23925F3EC(v105, v106, &v147);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        v107 = v100;
        v108 = v102;
        v109 = (void (*)(uint64_t, uint64_t))v142;
        v142(v107, v143);
        *(_WORD *)(v103 + 22) = 2160;
        v146 = 1752392040;
        sub_2393526B0();
        *(_WORD *)(v103 + 32) = 2081;
        sub_2392EBA18(v75 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration + *(int *)(v138 + 32), v121);
        v110 = sub_23935232C();
        v146 = sub_23925F3EC(v110, v111, &v147);
        sub_2393526B0();
        swift_release_n();
        v54 = v145;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v101, v108, "Backend Session: initialized with images URL = %{private,mask.hash}s, snapshot URL = %{private,mask.hash}s", (uint8_t *)v103, 0x2Au);
        v112 = v141;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v112, -1, -1);
        v113 = v103;
        v60 = v143;
        MEMORY[0x23B83BC04](v113, -1, -1);

        v140(v124, v144);
      }
      else
      {
        v109 = (void (*)(uint64_t, uint64_t))v142;
        v142(v100, v60);

        swift_release_n();
        v140(v98, v99);
        v3 = v75;
      }
      v116 = type metadata accessor for MemoryLogger();
      (*(void (**)(unint64_t, unint64_t))(v116 + 88))(0xD000000000000041, 0x800000023935DE10);
      sub_2392688AC(v54, type metadata accessor for PhotogrammetrySession.Configuration);
      v109((uint64_t)v136, v60);
      return v3;
    }
    v133 = v75;
    v83 = v126;
    v84 = v144;
    v129(v126, v128, v144);
    v85 = v81;
    v86 = v81;
    v87 = sub_239352098();
    v88 = sub_23935256C();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = (uint8_t *)swift_slowAlloc();
      v90 = swift_slowAlloc();
      v146 = (uint64_t)v81;
      v147 = v90;
      *(_DWORD *)v89 = 136446210;
      v91 = v81;
      sub_23925FB08(&qword_2569273F8);
      v92 = sub_23935232C();
      v146 = sub_23925F3EC(v92, v93, &v147);
      v60 = v143;
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v87, v88, "Backend Session: initialization error = %{public}s", v89, 0xCu);
      swift_arrayDestroy();
      v94 = v90;
      v54 = v145;
      MEMORY[0x23B83BC04](v94, -1, -1);
      MEMORY[0x23B83BC04](v89, -1, -1);

      v95 = v126;
    }
    else
    {

      v95 = v83;
    }
    v140(v95, v84);
    v3 = v133;
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v115 = 2;
    LODWORD(v63) = 1;
    *(_BYTE *)(v115 + 8) = 1;
    swift_willThrow();

    v51 = v136;
LABEL_23:
    sub_2392688AC(v54, type metadata accessor for PhotogrammetrySession.Configuration);
    v142(v51, v60);
    swift_bridgeObjectRelease();
    swift_release();
    if ((_DWORD)v63)
      sub_2392688AC(v3 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    swift_release();
    type metadata accessor for PhotogrammetrySession(0);
    swift_deallocPartialClassInstance();
    return v3;
  }
  v71 = v55 + *(int *)(v64 + 32);
  v72 = v125;
  sub_2392EBA18(v71, v125);
  result = v66(v72, 1, v60);
  if ((_DWORD)result != 1)
  {
    v74 = sub_239351E64();
    sub_2392688AC(v55, type metadata accessor for PhotogrammetrySession.Configuration);
    v142((char *)v72, v60);
    if ((v74 & 1) != 0)
      goto LABEL_14;
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v114 = 0;
    *(_BYTE *)(v114 + 8) = 1;
LABEL_20:
    swift_willThrow();
    LODWORD(v63) = 0;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t PhotogrammetrySession.__allocating_init(photogrammetrySamples:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PhotogrammetrySession.init(photogrammetrySamples:configuration:)(a1, a2);
  return v4;
}

uint64_t PhotogrammetrySession.init(photogrammetrySamples:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  void (*v63)(uint64_t, _UNKNOWN **);
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  _QWORD v68[2];
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unsigned __int8 *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[3];
  uint64_t v85;

  v81 = a1;
  v4 = sub_23925FB08(&qword_256927AD0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v73 = (uint64_t)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v77 = (uint64_t)v68 - v7;
  v82 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  v8 = MEMORY[0x24BDAC7A8](v82);
  v75 = (unsigned __int8 *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v78 = (uint64_t)v68 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v68 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v68 - v15;
  v17 = sub_2393520B0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v74 = (char *)v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v68 - v21;
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
  v79 = v2;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 0;
  v23 = sub_239275AB0();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v70 = v23;
  v71 = v24;
  ((void (*)(char *))v24)(v22);
  v80 = a2;
  sub_239268820(a2, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);
  v25 = sub_239352098();
  v26 = sub_239352578();
  v27 = os_log_type_enabled(v25, v26);
  v72 = v17;
  if (v27)
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = v17;
    v30 = swift_slowAlloc();
    v84[0] = v30;
    v69 = v18;
    *(_DWORD *)v28 = 136446210;
    v68[1] = v28 + 4;
    sub_239268820((uint64_t)v16, (uint64_t)v14, type metadata accessor for PhotogrammetrySession.Configuration);
    v31 = sub_23935232C();
    v85 = sub_23925F3EC(v31, v32, v84);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);
    _os_log_impl(&dword_23925B000, v25, v26, "Backend Session: Initializing with photogrammetry samples and configuration = %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v30, -1, -1);
    MEMORY[0x23B83BC04](v28, -1, -1);

    v33 = *(void (**)(char *, uint64_t))(v69 + 8);
    v33(v22, v29);
  }
  else
  {
    sub_2392688AC((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Configuration);

    v33 = *(void (**)(char *, uint64_t))(v18 + 8);
    v33(v22, v17);
  }
  v69 = *(_QWORD *)(type metadata accessor for MemoryLogger() + 88);
  ((void (*)(unint64_t, unint64_t))v69)(0xD00000000000004ALL, 0x800000023935DE60);
  v34 = v80;
  v35 = v77;
  sub_2392EBA18(v80 + *(int *)(v82 + 32), v77);
  v36 = sub_239351F3C();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v35, 1, v36);
  sub_23925FE28(v35, &qword_256927AD0);
  v40 = v78;
  sub_239268820(v34, v78, type metadata accessor for PhotogrammetrySession.Configuration);
  if (v39 == 1)
  {
    sub_2392688AC(v40, type metadata accessor for PhotogrammetrySession.Configuration);
    goto LABEL_8;
  }
  v41 = v73;
  sub_2392EBA18(v40 + *(int *)(v82 + 32), v73);
  result = v38(v41, 1, v36);
  if ((_DWORD)result != 1)
  {
    v43 = v41;
    v44 = sub_239351E64();
    sub_2392688AC(v40, type metadata accessor for PhotogrammetrySession.Configuration);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v43, v36);
    if ((v44 & 1) == 0)
    {
      sub_2392EBE88();
      swift_allocError();
      *(_QWORD *)v65 = 0;
      *(_BYTE *)(v65 + 8) = 1;
      swift_willThrow();
      swift_release();
      v66 = 0;
      v45 = v79;
      goto LABEL_15;
    }
LABEL_8:
    v82 = (uint64_t)v33;
    v45 = v79;
    v46 = v79 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration;
    sub_239268820(v34, v79 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    type metadata accessor for PGManager();
    v85 = v81;
    swift_beginAccess();
    v47 = v75;
    sub_239268820(v46, (uint64_t)v75, type metadata accessor for PhotogrammetrySession.Configuration);
    swift_retain();
    v48 = sub_23925FB08(&qword_256928DE0);
    sub_239263A08(&qword_25692A230, &qword_256928DE0, MEMORY[0x24BEE2440]);
    v49 = v76;
    v50 = sub_2392A81E0((uint64_t)&v85, v47, v48);
    if (!v49)
    {
      *(_QWORD *)(v45 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) = v50;
      v63 = *(void (**)(uint64_t, _UNKNOWN **))(*(_QWORD *)v50 + 448);
      swift_retain();
      v64 = swift_retain();
      v63(v64, &off_250AC61D0);
      swift_release();
      ((void (*)(unint64_t, unint64_t))v69)(0xD000000000000054, 0x800000023935DEB0);
      swift_release();
      sub_2392688AC(v34, type metadata accessor for PhotogrammetrySession.Configuration);
      return v45;
    }
    v51 = v74;
    v52 = v72;
    v71(v74, v70, v72);
    v53 = v49;
    v54 = v49;
    v55 = sub_239352098();
    v56 = sub_23935256C();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v85 = v58;
      *(_DWORD *)v57 = 136446210;
      v83 = (uint64_t)v49;
      v59 = v49;
      sub_23925FB08(&qword_2569273F8);
      v60 = sub_23935232C();
      v83 = sub_23925F3EC(v60, v61, &v85);
      v45 = v79;
      sub_2393526B0();
      v34 = v80;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v55, v56, "Backend Session: initialization error = %{public}s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v58, -1, -1);
      MEMORY[0x23B83BC04](v57, -1, -1);

      v62 = v74;
    }
    else
    {

      v62 = v51;
    }
    ((void (*)(char *, uint64_t))v82)(v62, v52);
    sub_2392EBE88();
    swift_allocError();
    *(_QWORD *)v67 = 2;
    v66 = 1;
    *(_BYTE *)(v67 + 8) = 1;
    swift_willThrow();
    swift_release();

LABEL_15:
    sub_2392688AC(v34, type metadata accessor for PhotogrammetrySession.Configuration);
    swift_bridgeObjectRelease();
    swift_release();
    if (v66)
      sub_2392688AC(v45 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
    swift_release();
    type metadata accessor for PhotogrammetrySession(0);
    swift_deallocPartialClassInstance();
    return v45;
  }
  __break(1u);
  return result;
}

uint64_t PhotogrammetrySession.deinit()
{
  uint64_t v0;
  void (*v1)(unint64_t, unint64_t);

  v1 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v1(0xD00000000000001ELL, 0x800000023935DF10);
  v1(0xD000000000000021, 0x800000023935DF30);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2392688AC(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_configuration, type metadata accessor for PhotogrammetrySession.Configuration);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PhotogrammetrySession.__deallocating_deinit()
{
  PhotogrammetrySession.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2392EA3BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;

  v61 = sub_239351F3C();
  v56 = *(_QWORD *)(v61 - 8);
  v2 = MEMORY[0x24BDAC7A8](v61);
  v53 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v51 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v51 - v6;
  v7 = type metadata accessor for PhotogrammetrySession.Request(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v62 = (char *)&v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v63 = (char *)&v51 - v14;
  v15 = sub_2393520B0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  v20 = sub_239352098();
  v21 = sub_239352578();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_23925B000, v20, v21, "Backend Session: process request(s).", v22, 2u);
    MEMORY[0x23B83BC04](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v23 = *(_QWORD *)(a1 + 16);
  if (!v23
    || (*(_BYTE *)(v55 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) & 1) != 0
    || (*(_BYTE *)(v55 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) & 1) != 0)
  {
    goto LABEL_27;
  }
  v59 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v24 = a1 + v59;
  v25 = *(_QWORD *)(v8 + 72);
  v51 = a1;
  swift_bridgeObjectRetain();
  v26 = MEMORY[0x24BEE4AF8];
  v28 = v61;
  v27 = (uint64_t)v62;
  v29 = (uint64_t)v63;
  v54 = v11;
  v60 = v25;
  do
  {
    sub_239268820(v24, v29, type metadata accessor for PhotogrammetrySession.Request);
    sub_239268820(v29, v27, type metadata accessor for PhotogrammetrySession.Request);
    v32 = sub_23925FB08(&qword_256928730);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v27, 3, v32))
    {
      sub_2392688AC(v27, type metadata accessor for PhotogrammetrySession.Request);
      v29 = (uint64_t)v63;
    }
    else
    {
      v35 = v56;
      v36 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v58, v27, v28);
      v37 = sub_239351E64();
      v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      v39 = v57;
      v38(v57, v36, v28);
      if ((v37 & 1) == 0)
      {
        v30 = *(void (**)(char *, uint64_t))(v35 + 8);
        v30(v39, v28);
        v30(v36, v28);
        v11 = v54;
        v27 = (uint64_t)v62;
        v29 = (uint64_t)v63;
        v31 = v60;
        goto LABEL_8;
      }
      v40 = sub_239351EB8();
      v41 = v53;
      v38(v53, v39, v28);
      if ((v40 & 1) != 0)
        goto LABEL_21;
      v43 = v41;
      if (sub_239351E70() == 2053403509 && v42 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        v28 = v61;
        v39 = v57;
LABEL_21:
        v44 = *(void (**)(char *, uint64_t))(v35 + 8);
        v44(v41, v28);
        v44(v39, v28);
        v44(v58, v28);
        v11 = v54;
        v29 = (uint64_t)v63;
        goto LABEL_11;
      }
      v52 = sub_2393528CC();
      swift_bridgeObjectRelease();
      v45 = *(void (**)(char *, uint64_t))(v35 + 8);
      v28 = v61;
      v45(v43, v61);
      v45(v57, v28);
      v45(v58, v28);
      v11 = v54;
      v27 = (uint64_t)v62;
      v29 = (uint64_t)v63;
      if ((v52 & 1) == 0)
      {
        v31 = v60;
        goto LABEL_8;
      }
    }
LABEL_11:
    sub_239268820(v29, (uint64_t)v11, type metadata accessor for PhotogrammetrySession.Request);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v26 = sub_2392BFAA4(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
    v34 = *(_QWORD *)(v26 + 16);
    v33 = *(_QWORD *)(v26 + 24);
    v31 = v60;
    if (v34 >= v33 >> 1)
    {
      v46 = sub_2392BFAA4(v33 > 1, v34 + 1, 1, v26);
      v31 = v60;
      v26 = v46;
    }
    *(_QWORD *)(v26 + 16) = v34 + 1;
    sub_2392C4FE0((uint64_t)v11, v26 + v59 + v34 * v31, type metadata accessor for PhotogrammetrySession.Request);
    v28 = v61;
    v27 = (uint64_t)v62;
    v29 = (uint64_t)v63;
LABEL_8:
    sub_2392688AC(v29, type metadata accessor for PhotogrammetrySession.Request);
    v24 += v31;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v26 + 16))
  {
    v47 = v55;
    swift_beginAccess();
    v48 = swift_bridgeObjectRetain();
    sub_2392EB320(v48);
    swift_endAccess();
    (*(void (**)(unint64_t))(**(_QWORD **)(v47
                                                           + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                             + 616))(v26);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_27:
  sub_2392EBE88();
  swift_allocError();
  *(_QWORD *)v50 = 3;
  *(_BYTE *)(v50 + 8) = 1;
  return swift_willThrow();
}

uint64_t sub_2392EA98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23925B000, v7, v8, "Backend Session: cancel all requests.", v9, 2u);
    MEMORY[0x23B83BC04](v9, -1, -1);
  }

  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 1;
  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                            + 624))(v10);
}

uint64_t sub_2392EAAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(char *, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = sub_239275AB0();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, v9, v2);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_23925B000, v11, v12, "Backend Session: close session.", v13, 2u);
    MEMORY[0x23B83BC04](v13, -1, -1);
  }

  v14 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v15 = v14(v8, v2);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) & 1) != 0)
  {
    v10(v6, v9, v2);
    v16 = sub_239352098();
    v17 = sub_23935256C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23925B000, v16, v17, "Backend Session: session has closed.", v18, 2u);
      MEMORY[0x23B83BC04](v18, -1, -1);
    }

    return v14(v6, v2);
  }
  else
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_hasClosed) = 1;
    return (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1
                                                            + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                              + 632))(v15);
  }
}

uint64_t sub_2392EACA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239275AB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23925B000, v7, v8, "Backend Session: resume request.", v9, 2u);
    MEMORY[0x23B83BC04](v9, -1, -1);
  }

  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager)
                                            + 648))(v10);
}

uint64_t sub_2392EADC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) + 1336))();
}

uint64_t sub_2392EADF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_pgManager) + 1312))();
}

uint64_t sub_2392EAE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession____lazy_storage___outputSubject);
  }
  else
  {
    v3 = v0;
    sub_23925FB08(&qword_25692A218);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_2392EAEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 136);
  v9 = *(_QWORD *)(v8(v5) + 16);
  result = swift_bridgeObjectRelease();
  if (v9)
  {
    v11 = 0;
    while (1)
    {
      result = v8(result);
      if (v11 >= *(_QWORD *)(result + 16))
        break;
      sub_239268820(result+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v11, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      swift_bridgeObjectRelease();
      _s6CoreOC21PhotogrammetrySessionC7RequestO2eeoiySbAE_AEtFZ_0(a1, (uint64_t)v7);
      v13 = v12;
      result = sub_2392688AC((uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      if ((v13 & 1) != 0)
      {
        swift_beginAccess();
        sub_2392EAFF4(v11, (uint64_t)v7);
        sub_2392688AC((uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
        return swift_endAccess();
      }
      if (v9 == ++v11)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2392EAFF4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_2392EB494(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_2392C4FE0(v10, a2, type metadata accessor for PhotogrammetrySession.Request);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = sub_239352884();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront();
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

uint64_t sub_2392EB130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v3 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2392EAE28();
  sub_2393520D4();
  swift_release();
  sub_239268820(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_2392C4FE0((uint64_t)v5, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_4;
    case 1u:
      v9 = (uint64_t)&v5[*(int *)(sub_23925FB08(&qword_256929558) + 48)];
      sub_2392C4FE0((uint64_t)v5, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      sub_2392688AC(v9, type metadata accessor for PhotogrammetrySession.Result);
LABEL_4:
      sub_2392EAEA8((uint64_t)v8);
      v10 = type metadata accessor for PhotogrammetrySession.Request;
      v11 = (uint64_t)v8;
      return sub_2392688AC(v11, v10);
    case 9u:
      swift_beginAccess();
      *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
      return swift_bridgeObjectRelease();
    case 0xAu:
      swift_beginAccess();
      *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
      result = swift_bridgeObjectRelease();
      *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC21PhotogrammetrySession_isCancelling) = 0;
      return result;
    default:
      v10 = type metadata accessor for PhotogrammetrySession.Output;
      v11 = (uint64_t)v5;
      return sub_2392688AC(v11, v10);
  }
}

uint64_t sub_2392EB320(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_2392BFAA4(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for PhotogrammetrySession.Request(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2392EB494(unint64_t a1)
{
  return sub_2392BFAA4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_2392EB4A8()
{
  sub_2393529A4();
  sub_2393529A4();
  sub_2393529A4();
  return sub_2393529A4();
}

uint64_t sub_2392EB51C(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  return vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1, a5), (int8x16_t)vceqq_f32(a2, a6)), vandq_s8((int8x16_t)vceqq_f32(a3, a7), (int8x16_t)vceqq_f32(a4, a8)))) >> 31;
}

uint64_t sub_2392EB548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256928738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _s6CoreOC21PhotogrammetrySessionC7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = sub_239351F3C();
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23925FB08(&qword_25692A668);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_239268820(a1, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Request);
  sub_239268820(a2, v10, type metadata accessor for PhotogrammetrySession.Request);
  v11 = sub_23925FB08(&qword_256928730);
  v12 = (char *)sub_2392EB6D4
      + 4
      * byte_239355CF3[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 3, v11)];
  __asm { BR              X10 }
}

uint64_t sub_2392EB6D4()
{
  float32x4_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v12;
  char v13;
  void (*v14)(uint64_t, uint64_t);
  unsigned int v15;

  sub_239268820(v1, v4, type metadata accessor for PhotogrammetrySession.Request);
  v10 = *(unsigned __int8 *)(v4 + *(int *)(v6 + 48));
  sub_2392EB548(v4 + *(int *)(v6 + 64), v9 - 224);
  if (!v7(v5, 3, v6))
  {
    v12 = *(unsigned __int8 *)(v5 + *(int *)(v6 + 48));
    sub_2392EB548(v5 + *(int *)(v6 + 64), (uint64_t)&v0[45]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v3, v5, v2);
    v13 = MEMORY[0x23B839DB0](v4, v3);
    v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v14(v4, v2);
    if ((v13 & 1) == 0 || v10 != v12)
      goto LABEL_12;
    sub_2392EB548(v9 - 224, (uint64_t)&v0[18]);
    sub_2392EB548((uint64_t)&v0[45], (uint64_t)&v0[27]);
    sub_2392EB548(v9 - 224, (uint64_t)&v0[36]);
    if (sub_239269494((uint64_t)&v0[36]) == 1)
    {
      v14(v3, v2);
      sub_2392EB548((uint64_t)&v0[27], (uint64_t)v0);
      sub_2392EB548((uint64_t)v0, (uint64_t)&v0[9]);
      if (sub_239269494((uint64_t)&v0[9]) != 1)
        goto LABEL_13;
LABEL_3:
      sub_2392688AC(v1, type metadata accessor for PhotogrammetrySession.Request);
      return 1;
    }
    sub_2392EB548(v9 - 224, (uint64_t)v0);
    sub_2392EB548((uint64_t)&v0[45], (uint64_t)&v0[9]);
    if (sub_239269494((uint64_t)&v0[9]) != 1
      && (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v0[1], v0[28]), (int8x16_t)vceqq_f32(*v0, v0[27])), vandq_s8((int8x16_t)vceqq_f32(v0[2], v0[29]), (int8x16_t)vceqq_f32(v0[3], v0[30])))) & 0x80000000) != 0)
    {
      v15 = vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v0[6], v0[33]), (int8x16_t)vceqq_f32(v0[7], v0[34])), vandq_s8((int8x16_t)vceqq_f32(v0[5], v0[32]), (int8x16_t)vceqq_f32(v0[4], v0[31]))));
      v14(v3, v2);
      if ((v15 & 0x80000000) != 0)
        goto LABEL_3;
    }
    else
    {
LABEL_12:
      v14(v3, v2);
    }
LABEL_13:
    sub_2392688AC(v1, type metadata accessor for PhotogrammetrySession.Request);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v2);
  sub_23925FE28(v1, &qword_25692A668);
  return 0;
}

uint64_t type metadata accessor for PhotogrammetrySession.Request(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692E800);
}

uint64_t type metadata accessor for PhotogrammetrySession.Result(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692E810);
}

uint64_t type metadata accessor for PhotogrammetrySession.Output(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692E820);
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV25CustomDetailSpecificationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  if (qword_239356658[*(char *)(a1 + 8)] != qword_239356658[*(char *)(a2 + 8)]
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    return 0;
  }
  v3 = *(_BYTE *)(a2 + 28);
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 28) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(float *)(a1 + 24) != *(float *)(a2 + 24))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t type metadata accessor for PhotogrammetrySession.Configuration(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692E830);
}

uint64_t sub_2392EBA18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256927AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2392EBA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256927AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unsigned __int8 v20;
  uint64_t v21;
  int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  int v26;
  unsigned __int8 v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  int v39;
  unsigned __int8 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  int v44;
  unsigned __int8 v45;

  v4 = sub_239351F3C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23925FB08(&qword_25692A660);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23925FB08(&qword_256927AD0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v34 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  if (*a1 != *a2)
    goto LABEL_11;
  if (a1[1] != a2[1])
    goto LABEL_11;
  if (a1[2] != a2[2])
    goto LABEL_11;
  v20 = a1[16];
  v21 = *((_QWORD *)a1 + 3);
  v22 = *((_DWORD *)a1 + 8);
  v23 = a1[36];
  v41 = *((_QWORD *)a1 + 1);
  v42 = v20;
  v43 = v21;
  v44 = v22;
  v45 = v23;
  v24 = a2[16];
  v25 = *((_QWORD *)a2 + 3);
  v26 = *((_DWORD *)a2 + 8);
  v27 = a2[36];
  v36 = *((_QWORD *)a2 + 1);
  v37 = v24;
  v38 = v25;
  v39 = v26;
  v40 = v27;
  if ((_s6CoreOC21PhotogrammetrySessionC13ConfigurationV25CustomDetailSpecificationV2eeoiySbAG_AGtFZ_0((uint64_t)&v41, (uint64_t)&v36) & 1) == 0)goto LABEL_11;
  v35 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_2392EBA18((uint64_t)&a1[*(int *)(v35 + 32)], (uint64_t)v19);
  sub_2392EBA18((uint64_t)&a2[*(int *)(v35 + 32)], (uint64_t)v17);
  v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2392EBA18((uint64_t)v19, (uint64_t)v10);
  v34 = v28;
  sub_2392EBA18((uint64_t)v17, v28);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v10, 1, v4) == 1)
  {
    sub_23925FE28((uint64_t)v17, &qword_256927AD0);
    sub_23925FE28((uint64_t)v19, &qword_256927AD0);
    if (v29(v34, 1, v4) == 1)
    {
      sub_23925FE28((uint64_t)v10, &qword_256927AD0);
LABEL_14:
      v30 = a1[*(int *)(v35 + 36)] ^ a2[*(int *)(v35 + 36)] ^ 1;
      return v30 & 1;
    }
    goto LABEL_10;
  }
  sub_2392EBA18((uint64_t)v10, (uint64_t)v14);
  if (v29(v34, 1, v4) == 1)
  {
    sub_23925FE28((uint64_t)v17, &qword_256927AD0);
    sub_23925FE28((uint64_t)v19, &qword_256927AD0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_10:
    sub_23925FE28((uint64_t)v10, &qword_25692A660);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v34, v4);
  sub_239262570(&qword_2569295D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v32 = sub_2393522B4();
  v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v7, v4);
  sub_23925FE28((uint64_t)v17, &qword_256927AD0);
  sub_23925FE28((uint64_t)v19, &qword_256927AD0);
  v33(v14, v4);
  sub_23925FE28((uint64_t)v10, &qword_256927AD0);
  if ((v32 & 1) != 0)
    goto LABEL_14;
LABEL_11:
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_2392EBE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2392EBE88()
{
  unint64_t result;

  result = qword_25692A228;
  if (!qword_25692A228)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Error, &type metadata for PhotogrammetrySession.Error);
    atomic_store(result, (unint64_t *)&qword_25692A228);
  }
  return result;
}

uint64_t type metadata accessor for PhotogrammetrySession(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692E7F0);
}

uint64_t sub_2392EBEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256927AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_2392EBF30()
{
  unint64_t result;

  result = qword_25692A238;
  if (!qword_25692A238)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Request.Geometry, &type metadata for PhotogrammetrySession.Request.Geometry);
    atomic_store(result, (unint64_t *)&qword_25692A238);
  }
  return result;
}

uint64_t sub_2392EBF74()
{
  return sub_239262570(&qword_25692A240, type metadata accessor for PhotogrammetrySession.Request, (uint64_t)&protocol conformance descriptor for PhotogrammetrySession.Request);
}

unint64_t sub_2392EBFA4()
{
  unint64_t result;

  result = qword_25692A248;
  if (!qword_25692A248)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.ProcessStage, &type metadata for PhotogrammetrySession.ProcessStage);
    atomic_store(result, (unint64_t *)&qword_25692A248);
  }
  return result;
}

unint64_t sub_2392EBFEC()
{
  unint64_t result;

  result = qword_25692A250;
  if (!qword_25692A250)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.SampleOrdering, &type metadata for PhotogrammetrySession.Configuration.SampleOrdering);
    atomic_store(result, (unint64_t *)&qword_25692A250);
  }
  return result;
}

unint64_t sub_2392EC034()
{
  unint64_t result;

  result = qword_25692A258;
  if (!qword_25692A258)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.FeatureSensitivity, &type metadata for PhotogrammetrySession.Configuration.FeatureSensitivity);
    atomic_store(result, (unint64_t *)&qword_25692A258);
  }
  return result;
}

unint64_t sub_2392EC07C()
{
  unint64_t result;

  result = qword_25692A260;
  if (!qword_25692A260)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension, &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension);
    atomic_store(result, (unint64_t *)&qword_25692A260);
  }
  return result;
}

unint64_t sub_2392EC0C4()
{
  unint64_t result;

  result = qword_25692A268;
  if (!qword_25692A268)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs, &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs);
    atomic_store(result, (unint64_t *)&qword_25692A268);
  }
  return result;
}

unint64_t sub_2392EC110()
{
  unint64_t result;

  result = qword_25692A270;
  if (!qword_25692A270)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs, &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs);
    atomic_store(result, (unint64_t *)&qword_25692A270);
  }
  return result;
}

unint64_t sub_2392EC158()
{
  unint64_t result;

  result = qword_25692A278;
  if (!qword_25692A278)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs, &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs);
    atomic_store(result, (unint64_t *)&qword_25692A278);
  }
  return result;
}

uint64_t sub_2392EC19C()
{
  return type metadata accessor for PhotogrammetrySession(0);
}

uint64_t sub_2392EC1A4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PhotogrammetrySession.Configuration(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PhotogrammetrySession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhotogrammetrySession.activeRequests.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PhotogrammetrySession.outputPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PhotogrammetrySession.configuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PhotogrammetrySession.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of PhotogrammetrySession.__allocating_init(imagesURL:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of PhotogrammetrySession.__allocating_init(photogrammetrySamples:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of PhotogrammetrySession.process(requests:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of PhotogrammetrySession.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of PhotogrammetrySession.close()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of PhotogrammetrySession.totalNumberOfImages()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of PhotogrammetrySession.totalNumberOfPixels()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Error(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Error(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Error(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_2392EC36C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2392EC388(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Error()
{
  return &type metadata for PhotogrammetrySession.Error;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23925FB08(&qword_256928730);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_239351F3C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
      v11 = *(int *)(v7 + 64);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
      *((_OWORD *)v12 + 3) = v14;
      v15 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v15;
      v12[128] = v13[128];
      v16 = *((_OWORD *)v13 + 7);
      *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
      *((_OWORD *)v12 + 7) = v16;
      v17 = *((_OWORD *)v13 + 5);
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      *((_OWORD *)v12 + 5) = v17;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for PhotogrammetrySession.Request(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_23925FB08(&qword_256928730);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_239351F3C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

char *initializeWithCopy for PhotogrammetrySession.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_23925FB08(&qword_256928730);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_239351F3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    v9 = *(int *)(v6 + 64);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 3);
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v12;
    v13 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v13;
    v10[128] = v11[128];
    v14 = *((_OWORD *)v11 + 7);
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_OWORD *)v10 + 7) = v14;
    v15 = *((_OWORD *)v11 + 5);
    *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 5) = v15;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

_BYTE *assignWithCopy for PhotogrammetrySession.Request(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v6 = sub_23925FB08(&qword_256928730);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v22 = sub_239351F3C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(a1, a2, v22);
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      v23 = *(int *)(v6 + 64);
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = v25[128];
      v28 = *((_OWORD *)v25 + 6);
      v27 = *((_OWORD *)v25 + 7);
      *((_OWORD *)v24 + 5) = *((_OWORD *)v25 + 5);
      *((_OWORD *)v24 + 6) = v28;
      *((_OWORD *)v24 + 7) = v27;
      v24[128] = v26;
      v30 = *((_OWORD *)v25 + 3);
      v29 = *((_OWORD *)v25 + 4);
      v31 = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
      *((_OWORD *)v24 + 2) = v31;
      *((_OWORD *)v24 + 3) = v30;
      *((_OWORD *)v24 + 4) = v29;
      *(_OWORD *)v24 = *(_OWORD *)v25;
      return a1;
    }
    sub_23925FE28((uint64_t)a1, &qword_256928730);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_239351F3C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  v12 = *(int *)(v6 + 64);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v14[128];
  v17 = *((_OWORD *)v14 + 6);
  v16 = *((_OWORD *)v14 + 7);
  *((_OWORD *)v13 + 5) = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 6) = v17;
  *((_OWORD *)v13 + 7) = v16;
  v13[128] = v15;
  v19 = *((_OWORD *)v14 + 3);
  v18 = *((_OWORD *)v14 + 4);
  v20 = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  *((_OWORD *)v13 + 2) = v20;
  *((_OWORD *)v13 + 3) = v19;
  *((_OWORD *)v13 + 4) = v18;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

char *initializeWithTake for PhotogrammetrySession.Request(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_23925FB08(&qword_256928730);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_239351F3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    v9 = *(int *)(v6 + 64);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 3);
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 3) = v12;
    v13 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v13;
    v10[128] = v11[128];
    v14 = *((_OWORD *)v11 + 7);
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_OWORD *)v10 + 7) = v14;
    v15 = *((_OWORD *)v11 + 5);
    *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
    *((_OWORD *)v10 + 5) = v15;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

_BYTE *assignWithTake for PhotogrammetrySession.Request(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v6 = sub_23925FB08(&qword_256928730);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v20 = sub_239351F3C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(a1, a2, v20);
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      v21 = *(int *)(v6 + 64);
      v22 = &a1[v21];
      v23 = &a2[v21];
      v24 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v24;
      v25 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v25;
      v22[128] = v23[128];
      v26 = *((_OWORD *)v23 + 7);
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *((_OWORD *)v22 + 7) = v26;
      v27 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v27;
      return a1;
    }
    sub_23925FE28((uint64_t)a1, &qword_256928730);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_239351F3C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  v12 = *(int *)(v6 + 64);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  v13[128] = v14[128];
  v17 = *((_OWORD *)v14 + 7);
  *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
  *((_OWORD *)v13 + 7) = v17;
  v18 = *((_OWORD *)v14 + 5);
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((_OWORD *)v13 + 5) = v18;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Request()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2392ECA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_23925FB08(&qword_256928730);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Request()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2392ECAB0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = sub_23925FB08(&qword_256928730);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2392ECB08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23925FB08(&qword_256928730);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_2392ECB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_256928730);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_2392ECB88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351F3C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Request.Detail(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Request.Detail(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2392ECCDC + 4 * byte_239355CFC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2392ECD10 + 4 * byte_239355CF7[v4]))();
}

uint64_t sub_2392ECD10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392ECD18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392ECD20);
  return result;
}

uint64_t sub_2392ECD2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392ECD34);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2392ECD38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392ECD40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Request.Detail()
{
  return &type metadata for PhotogrammetrySession.Request.Detail;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Request.Geometry()
{
  return &type metadata for PhotogrammetrySession.Request.Geometry;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.PointCloud()
{
  return &type metadata for PhotogrammetrySession.PointCloud;
}

__n128 initializeWithCopy for PhotogrammetrySession.PointCloud.Point(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ImageScaler.Config(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 20))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ImageScaler.Config(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 20) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.PointCloud.Point()
{
  return &type metadata for PhotogrammetrySession.PointCloud.Point;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Poses()
{
  return &type metadata for PhotogrammetrySession.Poses;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Result(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_239351F3C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for PhotogrammetrySession.Result(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3 || (_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = sub_239351F3C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for PhotogrammetrySession.Result(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_239351F3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for PhotogrammetrySession.Result(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Result);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_239351F3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for PhotogrammetrySession.Result(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_239351F3C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PhotogrammetrySession.Result(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Result);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_239351F3C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2392ED258()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2392ED268()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351F3C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.ProcessStage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2392ED330 + 4 * byte_239355D06[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2392ED364 + 4 * byte_239355D01[v4]))();
}

uint64_t sub_2392ED364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392ED36C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392ED374);
  return result;
}

uint64_t sub_2392ED380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392ED388);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2392ED38C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392ED394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.ProcessStage()
{
  return &type metadata for PhotogrammetrySession.ProcessStage;
}

uint64_t *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Output(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_23925FB08(&qword_256928730);
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
        {
          v9 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          v21 = sub_239351F3C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
          *((_BYTE *)a1 + *(int *)(v7 + 48)) = *((_BYTE *)a2 + *(int *)(v7 + 48));
          v22 = *(int *)(v7 + 64);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = *((_OWORD *)v24 + 3);
          *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
          *((_OWORD *)v23 + 3) = v25;
          v26 = *((_OWORD *)v24 + 1);
          *(_OWORD *)v23 = *(_OWORD *)v24;
          *((_OWORD *)v23 + 1) = v26;
          v23[128] = v24[128];
          v27 = *((_OWORD *)v24 + 7);
          *((_OWORD *)v23 + 6) = *((_OWORD *)v24 + 6);
          *((_OWORD *)v23 + 7) = v27;
          v28 = *((_OWORD *)v24 + 5);
          *((_OWORD *)v23 + 4) = *((_OWORD *)v24 + 4);
          *((_OWORD *)v23 + 5) = v28;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
        }
        v29 = *(int *)(sub_23925FB08(&qword_256929550) + 48);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        *(_QWORD *)v30 = *(_QWORD *)v31;
        v30[8] = v31[8];
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v12 = sub_23925FB08(&qword_256928730);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
        {
          v14 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v32 = sub_239351F3C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
          *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
          v33 = *(int *)(v12 + 64);
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = *((_OWORD *)v35 + 3);
          *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
          *((_OWORD *)v34 + 3) = v36;
          v37 = *((_OWORD *)v35 + 1);
          *(_OWORD *)v34 = *(_OWORD *)v35;
          *((_OWORD *)v34 + 1) = v37;
          v34[128] = v35[128];
          v38 = *((_OWORD *)v35 + 7);
          *((_OWORD *)v34 + 6) = *((_OWORD *)v35 + 6);
          *((_OWORD *)v34 + 7) = v38;
          v39 = *((_OWORD *)v35 + 5);
          *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
          *((_OWORD *)v34 + 5) = v39;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
        }
        v40 = *(int *)(sub_23925FB08(&qword_256929558) + 48);
        v41 = (uint64_t *)((char *)a1 + v40);
        v42 = (uint64_t *)((char *)a2 + v40);
        v43 = type metadata accessor for PhotogrammetrySession.Result(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
        {
          *v41 = *v42;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v45 = sub_239351F3C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v41, v42, v45);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v15 = sub_23925FB08(&qword_256928730);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
        {
          v17 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v46 = sub_239351F3C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(a1, a2, v46);
          *((_BYTE *)a1 + *(int *)(v15 + 48)) = *((_BYTE *)a2 + *(int *)(v15 + 48));
          v47 = *(int *)(v15 + 64);
          v48 = (char *)a1 + v47;
          v49 = (char *)a2 + v47;
          v50 = *((_OWORD *)v49 + 3);
          *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
          *((_OWORD *)v48 + 3) = v50;
          v51 = *((_OWORD *)v49 + 1);
          *(_OWORD *)v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v51;
          v48[128] = v49[128];
          v52 = *((_OWORD *)v49 + 7);
          *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
          *((_OWORD *)v48 + 7) = v52;
          v53 = *((_OWORD *)v49 + 5);
          *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
          *((_OWORD *)v48 + 5) = v53;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
        }
        v54 = sub_23925FB08(&qword_256929560);
        *(uint64_t *)((char *)a1 + *(int *)(v54 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v54 + 48));
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v18 = sub_23925FB08(&qword_256928730);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(a2, 3, v18))
        {
          v20 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v55 = sub_239351F3C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
          *((_BYTE *)a1 + *(int *)(v18 + 48)) = *((_BYTE *)a2 + *(int *)(v18 + 48));
          v56 = *(int *)(v18 + 64);
          v57 = (char *)a1 + v56;
          v58 = (char *)a2 + v56;
          v59 = *((_OWORD *)v58 + 3);
          *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
          *((_OWORD *)v57 + 3) = v59;
          v60 = *((_OWORD *)v58 + 1);
          *(_OWORD *)v57 = *(_OWORD *)v58;
          *((_OWORD *)v57 + 1) = v60;
          v57[128] = v58[128];
          v61 = *((_OWORD *)v58 + 7);
          *((_OWORD *)v57 + 6) = *((_OWORD *)v58 + 6);
          *((_OWORD *)v57 + 7) = v61;
          v62 = *((_OWORD *)v58 + 5);
          *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
          *((_OWORD *)v57 + 5) = v62;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 3, v18);
        }
        v63 = *(int *)(sub_23925FB08(&qword_256929568) + 48);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        *(_QWORD *)v64 = *(_QWORD *)v65;
        *((_WORD *)v64 + 4) = *((_WORD *)v65 + 4);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PhotogrammetrySession.Output(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
      v3 = sub_23925FB08(&qword_256928730);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a1, 3, v3);
      if (!(_DWORD)result)
        goto LABEL_9;
      break;
    case 1:
      v4 = sub_23925FB08(&qword_256928730);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 3, v4))
      {
        v5 = sub_239351F3C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      }
      a1 += *(int *)(sub_23925FB08(&qword_256929558) + 48);
      type metadata accessor for PhotogrammetrySession.Result(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 3 || (_DWORD)result == 2)
        goto LABEL_10;
      if (!(_DWORD)result)
      {
LABEL_9:
        v6 = sub_239351F3C();
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      }
      break;
    case 4:
LABEL_10:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for PhotogrammetrySession.Output(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23925FB08(&qword_256928730);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
      {
        v8 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v18 = sub_239351F3C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
        v19 = *(int *)(v6 + 64);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = *((_OWORD *)v21 + 3);
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        *((_OWORD *)v20 + 3) = v22;
        v23 = *((_OWORD *)v21 + 1);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v23;
        v20[128] = v21[128];
        v24 = *((_OWORD *)v21 + 7);
        *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
        *((_OWORD *)v20 + 7) = v24;
        v25 = *((_OWORD *)v21 + 5);
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        *((_OWORD *)v20 + 5) = v25;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      }
      v26 = *(int *)(sub_23925FB08(&qword_256929550) + 48);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      goto LABEL_26;
    case 1u:
      v9 = sub_23925FB08(&qword_256928730);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
      {
        v11 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v29 = sub_239351F3C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
        *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
        v30 = *(int *)(v9 + 64);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v33;
        v34 = *((_OWORD *)v32 + 1);
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v34;
        v31[128] = v32[128];
        v35 = *((_OWORD *)v32 + 7);
        *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
        *((_OWORD *)v31 + 7) = v35;
        v36 = *((_OWORD *)v32 + 5);
        *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
        *((_OWORD *)v31 + 5) = v36;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
      }
      v37 = *(int *)(sub_23925FB08(&qword_256929558) + 48);
      v38 = (_QWORD *)((char *)a1 + v37);
      v39 = (_QWORD *)((char *)a2 + v37);
      v40 = type metadata accessor for PhotogrammetrySession.Result(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
      {
        *v38 = *v39;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v42 = sub_239351F3C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v38, v39, v42);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_26;
    case 2u:
      v12 = sub_23925FB08(&qword_256928730);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
      {
        v14 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v43 = sub_239351F3C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(a1, a2, v43);
        *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
        v44 = *(int *)(v12 + 64);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = *((_OWORD *)v46 + 3);
        *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
        *((_OWORD *)v45 + 3) = v47;
        v48 = *((_OWORD *)v46 + 1);
        *(_OWORD *)v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v48;
        v45[128] = v46[128];
        v49 = *((_OWORD *)v46 + 7);
        *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
        *((_OWORD *)v45 + 7) = v49;
        v50 = *((_OWORD *)v46 + 5);
        *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
        *((_OWORD *)v45 + 5) = v50;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
      }
      v51 = sub_23925FB08(&qword_256929560);
      *(_QWORD *)((char *)a1 + *(int *)(v51 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v51 + 48));
      goto LABEL_26;
    case 3u:
      v15 = sub_23925FB08(&qword_256928730);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
      {
        v17 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v52 = sub_239351F3C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
        *((_BYTE *)a1 + *(int *)(v15 + 48)) = *((_BYTE *)a2 + *(int *)(v15 + 48));
        v53 = *(int *)(v15 + 64);
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = *((_OWORD *)v55 + 3);
        *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
        *((_OWORD *)v54 + 3) = v56;
        v57 = *((_OWORD *)v55 + 1);
        *(_OWORD *)v54 = *(_OWORD *)v55;
        *((_OWORD *)v54 + 1) = v57;
        v54[128] = v55[128];
        v58 = *((_OWORD *)v55 + 7);
        *((_OWORD *)v54 + 6) = *((_OWORD *)v55 + 6);
        *((_OWORD *)v54 + 7) = v58;
        v59 = *((_OWORD *)v55 + 5);
        *((_OWORD *)v54 + 4) = *((_OWORD *)v55 + 4);
        *((_OWORD *)v54 + 5) = v59;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
      }
      v60 = *(int *)(sub_23925FB08(&qword_256929568) + 48);
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_WORD *)v61 + 4) = *((_WORD *)v62 + 4);
      goto LABEL_26;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
LABEL_26:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for PhotogrammetrySession.Output(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int16 v72;

  if (a1 != a2)
  {
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Output);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23925FB08(&qword_256928730);
        v7 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
        {
          v8 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          v18 = sub_239351F3C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
          *((_BYTE *)a1 + *(int *)(v6 + 48)) = *((_BYTE *)a2 + *(int *)(v6 + 48));
          v19 = *(int *)(v6 + 64);
          v20 = (char *)a1 + v19;
          v21 = (char *)a2 + v19;
          v22 = v21[128];
          v24 = *((_OWORD *)v21 + 6);
          v23 = *((_OWORD *)v21 + 7);
          *((_OWORD *)v20 + 5) = *((_OWORD *)v21 + 5);
          *((_OWORD *)v20 + 6) = v24;
          *((_OWORD *)v20 + 7) = v23;
          v20[128] = v22;
          v26 = *((_OWORD *)v21 + 3);
          v25 = *((_OWORD *)v21 + 4);
          v27 = *((_OWORD *)v21 + 2);
          *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
          *((_OWORD *)v20 + 2) = v27;
          *((_OWORD *)v20 + 3) = v26;
          *((_OWORD *)v20 + 4) = v25;
          *(_OWORD *)v20 = *(_OWORD *)v21;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
        }
        v28 = *(int *)(sub_23925FB08(&qword_256929550) + 48);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = v30[8];
        *(_QWORD *)v29 = *(_QWORD *)v30;
        v29[8] = v31;
        goto LABEL_27;
      case 1u:
        v9 = sub_23925FB08(&qword_256928730);
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
        {
          v11 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          v32 = sub_239351F3C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
          *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
          v33 = *(int *)(v9 + 64);
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = v35[128];
          v38 = *((_OWORD *)v35 + 6);
          v37 = *((_OWORD *)v35 + 7);
          *((_OWORD *)v34 + 5) = *((_OWORD *)v35 + 5);
          *((_OWORD *)v34 + 6) = v38;
          *((_OWORD *)v34 + 7) = v37;
          v34[128] = v36;
          v40 = *((_OWORD *)v35 + 3);
          v39 = *((_OWORD *)v35 + 4);
          v41 = *((_OWORD *)v35 + 2);
          *((_OWORD *)v34 + 1) = *((_OWORD *)v35 + 1);
          *((_OWORD *)v34 + 2) = v41;
          *((_OWORD *)v34 + 3) = v40;
          *((_OWORD *)v34 + 4) = v39;
          *(_OWORD *)v34 = *(_OWORD *)v35;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
        }
        v42 = *(int *)(sub_23925FB08(&qword_256929558) + 48);
        v43 = (_QWORD *)((char *)a1 + v42);
        v44 = (_QWORD *)((char *)a2 + v42);
        v45 = type metadata accessor for PhotogrammetrySession.Result(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
        {
          *v43 = *v44;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          v47 = sub_239351F3C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v43, v44, v47);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      case 2u:
        v12 = sub_23925FB08(&qword_256928730);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
        {
          v14 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v48 = sub_239351F3C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
          *((_BYTE *)a1 + *(int *)(v12 + 48)) = *((_BYTE *)a2 + *(int *)(v12 + 48));
          v49 = *(int *)(v12 + 64);
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = v51[128];
          v54 = *((_OWORD *)v51 + 6);
          v53 = *((_OWORD *)v51 + 7);
          *((_OWORD *)v50 + 5) = *((_OWORD *)v51 + 5);
          *((_OWORD *)v50 + 6) = v54;
          *((_OWORD *)v50 + 7) = v53;
          v50[128] = v52;
          v56 = *((_OWORD *)v51 + 3);
          v55 = *((_OWORD *)v51 + 4);
          v57 = *((_OWORD *)v51 + 2);
          *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
          *((_OWORD *)v50 + 2) = v57;
          *((_OWORD *)v50 + 3) = v56;
          *((_OWORD *)v50 + 4) = v55;
          *(_OWORD *)v50 = *(_OWORD *)v51;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
        }
        v58 = sub_23925FB08(&qword_256929560);
        *(_QWORD *)((char *)a1 + *(int *)(v58 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v58 + 48));
        goto LABEL_27;
      case 3u:
        v15 = sub_23925FB08(&qword_256928730);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
        {
          v17 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v59 = sub_239351F3C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
          *((_BYTE *)a1 + *(int *)(v15 + 48)) = *((_BYTE *)a2 + *(int *)(v15 + 48));
          v60 = *(int *)(v15 + 64);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = v62[128];
          v65 = *((_OWORD *)v62 + 6);
          v64 = *((_OWORD *)v62 + 7);
          *((_OWORD *)v61 + 5) = *((_OWORD *)v62 + 5);
          *((_OWORD *)v61 + 6) = v65;
          *((_OWORD *)v61 + 7) = v64;
          v61[128] = v63;
          v67 = *((_OWORD *)v62 + 3);
          v66 = *((_OWORD *)v62 + 4);
          v68 = *((_OWORD *)v62 + 2);
          *((_OWORD *)v61 + 1) = *((_OWORD *)v62 + 1);
          *((_OWORD *)v61 + 2) = v68;
          *((_OWORD *)v61 + 3) = v67;
          *((_OWORD *)v61 + 4) = v66;
          *(_OWORD *)v61 = *(_OWORD *)v62;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
        }
        v69 = *(int *)(sub_23925FB08(&qword_256929568) + 48);
        v70 = (char *)a1 + v69;
        v71 = (char *)a2 + v69;
        v72 = *((_WORD *)v71 + 4);
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_WORD *)v70 + 4) = v72;
        goto LABEL_27;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for PhotogrammetrySession.Output(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_23925FB08(&qword_256928730);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
      {
        v8 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v18 = sub_239351F3C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
        v19 = *(int *)(v6 + 64);
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = *((_OWORD *)v21 + 3);
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
        *((_OWORD *)v20 + 3) = v22;
        v23 = *((_OWORD *)v21 + 1);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v23;
        v20[128] = v21[128];
        v24 = *((_OWORD *)v21 + 7);
        *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
        *((_OWORD *)v20 + 7) = v24;
        v25 = *((_OWORD *)v21 + 5);
        *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
        *((_OWORD *)v20 + 5) = v25;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
      }
      v26 = *(int *)(sub_23925FB08(&qword_256929550) + 48);
      v27 = &a1[v26];
      v28 = &a2[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      goto LABEL_21;
    case 1u:
      v9 = sub_23925FB08(&qword_256928730);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
      {
        v11 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v29 = sub_239351F3C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
        a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
        v30 = *(int *)(v9 + 64);
        v31 = &a1[v30];
        v32 = &a2[v30];
        v33 = *((_OWORD *)v32 + 3);
        *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
        *((_OWORD *)v31 + 3) = v33;
        v34 = *((_OWORD *)v32 + 1);
        *(_OWORD *)v31 = *(_OWORD *)v32;
        *((_OWORD *)v31 + 1) = v34;
        v31[128] = v32[128];
        v35 = *((_OWORD *)v32 + 7);
        *((_OWORD *)v31 + 6) = *((_OWORD *)v32 + 6);
        *((_OWORD *)v31 + 7) = v35;
        v36 = *((_OWORD *)v32 + 5);
        *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
        *((_OWORD *)v31 + 5) = v36;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
      }
      v37 = *(int *)(sub_23925FB08(&qword_256929558) + 48);
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = type metadata accessor for PhotogrammetrySession.Result(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v61 = sub_239351F3C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v38, v39, v61);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_21;
    case 2u:
      v12 = sub_23925FB08(&qword_256928730);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
      {
        v14 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v41 = sub_239351F3C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(a1, a2, v41);
        a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
        v42 = *(int *)(v12 + 64);
        v43 = &a1[v42];
        v44 = &a2[v42];
        v45 = *((_OWORD *)v44 + 3);
        *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
        *((_OWORD *)v43 + 3) = v45;
        v46 = *((_OWORD *)v44 + 1);
        *(_OWORD *)v43 = *(_OWORD *)v44;
        *((_OWORD *)v43 + 1) = v46;
        v43[128] = v44[128];
        v47 = *((_OWORD *)v44 + 7);
        *((_OWORD *)v43 + 6) = *((_OWORD *)v44 + 6);
        *((_OWORD *)v43 + 7) = v47;
        v48 = *((_OWORD *)v44 + 5);
        *((_OWORD *)v43 + 4) = *((_OWORD *)v44 + 4);
        *((_OWORD *)v43 + 5) = v48;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
      }
      v49 = sub_23925FB08(&qword_256929560);
      *(_QWORD *)&a1[*(int *)(v49 + 48)] = *(_QWORD *)&a2[*(int *)(v49 + 48)];
      goto LABEL_21;
    case 3u:
      v15 = sub_23925FB08(&qword_256928730);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
      {
        v17 = type metadata accessor for PhotogrammetrySession.Request(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v50 = sub_239351F3C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(a1, a2, v50);
        a1[*(int *)(v15 + 48)] = a2[*(int *)(v15 + 48)];
        v51 = *(int *)(v15 + 64);
        v52 = &a1[v51];
        v53 = &a2[v51];
        v54 = *((_OWORD *)v53 + 3);
        *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
        *((_OWORD *)v52 + 3) = v54;
        v55 = *((_OWORD *)v53 + 1);
        *(_OWORD *)v52 = *(_OWORD *)v53;
        *((_OWORD *)v52 + 1) = v55;
        v52[128] = v53[128];
        v56 = *((_OWORD *)v53 + 7);
        *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
        *((_OWORD *)v52 + 7) = v56;
        v57 = *((_OWORD *)v53 + 5);
        *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
        *((_OWORD *)v52 + 5) = v57;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
      }
      v58 = *(int *)(sub_23925FB08(&qword_256929568) + 48);
      v59 = &a1[v58];
      v60 = &a2[v58];
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_WORD *)v59 + 4) = *((_WORD *)v60 + 4);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for PhotogrammetrySession.Output(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  if (a1 != a2)
  {
    sub_2392688AC((uint64_t)a1, type metadata accessor for PhotogrammetrySession.Output);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_23925FB08(&qword_256928730);
        v7 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
        {
          v8 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          v38 = sub_239351F3C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(a1, a2, v38);
          a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
          v39 = *(int *)(v6 + 64);
          v40 = &a1[v39];
          v41 = &a2[v39];
          v42 = *((_OWORD *)v41 + 3);
          *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
          *((_OWORD *)v40 + 3) = v42;
          v43 = *((_OWORD *)v41 + 1);
          *(_OWORD *)v40 = *(_OWORD *)v41;
          *((_OWORD *)v40 + 1) = v43;
          v40[128] = v41[128];
          v44 = *((_OWORD *)v41 + 7);
          *((_OWORD *)v40 + 6) = *((_OWORD *)v41 + 6);
          *((_OWORD *)v40 + 7) = v44;
          v45 = *((_OWORD *)v41 + 5);
          *((_OWORD *)v40 + 4) = *((_OWORD *)v41 + 4);
          *((_OWORD *)v40 + 5) = v45;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
        }
        v46 = *(int *)(sub_23925FB08(&qword_256929550) + 48);
        v47 = &a1[v46];
        v48 = &a2[v46];
        *(_QWORD *)v47 = *(_QWORD *)v48;
        v47[8] = v48[8];
        goto LABEL_22;
      case 1u:
        v9 = sub_23925FB08(&qword_256928730);
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 3, v9))
        {
          v11 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          v49 = sub_239351F3C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(a1, a2, v49);
          a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
          v50 = *(int *)(v9 + 64);
          v51 = &a1[v50];
          v52 = &a2[v50];
          v53 = *((_OWORD *)v52 + 3);
          *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
          *((_OWORD *)v51 + 3) = v53;
          v54 = *((_OWORD *)v52 + 1);
          *(_OWORD *)v51 = *(_OWORD *)v52;
          *((_OWORD *)v51 + 1) = v54;
          v51[128] = v52[128];
          v55 = *((_OWORD *)v52 + 7);
          *((_OWORD *)v51 + 6) = *((_OWORD *)v52 + 6);
          *((_OWORD *)v51 + 7) = v55;
          v56 = *((_OWORD *)v52 + 5);
          *((_OWORD *)v51 + 4) = *((_OWORD *)v52 + 4);
          *((_OWORD *)v51 + 5) = v56;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 3, v9);
        }
        v57 = *(int *)(sub_23925FB08(&qword_256929558) + 48);
        v58 = &a1[v57];
        v59 = &a2[v57];
        v60 = type metadata accessor for PhotogrammetrySession.Result(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          v61 = sub_239351F3C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v58, v59, v61);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_22;
      case 2u:
        v12 = sub_23925FB08(&qword_256928730);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 3, v12))
        {
          v14 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v18 = sub_239351F3C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
          a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
          v19 = *(int *)(v12 + 64);
          v20 = &a1[v19];
          v21 = &a2[v19];
          v22 = *((_OWORD *)v21 + 3);
          *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
          *((_OWORD *)v20 + 3) = v22;
          v23 = *((_OWORD *)v21 + 1);
          *(_OWORD *)v20 = *(_OWORD *)v21;
          *((_OWORD *)v20 + 1) = v23;
          v20[128] = v21[128];
          v24 = *((_OWORD *)v21 + 7);
          *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
          *((_OWORD *)v20 + 7) = v24;
          v25 = *((_OWORD *)v21 + 5);
          *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
          *((_OWORD *)v20 + 5) = v25;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 3, v12);
        }
        v26 = sub_23925FB08(&qword_256929560);
        *(_QWORD *)&a1[*(int *)(v26 + 48)] = *(_QWORD *)&a2[*(int *)(v26 + 48)];
        goto LABEL_22;
      case 3u:
        v15 = sub_23925FB08(&qword_256928730);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(a2, 3, v15))
        {
          v17 = type metadata accessor for PhotogrammetrySession.Request(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v27 = sub_239351F3C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
          a1[*(int *)(v15 + 48)] = a2[*(int *)(v15 + 48)];
          v28 = *(int *)(v15 + 64);
          v29 = &a1[v28];
          v30 = &a2[v28];
          v31 = *((_OWORD *)v30 + 3);
          *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
          *((_OWORD *)v29 + 3) = v31;
          v32 = *((_OWORD *)v30 + 1);
          *(_OWORD *)v29 = *(_OWORD *)v30;
          *((_OWORD *)v29 + 1) = v32;
          v29[128] = v30[128];
          v33 = *((_OWORD *)v30 + 7);
          *((_OWORD *)v29 + 6) = *((_OWORD *)v30 + 6);
          *((_OWORD *)v29 + 7) = v33;
          v34 = *((_OWORD *)v30 + 5);
          *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
          *((_OWORD *)v29 + 5) = v34;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 3, v15);
        }
        v35 = *(int *)(sub_23925FB08(&qword_256929568) + 48);
        v36 = &a1[v35];
        v37 = &a2[v35];
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_WORD *)v36 + 4) = *((_WORD *)v37 + 4);
LABEL_22:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Output(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Output(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2392EEE60()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;

  result = type metadata accessor for PhotogrammetrySession.Request(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v8 = &v7;
    result = type metadata accessor for PhotogrammetrySession.Result(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v9 = &v6;
      v3 = MEMORY[0x24BEE0178] + 64;
      swift_getTupleTypeLayout2();
      v10 = &v5;
      swift_getTupleTypeLayout2();
      v11 = &v4;
      v12 = &unk_239356510;
      v13 = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Output.ProgressInfo(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Output.ProgressInfo(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 250);
  if (*(unsigned __int8 *)(a1 + 9) <= 6u)
    v3 = 6;
  else
    v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 - 7;
  if (*(unsigned __int8 *)(a1 + 9) < 6u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Output.ProgressInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 6;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Output.ProgressInfo()
{
  return &type metadata for PhotogrammetrySession.Output.ProgressInfo;
}

_QWORD *initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
    *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v7 = *(int *)(a3 + 32);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_OWORD *)(a1 + 21) = *(_OWORD *)((char *)a2 + 21);
    v10 = sub_239351F3C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_23925FB08(&qword_256927AD0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 36)) = *((_BYTE *)a2 + *(int *)(a3 + 36));
  }
  return v4;
}

uint64_t destroy for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_239351F3C();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 21) = *(_OWORD *)(a2 + 21);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_239351F3C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_23925FB08(&qword_256927AD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithCopy for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_239351F3C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_23925FB08(&qword_256927AD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t initializeWithTake for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 21) = *(_OWORD *)(a2 + 21);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_239351F3C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_23925FB08(&qword_256927AD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t assignWithTake for PhotogrammetrySession.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_239351F3C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_23925FB08(&qword_256927AD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 36)) = *(_BYTE *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2392EF65C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_23925FB08(&qword_256927AD0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2392EF6E8(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_23925FB08(&qword_256927AD0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

void sub_2392EF75C()
{
  unint64_t v0;

  sub_2392EF7DC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2392EF7DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256928E18)
  {
    sub_239351F3C();
    v0 = sub_2393526A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256928E18);
  }
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.SampleOrdering()
{
  return &type metadata for PhotogrammetrySession.Configuration.SampleOrdering;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV14SampleOrderingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2392EF894 + 4 * byte_239355D2C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2392EF8C8 + 4 * byte_239355D27[v4]))();
}

uint64_t sub_2392EF8C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392EF8D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392EF8D8);
  return result;
}

uint64_t sub_2392EF8E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392EF8ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2392EF8F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392EF8F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.FeatureSensitivity()
{
  return &type metadata for PhotogrammetrySession.Configuration.FeatureSensitivity;
}

__n128 initializeWithCopy for PhotogrammetrySession.Configuration.CustomDetailSpecification(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 5;
  v5 = v3 - 5;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification;
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2392EFA14 + 4 * byte_239355D36[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2392EFA48 + 4 * byte_239355D31[v4]))();
}

uint64_t sub_2392EFA48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392EFA50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2392EFA58);
  return result;
}

uint64_t sub_2392EFA64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2392EFA6CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2392EFA70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2392EFA78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs;
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_2392EFB04(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2392EFB20(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat()
{
  return &type metadata for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureFormat;
}

ValueMetadata *type metadata accessor for PhotogrammetrySession.HardwareSpecs()
{
  return &type metadata for PhotogrammetrySession.HardwareSpecs;
}

uint64_t sub_2392EFB8C()
{
  unint64_t v0;

  v0 = sub_2392EFFA8();
  return v0 | ((HIDWORD(v0) & 1) << 32);
}

uint64_t sub_2392EFBB4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  v11 = sub_2392EFFA8();
  v12 = sub_239275A60();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  if ((v11 & 0x100000000) == 0)
  {
    v13(v10, v12, v4);
    swift_bridgeObjectRetain_n();
    v19 = sub_239352098();
    v20 = sub_239352578();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v35[0] = v33;
      *(_DWORD *)v21 = 136446466;
      swift_bridgeObjectRetain();
      v34 = sub_23925F3EC(a1, a2, v35);
      sub_2393526B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2082;
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v22 = swift_allocObject();
      v23 = MEMORY[0x24BEE14E8];
      *(_OWORD *)(v22 + 16) = xmmword_239354060;
      v24 = MEMORY[0x24BEE1568];
      *(_QWORD *)(v22 + 56) = v23;
      *(_QWORD *)(v22 + 64) = v24;
      *(_DWORD *)(v22 + 32) = v11;
      v25 = sub_239352308();
      v34 = sub_23925F3EC(v25, v26, v35);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v19, v20, "MemoryLogger: %{public}s, memory footprint = %{public}s MB", (uint8_t *)v21, 0x16u);
      v27 = v33;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v27, -1, -1);
      MEMORY[0x23B83BC04](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      return v11 | ((HIDWORD(v11) & 1) << 32);
    }

    swift_bridgeObjectRelease_n();
    v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    v29 = v10;
LABEL_8:
    v28(v29, v4);
    return v11 | ((HIDWORD(v11) & 1) << 32);
  }
  v13(v8, v12, v4);
  swift_bridgeObjectRetain_n();
  v14 = sub_239352098();
  v15 = sub_239352578();
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    v29 = v8;
    goto LABEL_8;
  }
  v33 = v4;
  v16 = swift_slowAlloc();
  v32 = a1;
  v17 = (uint8_t *)v16;
  v18 = swift_slowAlloc();
  v35[0] = v18;
  *(_DWORD *)v17 = 136446210;
  swift_bridgeObjectRetain();
  v34 = sub_23925F3EC(v32, a2, v35);
  sub_2393526B0();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_23925B000, v14, v15, "MemoryLogger: %{public}s", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v18, -1, -1);
  MEMORY[0x23B83BC04](v17, -1, -1);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v33);
  return v11 | ((HIDWORD(v11) & 1) << 32);
}

uint64_t MemoryLogger.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MemoryLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_2392EFFA8()
{
  BOOL v0;
  int v1;
  uint64_t v2;
  mach_msg_type_number_t task_info_outCnt;
  integer_t task_info_out[4];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v13 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  *(_OWORD *)task_info_out = 0u;
  v6 = 0u;
  task_info_outCnt = 93;
  if (task_info(*MEMORY[0x24BDAEC58], 0x16u, task_info_out, &task_info_outCnt))
    v0 = 0;
  else
    v0 = task_info_outCnt >= 0x26;
  v1 = !v0;
  v2 = COERCE_UNSIGNED_INT((float)(unint64_t)v14 * 0.00000095367);
  if (v1)
    v2 = 0;
  return v2 | ((unint64_t)v1 << 32);
}

uint64_t type metadata accessor for MemoryLogger()
{
  return objc_opt_self();
}

uint64_t method lookup function for MemoryLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static MemoryLogger.memoryFootprint()()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 80))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

id sub_2392F00EC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_focusPointOfInterest);
}

id sub_2392F00FC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_exposurePointOfInterest);
}

id sub_2392F010C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_ISO);
}

id sub_2392F011C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_focusMode);
}

id sub_2392F012C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isAdjustingFocus);
}

id sub_2392F014C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_exposureMode);
}

id sub_2392F015C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isAdjustingExposure);
}

id sub_2392F017C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_lensPosition);
}

Float64 sub_2392F018C()
{
  uint64_t v0;
  CMTime time;

  objc_msgSend(*(id *)(v0 + 16), sel_activeMaxExposureDuration);
  return CMTimeGetSeconds(&time);
}

uint64_t sub_2392F01D8(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 24) = 1;
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_2392F0210(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t result;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[3];
  id v23[2];

  v23[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v1 + 96))(v5) & 1) != 0)
  {
    v8 = (void *)v1[2];
    result = (uint64_t)objc_msgSend(v8, sel_isSmoothAutoFocusSupported);
    if (!(_DWORD)result)
      return result;
    v23[0] = 0;
    if (objc_msgSend(v8, sel_lockForConfiguration_, v23))
    {
      v10 = v23[0];
      objc_msgSend(v8, sel_setSmoothAutoFocusEnabled_, a1 & 1);
      objc_msgSend(v8, sel_unlockForConfiguration);
      return 1;
    }
    v11 = v23[0];
    v12 = (void *)sub_239351E58();

    swift_willThrow();
    v13 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    v14 = v12;
    v15 = v12;
    v16 = sub_239352098();
    v17 = sub_23935256C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = (void *)swift_slowAlloc();
      v23[0] = v19;
      *(_DWORD *)v18 = 136446210;
      v22[1] = v18 + 4;
      swift_getErrorValue();
      v20 = sub_23935292C();
      v22[2] = sub_23925F3EC(v20, v21, (uint64_t *)v23);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v16, v17, "Camera Control: Camera failed to lock with error = %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v19, -1, -1);
      MEMORY[0x23B83BC04](v18, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return 0;
}

uint64_t sub_2392F04D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  id v22[2];

  v22[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v0 + 96))(v3) & 1) == 0)
    return 0;
  v6 = (void *)v0[2];
  if (!objc_msgSend(v6, sel_isAutoFocusRangeRestrictionSupported))
    return 0;
  v22[0] = 0;
  if (!objc_msgSend(v6, sel_lockForConfiguration_, v22))
  {
    v9 = v22[0];
    v10 = (void *)sub_239351E58();

    swift_willThrow();
    v11 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
    v12 = v10;
    v13 = v10;
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (void *)swift_slowAlloc();
      v22[0] = v17;
      *(_DWORD *)v16 = 136446210;
      v21[1] = v16 + 4;
      swift_getErrorValue();
      v18 = sub_23935292C();
      v21[2] = sub_23925F3EC(v18, v19, (uint64_t *)v22);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v14, v15, "Camera Control: Camera failed to lock with error = %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v17, -1, -1);
      MEMORY[0x23B83BC04](v16, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  v7 = v22[0];
  v8 = 1;
  objc_msgSend(v6, sel_setAutoFocusRangeRestriction_, 1);
  objc_msgSend(v6, sel_unlockForConfiguration);
  return v8;
}

uint64_t sub_2392F0798()
{
  return sub_2392F1534((SEL *)&selRef_isFocusModeSupported_, 0, (SEL *)&selRef_setFocusMode_);
}

uint64_t sub_2392F07F0(double a1, double a2)
{
  return sub_2392F0880(1, a1, a2);
}

uint64_t sub_2392F0838(double a1, double a2)
{
  return sub_2392F0880(2, a1, a2);
}

uint64_t sub_2392F0880(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[3];
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v3 + 96))(v9) & 1) == 0)
    return 0;
  v12 = (void *)v3[2];
  v27[0] = 0;
  if (!objc_msgSend(v12, sel_lockForConfiguration_, v27))
  {
    v15 = v27[0];
    v16 = (void *)sub_239351E58();

    swift_willThrow();
    v17 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    v18 = v16;
    v19 = v16;
    v20 = sub_239352098();
    v21 = sub_23935256C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)v22 = 136446210;
      v26[1] = v22 + 4;
      swift_getErrorValue();
      v24 = sub_23935292C();
      v26[2] = sub_23925F3EC(v24, v25, (uint64_t *)v27);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v20, v21, "Camera Control: Camera failed to lock with error = %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v22, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  v13 = v27[0];
  if (objc_msgSend(v12, sel_isFocusPointOfInterestSupported))
    objc_msgSend(v12, sel_setFocusPointOfInterest_, a2, a3);
  if (objc_msgSend(v12, sel_isFocusModeSupported_, a1))
    objc_msgSend(v12, sel_setFocusMode_, a1);
  objc_msgSend(v12, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_2392F0B84()
{
  return sub_2392F1534((SEL *)&selRef_isExposureModeSupported_, 0, (SEL *)&selRef_setExposureMode_);
}

uint64_t sub_2392F0BDC(double a1, double a2)
{
  return sub_2392F0C24(1, a1, a2);
}

uint64_t sub_2392F0C24(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[3];
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v3 + 96))(v9) & 1) == 0)
    return 0;
  v12 = (void *)v3[2];
  v27[0] = 0;
  if (!objc_msgSend(v12, sel_lockForConfiguration_, v27))
  {
    v15 = v27[0];
    v16 = (void *)sub_239351E58();

    swift_willThrow();
    v17 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    v18 = v16;
    v19 = v16;
    v20 = sub_239352098();
    v21 = sub_23935256C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)v22 = 136446210;
      v26[1] = v22 + 4;
      swift_getErrorValue();
      v24 = sub_23935292C();
      v26[2] = sub_23925F3EC(v24, v25, (uint64_t *)v27);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v20, v21, "Camera Control: Camera failed to lock with error = %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v22, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  v13 = v27[0];
  if (objc_msgSend(v12, sel_isExposurePointOfInterestSupported))
    objc_msgSend(v12, sel_setExposurePointOfInterest_, a2, a3);
  if (objc_msgSend(v12, sel_isExposureModeSupported_, a1))
    objc_msgSend(v12, sel_setExposureMode_, a1);
  objc_msgSend(v12, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_2392F0F28(double a1, double a2)
{
  return sub_2392F0C24(2, a1, a2);
}

uint64_t sub_2392F0F70(double a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _DWORD *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  _DWORD *v25;
  _DWORD *v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t result;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  id v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  void *v49;
  char *v50;
  uint64_t v51;
  id v52[4];

  v2 = v1;
  v52[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v49 - v8;
  v10 = (void *)v2[2];
  v11 = objc_msgSend(v10, sel_activeFormat);
  objc_msgSend(v11, sel_minExposureDuration);

  sub_23935265C();
  v13 = v12;
  v14 = objc_msgSend(v10, sel_activeFormat);
  objc_msgSend(v14, sel_maxExposureDuration);

  sub_23935265C();
  v16 = v15;
  v17 = sub_239275A60();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19 = v4;
  v18(v9, v17, v4);
  v20 = sub_239352098();
  v21 = sub_239352578();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (_DWORD *)swift_slowAlloc();
    v49 = v10;
    v23 = v17;
    v24 = v18;
    v25 = v22;
    *v22 = 134349312;
    v52[0] = v13;
    sub_2393526B0();
    *((_WORD *)v25 + 6) = 2050;
    v52[0] = v16;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v20, v21, "Camera Control: Camera min exposure duration = %{public}f, max exposure duration = %{public}f", (uint8_t *)v25, 0x16u);
    v26 = v25;
    v18 = v24;
    v17 = v23;
    v10 = v49;
    MEMORY[0x23B83BC04](v26, -1, -1);
  }

  v27 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v28 = v27(v9, v19);
  v29 = (*(uint64_t (**)(uint64_t))(*v2 + 96))(v28);
  result = 0;
  if ((v29 & 1) != 0 && *(double *)&v13 <= a1 && *(double *)&v16 >= a1)
  {
    v31 = (void *)sub_239352650();
    v33 = v32;
    v35 = v34;
    if ((sub_239352644() & 1) != 0)
    {
      v52[0] = 0;
      if (objc_msgSend(v10, sel_lockForConfiguration_, v52))
      {
        v36 = v52[0];
        v52[0] = v31;
        v52[1] = v33;
        v52[2] = v35;
        objc_msgSend(v10, sel_setActiveMaxExposureDuration_, v52);
        objc_msgSend(v10, sel_unlockForConfiguration);
        return 1;
      }
      v37 = v52[0];
      v38 = (void *)sub_239351E58();

      swift_willThrow();
      v39 = v50;
      v18(v50, v17, v19);
      v40 = v38;
      v41 = v38;
      v42 = sub_239352098();
      v43 = sub_23935256C();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = (void *)swift_slowAlloc();
        v52[0] = v45;
        *(_DWORD *)v44 = 136446210;
        swift_getErrorValue();
        v46 = sub_23935292C();
        v51 = sub_23925F3EC(v46, v47, (uint64_t *)v52);
        sub_2393526B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23925B000, v42, v43, "Camera Control: Camera failed to lock with error = %{public}s", v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v45, -1, -1);
        MEMORY[0x23B83BC04](v44, -1, -1);

        v48 = v50;
      }
      else
      {

        v48 = v39;
      }
      v27(v48, v19);
    }
    return 0;
  }
  return result;
}

uint64_t sub_2392F142C()
{
  return sub_2392F1534((SEL *)&selRef_isWhiteBalanceModeSupported_, 0, (SEL *)&selRef_setWhiteBalanceMode_);
}

uint64_t sub_2392F1484()
{
  return sub_2392F1534((SEL *)&selRef_isWhiteBalanceModeSupported_, 1, (SEL *)&selRef_setWhiteBalanceMode_);
}

uint64_t sub_2392F14DC()
{
  return sub_2392F1534((SEL *)&selRef_isWhiteBalanceModeSupported_, 2, (SEL *)&selRef_setWhiteBalanceMode_);
}

uint64_t sub_2392F1534(SEL *a1, uint64_t a2, SEL *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[3];
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v3 + 96))(v9) & 1) == 0)
    return 0;
  v12 = (void *)v3[2];
  v27[0] = 0;
  if (!objc_msgSend(v12, sel_lockForConfiguration_, v27))
  {
    v15 = v27[0];
    v16 = (void *)sub_239351E58();

    swift_willThrow();
    v17 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v17, v7);
    v18 = v16;
    v19 = v16;
    v20 = sub_239352098();
    v21 = sub_23935256C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      v27[0] = v23;
      *(_DWORD *)v22 = 136446210;
      v26[1] = v22 + 4;
      swift_getErrorValue();
      v24 = sub_23935292C();
      v26[2] = sub_23925F3EC(v24, v25, (uint64_t *)v27);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v20, v21, "Camera Control: Camera failed to lock with error = %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v22, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return 0;
  }
  v13 = v27[0];
  if (objc_msgSend(v12, *a1, a2))
    objc_msgSend(v12, *a3, a2);
  objc_msgSend(v12, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_2392F17FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  id v21[2];

  v21[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v0 + 96))(v3) & 1) == 0)
    return 0;
  v6 = (void *)v0[2];
  v21[0] = 0;
  if (!objc_msgSend(v6, sel_lockForConfiguration_, v21))
  {
    v9 = v21[0];
    v10 = (void *)sub_239351E58();

    swift_willThrow();
    v11 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
    v12 = v10;
    v13 = v10;
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (void *)swift_slowAlloc();
      v21[0] = v17;
      *(_DWORD *)v16 = 136446210;
      v20[1] = v16 + 4;
      swift_getErrorValue();
      v18 = sub_23935292C();
      v20[2] = sub_23925F3EC(v18, v19, (uint64_t *)v21);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v14, v15, "Camera Control: Camera failed to lock with error = %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v17, -1, -1);
      MEMORY[0x23B83BC04](v16, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  v7 = v21[0];
  if (objc_msgSend(v6, sel_isFocusModeSupported_, 1))
    objc_msgSend(v6, sel_setFocusMode_, 1);
  if (objc_msgSend(v6, sel_isExposureModeSupported_, 1))
    objc_msgSend(v6, sel_setExposureMode_, 1);
  objc_msgSend(v6, sel_unlockForConfiguration);
  return 1;
}

uint64_t sub_2392F1AEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  id v21[2];

  v21[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*v0 + 96))(v3) & 1) != 0)
  {
    v6 = (void *)v0[2];
    v21[0] = 0;
    if (objc_msgSend(v6, sel_lockForConfiguration_, v21))
    {
      v7 = v21[0];
      objc_msgSend(v6, sel_setAutomaticallyAdjustsFaceDrivenAutoFocusEnabled_, 0);
      objc_msgSend(v6, sel_setAutomaticallyAdjustsFaceDrivenAutoExposureEnabled_, 0);
      objc_msgSend(v6, sel_setFaceDrivenAutoFocusEnabled_, 0);
      objc_msgSend(v6, sel_setFaceDrivenAutoExposureEnabled_, 0);
      objc_msgSend(v6, sel_unlockForConfiguration);
      return 1;
    }
    v9 = v21[0];
    v10 = (void *)sub_239351E58();

    swift_willThrow();
    v11 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v11, v1);
    v12 = v10;
    v13 = v10;
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (void *)swift_slowAlloc();
      v21[0] = v17;
      *(_DWORD *)v16 = 136446210;
      v20[1] = v16 + 4;
      swift_getErrorValue();
      v18 = sub_23935292C();
      v20[2] = sub_23925F3EC(v18, v19, (uint64_t *)v21);
      sub_2393526B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23925B000, v14, v15, "Camera Control: Camera failed to lock with error = %{public}s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v17, -1, -1);
      MEMORY[0x23B83BC04](v16, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return 0;
}

uint64_t sub_2392F1DD4()
{
  uint64_t v0;
  void *v1;

  sub_2393527C4();
  sub_239352380();
  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_minimumFocusDistance);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_focusMode);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isFocusModeSupported_, 0);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isFocusModeSupported_, 1);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isFocusModeSupported_, 2);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_focusPointOfInterest);
  type metadata accessor for CGPoint();
  sub_239352830();
  sub_239352380();
  objc_msgSend(v1, sel_isFocusPointOfInterestSupported);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isAdjustingFocus);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isSmoothAutoFocusEnabled);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isSmoothAutoFocusSupported);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_autoFocusRangeRestriction);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isAutoFocusRangeRestrictionSupported);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_exposureMode);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isExposureModeSupported_, 0);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isExposureModeSupported_, 1);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isExposureModeSupported_, 2);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_exposurePointOfInterest);
  sub_239352830();
  sub_239352380();
  objc_msgSend(v1, sel_isExposurePointOfInterestSupported);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isAdjustingExposure);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_whiteBalanceMode);
  sub_2393528C0();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isWhiteBalanceModeSupported_, 0);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isWhiteBalanceModeSupported_, 1);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isWhiteBalanceModeSupported_, 2);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isAdjustingWhiteBalance);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isGlobalToneMappingEnabled);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isLowLightBoostSupported);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isLowLightBoostEnabled);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_automaticallyEnablesLowLightBoostWhenAvailable);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_lensPosition);
  sub_2393524E8();
  sub_239352380();
  objc_msgSend(v1, sel_ISO);
  sub_2393524E8();
  sub_239352380();
  objc_msgSend(v1, sel_automaticallyAdjustsVideoHDREnabled);
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  objc_msgSend(v1, sel_isVideoHDREnabled);
  sub_239352380();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2392F28BC()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CameraControl()
{
  return objc_opt_self();
}

double sub_2392F2900()
{
  double result;

  result = 0.0;
  xmmword_25692E850 = xmmword_2393566D0;
  return result;
}

double sub_2392F2914()
{
  double result;

  result = 32768.0079;
  xmmword_25692E870 = xmmword_2393566E0;
  return result;
}

double sub_2392F2928@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>, float a3@<S1>, float a4@<S2>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  __n128 v28;
  double result;
  uint64_t v30;
  void (*v31)(char *);
  __int128 v32;
  __n128 v33;
  double v34;
  uint64_t v35;

  v33 = a2;
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = sub_239275B74();
  v31 = *(void (**)(char *))(v8 + 16);
  *(_QWORD *)&v32 = v14;
  v31(v13);
  v15 = sub_239352098();
  v16 = sub_239352578();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v30 = v8;
    v19 = v18;
    v35 = v18;
    *(_DWORD *)v17 = 136380931;
    v34 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000053, 0x8000000239360120, &v35));
    sub_2393526B0();
    *(_WORD *)(v17 + 12) = 2050;
    v34 = a3;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: Voxel dimension scene mode = %{public}fm", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v19, -1, -1);
    MEMORY[0x23B83BC04](v17, -1, -1);

    v20 = *(void (**)(char *, uint64_t))(v30 + 8);
  }
  else
  {

    v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  }
  v20(v13, v7);
  ((void (*)(char *, _QWORD, uint64_t))v31)(v11, v32, v7);
  v21 = sub_239352098();
  v22 = sub_239352578();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v35 = v24;
    *(_DWORD *)v23 = 136380931;
    v34 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000053, 0x8000000239360120, &v35));
    sub_2393526B0();
    *(_WORD *)(v23 + 12) = 2050;
    v34 = a4;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v21, v22, "ObjectCaptureSession.%{private}s: Depth confidence threshold scene mode = %{public}f", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v24, -1, -1);
    MEMORY[0x23B83BC04](v23, -1, -1);
  }

  v20(v11, v7);
  if (qword_25692E860 != -1)
    swift_once();
  v32 = xmmword_25692E870;
  v25 = *sub_239263F48();
  v26 = *(_DWORD *)sub_2392DCCFC();
  v27 = *(_DWORD *)sub_2392DCD08();
  *(_DWORD *)a1 = 1;
  *(_BYTE *)(a1 + 4) = 1;
  *(_QWORD *)(a1 + 16) = 4;
  *(float *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 28) = 30000;
  *(float *)(a1 + 32) = a3;
  *(_BYTE *)(a1 + 36) = 33;
  *(_QWORD *)(a1 + 40) = 0x3D4CCCCD3F83D70ALL;
  *(_DWORD *)(a1 + 48) = 1084227584;
  v28 = v33;
  *(_OWORD *)(a1 + 64) = v32;
  *(__n128 *)(a1 + 80) = v28;
  *(_QWORD *)&result = 644245094900000;
  *(_QWORD *)(a1 + 96) = 644245094900000;
  *(_DWORD *)(a1 + 104) = v25;
  *(_BYTE *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 112) = 1;
  *(_DWORD *)(a1 + 116) = v26;
  *(_DWORD *)(a1 + 120) = v27;
  *(_BYTE *)(a1 + 124) = 0;
  *(_DWORD *)(a1 + 128) = 1048576000;
  return result;
}

void sub_2392F2D50(__CVBuffer *a1, uint64_t a2)
{
  __CFString *v4;
  CFTypeRef v5;
  float v6;
  float v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __CFString *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t inited;

  v4 = (__CFString *)sub_2393522CC();
  v5 = CVBufferCopyAttachment(a1, v4, 0);
  swift_unknownObjectRelease();

  if (!v5)
  {
    v26 = *(_OWORD *)(a2 + 32);
    v6 = *(float *)(a2 + 20);
    v7 = *(float *)a2 / v6;
    sub_23925FB08(&qword_25692B708);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_239354060;
    *(_QWORD *)(inited + 32) = 0x73726F736E6553;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    sub_23925FB08(&qword_25692B710);
    v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = xmmword_239354060;
    *(_QWORD *)(v25 + 32) = 0x69736E6972746E49;
    *(_QWORD *)(v25 + 40) = 0xEA00000000007363;
    sub_23925FB08(&qword_25692B718);
    v8 = swift_initStackObject();
    *(_OWORD *)(v8 + 16) = xmmword_239354060;
    *(_QWORD *)(v8 + 32) = 4343634;
    *(_QWORD *)(v8 + 40) = 0xE300000000000000;
    sub_23925FB08(&qword_25692B720);
    v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_2393548B0;
    *(_QWORD *)(v9 + 32) = 0x656C6F686E6950;
    *(_QWORD *)(v9 + 40) = 0xE700000000000000;
    sub_23925FB08(&qword_25692B728);
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_239354680;
    strcpy((char *)(v10 + 32), "Aspect Ratio");
    *(_BYTE *)(v10 + 45) = 0;
    *(_WORD *)(v10 + 46) = -5120;
    sub_23925FB08(&qword_25692B730);
    v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_239354060;
    *(_QWORD *)(v11 + 32) = 1635017028;
    *(_QWORD *)(v11 + 40) = 0xE400000000000000;
    sub_23925FB08(&qword_25692B650);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_239354060;
    v13 = MEMORY[0x24BEE14E8];
    *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE14E8];
    *(float *)(v12 + 32) = v7;
    *(_QWORD *)(v11 + 48) = v12;
    *(_QWORD *)(v10 + 48) = sub_2392F3268(v11, &qword_25692B788);
    strcpy((char *)(v10 + 56), "Focal Length");
    *(_BYTE *)(v10 + 69) = 0;
    *(_WORD *)(v10 + 70) = -5120;
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_239354060;
    *(_QWORD *)(v14 + 32) = 1635017028;
    *(_QWORD *)(v14 + 40) = 0xE400000000000000;
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_239354060;
    *(_QWORD *)(v15 + 56) = v13;
    *(float *)(v15 + 32) = v6;
    *(_QWORD *)(v14 + 48) = v15;
    *(_QWORD *)(v10 + 72) = sub_2392F3268(v14, &qword_25692B788);
    *(_QWORD *)(v10 + 80) = 0x617069636E697250;
    *(_QWORD *)(v10 + 88) = 0xEF746E696F50206CLL;
    v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_239354060;
    *(_QWORD *)(v16 + 32) = 1635017028;
    *(_QWORD *)(v16 + 40) = 0xE400000000000000;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_2393548B0;
    *(_QWORD *)(v17 + 56) = v13;
    *(_DWORD *)(v17 + 32) = v26;
    *(_QWORD *)(v17 + 88) = v13;
    *(_DWORD *)(v17 + 64) = DWORD1(v26);
    *(_QWORD *)(v16 + 48) = v17;
    *(_QWORD *)(v10 + 96) = sub_2392F3268(v16, &qword_25692B788);
    *(_QWORD *)(v10 + 104) = 2003135315;
    *(_QWORD *)(v10 + 112) = 0xE400000000000000;
    v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_239354060;
    *(_QWORD *)(v18 + 32) = 1635017028;
    *(_QWORD *)(v18 + 40) = 0xE400000000000000;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_239354060;
    *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v19 + 32) = 0;
    *(_QWORD *)(v18 + 48) = v19;
    *(_QWORD *)(v10 + 120) = sub_2392F3268(v18, &qword_25692B788);
    v20 = sub_2392F3268(v10, &qword_25692B780);
    v21 = sub_23925FB08(&qword_25692B738);
    *(_QWORD *)(v9 + 48) = v20;
    *(_QWORD *)(v9 + 72) = v21;
    *(_QWORD *)(v9 + 80) = 0x6974756C6F736552;
    *(_QWORD *)(v9 + 88) = 0xEA00000000006E6FLL;
    sub_23925FB08(&qword_25692B740);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_2393548B0;
    *(_QWORD *)(v22 + 32) = CVPixelBufferGetWidth(a1);
    *(_QWORD *)(v22 + 40) = CVPixelBufferGetHeight(a1);
    *(_QWORD *)(v9 + 120) = sub_23925FB08(&qword_25692B748);
    *(_QWORD *)(v9 + 96) = v22;
    *(_QWORD *)(v8 + 48) = sub_23925DBD8(v9);
    *(_QWORD *)(v25 + 48) = sub_2392F3268(v8, &qword_25692B768);
    *(_QWORD *)(inited + 48) = sub_2392F3268(v25, &qword_25692B760);
    sub_2392F3268(inited, &qword_25692B758);
    v23 = (__CFString *)sub_2393522CC();
    sub_23925FB08(&qword_25692B750);
    v24 = (void *)sub_239352260();
    swift_bridgeObjectRelease();
    CVBufferSetAttachment(a1, v23, v24, kCVAttachmentMode_ShouldPropagate);

  }
}

unint64_t sub_2392F3268(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(a2);
  v3 = (_QWORD *)sub_239352878();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23925FAA4(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2392F337C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = sub_23925FB08(&qword_25692B7F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_25692B640);
  v6 = sub_239352878();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v12, (uint64_t)v5, &qword_25692B7F0);
    result = sub_239292F4C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_239352020();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    result = sub_2392C4FE0(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2392F3534(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v6 = sub_23925FB08(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(a3);
  v10 = sub_239352878();
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  v13 = *(int *)(v6 + 48);
  v14 = v10 + 64;
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v16, (uint64_t)v9, a2);
    result = sub_239292F4C((uint64_t)v9);
    if ((v19 & 1) != 0)
      break;
    v20 = result;
    *(_QWORD *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v21 = v11[6];
    v22 = sub_239352020();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v20, v9, v22);
    *(_QWORD *)(v11[7] + 8 * v20) = *(_QWORD *)&v9[v13];
    v23 = v11[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2392F36C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = sub_23925FB08(&qword_25692B7E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(&qword_25692B698);
  v6 = sub_239352878();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v12, (uint64_t)v5, &qword_25692B7E0);
    result = sub_239292F4C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_239352020();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ObjectCaptureSession.Configuration.enableOverCapture.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ObjectCaptureSession.Configuration.enableOverCapture.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ObjectCaptureSession.Configuration.enableOverCapture.modify())()
{
  return nullsub_1;
}

CoreOC::ObjectCaptureSession::Configuration __swiftcall ObjectCaptureSession.Configuration.init()()
{
  _BYTE *v0;
  CoreOC::ObjectCaptureSession::Configuration result;

  *v0 = 0;
  return result;
}

BOOL static ObjectCaptureSession.Configuration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ObjectCaptureSession.HardwareSpecs.maxNumImages.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_2392F38A0()
{
  return sub_2392DD9C8(&qword_25692E888);
}

uint64_t static ObjectCaptureSession.hardwareSpecs.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_25692E880 != -1)
    result = swift_once();
  *a1 = qword_25692E888;
  return result;
}

uint64_t ObjectCaptureSession.Frame.Feedback.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

CoreOC::ObjectCaptureSession::Frame::Feedback __swiftcall ObjectCaptureSession.Frame.Feedback.init(rawValue:)(CoreOC::ObjectCaptureSession::Frame::Feedback rawValue)
{
  CoreOC::ObjectCaptureSession::Frame::Feedback *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void *sub_2392F391C()
{
  return &unk_2393567A0;
}

void static ObjectCaptureSession.Frame.Feedback.tooFast.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void *sub_2392F3934()
{
  return &unk_2393567A8;
}

void static ObjectCaptureSession.Frame.Feedback.lowLight.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void *sub_2392F394C()
{
  return &unk_2393567B0;
}

void static ObjectCaptureSession.Frame.Feedback.tooFar.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void *sub_2392F3964()
{
  return &unk_2393567B8;
}

void static ObjectCaptureSession.Frame.Feedback.tooClose.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void *sub_2392F397C()
{
  return &unk_2393567C0;
}

void static ObjectCaptureSession.Frame.Feedback.outOfFieldOfView.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void *sub_2392F3994()
{
  return &unk_2393567C8;
}

void static ObjectCaptureSession.Frame.Feedback.tooDark.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static ObjectCaptureSession.Frame.Feedback.none.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_2392F39B4()
{
  qword_25692E898 = 63;
}

uint64_t static ObjectCaptureSession.Frame.Feedback.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_25692E890 != -1)
    result = swift_once();
  *a1 = qword_25692E898;
  return result;
}

__n128 ObjectCaptureSession.Frame.Camera.intrinsics.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

__n128 ObjectCaptureSession.Frame.Camera.transform.getter()
{
  __n128 *v0;

  return v0[3];
}

uint64_t ObjectCaptureSession.Frame.Camera.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2392F42A8(type metadata accessor for ObjectCaptureSession.Frame.Camera, (uint64_t)MEMORY[0x24BEDF358], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_239268820, a1);
}

__n128 ObjectCaptureSession.Frame.Object.boundingBox.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

__n128 ObjectCaptureSession.Frame.Object.transform.getter()
{
  __n128 *v0;

  return v0[4];
}

uint64_t ObjectCaptureSession.Frame.Object.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2392F42A8(type metadata accessor for ObjectCaptureSession.Frame.Object, (uint64_t)MEMORY[0x24BEDF358], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_239268820, a1);
}

uint64_t ObjectCaptureSession.Frame.Object.objectContour.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ObjectCaptureSession.Frame.Object(0) + 28));
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSession.Frame.PointCloud.points.getter()
{
  return swift_retain();
}

uint64_t ObjectCaptureSession.Frame.PointCloud.indices.getter()
{
  return swift_retain();
}

uint64_t ObjectCaptureSession.Frame.PointCloud.densePoints.getter()
{
  return swift_retain();
}

__n128 ObjectCaptureSession.Frame.PointCloud.transform.getter()
{
  __n128 *v0;

  return v0[2];
}

double ObjectCaptureSession.Frame.timestamp.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

id ObjectCaptureSession.Frame.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void *ObjectCaptureSession.Frame.depthData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void *ObjectCaptureSession.Frame.confidenceData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSession.Frame.camera.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ObjectCaptureSession.Frame(0);
  return sub_239268820(v1 + *(int *)(v3 + 32), a1, type metadata accessor for ObjectCaptureSession.Frame.Camera);
}

uint64_t ObjectCaptureSession.Frame.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ObjectCaptureSession.Frame(0);
  return sub_23926059C(v1 + *(int *)(v3 + 36), a1, &qword_25692A8A8);
}

float ObjectCaptureSession.Frame.coverage.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Frame(0) + 40));
}

uint64_t ObjectCaptureSession.Frame.feedback.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ObjectCaptureSession.Frame(0);
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t ObjectCaptureSession.Frame.pointCloud.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ObjectCaptureSession.Frame(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  v15 = v3[10];
  v14 = v3[11];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v15;
  a1[11] = v14;
  return sub_2393310C8(v4);
}

uint64_t ObjectCaptureSession.Frame.spi.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[688];

  v3 = type metadata accessor for ObjectCaptureSession.Frame(0);
  sub_239268764(v1 + *(int *)(v3 + 52), (uint64_t)v5, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v5, a1, (uint64_t *)&unk_25692A8B0);
  return sub_239331358(v5, sub_239331144);
}

uint64_t sub_2392F3CD8@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  _OWORD v21[43];
  _BYTE v22[688];
  _BYTE __dst[688];
  _BYTE v24[688];

  v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame(0);
  v13 = a5 + v12[9];
  v14 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_DWORD *)(a5 + v12[10]) = 0;
  *(_QWORD *)(a5 + v12[11]) = 0;
  v15 = (_OWORD *)(a5 + v12[12]);
  v15[4] = 0u;
  v15[5] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  *v15 = 0u;
  v15[1] = 0u;
  v16 = a5 + v12[13];
  sub_23933113C(v22);
  sub_239268764((uint64_t)v22, v16, (uint64_t *)&unk_25692A8B0);
  *(double *)a5 = a6;
  *(_QWORD *)(a5 + 8) = a1;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a3;
  sub_239268820(a4, a5 + v12[8], type metadata accessor for ObjectCaptureSession.Frame.Camera);
  memset(v21, 0, 72);
  memset(&v21[5], 0, 168);
  memset(&v21[16], 0, 168);
  memset(&v21[27], 0, 160);
  LODWORD(v21[37]) = -1082130432;
  *(_OWORD *)((char *)&v21[37] + 8) = 0u;
  DWORD2(v21[38]) = 0;
  BYTE12(v21[38]) = 1;
  v17 = a3;
  v18 = a1;
  v19 = a2;
  sub_23934BA80((uint64_t)&v21[39]);

  *((_QWORD *)&v21[42] + 1) = MEMORY[0x24BEE4AF8];
  sub_2392688AC(a4, type metadata accessor for ObjectCaptureSession.Frame.Camera);
  memcpy(__dst, v21, sizeof(__dst));
  nullsub_1(__dst);
  sub_239268764(v16, (uint64_t)v24, (uint64_t *)&unk_25692A8B0);
  sub_239331358(v24, sub_2393314A0);
  return sub_239268764((uint64_t)__dst, v16, (uint64_t *)&unk_25692A8B0);
}

uint64_t ObjectCaptureSession.Mesh.Anchor.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_239352020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

id ObjectCaptureSession.Mesh.Anchor.vertices.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 20));
}

id ObjectCaptureSession.Mesh.Anchor.colors.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 24));
}

id ObjectCaptureSession.Mesh.Anchor.normals.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 28));
}

void *ObjectCaptureSession.Mesh.Anchor.faces.getter()
{
  return sub_2392F3F90(type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
}

void *sub_2392F3F90(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1(0) + 32));
  v3 = v2;
  return v2;
}

__n128 ObjectCaptureSession.Mesh.Anchor.transform.getter()
{
  uint64_t v0;

  return *(__n128 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 36));
}

double ObjectCaptureSession.Mesh.Anchor.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 40));
}

__n128 ObjectCaptureSession.Mesh.Anchor.corner.getter()
{
  uint64_t v0;

  return *(__n128 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 44));
}

__n128 ObjectCaptureSession.Mesh.Anchor.extent.getter()
{
  uint64_t v0;

  return *(__n128 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 48));
}

uint64_t ObjectCaptureSession.Mesh.Anchor.didRemove.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) + 52));
}

__n128 sub_2392F406C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, __n128 a8@<Q0>, __n128 a9@<Q1>, __n128 a10@<Q2>, __n128 a11@<Q3>, double a12@<D4>, __n128 a13@<Q5>, __n128 a14@<Q6>)
{
  uint64_t v22;
  int *v23;
  __n128 *v24;
  __n128 result;

  v22 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a7, a1, v22);
  v23 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  *(_QWORD *)(a7 + v23[5]) = a2;
  *(_QWORD *)(a7 + v23[6]) = a3;
  *(_QWORD *)(a7 + v23[7]) = a4;
  *(_QWORD *)(a7 + v23[8]) = a5;
  v24 = (__n128 *)(a7 + v23[9]);
  *v24 = a8;
  v24[1] = a9;
  v24[2] = a10;
  v24[3] = a11;
  *(double *)(a7 + v23[10]) = a12;
  *(__n128 *)(a7 + v23[11]) = a13;
  result = a14;
  *(__n128 *)(a7 + v23[12]) = a14;
  *(_BYTE *)(a7 + v23[13]) = a6;
  return result;
}

uint64_t ObjectCaptureSession.Mesh.anchors.getter()
{
  return swift_bridgeObjectRetain();
}

double ObjectCaptureSession.Shot.timestamp.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

id ObjectCaptureSession.Shot.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void *ObjectCaptureSession.Shot.depthData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void *ObjectCaptureSession.Shot.confidenceData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void *ObjectCaptureSession.Shot.pointCloudData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t sub_2392F41EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  *(double *)a5 = a6;
  *(_QWORD *)(a5 + 8) = result;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Session.Provenance.version.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Session.Provenance.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Session.provenance.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

float ObjectCaptureSession.Metadata.Session.coverage.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

uint64_t ObjectCaptureSession.Metadata.Shot.Camera.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2392F42A8(type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera, (uint64_t)MEMORY[0x24BEDF358], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_239268820, a1);
}

uint64_t sub_2392F42A8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 24), a4, a2);
}

void *ObjectCaptureSession.Metadata.Shot.Camera.calibrationData.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0) + 28));
  v2 = v1;
  return v1;
}

uint64_t sub_2392F4324()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_2392F4330@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>, __n128 a13@<Q3>)
{
  __int128 v21;
  int *v22;
  uint64_t result;

  v21 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v21;
  *(_OWORD *)(a9 + 32) = a1[2];
  *(__n128 *)(a9 + 48) = a10;
  *(__n128 *)(a9 + 64) = a11;
  *(__n128 *)(a9 + 80) = a12;
  *(__n128 *)(a9 + 96) = a13;
  v22 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  sub_2392C4FE0(a2, a9 + v22[6], (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  *(_QWORD *)(a9 + v22[7]) = a3;
  sub_239268764(a4, a9 + v22[8], &qword_25692A8A0);
  sub_239268764(a5, a9 + v22[9], &qword_25692A8A0);
  result = sub_239268764(a6, a9 + v22[10], &qword_25692A8A0);
  *(_QWORD *)(a9 + v22[11]) = a7;
  *(_QWORD *)(a9 + v22[12]) = a8;
  return result;
}

CoreOC::ObjectCaptureSession::Metadata::Shot::CaptureMode_optional __swiftcall ObjectCaptureSession.Metadata.Shot.CaptureMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (CoreOC::ObjectCaptureSession::Metadata::Shot::CaptureMode_optional)rawValue;
}

uint64_t ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

__n128 ObjectCaptureSession.Metadata.Shot.Object.boundingBox.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

__n128 ObjectCaptureSession.Metadata.Shot.Object.transform.getter()
{
  __n128 *v0;

  return v0[4];
}

void *ObjectCaptureSession.Metadata.Shot.Object.mask.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 128);
  v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Shot.Object.staticSegmentID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

unint64_t sub_2392F448C@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, char a3@<W2>, __n128 *a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>, __n128 a7@<Q2>, __n128 a8@<Q3>, __n128 a9@<Q4>, __n128 a10@<Q5>, __n128 a11@<Q6>, __n128 a12@<Q7>)
{
  *a4 = a5;
  a4[1] = a6;
  a4[2] = a7;
  a4[3] = a8;
  a4[4] = a9;
  a4[5] = a10;
  a4[6] = a11;
  a4[7] = a12;
  a4[8].n128_u64[0] = result;
  a4[8].n128_u64[1] = a2;
  a4[9].n128_u8[0] = a3 & 1;
  return result;
}

__n128 ObjectCaptureSession.Metadata.Shot.Scene.boundingBox.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t ObjectCaptureSession.Metadata.Shot.Scene.segmentID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

unint64_t sub_2392F44C4@<X0>(unint64_t result@<X0>, char a2@<W1>, __n128 *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  *a3 = a4;
  a3[1] = a5;
  a3[2] = a6;
  a3[3] = a7;
  a3[4].n128_u64[0] = result;
  a3[4].n128_u8[8] = a2 & 1;
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Shot.camera.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  return sub_239268820(v1 + *(int *)(v3 + 20), a1, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
}

uint64_t ObjectCaptureSession.Metadata.Shot.sessionID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2392F42A8(type metadata accessor for ObjectCaptureSession.Metadata.Shot, (uint64_t)&qword_2569281C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23926059C, a1);
}

uint64_t ObjectCaptureSession.Metadata.Shot.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[160];

  v3 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  sub_239268764(v1 + *(int *)(v3 + 28), (uint64_t)v5, &qword_25692A8C0);
  sub_239268764((uint64_t)v5, a1, &qword_25692A8C0);
  return sub_2392688F0((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2392687CC);
}

__n128 ObjectCaptureSession.Metadata.Shot.scene.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  v3 = v1 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 32);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_BYTE *)(v3 + 72);
  v6 = *(_BYTE *)(v3 + 73);
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  result = *(__n128 *)(v3 + 32);
  v9 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 73) = v6;
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Shot.captureMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t ObjectCaptureSession.Metadata.Shot.gravity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 40));
}

void *ObjectCaptureSession.Metadata.Shot.rawFeaturePoints.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 44));
  v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSession.Metadata.Shot.feedback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 48));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 sub_2392F46B8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, char a11, uint64_t a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  int *v25;
  char *v26;
  __n128 result;
  char *v28;
  char *v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v37[160];

  sub_239268764(a3, (uint64_t)v37, &qword_25692A8C0);
  v32 = a4[1];
  v33 = *a4;
  v30 = (__n128)a4[3];
  v31 = a4[2];
  v20 = *((_QWORD *)a4 + 8);
  v21 = *((_BYTE *)a4 + 72);
  LOBYTE(a4) = *((_BYTE *)a4 + 73);
  v22 = *a5;
  v23 = *a13;
  v24 = *((_BYTE *)a13 + 8);
  *a9 = a10;
  v25 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  sub_2392C4FE0(a1, (uint64_t)a9 + v25[5], type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
  sub_239268764(a2, (uint64_t)a9 + v25[6], &qword_2569281C0);
  sub_239268764((uint64_t)v37, (uint64_t)a9 + v25[7], &qword_25692A8C0);
  v26 = (char *)a9 + v25[8];
  *(_OWORD *)v26 = v33;
  *((_OWORD *)v26 + 1) = v32;
  result = v30;
  *((_OWORD *)v26 + 2) = v31;
  *((__n128 *)v26 + 3) = v30;
  *((_QWORD *)v26 + 8) = v20;
  v26[72] = v21;
  v26[73] = (char)a4;
  *((_BYTE *)a9 + v25[9]) = v22;
  v28 = (char *)a9 + v25[10];
  *(_QWORD *)v28 = a6;
  *((_QWORD *)v28 + 1) = a7;
  *((_QWORD *)v28 + 2) = a8;
  v28[24] = a11 & 1;
  *(_QWORD *)((char *)a9 + v25[11]) = a12;
  v29 = (char *)a9 + v25[12];
  *(_QWORD *)v29 = v23;
  v29[8] = v24;
  *(_QWORD *)((char *)a9 + v25[13]) = a14;
  return result;
}

void ObjectCaptureSession.configuration.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration);
}

_QWORD *sub_2392F4874@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & **a1) + 0x420))(&v4);
  *a2 = v4;
  return result;
}

void sub_2392F48C4(id *a1)
{
  sub_239341BF8(*a1);
  sub_2392F4D9C();
}

void sub_2392F48FC(void **a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void (*v9)(char **__return_ptr, uint64_t);
  char *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  char *v28;
  id v29;
  uint64_t v30;
  char *v31;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *(void (**)(char **__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420);
  v9(&v31, v5);
  v10 = v31;
  v29 = v8;
  v30 = (uint64_t)v31;
  v11 = _s6CoreOC20ObjectCaptureSessionC5StateO2eeoiySbAE_AEtFZ_0((id *)&v30, &v29);
  sub_239331658(v10);
  if (!v11)
  {
    v12 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12, v3);
    sub_239341BF8(v8);
    v13 = v1;
    sub_239341BF8(v8);
    v14 = v13;
    v15 = sub_239352098();
    v16 = sub_239352578();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc();
      v28 = (char *)swift_slowAlloc();
      v31 = v28;
      *(_DWORD *)v18 = 136381187;
      v27 = v17;
      v30 = sub_23925F3EC(0x6574617473, 0xE500000000000000, (uint64_t *)&v31);
      sub_2393526B0();
      *(_WORD *)(v18 + 12) = 2082;
      v30 = (uint64_t)v8;
      sub_239341BF8(v8);
      v19 = sub_23935232C();
      v30 = sub_23925F3EC(v19, v20, (uint64_t *)&v31);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      sub_239331658(v8);
      sub_239331658(v8);
      *(_WORD *)(v18 + 22) = 2082;
      ((void (*)(uint64_t *__return_ptr))v9)(&v30);
      v21 = sub_23935232C();
      v30 = sub_23925F3EC(v21, v22, (uint64_t *)&v31);
      sub_2393526B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v15, (os_log_type_t)v27, "ObjectCaptureSession.%{private}s: Session state has changed from %{public}s to %{public}s", (uint8_t *)v18, 0x20u);
      v23 = v28;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v18, -1, -1);

    }
    else
    {
      sub_239331658(v8);
      sub_239331658(v8);

    }
    v24 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v9(&v31, v24);
    v25 = v31;
    if ((unint64_t)(v31 - 7) >= 0xA)
    {
      if (v31 == (char *)17)
      {
        sub_2393271AC();
        v30 = 7;
        sub_2393520C8();
        swift_release();
        sub_239327338();
        v30 = 7;
        sub_2393520C8();
        swift_release();
        sub_2393274C4();
        v30 = 7;
        sub_2393520C8();
        swift_release();
      }
      else
      {
        sub_2392D0F0C(v31);
        sub_2393271AC();
        v30 = (uint64_t)v25;
        sub_2392D0F0C(v25);
        sub_2393520C8();
        swift_release();
        sub_239331658(v25);
        sub_239327338();
        v30 = (uint64_t)v25;
        sub_2392D0F0C(v25);
        sub_2393520C8();
        swift_release();
        sub_239331658(v25);
        sub_2393274C4();
        v30 = (uint64_t)v25;
        sub_2392D0F0C(v25);
        sub_2393520C8();
        swift_release();
        sub_239331658(v25);
        sub_239331658(v25);
        sub_2392D0F70(v25);
      }
    }
    else
    {
      sub_239331658(v31);
    }
  }
}

uint64_t sub_2392F4D38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23935211C();
  swift_release();
  return swift_release();
}

void sub_2392F4D9C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23935211C();
  swift_release();
  swift_release();
  v1 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v0;
  sub_239352128();
  sub_2392F48FC(&v3);
  sub_239331658(v1);
}

uint64_t sub_2392F4E6C(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x438))();
}

uint64_t sub_2392F4EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2392F5F4C(a1, a2, a3, a4, &qword_25692A8D8, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__state, &qword_25692A8D0);
}

uint64_t sub_2392F4EC0()
{
  return sub_2392F6078((uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__state, &qword_25692A8D0);
}

uint64_t sub_2392F4ED4(uint64_t a1)
{
  return sub_2392F60F8(a1, &qword_25692A8D8, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__state, &qword_25692A8D0);
}

double sub_2392F4EF0()
{
  _OWORD *v0;
  double result;

  v0 = (_OWORD *)swift_allocObject();
  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[6] = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  return result;
}

uint64_t ObjectCaptureSession.observingPublishers.getter()
{
  return swift_retain();
}

double ObjectCaptureSessionWritingPublishers.__allocating_init()()
{
  _OWORD *v0;
  double result;

  v0 = (_OWORD *)swift_allocObject();
  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[6] = 0u;
  v0[7] = 0u;
  return result;
}

uint64_t ObjectCaptureSession.writingPublishers.getter()
{
  return swift_retain();
}

uint64_t sub_2392F4F78@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x450))();
  *a2 = result;
  return result;
}

uint64_t sub_2392F4FB8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_2392F5020()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_2392F5068(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t sub_2392F50B8@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x468))();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2392F5100(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  swift_beginAccess();
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  return sub_2392F5160();
}

uint64_t sub_2392F5160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  result = swift_beginAccess();
  if ((*(_BYTE *)(v5 + 8) & 1) == 0)
  {
    v7 = *(double *)v5;
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v19 = v12;
      *(_DWORD *)v11 = 136380931;
      v18 = sub_23925F3EC(0xD00000000000001BLL, 0x800000023935EC80, &v19);
      sub_2393526B0();
      *(_WORD *)(v11 + 12) = 2082;
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_239354060;
      v14 = MEMORY[0x24BEE1448];
      *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(v13 + 64) = v14;
      *(double *)(v13 + 32) = v7 / 60.0;
      v15 = sub_239352308();
      v18 = sub_23925F3EC(v15, v16, &v19);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: Estimated reconstruction time for this capturing session is %{public}s minutes", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v12, -1, -1);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_2392F53C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2392F540C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime;
  swift_beginAccess();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return sub_2392F5160();
}

uint64_t sub_2392F546C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x480))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2392F54B0(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable);
  swift_beginAccess();
  *v3 = v2;
  return sub_2392F5508();
}

uint64_t sub_2392F5508()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _DWORD v13[4];
  uint64_t v14;
  uint64_t v15;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = v0;
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136380931;
    v14 = sub_23925F3EC(0x6C467463656A626FLL, 0xEF656C6261707069, &v15);
    sub_2393526B0();
    *(_WORD *)(v9 + 12) = 1026;
    v11 = &v6[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable];
    swift_beginAccess();
    v13[3] = *v11;
    sub_2393526B0();

    _os_log_impl(&dword_23925B000, v7, v8, "ObjectCaptureSession.%{private}s: Object flippable state set to %{BOOL,public}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v10, -1, -1);
    MEMORY[0x23B83BC04](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_2392F5704()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2392F5748(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable);
  swift_beginAccess();
  *v3 = a1;
  return sub_2392F5508();
}

uint64_t sub_2392F579C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x498))();
  *a2 = result & 1;
  return result;
}

_BYTE *sub_2392F57E0(_BYTE *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2392F5A78(a1, a2, a3, a4, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
}

uint64_t sub_2392F57EC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2392F5830(uint64_t a1)
{
  return sub_2392F5B20(a1, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
}

uint64_t sub_2392F583C()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = sub_239352170();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393521C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(_QWORD *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_2393316D0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC6AC8;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_239352188();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v2, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_2392F5A28@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x4B8))();
  *a2 = result & 1;
  return result;
}

_BYTE *sub_2392F5A6C(_BYTE *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2392F5A78(a1, a2, a3, a4, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
}

_BYTE *sub_2392F5A78(_BYTE *result, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _BYTE *v5;

  if (*result == 1)
  {
    v5 = (_BYTE *)(*a2 + *a5);
    result = (_BYTE *)swift_beginAccess();
    *v5 = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2392F5AD0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2392F5B14(uint64_t a1)
{
  return sub_2392F5B20(a1, &OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
}

uint64_t sub_2392F5B20(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  _BYTE *v3;

  if ((result & 1) != 0)
  {
    v3 = (_BYTE *)(v2 + *a2);
    result = swift_beginAccess();
    *v3 = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2392F5B6C@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x4D0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_2392F5BB0(uint64_t a1, void **a2)
{
  void *v2;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  sub_239352128();
  return sub_2392F5C28();
}

uint64_t sub_2392F5C28()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = v0;
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136380931;
    v13 = sub_23925F3EC(0xD000000000000011, 0x8000000239360C30, &v14);
    v11 = sub_2393526B0();
    *(_WORD *)(v9 + 12) = 1026;
    LOBYTE(v13) = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v6) + 0x4D0))(v11) & 1;
    LODWORD(v13) = v13;
    sub_2393526B0();

    _os_log_impl(&dword_23925B000, v7, v8, "ObjectCaptureSession.%{private}s: Set can take manual shot = %{BOOL,public}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v10, -1, -1);
    MEMORY[0x23B83BC04](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_2392F5E18()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23935211C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2392F5E88()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  sub_239352128();
  return sub_2392F5C28();
}

uint64_t sub_2392F5EF8(_QWORD **a1)
{
  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **a1) + 0x4E8))();
}

uint64_t sub_2392F5F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2392F5F4C(a1, a2, a3, a4, &qword_25692A900, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot, &qword_25692A8F8);
}

uint64_t sub_2392F5F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v9 = sub_23925FB08(a5);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  sub_23925FB08(a7);
  sub_239352110();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_2392F6064()
{
  return sub_2392F6078((uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot, &qword_25692A8F8);
}

uint64_t sub_2392F6078(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  sub_23925FB08(a2);
  sub_239352104();
  return swift_endAccess();
}

uint64_t sub_2392F60DC(uint64_t a1)
{
  return sub_2392F60F8(a1, &qword_25692A900, (uint64_t)&OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot, &qword_25692A8F8);
}

uint64_t sub_2392F60F8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = sub_23925FB08(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  sub_23925FB08(a4);
  sub_239352110();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

id ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_2393332B8(a1, a2, a3, a4);

  swift_unknownObjectRelease();
  return v10;
}

id ObjectCaptureSession.init(arSession:mtlDevice:motionManager:snapshotURL:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;

  v6 = sub_2393332B8(a1, a2, a3, a4);

  swift_unknownObjectRelease();
  return v6;
}

id ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:configuration:)(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_239334234(a1, a2, a3, a4, a5);

  swift_unknownObjectRelease();
  return v12;
}

id ObjectCaptureSession.init(arSession:mtlDevice:motionManager:snapshotURL:configuration:)(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  id v7;

  v7 = sub_239334234(a1, a2, a3, a4, a5);

  swift_unknownObjectRelease();
  return v7;
}

id ObjectCaptureSession.__deallocating_deinit()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  char *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(unint64_t, unint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_super v33;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351FD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v10 = type metadata accessor for MemoryLogger();
  v29 = *(void (**)(unint64_t, unint64_t))(v10 + 88);
  v30 = v10;
  v29(0xD00000000000002CLL, 0x800000023935E5A0);
  sub_23931207C();
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
  if (v11)
  {
    v12 = *(void (**)(uint64_t))(*(_QWORD *)v11 + 632);
    v13 = swift_retain();
    v12(v13);
    swift_release();
  }
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v14, sel_removeObserver_name_object_, v1, *MEMORY[0x24BDD1168], 0);

  v15 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
  v16 = sub_239352098();
  v17 = v5;
  v18 = sub_239352578();
  if (os_log_type_enabled(v16, v18))
  {
    v19 = swift_slowAlloc();
    v28 = v17;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v27 = v3;
    v22 = v21;
    v32 = v21;
    v26 = v2;
    *(_DWORD *)v20 = 136380675;
    v31 = sub_23925F3EC(0x74696E696564, 0xE600000000000000, &v32);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v16, v18, "ObjectCaptureSession.%{private}s: Session was destroyed.", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v22, -1, -1);
    MEMORY[0x23B83BC04](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v2);
  }
  v29(0xD00000000000002FLL, 0x800000023935E5D0);
  sub_23930CBD4((uint64_t)v9, MEMORY[0x24BEE7908], 0x74696E696564, 0xE600000000000000, "ObjectCaptureSession.%{private}s takes time = %{public}s ms");
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = (objc_class *)type metadata accessor for ObjectCaptureSession(0);
  v33.receiver = v1;
  v33.super_class = v23;
  return objc_msgSendSuper2(&v33, sel_dealloc);
}

uint64_t sub_2392F6A28()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351FD8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B8))(v8);
  if ((result & 1) != 0
    && (*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID) & 0x8000000000000000) == 0)
  {
    __break(1u);
  }
  else
  {
    sub_239351FB4();
    v12 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
    v13 = sub_239352098();
    v14 = sub_239352578();
    if (os_log_type_enabled(v13, v14))
    {
      v22 = v2;
      v15 = swift_slowAlloc();
      v24 = v6;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc();
      v23 = v7;
      v18 = v17;
      v26 = v17;
      *(_DWORD *)v16 = 136380675;
      v25 = sub_23925F3EC(0x29286E7572, 0xE500000000000000, &v26);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v13, v14, "ObjectCaptureSession.%{private}s: Called run().", v16, 0xCu);
      swift_arrayDestroy();
      v19 = v18;
      v7 = v23;
      MEMORY[0x23B83BC04](v19, -1, -1);
      v20 = v16;
      v6 = v24;
      MEMORY[0x23B83BC04](v20, -1, -1);

      v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v22);
    }
    else
    {

      v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    MEMORY[0x24BDAC7A8](v21);
    *(&v22 - 2) = (uint64_t)v10;
    *(&v22 - 1) = (uint64_t)v1;
    sub_2393525F0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v26;
  }
  return result;
}

uint64_t sub_2392F6CC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char v20;
  void *v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v41 - v12;
  v14 = *(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0x420);
  v14(&v46, v11);
  if (v46 == 10)
  {
    sub_239331658((id)0xA);
    v15 = 10;
  }
  else
  {
    sub_239331658((id)v46);
    sub_239331658((id)0xA);
    ((void (*)(uint64_t *__return_ptr))v14)(&v46);
    if (v46 != 13)
    {
      v44 = a3;
      sub_239331658((id)v46);
      sub_239331658((id)0xD);
      v31 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v31, v6);
      v32 = a2;
      v33 = sub_239352098();
      v34 = sub_23935256C();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v46 = v42;
        *(_DWORD *)v35 = 136380931;
        v45 = sub_23925F3EC(0x29286E7572, 0xE500000000000000, &v46);
        v36 = sub_2393526B0();
        *(_WORD *)(v35 + 12) = 2082;
        v43 = a1;
        v14(&v45, v36);
        v37 = sub_23935232C();
        v45 = sub_23925F3EC(v37, v38, &v46);
        a1 = v43;
        sub_2393526B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v33, v34, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v35, 0x16u);
        v39 = v42;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v39, -1, -1);
        MEMORY[0x23B83BC04](v35, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      v23 = 0;
      a3 = v44;
      goto LABEL_20;
    }
    sub_239331658((id)0xD);
    v15 = 13;
  }
  sub_239331658((id)v15);
  ((void (*)(uint64_t *__return_ptr))v14)(&v46);
  if (v46 == 13)
  {
    sub_239331658((id)0xD);
    sub_239331658((id)0xD);
    sub_239314308();
  }
  else
  {
    sub_239331658((id)v46);
    sub_239331658((id)0xD);
  }
  sub_23930D3BC();
  v17 = v16;
  v18 = sub_23930E664(v16);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(*(id *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_runWithConfiguration_options_, v18, 0);
    v20 = sub_23931446C();
    if ((v20 & 1) != 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23935211C();
      swift_release();
      swift_release();
      v21 = (void *)v46;
      swift_getKeyPath();
      swift_getKeyPath();
      v46 = 11;
      v22 = a2;
      sub_239352128();
      v46 = (uint64_t)v21;
      sub_2392F48FC((void **)&v46);
      sub_239331658(v21);
    }

    v23 = v20 & 1;
  }
  else
  {
    v24 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v24, v6);
    v25 = sub_239352098();
    v26 = sub_23935256C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v43 = a1;
      v29 = v28;
      v46 = v28;
      v44 = a3;
      *(_DWORD *)v27 = 136380675;
      v45 = sub_23925F3EC(0x29286E7572, 0xE500000000000000, &v46);
      a3 = v44;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v25, v26, "ObjectCaptureSession.%{private}s: Failed to configure AR session!", v27, 0xCu);
      swift_arrayDestroy();
      v30 = v29;
      a1 = v43;
      MEMORY[0x23B83BC04](v30, -1, -1);
      MEMORY[0x23B83BC04](v27, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v23 = 0;
  }
LABEL_20:
  *a3 = v23;
  return sub_23930CBD4(a1, MEMORY[0x24BEE7908], 0x29286E7572, 0xE500000000000000, "ObjectCaptureSession.%{private}s: run() takes time = %{public}s ms");
}

uint64_t sub_2392F721C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x520))(1);
}

uint64_t sub_2392F723C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  LODWORD(v3) = a1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239351FD8();
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v11 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  v12 = sub_239352098();
  v13 = sub_239352578();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v22 = v3;
    v3 = v14;
    v15 = swift_slowAlloc();
    v21 = v8;
    v16 = v15;
    v25 = v15;
    *(_DWORD *)v3 = 136380931;
    v24 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, &v25);
    sub_2393526B0();
    *(_WORD *)(v3 + 12) = 1026;
    LODWORD(v24) = v22 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v12, v13, "ObjectCaptureSession.%{private}s: Called pause(fastResuming: %{BOOL,public}d!", (uint8_t *)v3, 0x12u);
    swift_arrayDestroy();
    v17 = v16;
    v8 = v21;
    MEMORY[0x23B83BC04](v17, -1, -1);
    v18 = v3;
    LOBYTE(v3) = v22;
    MEMORY[0x23B83BC04](v18, -1, -1);
  }

  v19 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  MEMORY[0x24BDAC7A8](v19);
  *(&v21 - 4) = (uint64_t)v10;
  *((_BYTE *)&v21 - 24) = v3 & 1;
  *(&v21 - 2) = v2;
  sub_2393525F0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  return v25;
}

uint64_t sub_2392F74D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void (**v36)(char *, uint64_t, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  char v41;
  char v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void (*v58)(uint64_t *__return_ptr, uint64_t);
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  void (**v63)(char *, uint64_t, uint64_t);
  void *v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  _BOOL4 v72;
  uint8_t *v73;
  void *v74;
  void *v75;
  void (**v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  void *v81;
  void *v82;
  double *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t result;
  double v88;
  uint64_t v89;
  _QWORD *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint8_t *v96;
  double *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  void (**v101)(char *, uint64_t, uint64_t);
  char *v102;
  uint64_t v103;
  void *v104[3];
  uint64_t v105;

  v102 = a4;
  v7 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v7);
  v97 = (double *)((char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_2393520B0();
  v10 = *(void (***)(char *, uint64_t, uint64_t))(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v96 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v98 = (char *)&v96 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v99 = (char *)&v96 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v96 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v96 - v24;
  if ((a2 & 1) != 0)
  {
    v26 = sub_2392FE2C0();
    if ((v26 & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v100 = a1;
    v101 = v10;
    v27 = v9;
    v28 = *(void **)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
    v29 = objc_msgSend(v28, sel_configuration);
    if (v29)
    {
      v30 = v29;
      objc_opt_self();
      v31 = swift_dynamicCastObjCClass();

      if (v31)
        goto LABEL_8;
    }
    v32 = objc_msgSend(v28, sel_configuration);
    if (v32)
    {
      v33 = v32;
      objc_opt_self();
      v34 = swift_dynamicCastObjCClass();

      if (v34)
      {
LABEL_8:
        v35 = sub_239275A60();
        v36 = v101;
        v101[2](v25, v35, v27);
        v37 = sub_239352098();
        v38 = sub_23935256C();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc();
          v40 = (void *)swift_slowAlloc();
          v104[0] = v40;
          *(_DWORD *)v39 = 136380675;
          v105 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, (uint64_t *)v104);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v37, v38, "ObjectCaptureSession.%{private}s: Pause is not supported in ARRecordingConfiguration or ARReplayConfiguration!", v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v40, -1, -1);
          MEMORY[0x23B83BC04](v39, -1, -1);

          ((void (*)(char *, uint64_t))v36[1])(v25, v27);
          v41 = 0;
LABEL_30:
          a1 = v100;
          v62 = v102;
          goto LABEL_35;
        }

        ((void (*)(char *, uint64_t))v36[1])(v25, v27);
        v41 = 0;
LABEL_33:
        a1 = v100;
        goto LABEL_34;
      }
    }
    v42 = sub_2392FE2C0();
    a1 = v100;
    v10 = v101;
    v9 = v27;
    if ((v42 & 1) == 0)
    {
LABEL_13:
      v49 = sub_239275A60();
      v10[2](v13, v49, v9);
      v50 = (char *)v9;
      v51 = a3;
      v52 = sub_239352098();
      v53 = sub_23935256C();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = a1;
        v55 = swift_slowAlloc();
        v56 = (void *)swift_slowAlloc();
        v104[0] = v56;
        *(_DWORD *)v55 = 136380931;
        v105 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, (uint64_t *)v104);
        v57 = sub_2393526B0();
        *(_WORD *)(v55 + 12) = 2082;
        v99 = v50;
        v58 = *(void (**)(uint64_t *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v51) + 0x420);
        v101 = v10;
        v58(&v105, v57);
        v59 = sub_23935232C();
        v105 = sub_23925F3EC(v59, v60, (uint64_t *)v104);
        sub_2393526B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v52, v53, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v55, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v56, -1, -1);
        v61 = v55;
        a1 = v54;
        MEMORY[0x23B83BC04](v61, -1, -1);

        ((void (*)(char *, char *))v101[1])(v13, v99);
        v41 = 0;
        v62 = v102;
LABEL_35:
        *v62 = v41;
        return sub_23930CBD4(a1, MEMORY[0x24BEE7928], 0xD000000000000014, 0x800000023935E600, "ObjectCaptureSession.%{private}s: pause() takes time = %{public}s ms");
      }

      ((void (*)(char *, char *))v10[1])(v13, v50);
      v41 = 0;
      goto LABEL_34;
    }
    v43 = sub_239275A60();
    v10[2](v23, v43, v27);
    v44 = sub_239352098();
    v45 = sub_239352578();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (void *)swift_slowAlloc();
      v104[0] = v47;
      *(_DWORD *)v46 = 136380675;
      a1 = v100;
      v96 = v46 + 4;
      v105 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, (uint64_t *)v104);
      v9 = v27;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v44, v45, "ObjectCaptureSession.%{private}s: ARSession is paused.", v46, 0xCu);
      swift_arrayDestroy();
      v48 = v47;
      v10 = v101;
      MEMORY[0x23B83BC04](v48, -1, -1);
      MEMORY[0x23B83BC04](v46, -1, -1);
    }

    ((void (*)(char *, uint64_t))v10[1])(v23, v27);
    v26 = (uint64_t)objc_msgSend(*(id *)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_pause);
  }
  v63 = v10;
  (*(void (**)(void **__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a3) + 0x420))(v104, v26);
  v64 = *(void **)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause);
  *(_QWORD *)((char *)a3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause) = v104[0];
  sub_239331658(v64);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23935211C();
  swift_release();
  swift_release();
  v65 = v104[0];
  swift_getKeyPath();
  swift_getKeyPath();
  v104[0] = (void *)13;
  v66 = a3;
  sub_239352128();
  v104[0] = v65;
  sub_2392F48FC(v104);
  sub_239331658(v65);
  if (*((_BYTE *)v66 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled) != 1)
  {
    v77 = sub_239275A60();
    v63[2](v16, v77, v9);
    v78 = sub_239352098();
    v79 = sub_239352578();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = (void *)swift_slowAlloc();
      v101 = v63;
      v82 = v81;
      v104[0] = v81;
      *(_DWORD *)v80 = 136380675;
      v105 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, (uint64_t *)v104);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v78, v79, "ObjectCaptureSession.%{private}s: Couldn't set shouldWaitForPoseCorrectionUsingMobileSfM because mobileSfM based pose correction is not enabled!", v80, 0xCu);
      v41 = 1;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v82, -1, -1);
      MEMORY[0x23B83BC04](v80, -1, -1);

      ((void (*)(char *, uint64_t))v101[1])(v16, v9);
      v62 = v102;
      goto LABEL_35;
    }

    ((void (*)(char *, uint64_t))v63[1])(v16, v9);
    v41 = 1;
LABEL_34:
    v62 = v102;
    goto LABEL_35;
  }
  sub_2392F81E4();
  *((_BYTE *)v66 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) = 1;
  v67 = sub_239275A60();
  v68 = v63[2];
  v69 = v99;
  v68(v99, v67, v9);
  v70 = sub_239352098();
  v71 = sub_239352578();
  v72 = os_log_type_enabled(v70, v71);
  v100 = a1;
  if (v72)
  {
    v73 = (uint8_t *)swift_slowAlloc();
    v74 = (void *)swift_slowAlloc();
    v101 = v63;
    v75 = v74;
    v104[0] = v74;
    *(_DWORD *)v73 = 136380675;
    v105 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, (uint64_t *)v104);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v70, v71, "ObjectCaptureSession.%{private}s: Set shouldWaitForPoseCorrectionUsingMobileSfM.", v73, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v75, -1, -1);
    MEMORY[0x23B83BC04](v73, -1, -1);

    v76 = (void (**)(char *, uint64_t, uint64_t))v101[1];
    ((void (*)(char *, uint64_t))v76)(v99, v9);
  }
  else
  {

    v76 = (void (**)(char *, uint64_t, uint64_t))v63[1];
    ((void (*)(char *, uint64_t))v76)(v69, v9);
  }
  v83 = v97;
  v84 = v98;
  v85 = (uint64_t)v66 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
  swift_beginAccess();
  sub_23926059C(v85, (uint64_t)v83, (uint64_t *)&unk_25692A910);
  v86 = type metadata accessor for ObjectCaptureSession.Frame(0);
  result = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v83, 1, v86);
  if ((_DWORD)result != 1)
  {
    v88 = *v83 * 1000.0;
    result = sub_2392688AC((uint64_t)v83, type metadata accessor for ObjectCaptureSession.Frame);
    if ((~*(_QWORD *)&v88 & 0x7FF0000000000000) != 0)
    {
      if (v88 > -9.22337204e18)
      {
        if (v88 < 9.22337204e18)
        {
          v89 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
          *(_QWORD *)((char *)v66 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection) = (uint64_t)v88;
          v68(v84, v67, v9);
          v90 = v66;
          v91 = sub_239352098();
          v92 = sub_239352578();
          if (os_log_type_enabled(v91, v92))
          {
            v93 = swift_slowAlloc();
            v94 = swift_slowAlloc();
            v101 = v76;
            v95 = v94;
            v105 = v94;
            *(_DWORD *)v93 = 136380931;
            v103 = sub_23925F3EC(0xD000000000000014, 0x800000023935E600, &v105);
            v99 = (char *)v9;
            sub_2393526B0();
            *(_WORD *)(v93 + 12) = 2050;
            v103 = *(_QWORD *)((char *)v66 + v89);
            sub_2393526B0();

            _os_log_impl(&dword_23925B000, v91, v92, "ObjectCaptureSession.%{private}s: Set pauseTimeForPoseCorrection = %{public}ld", (uint8_t *)v93, 0x16u);
            v41 = 1;
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v95, -1, -1);
            MEMORY[0x23B83BC04](v93, -1, -1);

            ((void (*)(char *, char *))v101)(v98, v99);
            goto LABEL_30;
          }

          ((void (*)(char *, uint64_t))v76)(v84, v9);
          v41 = 1;
          goto LABEL_33;
        }
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2392F81E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v4 = sub_239352200();
  result = swift_release();
  if ((v4 & 1) == 0)
  {
    swift_retain();
    sub_239352218();
    swift_release();
    v6 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    v7 = sub_239352098();
    v8 = sub_239352578();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v12 = v10;
      *(_DWORD *)v9 = 136380675;
      v11 = sub_23925F3EC(0xD000000000000022, 0x80000002393605E0, &v12);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v7, v8, "ObjectCaptureSession.%{private}s: Cancelled existing pose correction timer.", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v10, -1, -1);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_2392F83C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351FD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v10 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v23 = v1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v22 = v6;
    v16 = v15;
    v25 = v15;
    v21 = v7;
    *(_DWORD *)v14 = 136380675;
    v24 = sub_23925F3EC(0x2928656D75736572, 0xE800000000000000, &v25);
    v7 = v21;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v11, v12, "ObjectCaptureSession.%{private}s: Called resume().", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    v6 = v22;
    MEMORY[0x23B83BC04](v17, -1, -1);
    v18 = v14;
    v1 = v23;
    MEMORY[0x23B83BC04](v18, -1, -1);
  }

  v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  MEMORY[0x24BDAC7A8](v19);
  *(&v21 - 2) = (uint64_t)v9;
  *(&v21 - 1) = v1;
  sub_2393525F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v25;
}

uint64_t sub_2392F8618@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(void **__return_ptr, uint64_t);
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  char *v56;
  void *v57;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void *v68;

  v65 = a1;
  v66 = a3;
  v4 = sub_2393521F4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v59 - v9;
  v11 = sub_2393520B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v59 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v59 - v19;
  v21 = *(void (**)(void **__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0x420);
  v21(&v68, v18);
  if (v68 == (void *)13)
  {
    v63 = v12;
    v64 = v11;
    sub_239331658((id)0xD);
    sub_239331658((id)0xD);
    sub_23930D3BC();
    v23 = v22;
    v24 = sub_23930E664(v22);
    if (v24)
    {
      v60 = v24;
      v61 = v23;
      objc_msgSend(*(id *)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_runWithConfiguration_options_, v24, 0);
      v25 = *(void **)((char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_239341BF8(v25);
      sub_23935211C();
      swift_release();
      swift_release();
      v26 = v68;
      swift_getKeyPath();
      swift_getKeyPath();
      v68 = v25;
      v27 = a2;
      sub_239352128();
      v68 = v26;
      sub_2392F48FC(&v68);
      sub_239331658(v26);
      if ((*((_BYTE *)v27 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled) & 1) != 0)
      {
        sub_2392F81E4();
        *(_QWORD *)((char *)v27 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem) = sub_2392FD9C0();
        swift_release();
        sub_2393521DC();
        MEMORY[0x23B83A0EC](v8, 10.0);
        v28 = *(void (**)(char *, uint64_t))(v5 + 8);
        v28(v8, v4);
        swift_retain();
        sub_2393525CC();
        swift_release();
        v28(v10, v4);
        v29 = sub_239275A60();
        v31 = v62;
        v30 = v63;
        v32 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v29, v64);
        v33 = v27;
        v34 = sub_239352098();
        v35 = sub_239352578();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc();
          v37 = (void *)swift_slowAlloc();
          v68 = v37;
          *(_DWORD *)v36 = 136380931;
          v67 = sub_23925F3EC(0x2928656D75736572, 0xE800000000000000, (uint64_t *)&v68);
          sub_2393526B0();
          *(_WORD *)(v36 + 12) = 2050;
          v67 = 0x4024000000000000;
          sub_2393526B0();

          _os_log_impl(&dword_23925B000, v34, v35, "ObjectCaptureSession.%{private}s: Set set wait for pose correction timer to %{public}f seconds", (uint8_t *)v36, 0x16u);
          v38 = 1;
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v37, -1, -1);
          MEMORY[0x23B83BC04](v36, -1, -1);

          (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
          v38 = 1;
        }
      }
      else
      {

        v38 = 1;
      }
      goto LABEL_15;
    }
    v50 = sub_239275A60();
    v51 = v63;
    v52 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v17, v50, v64);
    v53 = sub_239352098();
    v54 = sub_23935256C();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = v23;
      v57 = (void *)swift_slowAlloc();
      v68 = v57;
      *(_DWORD *)v55 = 136380675;
      v67 = sub_23925F3EC(0x2928656D75736572, 0xE800000000000000, (uint64_t *)&v68);
      v49 = v65;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v53, v54, "ObjectCaptureSession.%{private}s: Failed to configure AR session!", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v57, -1, -1);
      MEMORY[0x23B83BC04](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
      goto LABEL_11;
    }

    (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
LABEL_14:
    v38 = 0;
LABEL_15:
    v49 = v65;
    goto LABEL_16;
  }
  sub_239331658(v68);
  sub_239331658((id)0xD);
  v39 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v20, v39, v11);
  v40 = a2;
  v41 = sub_239352098();
  v42 = sub_23935256C();
  v43 = v12;
  if (!os_log_type_enabled(v41, v42))
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    goto LABEL_14;
  }
  v44 = swift_slowAlloc();
  v45 = (void *)swift_slowAlloc();
  v68 = v45;
  *(_DWORD *)v44 = 136380931;
  v67 = sub_23925F3EC(0x2928656D75736572, 0xE800000000000000, (uint64_t *)&v68);
  v46 = sub_2393526B0();
  *(_WORD *)(v44 + 12) = 2082;
  v63 = v43;
  v64 = v11;
  v21((void **)&v67, v46);
  v47 = sub_23935232C();
  v67 = sub_23925F3EC(v47, v48, (uint64_t *)&v68);
  v49 = v65;
  sub_2393526B0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_23925B000, v41, v42, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v44, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v45, -1, -1);
  MEMORY[0x23B83BC04](v44, -1, -1);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v64);
LABEL_11:
  v38 = 0;
LABEL_16:
  *v66 = v38;
  return sub_23930CBD4(v49, MEMORY[0x24BEE7908], 0x2928656D75736572, 0xE800000000000000, "ObjectCaptureSession.%{private}s: resume() takes time = %{public}s ms");
}

uint64_t sub_2392F8DDC(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;

  v3 = v2;
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239351FD8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v14 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  v15 = sub_239352098();
  v16 = sub_239352578();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v27 = v3;
    v18 = v17;
    v19 = swift_slowAlloc();
    v26 = v10;
    v20 = v19;
    v29 = v19;
    *(_DWORD *)v18 = 136381187;
    v25 = v11;
    v28 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000011, 0x800000023935E620, &v29));
    sub_2393526B0();
    *(_WORD *)(v18 + 12) = 2050;
    v28 = a1;
    sub_2393526B0();
    *(_WORD *)(v18 + 22) = 2050;
    v11 = v25;
    v28 = a2;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: Called detectObject() with imagePoint = (%{public}f, %{public}f)", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    v21 = v20;
    v10 = v26;
    MEMORY[0x23B83BC04](v21, -1, -1);
    v22 = v18;
    v3 = v27;
    MEMORY[0x23B83BC04](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_239350E08();
  OCSignPostsAriadneDbgCode();
  v23 = kdebug_trace();
  MEMORY[0x24BDAC7A8](v23);
  *(&v25 - 4) = (uint64_t)v13;
  *(&v25 - 3) = v3;
  *((double *)&v25 - 2) = a1;
  *((double *)&v25 - 1) = a2;
  sub_2393525F0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v29;
}

uint64_t sub_2392F90A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(id *__return_ptr, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char v26;
  void *v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  id v52[3];

  v10 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2393520B0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v45 - v19;
  v21 = *(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0x420);
  v21(v52, v18);
  if (v52[0] == (id)12)
  {
    v48 = a3;
    sub_239331658((id)0xC);
    v22 = 12;
  }
  else
  {
    sub_239331658(v52[0]);
    sub_239331658((id)0xC);
    ((void (*)(id *__return_ptr))v21)(v52);
    if (v52[0] != (id)14)
    {
      v47 = a1;
      sub_239331658(v52[0]);
      sub_239331658((id)0xE);
      v35 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v35, v13);
      v36 = a2;
      v37 = sub_239352098();
      v38 = sub_23935256C();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v46 = (void *)swift_slowAlloc();
        v52[0] = v46;
        *(_DWORD *)v39 = 136380931;
        v51[0] = sub_23925F3EC(0xD000000000000011, 0x800000023935E620, (uint64_t *)v52);
        v40 = sub_2393526B0();
        *(_WORD *)(v39 + 12) = 2082;
        v48 = a3;
        v21((id *)v51, v40);
        v41 = sub_23935232C();
        v51[0] = sub_23925F3EC(v41, v42, (uint64_t *)v52);
        a3 = v48;
        sub_2393526B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v37, v38, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v39, 0x16u);
        v43 = v46;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v43, -1, -1);
        MEMORY[0x23B83BC04](v39, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      v29 = 0;
      a1 = v47;
      goto LABEL_15;
    }
    v48 = a3;
    sub_239331658((id)0xE);
    v22 = 14;
  }
  sub_239331658((id)v22);
  sub_239350E14();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v23 = (char *)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  *(_OWORD *)v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *((_OWORD *)v23 + 3) = 0u;
  v23[64] = 1;
  swift_beginAccess();
  v24 = (uint64_t)a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
  swift_beginAccess();
  sub_23926059C(v24, (uint64_t)v12, (uint64_t *)&unk_25692A910);
  v25 = (void *)swift_bridgeObjectRetain();
  sub_2392F9694(v25, (uint64_t)v12, a4, a5);
  LOBYTE(v24) = v26;
  swift_bridgeObjectRelease();
  sub_23925FE28((uint64_t)v12, (uint64_t *)&unk_25692A910);
  if ((v24 & 1) != 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23935211C();
    swift_release();
    swift_release();
    v27 = (void *)v50;
    swift_getKeyPath();
    swift_getKeyPath();
    v50 = 14;
    v28 = a2;
    sub_239352128();
    v50 = (uint64_t)v27;
    sub_2392F48FC((void **)&v50);
    sub_239331658(v27);
    v29 = 1;
  }
  else
  {
    v30 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v30, v13);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v50 = v34;
      *(_DWORD *)v33 = 136380675;
      v49 = sub_23925F3EC(0xD000000000000011, 0x800000023935E620, &v50);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v31, v32, "ObjectCaptureSession.%{private}s: Precheck failed!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v34, -1, -1);
      MEMORY[0x23B83BC04](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    v29 = 0;
  }
  a3 = v48;
LABEL_15:
  *a3 = v29;
  return sub_23930CBD4(a1, MEMORY[0x24BEE7908], 0xD000000000000011, 0x800000023935E620, "ObjectCaptureSession.%{private}s: detectObject() takes time = %{public}s ms");
}

void sub_2392F9694(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  void *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  char *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  __int128 v47;
  __int128 v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  float32x4_t v83;
  float32x4_t v84;
  void *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  BOOL v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  char *v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  uint64_t v130;
  float32x4_t v131;
  float32x4_t v132;
  float32x4_t v133;
  float32x4_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  id v141[3];
  id v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  _OWORD v147[2];
  __int128 v148;
  float32x4_t v149;
  char v150;
  _OWORD v151[3];

  v142 = a1;
  v143 = sub_2393520B0();
  v144 = *(_QWORD *)(v143 - 8);
  v7 = MEMORY[0x24BDAC7A8](v143);
  v9 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v131 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v131 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v141[0] = (char *)&v131 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v136 = (char *)&v131 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v138 = (char *)&v131 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v139 = (char *)&v131 - v22;
  v23 = sub_239352680();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23925FB08((uint64_t *)&unk_25692A910);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v137 = (uint64_t)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v131 - v29;
  v31 = type metadata accessor for ObjectCaptureSession.Frame(0);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23926059C(a2, (uint64_t)v30, (uint64_t *)&unk_25692A910);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v35(v30, 1, v31) == 1)
  {
    sub_23925FE28((uint64_t)v30, (uint64_t *)&unk_25692A910);
LABEL_12:
    v57 = sub_239275A60();
    v58 = v144;
    v59 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v9, v57, v143);
    v60 = sub_239352098();
    v61 = sub_23935256C();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      *(_QWORD *)&v151[0] = v63;
      *(_DWORD *)v62 = 136380675;
      *(_QWORD *)&v148 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, (uint64_t *)v151);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v60, v61, "ObjectCaptureSession.%{private}s: Invalid inputs!", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v63, -1, -1);
      MEMORY[0x23B83BC04](v62, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v59);
    return;
  }
  sub_2392C4FE0((uint64_t)v30, (uint64_t)v34, type metadata accessor for ObjectCaptureSession.Frame);
  v36 = (void *)*((_QWORD *)v34 + 2);
  if (!v36 || (v37 = (void *)*((_QWORD *)v34 + 3)) == 0)
  {
    sub_2392688AC((uint64_t)v34, type metadata accessor for ObjectCaptureSession.Frame);
    goto LABEL_12;
  }
  v38 = *(int *)(v31 + 32);
  v135 = v34;
  v39 = &v34[v38];
  type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v40 = sub_239352674();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v25, 2, 2, v40);
  v41 = v36;
  v42 = v37;
  v43 = sub_239352668();
  sub_2392688AC((uint64_t)v25, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  if ((v43 & 1) == 0)
  {
    v64 = sub_239275A60();
    v65 = v144;
    v66 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v12, v64, v143);
    v67 = sub_239352098();
    v68 = sub_23935256C();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      v70 = swift_slowAlloc();
      v142 = v41;
      v71 = v70;
      *(_QWORD *)&v151[0] = v70;
      *(_DWORD *)v69 = 136380675;
      *(_QWORD *)&v148 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, (uint64_t *)v151);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v67, v68, "ObjectCaptureSession.%{private}s: Camera tracking state is not normal, not setting tap point!", v69, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v71, -1, -1);
      MEMORY[0x23B83BC04](v69, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v12, v66);
    goto LABEL_26;
  }
  v44 = (uint64_t)v142;
  v45 = v144;
  if (!*((_QWORD *)v142 + 2))
  {
    v72 = sub_239275A60();
    v73 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v15, v72, v143);
    v74 = sub_239352098();
    v75 = sub_23935256C();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = swift_slowAlloc();
      v142 = v41;
      v78 = v77;
      *(_QWORD *)&v151[0] = v77;
      *(_DWORD *)v76 = 136380675;
      *(_QWORD *)&v148 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, (uint64_t *)v151);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v74, v75, "ObjectCaptureSession.%{private}s: No planes available!", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v78, -1, -1);
      MEMORY[0x23B83BC04](v76, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v73);
LABEL_26:
    sub_2392688AC((uint64_t)v135, type metadata accessor for ObjectCaptureSession.Frame);
    return;
  }
  v46 = (void *)*((_QWORD *)v135 + 1);
  v47 = *((_OWORD *)v39 + 1);
  v151[0] = *(_OWORD *)v39;
  v151[1] = v47;
  v48 = *((_OWORD *)v39 + 2);
  v134 = *((float32x4_t *)v39 + 3);
  v151[2] = v48;
  v133 = *((float32x4_t *)v39 + 4);
  v132 = *((float32x4_t *)v39 + 5);
  v131 = *((float32x4_t *)v39 + 6);
  v49 = v46;
  sub_23926C138((uint64_t)&v148, a3, a4);
  if (!sub_23926C14C((__CVBuffer *)v49, (__CVBuffer *)v41, (__CVBuffer *)v42, (uint64_t)v151, v134, v133, v132, v131)
    || (v150 & 1) != 0)
  {
    v50 = sub_239275A60();
    v51 = (uint64_t)v141[0];
    v52 = v143;
    (*(void (**)(id, uint64_t, uint64_t))(v45 + 16))(v141[0], v50, v143);
    v53 = sub_239352098();
    v54 = sub_23935256C();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      *(_QWORD *)&v147[0] = v56;
      *(_DWORD *)v55 = 136380675;
      *(_QWORD *)&v145 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, (uint64_t *)v147);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v53, v54, "ObjectCaptureSession.%{private}s: Failed to compute tap position in world, resetting the old tap position!", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v56, -1, -1);
      MEMORY[0x23B83BC04](v55, -1, -1);

      (*(void (**)(id, uint64_t))(v144 + 8))(v141[0], v52);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v52);
    }
    v79 = (uint64_t)v135;
    v80 = v140;
LABEL_23:
    v81 = &v80[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
    *((_WORD *)v81 + 16) = 256;
    *(_OWORD *)v81 = 0u;
    *((_OWORD *)v81 + 1) = 0u;
    sub_2392FE7A0();

    sub_2392688AC(v79, type metadata accessor for ObjectCaptureSession.Frame);
    v82 = &v80[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
    *(_OWORD *)v82 = 0u;
    *((_OWORD *)v82 + 1) = 0u;
    *((_OWORD *)v82 + 2) = 0u;
    *((_OWORD *)v82 + 3) = 0u;
    v82[64] = 1;
    return;
  }
  v83 = v149;
  v84 = v149;
  v80 = v140;
  if (v140[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition] == 1)
  {
    *(float32x4_t *)v141 = v149;
    sub_239326D94();
    v147[0] = v83;
    sub_2393520D4();
    swift_release();
    v84 = *(float32x4_t *)v141;
  }
  sub_2393354F4(v44, v84);
  v86 = v85;

  if (!v86)
  {
    v118 = sub_239275A60();
    v119 = v144;
    v120 = v136;
    v121 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v144 + 16))(v136, v118, v143);
    v122 = sub_239352098();
    v123 = sub_23935256C();
    if (os_log_type_enabled(v122, v123))
    {
      v141[0] = v49;
      v124 = (uint8_t *)swift_slowAlloc();
      v125 = swift_slowAlloc();
      *(_QWORD *)&v147[0] = v125;
      v142 = v41;
      *(_DWORD *)v124 = 136380675;
      *(_QWORD *)&v145 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, (uint64_t *)v147);
      v49 = v141[0];
      v41 = v142;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v122, v123, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below tap position, resetting the old tap position!", v124, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v125, -1, -1);
      MEMORY[0x23B83BC04](v124, -1, -1);

      (*(void (**)(char *, uint64_t))(v119 + 8))(v136, v121);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v121);
    }
    v79 = (uint64_t)v135;
    goto LABEL_23;
  }
  v141[0] = v49;
  v136 = v42;
  v142 = v41;
  v87 = (uint64_t)&v80[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
  *(_OWORD *)v87 = v148;
  *(float32x4_t *)(v87 + 16) = v83;
  v134.i64[0] = v87;
  *(_WORD *)(v87 + 32) = 0;
  sub_2392FE7A0();
  v88 = (uint64_t)&v80[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  swift_beginAccess();
  v89 = v88;
  v90 = v137;
  sub_23926059C(v89, v137, (uint64_t *)&unk_25692A910);
  v91 = v35((char *)v90, 1, v31);
  v92 = v90;
  v93 = 0;
  v94 = 0;
  v95 = 0;
  v96 = 0;
  v97 = 0;
  v98 = 0;
  v99 = 0;
  v100 = v80;
  v101 = 0;
  if (!v91)
  {
    v102 = (_QWORD *)(v92 + *(int *)(v31 + 32));
    v93 = v102[6];
    v94 = v102[7];
    v95 = v102[8];
    v96 = v102[9];
    v97 = v102[10];
    v98 = v102[11];
    v99 = v102[12];
    v101 = v102[13];
  }
  v103 = v91 != 0;
  sub_23925FE28(v92, (uint64_t *)&unk_25692A910);
  v104 = &v100[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
  *(_QWORD *)v104 = v93;
  *((_QWORD *)v104 + 1) = v94;
  *((_QWORD *)v104 + 2) = v95;
  *((_QWORD *)v104 + 3) = v96;
  *((_QWORD *)v104 + 4) = v97;
  *((_QWORD *)v104 + 5) = v98;
  *((_QWORD *)v104 + 6) = v99;
  *((_QWORD *)v104 + 7) = v101;
  v104[64] = v103;
  v105 = sub_239275A60();
  v106 = v144;
  v107 = *(void (**)(char *, uint64_t, uint64_t))(v144 + 16);
  v108 = v139;
  v109 = v143;
  v107(v139, v105, v143);
  v110 = v100;
  v111 = sub_239352098();
  v112 = sub_239352578();
  if (os_log_type_enabled(v111, v112))
  {
    v113 = swift_slowAlloc();
    v114 = swift_slowAlloc();
    v146 = v114;
    *(_DWORD *)v113 = 136380931;
    *(_QWORD *)&v145 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, &v146);
    sub_2393526B0();
    *(_WORD *)(v113 + 12) = 2082;
    if ((*(_BYTE *)(v134.i64[0] + 33) & 1) != 0)
    {

      __break(1u);
      return;
    }
    v145 = *(_OWORD *)v134.i64[0];
    type metadata accessor for CGPoint();
    v115 = sub_23935232C();
    *(_QWORD *)&v145 = sub_23925F3EC(v115, v116, &v146);
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v111, v112, "ObjectCaptureSession.%{private}s: Set tap position with image point %{public}s.", (uint8_t *)v113, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v114, -1, -1);
    MEMORY[0x23B83BC04](v113, -1, -1);

    v117 = *(void (**)(char *, uint64_t))(v144 + 8);
    v109 = v143;
    v117(v139, v143);
  }
  else
  {

    v117 = *(void (**)(char *, uint64_t))(v106 + 8);
    v117(v108, v109);
  }
  v126 = v138;
  v107(v138, v105, v109);
  v127 = sub_239352098();
  v128 = sub_239352578();
  if (os_log_type_enabled(v127, v128))
  {
    v129 = (uint8_t *)swift_slowAlloc();
    v130 = swift_slowAlloc();
    *(_QWORD *)&v145 = v130;
    *(_DWORD *)v129 = 136380675;
    v146 = sub_23925F3EC(0xD00000000000003CLL, 0x8000000239360A80, (uint64_t *)&v145);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v127, v128, "ObjectCaptureSession.%{private}s: Set initial camera transform.", v129, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v130, -1, -1);
    MEMORY[0x23B83BC04](v129, -1, -1);
  }

  v117(v126, v109);
  sub_2392688AC((uint64_t)v135, type metadata accessor for ObjectCaptureSession.Frame);
}

uint64_t sub_2392FA6BC(uint64_t a1)
{
  char *v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  char v10;
  uint64_t aBlock;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  uint64_t (*v15)();
  uint64_t v16;
  unsigned __int8 v17;

  v17 = 0;
  v3 = *(NSObject **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v17;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_239335288;
  *(_QWORD *)(v5 + 24) = v4;
  v15 = sub_239292018;
  v16 = v5;
  aBlock = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_23928562C;
  v14 = &unk_250AC6B40;
  v6 = _Block_copy(&aBlock);
  v7 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    LOWORD(aBlock) = v17;
    v12 = 100;
    v10 = (*(uint64_t (**)(uint64_t, uint64_t *))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v7) + 0x540))(a1, &aBlock);
    swift_release();
    return v10 & 1;
  }
  return result;
}

CoreOC::ObjectCaptureSession::CaptureOptions __swiftcall ObjectCaptureSession.CaptureOptions.init()()
{
  uint64_t v0;
  CoreOC::ObjectCaptureSession::CaptureOptions result;

  *(_WORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 100;
  return result;
}

uint64_t ObjectCaptureSession.CaptureOptions.usePlaneFiltering.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ObjectCaptureSession.CaptureOptions.usePlaneFiltering.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ObjectCaptureSession.CaptureOptions.usePlaneFiltering.modify())()
{
  return nullsub_1;
}

uint64_t ObjectCaptureSession.CaptureOptions.useFreeformScanVolume.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ObjectCaptureSession.CaptureOptions.useFreeformScanVolume.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ObjectCaptureSession.CaptureOptions.useFreeformScanVolume.modify())()
{
  return nullsub_1;
}

uint64_t ObjectCaptureSession.CaptureOptions.freeformPointDensityThreshold.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t ObjectCaptureSession.CaptureOptions.freeformPointDensityThreshold.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*ObjectCaptureSession.CaptureOptions.freeformPointDensityThreshold.modify())()
{
  return nullsub_1;
}

uint64_t sub_2392FA8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  char v9[8];
  uint64_t v10;
  unsigned __int8 v11[8];
  uint64_t v12;
  __n128 v13[4];
  char v14;

  v3 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  sub_239268764(a1, (uint64_t)v13, &qword_25692A8A0);
  if ((v14 & 1) != 0)
  {
    v6 = (_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled);
    swift_beginAccess();
    *v6 = 1;
    v9[0] = v3;
    v9[1] = v4;
    v10 = v5;
    v7 = sub_2393079C8(v9);
  }
  else
  {
    v11[0] = v3;
    v11[1] = v4;
    v12 = v5;
    v7 = sub_23930A15C(v11, v13[0], v13[1], v13[2], v13[3]);
  }
  return v7 & 1;
}

uint64_t sub_2392FA964()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351FD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v10 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v23 = v1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v22 = v6;
    v16 = v15;
    v25 = v15;
    v21 = v9;
    *(_DWORD *)v14 = 136380675;
    v24 = sub_23925F3EC(0x29286873696E6966, 0xE800000000000000, &v25);
    v9 = v21;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v11, v12, "ObjectCaptureSession.%{private}s: Called finish().", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    v6 = v22;
    MEMORY[0x23B83BC04](v17, -1, -1);
    v18 = v14;
    v1 = v23;
    MEMORY[0x23B83BC04](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_239350E38();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  sub_239350DA8();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v19 = sub_2393357D4(0xD000000000000017, 0x8000000239360980, "ObjectCaptureSession.%{private}s: pnp_measurement_window_end %{public}s");
  MEMORY[0x24BDAC7A8](v19);
  *(&v21 - 2) = v9;
  *(&v21 - 1) = v1;
  sub_2393525F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v25;
}

uint64_t sub_2392FAC24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t *__return_ptr);
  char v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_2392FE2C0() & 1) != 0)
    goto LABEL_4;
  v10 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & *a2) + 0x420);
  v10(&v27);
  if (v27 == 13)
  {
    sub_239331658((id)0xD);
    sub_239331658((id)0xD);
LABEL_4:
    v27 = 17;
    sub_239312660((void **)&v27);
    v11 = 1;
    goto LABEL_9;
  }
  sub_239331658((id)v27);
  sub_239331658((id)0xD);
  v12 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  v13 = a2;
  v14 = sub_239352098();
  v15 = sub_23935256C();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v17 = 136380931;
    v24 = v16;
    v26 = sub_23925F3EC(0x29286873696E6966, 0xE800000000000000, &v27);
    v18 = sub_2393526B0();
    *(_WORD *)(v17 + 12) = 2082;
    v23[1] = v17 + 14;
    ((void (*)(uint64_t *__return_ptr, uint64_t))v10)(&v26, v18);
    v19 = sub_23935232C();
    v26 = sub_23925F3EC(v19, v20, &v27);
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v14, (os_log_type_t)v24, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v17, 0x16u);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v21, -1, -1);
    MEMORY[0x23B83BC04](v17, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = 0;
LABEL_9:
  *a3 = v11;
  return sub_23930CBD4(a1, MEMORY[0x24BEE7908], 0x29286873696E6966, 0xE800000000000000, "ObjectCaptureSession.%{private}s: finish() takes time = %{public}s ms");
}

uint64_t sub_2392FAEE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_239351FD8();
  v6 = *(_QWORD *)(v30 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v30);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)&v26 - v9;
  sub_239351FB4();
  v10 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v26 = v2;
    v15 = v14;
    aBlock[0] = v14;
    v27 = v1;
    *(_DWORD *)v13 = 136380675;
    v31 = sub_23925F3EC(0x29286C65636E6163, 0xE800000000000000, aBlock);
    v1 = v27;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v11, v12, "ObjectCaptureSession.%{private}s: Called cancel()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v15, -1, -1);
    MEMORY[0x23B83BC04](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v16 = *(NSObject **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v17 = v28;
  v18 = v29;
  v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v28, v29, v30);
  v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, v17, v19);
  *(_QWORD *)(v21 + ((v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_239335AF4;
  *(_QWORD *)(v22 + 24) = v21;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC6BB8;
  v23 = _Block_copy(aBlock);
  v24 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v16, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v19);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v23 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2392FB248(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t *__return_ptr);
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_2392FE2C0() & 1) != 0)
    goto LABEL_4;
  v8 = *(void (**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & *a2) + 0x420);
  v8(&v22);
  if (v22 == 13)
  {
    sub_239331658((id)0xD);
    sub_239331658((id)0xD);
LABEL_4:
    v22 = 4;
    sub_239312660((void **)&v22);
    return sub_23930CBD4(a1, MEMORY[0x24BEE7908], 0x29286C65636E6163, 0xE800000000000000, "ObjectCaptureSession.%{private}s: cancel() takes time = %{public}s ms");
  }
  sub_239331658((id)v22);
  sub_239331658((id)0xD);
  v9 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v10 = a2;
  v11 = sub_239352098();
  v12 = sub_23935256C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    *(_DWORD *)v13 = 136380931;
    v21 = sub_23925F3EC(0x29286C65636E6163, 0xE800000000000000, &v22);
    v14 = sub_2393526B0();
    *(_WORD *)(v13 + 12) = 2082;
    v19 = v13 + 14;
    ((void (*)(uint64_t *__return_ptr, uint64_t))v8)(&v21, v14);
    v15 = sub_23935232C();
    v21 = sub_23925F3EC(v15, v16, &v22);
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v11, v12, "ObjectCaptureSession.%{private}s: Invalid state: %{public}s", (uint8_t *)v13, 0x16u);
    v17 = v20;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v17, -1, -1);
    MEMORY[0x23B83BC04](v13, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_23930CBD4(a1, MEMORY[0x24BEE7908], 0x29286C65636E6163, 0xE800000000000000, "ObjectCaptureSession.%{private}s: cancel() takes time = %{public}s ms");
}

uint64_t sub_2392FB4F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v0 = sub_239352170();
  v39 = *(_QWORD *)(v0 - 8);
  v40 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2393521C4();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239351FD8();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  v10 = *(_QWORD *)(v34 + 64);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v32 = (char *)&v30 - v12;
  sub_239351FB4();
  v13 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  v14 = sub_239352098();
  v15 = sub_239352578();
  if (os_log_type_enabled(v14, v15))
  {
    v30 = v2;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136380675;
    v41 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, aBlock);
    v2 = v30;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v14, v15, "ObjectCaptureSession.%{private}s: Called takeManualShot()", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v17, -1, -1);
    MEMORY[0x23B83BC04](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v33;
  v18 = v34;
  v30 = *(char **)&v33[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v20 = v31;
  v21 = v32;
  v22 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v35);
  v23 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v24 + v23, v20, v22);
  *(_QWORD *)(v24 + ((v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  aBlock[4] = (uint64_t)sub_239335B88;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC6C08;
  v25 = _Block_copy(aBlock);
  v26 = v19;
  v27 = v36;
  sub_239352188();
  v41 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  v28 = v40;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v27, v2, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v2, v28);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v38);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
  swift_release();
  return 1;
}

uint64_t sub_2392FB910(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  char v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint8_t *v40;
  void *v41;
  void *v42;
  const char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  _BOOL4 v58;
  void *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  id v69;

  v67 = a2;
  v64 = a1;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v60 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v60 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v60 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)&v60 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v60 - v18;
  v20 = sub_239275A60();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v65 = v20;
  v66 = v21;
  ((void (*)(char *))v21)(v19);
  v22 = sub_239352098();
  v23 = sub_239352560();
  if (os_log_type_enabled(v22, v23))
  {
    v60 = v9;
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = (void *)swift_slowAlloc();
    v61 = v12;
    v63 = v2;
    v26 = v25;
    v69 = v25;
    *(_DWORD *)v24 = 136380675;
    v68 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, (uint64_t *)&v69);
    v9 = v60;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v22, v23, "ObjectCaptureSession.%{private}s: Enter scheduled takeManualShot() block.", v24, 0xCu);
    swift_arrayDestroy();
    v27 = v26;
    v2 = v63;
    v12 = v61;
    MEMORY[0x23B83BC04](v27, -1, -1);
    MEMORY[0x23B83BC04](v24, -1, -1);
  }

  v28 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v29 = v28(v19, v2);
  v30 = v67;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v67) + 0x420))(&v69, v29);
  if (v69 == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    if ((sub_2392FE3C0() & 1) != 0)
    {
      v31 = *(_QWORD *)&v30[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager];
      if (v31)
      {
        v32 = swift_allocObject();
        *(_QWORD *)(v32 + 16) = v30;
        swift_retain();
        v33 = v30;
        v34 = sub_23929D47C();
        v35 = (*(uint64_t (**)(_QWORD, uint64_t (*)(), uint64_t))(*(_QWORD *)v31 + 488))(v34 & 1, sub_239342C74, v32);
        swift_release();
        if ((v35 & 1) != 0)
        {
          v66(v15, v65, v2);
          v36 = sub_239352098();
          v12 = v15;
          v37 = sub_239352578();
          v38 = os_log_type_enabled(v36, v37);
          v39 = v64;
          if (v38)
          {
            v40 = (uint8_t *)swift_slowAlloc();
            v41 = (void *)swift_slowAlloc();
            v63 = v2;
            v42 = v41;
            v69 = v41;
            *(_DWORD *)v40 = 136380675;
            v68 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, (uint64_t *)&v69);
            sub_2393526B0();
            v43 = "ObjectCaptureSession.%{private}s: Manual capture succeeded.";
LABEL_23:
            _os_log_impl(&dword_23925B000, v36, v37, v43, v40, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v42, -1, -1);
            MEMORY[0x23B83BC04](v40, -1, -1);

            swift_release();
            v28(v12, v63);
            return sub_2393009F4(v39, "=== ObjectCaptureSession takeManualShot() takes time = %{public}s ms");
          }
        }
        else
        {
          v66(v12, v65, v2);
          v36 = sub_239352098();
          v37 = sub_23935256C();
          v58 = os_log_type_enabled(v36, v37);
          v39 = v64;
          if (v58)
          {
            v40 = (uint8_t *)swift_slowAlloc();
            v59 = (void *)swift_slowAlloc();
            v63 = v2;
            v42 = v59;
            v69 = v59;
            *(_DWORD *)v40 = 136380675;
            v68 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, (uint64_t *)&v69);
            sub_2393526B0();
            v43 = "ObjectCaptureSession.%{private}s: Manual capture failed!";
            goto LABEL_23;
          }
        }

        swift_release();
        v28(v12, v2);
        return sub_2393009F4(v39, "=== ObjectCaptureSession takeManualShot() takes time = %{public}s ms");
      }
      v9 = v62;
      v66(v62, v65, v2);
      v51 = sub_239352098();
      v52 = sub_23935256C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = v2;
        v55 = (void *)swift_slowAlloc();
        v69 = v55;
        *(_DWORD *)v53 = 136380675;
        v68 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, (uint64_t *)&v69);
        sub_2393526B0();
        v56 = "ObjectCaptureSession.%{private}s: Failed to take manual shot, capture manager has not been initialized!";
        goto LABEL_16;
      }
    }
    else
    {
      v66(v9, v65, v2);
      v51 = sub_239352098();
      v52 = sub_23935256C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = v2;
        v55 = (void *)swift_slowAlloc();
        v69 = v55;
        *(_DWORD *)v53 = 136380675;
        v68 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, (uint64_t *)&v69);
        sub_2393526B0();
        v56 = "ObjectCaptureSession.%{private}s: Manual shot is not allowed. Could be either not in scanning mode, or max"
              " number of images reached on device and no over capture enabled, or no mesh anchor has been received in area mode!";
LABEL_16:
        _os_log_impl(&dword_23925B000, v51, v52, v56, v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v55, -1, -1);
        MEMORY[0x23B83BC04](v53, -1, -1);

        v49 = v9;
        v50 = v54;
        goto LABEL_19;
      }
    }

    v49 = v9;
LABEL_18:
    v50 = v2;
    goto LABEL_19;
  }
  sub_239331658(v69);
  sub_239331658((id)0xF);
  v66(v6, v65, v2);
  v44 = sub_239352098();
  v45 = sub_23935256C();
  if (!os_log_type_enabled(v44, v45))
  {

    v49 = v6;
    goto LABEL_18;
  }
  v46 = (uint8_t *)swift_slowAlloc();
  v47 = v2;
  v48 = (void *)swift_slowAlloc();
  v69 = v48;
  *(_DWORD *)v46 = 136380675;
  v68 = sub_23925F3EC(0xD000000000000010, 0x800000023935E640, (uint64_t *)&v69);
  sub_2393526B0();
  _os_log_impl(&dword_23925B000, v44, v45, "ObjectCaptureSession.%{private}s: Received manual shot request outside of capturing mode, ignoring the request!", v46, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v48, -1, -1);
  MEMORY[0x23B83BC04](v46, -1, -1);

  v49 = v6;
  v50 = v47;
LABEL_19:
  v28(v49, v50);
  v39 = v64;
  return sub_2393009F4(v39, "=== ObjectCaptureSession takeManualShot() takes time = %{public}s ms");
}

uint64_t sub_2392FC170()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_239352170();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393521C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v34 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B8))(v11);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v30 = v9;
    v31 = v7;
    v32 = v6;
    v33 = v5;
    v15 = sub_239275A60();
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v29 = v10;
    v16(v13, v15, v10);
    v17 = sub_239352098();
    v18 = sub_239352578();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v28 = v3;
      v20 = v19;
      v21 = swift_slowAlloc();
      aBlock[0] = v21;
      *(_DWORD *)v20 = 136380931;
      v35 = sub_23925F3EC(0xD000000000000017, 0x800000023935E660, aBlock);
      sub_2393526B0();
      *(_WORD *)(v20 + 12) = 2081;
      v35 = sub_23925F3EC(0xD000000000000017, 0x800000023935E660, aBlock);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v17, v18, "ObjectCaptureSession.%{private}s: Called %{private}s.", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v21, -1, -1);
      v22 = v20;
      v3 = v28;
      MEMORY[0x23B83BC04](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v29);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v1;
    aBlock[4] = (uint64_t)sub_239335BE4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_239262EDC;
    aBlock[3] = (uint64_t)&unk_250AC6C58;
    v24 = _Block_copy(aBlock);
    v25 = v1;
    v26 = v30;
    sub_239352188();
    v35 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    v27 = v33;
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v26, v27, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v32);
    return swift_release();
  }
  return result;
}

uint64_t sub_2392FC540(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(id *__return_ptr, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  char *v42;
  uint8_t *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v45 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v45 - v10;
  v12 = sub_239275A60();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v11, v12, v2);
  v14 = sub_239352098();
  v15 = sub_239352560();
  v16 = os_log_type_enabled(v14, v15);
  v48 = v12;
  if (v16)
  {
    v46 = a1;
    v17 = swift_slowAlloc();
    v47 = v9;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v50 = v19;
    v45 = v13;
    *(_DWORD *)v18 = 136380675;
    v49 = (id)sub_23925F3EC(0xD000000000000017, 0x800000023935E660, &v50);
    v13 = v45;
    a1 = v46;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v14, v15, "ObjectCaptureSession.%{private}s: Enter scheduled resetCapturePoseGraph() block.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v19, -1, -1);
    v20 = v18;
    v9 = v47;
    MEMORY[0x23B83BC04](v20, -1, -1);
  }

  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v11, v2);
  if ((sub_2392FE4D8() & 1) != 0)
  {
    v22 = *(_QWORD *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager];
    if (v22)
    {
      v23 = *(void (**)(uint64_t))(*(_QWORD *)v22 + 520);
      v24 = swift_retain();
      v23(v24);
      return swift_release();
    }
    v13(v9, v48, v2);
    v40 = sub_239352098();
    v41 = sub_23935256C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = v9;
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v50 = v44;
      *(_DWORD *)v43 = 136380675;
      v49 = (id)sub_23925F3EC(0xD000000000000017, 0x800000023935E660, &v50);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v40, v41, "ObjectCaptureSession.%{private}s: Failed to reset pose graph, capture manager has not been initialized", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v44, -1, -1);
      MEMORY[0x23B83BC04](v43, -1, -1);

      v38 = v42;
    }
    else
    {

      v38 = v9;
    }
    goto LABEL_12;
  }
  v13(v6, v48, v2);
  v26 = a1;
  v27 = sub_239352098();
  v28 = sub_23935256C();
  if (!os_log_type_enabled(v27, v28))
  {

    v38 = v6;
LABEL_12:
    v39 = v2;
    return ((uint64_t (*)(char *, uint64_t))v21)(v38, v39);
  }
  v29 = swift_slowAlloc();
  v30 = swift_slowAlloc();
  v48 = v2;
  v31 = v30;
  v50 = v30;
  *(_DWORD *)v29 = 136381187;
  v49 = (id)sub_23925F3EC(0xD000000000000017, 0x800000023935E660, &v50);
  v32 = sub_2393526B0();
  *(_WORD *)(v29 + 12) = 2082;
  v33 = *(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v26) + 0x420);
  v47 = v6;
  v33(&v49, v32);
  v34 = sub_23935232C();
  v49 = (id)sub_23925F3EC(v34, v35, &v50);
  sub_2393526B0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v29 + 22) = 2082;
  v49 = *(id *)&v26[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause];
  sub_239341BF8(v49);
  v36 = sub_23935232C();
  v49 = (id)sub_23925F3EC(v36, v37, &v50);
  sub_2393526B0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_23925B000, v27, v28, "ObjectCaptureSession.%{private}s: Capture pose graph reset disallowed in state %{public}s (stateOnPause = %{public}s", (uint8_t *)v29, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v31, -1, -1);
  MEMORY[0x23B83BC04](v29, -1, -1);

  v38 = v47;
  v39 = v48;
  return ((uint64_t (*)(char *, uint64_t))v21)(v38, v39);
}

float static ObjectCaptureSession.captureTriggerGyroUpperBound()()
{
  return *(float *)sub_23929CC70();
}

uint64_t sub_2392FCADC(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  void *v17;
  char *v18;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v22 = a3;
  v23 = a4;
  v20 = a1;
  v21 = a2;
  v5 = sub_239352170();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393521C4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)&v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  v15 = v21;
  *(__n128 *)(v14 + 16) = v20;
  *(__n128 *)(v14 + 32) = v15;
  v16 = v23;
  *(__n128 *)(v14 + 48) = v22;
  *(__n128 *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 80) = v4;
  aBlock[4] = sub_239335C10;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC6CA8;
  v17 = _Block_copy(aBlock);
  v18 = v4;
  sub_239352188();
  v25 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v6, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v13, v9, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_2392FCCE8(_QWORD *a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, int8x16_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  simd_float4 v11;
  simd_float4 v12;
  simd_float4 v13;
  simd_float4 *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  int8x16_t v27;
  CoreOC::OCBoundingBox v28;
  uint64_t v29;

  v26 = a4;
  v27 = a5;
  v24 = a2;
  v25 = a3;
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2392DF8CC(v24, v25, v26, v27);
  if ((v10 & 1) != 0)
  {
    OCBoundingBox.init(transform:)(&v28, (simd_float4x4 *)v10);
    v11 = v28.transform.columns[1];
    v12 = v28.transform.columns[2];
    v13 = v28.transform.columns[3];
    v14 = (simd_float4 *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox);
    *v14 = v28.transform.columns[0];
    v14[1] = v11;
    v14[2] = v12;
    v14[3] = v13;
    v14[4].i8[0] = 0;
    v15 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager);
    if (v15)
    {
      v16 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x4B8);
      v17 = swift_retain();
      if ((v16(v17) & 1) != 0)
      {
        v18 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions);
        if (v18 == 2)
        {
LABEL_13:
          __break(1u);
          return;
        }
        if ((v18 & 0x100) != 0)
        {
          (*(void (**)(__n128, __n128, __n128, __n128))(*(_QWORD *)v15 + 392))((__n128)v24, (__n128)v25, (__n128)v26, (__n128)v27);
          swift_release();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_13;
    }
  }
  else
  {
    v19 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
    v20 = sub_239352098();
    v21 = sub_23935256C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v28.transform.columns[0].i64[0] = v23;
      *(_DWORD *)v22 = 136380675;
      v29 = sub_23925F3EC(0xD000000000000026, 0x8000000239360930, (uint64_t *)&v28);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v20, v21, "ObjectCaptureSession.%{private}s: Invalid bounding box in area mode!", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2392FCF74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  double v5;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown + 8) & 1) == 0)
    return *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown);
  v1 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
  if (!v1)
    return 0;
  v2 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B8);
  v3 = swift_retain();
  v4 = v2(v3);
  v5 = (*(double (**)(_QWORD))(*(_QWORD *)v1 + 560))(v4 & 1);
  swift_release();
  return *(_QWORD *)&v5;
}

uint64_t sub_2392FD024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *);
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  __int128 v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  void *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  __int128 v71;
  __int128 v72;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v59 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v59 - v8;
  v10 = sub_239351FD8();
  v64 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_239354060;
  v63 = v12;
  sub_239351FC0();
  v14 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v13 + 64) = v14;
  *(double *)(v13 + 32) = v15 * 1000.0;
  v61 = (void *)sub_239352308();
  v17 = v16;
  v18 = sub_239275A60();
  v67 = v1;
  v68 = v18;
  v19 = *(void (**)(char *))(v1 + 16);
  v19(v9);
  swift_bridgeObjectRetain();
  v20 = sub_239352098();
  v21 = sub_239352560();
  v22 = os_log_type_enabled(v20, v21);
  v65 = v10;
  v66 = v4;
  v62 = v7;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_QWORD *)&v71 = v24;
    *(_DWORD *)v23 = 136380931;
    v69 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)&v71);
    sub_2393526B0();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    v69 = sub_23925F3EC((uint64_t)v61, v17, (uint64_t *)&v71);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v20, v21, "ObjectCaptureSession.%{private}s: takes time = %{public}s ms", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v24, -1, -1);
    MEMORY[0x23B83BC04](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v67 = *(_QWORD *)(v67 + 8);
  ((void (*)(char *, uint64_t))v67)(v9, v0);
  v25 = (void *)sub_2393522CC();
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_bundleWithIdentifier_, v25);

  v61 = v26;
  if (!v27
    || (v28 = objc_msgSend(v27, sel_infoDictionary), v27, !v28))
  {
    v71 = 0u;
    v72 = 0u;
LABEL_10:
    sub_23925FE28((uint64_t)&v71, (uint64_t *)&unk_25692A930);
    goto LABEL_11;
  }
  v29 = sub_239352284();

  if (*(_QWORD *)(v29 + 16) && (v30 = sub_23925FAA4(0x656C646E75424643, 0xEF6E6F6973726556), (v31 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v29 + 56) + 32 * v30, (uint64_t)&v71);
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v72 + 1))
    goto LABEL_10;
  if (swift_dynamicCast())
  {
    v33 = v69;
    v32 = v70;
    result = OCModulesGitHash();
    if (!result)
      goto LABEL_34;
    goto LABEL_12;
  }
LABEL_11:
  v32 = 0xE500000000000000;
  v33 = 0x302E302E30;
  result = OCModulesGitHash();
  if (!result)
  {
LABEL_34:
    __break(1u);
    return result;
  }
LABEL_12:
  sub_239352398();
  *(_QWORD *)&v71 = v33;
  *((_QWORD *)&v71 + 1) = v32;
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v71;
  v36 = v62;
  v60 = (void (*)(char *, uint64_t, uint64_t))v19;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v62, v68, v0);
  swift_bridgeObjectRetain();
  v37 = sub_239352098();
  v38 = sub_239352560();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_QWORD *)&v71 = v40;
    *(_DWORD *)v39 = 136380931;
    v69 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)&v71);
    sub_2393526B0();
    *(_WORD *)(v39 + 12) = 2082;
    swift_bridgeObjectRetain();
    v69 = sub_23925F3EC(v35, *((unint64_t *)&v35 + 1), (uint64_t *)&v71);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v37, v38, "ObjectCaptureSession.%{private}s: CoreOCModules version: %{public}s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v40, -1, -1);
    MEMORY[0x23B83BC04](v39, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  ((void (*)(char *, uint64_t))v67)(v36, v0);
  v41 = v66;
  v42 = v61;
  type metadata accessor for ObjectCaptureSession(0);
  v43 = objc_msgSend(v42, sel_bundleForClass_, swift_getObjCClassFromMetadata());
  v44 = objc_msgSend(v43, sel_infoDictionary);

  if (!v44)
  {
    v71 = 0u;
    v72 = 0u;
LABEL_24:
    sub_23925FE28((uint64_t)&v71, (uint64_t *)&unk_25692A930);
    goto LABEL_25;
  }
  v45 = sub_239352284();

  if (*(_QWORD *)(v45 + 16) && (v46 = sub_23925FAA4(0x656C646E75424643, 0xEF6E6F6973726556), (v47 & 1) != 0))
  {
    sub_23925FB48(*(_QWORD *)(v45 + 56) + 32 * v46, (uint64_t)&v71);
  }
  else
  {
    v71 = 0u;
    v72 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v72 + 1))
    goto LABEL_24;
  if (!swift_dynamicCast())
  {
LABEL_25:
    v49 = 0xE500000000000000;
    v48 = 0x302E302E30;
    goto LABEL_26;
  }
  v48 = v69;
  v49 = v70;
LABEL_26:
  OCGitHash()();
  *(_QWORD *)&v71 = v48;
  *((_QWORD *)&v71 + 1) = v49;
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = v71;
  v60(v41, v68, v0);
  swift_bridgeObjectRetain();
  v51 = sub_239352098();
  v52 = v0;
  v53 = sub_239352560();
  if (os_log_type_enabled(v51, v53))
  {
    v54 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    *(_QWORD *)&v71 = v55;
    *(_DWORD *)v54 = 136380931;
    v69 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)&v71);
    sub_2393526B0();
    *(_WORD *)(v54 + 12) = 2082;
    swift_bridgeObjectRetain();
    v69 = sub_23925F3EC(v50, *((unint64_t *)&v50 + 1), (uint64_t *)&v71);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v51, v53, "ObjectCaptureSession.%{private}s: CoreOC version:  %{public}s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v55, -1, -1);
    MEMORY[0x23B83BC04](v54, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  ((void (*)(char *, uint64_t))v67)(v41, v52);
  v57 = v64;
  v56 = v65;
  v58 = v63;
  sub_239264334();
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v56);
}

uint64_t sub_2392FD9C0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD aBlock[6];

  v0 = sub_239352170();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  MEMORY[0x24BDAC7A8](v0);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_2393424C0;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC8728;
  _Block_copy(aBlock);
  sub_239262570((unint64_t *)&qword_25692A8E0, v1, MEMORY[0x24BEE5468]);
  swift_retain();
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  sub_239352224();
  swift_allocObject();
  v3 = sub_23935220C();
  swift_release();
  swift_release();
  return v3;
}

id sub_2392FDBB0()
{
  return sub_2392FE1D4(type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor);
}

id sub_2392FDBC8(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return objc_msgSendSuper2(&v12, sel_initWithTransform_, a2, a3, a4, a5);
}

id sub_2392FDC20(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  void *v10;
  uint64_t v11;
  id v12;
  objc_super v18;

  sub_2393522F0();
  v10 = (void *)sub_2393522CC();
  v11 = swift_bridgeObjectRelease();
  v18.receiver = a1;
  v18.super_class = (Class)a8(v11);
  v12 = objc_msgSendSuper2(&v18, sel_initWithName_transform_, v10, a2, a3, a4, a5);

  return v12;
}

id sub_2392FDCB0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithAnchor_, a3);
}

id sub_2392FDD00(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_2392FDD50(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  objc_class *v15;
  id v16;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 v21;
  objc_super v22;

  v20 = a4;
  v21 = a5;
  v18 = a2;
  v19 = a3;
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239352008();
  v14 = (void *)sub_239351FFC();
  v15 = (objc_class *)a8();
  v22.receiver = a1;
  v22.super_class = v15;
  v16 = objc_msgSendSuper2(&v22, sel_initWithIdentifier_transform_, v14, v18.n128_f64[0], v19.n128_f64[0], v20.n128_f64[0], v21.n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

id sub_2392FDE30(void *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  objc_super v25;

  v23 = a4;
  v24 = a5;
  v21 = a2;
  v22 = a3;
  v11 = sub_239352020();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239352008();
  sub_2393522F0();
  v15 = (void *)sub_239351FFC();
  v16 = (void *)sub_2393522CC();
  v17 = swift_bridgeObjectRelease();
  v18 = (objc_class *)a9(v17);
  v25.receiver = a1;
  v25.super_class = v18;
  v19 = objc_msgSendSuper2(&v25, sel_initWithIdentifier_transform_name_, v15, v16, v21.n128_f64[0], v22.n128_f64[0], v23.n128_f64[0], v24.n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v19;
}

id sub_2392FDF3C(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, char a8, uint64_t (*a9)(uint64_t))
{
  void *v9;
  void *v11;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  objc_class *v23;
  id v24;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  objc_super v30;

  v11 = v9;
  v28 = a4;
  v29 = a5;
  v26 = a2;
  v27 = a3;
  v15 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23926059C(a1, (uint64_t)v17, &qword_2569281C0);
  v18 = sub_239352020();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  v21 = 0;
  if ((_DWORD)v20 != 1)
  {
    v21 = (void *)sub_239351FFC();
    v20 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  }
  if (a7)
  {
    v22 = (void *)sub_2393522CC();
    v20 = swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  v23 = (objc_class *)a9(v20);
  v30.receiver = v11;
  v30.super_class = v23;
  v24 = objc_msgSendSuper2(&v30, sel_initWithIdentifier_transform_name_hiddenFromPublicDelegate_, v21, v22, a8 & 1, v26.n128_f64[0], v27.n128_f64[0], v28.n128_f64[0], v29.n128_f64[0]);

  sub_23925FE28(a1, &qword_2569281C0);
  return v24;
}

id sub_2392FE0B0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t (*a10)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;

  v25 = a3;
  v26 = a4;
  v23 = a1;
  v24 = a2;
  v14 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    sub_239352008();
    v17 = sub_239352020();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
  }
  else
  {
    v18 = sub_239352020();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  }
  if (a8)
  {
    v19 = sub_2393522F0();
    v21 = v20;
  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  return sub_2392FDF3C((uint64_t)v16, v23, v24, v25, v26, v19, v21, a9, a10);
}

id sub_2392FE1C8()
{
  return sub_2392FE1D4(type metadata accessor for ObjectCaptureSession.ShotAnchor);
}

id sub_2392FE1D4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t (*sub_2392FE204())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*sub_2392FE248())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2392FE28C()
{
  uint64_t result;

  type metadata accessor for PGManager();
  result = sub_2392A576C();
  byte_25692E8A8 = result & 1;
  return result;
}

uint64_t sub_2392FE2C0()
{
  _QWORD *v0;
  void (*v1)(id *__return_ptr);
  uint64_t v2;
  _BOOL8 v3;
  id v5;
  id v6;

  v1 = *(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420);
  v1(&v6);
  if (v6 == (id)11)
  {
    sub_239331658((id)0xB);
    v2 = 11;
LABEL_7:
    sub_239331658((id)v2);
    return 1;
  }
  sub_239331658(v6);
  sub_239331658((id)0xB);
  v1(&v6);
  if (v6 == (id)12)
  {
    sub_239331658((id)0xC);
    v2 = 12;
    goto LABEL_7;
  }
  sub_239331658(v6);
  sub_239331658((id)0xC);
  v1(&v6);
  if (v6 == (id)14)
  {
    sub_239331658((id)0xE);
    v2 = 14;
    goto LABEL_7;
  }
  sub_239331658(v6);
  sub_239331658((id)0xE);
  v1(&v6);
  v5 = v6;
  v3 = v6 == (id)15;
  if (v6 != (id)15)
    sub_239341BF8(v6);
  sub_239331658(v5);
  sub_239331658((id)0xF);
  sub_239331658(v5);
  return v3;
}

uint64_t sub_2392FE3C0()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  char v4;
  id v6[3];

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420))(v6);
  if (v6[0] != (id)15)
  {
    sub_239331658(v6[0]);
    sub_239331658((id)0xF);
LABEL_8:
    v4 = 0;
    return v4 & 1;
  }
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  v2 = (char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  swift_beginAccess();
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (qword_25692E880 != -1)
    swift_once();
  if (v3 >= qword_25692E888 && *((_BYTE *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration) != 1)
    goto LABEL_8;
  v4 = (*(uint64_t (**)(void))((*v1 & *v0) + 0x4B8))() ^ *((_BYTE *)v0
                                                          + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart) ^ 1;
  return v4 & 1;
}

uint64_t sub_2392FE4D8()
{
  _QWORD *v0;
  void (*v1)(id *__return_ptr);
  uint64_t v2;
  void *v3;
  uint64_t v5;
  id v6;

  v1 = *(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420);
  v1(&v6);
  v2 = (uint64_t)v6;
  if (v6 == (id)15)
    goto LABEL_5;
  sub_239331658(v6);
  sub_239331658((id)0xF);
  v1(&v6);
  if (v6 == (id)13)
  {
    sub_239331658((id)0xD);
    sub_239331658((id)0xD);
    v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause);
    if (v3 == (void *)15)
    {
      sub_239331658((id)0xF);
      v2 = 15;
LABEL_5:
      sub_239331658((id)v2);
      sub_239331658((id)0xF);
      return 1;
    }
    sub_239341BF8(*(id *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause));
    sub_239341BF8(v3);
    sub_239331658(v3);
    sub_239331658((id)0xF);
    v5 = (uint64_t)v3;
  }
  else
  {
    sub_239331658(v6);
    v5 = 13;
  }
  sub_239331658((id)v5);
  return 0;
}

uint64_t sub_2392FE5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25692E8A0 != -1)
    swift_once();
  if (byte_25692E8A8 != 1)
    return 0;
  v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMUserDefaultValue);
  if (v4 != 2)
    return v4 & 1;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled) != 1)
    return 0;
  v5 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL;
  swift_beginAccess();
  sub_23926059C(v5, (uint64_t)v3, &qword_256927AD0);
  v6 = sub_239351F3C();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_23925FE28((uint64_t)v3, &qword_256927AD0);
  if ((_DWORD)v5 == 1)
    return 0;
  if ((*sub_2392DE59C() & 1) != 0)
    return 1;
  else
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride);
}

uint64_t sub_2392FE71C()
{
  _QWORD *v0;
  id v2;

  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420))(&v2);
  if (v2 == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    if (*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager) && (sub_2392FE5BC() & 1) != 0)
      return *(unsigned __int8 *)sub_239263DD0();
  }
  else
  {
    sub_239331658(v2);
    sub_239331658((id)0xF);
  }
  return 0;
}

void sub_2392FE7A0()
{
  _QWORD *v0;
  void (*v1)(id *__return_ptr);
  uint64_t v2;
  id v3;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) == 0)
  {
    v1 = *(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420);
    v1(&v3);
    if (v3 == (id)12)
    {
      sub_239331658((id)0xC);
      v2 = 12;
LABEL_6:
      sub_239331658((id)v2);
      *((_BYTE *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration) = 1;
      return;
    }
    sub_239331658(v3);
    sub_239331658((id)0xC);
    v1(&v3);
    if (v3 == (id)14)
    {
      sub_239331658((id)0xE);
      v2 = 14;
      goto LABEL_6;
    }
    sub_239331658(v3);
    sub_239331658((id)0xE);
  }
}

void sub_2392FE858(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  char *v11;
  id v12[8];

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a1 + 32);
  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a1 + 48);
  v9 = *(void **)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 64);
  v11 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  *(_QWORD *)v11 = *(_QWORD *)a1;
  *((_QWORD *)v11 + 1) = v3;
  *((_QWORD *)v11 + 2) = v4;
  *((_QWORD *)v11 + 3) = v5;
  *((_QWORD *)v11 + 4) = v6;
  *((_QWORD *)v11 + 5) = v7;
  *((_QWORD *)v11 + 6) = v8;
  *((_QWORD *)v11 + 7) = v9;
  v11[64] = v10;
  if ((v10 & 1) == 0)
  {
    (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420))(v12);
    if (v12[0] == (id)15)
    {
      sub_239331658((id)0xF);
      sub_239331658((id)0xF);
      v12[0] = v2;
      v12[1] = v3;
      v12[2] = v4;
      v12[3] = v5;
      v12[4] = v6;
      v12[5] = v7;
      v12[6] = v8;
      v12[7] = v9;
      sub_239345BA8(*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID));
    }
    else
    {
      sub_239331658(v12[0]);
      sub_239331658((id)0xF);
    }
  }
}

uint64_t sub_2392FE93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  if (v6)
  {
    v7 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
    v8 = v6;
    objc_msgSend(v7, sel_addAnchor_, v8);
    v9 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v9, v1);
    v10 = v8;
    v11 = sub_239352098();
    v12 = sub_239352578();
    v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      v14 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v14 = 136380931;
      v25 = v13;
      v27 = sub_23925F3EC(0xD000000000000011, 0x800000023935F190, &v28);
      sub_2393526B0();
      *(_WORD *)(v14 + 12) = 2082;
      v24[1] = v14 + 14;
      objc_msgSend(v10, sel_transform);
      *(int32x2_t *)&v19 = sub_2392DEC48(v15, v16, v17, v18);
      v20 = MEMORY[0x23B83A2FC](v19);
      v22 = v21;
      swift_bridgeObjectRelease();
      v27 = sub_23925F3EC(v20, v22, &v28);
      sub_2393526B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v11, (os_log_type_t)v25, "ObjectCaptureSession.%{private}s: Added bounding box anchor: %{public}s", (uint8_t *)v14, 0x16u);
      v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v14, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t (*sub_2392FEBB4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2392FEBF8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = sub_239352170();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2393521C4();
  v6 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OCCaptureData(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  sub_239268820(a1, (uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OCCaptureData);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  sub_2392C4FE0((uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for OCCaptureData);
  aBlock[4] = sub_239342144;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC85E8;
  v14 = _Block_copy(aBlock);
  v15 = v1;
  sub_239352188();
  v20 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  return swift_release();
}

uint64_t sub_2392FEE58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock[7];

  v49 = a1;
  v3 = sub_239352170();
  v56 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2393521C4();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OCCaptureData(0);
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v46 = v8;
  v48 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239352020();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - v13;
  v15 = sub_2393520B0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v19, v15);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v50 = a2;
  v43 = v20;
  v20(v14, a2, v9);
  v21 = sub_239352098();
  v22 = sub_239352560();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v41 = v15;
    v24 = v23;
    v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)v24 = 136380931;
    v57 = sub_23925F3EC(0xD000000000000020, 0x8000000239360520, aBlock);
    v42 = v3;
    sub_2393526B0();
    *(_WORD *)(v24 + 12) = 2082;
    v39 = v24 + 14;
    sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v25 = sub_2393528C0();
    v57 = sub_23925F3EC(v25, v26, aBlock);
    v3 = v42;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    _os_log_impl(&dword_23925B000, v21, v22, "ObjectCaptureSession.%{private}s: Pushed oc capture data (stillImage) with identifier = %{public}s", (uint8_t *)v24, 0x16u);
    v27 = v40;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v27, -1, -1);
    MEMORY[0x23B83BC04](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v41);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v28 = v51;
  v42 = *(_QWORD *)&v51[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v29 = v48;
  sub_239268820(v49, v48, type metadata accessor for OCCaptureData);
  v30 = v47;
  v43(v47, v50, v9);
  v31 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v32 = (v46 + *(unsigned __int8 *)(v10 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v28;
  sub_2392C4FE0(v29, v33 + v31, type metadata accessor for OCCaptureData);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33 + v32, v30, v9);
  aBlock[4] = (uint64_t)sub_239341F08;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC8598;
  v34 = _Block_copy(aBlock);
  v35 = v28;
  v36 = v52;
  sub_239352188();
  v57 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  v37 = v55;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v36, v37, v34);
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v3);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v54);
  return swift_release();
}

uint64_t sub_2392FF3CC(uint64_t a1)
{
  _QWORD *v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  _QWORD *v32;
  double v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*Width)(uint64_t, uint64_t, int *);
  _QWORD *v48;
  uint64_t *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)();
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  unint64_t v68;
  uint64_t (*v69)(void);
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  char v74;
  uint64_t v75;
  _QWORD *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  __CVBuffer *v102;
  size_t Height;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  unint64_t v107;
  float v108;
  float v109;
  unint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t *v114;
  unint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t (*v141)();
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  void *v146;
  id v147;
  uint64_t (*v148)();
  uint64_t v149;
  uint64_t v150;
  _OWORD *v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  int v156;
  int v157;
  uint64_t (*v158)();
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t (*v164)();
  unsigned int (*v165)(uint64_t, uint64_t, int *);
  uint64_t (*v166)();
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  float32x4_t *v173;
  float32x4_t v174;
  float32x4_t v175;
  float32x4_t v176;
  float32x4_t v177;
  float32x4_t v178;
  float32x4_t v179;
  float32x4_t v180;
  float32x4_t *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  uint64_t v189;
  void *v190;
  double v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  id v195;
  uint64_t DataBuffer;
  void *v197;
  double v198;
  __int128 v199;
  __n128 v200;
  __n128 v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  void (*v207)(_QWORD *__return_ptr, uint64_t *);
  uint64_t result;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  _QWORD *v216;
  char *v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  int *v226;
  _QWORD *v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  void (*v234)(char *, uint64_t, uint64_t);
  char *v235;
  uint64_t (*v236)();
  uint64_t v237;
  uint64_t v238;
  __n128 v239;
  __n128 v240;
  __n128 v241;
  __n128 v242;
  _OWORD v243[43];
  id v244[87];
  _QWORD v245[4];
  uint64_t v246;
  _BYTE v247[688];
  _BYTE v248[688];
  _BYTE v249[688];
  _QWORD v250[86];
  _QWORD v251[86];
  void *v252[86];
  _BYTE v253[688];
  _BYTE v254[688];
  _BYTE v255[688];
  _BYTE v256[688];
  _OWORD v257[4];
  char v258;

  v2 = (double *)MEMORY[0x24BDAC7A8](a1);
  v3 = type metadata accessor for OCBundleData(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23925FB08(&qword_25692A8A8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_2393520B0();
  v230 = *(_QWORD *)(v224 - 8);
  MEMORY[0x24BDAC7A8](v224);
  v229 = (char *)&v209 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239352680();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v217 = (char *)&v209 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v235 = (char *)&v209 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v234 = (void (*)(char *, uint64_t, uint64_t))((char *)&v209 - v15);
  v238 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v16 = MEMORY[0x24BDAC7A8](v238);
  v228 = (uint64_t)&v209 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v237 = (uint64_t)&v209 - v18;
  v19 = sub_23925FB08((uint64_t *)&unk_25692A910);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v221 = (uint64_t)&v209 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v225 = (char *)&v209 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v223 = (uint64_t)&v209 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v209 - v26;
  v28 = sub_239351FD8();
  v231 = *(_QWORD *)(v28 - 8);
  v232 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v209 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239350DB4();
  OCSignPostsAriadneDbgCode();
  v220 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId;
  v31 = sub_239350EB0();
  if ((*v31 & 0x8000000000000000) != 0)
    goto LABEL_101;
  v215 = v5;
  v216 = v8;
  v219 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex;
  if ((*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex) & 0x8000000000000000) != 0)
    goto LABEL_101;
  v32 = v31;
  kdebug_trace();
  sub_239351FB4();
  v33 = *v2;
  v34 = (void *)*((_QWORD *)v2 + 1);
  v35 = (void *)*((_QWORD *)v2 + 2);
  v36 = (void *)*((_QWORD *)v2 + 3);
  v222 = type metadata accessor for OCCaptureData(0);
  v37 = *(int *)(v222 + 40);
  v242.n128_u64[0] = (unint64_t)v2;
  v239.n128_u64[0] = (unint64_t)v2 + v37;
  v38 = v237;
  sub_239268820((uint64_t)v2 + v37, v237, type metadata accessor for ObjectCaptureSession.Frame.Camera);
  v39 = v36;
  v40 = v34;
  v41 = v35;
  sub_2392F3CD8(v40, v35, v36, v38, (uint64_t)v27, v33);
  v42 = (int *)type metadata accessor for ObjectCaptureSession.Frame(0);
  v43 = *((_QWORD *)v42 - 1);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56))(v27, 0, 1, v42);
  v44 = (uint64_t)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
  swift_beginAccess();
  v241.n128_u64[0] = v44;
  sub_239267C70((uint64_t)v27, v44, (uint64_t *)&unk_25692A910);
  swift_endAccess();
  v236 = sub_2392FE204();
  v46 = v45;
  Width = *(unsigned int (**)(uint64_t, uint64_t, int *))(v43 + 48);
  if (Width(v45, 1, v42) == 1)
    goto LABEL_89;
  v48 = v1;
  v49 = (uint64_t *)(v46 + v42[13]);
  sub_239268764((uint64_t)v49, (uint64_t)v255, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v255, (uint64_t)v256, (uint64_t *)&unk_25692A8B0);
  v50 = sub_239341CC4((uint64_t)v256);
  v240.n128_u64[0] = (unint64_t)Width;
  v233 = v30;
  v218 = v32;
  if (v50 != 1)
  {
    v51 = *(_QWORD *)(v242.n128_u64[0] + 32);
    v52 = *(_QWORD *)(v242.n128_u64[0] + 40);
    v53 = *(_QWORD *)(v242.n128_u64[0] + 48);
    v54 = *(_QWORD *)(v242.n128_u64[0] + 56);
    v55 = *(_QWORD *)(v242.n128_u64[0] + 64);
    v56 = *(_QWORD *)(v242.n128_u64[0] + 72);
    v57 = *(_QWORD *)(v242.n128_u64[0] + 80);
    v58 = *(_QWORD *)(v242.n128_u64[0] + 88);
    v59 = *(_QWORD *)(v242.n128_u64[0] + 96);
    v226 = v42;
    v227 = v1;
    v60 = *v49;
    v214 = v49[7];
    *v49 = v51;
    v49[1] = v52;
    v49[2] = v53;
    v49[3] = v54;
    v49[4] = v55;
    v49[5] = v56;
    v49[6] = v57;
    v49[7] = v58;
    v49[8] = v59;
    sub_239331294(v51);
    v42 = v226;
    v48 = v227;
    Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
    sub_2392A0118(v60);
  }
  ((void (*)(_BYTE *, _QWORD))v236)(v254, 0);
  v61 = sub_2392FE204();
  v63 = v62;
  if (Width(v62, 1, v42) == 1)
    goto LABEL_90;
  v64 = v63 + v42[13];
  sub_239268764(v64, (uint64_t)v253, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v253, (uint64_t)v254, (uint64_t *)&unk_25692A8B0);
  if (sub_239341CC4((uint64_t)v254) != 1)
  {
    v65 = *(void **)(v242.n128_u64[0] + *(int *)(v222 + 44));
    v66 = *(void **)(v64 + 600);
    *(_QWORD *)(v64 + 600) = v65;
    v67 = v65;

  }
  ((void (*)(void **, _QWORD))v61)(v252, 0);
  v68 = v239.n128_u64[0];
  v69 = MEMORY[0x24BEDF358];
  v70 = v234;
  sub_239268820(v239.n128_u64[0] + *(int *)(v238 + 24), (uint64_t)v234, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  v71 = sub_239352674();
  v72 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v73 = (uint64_t)v235;
  v222 = v71;
  v72(v235, 2, 2);
  v74 = sub_239352668();
  sub_2392688AC(v73, (uint64_t (*)(_QWORD))v69);
  v75 = sub_2392688AC((uint64_t)v70, (uint64_t (*)(_QWORD))v69);
  if ((v74 & 1) == 0)
  {
    v79 = sub_239275A60();
    v81 = v229;
    v80 = v230;
    v82 = v224;
    (*(void (**)(char *, uint64_t, uint64_t))(v230 + 16))(v229, v79, v224);
    v83 = sub_239352098();
    v84 = sub_239352560();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      v86 = (void *)swift_slowAlloc();
      v252[0] = v86;
      *(_DWORD *)v85 = 136380675;
      v251[0] = sub_23925F3EC(0xD000000000000014, 0x80000002393602E0, (uint64_t *)v252);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v83, v84, "ObjectCaptureSession.%{private}s: Camera tracking is not normal!", v85, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v86, -1, -1);
      MEMORY[0x23B83BC04](v85, -1, -1);

      (*(void (**)(char *, uint64_t))(v230 + 8))(v229, v82);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
    }
    v96 = (uint64_t)v233;
    sub_239326D0C();
    v97 = v223;
    sub_23926059C(v241.n128_i64[0], v223, (uint64_t *)&unk_25692A910);
    if (((uint64_t (*)(uint64_t, uint64_t, int *))v240.n128_u64[0])(v97, 1, v42) != 1)
    {
      sub_2393520D4();
      swift_release();
      v98 = type metadata accessor for ObjectCaptureSession.Frame;
      v99 = v97;
LABEL_81:
      sub_2392688AC(v99, v98);
      sub_2393009F4(v96, "=== ObjectCaptureSession processVideoData() takes time = %{public}s ms ===");
      return (*(uint64_t (**)(uint64_t, uint64_t))(v231 + 8))(v96, v232);
    }
    goto LABEL_91;
  }
  v234 = v72;
  v76 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v236 = *(uint64_t (**)())((*MEMORY[0x24BEE4EA0] & *v48) + 0x420);
  ((void (*)(void **__return_ptr, uint64_t))v236)(v252, v75);
  if (v252[0] == (void *)11)
  {
    sub_239331658((id)0xB);
    sub_239331658((id)0xB);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23935211C();
    swift_release();
    swift_release();
    v77 = v252[0];
    swift_getKeyPath();
    swift_getKeyPath();
    v252[0] = (void *)12;
    v48;
    Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
    sub_239352128();
    v252[0] = v77;
    sub_2392F48FC(v252);
    v78 = (uint64_t)v77;
  }
  else
  {
    sub_239331658(v252[0]);
    v78 = 11;
  }
  sub_239331658((id)v78);
  v87 = (uint64_t)v225;
  v88 = v68;
  v235 = (char *)OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager;
  v89 = v242.n128_u64[0];
  if (*(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager)
    || ((*(uint64_t (**)(void))((*v76 & *v48) + 0x4B8))() & 1) == 0)
  {
    goto LABEL_25;
  }
  ((void (*)(void **__return_ptr))v236)(v252);
  if (v252[0] != (void *)15)
  {
    sub_239331658(v252[0]);
    sub_239331658((id)0xF);
    goto LABEL_25;
  }
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  if ((*((_BYTE *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8) & 1) != 0)
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v226 = v42;
  v90 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl);
  if (!v90)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v91 = *(double *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp);
  type metadata accessor for CaptureManager();
  memset(v257, 0, sizeof(v257));
  v258 = 1;
  v92 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
  v93 = *(void **)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue);
  swift_retain();
  v94 = v93;
  swift_retain();
  v95 = sub_23929C610((uint64_t)v257, v90, v92, v94, v91);
  *(_QWORD *)&v235[(_QWORD)v48] = v95;
  swift_release();
  v87 = (uint64_t)v225;
  v42 = v226;
LABEL_25:
  if (((*(uint64_t (**)(void))((*v76 & *v48) + 0x4B8))() & 1) != 0)
  {
LABEL_36:
    v113 = 0;
    goto LABEL_37;
  }
  sub_239300CAC((_QWORD *)v89);
  sub_239301320(v89);
  sub_239301A70();
  sub_23926059C(v241.n128_i64[0], v87, (uint64_t *)&unk_25692A910);
  if (Width(v87, 1, v42) == 1)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  v100 = v87 + v42[13];
  sub_239268764(v100, (uint64_t)v251, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v251, (uint64_t)v252, (uint64_t *)&unk_25692A8B0);
  if (sub_239341CC4((uint64_t)v252) == 1)
  {
    sub_2392688AC(v87, type metadata accessor for ObjectCaptureSession.Frame);
    goto LABEL_36;
  }
  v101 = *(_QWORD **)(v100 + 608);
  swift_bridgeObjectRetain();
  sub_2392688AC(v87, type metadata accessor for ObjectCaptureSession.Frame);
  if (!v101)
    goto LABEL_36;
  v102 = *(__CVBuffer **)(v89 + 8);
  Width = (unsigned int (*)(uint64_t, uint64_t, int *))CVPixelBufferGetWidth(v102);
  Height = CVPixelBufferGetHeight(v102);
  v104 = v101[2];
  if (v104)
  {
    v89 = Height;
    swift_bridgeObjectRetain();
    v105 = v101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_87:
      v105 = sub_23932CB68(v101);
    v106 = 0;
    v107 = 0;
    v108 = (float)(uint64_t)Width;
    v109 = (float)v89;
    v110 = v105[2];
    v89 = v242.n128_u64[0];
    Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
    do
    {
      if (v107 >= v110)
      {
        __break(1u);
        goto LABEL_87;
      }
      *(float *)&v111 = (float)((float)(COERCE_FLOAT(v101[v106 + 4]) + COERCE_FLOAT(v101[v106 + 4])) / v108) + -1.0;
      ++v107;
      v112 = &v105[v106];
      *((_DWORD *)v112 + 8) = v111;
      *((float *)&v111 + 1) = (float)((float)(*((float *)&v101[v106 + 4] + 1) + *((float *)&v101[v106 + 4] + 1)) / v109)
                            + -1.0;
      v112[4] = v111;
      ++v106;
    }
    while (v104 != v107);
    swift_bridgeObjectRelease();
  }
  else
  {
    v105 = v101;
    v89 = v242.n128_u64[0];
    Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
  }
  ObjectContour.init(points:)((uint64_t)v105, v250);
  v113 = v250[0];
LABEL_37:
  sub_23930208C((uint64_t *)v89);
  sub_239303140();
  sub_239303F60(v89);
  sub_239304684();
  v114 = (_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  if ((*((_BYTE *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v96 = (uint64_t)v233;
    v115 = v241.n128_u64[0];
  }
  else
  {
    v226 = v42;
    v227 = v48;
    v116 = (void (*)(char *, uint64_t, uint64_t))v114[6];
    v117 = v114[7];
    v119 = v114[4];
    v118 = v114[5];
    v121 = v114[2];
    v120 = v114[3];
    v122 = v114[1];
    v210 = *v114;
    v211 = v122;
    v123 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
    v124 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
    v229 = *(char **)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
    v230 = v123;
    v125 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
    v225 = *(char **)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
    v213 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
    v214 = v125;
    v126 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
    v223 = v124;
    v224 = v126;
    v212 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
    v127 = *((_BYTE *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
    v128 = (uint64_t)v217;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v234)(v217, 1, 2, v222);
    if ((v127 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_2392688AC(v128, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      v42 = v226;
      v48 = v227;
      v96 = (uint64_t)v233;
      v89 = v242.n128_u64[0];
      v88 = v239.n128_u64[0];
      v115 = v241.n128_u64[0];
      Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
      v129 = ((uint64_t (*)(unint64_t, uint64_t, int *))v240.n128_u64[0])(v241.n128_u64[0], 1, v226);
      goto LABEL_44;
    }
    v130 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
    v131 = *(int *)(v130 + 24);
    v234 = v116;
    v132 = v117;
    v133 = v216;
    sub_239268820(v128, (uint64_t)v216 + v131, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    v134 = v211;
    *v133 = v210;
    v133[1] = v134;
    v133[2] = v121;
    v133[3] = v120;
    v133[4] = v119;
    v133[5] = v118;
    v133[6] = v234;
    v133[7] = v132;
    v135 = v223;
    v133[8] = v230;
    v133[9] = v135;
    v136 = v214;
    v133[10] = v229;
    v133[11] = v136;
    v137 = v213;
    v133[12] = v225;
    v133[13] = v137;
    v138 = v212;
    v139 = (uint64_t)v133;
    v133[14] = v224;
    v133[15] = v138;
    *(_QWORD *)((char *)v133 + *(int *)(v130 + 28)) = v113;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v133, 0, 1, v130);
    v115 = v241.n128_u64[0];
    swift_beginAccess();
    v42 = v226;
    Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
    v140 = ((uint64_t (*)(unint64_t, uint64_t, int *))v240.n128_u64[0])(v115, 1, v226);
    v96 = (uint64_t)v233;
    if (v140 == 1)
    {
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    sub_239267C70(v139, v115 + v42[9], &qword_25692A8A8);
    swift_endAccess();
    sub_2392688AC(v128, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    v48 = v227;
    v89 = v242.n128_u64[0];
    v88 = v239.n128_u64[0];
  }
  v129 = Width(v115, 1, v42);
LABEL_44:
  if (v129 == 1)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  *(_DWORD *)(v115 + v42[10]) = *(_DWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage);
  v141 = sub_2392FE204();
  v143 = v142;
  if (Width(v142, 1, v42) == 1)
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  v144 = v143 + v42[13];
  sub_239268764(v144, (uint64_t)v251, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v251, (uint64_t)v252, (uint64_t *)&unk_25692A8B0);
  if (sub_239341CC4((uint64_t)v252) != 1)
  {
    v145 = *(void **)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    v146 = *(void **)(v144 + 416);
    *(_QWORD *)(v144 + 416) = v145;
    v147 = v145;

  }
  ((void (*)(_QWORD *, _QWORD))v141)(v250, 0);
  v148 = sub_2392FE204();
  v150 = v149;
  if (Width(v149, 1, v42) == 1)
    goto LABEL_94;
  v151 = (_OWORD *)(v150 + v42[13]);
  sub_239268764((uint64_t)v151, (uint64_t)v249, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v249, (uint64_t)v250, (uint64_t *)&unk_25692A8B0);
  if (sub_239341CC4((uint64_t)v250) != 1)
  {
    v152 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 16);
    v153 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 32);
    v154 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 48);
    v155 = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud + 64);
    v151[32] = *(_OWORD *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud);
    v151[33] = v152;
    v151[34] = v153;
    v151[35] = v154;
    v151[36] = v155;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  ((void (*)(_BYTE *, _QWORD))v148)(v248, 0);
  sub_2392E17DC(*(__CVBuffer **)(v89 + 8));
  v157 = v156;
  v158 = sub_2392FE204();
  v160 = v159;
  if (Width(v159, 1, v42) == 1)
    goto LABEL_95;
  v161 = v160 + v42[13];
  sub_239268764(v161, (uint64_t)v247, (uint64_t *)&unk_25692A8B0);
  sub_239268764((uint64_t)v247, (uint64_t)v248, (uint64_t *)&unk_25692A8B0);
  if (sub_239341CC4((uint64_t)v248) != 1)
    *(_DWORD *)(v161 + 592) = v157;
  v162 = ((uint64_t (*)(id *, _QWORD))v158)(v244, 0);
  ((void (*)(id *__return_ptr, uint64_t))v236)(v244, v162);
  if (v244[0] == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    v163 = *(_QWORD *)&v235[(_QWORD)v48];
    if (v163)
    {
      swift_retain();
      v164 = sub_2392FE204();
      v165 = Width;
      v166 = v164;
      v168 = v167;
      if (v165(v167, 1, v42) == 1)
      {
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      v169 = v168 + v42[13];
      sub_239268764(v169, (uint64_t)v243, (uint64_t *)&unk_25692A8B0);
      sub_239268764((uint64_t)v243, (uint64_t)v244, (uint64_t *)&unk_25692A8B0);
      if (sub_239341CC4((uint64_t)v244) != 1)
      {
        *(_QWORD *)(v169 + 680) = (*(uint64_t (**)(void))(*(_QWORD *)v163 + 568))();
        swift_bridgeObjectRelease();
      }
      ((void (*)(_QWORD *, _QWORD))v166)(v245, 0);
      swift_release();
      v89 = v242.n128_u64[0];
      Width = (unsigned int (*)(uint64_t, uint64_t, int *))v240.n128_u64[0];
    }
  }
  else
  {
    sub_239331658(v244[0]);
    sub_239331658((id)0xF);
  }
  sub_239326D0C();
  v170 = v221;
  sub_23926059C(v241.n128_i64[0], v221, (uint64_t *)&unk_25692A910);
  if (Width(v170, 1, v42) == 1)
    goto LABEL_96;
  sub_2393520D4();
  swift_release();
  sub_2392688AC(v170, type metadata accessor for ObjectCaptureSession.Frame);
  v171 = v228;
  v172 = sub_239268820(v88, v228, type metadata accessor for ObjectCaptureSession.Frame.Camera);
  v173 = (float32x4_t *)((char *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform);
  if ((*((_BYTE *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform + 64) & 1) == 0)
  {
    v174 = v173[1];
    v175 = v173[2];
    v176 = v173[3];
    v177 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v173, COERCE_FLOAT(*(_OWORD *)(v88 + 48))), v174, *(float32x2_t *)(v88 + 48), 1), v175, *(float32x4_t *)(v88 + 48), 2), v176, *(float32x4_t *)(v88 + 48), 3);
    v178 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v173, COERCE_FLOAT(*(_OWORD *)(v88 + 64))), v174, *(float32x2_t *)(v88 + 64), 1), v175, *(float32x4_t *)(v88 + 64), 2), v176, *(float32x4_t *)(v88 + 64), 3);
    v179 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v173, COERCE_FLOAT(*(_OWORD *)(v88 + 80))), v174, *(float32x2_t *)(v88 + 80), 1), v175, *(float32x4_t *)(v88 + 80), 2), v176, *(float32x4_t *)(v88 + 80), 3);
    v180 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v173, COERCE_FLOAT(*(_OWORD *)(v88 + 96))), v174, *(float32x2_t *)(v88 + 96), 1), v175, *(float32x4_t *)(v88 + 96), 2), v176, *(float32x4_t *)(v88 + 96), 3);
    v181 = (float32x4_t *)(v171 + *(int *)(v238 + 36));
    *v181 = v177;
    v181[1] = v178;
    v181[2] = v179;
    v181[3] = v180;
    v181[4].i8[0] = 0;
  }
  if (*((_BYTE *)v48 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData) == 1)
  {
    ((void (*)(id *__return_ptr, uint64_t))v236)(v244, v172);
    if (v244[0] == (id)15)
    {
      sub_239331658((id)0xF);
      sub_239331658((id)0xF);
      v182 = *(void **)(v89 + 32);
      if (v182)
      {
        v183 = *(void **)(v89 + 88);
        v241.n128_u64[0] = *(_QWORD *)(v89 + 96);
        v240.n128_u64[0] = (unint64_t)v183;
        v185 = *(void **)(v89 + 72);
        v184 = *(void **)(v89 + 80);
        v227 = v48;
        v186 = *(void **)(v89 + 64);
        v187 = *(void **)(v242.n128_u64[0] + 56);
        v188 = *(void **)(v242.n128_u64[0] + 48);
        v189 = v96;
        v190 = *(void **)(v242.n128_u64[0] + 40);
        v191 = *(double *)v242.n128_u64[0];
        v244[0] = v182;
        v244[1] = v190;
        v244[2] = v188;
        v244[3] = v187;
        v244[4] = v186;
        v244[5] = v185;
        v244[6] = v184;
        v244[7] = v183;
        v244[8] = (id)v241.n128_u64[0];
        v192 = v237;
        sub_239268820(v228, v237, type metadata accessor for ObjectCaptureSession.Frame.Camera);
        swift_bridgeObjectRetain();
        v96 = v189;
        swift_bridgeObjectRetain();
        v88 = v239.n128_u64[0];
        swift_bridgeObjectRetain();
        v89 = v242.n128_u64[0];
        swift_bridgeObjectRetain();
        v48 = v227;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v171 = v228;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v193 = (uint64_t)v215;
        sub_239346A24((uint64_t)v244, v192, (uint64_t)v215, v191);
        sub_239327BF4();
        sub_2393520D4();
        swift_release();
        sub_2392688AC(v193, type metadata accessor for OCBundleData);
      }
    }
    else
    {
      sub_239331658(v244[0]);
      sub_239331658((id)0xF);
    }
  }
  if (*sub_2392DE63C() == 1)
  {
    ((void (*)(id *__return_ptr))v236)(v244);
    if (v244[0] == (id)15)
    {
      sub_239331658((id)0xF);
      sub_239331658((id)0xF);
      v194 = *(void **)(v89 + 104);
      if (v194)
      {
        v195 = v194;
        DataBuffer = OCNonModularSPI_ADJasperPointCloud_CreateDataBuffer();
        if (DataBuffer)
        {
          v197 = (void *)DataBuffer;
          type metadata accessor for TemporalDepthPointCloud();
          v198 = *(double *)v89;
          v199 = *(_OWORD *)(v88 + 16);
          v243[0] = *(_OWORD *)v88;
          v243[1] = v199;
          v200 = *(__n128 *)(v88 + 48);
          v243[2] = *(_OWORD *)(v88 + 32);
          v241 = *(__n128 *)(v88 + 64);
          v242 = v200;
          v201 = *(__n128 *)(v88 + 80);
          v239 = *(__n128 *)(v88 + 96);
          v240 = v201;
          v202 = v197;
          sub_239297230(v243, (uint64_t)v244, v242, v241, v240, v239, COERCE_DOUBLE(0x5A000000780));
          sub_23929769C((uint64_t)v202, (uint64_t)v244, v198);
          v204 = v203;
          v205 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer;
          v206 = *(_QWORD *)((char *)v48
                           + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer);
          if (v206
            || (sub_23925FB08((uint64_t *)&unk_25692B6B0),
                v245[0] = v204,
                swift_retain(),
                *(_QWORD *)((char *)v48 + v205) = sub_2393501DC(91, (uint64_t)v245),
                swift_release(),
                (v206 = *(_QWORD *)((char *)v48 + v205)) != 0))
          {
            v246 = v204;
            v207 = *(void (**)(_QWORD *__return_ptr, uint64_t *))(*(_QWORD *)v206 + 264);
            swift_retain();
            v207(v245, &v246);
            swift_release();
            swift_release();

            swift_release();
          }
          else
          {
            swift_release();

          }
          v171 = v228;
        }
        else
        {

        }
      }
    }
    else
    {
      sub_239331658(v244[0]);
      sub_239331658((id)0xF);
    }
  }
  sub_239350DC0();
  OCSignPostsAriadneDbgCode();
  if ((*v218 & 0x8000000000000000) == 0 && (*(_QWORD *)((char *)v48 + v219) & 0x8000000000000000) == 0)
  {
    kdebug_trace();
    v98 = type metadata accessor for ObjectCaptureSession.Frame.Camera;
    v99 = v171;
    goto LABEL_81;
  }
LABEL_101:
  result = sub_23935283C();
  __break(1u);
  return result;
}

uint64_t sub_2393009F4(uint64_t a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239351FD8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_239354060;
  sub_239351FC0();
  v12 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v11 + 64) = v12;
  *(double *)(v11 + 32) = v13 * 1000.0;
  v29 = sub_239352308();
  v15 = v14;
  v16 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v16, v3);
  swift_bridgeObjectRetain();
  v17 = sub_239352098();
  v18 = sub_239352560();
  if (os_log_type_enabled(v17, v18))
  {
    v28 = v8;
    v19 = swift_slowAlloc();
    v27 = v3;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v26 = v7;
    v22 = v21;
    v31 = v21;
    v25 = a2;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    v30 = sub_23925F3EC(v29, v15, &v31);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v17, v18, v25, v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v22, -1, -1);
    MEMORY[0x23B83BC04](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v26);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_239300CAC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  void *v24;
  void *v25;
  uint8_t *v26;
  void (*v27)(id *__return_ptr);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  char *v35;
  uint8_t *v36;
  void *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;

  v2 = v1;
  v4 = sub_239352680();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v44 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v44 - v16;
  v18 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled) & 1) == 0)
  {
    (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420))(&v49, v15);
    if (v49 == (id)15)
    {
      sub_239331658((id)0xF);
      sub_239331658((id)0xF);
      return;
    }
    sub_239331658(v49);
    sub_239331658((id)0xF);
  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration) == 1)
  {
    v47 = a1;
    v19 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v19, v7);
    v20 = sub_239352098();
    v21 = sub_239352578();
    if (os_log_type_enabled(v20, v21))
    {
      v44 = v11;
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      v45 = v14;
      v24 = v23;
      v49 = v23;
      v46 = v8;
      *(_DWORD *)v22 = 136380675;
      v48 = sub_23925F3EC(0xD000000000000017, 0x80000002393603D0, (uint64_t *)&v49);
      v11 = v44;
      v8 = v46;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v20, v21, "ObjectCaptureSession.%{private}s: Got new tap point, trying to restart voxel integration!", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      v14 = v45;
      MEMORY[0x23B83BC04](v25, -1, -1);
      v26 = v22;
      v18 = (_QWORD *)MEMORY[0x24BEE4EA0];
      MEMORY[0x23B83BC04](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    a1 = v47;
    sub_239316A54(v47);
  }
  v27 = *(void (**)(id *__return_ptr))((*v18 & *v2) + 0x420);
  v27(&v49);
  if (v49 == (id)12)
  {
    sub_239331658((id)0xC);
    v28 = 12;
    goto LABEL_15;
  }
  sub_239331658(v49);
  sub_239331658((id)0xC);
  v27(&v49);
  if (v49 == (id)14)
  {
    sub_239331658((id)0xE);
    v28 = 14;
    goto LABEL_15;
  }
  sub_239331658(v49);
  sub_239331658((id)0xE);
  v27(&v49);
  if (v49 == (id)15)
  {
    sub_239331658((id)0xF);
    v28 = 15;
LABEL_15:
    sub_239331658((id)v28);
    type metadata accessor for OCCaptureData(0);
    type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    v29 = sub_239352674();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 2, 2, v29);
    v30 = sub_239352668();
    sub_2392688AC((uint64_t)v6, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    if ((v30 & 1) != 0)
    {
      sub_239318514((double *)a1);
      sub_23931985C(v31);
    }
    else
    {
      v32 = sub_239275B74();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v32, v7);
      v33 = sub_239352098();
      v34 = sub_239352578();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = v14;
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = (void *)swift_slowAlloc();
        v49 = v37;
        *(_DWORD *)v36 = 136380675;
        v48 = sub_23925F3EC(0xD000000000000017, 0x80000002393603D0, (uint64_t *)&v49);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v33, v34, "ObjectCaptureSession.%{private}s: Dropping the frame because ARKit tracking state is not normal!", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v37, -1, -1);
        MEMORY[0x23B83BC04](v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v35, v7);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
      }
    }
    return;
  }
  sub_239331658(v49);
  sub_239331658((id)0xF);
  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex)+ 0x888888888888888, 1) <= 0x888888888888888uLL)
  {
    v38 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v38, v7);
    v39 = sub_239352098();
    v40 = sub_239352560();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = v8;
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = (void *)swift_slowAlloc();
      v49 = v43;
      *(_DWORD *)v42 = 136380675;
      v48 = sub_23925F3EC(0xD000000000000017, 0x80000002393603D0, (uint64_t *)&v49);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v39, v40, "ObjectCaptureSession.%{private}s: Didn't process input frame because the state is not ready, detecting or scanning!", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v43, -1, -1);
      MEMORY[0x23B83BC04](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v7);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
}

void sub_239301320(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  __n128 *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  void (*v56)(uint64_t, id, __int128 *, id *, _QWORD, __n128, __n128, __n128, __n128, __n128);
  unsigned int v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  __n128 v63;
  __n128 v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  id v70[12];
  uint64_t v71;
  __int128 v72;
  unint64_t v73;
  unint64_t v74;
  char v75;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v53 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v53 - v12;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420))(v70, v11);
  if (v70[0] == (id)14)
  {
    v69 = a1;
    sub_239331658((id)0xE);
    sub_239331658((id)0xE);
    v14 = *(void **)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (!v14)
      goto LABEL_7;
    v15 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
    if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) != 0)
      goto LABEL_7;
    v16 = *((_QWORD *)v15 + 2);
    v17 = *((_QWORD *)v15 + 3);
    v18 = v15[32];
    v72 = *(_OWORD *)v15;
    v73 = v16;
    v74 = v17;
    v75 = v18 & 1;
    if ((v18 & 1) != 0)
      goto LABEL_7;
    v19 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud;
    v68.n128_u64[0] = v4;
    v20 = v3;
    v21 = v16;
    swift_beginAccess();
    v22 = v21;
    v3 = v20;
    v4 = v68.n128_u64[0];
    v23 = *(void **)v19;
    if (!*(_QWORD *)v19
      || (v24 = (__n128 *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform),
          (*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform + 64) & 1) != 0))
    {
LABEL_7:
      if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) != 0)
      {
        v25 = sub_239275A60();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v25, v3);
        v26 = sub_239352098();
        v27 = sub_23935256C();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          v29 = (void *)swift_slowAlloc();
          v70[0] = v29;
          *(_DWORD *)v28 = 136380675;
          v71 = sub_23925F3EC(0xD000000000000015, 0x80000002393603B0, (uint64_t *)v70);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v26, v27, "ObjectCaptureSession.%{private}s: Skipped bounding box detection because tap position is not available!", v28, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v29, -1, -1);
          MEMORY[0x23B83BC04](v28, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      else if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 32) & 1) != 0)
      {
        v35 = sub_239275A60();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v35, v3);
        v36 = sub_239352098();
        v37 = sub_23935256C();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          v39 = (void *)swift_slowAlloc();
          v70[0] = v39;
          *(_DWORD *)v38 = 136380675;
          v71 = sub_23925F3EC(0xD000000000000015, 0x80000002393603B0, (uint64_t *)v70);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v36, v37, "ObjectCaptureSession.%{private}s: Skipped bounding box detection because world point is not available!", v38, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v39, -1, -1);
          MEMORY[0x23B83BC04](v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      }
      else if (!v14)
      {
        v30 = sub_239275A60();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v30, v3);
        v31 = sub_239352098();
        v32 = sub_23935256C();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          v34 = (void *)swift_slowAlloc();
          v70[0] = v34;
          *(_DWORD *)v33 = 136380675;
          v71 = sub_23925F3EC(0xD000000000000015, 0x80000002393603B0, (uint64_t *)v70);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v31, v32, "ObjectCaptureSession.%{private}s: Skipped bounding box detection because plane is not available!", v33, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v34, -1, -1);
          MEMORY[0x23B83BC04](v33, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
      }
    }
    else
    {
      v40 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager);
      if (v40)
      {
        v41 = v19;
        v42.n128_u64[0] = v22;
        v42.n128_u64[1] = v17;
        v68 = v42;
        v43 = (void *)*((_QWORD *)v19 + 1);
        v44 = (void *)*((_QWORD *)v19 + 2);
        v45 = (void *)*((_QWORD *)v19 + 4);
        v67 = *((_QWORD *)v19 + 3);
        v53 = v45;
        v46 = (void *)*((_QWORD *)v19 + 5);
        v54 = (void *)*((_QWORD *)v19 + 6);
        v47 = (void *)*((_QWORD *)v19 + 8);
        v55 = (void *)*((_QWORD *)v19 + 7);
        v48 = (void *)*((_QWORD *)v19 + 9);
        v49 = (void *)*((_QWORD *)v41 + 10);
        v66 = v24[3];
        v65 = v24[2];
        v64 = v24[1];
        v63 = *v24;
        v50 = (void *)*((_QWORD *)v41 + 11);
        v70[0] = v23;
        v70[1] = v43;
        v60 = v43;
        v62 = v44;
        v70[2] = v44;
        v70[4] = v45;
        v70[5] = v46;
        v61 = v46;
        v70[6] = v54;
        v70[7] = v55;
        v70[8] = v47;
        v70[9] = v48;
        v70[10] = v49;
        v70[11] = v50;
        v59 = v50;
        v57 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel);
        v56 = *(void (**)(uint64_t, id, __int128 *, id *, _QWORD, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)v40 + 288);
        v51 = (uint64_t)v23;
        v58 = (uint64_t)v23;
        v52 = v14;
        sub_2393310C8(v51);
        swift_retain();
        v56(v69, v52, &v72, v70, v57, v68, v63, v64, v65, v66);
        swift_release();

        sub_239331104(v58);
      }
    }
  }
  else
  {
    sub_239331658(v70[0]);
    sub_239331658((id)0xE);
  }
}

uint64_t sub_239301A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD);
  unint64_t v12;
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  simd_float4 v42;
  simd_float4 v43;
  simd_float4 v44;
  simd_float4 v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  __n128 v66;
  __n128 v67;
  __n128 v68;
  uint64_t (*v69)();
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(_QWORD, _QWORD, _QWORD);
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78[5];
  _BYTE v79[688];
  simd_float4 v80[43];
  uint64_t v81;
  _QWORD v82[86];
  uint64_t v83[88];

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_2392FE71C();
  if ((result & 1) != 0)
  {
    v77 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer);
    if (v77)
    {
      v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 8);
      v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform);
      v75.n128_u64[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 24);
      v75.n128_u64[1] = v9;
      v71 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 16);
      v72 = v10;
      v11 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0
                                                             + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform
                                                             + 40);
      v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 32);
      v13 = *(uint64_t (**)())(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 48);
      v73 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform + 56);
      v74 = v11;
      v69 = v13;
      v70 = v12;
      v14 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
      swift_beginAccess();
      v15 = type metadata accessor for ObjectCaptureSession.Frame(0);
      v16 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v15 - 8) + 48);
      if (v16(v14, 1, v15) == 1)
      {
        result = swift_retain();
        __break(1u);
      }
      else
      {
        v17 = v14 + *(int *)(v15 + 48);
        v68.n128_u64[0] = *(_QWORD *)v17;
        v67.n128_u64[0] = *(_QWORD *)(v17 + 8);
        v66.n128_u64[0] = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 32);
        v64 = *(_QWORD *)(v17 + 48);
        v65.n128_u64[0] = v18;
        v63 = *(_QWORD *)(v17 + 56);
        v62 = *(_OWORD *)(v17 + 64);
        v76 = v15;
        *(_QWORD *)v17 = v77;
        *(_QWORD *)(v17 + 8) = 0;
        *(_QWORD *)(v17 + 16) = 0;
        *(_QWORD *)(v17 + 24) = 0;
        v19 = v75.n128_u64[1];
        *(_QWORD *)(v17 + 32) = v72;
        *(_QWORD *)(v17 + 40) = v19;
        v20 = v75.n128_u64[0];
        *(_QWORD *)(v17 + 48) = v71;
        *(_QWORD *)(v17 + 56) = v20;
        v21 = v74;
        *(_QWORD *)(v17 + 64) = v70;
        *(_QWORD *)(v17 + 72) = v21;
        v22 = v73;
        *(_QWORD *)(v17 + 80) = v69;
        *(_QWORD *)(v17 + 88) = v22;
        swift_endAccess();
        swift_retain_n();
        v23 = v76;
        sub_239331104(v68.n128_i64[0]);
        sub_23926059C(v14, (uint64_t)v7, (uint64_t *)&unk_25692A910);
        v74 = v16;
        result = v16(v7, 1, v23);
        if ((_DWORD)result != 1)
        {
          v24 = (uint64_t *)&v7[*(int *)(v23 + 48)];
          v25 = *v24;
          v26 = v24[2];
          v27 = v24[3];
          v28 = v24[4];
          v29 = v24[5];
          v31 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v24[6];
          v30 = v24[7];
          v32 = v24[8];
          v33 = v24[9];
          v34 = v24[10];
          v35 = v24[11];
          v36 = *v24;
          v71 = v24[1];
          v72 = v26;
          v73 = v27;
          v75.n128_u64[0] = v28;
          v75.n128_u64[1] = v29;
          sub_2393310C8(v36);
          sub_2392688AC((uint64_t)v7, type metadata accessor for ObjectCaptureSession.Frame);
          if (!v25)
            return swift_release();
          if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData) & 1) == 0)
          {
            swift_release();
            v56 = v25;
            return sub_239331104(v56);
          }
          v70 = v32;
          v69 = sub_2392FE204();
          v38 = v37;
          v39 = v76;
          result = v74(v37, 1, v76);
          if ((_DWORD)result != 1)
          {
            v68 = v75;
            v40.n128_u64[0] = (unint64_t)v31;
            v64 = v30;
            v40.n128_u64[1] = v30;
            v67 = v40;
            v40.n128_u64[0] = v70;
            v40.n128_u64[1] = v33;
            v66 = v40;
            v40.n128_u64[0] = v34;
            v40.n128_u64[1] = v35;
            v65 = v40;
            v41 = v38 + *(int *)(v39 + 52);
            sub_239268764(v41, (uint64_t)v82, (uint64_t *)&unk_25692A8B0);
            sub_239268764((uint64_t)v82, (uint64_t)v83, (uint64_t *)&unk_25692A8B0);
            if (sub_239341CC4((uint64_t)v83) != 1)
            {
              sub_2392DFAF4(v25, 0, v80);
              v42 = v80[1];
              v43 = v80[2];
              v44 = v80[3];
              v45 = v80[4];
              *(simd_float4 *)(v41 + 80) = v80[0];
              *(simd_float4 *)(v41 + 96) = v42;
              *(simd_float4 *)(v41 + 112) = v43;
              *(simd_float4 *)(v41 + 128) = v44;
              *(simd_float4 *)(v41 + 144) = v45;
              swift_bridgeObjectRelease();
            }
            ((void (*)(_BYTE *, _QWORD))v69)(v79, 0);
            v46 = v74;
            v74 = v31;
            v47 = sub_2392FE204();
            v49 = v48;
            v50 = v76;
            result = v46(v48, 1, v76);
            if ((_DWORD)result != 1)
            {
              v51 = v49 + *(int *)(v50 + 52);
              sub_239268764(v51, (uint64_t)v79, (uint64_t *)&unk_25692A8B0);
              sub_239268764((uint64_t)v79, (uint64_t)v80, (uint64_t *)&unk_25692A8B0);
              if (sub_239341CC4((uint64_t)v80) != 1)
              {
                sub_2392E00E0(v25, 0, v78, v68, v67, v66, v65);
                v52 = v78[1];
                v53 = v78[2];
                v54 = v78[3];
                v55 = v78[4];
                *(__n128 *)(v51 + 256) = v78[0];
                *(__n128 *)(v51 + 272) = v52;
                *(__n128 *)(v51 + 288) = v53;
                *(__n128 *)(v51 + 304) = v54;
                *(__n128 *)(v51 + 320) = v55;
                swift_bridgeObjectRelease();
              }
              ((void (*)(uint64_t *, _QWORD))v47)(&v81, 0);
              swift_release();
              v56 = v25;
              return sub_239331104(v56);
            }
LABEL_24:
            __break(1u);
            return result;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
      }
      __break(1u);
      goto LABEL_23;
    }
    v57 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v57, v1);
    v58 = sub_239352098();
    v59 = sub_239352578();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      v83[0] = v61;
      *(_DWORD *)v60 = 136380675;
      v82[0] = sub_23925F3EC(0xD000000000000025, 0x8000000239360380, v83);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v58, v59, "ObjectCaptureSession.%{private}s: MobileSfM point cloud is not available.", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v61, -1, -1);
      MEMORY[0x23B83BC04](v60, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

void sub_23930208C(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(id *__return_ptr, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v42;
  __int128 v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(id *__return_ptr, uint64_t);
  id v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  id v52;
  __int128 *v53;
  __int128 v54;
  __int128 v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  uint64_t *v70;
  uint64_t v71;
  __int128 *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  char **v77;
  int v78;
  unint64_t v79;
  uint64x2_t v80;
  int16x8_t v81;
  uint64_t v82;
  _DWORD *v88;
  uint64_t (*v89)(_QWORD *, uint64_t, _QWORD *, _OWORD *, _QWORD *, char *, char *);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)();
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t (*v121)();
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  float v127;
  unsigned int v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint64_t v135;
  void *v136;
  int v137;
  _QWORD v138[3];
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(id *__return_ptr, uint64_t);
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  char *v164;
  uint64_t *v165;
  _QWORD *v166;
  _BYTE v167[688];
  _QWORD v168[86];
  uint64_t v169;
  _QWORD v170[86];
  id v171[86];
  char v172[4];
  float v173;
  __int128 v174;
  char v175;
  unsigned __int32 v176;
  char v177;
  uint64_t v178;
  _QWORD v179[4];
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  int v188;
  _QWORD v189[8];
  char v190;
  _OWORD v191[4];
  char v192;
  _QWORD v193[8];
  char v194;

  v165 = a1;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v164 = (char *)v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_239352674();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239352680();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v138 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v138 - v17;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled) != 1)
    return;
  v154 = v2;
  v155 = v3;
  v19 = *(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420);
  v19(v171, v16);
  v156 = (void (*)(_QWORD *__return_ptr, _QWORD))v19;
  if (v171[0] == (id)12)
  {
    v20 = v1;
    sub_239331658((id)0xC);
    v21 = 12;
  }
  else
  {
    sub_239331658(v171[0]);
    sub_239331658((id)0xC);
    ((void (*)(id *__return_ptr))v19)(v171);
    if (v171[0] == (id)14)
    {
      v20 = v1;
      sub_239331658((id)0xE);
      v21 = 14;
    }
    else
    {
      sub_239331658(v171[0]);
      sub_239331658((id)0xE);
      v20 = v1;
      ((void (*)(id *__return_ptr))v19)(v171);
      if (v171[0] != (id)15)
      {
        sub_239331658(v171[0]);
        sub_239331658((id)0xF);
        return;
      }
      sub_239331658((id)0xF);
      v21 = 15;
    }
  }
  sub_239331658((id)v21);
  sub_239350E5C();
  OCSignPostsAriadneDbgCode();
  v22 = kdebug_trace();
  v23 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v20) + 0x4B8);
  v166 = v20;
  if ((v23(v22) & 1) != 0)
  {
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    *(_QWORD *)&v163 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = 0uLL;
    v41 = 0uLL;
    v42 = 1;
    v43 = 0uLL;
    v44 = 1;
    v45 = 0uLL;
    LODWORD(v162) = 1;
    goto LABEL_27;
  }
  *(_QWORD *)&v161 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  *(_QWORD *)&v160 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  *(_QWORD *)&v159 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  *(_QWORD *)&v158 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  *(_QWORD *)&v157 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  v46 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  v152 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  v153 = v46;
  v151 = *(_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  v150 = *((unsigned __int8 *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v18, 1, 2, v5);
  v48 = (void (*)(id *__return_ptr, uint64_t))v156;
  v156(v171, v47);
  v49 = v171[0];
  if (v171[0] != (id)15)
  {
    sub_239341BF8(v171[0]);
    sub_239331658(v49);
    sub_239331658((id)0xF);
    sub_239331658(v49);
    sub_239268820((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
LABEL_14:
    v32 = 0;
    *(_QWORD *)&v160 = 0;
    *(_QWORD *)&v159 = 0;
    *(_QWORD *)&v158 = 0;
    *(_QWORD *)&v157 = 0;
    v152 = 0;
    v153 = 0;
    v151 = 0;
    v150 = 1;
    goto LABEL_15;
  }
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  v50 = MEMORY[0x24BEDF358];
  sub_239268820((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  sub_239268820((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 2, v5)
    || ((*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5),
        v137 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5),
        v137 == *MEMORY[0x24BEDF330]))
  {
    v32 = v161;
    goto LABEL_15;
  }
  v32 = v161;
  if (v137 != *MEMORY[0x24BEDF348])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_14;
  }
LABEL_15:
  v51 = sub_2392688AC((uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  v48(v171, v51);
  v52 = v171[0];
  if (v171[0] == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    sub_2392688AC((uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    v53 = (__int128 *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
    if ((*((_BYTE *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
    {
      LODWORD(v162) = 0;
      v54 = v53[2];
      v146 = v53[3];
      v147 = v54;
      v55 = *v53;
      v148 = v53[1];
      v149 = v55;
      goto LABEL_20;
    }
  }
  else
  {
    sub_239341BF8(v171[0]);
    sub_239331658(v52);
    sub_239331658((id)0xF);
    sub_239331658(v52);
    sub_2392688AC((uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  }
  v148 = 0u;
  v149 = 0u;
  LODWORD(v162) = 1;
  v146 = 0u;
  v147 = 0u;
LABEL_20:
  v56 = (_QWORD *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud);
  swift_beginAccess();
  v57 = *v56;
  if (*v56)
  {
    *(_QWORD *)&v161 = v32;
    v58 = v56[10];
    v59 = v56[11];
    v60 = v56[8];
    v61 = v56[9];
    *(_QWORD *)&v163 = v56[7];
    v62 = v56[5];
    v144 = v56[6];
    v145 = v58;
    v63 = v56[4];
    v140 = v56[3];
    swift_retain();
    swift_retain();
    swift_retain();
    v143 = v59;
    v142 = v61;
    v141 = v60;
    v139 = v63;
    v140 = v62;
    sub_239331104(v57);
    v24 = *v56;
    if (*v56)
    {
      v64 = v56[7];
      v138[1] = v56[6];
      v138[2] = v64;
      v138[0] = v56[5];
      sub_2393310C8(v24);
      v65 = swift_retain();
      v32 = v161;
      sub_239331104(v65);
      v42 = 0;
      v33 = v160;
      v34 = v159;
      v35 = v158;
      v36 = v157;
      v38 = v152;
      v37 = v153;
      v39 = v151;
      v44 = v150;
      v41 = v148;
      v40 = v149;
      v45 = v146;
      v43 = v147;
      v31 = v143;
    }
    else
    {
      v42 = 0;
      v33 = v160;
      v34 = v159;
      v35 = v158;
      v36 = v157;
      v38 = v152;
      v37 = v153;
      v39 = v151;
      v44 = v150;
      v41 = v148;
      v40 = v149;
      v45 = v146;
      v43 = v147;
      v31 = v143;
      v32 = v161;
    }
    v27 = v144;
    v30 = v145;
    v28 = v141;
    v29 = v142;
    v25 = v139;
    v26 = v140;
  }
  else
  {
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    *(_QWORD *)&v163 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v42 = 1;
    v33 = v160;
    v34 = v159;
    v35 = v158;
    v36 = v157;
    v38 = v152;
    v37 = v153;
    v39 = v151;
    v44 = v150;
    v41 = v148;
    v40 = v149;
    v45 = v146;
    v43 = v147;
  }
LABEL_27:
  v193[0] = v32;
  v193[1] = v33;
  v193[2] = v34;
  v193[3] = v35;
  v193[4] = v36;
  v193[5] = v37;
  v193[6] = v38;
  v193[7] = v39;
  v194 = v44;
  v191[0] = v40;
  v191[1] = v41;
  v191[2] = v43;
  v191[3] = v45;
  v192 = v162;
  v189[0] = v25;
  v189[1] = v26;
  v189[2] = v27;
  v189[3] = v163;
  v189[4] = v28;
  v189[5] = v29;
  v189[6] = v30;
  v189[7] = v31;
  v190 = v42;
  v66 = objc_msgSend(*(id *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_configuration);
  if (!v66)
  {
    swift_release();
    __break(1u);
    goto LABEL_89;
  }
  v67 = v66;
  v68 = objc_msgSend(v66, sel_videoFormat);

  v69 = objc_msgSend(v68, sel_device);
  v70 = v165;
  v71 = v165[1];
  v72 = (__int128 *)((char *)v70 + *(int *)(type metadata accessor for OCCaptureData(0) + 40));
  v73 = *v72;
  v162 = v72[1];
  v163 = v73;
  v74 = v72[2];
  v160 = v72[3];
  v161 = v74;
  v75 = v72[4];
  v158 = v72[5];
  v159 = v75;
  v157 = v72[6];
  v76 = *v70;
  v77 = &off_250AD4000;
  objc_msgSend(v69, sel_ISO);
  v179[2] = 0;
  v179[0] = v71;
  v179[1] = 0;
  v180 = v163;
  v181 = v162;
  v182 = v161;
  v183 = v160;
  v184 = v159;
  v185 = v158;
  v186 = v157;
  v187 = v76;
  v188 = v78;
  v79 = sub_239296498();
  v80 = (uint64x2_t)vdupq_n_s64(v79);
  v175 = v79 & 1;
  v81 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v80, (uint64x2_t)xmmword_239356710), (int32x4_t)vshlq_u64(v80, (uint64x2_t)xmmword_239356700));
  *(int8x8_t *)v81.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v81), (int8x8_t)0x1000100010001);
  v176 = vmovn_s16(v81).u32[0];
  v177 = BYTE5(v79) & 1;
  v178 = v82;
  v172[0] = 0;
  v173 = 0.0;
  __asm { FMOV            V0.2D, #-1.0 }
  v174 = _Q0;
  v88 = *(_DWORD **)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager);
  if (v88)
  {
    v89 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD *, _OWORD *, _QWORD *, char *, char *))(*(_QWORD *)v88 + 128);
    swift_retain();
    if ((v89(v179, v24, v189, v191, v193, &v175, v172) & 1) != 0)
    {
      if (v175 != 1)
      {
LABEL_35:
        if (v176 != 1)
        {
LABEL_40:
          if (BYTE1(v176) != 1)
          {
LABEL_45:
            if (HIBYTE(v176) != 1)
            {
LABEL_50:
              if (BYTE2(v176) != 1)
              {
LABEL_55:
                if (v177 != 1)
                  goto LABEL_60;
                v110 = (char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
                swift_beginAccess();
                v111 = type metadata accessor for ObjectCaptureSession.Frame(0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v110, 1, v111) != 1)
                {
                  v112 = *(int *)(v111 + 44);
                  v113 = *(_QWORD *)&v110[v112];
                  if ((v113 & 0x10) == 0)
                    *(_QWORD *)&v110[v112] = v113 | 0x10;
                  swift_endAccess();
LABEL_60:
                  v114 = v178;
                  if (*(_QWORD *)(v178 + 16) < 3uLL)
                  {
                    v125 = swift_bridgeObjectRelease();
                    v126 = v164;
LABEL_80:
                    v129 = v166;
                    *(float *)((char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio) = v173;
                    *(_OWORD *)((char *)v129 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV) = v174;
                    v156(v171, v125);
                    if (v171[0] == (id)15)
                    {
                      sub_239331658((id)0xF);
                      sub_239331658((id)0xF);
                      v130 = sub_239275A60();
                      v131 = v154;
                      v132 = v155;
                      (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v126, v130, v154);
                      v133 = sub_239352098();
                      v134 = sub_239352560();
                      if (os_log_type_enabled(v133, v134))
                      {
                        v135 = swift_slowAlloc();
                        v136 = (void *)swift_slowAlloc();
                        v171[0] = v136;
                        *(_DWORD *)v135 = 136381187;
                        v165 = (uint64_t *)v24;
                        v170[0] = sub_23925F3EC(0xD00000000000001ELL, 0x8000000239360360, (uint64_t *)v171);
                        sub_2393526B0();
                        *(_WORD *)(v135 + 12) = 2050;
                        swift_beginAccess();
                        v168[0] = v174;
                        sub_2393526B0();
                        *(_WORD *)(v135 + 22) = 2050;
                        v168[0] = *((_QWORD *)&v174 + 1);
                        sub_2393526B0();
                        _os_log_impl(&dword_23925B000, v133, v134, "ObjectCaptureSession.%{private}s: Query frame's center of object in FOV = (%{public}f, %{public}f)", (uint8_t *)v135, 0x20u);
                        swift_arrayDestroy();
                        v77 = &off_250AD4000;
                        MEMORY[0x23B83BC04](v136, -1, -1);
                        MEMORY[0x23B83BC04](v135, -1, -1);
                        swift_release();

                        (*(void (**)(char *, uint64_t))(v155 + 8))(v164, v131);
                      }
                      else
                      {

                        swift_release();
                        (*(void (**)(char *, uint64_t))(v132 + 8))(v126, v131);
                      }
                    }
                    else
                    {
                      sub_239331658(v171[0]);
                      sub_239331658((id)0xF);
                      swift_release();
                    }
                    goto LABEL_71;
                  }
                  v165 = (uint64_t *)v24;
                  v115 = sub_2392FE204();
                  v117 = v116;
                  v118 = type metadata accessor for ObjectCaptureSession.Frame(0);
                  v119 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48);
                  if (v119(v117, 1, v118) != 1)
                  {
                    v120 = v117 + *(int *)(v118 + 52);
                    sub_239268764(v120, (uint64_t)v170, (uint64_t *)&unk_25692A8B0);
                    sub_239268764((uint64_t)v170, (uint64_t)v171, (uint64_t *)&unk_25692A8B0);
                    if (sub_239341CC4((uint64_t)v171) != 1)
                    {
                      *(_QWORD *)(v120 + 608) = v114;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                    }
                    ((void (*)(_QWORD *, _QWORD))v115)(v168, 0);
                    v121 = sub_2392FE204();
                    v123 = v122;
                    if (v119(v122, 1, v118) != 1)
                    {
                      swift_bridgeObjectRelease();
                      v124 = v123 + *(int *)(v118 + 52);
                      sub_239268764(v124, (uint64_t)v167, (uint64_t *)&unk_25692A8B0);
                      sub_239268764((uint64_t)v167, (uint64_t)v168, (uint64_t *)&unk_25692A8B0);
                      if (sub_239341CC4((uint64_t)v168) != 1)
                      {
                        *(_DWORD *)(v124 + 616) = v88[8];
                        *(_BYTE *)(v124 + 620) = 0;
                      }
                      v125 = ((uint64_t (*)(uint64_t *, _QWORD))v121)(&v169, 0);
                      v126 = v164;
                      v24 = (uint64_t)v165;
                      v77 = &off_250AD4000;
                      goto LABEL_80;
                    }
LABEL_96:
                    swift_release();
                    __break(1u);
                    return;
                  }
LABEL_95:
                  swift_release();
                  __break(1u);
                  goto LABEL_96;
                }
LABEL_94:
                swift_release();
                __break(1u);
                goto LABEL_95;
              }
              v106 = (char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
              swift_beginAccess();
              v107 = type metadata accessor for ObjectCaptureSession.Frame(0);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v106, 1, v107) != 1)
              {
                v108 = *(int *)(v107 + 44);
                v109 = *(_QWORD *)&v106[v108];
                if ((v109 & 4) == 0)
                  *(_QWORD *)&v106[v108] = v109 | 4;
                swift_endAccess();
                goto LABEL_55;
              }
LABEL_93:
              swift_release();
              __break(1u);
              goto LABEL_94;
            }
            v102 = (char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
            swift_beginAccess();
            v103 = type metadata accessor for ObjectCaptureSession.Frame(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103) != 1)
            {
              v104 = *(int *)(v103 + 44);
              v105 = *(_QWORD *)&v102[v104];
              if ((v105 & 8) == 0)
                *(_QWORD *)&v102[v104] = v105 | 8;
              swift_endAccess();
              goto LABEL_50;
            }
LABEL_92:
            swift_release();
            __break(1u);
            goto LABEL_93;
          }
          v98 = (char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
          swift_beginAccess();
          v99 = type metadata accessor for ObjectCaptureSession.Frame(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v98, 1, v99) != 1)
          {
            v100 = *(int *)(v99 + 44);
            v101 = *(_QWORD *)&v98[v100];
            if ((v101 & 0x20) == 0)
              *(_QWORD *)&v98[v100] = v101 | 0x20;
            swift_endAccess();
            goto LABEL_45;
          }
LABEL_91:
          swift_release();
          __break(1u);
          goto LABEL_92;
        }
        v94 = (char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
        swift_beginAccess();
        v95 = type metadata accessor for ObjectCaptureSession.Frame(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95) != 1)
        {
          v96 = *(int *)(v95 + 44);
          v97 = *(_QWORD *)&v94[v96];
          if ((v97 & 2) == 0)
            *(_QWORD *)&v94[v96] = v97 | 2;
          swift_endAccess();
          goto LABEL_40;
        }
LABEL_90:
        swift_release();
        __break(1u);
        goto LABEL_91;
      }
      v90 = (char *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
      swift_beginAccess();
      v91 = type metadata accessor for ObjectCaptureSession.Frame(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48))(v90, 1, v91) != 1)
      {
        v92 = *(int *)(v91 + 44);
        v93 = *(_QWORD *)&v90[v92];
        if ((v93 & 1) == 0)
          *(_QWORD *)&v90[v92] = v93 | 1;
        swift_endAccess();
        goto LABEL_35;
      }
LABEL_89:
      swift_release();
      __break(1u);
      goto LABEL_90;
    }
    swift_release();
  }
  swift_bridgeObjectRelease();
LABEL_71:
  sub_239350E68();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  if (*((_BYTE *)v166 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled) == 1)
  {
    swift_beginAccess();
    if (v172[0])
      v127 = v173 * 100.0;
    else
      v127 = -100.0;
    sub_239326E1C();
    objc_msgSend(v69, v77[275]);
    v168[0] = __PAIR64__(LODWORD(v127), v128);
    sub_2393520D4();

    swift_release();
  }
  else
  {

  }
  swift_release();
}

void sub_239303140()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(id *__return_ptr, uint64_t);
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, double, double);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, __n128, __n128);
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, double, double);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, double, double);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *);
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double (*v56)(uint64_t);
  uint64_t v57;
  double v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, double, double);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t, uint64_t);
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double (*v80)(uint64_t);
  uint64_t v81;
  double v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  double (*v97)(uint64_t);
  uint64_t v98;
  double v99;
  uint64_t v100;
  void (*v101)(uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t);
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  double (*v114)(uint64_t);
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double (*v120)(uint64_t);
  uint64_t v121;
  double v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char *v126;
  char *v127;
  NSObject *v128;
  os_log_type_t v129;
  uint64_t v130;
  uint64_t v131;
  double (*v132)(uint64_t);
  uint64_t v133;
  double v134;
  uint64_t v135;
  void (*v136)(uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t (*v142)(uint64_t);
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  double (*v148)(uint64_t);
  uint64_t v149;
  double v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double (*v154)(uint64_t);
  uint64_t v155;
  double v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  void (*v160)(char *);
  id v161;
  void (*v162)(char *, uint64_t, uint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  double v169;
  uint64_t v170;
  double v171;
  uint64_t v172;

  v1 = v0;
  v2 = sub_2393520B0();
  v164 = *(char **)(v2 - 8);
  v165 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v162 = (void (*)(char *, uint64_t, uint64_t))((char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v159 - v6;
  v8 = MEMORY[0x24BDAC7A8](v5);
  v163 = (char *)&v159 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v159 - v10;
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_239352680();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v159 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v159 - v21;
  v23 = *(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v0) + 0x420);
  v23(&v167, v20);
  if (v167 == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v22, 1, 2, v12);
    sub_239268820((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v19, 2, v12))
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v19, v12);
      v125 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
      if (v125 != *MEMORY[0x24BEDF330] && v125 != *MEMORY[0x24BEDF348])
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        sub_2392688AC((uint64_t)v22, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
        return;
      }
    }
    v24 = (double *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV];
    v25 = *(double *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV];
    v161 = v22;
    if (v25 >= 0.0 && v25 <= 1.0)
    {
      v26 = v24[1];
      if (v26 >= 0.0 && v26 <= 1.0)
      {
        v27 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
        v28 = *(_QWORD *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
        v29 = v165;
        if (!v28)
        {
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        v30 = *(void (**)(uint64_t, double, double))(*(_QWORD *)v28 + 232);
        v31 = swift_retain();
        v30(v31, v25, v26);
        swift_release();
        v32 = *(_QWORD *)&v1[v27];
        if (!v32)
        {
LABEL_71:
          __break(1u);
          return;
        }
        v33 = *(_QWORD *)v24;
        v34 = *((_QWORD *)v24 + 1);
        v35 = *(void (**)(uint64_t, __n128, __n128))(*(_QWORD *)v32 + 256);
        v36 = swift_retain();
        v37.n128_u64[0] = v33;
        v38.n128_u64[0] = v34;
LABEL_20:
        v35(v36, v37, v38);
        swift_release();
        v72 = sub_239275A60();
        v73 = v164;
        v74 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v164 + 2);
        v74(v11, v72, v29);
        v1 = v1;
        v75 = sub_239352098();
        v76 = sub_239352560();
        if (!os_log_type_enabled(v75, v76))
        {

          v89 = (void (*)(char *, uint64_t))*((_QWORD *)v73 + 1);
          v89(v11, v29);
LABEL_26:
          v90 = v163;
          v74(v163, v72, v29);
          v1 = v1;
          v91 = sub_239352098();
          v92 = sub_239352560();
          if (!os_log_type_enabled(v91, v92))
          {

            v89(v90, v29);
LABEL_31:
            v105 = (uint64_t)v161;
            if (v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] != 1)
            {
LABEL_36:
              sub_2392688AC(v105, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
              return;
            }
            sub_239326E78();
            v106 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
            v107 = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
            if (v107)
            {
              v108 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v107 + 312);
              v109 = swift_retain();
              v110 = (void *)v108(v109);
              v112 = v111;
              swift_release();
              v113 = *(_QWORD *)&v1[v106];
              if (v113)
              {
                v114 = *(double (**)(uint64_t))(*(_QWORD *)v113 + 120);
                v115 = swift_retain();
                v116 = v114(v115);
                v118 = v117;
                swift_release();
                v119 = *(_QWORD *)&v1[v106];
                if (v119)
                {
                  v120 = *(double (**)(uint64_t))(*(_QWORD *)v119 + 128);
                  v121 = swift_retain();
                  v122 = v120(v121);
                  v124 = v123;
                  swift_release();
                  v167 = v110;
                  v168 = v112;
                  v169 = v116;
                  v170 = v118;
                  v171 = v122;
                  v172 = v124;
                  sub_2393520D4();
                  swift_bridgeObjectRelease();
                  swift_release();
                  goto LABEL_36;
                }
                goto LABEL_62;
              }
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
              goto LABEL_63;
            }
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          v164 = (char *)v89;
          v93 = swift_slowAlloc();
          v94 = (void *)swift_slowAlloc();
          v167 = v94;
          *(_DWORD *)v93 = 136381187;
          v166 = sub_23925F3EC(0xD000000000000014, 0x8000000239360340, (uint64_t *)&v167);
          sub_2393526B0();
          *(_WORD *)(v93 + 12) = 2050;
          v95 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
          v96 = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
          if (v96)
          {
            v97 = *(double (**)(uint64_t))(*(_QWORD *)v96 + 128);
            v98 = swift_retain();
            v99 = v97(v98);
            swift_release();
            v166 = *(_QWORD *)&v99;
            sub_2393526B0();
            *(_WORD *)(v93 + 22) = 2050;
            v100 = *(_QWORD *)&v1[v95];
            if (v100)
            {
              v101 = *(void (**)(uint64_t))(*(_QWORD *)v100 + 128);
              v102 = swift_retain();
              v101(v102);
              v104 = v103;
              swift_release();
              v166 = v104;
              sub_2393526B0();

              _os_log_impl(&dword_23925B000, v91, v92, "ObjectCaptureSession.%{private}s: During scanning: Camera exposure point of interest: (%{public}f,%{public}f)", (uint8_t *)v93, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v94, -1, -1);
              MEMORY[0x23B83BC04](v93, -1, -1);

              ((void (*)(char *, uint64_t))v164)(v163, v165);
              goto LABEL_31;
            }
LABEL_59:

            __break(1u);
            goto LABEL_60;
          }
LABEL_58:

          __break(1u);
          goto LABEL_59;
        }
        v160 = (void (*)(char *))v72;
        v162 = v74;
        v77 = swift_slowAlloc();
        v159 = (void *)swift_slowAlloc();
        v167 = v159;
        *(_DWORD *)v77 = 136381187;
        v166 = sub_23925F3EC(0xD000000000000014, 0x8000000239360340, (uint64_t *)&v167);
        sub_2393526B0();
        *(_WORD *)(v77 + 12) = 2050;
        v78 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
        v79 = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
        if (v79)
        {
          v80 = *(double (**)(uint64_t))(*(_QWORD *)v79 + 120);
          v81 = swift_retain();
          v82 = v80(v81);
          swift_release();
          v166 = *(_QWORD *)&v82;
          sub_2393526B0();
          *(_WORD *)(v77 + 22) = 2050;
          v83 = *(_QWORD *)&v1[v78];
          if (v83)
          {
            v84 = *(void (**)(uint64_t))(*(_QWORD *)v83 + 120);
            v85 = swift_retain();
            v84(v85);
            v87 = v86;
            swift_release();
            v166 = v87;
            sub_2393526B0();

            _os_log_impl(&dword_23925B000, v75, v76, "ObjectCaptureSession.%{private}s: During scanning: Camera focus point of interest: (%{public}f,%{public}f)", (uint8_t *)v77, 0x20u);
            v88 = v159;
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v88, -1, -1);
            MEMORY[0x23B83BC04](v77, -1, -1);

            v29 = v165;
            v89 = (void (*)(char *, uint64_t))*((_QWORD *)v164 + 1);
            v89(v11, v165);
            v74 = v162;
            v72 = (uint64_t)v160;
            goto LABEL_26;
          }
LABEL_57:

          __break(1u);
          goto LABEL_58;
        }
LABEL_56:

        __break(1u);
        goto LABEL_57;
      }
    }
    v67 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
    v68 = *(_QWORD *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
    v29 = v165;
    if (v68)
    {
      v69 = *(void (**)(uint64_t, double, double))(*(_QWORD *)v68 + 232);
      v70 = swift_retain();
      v69(v70, 0.5, 0.5);
      swift_release();
      v71 = *(_QWORD *)&v1[v67];
      if (v71)
      {
        v35 = *(void (**)(uint64_t, __n128, __n128))(*(_QWORD *)v71 + 256);
        v36 = swift_retain();
        v37.n128_u64[0] = 0.5;
        v38.n128_u64[0] = 0.5;
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
  sub_239331658(v167);
  sub_239331658((id)0xF);
  ((void (*)(id *__return_ptr))v23)(&v167);
  if (v167 != (id)15)
  {
    sub_239331658(v167);
    sub_239331658((id)0xF);
    return;
  }
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  v39 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
  v40 = *(_QWORD *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
  if (!v40)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v41 = *(void (**)(uint64_t, double, double))(*(_QWORD *)v40 + 232);
  v42 = swift_retain();
  v41(v42, 0.5, 0.5);
  swift_release();
  v43 = *(_QWORD *)&v1[v39];
  v44 = v164;
  v45 = v165;
  if (!v43)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v46 = *(void (**)(uint64_t, double, double))(*(_QWORD *)v43 + 256);
  v47 = swift_retain();
  v46(v47, 0.5, 0.5);
  swift_release();
  v48 = sub_239275A60();
  v49 = (void (*)(char *))*((_QWORD *)v44 + 2);
  v163 = (char *)v48;
  v49(v7);
  v50 = v1;
  v51 = sub_239352098();
  v52 = sub_239352560();
  if (os_log_type_enabled(v51, v52))
  {
    v160 = v49;
    v161 = v50;
    v53 = swift_slowAlloc();
    v159 = (void *)swift_slowAlloc();
    v167 = v159;
    *(_DWORD *)v53 = 136381187;
    v166 = sub_23925F3EC(0xD000000000000014, 0x8000000239360340, (uint64_t *)&v167);
    sub_2393526B0();
    *(_WORD *)(v53 + 12) = 2050;
    v54 = *(_QWORD *)&v1[v39];
    if (!v54)
    {
LABEL_63:

      __break(1u);
      goto LABEL_64;
    }
    v55 = v39;
    v56 = *(double (**)(uint64_t))(*(_QWORD *)v54 + 120);
    v57 = swift_retain();
    v58 = v56(v57);
    swift_release();
    v166 = *(_QWORD *)&v58;
    sub_2393526B0();
    *(_WORD *)(v53 + 22) = 2050;
    v59 = *(_QWORD *)&v1[v55];
    if (!v59)
    {
LABEL_64:

      __break(1u);
      goto LABEL_65;
    }
    v39 = v55;
    v60 = *(void (**)(uint64_t))(*(_QWORD *)v59 + 120);
    v61 = swift_retain();
    v60(v61);
    v63 = v62;
    swift_release();
    v166 = v63;
    sub_2393526B0();
    v64 = (char *)v161;

    _os_log_impl(&dword_23925B000, v51, v52, "ObjectCaptureSession.%{private}s: In capture mode: Camera focus point of interest: (%{public}f,%{public}f)", (uint8_t *)v53, 0x20u);
    v65 = v159;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v65, -1, -1);
    MEMORY[0x23B83BC04](v53, -1, -1);

    v45 = v165;
    v66 = (void (*)(char *, uint64_t))*((_QWORD *)v164 + 1);
    v66(v7, v165);
    v49 = v160;
  }
  else
  {

    v66 = (void (*)(char *, uint64_t))*((_QWORD *)v44 + 1);
    v66(v7, v45);
    v64 = v50;
  }
  v126 = (char *)v162;
  ((void (*)(_QWORD, char *, uint64_t))v49)(v162, v163, v45);
  v127 = v64;
  v128 = sub_239352098();
  v129 = sub_239352560();
  if (os_log_type_enabled(v128, v129))
  {
    v163 = (char *)v66;
    v164 = v127;
    v130 = swift_slowAlloc();
    v161 = (id)swift_slowAlloc();
    v167 = v161;
    *(_DWORD *)v130 = 136381187;
    v166 = sub_23925F3EC(0xD000000000000014, 0x8000000239360340, (uint64_t *)&v167);
    sub_2393526B0();
    *(_WORD *)(v130 + 12) = 2050;
    v131 = *(_QWORD *)&v1[v39];
    if (!v131)
    {
LABEL_65:

      __break(1u);
      goto LABEL_66;
    }
    v132 = *(double (**)(uint64_t))(*(_QWORD *)v131 + 128);
    v133 = swift_retain();
    v134 = v132(v133);
    swift_release();
    v166 = *(_QWORD *)&v134;
    sub_2393526B0();
    *(_WORD *)(v130 + 22) = 2050;
    v135 = *(_QWORD *)&v1[v39];
    if (!v135)
    {
LABEL_66:

      __break(1u);
      goto LABEL_67;
    }
    v136 = *(void (**)(uint64_t))(*(_QWORD *)v135 + 128);
    v137 = swift_retain();
    v136(v137);
    v139 = v138;
    swift_release();
    v166 = v139;
    sub_2393526B0();
    v127 = v164;

    _os_log_impl(&dword_23925B000, v128, v129, "ObjectCaptureSession.%{private}s: In capture mode: Camera exposure point of interest: (%{public}f,%{public}f)", (uint8_t *)v130, 0x20u);
    v140 = v161;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v140, -1, -1);
    MEMORY[0x23B83BC04](v130, -1, -1);

    ((void (*)(char *, uint64_t))v163)(v126, v165);
  }
  else
  {

    v66(v126, v45);
  }
  if (v127[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] == 1)
  {
    sub_239326E78();
    v141 = *(_QWORD *)&v1[v39];
    if (!v141)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v142 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v141 + 312);
    v143 = swift_retain();
    v144 = (void *)v142(v143);
    v146 = v145;
    swift_release();
    v147 = *(_QWORD *)&v1[v39];
    if (!v147)
    {
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    v148 = *(double (**)(uint64_t))(*(_QWORD *)v147 + 120);
    v149 = swift_retain();
    v150 = v148(v149);
    v152 = v151;
    swift_release();
    v153 = *(_QWORD *)&v1[v39];
    if (!v153)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v154 = *(double (**)(uint64_t))(*(_QWORD *)v153 + 128);
    v155 = swift_retain();
    v156 = v154(v155);
    v158 = v157;
    swift_release();
    v167 = v144;
    v168 = v146;
    v169 = v150;
    v170 = v152;
    v171 = v156;
    v172 = v158;
    sub_2393520D4();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_239303F60(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  float v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, _BYTE *, _BYTE *, uint64_t *, void (*)(int), uint64_t, float);
  char v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[4];
  int v61;
  uint64_t v62;
  uint64_t (*v63)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _QWORD v68[5];
  int v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  _QWORD v79[86];
  uint64_t v80[87];
  char v81[32];
  _BYTE v82[80];

  v3 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (double *)&v60[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v60[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v60[-v11];
  v13 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v60[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_239352680();
  MEMORY[0x24BDAC7A8](v16);
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager];
  if (v18)
  {
    v67 = &v60[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
    swift_retain();
    if ((sub_2392FE3C0() & 1) == 0 || (v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled] & 1) == 0)
      return swift_release();
    v66 = v6;
    sub_239268764((uint64_t)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform], (uint64_t)v82, &qword_25692A8A0);
    v19 = sub_239352674();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v67, 1, 2, v19);
    v20 = (uint64_t)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
    swift_beginAccess();
    sub_23926059C(v20, (uint64_t)v15, (uint64_t *)&unk_25692A910);
    v21 = type metadata accessor for ObjectCaptureSession.Frame(0);
    v63 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
    result = v63(v15, 1, v21);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v65 = v21;
      v80[0] = *(_QWORD *)&v15[*(int *)(v21 + 44)];
      v23 = *(float *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio];
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v1;
      v25 = *(uint64_t (**)(uint64_t, _BYTE *, _BYTE *, uint64_t *, void (*)(int), uint64_t, float))(*(_QWORD *)v18 + 480);
      v64 = v1;
      v26 = v25(a1, v82, v67, v80, sub_239341CDC, v24, v23);
      swift_release();
      sub_2392688AC((uint64_t)v15, type metadata accessor for ObjectCaptureSession.Frame);
      if ((v26 & 1) == 0)
        goto LABEL_18;
      v27 = sub_239275A60();
      v28 = v66;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v12, v27, v66);
      sub_239268820(a1, (uint64_t)v5, type metadata accessor for OCCaptureData);
      v29 = sub_239352098();
      v30 = sub_239352578();
      v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        v32 = swift_slowAlloc();
        v62 = swift_slowAlloc();
        v80[0] = v62;
        *(_DWORD *)v32 = 136380931;
        v79[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360320, v80);
        sub_2393526B0();
        *(_WORD *)(v32 + 12) = 2082;
        v33 = sub_2392DEFE0(*v5);
        v61 = v31;
        v79[0] = sub_23925F3EC(v33, v34, v80);
        sub_2393526B0();
        swift_bridgeObjectRelease();
        sub_2392688AC((uint64_t)v5, type metadata accessor for OCCaptureData);
        _os_log_impl(&dword_23925B000, v29, (os_log_type_t)v61, "ObjectCaptureSession.%{private}s: Taking automatic shot around video frame %{public}s", (uint8_t *)v32, 0x16u);
        v35 = v62;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v35, -1, -1);
        MEMORY[0x23B83BC04](v32, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v66);
      }
      else
      {
        sub_2392688AC((uint64_t)v5, type metadata accessor for OCCaptureData);

        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v28);
      }
      v41 = v65;
      if (v64[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled] != 1)
      {
LABEL_18:
        sub_2392688AC((uint64_t)v67, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
        return swift_release();
      }
      v42 = sub_2392FE204();
      v44 = v43;
      result = v63(v43, 1, v41);
      if ((_DWORD)result != 1)
      {
        v45 = (uint64_t)&v44[*(int *)(v41 + 52)];
        sub_239268764(v45, (uint64_t)v79, (uint64_t *)&unk_25692A8B0);
        sub_239268764((uint64_t)v79, (uint64_t)v80, (uint64_t *)&unk_25692A8B0);
        if (sub_239341CC4((uint64_t)v80) != 1)
        {
          (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v18 + 448))(v68);
          v46 = v68[1];
          v47 = v68[3];
          v48 = v69;
          v49 = v70;
          v50 = v71;
          v51 = v72;
          v52 = v73;
          v53 = v74;
          v54 = v75;
          v55 = v76;
          v56 = v77;
          v57 = v78;
          v58 = v68[2];
          v59 = v68[4];
          *(_DWORD *)(v45 + 624) = v68[0];
          *(_QWORD *)(v45 + 632) = v46;
          *(_QWORD *)(v45 + 640) = v58;
          *(_QWORD *)(v45 + 648) = v47;
          *(_QWORD *)(v45 + 656) = v59;
          *(_DWORD *)(v45 + 664) = v48;
          *(_BYTE *)(v45 + 668) = v49;
          *(_BYTE *)(v45 + 669) = v50;
          *(_BYTE *)(v45 + 670) = v51;
          *(_BYTE *)(v45 + 671) = v52;
          *(_BYTE *)(v45 + 672) = v53;
          *(_BYTE *)(v45 + 673) = v54;
          *(_BYTE *)(v45 + 674) = v55;
          *(_BYTE *)(v45 + 675) = v56;
          *(_BYTE *)(v45 + 676) = v57;
        }
        ((void (*)(char *, _QWORD))v42)(v81, 0);
        swift_release();
        return sub_2392688AC((uint64_t)v67, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      }
    }
    __break(1u);
    return result;
  }
  v36 = sub_239275A60();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v36, v6);
  v37 = sub_239352098();
  v38 = sub_23935256C();
  if (os_log_type_enabled(v37, (os_log_type_t)v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v80[0] = v40;
    *(_DWORD *)v39 = 136380675;
    v79[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360320, v80);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v37, (os_log_type_t)v38, "ObjectCaptureSession.%{private}s: Failed to run automatic capture - capture manager has not been initialized!", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v40, -1, -1);
    MEMORY[0x23B83BC04](v39, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_239304684()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
  if (v6)
  {
    v7 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x4D0);
    v8 = swift_retain();
    v9 = v7(v8);
    if ((sub_2392FE3C0() & 1) != 0)
    {
      v10 = (*(uint64_t (**)(void))(*(_QWORD *)v6 + 576))();
      if ((v9 & 1) == (v10 & 1))
        return swift_release();
    }
    else
    {
      if ((v9 & 1) == 0)
        return swift_release();
      v10 = 0;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v18) = v10 & 1;
    v1;
    sub_239352128();
    sub_2392F5C28();
    return swift_release();
  }
  else
  {
    v11 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
    v12 = sub_239352098();
    v13 = sub_23935256C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v18 = v15;
      *(_DWORD *)v14 = 136380675;
      v17 = sub_23925F3EC(0xD000000000000018, 0x8000000239360300, &v18);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v12, v13, "ObjectCaptureSession.%{private}s: Failed to update manual shot status - capture manager has not been initialized!", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v15, -1, -1);
      MEMORY[0x23B83BC04](v14, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_239304910(char *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  float32x4_t *v63;
  void *v64;
  char *v65;
  __CVBuffer *v66;
  void *v67;
  uint64_t v68;
  __CVBuffer *v69;
  size_t Height;
  BOOL v71;
  void *v72;
  void *v73;
  float32x4_t *v74;
  float32x4_t v75;
  float32x4_t v76;
  int *v77;
  void *v78;
  char *v79;
  float32x4_t v80;
  float32x4_t v81;
  float32x4_t v82;
  char v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t (*v94)(uint64_t);
  id v95;
  char v96;
  float32x4_t *v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  float32x4_t *v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _BYTE *v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  float32x4_t v118;
  float32x4_t v119;
  float32x4_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(_QWORD *__return_ptr);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t result;
  void *v128;
  char v129;
  char v130;
  id v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  BOOL v147;
  id v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  char *v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  void (*v174)(uint64_t, uint64_t, __CVBuffer *);
  char *v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  __int32 v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int *v187;
  char *v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  void (*v197)(char *, __CVBuffer *);
  char *v198;
  _QWORD *v199;
  NSObject *v200;
  os_log_type_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t *v206;
  char *v207;
  uint64_t v208;
  NSObject *v209;
  os_log_type_t v210;
  __int32 v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  int v219;
  char v220;
  uint64_t v221;
  void (*v222)(void);
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void (*v227)(uint64_t);
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  unint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  NSObject *v243;
  os_log_type_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(char *, uint64_t *, uint64_t);
  uint64_t v256;
  _QWORD *v257;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t *v264;
  NSObject *v265;
  os_log_type_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  void (*v273)(uint64_t);
  uint64_t v274;
  uint64_t v275;
  float32x4_t v276;
  float32x4_t v277;
  float32x4_t v278;
  float32x4_t v279;
  float32x4_t v280;
  float32x4_t v281;
  uint64_t *v282;
  id v283;
  void *v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  id v289;
  char v290;
  void *v291;
  uint64_t *v292;
  uint64_t v293;
  id v294;
  id v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  id v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  unint64_t *v318;
  unint64_t v319;
  char v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  unint64_t v324;
  unint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  void *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  uint64_t v337;
  uint64_t *v338;
  NSObject *v339;
  os_log_type_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t *v345;
  char *v346;
  char *v347;
  uint64_t *v348;
  uint64_t *v349;
  char *v350;
  uint64_t (*v351)(uint64_t);
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  char *v356;
  char *v357;
  float32x4_t *v358;
  void (*v359)(float32x4_t *__return_ptr);
  char *v360;
  char *v361;
  char *v362;
  uint64_t v363;
  uint64_t *v364;
  uint64_t v365;
  uint64_t v366;
  _QWORD *v367;
  char *v368;
  uint64_t v369;
  void (*v370)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  _QWORD *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  int v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  double v385;
  id v386;
  id v387;
  uint64_t v388;
  char *v389;
  float32x4_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  float32x4_t v395;
  float32x4_t v396;
  float32x4_t v397;
  float32x4_t v398;
  void (*v399)(char *, uint64_t);
  void (*v400)(uint64_t, uint64_t, __CVBuffer *);
  id v401;
  id DataBuffer;
  uint64_t v403;
  float32x4_t v404;
  id v405[3];
  id v406;
  float32x4_t v407;
  float32x4_t v408;
  float32x4_t v409;
  double *v410;
  uint64_t v411;
  uint64_t *v412;
  __int128 v413;
  int *v414;
  float32x4_t v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  uint64_t v419;
  uint64_t v420[32];
  _BYTE v421[151];
  char v422;
  char v423;
  _QWORD v424[18];
  char v425;
  _BYTE v426[160];
  _BYTE v427[160];
  _OWORD v428[4];
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  char v439;
  float32x4_t v440;
  float32x4_t v441;
  float32x4_t v442;
  float32x4_t v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  char v454;
  _OWORD v455[14];
  char v456;
  _BYTE v457[80];
  _QWORD v458[8];
  char v459;
  _OWORD v460[4];
  char v461;
  simd_float4x4 v462;
  simd_float4x4 v463;

  v412 = a2;
  v5 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v5);
  v369 = (uint64_t)&v345 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v366 = sub_23925FB08((uint64_t *)&unk_25692B680);
  MEMORY[0x24BDAC7A8](v366);
  v367 = (uint64_t **)((char *)&v345 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v363 = sub_23925FB08(&qword_256929AC0);
  MEMORY[0x24BDAC7A8](v363);
  v364 = (uint64_t *)((char *)&v345 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_23925FB08(&qword_2569295B0);
  MEMORY[0x24BDAC7A8](v9);
  v354 = (uint64_t)&v345 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PhotogrammetrySample(0);
  v352 = *(_QWORD *)(v11 - 8);
  v353 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v348 = (uint64_t *)((char *)&v345 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v345 - v14);
  v414 = (int *)type metadata accessor for OCCaptureData(0);
  v16 = MEMORY[0x24BDAC7A8](v414);
  v345 = (uint64_t *)((char *)&v345 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v375 = (uint64_t **)((char *)&v345 - v18);
  v19 = (double *)sub_239352020();
  *(double *)&v413 = *(v19 - 1);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v368 = (char *)&v345 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v374 = (char *)&v345 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v357 = (char *)&v345 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v389 = (char *)&v345 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v345 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v345 - v31;
  v411 = sub_2393520B0();
  v405[0] = *(id *)(v411 - 8);
  v33 = MEMORY[0x24BDAC7A8](v411);
  v346 = (char *)&v345 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v350 = (char *)&v345 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v373 = (char *)&v345 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v371 = (char *)&v345 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v400 = (void (*)(uint64_t, uint64_t, __CVBuffer *))((char *)&v345 - v42);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v399 = (void (*)(char *, uint64_t))((char *)&v345 - v44);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v361 = (char *)&v345 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v360 = (char *)&v345 - v47;
  v48 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v48);
  v388 = (uint64_t)&v345 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23925FB08(&qword_2569281C0);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v362 = (char *)&v345 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v347 = (char *)&v345 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v408.i64[0] = (uint64_t)&v345 - v55;
  v403 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v365 = *(_QWORD *)(v403 - 8);
  MEMORY[0x24BDAC7A8](v403);
  v410 = (double *)((char *)&v345 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_239352680();
  MEMORY[0x24BDAC7A8](v57);
  *(_QWORD *)&v417 = (char *)&v345 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v60 = MEMORY[0x24BDAC7A8](v59);
  v407.i64[0] = (uint64_t)&v345 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60);
  v63 = (float32x4_t *)((char *)&v345 - v62);
  v64 = (void *)*((_QWORD *)a1 + 2);
  *(_QWORD *)&v418 = v2;
  *(_QWORD *)&v416 = v19;
  v406 = v64;
  v356 = v32;
  if (!v64)
    goto LABEL_10;
  v65 = (char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
  swift_beginAccess();
  if (v65[8] != 1)
    goto LABEL_10;
  v66 = (__CVBuffer *)v406;
  if (CVPixelBufferGetWidth(v66) != 256)
  {
    __break(1u);
    goto LABEL_118;
  }
  if (CVPixelBufferGetHeight(v66) != 192)
  {
LABEL_118:
    __break(1u);
LABEL_119:
    swift_once();
LABEL_74:
    if ((uint64_t)v2 >= qword_25692E888)
    {
      v240 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown;
      if ((*(_BYTE *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown) & 1) == 0)
      {
        v241 = sub_239275A60();
        v400(v59, v241, v66);
        v242 = v418;
        v408.i64[0] = (uint64_t)(id)v418;
        v243 = sub_239352098();
        v244 = sub_239352578();
        if (os_log_type_enabled(v243, v244))
        {
          v245 = swift_slowAlloc();
          v246 = swift_slowAlloc();
          v440.i64[0] = v246;
          *(_DWORD *)v245 = 136381187;
          *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
          sub_2393526B0();
          *(_WORD *)(v245 + 12) = 2050;
          *(_QWORD *)&v428[0] = *(_QWORD *)(*(_QWORD *)v30 + 16);
          sub_2393526B0();
          v247 = v408.i64[0];

          *(_WORD *)(v245 + 22) = 2050;
          *(_QWORD *)&v428[0] = qword_25692E888;
          v242 = v418;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v243, v244, "ObjectCaptureSession.%{private}s: Turned off mobileSfM because number of images (%{public}ld) exceeded the limit %{public}ld", (uint8_t *)v245, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v246, -1, -1);
          MEMORY[0x23B83BC04](v245, -1, -1);

          v248 = v247;
          v249 = v373;
          v250 = v411;
        }
        else
        {

          v248 = v408.i64[0];
          v249 = (char *)v59;
          v250 = (uint64_t)v66;
        }
        v399(v249, v250);
        *(_BYTE *)(v242 + v240) = 1;
        v272 = *(_QWORD *)(v248 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager);
        v19 = v410;
        if (v272)
        {
          v273 = *(void (**)(uint64_t))(*(_QWORD *)v272 + 608);
          v274 = swift_retain();
          v273(v274);
          swift_release();
        }
      }
    }
    else
    {
      v238 = *(_QWORD *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager);
      if (v238)
      {
        v440.i64[0] = v3;
        v440.i64[1] = (uint64_t)v401;
        v441.i64[0] = (uint64_t)v406;
        v441.i64[1] = v372;
        v442.i64[0] = (uint64_t)DataBuffer;
        swift_beginAccess();
        swift_retain();
        v239 = v354;
        static PhotogrammetrySample.makeSample(shot:shotMetadata:)((uint64_t)&v440, v19, v354);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v352 + 48))(v239, 1, v353) == 1)
        {
          swift_release();
          sub_23925FE28(v239, &qword_2569295B0);
          if ((v404.i8[0] & 1) == 0)
            goto LABEL_91;
        }
        else
        {
          v251 = v15;
          v252 = v349;
          sub_2392C4FE0(v239, (uint64_t)v349, type metadata accessor for PhotogrammetrySample);
          (*(void (**)(uint64_t *))(*(_QWORD *)v238 + 584))(v252);
          v253 = (uint64_t)v374;
          v254 = v416;
          v255 = (void (*)(char *, uint64_t *, uint64_t))v409.i64[0];
          ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v374, v251, v416);
          v256 = *v252;
          v257 = (_QWORD *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap);
          swift_beginAccess();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v428[0] = *v257;
          *v257 = 0x8000000000000000;
          sub_23932E664(v256, v253, isUniquelyReferenced_nonNull_native);
          *v257 = *(_QWORD *)&v428[0];
          swift_bridgeObjectRelease();
          v259 = v252;
          ((void (*)(uint64_t, uint64_t))v414)(v253, v254);
          swift_endAccess();
          v260 = *v252;
          v261 = (uint64_t)v347;
          v255(v347, v412, v254);
          v370(v261, 0, 1, v254);
          swift_beginAccess();
          sub_239307270(v261, v260);
          swift_endAccess();
          v262 = sub_239275A60();
          v263 = v350;
          v400((uint64_t)v350, v262, (__CVBuffer *)v411);
          v264 = v348;
          sub_239268820((uint64_t)v252, (uint64_t)v348, type metadata accessor for PhotogrammetrySample);
          v265 = sub_239352098();
          v266 = sub_239352578();
          if (os_log_type_enabled(v265, v266))
          {
            v267 = swift_slowAlloc();
            v268 = swift_slowAlloc();
            v440.i64[0] = v268;
            *(_DWORD *)v267 = 136380931;
            *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
            sub_2393526B0();
            *(_WORD *)(v267 + 12) = 2050;
            v269 = (uint64_t)v264;
            v270 = *v264;
            sub_2392688AC(v269, type metadata accessor for PhotogrammetrySample);
            *(_QWORD *)&v428[0] = v270;
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v265, v266, "ObjectCaptureSession.%{private}s: Added shot sample of id = %{public}ld to mobileSfM.", (uint8_t *)v267, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v268, -1, -1);
            MEMORY[0x23B83BC04](v267, -1, -1);

            swift_release();
            v399(v350, v411);
            v271 = (uint64_t)v349;
          }
          else
          {
            sub_2392688AC((uint64_t)v264, type metadata accessor for PhotogrammetrySample);

            swift_release();
            v399(v263, v411);
            v271 = (uint64_t)v259;
          }
          sub_2392688AC(v271, type metadata accessor for PhotogrammetrySample);
          v19 = v410;
          if ((v404.i8[0] & 1) == 0)
            goto LABEL_91;
        }
        goto LABEL_88;
      }
    }
    if ((v404.i8[0] & 1) == 0)
    {
LABEL_91:
      v462.columns[0].i64[0] = v398.i64[0];
      v462.columns[0].i64[1] = v397.i64[0];
      v462.columns[1].i64[0] = v396.i64[0];
      v462.columns[1].i64[1] = v395.i64[0];
      v462.columns[2].i64[0] = v394;
      v462.columns[2].i64[1] = v393;
      v462.columns[3].i64[0] = v392;
      v462.columns[3].i64[1] = v391;
      v463 = __invert_f4(v462);
      v279 = v358[3];
      v280 = v358[5];
      v281 = v358[6];
      v407 = v358[4];
      v408 = v279;
      v397 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v463.columns[0], v407.f32[0]), (float32x4_t)v463.columns[1], *(float32x2_t *)v407.f32, 1), (float32x4_t)v463.columns[2], v407, 2), (float32x4_t)v463.columns[3], v407, 3);
      v398 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v463.columns[0], v279.f32[0]), (float32x4_t)v463.columns[1], *(float32x2_t *)v279.f32, 1), (float32x4_t)v463.columns[2], v279, 2), (float32x4_t)v463.columns[3], v279, 3);
      v404 = v281;
      *(float32x4_t *)v405 = v280;
      v395 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v463.columns[0], v281.f32[0]), (float32x4_t)v463.columns[1], *(float32x2_t *)v281.f32, 1), (float32x4_t)v463.columns[2], v281, 2), (float32x4_t)v463.columns[3], v281, 3);
      v396 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v463.columns[0], v280.f32[0]), (float32x4_t)v463.columns[1], *(float32x2_t *)v280.f32, 1), (float32x4_t)v463.columns[2], v280, 2), (float32x4_t)v463.columns[3], v280, 3);
      v275 = v418;
      sub_239326ED4();
      v440 = v398;
      v441 = v397;
      v442 = v396;
      v443 = v395;
LABEL_92:
      sub_2393520D4();
      swift_release();
      v282 = (uint64_t *)v415.i64[0];
      v283 = objc_allocWithZone((Class)type metadata accessor for ObjectCaptureSession.ShotAnchor());
      v284 = (void *)sub_239351FFC();
      v285 = objc_msgSend(v283, sel_initWithIdentifier_transform_, v284, *(double *)v408.i64, *(double *)v407.i64, *(double *)v405, *(double *)v404.i64);

      v359(&v440);
      v286 = (uint64_t)v19;
      if (v440.i64[0] == 15)
      {
        sub_239331658((id)0xF);
        sub_239331658((id)0xF);
        objc_msgSend(*(id *)(v275 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_addAnchor_, v285);
      }
      else
      {
        sub_239331658((id)v440.i64[0]);
        sub_239331658((id)0xF);
      }
      v287 = (uint64_t)v374;
      v288 = v416;
      ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v374, v412, v416);
      swift_beginAccess();
      v289 = v285;
      v290 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v428[0] = *(_QWORD *)v30;
      *(_QWORD *)v30 = 0x8000000000000000;
      v408.i64[0] = (uint64_t)v289;
      sub_23932E3D4((uint64_t)v289, v287, v290);
      *(_QWORD *)v30 = *(_QWORD *)&v428[0];
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))v414)(v287, v288);
      swift_endAccess();
      v291 = *(void **)(v275 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers);
      sub_2393271AC();
      swift_beginAccess();
      v292 = v364;
      v293 = (uint64_t)v364 + *(int *)(v363 + 48);
      *v364 = v3;
      v295 = v401;
      v294 = DataBuffer;
      v296 = (uint64_t)v406;
      v292[1] = (uint64_t)v401;
      v292[2] = v296;
      v292[3] = v372;
      v292[4] = (uint64_t)v294;
      sub_239268820(v286, v293, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v405[0] = v294;
      v414 = (int *)v295;
      v407.i64[0] = (uint64_t)v387;
      v406 = v386;
      sub_2393520D4();
      swift_release();
      sub_23925FE28((uint64_t)v292, &qword_256929AC0);
      DataBuffer = v291;
      sub_239327690();
      v297 = (uint64_t *)(v275 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
      swift_beginAccess();
      v298 = *v297;
      v299 = *(void **)(v275 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
      v300 = v275;
      if (v299)
      {
        swift_bridgeObjectRetain();
        v301 = objc_msgSend(v299, sel_identifier);
        v302 = (uint64_t)v362;
        sub_239352008();

        v370(v302, 0, 1, v288);
      }
      else
      {
        v302 = (uint64_t)v362;
        v370((uint64_t)v362, 1, 1, v288);
        swift_bridgeObjectRetain();
      }
      v303 = *v282;
      v304 = (uint64_t)v367;
      v305 = (uint64_t)v367 + *(int *)(v366 + 48);
      v306 = *(int *)(v366 + 64);
      *v367 = v298;
      sub_239268764(v302, v305, &qword_2569281C0);
      *(_QWORD *)(v304 + v306) = v303;
      sub_2393520D4();
      swift_release();
      sub_23925FE28(v304, (uint64_t *)&unk_25692B680);
      v307 = v282[4];
      v308 = v412;
      if (v307)
      {
        v309 = v282[11];
        v310 = v282[12];
        v312 = v282[9];
        v311 = v282[10];
        v314 = v282[7];
        v313 = v282[8];
        v404.i64[0] = *(_QWORD *)(v415.i64[0] + 48);
        v315 = *(_QWORD *)(v415.i64[0] + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23932785C();
        v316 = *(_QWORD *)v415.i64[0];
        v440.i64[0] = v307;
        v440.i64[1] = v315;
        v441.i64[0] = v404.i64[0];
        v441.i64[1] = v314;
        v442.i64[0] = v313;
        v442.i64[1] = v312;
        v443.i64[0] = v311;
        v443.i64[1] = v309;
        *(_QWORD *)&v444 = v310;
        *((_QWORD *)&v444 + 1) = v316;
        sub_2393520D4();
        swift_release();
        v300 = v418;
        v308 = v412;
        sub_2392A0118(v307);
      }
      v317 = v368;
      ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v368, v308, v416);
      v318 = (unint64_t *)(v300 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment);
      swift_beginAccess();
      v319 = *v318;
      v320 = swift_isUniquelyReferenced_nonNull_native();
      *v318 = v319;
      if ((v320 & 1) == 0)
      {
        v319 = sub_23932C960(0, *(_QWORD *)(v319 + 16) + 1, 1, v319);
        *v318 = v319;
      }
      v321 = (uint64_t)v410;
      v322 = v417;
      v324 = *(_QWORD *)(v319 + 16);
      v323 = *(_QWORD *)(v319 + 24);
      if (v324 >= v323 >> 1)
      {
        v319 = sub_23932C960(v323 > 1, v324 + 1, 1, v319);
        *v318 = v319;
      }
      *(_QWORD *)(v319 + 16) = v324 + 1;
      v325 = v319
           + ((*(unsigned __int8 *)(v413 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v413 + 80))
           + *(_QWORD *)(v413 + 72) * v324;
      v326 = v416;
      (*(void (**)(unint64_t, char *, _QWORD))(v413 + 32))(v325, v317, v416);
      swift_endAccess();
      v327 = v403;
      *(_QWORD *)(v321 + *(int *)(v403 + 52)) = MEMORY[0x24BEE4AF8];
      v328 = *(int *)(v327 + 44);
      v329 = *(void **)(v321 + v328);
      *(_QWORD *)(v321 + v328) = 0;
      swift_bridgeObjectRelease();

      v330 = (uint64_t)v374;
      ((void (*)(char *, uint64_t *, uint64_t))v409.i64[0])(v374, v308, v326);
      v331 = v369;
      sub_239268820(v321, v369, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v365 + 56))(v331, 0, 1, v327);
      v332 = v418;
      swift_beginAccess();
      sub_239307448(v331, v330);
      swift_endAccess();
      if (*(_BYTE *)(v332 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) != 1)
        goto LABEL_107;
      sub_2393075C8(v415.i64[0], (uint64_t)v428);
      sub_239268764((uint64_t)v428, (uint64_t)&v440, &qword_25692A920);
      if (sub_239341CA8((uint64_t)&v440) == 1)
        goto LABEL_107;
      v455[12] = v452;
      v455[13] = v453;
      v456 = v454;
      v455[8] = v448;
      v455[9] = v449;
      v455[10] = v450;
      v455[11] = v451;
      v455[4] = v444;
      v455[5] = v445;
      v455[6] = v446;
      v455[7] = v447;
      v455[0] = v440;
      v455[1] = v441;
      v455[2] = v442;
      v455[3] = v443;
      sub_239268764((uint64_t)v455, (uint64_t)v457, &qword_25692A8A0);
      sub_239268764((uint64_t)v457, (uint64_t)v460, &qword_25692A8A0);
      if (v461 == 1)
      {
LABEL_107:

      }
      else
      {
        v417 = v460[2];
        v418 = v460[3];
        v416 = v460[1];
        v413 = v460[0];
        swift_beginAccess();
        v334 = (uint64_t)v390;
        if (!OCProxySurfaceCoverageGuideAddCameraShot())
        {

          sub_2392688AC(v322, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
          v333 = v334;
          goto LABEL_109;
        }
        v335 = sub_239275A60();
        v336 = v346;
        v337 = v411;
        v400((uint64_t)v346, v335, (__CVBuffer *)v411);
        v338 = v345;
        sub_239268820(v415.i64[0], (uint64_t)v345, type metadata accessor for OCCaptureData);
        v339 = sub_239352098();
        v340 = sub_23935256C();
        if (os_log_type_enabled(v339, v340))
        {
          v341 = swift_slowAlloc();
          v342 = swift_slowAlloc();
          v420[0] = v342;
          *(_DWORD *)v341 = 136380931;
          v419 = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, v420);
          sub_2393526B0();
          *(_WORD *)(v341 + 12) = 2050;
          v419 = *v338;
          sub_2393526B0();
          sub_2392688AC((uint64_t)v338, type metadata accessor for OCCaptureData);
          _os_log_impl(&dword_23925B000, v339, v340, "ObjectCaptureSession.%{private}s: Failed to add camera for coverage guide at still image capture at timestamp %{public}f!", (uint8_t *)v341, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v342, -1, -1);
          MEMORY[0x23B83BC04](v341, -1, -1);

          v343 = v346;
          v344 = v411;
        }
        else
        {

          sub_2392688AC((uint64_t)v338, type metadata accessor for OCCaptureData);
          v343 = v336;
          v344 = v337;
        }
        v399(v343, v344);
      }
      sub_2392688AC(v322, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      v333 = (uint64_t)v390;
LABEL_109:
      sub_2392688AC(v333, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_2392688AC(v321, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_239268764((uint64_t)v424, (uint64_t)v420, &qword_25692A8C0);
      v206 = v420;
      return sub_2392688F0((uint64_t)v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
    }
LABEL_88:
    v275 = v418;
    sub_239326ED4();
    v276 = v358[3];
    v277 = v358[5];
    v278 = v358[6];
    v407 = v358[4];
    v408 = v276;
    v440 = v276;
    v441 = v407;
    v404 = v278;
    *(float32x4_t *)v405 = v277;
    v442 = v277;
    v443 = v278;
    goto LABEL_92;
  }
  v67 = (void *)*((_QWORD *)a1 + 3);
  if (!v67)
  {
LABEL_9:

    goto LABEL_10;
  }
  v68 = (uint64_t)v30;
  v69 = v67;
  if (CVPixelBufferGetWidth(v69) != 256)
  {
    __break(1u);
    goto LABEL_121;
  }
  Height = CVPixelBufferGetHeight(v69);

  v71 = Height == 192;
  v2 = (_QWORD *)v418;
  v19 = (double *)v416;
  v30 = (char *)v68;
  if (!v71)
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_10:
  v355 = v30;
  v349 = v15;
  v3 = *(_QWORD *)a1;
  v72 = (void *)*((_QWORD *)a1 + 1);
  v73 = (void *)*((_QWORD *)a1 + 3);
  v387 = v406;
  v401 = v72;
  v372 = (uint64_t)v73;
  v386 = v73;
  DataBuffer = (id)OCNonModularSPI_ADJasperPointCloud_CreateDataBuffer();
  v74 = (float32x4_t *)&a1[v414[10]];
  v415 = *v74;
  v409 = v74[1];
  v404 = v74[2];
  v75 = v74[3];
  v397 = v74[4];
  v398 = v75;
  v76 = v74[5];
  v395 = v74[6];
  v396 = v76;
  v77 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  sub_239268820((uint64_t)v74 + v77[6], (uint64_t)v63 + *(int *)(v59 + 24), (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  v78 = *(void **)((char *)v74->i64 + v77[8]);
  v79 = (char *)v74 + v77[7];
  v80 = v409;
  *v63 = v415;
  v63[1] = v80;
  v81 = v398;
  v63[2] = v404;
  v63[3] = v81;
  v82 = v396;
  v63[4] = v397;
  v63[5] = v82;
  v63[6] = v395;
  *(uint64_t *)((char *)v63->i64 + *(int *)(v59 + 28)) = (uint64_t)v78;
  v83 = v79[64];
  v84 = (char *)v63 + *(int *)(v59 + 32);
  v85 = *((_OWORD *)v79 + 1);
  *(_OWORD *)v84 = *(_OWORD *)v79;
  *((_OWORD *)v84 + 1) = v85;
  v86 = *((_OWORD *)v79 + 3);
  *((_OWORD *)v84 + 2) = *((_OWORD *)v79 + 2);
  *((_OWORD *)v84 + 3) = v86;
  v84[64] = v83;
  v87 = (char *)v63 + *(int *)(v59 + 36);
  *(_OWORD *)v87 = 0u;
  *((_OWORD *)v87 + 1) = 0u;
  *((_OWORD *)v87 + 2) = 0u;
  *((_OWORD *)v87 + 3) = 0u;
  v87[64] = 1;
  v88 = (char *)v63 + *(int *)(v59 + 40);
  *(_OWORD *)v88 = 0u;
  *((_OWORD *)v88 + 1) = 0u;
  *((_OWORD *)v88 + 2) = 0u;
  *((_OWORD *)v88 + 3) = 0u;
  v88[64] = 1;
  v89 = MEMORY[0x24BEE4AF8];
  *(uint64_t *)((char *)v63->i64 + *(int *)(v59 + 44)) = MEMORY[0x24BEE4AF8];
  *(uint64_t *)((char *)v63->i64 + *(int *)(v59 + 48)) = v89;
  sub_23926946C((uint64_t)v427);
  sub_239268764((uint64_t)v427, (uint64_t)v424, &qword_25692A8C0);
  v423 = 0;
  v422 = 1;
  v398.i64[0] = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  v397.i64[0] = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  v396.i64[0] = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  v90 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  v394 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  v395.i64[0] = v90;
  v91 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  v392 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  v393 = v91;
  v391 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  v404.i32[0] = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  v92 = sub_239352674();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v417, 1, 2, v92);
  v93 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v94 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x4B8);
  v95 = v78;
  v351 = v94;
  v96 = v94((uint64_t)v95);
  if ((v96 & 1) == 0)
  {
    v106 = (float32x4_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
    if ((*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) != 0)
    {
      v107 = *MEMORY[0x24BDAEE00];
      v108 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
      v109 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
      v110 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
      if ((v404.i8[0] & 1) == 0)
      {
LABEL_15:
        v428[0] = v107;
        v428[1] = v108;
        v428[2] = v109;
        v428[3] = v110;
        v430 = v397.i64[0];
        v429 = v398.i64[0];
        v432 = v395.i64[0];
        v431 = v396.i64[0];
        v434 = v393;
        v433 = v394;
        v436 = v391;
        v435 = v392;
        v438 = 0;
        v437 = 0;
        v439 = 1;
        nullsub_1(v428);
        sub_239268764((uint64_t)v428, (uint64_t)v424, &qword_25692A8C0);
        v111 = v428;
LABEL_20:
        sub_239268764((uint64_t)v111, (uint64_t)&v440, &qword_25692A8C0);
        v117 = sub_239268764((uint64_t)&v440, (uint64_t)v426, &qword_25692A8C0);
        v384 = 0;
        v385 = 0.0;
        v382 = 0;
        v383 = 0;
        v380 = 0;
        v381 = 0;
        v377 = 0;
        v378 = 0;
        v379 = 0;
        goto LABEL_21;
      }
    }
    else
    {
      v119 = v106[1];
      v118 = v106[2];
      v120 = *v106;
      v122 = v106[3].i64[0];
      v121 = v106[3].i64[1];
      v440 = v120;
      v441 = v119;
      v442 = v118;
      v443.i64[1] = v121;
      v443.i64[0] = v122;
      *(double *)&v107 = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)((char *)v2
                                                                                      + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction)));
      if ((v404.i8[0] & 1) == 0)
        goto LABEL_15;
    }
    v111 = v427;
    goto LABEL_20;
  }
  v97 = (float32x4_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox);
  if ((*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox + 64) & 1) != 0)
  {
    OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
  }
  else
  {
    v113 = v97[1];
    v112 = v97[2];
    v114 = *v97;
    v116 = v97[3].i64[0];
    v115 = v97[3].i64[1];
    v440 = v114;
    v441 = v113;
    v442 = v112;
    v443.i64[1] = v115;
    v443.i64[0] = v116;
    v98 = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)((char *)v2
                                                                       + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction)));
  }
  v385 = v98;
  v383 = v100;
  v384 = v99;
  v381 = v102;
  v382 = v101;
  v380 = v103;
  v378 = v104;
  v377 = v105;
  v379 = 1;
  v423 = 1;
  v422 = 0;
  v117 = sub_239268764((uint64_t)v427, (uint64_t)v426, &qword_25692A8C0);
LABEL_21:
  v123 = *(void (**)(_QWORD *__return_ptr))((*v93 & *(_QWORD *)v418) + 0x420);
  ((void (*)(_OWORD *__return_ptr, uint64_t))v123)(v428, v117);
  v359 = (void (*)(float32x4_t *__return_ptr))v123;
  if (*(_QWORD *)&v428[0] == 15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    sub_239268764((uint64_t)v426, (uint64_t)&v440, &qword_25692A8C0);
    if (sub_2392687A8((uint64_t)&v440) != 1)
    {
      v424[17] = *(_QWORD *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID);
      v425 = 0;
    }
    if ((v96 & 1) != 0)
    {
      v376 = *(_QWORD *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID);
      v423 = 0;
      goto LABEL_28;
    }
  }
  else
  {
    sub_239331658(*(id *)&v428[0]);
    sub_239331658((id)0xF);
  }
  v376 = 0;
LABEL_28:
  v390 = v63;
  sub_239268820((uint64_t)v63, v407.i64[0], type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
  v124 = v418;
  v125 = v413;
  v126 = v408.i64[0];
  v409.i64[0] = *(_QWORD *)(v413 + 16);
  ((void (*)(uint64_t, _QWORD, double *))v409.i64[0])(v408.i64[0], v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_identifier, v19);
  v370 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v125 + 56);
  v370(v126, 0, 1, (uint64_t)v19);
  result = sub_239268764((uint64_t)v424, (uint64_t)v421, &qword_25692A8C0);
  v128 = *(void **)(v124 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager);
  if (v128)
  {
    v129 = v423;
    v130 = v422;
    sub_2392688F0((uint64_t)v421, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2392687CC);
    v131 = objc_msgSend(v128, sel_deviceMotion);
    v132 = v131;
    v358 = v74;
    if (v131)
    {
      objc_msgSend(v131, sel_gravity);
      v134 = v133;
      v136 = v135;
      v138 = v137;

    }
    else
    {
      v134 = 0;
      v136 = 0;
      v138 = 0;
    }
    v139 = v414[11];
    v415.i64[0] = (uint64_t)a1;
    v140 = *(void **)&a1[v139];
    v141 = v418;
    v142 = v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
    swift_beginAccess();
    v143 = v388;
    sub_23926059C(v142, v388, (uint64_t *)&unk_25692A910);
    v144 = type metadata accessor for ObjectCaptureSession.Frame(0);
    v145 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 48))(v143, 1, v144);
    v146 = 0;
    if (!v145)
      v146 = *(_QWORD *)(v143 + *(int *)(v144 + 44));
    v147 = v145 != 0;
    v148 = v140;
    sub_23925FE28(v143, (uint64_t *)&unk_25692A910);
    v149 = (uint64_t)v410;
    *(_QWORD *)v410 = v3;
    v150 = (int *)v403;
    sub_2392C4FE0(v407.i64[0], v149 + *(int *)(v403 + 20), type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    sub_239268764(v408.i64[0], v149 + v150[6], &qword_2569281C0);
    sub_239268764((uint64_t)v421, v149 + v150[7], &qword_25692A8C0);
    v151 = v149 + v150[8];
    v152 = v384;
    *(double *)v151 = v385;
    *(_QWORD *)(v151 + 8) = v152;
    v153 = v382;
    *(_QWORD *)(v151 + 16) = v383;
    *(_QWORD *)(v151 + 24) = v153;
    v154 = v380;
    *(_QWORD *)(v151 + 32) = v381;
    *(_QWORD *)(v151 + 40) = v154;
    v155 = v377;
    *(_QWORD *)(v151 + 48) = v378;
    *(_QWORD *)(v151 + 56) = v155;
    *(_QWORD *)(v151 + 64) = v376;
    *(_BYTE *)(v151 + 72) = v129;
    *(_BYTE *)(v151 + 73) = v130;
    *(_BYTE *)(v149 + v150[9]) = v379;
    v156 = v149 + v150[10];
    *(_QWORD *)v156 = v134;
    *(_QWORD *)(v156 + 8) = v136;
    *(_QWORD *)(v156 + 16) = v138;
    *(_BYTE *)(v156 + 24) = v132 == 0;
    *(_QWORD *)(v149 + v150[11]) = v140;
    v157 = v149 + v150[12];
    *(_QWORD *)v157 = v146;
    *(_BYTE *)(v157 + 8) = v147;
    v158 = v150[13];
    *(_QWORD *)(v149 + v158) = MEMORY[0x24BEE4AF8];
    v159 = *(uint64_t **)(v141 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
    v66 = (__CVBuffer *)v411;
    v15 = v412;
    v160 = v389;
    if (v159)
    {
      swift_retain();
      v161 = sub_2392E1120(v417);
      v162 = v398.i64[0];
      v163 = v397.i64[0];
      v164 = v396.i64[0];
      v166 = v394;
      v165 = v395.i64[0];
      v168 = v392;
      v167 = v393;
      v169 = v391;
      v170 = v404.i8[0];
      if ((v161 & 1) == 0)
      {
        v162 = 0;
        v163 = 0;
        v164 = 0;
        v165 = 0;
        v166 = 0;
        v167 = 0;
        v168 = 0;
        v169 = 0;
        v170 = 1;
      }
      v458[0] = v162;
      v458[1] = v163;
      v458[2] = v164;
      v458[3] = v165;
      v458[4] = v166;
      v458[5] = v167;
      v458[6] = v168;
      v458[7] = v169;
      v459 = v170;
      v171 = v415.i64[0];
      if (((*(uint64_t (**)(uint64_t *, uint64_t, _QWORD *))(*v159 + 496))(v15, v415.i64[0], v458) & 1) != 0)
      {
        v172 = *(unsigned __int8 *)(v171 + v414[12]);
        v173 = sub_239275A60();
        v174 = (void (*)(uint64_t, uint64_t, __CVBuffer *))*((_QWORD *)v405[0] + 2);
        v400 = v174;
        if (v172 == 1)
        {
          v174((uint64_t)v360, v173, v66);
          v175 = v356;
          v176 = v416;
          ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v356, v15, v416);
          v177 = sub_239352098();
          v178 = sub_239352578();
          v179 = v178;
          if (os_log_type_enabled(v177, v178))
          {
            v180 = swift_slowAlloc();
            v408.i64[0] = swift_slowAlloc();
            v440.i64[0] = v408.i64[0];
            *(_DWORD *)v180 = 136380931;
            v407.i32[0] = v179;
            *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
            sub_2393526B0();
            *(_WORD *)(v180 + 12) = 2082;
            v181 = sub_239351FF0();
            *(_QWORD *)&v428[0] = sub_23925F3EC(v181, v182, (uint64_t *)&v440);
            v66 = (__CVBuffer *)v411;
            v141 = v418;
            sub_2393526B0();
            swift_bridgeObjectRelease();
            v414 = *(int **)(v413 + 8);
            ((void (*)(char *, uint64_t))v414)(v175, v176);
            _os_log_impl(&dword_23925B000, v177, (os_log_type_t)v407.i8[0], "ObjectCaptureSession.%{private}s: Added shot %{public}s taken by automatic capture.", (uint8_t *)v180, 0x16u);
            v183 = v408.i64[0];
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v183, -1, -1);
            v184 = v180;
            v15 = v412;
            MEMORY[0x23B83BC04](v184, -1, -1);
          }
          else
          {
            v414 = *(int **)(v413 + 8);
            ((void (*)(char *, uint64_t))v414)(v175, v176);
          }

          a1 = (char *)*((_QWORD *)v405[0] + 1);
          v217 = ((uint64_t (*)(char *, __CVBuffer *))a1)(v360, v66);
        }
        else
        {
          v174((uint64_t)v361, v173, v66);
          v207 = v355;
          v208 = v416;
          ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v355, v15, v416);
          v209 = sub_239352098();
          v210 = sub_239352578();
          v211 = v210;
          if (os_log_type_enabled(v209, v210))
          {
            v212 = swift_slowAlloc();
            v408.i64[0] = swift_slowAlloc();
            v440.i64[0] = v408.i64[0];
            *(_DWORD *)v212 = 136380931;
            v407.i32[0] = v211;
            *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
            sub_2393526B0();
            *(_WORD *)(v212 + 12) = 2082;
            v213 = sub_239351FF0();
            *(_QWORD *)&v428[0] = sub_23925F3EC(v213, v214, (uint64_t *)&v440);
            v66 = (__CVBuffer *)v411;
            v141 = v418;
            sub_2393526B0();
            swift_bridgeObjectRelease();
            v414 = *(int **)(v413 + 8);
            ((void (*)(char *, uint64_t))v414)(v207, v208);
            _os_log_impl(&dword_23925B000, v209, (os_log_type_t)v407.i8[0], "ObjectCaptureSession.%{private}s: Added  shot %{public}s taken by manual capture.", (uint8_t *)v212, 0x16u);
            v215 = v408.i64[0];
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v215, -1, -1);
            v216 = v212;
            v15 = v412;
            MEMORY[0x23B83BC04](v216, -1, -1);
          }
          else
          {
            v414 = *(int **)(v413 + 8);
            ((void (*)(char *, uint64_t))v414)(v207, v208);
          }

          a1 = (char *)*((_QWORD *)v405[0] + 1);
          v217 = ((uint64_t (*)(char *, __CVBuffer *))a1)(v361, v66);
        }
        v218 = v371;
        v219 = *(unsigned __int8 *)(v141 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled);
        v19 = v410;
        if (v219 == 1)
        {
          if ((*(_BYTE *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown + 8) & 1) != 0)
          {
            v220 = v351(v217);
            v221 = *v159;
            if ((v220 & 1) != 0)
              v222 = *(void (**)(void))(v221 + 544);
            else
              v222 = *(void (**)(void))(v221 + 536);
            v222();
          }
          else
          {
            (*(void (**)(uint64_t, double))(*v159 + 552))(v217, *(double *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown));
          }
        }
        swift_release();
        v223 = sub_2392DE63C();
        v59 = (uint64_t)v373;
        if (*v223 == 1)
        {
          v224 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer;
          if (*(_QWORD *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer))
          {
            swift_retain();
            v225 = sub_239350AF4();
            swift_release();
          }
          else
          {
            v225 = MEMORY[0x24BEE4AF8];
          }
          swift_bridgeObjectRelease();
          *(_QWORD *)((char *)v19 + v158) = v225;
          v226 = *(_QWORD *)(v418 + v224);
          if (v226)
          {
            v227 = *(void (**)(uint64_t))(*(_QWORD *)v226 + 240);
            v228 = swift_retain();
            v227(v228);
            swift_release();
          }
          v229 = sub_239275A60();
          v66 = (__CVBuffer *)v411;
          v400((uint64_t)v218, v229, (__CVBuffer *)v411);
          v230 = v218;
          v231 = v357;
          v232 = v416;
          ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v357, v15, v416);
          v69 = (__CVBuffer *)sub_239352098();
          LOBYTE(v15) = sub_239352578();
          if (os_log_type_enabled((os_log_t)v69, (os_log_type_t)v15))
          {
            v59 = swift_slowAlloc();
            v68 = swift_slowAlloc();
            v440.i64[0] = v68;
            *(_DWORD *)v59 = 136381187;
            *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
            sub_2393526B0();
            *(_WORD *)(v59 + 12) = 2050;
            swift_beginAccess();
            v233 = *(_QWORD *)((char *)v19 + *(int *)(v403 + 52));
            if (!(v233 >> 62))
            {
              v234 = *(_QWORD *)((v233 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_71:
              v235 = v357;
              *(_QWORD *)&v428[0] = v234;
              sub_2393526B0();
              *(_WORD *)(v59 + 22) = 2082;
              v236 = sub_239351FF0();
              *(_QWORD *)&v428[0] = sub_23925F3EC(v236, v237, (uint64_t *)&v440);
              sub_2393526B0();
              swift_bridgeObjectRelease();
              ((void (*)(char *, _QWORD))v414)(v235, v416);
              _os_log_impl(&dword_23925B000, (os_log_t)v69, (os_log_type_t)v15, "ObjectCaptureSession.%{private}s: Added %{public}ld\nframes of temporal LiDAR point cloud to metadata of id = %{public}s.", (uint8_t *)v59, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v68, -1, -1);
              MEMORY[0x23B83BC04](v59, -1, -1);

              v66 = (__CVBuffer *)v411;
              ((void (*)(char *, uint64_t))a1)(v371, v411);
              v19 = v410;
              v15 = v412;
              v59 = (uint64_t)v373;
              goto LABEL_73;
            }
LABEL_121:
            swift_bridgeObjectRetain();
            v234 = sub_239352854();
            swift_bridgeObjectRelease();
            goto LABEL_71;
          }
          ((void (*)(char *, uint64_t))v414)(v231, v232);

          ((void (*)(char *, __CVBuffer *))a1)(v230, v66);
          v15 = v412;
        }
LABEL_73:
        v399 = (void (*)(char *, uint64_t))a1;
        v30 = (char *)(v418 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap);
        swift_beginAccess();
        v2 = *(_QWORD **)(*(_QWORD *)v30 + 16);
        if (qword_25692E880 == -1)
          goto LABEL_74;
        goto LABEL_119;
      }
      swift_release();
    }
    v185 = sub_239275A60();
    v186 = (uint64_t)v405[0];
    v187 = (int *)*((_QWORD *)v405[0] + 2);
    v188 = (char *)v399;
    *(_QWORD *)&v418 = v185;
    v414 = v187;
    ((void (*)(void (*)(char *, uint64_t)))v187)(v399);
    v189 = v416;
    ((void (*)(char *, uint64_t *, _QWORD))v409.i64[0])(v160, v15, v416);
    v190 = sub_239352098();
    v191 = sub_23935256C();
    if (os_log_type_enabled(v190, v191))
    {
      v192 = swift_slowAlloc();
      v193 = swift_slowAlloc();
      v440.i64[0] = v193;
      *(_DWORD *)v192 = 136380931;
      *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
      sub_2393526B0();
      *(_WORD *)(v192 + 12) = 2082;
      v194 = sub_239351FF0();
      *(_QWORD *)&v428[0] = sub_23925F3EC(v194, v195, (uint64_t *)&v440);
      v66 = (__CVBuffer *)v411;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v413 + 8))(v160, v189);
      _os_log_impl(&dword_23925B000, v190, v191, "ObjectCaptureSession.%{private}s: Failed to add shot of id = %{public}s to automatic capture!", (uint8_t *)v192, 0x16u);
      swift_arrayDestroy();
      v196 = v193;
      v149 = (uint64_t)v410;
      MEMORY[0x23B83BC04](v196, -1, -1);
      MEMORY[0x23B83BC04](v192, -1, -1);

      v197 = (void (*)(char *, __CVBuffer *))*((_QWORD *)v405[0] + 1);
      v197((char *)v399, v66);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v413 + 8))(v160, v189);

      v197 = *(void (**)(char *, __CVBuffer *))(v186 + 8);
      v197(v188, v66);
    }
    v198 = (char *)v400;
    ((void (*)(_QWORD, _QWORD, __CVBuffer *))v414)(v400, v418, v66);
    v199 = v375;
    sub_239268820(v415.i64[0], (uint64_t)v375, type metadata accessor for OCCaptureData);
    v200 = sub_239352098();
    v201 = sub_239352578();
    if (os_log_type_enabled(v200, v201))
    {
      v202 = swift_slowAlloc();
      v203 = swift_slowAlloc();
      v440.i64[0] = v203;
      *(_DWORD *)v202 = 136380931;
      *(_QWORD *)&v428[0] = sub_23925F3EC(0xD000000000000024, 0x80000002393602B0, (uint64_t *)&v440);
      sub_2393526B0();
      *(_WORD *)(v202 + 12) = 2050;
      *(_QWORD *)&v428[0] = *v199;
      sub_2393526B0();
      sub_2392688AC((uint64_t)v199, type metadata accessor for OCCaptureData);
      _os_log_impl(&dword_23925B000, v200, v201, "ObjectCaptureSession.%{private}s: High-resolution pixel buffer %{public}f has been released because the shot has been rejected.", (uint8_t *)v202, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v203, -1, -1);
      MEMORY[0x23B83BC04](v202, -1, -1);

      v204 = (char *)v400;
      v205 = v411;
    }
    else
    {

      sub_2392688AC((uint64_t)v199, type metadata accessor for OCCaptureData);
      v204 = v198;
      v205 = (uint64_t)v66;
    }
    v197(v204, (__CVBuffer *)v205);
    sub_2392688AC(v417, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    sub_2392688AC((uint64_t)v390, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    sub_2392688AC(v149, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_239268764((uint64_t)v424, (uint64_t)&v440, &qword_25692A8C0);
    v206 = (uint64_t *)&v440;
    return sub_2392688F0((uint64_t)v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_239268954);
  }
  __break(1u);
  return result;
}

uint64_t sub_239307270(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239352020();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23925FE28(a1, &qword_2569281C0);
    v13 = sub_2392C01BC(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23932EE48();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_23932E0A8(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_23925FE28((uint64_t)v8, &qword_2569281C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_23932E540((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_239307448(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_23925FE28(a1, &qword_25692B620);
    sub_23932CB7C(a2, (uint64_t)v8);
    v13 = sub_239352020();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_23925FE28((uint64_t)v8, &qword_25692B620);
  }
  else
  {
    sub_2392C4FE0(a1, (uint64_t)v11, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_23932E264((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_239352020();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

int64_t sub_2393075C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  int v16;
  float32x4_t *v18;
  float32x4_t v19;
  float32x4_t v20;
  int64_t result;
  float32x4_t *v22;
  float v23;
  float v24;
  float v25;
  uint64_t v26;
  uint64_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v37;
  float32x4_t v38;
  float32x4_t v39;
  int8x16_t v40;
  simd_float4 v41;
  simd_float4 v42;
  simd_float4 v43;
  simd_float4 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  uint64_t v57;
  char v58;
  simd_float4 v59;
  simd_float4 v60;
  simd_float4 v61;
  simd_float4 v62;
  char v63;
  float v64;
  char v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  simd_float4x4 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  simd_float4x4 v78;

  v48 = a2;
  v4 = sub_239352674();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239352680();
  v9 = MEMORY[0x24BEDF358];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  *(_QWORD *)&v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  *(_QWORD *)&v46 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  *(_QWORD *)&v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  v44.i64[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  v43.i64[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  v42.i64[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  v41.i64[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  v40.i64[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  v15 = *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))((char *)&v32 - v13, 1, 2, v4);
  sub_239268820((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))v9);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 2, v4))
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v12, v4);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v16 != *MEMORY[0x24BEDF330] && v16 != *MEMORY[0x24BEDF348])
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
      sub_2392688AC((uint64_t)v14, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      sub_239335C20((uint64_t)&v53);
      goto LABEL_11;
    }
  }
  if ((v15 & 1) != 0)
    goto LABEL_10;
  v18 = (float32x4_t *)(a1 + *(int *)(type metadata accessor for OCCaptureData(0) + 40));
  v19 = v18[3];
  v38 = v18[4];
  v39 = v19;
  v20 = v18[5];
  v36 = v18[6];
  v37 = v20;
  result = CVPixelBufferGetHeight(*(CVPixelBufferRef *)(a1 + 8));
  v22 = (float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
  {
    v23 = v18[1].f32[1] + v18[1].f32[1];
    v35 = *v22;
    v34 = v22[1];
    v33 = v22[2];
    v32 = v22[3];
    v24 = atan2f((float)result, v23);
    v25 = v24 + v24;
    v31.i64[1] = v40.i64[0];
    v31.i64[0] = v41.i64[0];
    v30.i64[1] = v42.i64[0];
    v30.i64[0] = v43.i64[0];
    v29.i64[1] = v44.i64[0];
    v29.i64[0] = v45;
    v28.i64[1] = v46;
    v28.i64[0] = v47;
    sub_2392DF290((uint64_t)&v72, v39, v38, v37, v36, v35, v34, v33, v32, v28, v29, v30, v31);
    v47 = v73;
    v46 = v74;
    v45 = v75;
    v26 = v77;
    v27 = v76;
    v37 = (float32x4_t)v72.columns[0];
    v38 = (float32x4_t)v72.columns[1];
    v39 = (float32x4_t)v72.columns[2];
    v40 = (int8x16_t)v72.columns[3];
    v78 = __invert_f4(v72);
    v43 = v78.columns[1];
    v44 = v78.columns[0];
    v41 = v78.columns[3];
    v42 = v78.columns[2];
    sub_2392688AC((uint64_t)v14, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    v52 = 0;
    v51 = 0;
    v50 = 0;
    v49 = 0;
    v53 = v37.i64[0];
    v54 = vextq_s8((int8x16_t)v37, (int8x16_t)v38, 8uLL);
    v55 = vextq_s8((int8x16_t)v38, (int8x16_t)v39, 8uLL);
    v56 = vextq_s8((int8x16_t)v39, v40, 8uLL);
    v57 = v40.i64[1];
    v58 = 0;
    v59 = v44;
    v60 = v43;
    v61 = v42;
    v62 = v41;
    v63 = 0;
    v64 = v25;
    v65 = 0;
    v66 = v47;
    v67 = v46;
    v68 = v45;
    v69 = v27;
    v70 = v26;
    v71 = 0;
    sub_239335C4C((uint64_t)&v53);
LABEL_11:
    sub_239268764((uint64_t)&v53, (uint64_t)&v72, &qword_25692A920);
    return sub_239268764((uint64_t)&v72, v48, &qword_25692A920);
  }
  __break(1u);
  return result;
}

uint64_t sub_2393079C8(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];

  v2 = v1;
  v4 = sub_2393520B0();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239351FD8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  v14 = *((_QWORD *)a1 + 1);
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x4B8))(v9);
  if ((result & 1) != 0)
  {
    v16 = (char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform;
    *(_OWORD *)v16 = 0u;
    *((_OWORD *)v16 + 1) = 0u;
    *((_OWORD *)v16 + 2) = 0u;
    *((_OWORD *)v16 + 3) = 0u;
    v16[64] = 1;
    sub_239351FB4();
    v17 = sub_239275A60();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v33 = v4;
    v18(v6, v17, v4);
    v19 = sub_239352098();
    v20 = sub_239352578();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v32 = v7;
      v22 = v21;
      v30 = swift_slowAlloc();
      v31 = v8;
      v37[0] = v30;
      *(_DWORD *)v22 = 136380931;
      v35 = sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v37);
      sub_2393526B0();
      *(_WORD *)(v22 + 12) = 2082;
      LOBYTE(v35) = v12;
      BYTE1(v35) = v13;
      v36 = v14;
      v23 = sub_23935232C();
      v29 = v14;
      v35 = sub_23925F3EC(v23, v24, v37);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v19, v20, "ObjectCaptureSession.%{private}s: Called startCapturing in area mode with options = %{public}s", (uint8_t *)v22, 0x16u);
      v25 = v30;
      swift_arrayDestroy();
      v8 = v31;
      MEMORY[0x23B83BC04](v25, -1, -1);
      v26 = v22;
      v7 = v32;
      MEMORY[0x23B83BC04](v26, -1, -1);
    }

    v27 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v6, v33);
    MEMORY[0x24BDAC7A8](v27);
    *(&v29 - 4) = (uint64_t)v11;
    *((_BYTE *)&v29 - 24) = v12;
    *((_BYTE *)&v29 - 23) = v13;
    *(&v29 - 2) = v28;
    *(&v29 - 1) = (uint64_t)v2;
    sub_2393525F0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return v35;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_239307D08@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD);
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id result;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  float v48;
  uint64_t v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  float v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  float v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  float v71;
  uint64_t v72;
  double v73;
  float v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  float v84;
  unint64_t v85;
  uint64_t v86;
  float v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  float v93;
  uint64_t v94;
  void (*v95)(_QWORD);
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(_BYTE *, _UNKNOWN **);
  _BYTE *v109;
  char *v110;
  void *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(_QWORD, _QWORD, _QWORD);
  NSObject *v118;
  os_log_type_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  double v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  uint64_t v134;
  os_log_type_t v135;
  uint64_t v136;
  uint8_t *v137;
  uint64_t v138;
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  double v145;
  double v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  _BYTE *v155;
  uint64_t v156;
  NSObject *v157;
  uint64_t v158;
  os_log_type_t v159;
  uint8_t *v160;
  uint64_t v161;
  uint64_t v162;
  double v163;
  uint64_t v164;
  void *v165;
  id v166;
  char *v167;
  NSObject *v168;
  os_log_type_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  double v173;
  double v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  void *v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  double v191;
  void (*v192)(_QWORD, _QWORD, _QWORD);
  uint64_t v193;
  id v194;
  void (*v195)(_QWORD);
  _QWORD *v196;
  char *v197;
  uint64_t v198;
  _BYTE *v199;
  uint64_t v200;
  char *v201;
  _BYTE *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  int v211;
  double v212;
  int v213;
  char v214;
  char v215;
  char v216;
  uint64_t v217;
  int v218;
  char v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  uint64_t v223[8];
  char v224;
  double v225;
  int v226;
  char v227;
  char v228;
  char v229;
  uint64_t v230;
  int v231;
  char v232;
  uint64_t v233;
  char v234;
  uint64_t v235;

  v202 = a5;
  v203 = a1;
  v205 = sub_239351FD8();
  v200 = *(_QWORD *)(v205 - 8);
  v8 = MEMORY[0x24BDAC7A8](v205);
  v204 = (char *)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v186 - v10;
  v12 = sub_2393520B0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v197 = (char *)&v186 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8]((char *)&v186 - v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v34 = (char *)&v186 - v33;
  if ((a2 & 1) != 0)
  {
    v55 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v55, v12);
    v56 = sub_239352098();
    v57 = sub_23935256C();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = v12;
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v223[0] = v60;
      *(_DWORD *)v59 = 136380675;
      v225 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v56, v57, "ObjectCaptureSession.%{private}s: Plane filtering is not supported in area mode!", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v60, -1, -1);
      MEMORY[0x23B83BC04](v59, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
LABEL_55:
    v183 = v203;
    *v202 = 0;
    return (id)sub_23930CBD4(v183, MEMORY[0x24BEE7908], 0xD00000000000001DLL, 0x8000000239360A40, "ObjectCaptureSession.%{private}s: startCapturing in area mode took time = %{public}s ms");
  }
  v190 = v29;
  v191 = v28;
  v195 = v27;
  v187 = v30;
  v188 = v26;
  v192 = v32;
  v193 = v31;
  v198 = v13;
  v206 = v12;
  v35 = &a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions];
  *v35 = a2 & 0x100;
  v35[1] = a3;
  sub_239350E2C();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v36 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager;
  v37 = *(_QWORD *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager];
  v196 = v35;
  if (v37)
  {
    v38 = *(void (**)(uint64_t))(*(_QWORD *)v37 + 280);
    v39 = swift_retain();
    v38(v39);
    v35 = v196;
    swift_release();
  }
  sub_2393094F8();
  *(_QWORD *)&a4[v36] = 0;
  swift_release();
  *(_QWORD *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = 0;
  swift_release();
  v40 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent;
  a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent] = 0;
  sub_23930D3BC();
  v42 = v41;
  result = objc_msgSend(*(id *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession], sel_runWithConfiguration_options_, v41, 8);
  v44 = v198;
  if (*(_BYTE *)v35 == 2)
  {
    __break(1u);
    goto LABEL_58;
  }
  v45 = v11;
  v189 = v40;
  v194 = v42;
  *(float *)&v211 = 0.005;
  v46 = sub_2392641AC();
  v47 = v206;
  v199 = a4;
  if ((v46 & 0x100000000) == 0)
  {
    v48 = *(float *)&v46;
    v211 = v46;
    v49 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v34, v49, v47);
    v50 = sub_239352098();
    v51 = v44;
    v52 = sub_239352578();
    if (os_log_type_enabled(v50, v52))
    {
      v53 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v223[0] = v54;
      *(_DWORD *)v53 = 136380931;
      v225 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223));
      a4 = v199;
      sub_2393526B0();
      *(_WORD *)(v53 + 12) = 2050;
      v225 = v48;
      v47 = v206;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v50, v52, "ObjectCaptureSession.%{private}s: Using initial voxel size for mesh refinement set by user default: %{public}f", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v54, -1, -1);
      MEMORY[0x23B83BC04](v53, -1, -1);

      v44 = v198;
      (*(void (**)(char *, uint64_t))(v198 + 8))(v34, v47);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v47);
      v44 = v51;
    }
  }
  *(float *)&v210 = 0.005;
  v61 = sub_2392641D0();
  if ((v61 & 0x100000000) == 0)
  {
    v62 = *(float *)&v61;
    v210 = v61;
    v63 = sub_239275A60();
    v64 = v190;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v190, v63, v47);
    v65 = sub_239352098();
    v66 = sub_239352578();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = v62;
      v68 = swift_slowAlloc();
      v69 = swift_slowAlloc();
      v223[0] = v69;
      *(_DWORD *)v68 = 136380931;
      v225 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223));
      v47 = v206;
      sub_2393526B0();
      *(_WORD *)(v68 + 12) = 2050;
      v225 = v67;
      v44 = v198;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v65, v66, "ObjectCaptureSession.%{private}s: Using voxel size increment for mesh refinement set by user default: %{public}f", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v69, -1, -1);
      MEMORY[0x23B83BC04](v68, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v64, v47);
  }
  v70 = sub_2392641F4();
  v201 = v45;
  if ((v70 & 0x100000000) != 0)
  {
    v71 = 0.015;
    v79 = v196;
    v80 = sub_2392640C0();
    if ((v80 & 0x100000000) != 0)
      goto LABEL_20;
  }
  else
  {
    v71 = *(float *)&v70;
    v72 = sub_239275A60();
    v73 = v191;
    (*(void (**)(double, uint64_t, uint64_t))(v44 + 16))(COERCE_DOUBLE(*(_QWORD *)&v191), v72, v47);
    v74 = *(float *)&v210;
    v75 = sub_239352098();
    v76 = sub_239352578();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc();
      v78 = swift_slowAlloc();
      v223[0] = v78;
      *(_DWORD *)v77 = 136380931;
      v225 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223));
      v47 = v206;
      sub_2393526B0();
      *(_WORD *)(v77 + 12) = 2050;
      v225 = v74;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v75, v76, "ObjectCaptureSession.%{private}s: Using mesh refinement voxel size scan extent threshold set by user default: %{public}f", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v78, -1, -1);
      MEMORY[0x23B83BC04](v77, -1, -1);
    }

    (*(void (**)(double, uint64_t))(v44 + 8))(COERCE_DOUBLE(*(_QWORD *)&v73), v47);
    v79 = v196;
    v45 = v201;
    v80 = sub_2392640C0();
    if ((v80 & 0x100000000) != 0)
    {
LABEL_20:
      result = (id)OCMetalDevice();
      if (result)
      {
        v81 = (uint64_t)result;
        v82 = a4[v189];
        v83 = *sub_239264080();
        swift_beginAccess();
        v84 = *(float *)&v211;
        result = (id)swift_beginAccess();
        v85 = *v79;
        if (*v79 != 2)
        {
          v86 = v79[1];
          v87 = *(float *)&v210;
          v88 = (v85 >> 8) & 1;
          v89 = sub_239295A74();
          v90 = v89 | ((HIDWORD(v89) & 1) << 32);
          v91 = v81;
          v92 = v82;
          goto LABEL_30;
        }
        goto LABEL_59;
      }
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
  }
  v93 = *(float *)&v80;
  v94 = sub_239275A60();
  v95 = v195;
  (*(void (**)(void (*)(_QWORD), uint64_t, uint64_t))(v44 + 16))(v195, v94, v47);
  v96 = sub_239352098();
  v97 = sub_23935256C();
  if (os_log_type_enabled(v96, v97))
  {
    v98 = swift_slowAlloc();
    v99 = swift_slowAlloc();
    v223[0] = v99;
    *(_DWORD *)v98 = 136380931;
    v225 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223));
    sub_2393526B0();
    *(_WORD *)(v98 + 12) = 2048;
    v225 = v93;
    v44 = v198;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v96, v97, "ObjectCaptureSession.%{private}s: Using voxel size %fm read from ARKit scene reconstruction user defaults. Disabled automatic scan extent switching in area mode mesh\nmanager! Remove com.apple.recon3d.meshing.sdf_config.voxel_size or com.apple.arkit.sceneReconstruction.voxelSize user default to enable automatic scan extent switching.", (uint8_t *)v98, 0x16u);
    swift_arrayDestroy();
    v100 = v99;
    v79 = v196;
    MEMORY[0x23B83BC04](v100, -1, -1);
    MEMORY[0x23B83BC04](v98, -1, -1);

    (*(void (**)(void (*)(_QWORD), uint64_t))(v44 + 8))(v95, v206);
  }
  else
  {

    (*(void (**)(void (*)(_QWORD), uint64_t))(v44 + 8))(v95, v47);
  }
  result = (id)OCMetalDevice();
  v45 = v201;
  if (!result)
    goto LABEL_60;
  v101 = (uint64_t)result;
  v83 = *sub_239264080();
  swift_beginAccess();
  v84 = *(float *)&v211;
  result = (id)swift_beginAccess();
  v102 = *v79;
  if (*v79 == 2)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v86 = v79[1];
  v87 = *(float *)&v210;
  v88 = (v102 >> 8) & 1;
  v92 = sub_239282E00();
  LOBYTE(v223[0]) = 0;
  v90 = LODWORD(v93);
  v91 = v101;
LABEL_30:
  sub_239282E08(v91, v90, v92, v83, v88, v86, 1, 400000, (uint64_t)&v212, v84, v87, v71);
  v103 = v212;
  v225 = v212;
  v226 = v213;
  v227 = v214;
  v228 = v215;
  v229 = v216;
  v230 = v217;
  v231 = v218;
  v232 = v219;
  v233 = v220;
  v234 = v221;
  v235 = v222;
  type metadata accessor for FreeformMeshManager(0);
  swift_unknownObjectRetain();
  v104 = sub_239282FF0((uint64_t)&v225);
  v105 = v206;
  if (!v104)
  {
    v131 = sub_239275A60();
    v132 = v188;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v188, v131, v105);
    v133 = sub_239352098();
    v134 = v105;
    v135 = sub_23935256C();
    if (os_log_type_enabled(v133, v135))
    {
      v136 = swift_slowAlloc();
      v191 = v103;
      v137 = (uint8_t *)v136;
      v138 = swift_slowAlloc();
      v223[0] = v138;
      *(_DWORD *)v137 = 136380675;
      v209 = sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v133, v135, "ObjectCaptureSession.%{private}s: Failed to initialize MeshManager in area mode!", v137, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v138, -1, -1);
      MEMORY[0x23B83BC04](v137, -1, -1);
      swift_unknownObjectRelease();

    }
    else
    {

      swift_unknownObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v132, v134);
    goto LABEL_55;
  }
  v190 = v104;
  v191 = v103;
  v106 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager;
  *(_QWORD *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager] = v104;
  swift_retain();
  swift_release();
  v107 = *(_QWORD *)&a4[v106];
  if (v107)
  {
    v108 = *(void (**)(_BYTE *, _UNKNOWN **))(*(_QWORD *)v107 + 168);
    swift_retain();
    v109 = a4;
    v108(a4, &off_250AC7A78);
    swift_release();
  }
  v110 = &a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox];
  *(_OWORD *)v110 = 0u;
  *((_OWORD *)v110 + 1) = 0u;
  *((_OWORD *)v110 + 2) = 0u;
  *((_OWORD *)v110 + 3) = 0u;
  v110[64] = 1;
  sub_239335310();
  v111 = *(void **)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor];
  *(_QWORD *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor] = 0;

  sub_2392FE93C();
  v112 = v45;
  sub_239351FB4();
  v189 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager;
  v113 = *(_QWORD *)&a4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager];
  if (v113)
  {
    v114 = *(void (**)(uint64_t))(*(_QWORD *)v113 + 152);
    v115 = swift_retain();
    v114(v115);
    swift_release();
  }
  v116 = sub_239275A60();
  v117 = v192;
  v195 = *(void (**)(_QWORD))(v44 + 16);
  v196 = (_QWORD *)v116;
  v195(v192);
  v118 = sub_239352098();
  v119 = sub_239352560();
  if (os_log_type_enabled(v118, v119))
  {
    v120 = swift_slowAlloc();
    v188 = swift_slowAlloc();
    v223[0] = v188;
    *(_DWORD *)v120 = 136380931;
    v209 = sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223);
    sub_2393526B0();
    *(_WORD *)(v120 + 12) = 2082;
    v186 = v120 + 14;
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v121 = swift_allocObject();
    *(_OWORD *)(v121 + 16) = xmmword_239354060;
    swift_beginAccess();
    v122 = v204;
    sub_239351FB4();
    sub_239351FC0();
    v124 = v123;
    v125 = v200;
    (*(void (**)(char *, uint64_t))(v200 + 8))(v122, v205);
    v126 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v121 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v121 + 64) = v126;
    *(double *)(v121 + 32) = v124 * 1000.0;
    v127 = sub_239352308();
    v209 = sub_23925F3EC(v127, v128, v223);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v118, v119, "ObjectCaptureSession.%{private}s: motion manager init take time = %{public}s ms", (uint8_t *)v120, 0x16u);
    v129 = v188;
    swift_arrayDestroy();
    v112 = v201;
    MEMORY[0x23B83BC04](v129, -1, -1);
    v130 = v120;
    v105 = v206;
    MEMORY[0x23B83BC04](v130, -1, -1);

    v198 = *(_QWORD *)(v198 + 8);
    ((void (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))v198)(v117, v105);
  }
  else
  {

    v198 = *(_QWORD *)(v44 + 8);
    ((void (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))v198)(v117, v105);
    v125 = v200;
    v122 = v204;
  }
  sub_239351FB4();
  swift_beginAccess();
  v192 = *(void (**)(_QWORD, _QWORD, _QWORD))(v125 + 40);
  v192(v112, v122, v205);
  sub_239309978();
  v139 = v193;
  ((void (*)(uint64_t, _QWORD *, uint64_t))v195)(v193, v196, v105);
  v140 = sub_239352098();
  v141 = sub_239352560();
  if (os_log_type_enabled(v140, v141))
  {
    v142 = swift_slowAlloc();
    v143 = swift_slowAlloc();
    v223[0] = v143;
    *(_DWORD *)v142 = 136380931;
    v208 = sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223);
    sub_2393526B0();
    *(_WORD *)(v142 + 12) = 2082;
    v188 = v142 + 14;
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v144 = swift_allocObject();
    *(_OWORD *)(v144 + 16) = xmmword_239354060;
    sub_239351FB4();
    sub_239351FC0();
    v146 = v145;
    v147 = *(void (**)(char *, uint64_t))(v125 + 8);
    v148 = v205;
    v147(v204, v205);
    v149 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v144 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v144 + 64) = v149;
    *(double *)(v144 + 32) = v146 * 1000.0;
    v150 = sub_239352308();
    v208 = sub_23925F3EC(v150, v151, v223);
    v122 = v204;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v140, v141, "ObjectCaptureSession.%{private}s: Camera control init takes time = %{public}s ms", (uint8_t *)v142, 0x16u);
    swift_arrayDestroy();
    v152 = v143;
    v153 = v201;
    MEMORY[0x23B83BC04](v152, -1, -1);
    v154 = v142;
    v105 = v206;
    MEMORY[0x23B83BC04](v154, -1, -1);

    ((void (*)(uint64_t, uint64_t))v198)(v139, v105);
  }
  else
  {
    v153 = v112;

    ((void (*)(uint64_t, uint64_t))v198)(v139, v105);
    v148 = v205;
  }
  sub_239351FB4();
  result = (id)((uint64_t (*)(char *, char *, uint64_t))v192)(v153, v122, v148);
  v155 = v199;
  if ((v199[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8] & 1) != 0)
  {
    v156 = v187;
    ((void (*)(uint64_t, _QWORD *, uint64_t))v195)(v187, v196, v105);
    v157 = sub_239352098();
    v158 = v105;
    v159 = sub_23935256C();
    if (os_log_type_enabled(v157, v159))
    {
      v160 = (uint8_t *)swift_slowAlloc();
      v161 = swift_slowAlloc();
      v223[0] = v161;
      *(_DWORD *)v160 = 136380675;
      v208 = sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, v223);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v157, v159, "ObjectCaptureSession.%{private}s: Capture manager couldn't initialize because reference timestamp is nil. Will try again after getting reference timestamp.", v160, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v161, -1, -1);
      MEMORY[0x23B83BC04](v160, -1, -1);
    }

    ((void (*)(uint64_t, uint64_t))v198)(v156, v158);
    goto LABEL_49;
  }
  v162 = *(_QWORD *)&v199[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl];
  if (v162)
  {
    v163 = *(double *)&v199[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
    type metadata accessor for CaptureManager();
    memset(v223, 0, sizeof(v223));
    v224 = 1;
    v164 = *(_QWORD *)&v155[v189];
    v165 = *(void **)&v155[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
    swift_retain();
    v166 = v165;
    swift_retain();
    *(_QWORD *)&v155[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = sub_23929C610((uint64_t)v223, v162, v164, v166, v163);
    swift_release();
    v158 = v206;
LABEL_49:
    v167 = v197;
    ((void (*)(char *, _QWORD *, uint64_t))v195)(v197, v196, v158);
    v168 = sub_239352098();
    v169 = sub_239352560();
    if (os_log_type_enabled(v168, v169))
    {
      v170 = swift_slowAlloc();
      v196 = (_QWORD *)swift_slowAlloc();
      v208 = (uint64_t)v196;
      *(_DWORD *)v170 = 136380931;
      v207 = sub_23925F3EC(0xD00000000000001DLL, 0x8000000239360A40, &v208);
      sub_2393526B0();
      *(_WORD *)(v170 + 12) = 2082;
      v195 = (void (*)(_QWORD))(v170 + 14);
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v171 = swift_allocObject();
      *(_OWORD *)(v171 + 16) = xmmword_239354060;
      v172 = v204;
      sub_239351FB4();
      sub_239351FC0();
      v174 = v173;
      v175 = v153;
      v176 = v200;
      v177 = v172;
      v178 = v205;
      (*(void (**)(char *, uint64_t))(v200 + 8))(v177, v205);
      v179 = MEMORY[0x24BEE1448];
      *(_QWORD *)(v171 + 56) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(v171 + 64) = v179;
      *(double *)(v171 + 32) = v174 * 1000.0;
      v180 = sub_239352308();
      v207 = sub_23925F3EC(v180, v181, &v208);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v168, v169, "ObjectCaptureSession.%{private}s: Init CaptureManager took = %{public}s ms", (uint8_t *)v170, 0x16u);
      v182 = v196;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v182, -1, -1);
      MEMORY[0x23B83BC04](v170, -1, -1);

      ((void (*)(char *, uint64_t))v198)(v197, v206);
      v183 = v203;
    }
    else
    {

      ((void (*)(char *, uint64_t))v198)(v167, v158);
      v183 = v203;
      v178 = v205;
      v175 = v153;
      v176 = v200;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v184 = v199;
    sub_23935211C();
    swift_release();
    swift_release();
    v185 = (void *)v208;
    swift_getKeyPath();
    swift_getKeyPath();
    v208 = 15;
    v184;
    sub_239352128();
    v208 = (uint64_t)v185;
    sub_2392F48FC((void **)&v208);
    sub_239331658(v185);

    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v176 + 8))(v175, v178);
    *v202 = 1;
    return (id)sub_23930CBD4(v183, MEMORY[0x24BEE7908], 0xD00000000000001DLL, 0x8000000239360A40, "ObjectCaptureSession.%{private}s: startCapturing in area mode took time = %{public}s ms");
  }
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_2393094F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  void *v20;
  void *v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  void *v28;
  void *v29;
  char *v30;
  uint64_t v31;
  _QWORD v33[2];
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38[3];

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v33 - v7;
  v9 = sub_239351FD8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v13 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurface);
  swift_beginAccess();
  if (*v13)
  {
    v36 = v10;
    if (OCProxySurfaceDestroy())
    {
      v14 = sub_239275B74();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v14, v2);
      v15 = sub_239352098();
      v16 = sub_23935256C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v34 = v1;
        v18 = (uint8_t *)v17;
        v19 = (void *)swift_slowAlloc();
        v35 = v9;
        v20 = v19;
        v38[0] = v19;
        *(_DWORD *)v18 = 136380675;
        v33[1] = v18 + 4;
        v37 = sub_23925F3EC(0xD000000000000016, 0x8000000239360180, (uint64_t *)v38);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: Failed to destroy proxy surface!", v18, 0xCu);
        swift_arrayDestroy();
        v21 = v20;
        v9 = v35;
        MEMORY[0x23B83BC04](v21, -1, -1);
        v22 = v18;
        v1 = v34;
        MEMORY[0x23B83BC04](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    v23 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v23, v2);
    v24 = sub_239352098();
    v25 = sub_239352578();
    if (os_log_type_enabled(v24, v25))
    {
      v35 = v9;
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v34 = v1;
      v28 = v27;
      v38[0] = v27;
      *(_DWORD *)v26 = 136380675;
      v37 = sub_23925F3EC(0xD000000000000016, 0x8000000239360180, (uint64_t *)v38);
      v9 = v35;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v24, v25, "ObjectCaptureSession.%{private}s: Successfully stopped voxel integration session.", v26, 0xCu);
      swift_arrayDestroy();
      v29 = v28;
      v1 = v34;
      MEMORY[0x23B83BC04](v29, -1, -1);
      MEMORY[0x23B83BC04](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v10 = v36;
  }
  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420))(v38);
  if (v38[0] == (id)14)
  {
    sub_239331658((id)0xE);
    sub_239331658((id)0xE);
  }
  else
  {
    sub_239331658(v38[0]);
    sub_239331658((id)0xE);
    v30 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud;
    swift_beginAccess();
    v31 = *(_QWORD *)v30;
    *(_OWORD *)v30 = 0u;
    *((_OWORD *)v30 + 1) = 0u;
    *((_OWORD *)v30 + 2) = 0u;
    *((_OWORD *)v30 + 3) = 0u;
    *((_OWORD *)v30 + 4) = 0u;
    *((_OWORD *)v30 + 5) = 0u;
    sub_239331104(v31);
  }
  sub_239316764((uint64_t)v12, 0xD000000000000016, 0x8000000239360180);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_239309978()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint8_t *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  char v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  double v56;
  uint64_t (*v57)(uint64_t, double);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double (*v66)(uint64_t);
  uint64_t v67;
  double v68;
  NSObject *v69;
  os_log_type_t v70;
  void (*v71)(char *, uint64_t);
  uint8_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(char **)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v76 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v81 = (char *)&v76 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v76 - v12;
  v14 = *(void **)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  v15 = objc_msgSend(v14, sel_configuration);

  if (!v15)
  {
    __break(1u);
    goto LABEL_24;
  }
  v79 = v9;
  v16 = objc_msgSend(v14, sel_configuration);
  if (!v16)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v17 = v16;
  type metadata accessor for CameraControl();
  v18 = objc_msgSend(v17, sel_videoFormat);

  v19 = objc_msgSend(v18, sel_device);
  v20 = sub_2392F01D8((uint64_t)v19);
  v21 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = v20;
  swift_release();
  v22 = *(_QWORD *)&v1[v21];
  if (!v22)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v23 = *(void (**)(uint64_t))(*(_QWORD *)v22 + 280);
  v24 = swift_retain();
  v23(v24);
  swift_release();
  v25 = sub_239275A60();
  v26 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v3 + 2);
  v82 = v25;
  v83 = v26;
  ((void (*)(char *))v26)(v13);
  v27 = sub_239352098();
  v28 = sub_239352560();
  v29 = os_log_type_enabled(v27, v28);
  v80 = v6;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v78 = v2;
    v31 = (uint8_t *)v30;
    v32 = swift_slowAlloc();
    v85 = v32;
    *(_DWORD *)v31 = 136380675;
    v84 = sub_23925F3EC(0xD000000000000014, 0x8000000239360A60, &v85);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v27, v28, "ObjectCaptureSession.%{private}s: Camera auto white balance is locked.", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v32, -1, -1);
    v33 = v31;
    v2 = v78;
    MEMORY[0x23B83BC04](v33, -1, -1);
  }

  v34 = (void (*)(char *, uint64_t))*((_QWORD *)v3 + 1);
  v34(v13, v2);
  v35 = *(_QWORD *)&v1[v21];
  if (!v35)
    goto LABEL_26;
  v36 = *(void (**)(_QWORD))(*(_QWORD *)v35 + 200);
  swift_retain();
  v36(0);
  swift_release();
  v37 = *(_QWORD *)&v1[v21];
  if (!v37)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v38 = *(void (**)(uint64_t))(*(_QWORD *)v37 + 208);
  v39 = swift_retain();
  v38(v39);
  swift_release();
  v40 = *(_QWORD *)&v1[v21];
  if (!v40)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v41 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v40 + 304);
  v42 = swift_retain();
  v43 = v41(v42);
  swift_release();
  v44 = v81;
  v83(v81, v82, v2);
  v45 = sub_239352098();
  v46 = sub_239352578();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v77 = v34;
    v49 = v48;
    v85 = v48;
    *(_DWORD *)v47 = 136380931;
    v84 = sub_23925F3EC(0xD000000000000014, 0x8000000239360A60, &v85);
    v3 = (char *)v2;
    sub_2393526B0();
    *(_WORD *)(v47 + 12) = 1026;
    LODWORD(v84) = v43 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v45, v46, "ObjectCaptureSession.%{private}s: Camera face driven AF and AE disabled = %{BOOL,public}d", (uint8_t *)v47, 0x12u);
    swift_arrayDestroy();
    v50 = v49;
    v34 = v77;
    MEMORY[0x23B83BC04](v50, -1, -1);
    MEMORY[0x23B83BC04](v47, -1, -1);

    v51 = v81;
  }
  else
  {

    v51 = v44;
  }
  v34(v51, v2);
  v52 = v80;
  v53 = sub_239263D7C();
  if ((v54 & 1) != 0)
    goto LABEL_18;
  v55 = *(_QWORD *)&v1[v21];
  if (v55)
  {
    v56 = *(double *)&v53;
    v57 = *(uint64_t (**)(uint64_t, double))(*(_QWORD *)v55 + 264);
    v58 = swift_retain();
    LOBYTE(v57) = v57(v58, v56);
    swift_release();
    if ((v57 & 1) != 0)
    {
      v59 = v79;
      v83(v79, v82, v2);
      v3 = v1;
      v60 = v2;
      v61 = sub_239352098();
      v62 = sub_239352578();
      if (os_log_type_enabled(v61, v62))
      {
        v77 = v34;
        v78 = v60;
        v63 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        v85 = v64;
        *(_DWORD *)v63 = 136380931;
        v84 = sub_23925F3EC(0xD000000000000014, 0x8000000239360A60, &v85);
        sub_2393526B0();
        *(_WORD *)(v63 + 12) = 2050;
        v65 = *(_QWORD *)&v1[v21];
        if (v65)
        {
          v66 = *(double (**)(uint64_t))(*(_QWORD *)v65 + 184);
          v67 = swift_retain();
          v68 = v66(v67);
          swift_release();
          v84 = *(_QWORD *)&v68;
          sub_2393526B0();

          _os_log_impl(&dword_23925B000, v61, v62, "ObjectCaptureSession.%{private}s: Camera active max exposure duration successfully set to %{public}f seconds", (uint8_t *)v63, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v64, -1, -1);
          MEMORY[0x23B83BC04](v63, -1, -1);

          v77(v79, v78);
          return;
        }
        goto LABEL_30;
      }

      v74 = v59;
      v75 = v60;
LABEL_22:
      v34(v74, v75);
      return;
    }
LABEL_18:
    v83(v52, v82, v2);
    v69 = sub_239352098();
    v70 = sub_239352578();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = v34;
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v85 = v73;
      *(_DWORD *)v72 = 136380675;
      v84 = sub_23925F3EC(0xD000000000000014, 0x8000000239360A60, &v85);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v69, v70, "ObjectCaptureSession.%{private}s: Camera active max exposure duration un-specified, use auto exposure control.", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v73, -1, -1);
      MEMORY[0x23B83BC04](v72, -1, -1);

      v71(v52, v2);
      return;
    }

    v74 = v52;
    v75 = v2;
    goto LABEL_22;
  }
LABEL_29:
  __break(1u);
LABEL_30:

  __break(1u);
}

uint64_t sub_23930A15C(unsigned __int8 *a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  int v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  _BYTE v39[12];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  __n128 v47;
  __n128 v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  __n128 v55;
  uint64_t v56[3];

  v6 = v5;
  v49 = a4;
  v50 = a5;
  v47 = a2;
  v48 = a3;
  v8 = sub_2393520B0();
  v51 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_239351FD8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *a1;
  v17 = a1[1];
  v18 = *((_QWORD *)a1 + 1);
  result = (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v6) + 0x4B8))(v13);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v45 = v17;
    v46 = v18;
    sub_239351FB4();
    v20 = sub_239275A60();
    v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v51 + 16);
    v44 = v8;
    v21(v10, v20, v8);
    v22 = sub_239352098();
    v23 = sub_239352578();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v43 = v11;
      v25 = v24;
      v41 = swift_slowAlloc();
      v56[0] = v41;
      *(_DWORD *)v25 = 136381187;
      v42 = v12;
      v52.n128_u64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, v56);
      sub_2393526B0();
      *(_WORD *)(v25 + 12) = 2082;
      v52 = v47;
      v53 = v48;
      v54 = v49;
      v55 = v50;
      type metadata accessor for simd_float4x4(0);
      v26 = sub_23935232C();
      v52.n128_u64[0] = sub_23925F3EC(v26, v27, v56);
      sub_2393526B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      v52.n128_u8[0] = v16;
      v40 = v16;
      v28 = v45;
      v52.n128_u8[1] = v45;
      v29 = v46;
      v52.n128_u64[1] = v46;
      v30 = sub_23935232C();
      v52.n128_u64[0] = sub_23925F3EC(v30, v31, v56);
      sub_2393526B0();
      v12 = v42;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v22, v23, "ObjectCaptureSession.%{private}s: Called start capturing in object mode with boundingBox = %{public}s and options = %{public}s", (uint8_t *)v25, 0x20u);
      v32 = v41;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v32, -1, -1);
      v33 = v25;
      v11 = v43;
      MEMORY[0x23B83BC04](v33, -1, -1);

      v34 = v10;
      v35 = v40;
      (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v34, v44);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v10, v44);
      v29 = v46;
      v35 = v16;
      v28 = v45;
    }
    sub_239350E20();
    OCSignPostsAriadneDbgCode();
    v36 = kdebug_trace();
    MEMORY[0x24BDAC7A8](v36);
    *(_QWORD *)&v39[-96] = v15;
    *(_QWORD *)&v39[-88] = v6;
    v39[-80] = v35;
    v39[-79] = v28;
    *(_QWORD *)&v39[-72] = v29;
    v37 = v48;
    *(__n128 *)&v39[-64] = v47;
    *(__n128 *)&v39[-48] = v37;
    v38 = v50;
    *(__n128 *)&v39[-32] = v49;
    *(__n128 *)&v39[-16] = v38;
    sub_2393525F0();
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
    return v52.n128_u8[0];
  }
  return result;
}

void sub_23930A580(uint64_t a1@<X0>, _QWORD *a2@<X1>, __int16 a3@<W2>, void (*a4)(char *, uint64_t)@<X3>, _BYTE *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>, __n128 a8@<Q2>, __n128 a9@<Q3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(CoreOC::OCBoundingBox *__return_ptr, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  simd_float4x4 *v63;
  uint64_t v64;
  simd_float4 v65;
  simd_float4 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  void (*v77)(_QWORD);
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  _BOOL4 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void (*v93)(_QWORD, _QWORD, _QWORD);
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  char *v96;
  void *v97;
  id v98;
  void (*v99)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t);
  id v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t);
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  void (*v112)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(_QWORD);
  uint64_t v117;
  void (*v118)(uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t);
  uint64_t v122;
  char v123;
  NSObject *v124;
  os_log_type_t v125;
  _BOOL4 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  double v134;
  uint64_t (*v135)(uint64_t, double);
  uint64_t v136;
  NSObject *v137;
  char *v138;
  os_log_type_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double (*v143)(uint64_t);
  uint64_t v144;
  double v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  NSObject *v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  NSObject *v165;
  os_log_type_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  double v171;
  double v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char *v177;
  char *v178;
  float v179;
  uint64_t v180;
  NSObject *v181;
  os_log_type_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  simd_float4 v186;
  simd_float4 v187;
  uint64_t v188;
  uint64_t v189;
  float32x4_t v190;
  uint64_t v191;
  char *v192;
  NSObject *v193;
  os_log_type_t v194;
  _BOOL4 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  NSObject *v200;
  uint64_t v201;
  os_log_type_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  double v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  NSObject *v215;
  os_log_type_t v216;
  uint8_t *v217;
  void *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  float v222;
  void (*v223)(uint64_t, float);
  uint64_t v224;
  float v225;
  float32x4_t v226;
  float32x4_t v227;
  float32x4_t v228;
  float32x4_t v229;
  float32x4_t v230;
  float32x4_t v231;
  float32x4_t v232;
  float32x4_t v233;
  float32x4_t v234;
  float32x4_t *v235;
  char *v236;
  NSObject *v237;
  os_log_type_t v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  double v243;
  double v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  void (*v249)(char *, uint64_t);
  void (*v250)(char *, uint64_t);
  uint64_t v251;
  double v252;
  char *v253;
  void *v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void *rawValue;
  char *v260;
  simd_float4x4 *v261;
  simd_float4 v262;
  simd_float4 v263;
  simd_float4 v264;
  uint64_t v265;
  uint64_t v266;
  simd_float4 *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t (*v270)(uint64_t, uint64_t (*)(), uint64_t);
  char *v271;
  char v272;
  char *v273;
  void (*v274)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  NSObject *v275;
  os_log_type_t v276;
  uint8_t *v277;
  void *v278;
  const char *v279;
  uint8_t *v280;
  char *v281;
  NSObject *v282;
  os_log_type_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  double v289;
  double v290;
  uint64_t v291;
  void (*v292)(char *, uint64_t);
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  _QWORD v297[2];
  char *v298;
  uint64_t v299;
  _BYTE *v300;
  char *v301;
  char *v302;
  char *v303;
  float32x4_t v304;
  char *v305;
  float32x4_t v306;
  float32x4_t v307;
  float32x4_t v308;
  float32x4_t v309;
  float32x4_t v310;
  char *v311;
  float32x4_t v312;
  void (*v313)(_QWORD, _QWORD, _QWORD);
  char *v314;
  _BYTE *v315;
  uint64_t v316;
  uint64_t v317;
  __n128 v318;
  __n128 v319;
  __n128 v320;
  __n128 v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  void (*v325)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v326;
  uint64_t v327;
  _QWORD *v328;
  float32x4_t v329;
  void (*v330)(char *, uint64_t);
  uint64_t v331[4];
  float v332;
  _OWORD v333[4];
  char v334;
  CoreOC::OCVoxelCloud v335;
  uint64_t v336[18];
  CoreOC::OCBoundingBox v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  float32x4_t v343[9];
  _OWORD v344[9];
  _BYTE v345[144];
  CoreOC::OCBoundingBox v346[2];
  CoreOC::OCBoundingBox v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  simd_float4x4 v353;
  simd_float4x4 v354;

  v320 = a8;
  v321 = a9;
  v318 = a6;
  v319 = a7;
  v330 = a4;
  v315 = a5;
  v316 = a1;
  v327 = sub_239351FD8();
  v322 = *(_QWORD *)(v327 - 8);
  v11 = MEMORY[0x24BDAC7A8](v327);
  v324 = (char *)v297 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v297 - v13;
  v15 = sub_2393520B0();
  v323 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v297 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v297 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v302 = (char *)v297 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v305 = (char *)v297 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v306.i64[0] = (uint64_t)v297 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v303 = (char *)v297 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v308.i64[0] = (uint64_t)v297 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v309.i64[0] = (uint64_t)v297 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v314 = (char *)v297 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v307.i64[0] = (uint64_t)v297 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v312.i64[0] = (uint64_t)v297 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v310.i64[0] = (uint64_t)v297 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v311 = (char *)v297 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v329.i64[0] = (uint64_t)v297 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)v297 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)v297 - v50;
  v52 = *(void (**)(CoreOC::OCBoundingBox *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a2) + 0x420);
  v52(&v347, v49);
  v328 = a2;
  if (v347.transform.columns[0].i64[0] == 14)
  {
    sub_239331658((id)0xE);
    v53 = 14;
  }
  else
  {
    sub_239331658((id)v347.transform.columns[0].i64[0]);
    sub_239331658((id)0xE);
    ((void (*)(CoreOC::OCBoundingBox *__return_ptr))v52)(&v347);
    if (v347.transform.columns[0].i64[0] != 12)
    {
      sub_239331658((id)v347.transform.columns[0].i64[0]);
      sub_239331658((id)0xC);
      v154 = sub_239275A60();
      v155 = v323;
      (*(void (**)(char *, uint64_t, uint64_t))(v323 + 16))(v51, v154, v15);
      v156 = a2;
      v157 = sub_239352098();
      v158 = sub_23935256C();
      if (os_log_type_enabled(v157, v158))
      {
        v159 = swift_slowAlloc();
        v160 = swift_slowAlloc();
        v347.transform.columns[0].i64[0] = v160;
        *(_DWORD *)v159 = 136380931;
        v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
        v161 = sub_2393526B0();
        *(_WORD *)(v159 + 12) = 2082;
        v326 = v15;
        v52(v346, v161);
        v162 = sub_23935232C();
        v346[0].transform.columns[0].i64[0] = sub_23925F3EC(v162, v163, (uint64_t *)&v347);
        sub_2393526B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v157, v158, "ObjectCaptureSession.%{private}s: Start object-centric capturing expected the state to be .detecting or .ready but got %{public}s.\nNot starting capture!", (uint8_t *)v159, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v160, -1, -1);
        MEMORY[0x23B83BC04](v159, -1, -1);

        (*(void (**)(char *, uint64_t))(v323 + 8))(v51, v326);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v155 + 8))(v51, v15);
      }
      v164 = v316;
      *v315 = 0;
      goto LABEL_86;
    }
    sub_239331658((id)0xC);
    v53 = 12;
  }
  sub_239331658((id)v53);
  ((void (*)(CoreOC::OCBoundingBox *__return_ptr))v52)(&v347);
  v54 = v14;
  if (v347.transform.columns[0].i64[0] == 12)
  {
    sub_239331658((id)0xC);
    sub_239331658((id)0xC);
    v55 = v323;
    if ((a3 & 1) != 0)
    {
      v56 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v48, v56, v15);
      v57 = sub_239352098();
      v58 = sub_23935256C();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        v347.transform.columns[0].i64[0] = v60;
        *(_DWORD *)v59 = 136380675;
        v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v57, v58, "ObjectCaptureSession.%{private}s: Plane filtering is not supported when starting object-centric capturing from .ready state!", v59, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v60, -1, -1);
        MEMORY[0x23B83BC04](v59, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v15);
LABEL_63:
      v164 = v316;
      *v315 = 0;
LABEL_86:
      sub_23930CBD4(v164, MEMORY[0x24BEE7908], 0xD000000000000029, 0x80000002393609A0, "ObjectCaptureSession.%{private}s: start object-centric caputring takes time = %{public}s ms");
      return;
    }
  }
  else
  {
    sub_239331658((id)v347.transform.columns[0].i64[0]);
    sub_239331658((id)0xC);
    v55 = v323;
  }
  v61 = v328;
  v62 = (_QWORD *)((char *)v328 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions);
  *v62 = a3 & 0x101;
  v300 = v62;
  v62[1] = v330;
  sub_239350E2C();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v63 = (simd_float4x4 *)sub_239351FB4();
  OCBoundingBox.init(transform:)(v346, v63);
  v347 = v346[0];
  LOBYTE(v348) = 0;
  sub_2392FE858((uint64_t)&v347);
  v64 = (uint64_t)v61 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  if ((*((_BYTE *)v61 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
  {
    v66 = *(simd_float4 *)(v64 + 16);
    v65 = *(simd_float4 *)(v64 + 32);
    v67 = *(_QWORD *)(v64 + 48);
    v68 = *(_QWORD *)(v64 + 56);
    v347.transform.columns[0] = *(simd_float4 *)v64;
    v347.transform.columns[1] = v66;
    v347.transform.columns[2] = v65;
    v347.transform.columns[3].i64[0] = v67;
    v347.transform.columns[3].i64[1] = v68;
    sub_239345BA8(*(_QWORD *)((char *)v61 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID));
  }
  v299 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager;
  v69 = *(_QWORD *)((char *)v61 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
  if (v69)
  {
    v70 = *(void (**)(uint64_t))(*(_QWORD *)v69 + 152);
    v71 = swift_retain();
    v70(v71);
    swift_release();
  }
  v301 = v18;
  v72 = objc_allocWithZone((Class)type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor());
  v73 = objc_msgSend(v72, sel_initWithTransform_, v318.n128_f64[0], v319.n128_f64[0], v320.n128_f64[0], v321.n128_f64[0]);
  sub_239335310();
  v74 = *(void **)((char *)v61 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  *(_QWORD *)((char *)v61 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor) = v73;
  v75 = v73;

  sub_2392FE93C();
  v76 = sub_239275A60();
  v77 = *(void (**)(_QWORD))(v55 + 16);
  v78 = v329.i64[0];
  v330 = (void (*)(char *, uint64_t))v76;
  v325 = (void (*)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t))v77;
  v77(v329.i64[0]);
  v79 = sub_239352098();
  v80 = sub_239352560();
  v81 = os_log_type_enabled(v79, v80);
  v326 = v15;
  v304.i64[0] = v64;
  v298 = v21;
  if (v81)
  {
    v82 = swift_slowAlloc();
    v313 = (void (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc();
    v347.transform.columns[0].i64[0] = (uint64_t)v313;
    *(_DWORD *)v82 = 136380931;
    v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
    v83 = (uint64_t)v54;
    v297[1] = &v346[0].transform.columns[0].i64[1];
    sub_2393526B0();
    *(_WORD *)(v82 + 12) = 2082;
    v297[0] = v82 + 14;
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_239354060;
    swift_beginAccess();
    v85 = v324;
    sub_239351FB4();
    sub_239351FC0();
    v87 = v86;
    v88 = v322;
    v89 = v327;
    (*(void (**)(char *, uint64_t))(v322 + 8))(v85, v327);
    v90 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v84 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v84 + 64) = v90;
    *(double *)(v84 + 32) = v87 * 1000.0;
    v15 = v326;
    v91 = sub_239352308();
    v346[0].transform.columns[0].i64[0] = sub_23925F3EC(v91, v92, (uint64_t *)&v347);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v79, v80, "ObjectCaptureSession.%{private}s: BBox and motion manager init take time = %{public}s ms", (uint8_t *)v82, 0x16u);
    v93 = v313;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v93, -1, -1);
    MEMORY[0x23B83BC04](v82, -1, -1);

    v94 = v329.i64[0];
    v329.i64[0] = *(_QWORD *)(v323 + 8);
    ((void (*)(uint64_t, uint64_t))v329.i64[0])(v94, v15);
  }
  else
  {

    v329.i64[0] = *(_QWORD *)(v55 + 8);
    ((void (*)(uint64_t, uint64_t))v329.i64[0])(v78, v15);
    v89 = v327;
    v88 = v322;
    v83 = (uint64_t)v54;
    v85 = v324;
  }
  sub_239351FB4();
  swift_beginAccess();
  v95 = *(void (**)(_QWORD, _QWORD, _QWORD))(v88 + 40);
  v317 = v83;
  v313 = v95;
  v95(v83, v85, v89);
  v96 = (char *)v328;
  v97 = *(void **)((char *)v328 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
  v98 = objc_msgSend(v97, sel_configuration);

  v99 = v325;
  if (!v98)
  {
    __break(1u);
    goto LABEL_88;
  }
  v100 = objc_msgSend(v97, sel_configuration);
  if (!v100)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v101 = v100;
  type metadata accessor for CameraControl();
  v102 = objc_msgSend(v101, sel_videoFormat);

  v103 = objc_msgSend(v102, sel_device);
  v104 = sub_2392F01D8((uint64_t)v103);
  v105 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl;
  *(_QWORD *)&v96[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = v104;
  swift_release();
  v106 = *(_QWORD *)&v96[v105];
  v83 = (uint64_t)v311;
  if (!v106)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v107 = *(void (**)(uint64_t))(*(_QWORD *)v106 + 280);
  v108 = swift_retain();
  v107(v108);
  swift_release();
  v99(v83, (void (*)(_QWORD, _QWORD))v330, v15);
  v109 = sub_239352098();
  v110 = sub_239352560();
  if (os_log_type_enabled(v109, v110))
  {
    v111 = (uint8_t *)swift_slowAlloc();
    v112 = v99;
    v113 = swift_slowAlloc();
    v347.transform.columns[0].i64[0] = v113;
    *(_DWORD *)v111 = 136380675;
    v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
    v15 = v326;
    v96 = (char *)v328;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v109, v110, "ObjectCaptureSession.%{private}s: Camera auto white balance is locked.", v111, 0xCu);
    swift_arrayDestroy();
    v114 = v113;
    v99 = v112;
    MEMORY[0x23B83BC04](v114, -1, -1);
    MEMORY[0x23B83BC04](v111, -1, -1);
  }

  ((void (*)(uint64_t, uint64_t))v329.i64[0])(v83, v15);
  v115 = *(_QWORD *)&v96[v105];
  if (!v115)
    goto LABEL_93;
  v116 = *(void (**)(_QWORD))(*(_QWORD *)v115 + 200);
  swift_retain();
  v116(0);
  swift_release();
  v117 = *(_QWORD *)&v96[v105];
  if (!v117)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v118 = *(void (**)(uint64_t))(*(_QWORD *)v117 + 208);
  v119 = swift_retain();
  v118(v119);
  swift_release();
  v120 = *(_QWORD *)&v96[v105];
  if (!v120)
  {
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  v121 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v120 + 304);
  v122 = swift_retain();
  v123 = v121(v122);
  swift_release();
  v83 = v310.i64[0];
  v99(v310.i64[0], (void (*)(_QWORD, _QWORD))v330, v15);
  v124 = sub_239352098();
  v125 = sub_239352578();
  v126 = os_log_type_enabled(v124, v125);
  v311 = (char *)v105;
  if (v126)
  {
    v127 = swift_slowAlloc();
    v128 = swift_slowAlloc();
    v347.transform.columns[0].i64[0] = v128;
    *(_DWORD *)v127 = 136380931;
    v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
    v15 = v326;
    sub_2393526B0();
    *(_WORD *)(v127 + 12) = 1026;
    v346[0].transform.columns[0].i32[0] = v123 & 1;
    v105 = (uint64_t)v311;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v124, v125, "ObjectCaptureSession.%{private}s: Camera face driven AF and AE disabled = %{BOOL,public}d", (uint8_t *)v127, 0x12u);
    swift_arrayDestroy();
    v129 = v128;
    v96 = (char *)v328;
    MEMORY[0x23B83BC04](v129, -1, -1);
    MEMORY[0x23B83BC04](v127, -1, -1);
  }

  ((void (*)(uint64_t, uint64_t))v329.i64[0])(v83, v15);
  v130 = v312.i64[0];
  *(double *)&v131 = COERCE_DOUBLE(sub_239263D7C());
  if ((v132 & 1) != 0)
    goto LABEL_34;
  v133 = *(_QWORD *)&v96[v105];
  if (!v133)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  v134 = *(double *)&v131;
  v135 = *(uint64_t (**)(uint64_t, double))(*(_QWORD *)v133 + 264);
  v136 = swift_retain();
  LOBYTE(v135) = v135(v136, v134);
  swift_release();
  if ((v135 & 1) == 0)
  {
LABEL_34:
    v147 = v307.i64[0];
    v148 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v325;
    v325(v307.i64[0], (void (*)(_QWORD, _QWORD))v330, v15);
    v149 = sub_239352098();
    v150 = sub_239352578();
    if (os_log_type_enabled(v149, v150))
    {
      v151 = (uint8_t *)swift_slowAlloc();
      v152 = swift_slowAlloc();
      v347.transform.columns[0].i64[0] = v152;
      *(_DWORD *)v151 = 136380675;
      v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
      v15 = v326;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v149, v150, "ObjectCaptureSession.%{private}s: Camera active max exposure duration un-specified, use auto exposure control.", v151, 0xCu);
      swift_arrayDestroy();
      v148 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v325;
      MEMORY[0x23B83BC04](v152, -1, -1);
      MEMORY[0x23B83BC04](v151, -1, -1);
    }

    ((void (*)(uint64_t, uint64_t))v329.i64[0])(v147, v15);
    v153 = v314;
LABEL_44:
    v148(v153, (void (*)(_QWORD, _QWORD))v330, v15);
    v165 = sub_239352098();
    v166 = sub_239352560();
    if (os_log_type_enabled(v165, v166))
    {
      v167 = swift_slowAlloc();
      v168 = swift_slowAlloc();
      v347.transform.columns[0].i64[0] = v168;
      *(_DWORD *)v167 = 136380931;
      v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
      sub_2393526B0();
      *(_WORD *)(v167 + 12) = 2082;
      v312.i64[0] = v167 + 14;
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v169 = swift_allocObject();
      *(_OWORD *)(v169 + 16) = xmmword_239354060;
      v83 = (uint64_t)v324;
      sub_239351FB4();
      v170 = v317;
      sub_239351FC0();
      v172 = v171;
      (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v83, v327);
      v173 = MEMORY[0x24BEE1448];
      *(_QWORD *)(v169 + 56) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(v169 + 64) = v173;
      *(double *)(v169 + 32) = v172 * 1000.0;
      v174 = v327;
      v175 = sub_239352308();
      v346[0].transform.columns[0].i64[0] = sub_23925F3EC(v175, v176, (uint64_t *)&v347);
      v15 = v326;
      sub_2393526B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v165, v166, "ObjectCaptureSession.%{private}s: Camera control init takes time = %{public}s ms", (uint8_t *)v167, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v168, -1, -1);
      MEMORY[0x23B83BC04](v167, -1, -1);

      ((void (*)(char *, uint64_t))v329.i64[0])(v314, v15);
      v177 = (char *)v328;
    }
    else
    {

      ((void (*)(char *, uint64_t))v329.i64[0])(v153, v15);
      v83 = (uint64_t)v324;
      v174 = v327;
      v177 = (char *)v328;
      v170 = v317;
    }
    sub_239351FB4();
    v313(v170, v83, v174);
    sub_2393094F8();
    v178 = &v177[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig];
    sub_239268764((uint64_t)&v177[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig], (uint64_t)v345, &qword_25692A908);
    sub_239268764((uint64_t)v345, (uint64_t)&v347, &qword_25692A908);
    sub_239268764((uint64_t)v345, (uint64_t)v346, &qword_25692A908);
    if (sub_239341CFC((uint64_t)v346) == 1)
      goto LABEL_96;
    v179 = v347.transform.columns[1].f32[2];
    v180 = v309.i64[0];
    v83 = (uint64_t)v325;
    v325(v309.i64[0], (void (*)(_QWORD, _QWORD))v330, v15);
    v181 = sub_239352098();
    v182 = sub_239352578();
    if (os_log_type_enabled(v181, v182))
    {
      v183 = swift_slowAlloc();
      v184 = swift_slowAlloc();
      v347.transform.columns[0].i64[0] = v184;
      *(_DWORD *)v183 = 136446466;
      *(_QWORD *)&v344[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
      v314 = v178;
      v15 = v326;
      sub_2393526B0();
      *(_WORD *)(v183 + 12) = 2050;
      *(double *)v344 = v179;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v181, v182, "ObjectCaptureSession.%{public}s: Depth confidence threshold scanning mode = %{public}f", (uint8_t *)v183, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v184, -1, -1);
      MEMORY[0x23B83BC04](v183, -1, -1);

      v185 = v180;
      v178 = v314;
    }
    else
    {

      v185 = v180;
    }
    ((void (*)(uint64_t, uint64_t))v329.i64[0])(v185, v15);
    if ((*(_BYTE *)(v304.i64[0] + 64) & 1) == 0)
    {
      v187 = *(simd_float4 *)(v304.i64[0] + 16);
      v186 = *(simd_float4 *)(v304.i64[0] + 32);
      v188 = *(_QWORD *)(v304.i64[0] + 48);
      v189 = *(_QWORD *)(v304.i64[0] + 56);
      v347.transform.columns[0] = *(simd_float4 *)v304.i64[0];
      v347.transform.columns[1] = v187;
      v347.transform.columns[2] = v186;
      v347.transform.columns[3].i64[0] = v188;
      v347.transform.columns[3].i64[1] = v189;
      *(__n64 *)v190.f32 = OCBoundingBox.extent.getter();
      sub_239330868(v177[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled], v343, v190, v179);
      v344[6] = v343[6];
      v344[7] = v343[7];
      v344[8] = v343[8];
      v344[2] = v343[2];
      v344[3] = v343[3];
      v344[4] = v343[4];
      v344[5] = v343[5];
      v344[0] = v343[0];
      v344[1] = v343[1];
      nullsub_1(v344);
      sub_239268764((uint64_t)v344, (uint64_t)v178, &qword_25692A908);
      v191 = v308.i64[0];
      ((void (*)(uint64_t, void (*)(char *, uint64_t), uint64_t))v83)(v308.i64[0], v330, v15);
      v192 = v177;
      v193 = sub_239352098();
      v194 = sub_239352578();
      v195 = os_log_type_enabled(v193, v194);
      v314 = v192;
      if (v195)
      {
        v196 = swift_slowAlloc();
        v197 = swift_slowAlloc();
        v336[0] = v197;
        *(_DWORD *)v196 = 136380931;
        v347.transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, v336);
        sub_2393526B0();
        *(_WORD *)(v196 + 12) = 2050;
        sub_239268764((uint64_t)v178, (uint64_t)&v337, &qword_25692A908);
        sub_239268764((uint64_t)&v337, (uint64_t)&v347, &qword_25692A908);
        if (sub_239341CFC((uint64_t)&v347) == 1)
        {
LABEL_99:

          __break(1u);
          goto LABEL_100;
        }
        *(double *)&v335.voxels._rawValue = v347.transform.columns[2].f32[0];
        sub_2393526B0();
        v192 = v314;

        _os_log_impl(&dword_23925B000, v193, v194, "ObjectCaptureSession.%{private}s: Voxel dimension = %{public}f", (uint8_t *)v196, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v197, -1, -1);
        MEMORY[0x23B83BC04](v196, -1, -1);

        v15 = v326;
        ((void (*)(uint64_t, uint64_t))v329.i64[0])(v191, v326);
        v198 = v327;
      }
      else
      {

        ((void (*)(uint64_t, uint64_t))v329.i64[0])(v191, v15);
        v198 = v327;
      }
      sub_239268764((uint64_t)v178, (uint64_t)v336, &qword_25692A908);
      sub_239268764((uint64_t)v336, (uint64_t)&v337, &qword_25692A908);
      if (sub_239341CFC((uint64_t)&v337) == 1)
        goto LABEL_97;
      v349 = v339;
      v350 = v340;
      v351 = v341;
      v352 = v342;
      v347 = v337;
      v348 = v338;
      if (!sub_23930CECC((__int128 *)&v347))
      {
        v214 = v303;
        ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v83)(v303, v330, v15);
        v215 = sub_239352098();
        v216 = sub_23935256C();
        if (os_log_type_enabled(v215, v216))
        {
          v217 = (uint8_t *)swift_slowAlloc();
          v218 = (void *)swift_slowAlloc();
          v335.voxels._rawValue = v218;
          *(_DWORD *)v217 = 136380675;
          *(_QWORD *)&v333[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v335);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v215, v216, "ObjectCaptureSession.%{private}s: Failed to start voxel integration!", v217, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v218, -1, -1);
          MEMORY[0x23B83BC04](v217, -1, -1);
        }

        ((void (*)(char *, uint64_t))v329.i64[0])(v214, v15);
        (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v317, v327);
        goto LABEL_63;
      }
      v199 = v306.i64[0];
      ((void (*)(uint64_t, void (*)(char *, uint64_t), uint64_t))v83)(v306.i64[0], v330, v15);
      v200 = sub_239352098();
      v201 = v15;
      v202 = sub_239352560();
      if (os_log_type_enabled(v200, v202))
      {
        v203 = swift_slowAlloc();
        v312.i64[0] = swift_slowAlloc();
        v335.voxels._rawValue = (void *)v312.i64[0];
        *(_DWORD *)v203 = 136380931;
        *(_QWORD *)&v333[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v335);
        v310.i64[0] = (uint64_t)v333 + 8;
        sub_2393526B0();
        *(_WORD *)(v203 + 12) = 2082;
        v309.i64[0] = v203 + 14;
        sub_23925FB08((uint64_t *)&unk_25692BD50);
        v204 = swift_allocObject();
        *(_OWORD *)(v204 + 16) = xmmword_239354060;
        v205 = v324;
        sub_239351FB4();
        v206 = v317;
        sub_239351FC0();
        v208 = v207;
        (*(void (**)(char *, uint64_t))(v322 + 8))(v205, v327);
        v209 = MEMORY[0x24BEE1448];
        *(_QWORD *)(v204 + 56) = MEMORY[0x24BEE13C8];
        *(_QWORD *)(v204 + 64) = v209;
        *(double *)(v204 + 32) = v208 * 1000.0;
        v210 = sub_239352308();
        *(_QWORD *)&v333[0] = sub_23925F3EC(v210, v211, (uint64_t *)&v335);
        v198 = v327;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v200, v202, "ObjectCaptureSession.%{private}s: Voxel integration restart takes time = %{public}s ms", (uint8_t *)v203, 0x16u);
        v212 = v312.i64[0];
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v212, -1, -1);
        MEMORY[0x23B83BC04](v203, -1, -1);

        v213 = v326;
        ((void (*)(uint64_t, uint64_t))v329.i64[0])(v306.i64[0], v326);
      }
      else
      {

        ((void (*)(uint64_t, uint64_t))v329.i64[0])(v199, v201);
        v213 = v201;
        v205 = v324;
        v206 = v317;
      }
      v219 = v305;
      sub_239351FB4();
      v313(v206, v205, v198);
      sub_239314720();
      v220 = *(_QWORD *)&v192[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
      v221 = v205;
      v83 = (uint64_t)v325;
      if (v220)
      {
        sub_239268764((uint64_t)v178, (uint64_t)v333, &qword_25692A908);
        sub_239268764((uint64_t)v333, (uint64_t)v331, &qword_25692A908);
        sub_239268764((uint64_t)v333, (uint64_t)&v335, &qword_25692A908);
        if (sub_239341CFC((uint64_t)&v335) == 1)
        {
LABEL_101:
          __break(1u);
          goto LABEL_102;
        }
        v222 = v332;
        v223 = *(void (**)(uint64_t, float))(*(_QWORD *)v220 + 664);
        v224 = swift_retain();
        v223(v224, v222);
        if ((*(_BYTE *)(v304.i64[0] + 64) & 1) != 0)
        {
LABEL_102:
          __break(1u);
          goto LABEL_103;
        }
        *(double *)v353.columns[0].i64 = sub_2392DF1A0(*(float32x4_t *)v304.i64[0], *(double *)(v304.i64[0] + 16), *(double *)(v304.i64[0] + 32), *(double *)(v304.i64[0] + 48), *MEMORY[0x24BDAEE00], *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16), *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32), *(float32x4_t *)(MEMORY[0x24BDAEE00] + 48));
        v354 = __invert_f4(v353);
        v308 = (float32x4_t)v354.columns[0];
        v309 = (float32x4_t)v354.columns[1];
        v310 = (float32x4_t)v354.columns[2];
        v312 = (float32x4_t)v354.columns[3];
        v225 = (*(float (**)(void))(*(_QWORD *)v220 + 656))();
        sub_2392DF434(v225);
        v304 = v226;
        v306 = v227;
        v307 = v228;
        v329 = v229;
        swift_release();
        v230 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v308, v306.f32[0]), v309, *(float32x2_t *)v306.f32, 1), v310, v306, 2), v312, v306, 3);
        v231 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v308, v307.f32[0]), v309, *(float32x2_t *)v307.f32, 1), v310, v307, 2), v312, v307, 3);
        v232 = v312;
        v233 = v329;
        v234 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v308, v329.f32[0]), v309, *(float32x2_t *)v329.f32, 1), v310, v329, 2);
        v235 = (float32x4_t *)&v192[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform];
        *v235 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v308, v304.f32[0]), v309, *(float32x2_t *)v304.f32, 1), v310, v304, 2), v312, v304, 3);
        v235[1] = v230;
        v235[2] = v231;
        v235[3] = vmlaq_laneq_f32(v234, v232, v233, 3);
      }
      v236 = v221;
      ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v83)(v219, v330, v213);
      v237 = sub_239352098();
      v238 = sub_239352560();
      if (os_log_type_enabled(v237, v238))
      {
        v239 = swift_slowAlloc();
        v240 = (void *)swift_slowAlloc();
        v335.voxels._rawValue = v240;
        *(_DWORD *)v239 = 136380931;
        *(_QWORD *)&v333[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v335);
        sub_2393526B0();
        *(_WORD *)(v239 + 12) = 2082;
        v329.i64[0] = v239 + 14;
        sub_23925FB08((uint64_t *)&unk_25692BD50);
        v241 = swift_allocObject();
        *(_OWORD *)(v241 + 16) = xmmword_239354060;
        sub_239351FB4();
        v242 = v317;
        sub_239351FC0();
        v244 = v243;
        (*(void (**)(char *, uint64_t))(v322 + 8))(v324, v327);
        v245 = MEMORY[0x24BEE1448];
        *(_QWORD *)(v241 + 56) = MEMORY[0x24BEE13C8];
        *(_QWORD *)(v241 + 64) = v245;
        *(double *)(v241 + 32) = v244 * 1000.0;
        v246 = v327;
        v247 = sub_239352308();
        *(_QWORD *)&v333[0] = sub_23925F3EC(v247, v248, (uint64_t *)&v335);
        v236 = v324;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v237, v238, "ObjectCaptureSession.%{private}s: Init PGManager if needed takes time = %{public}s ms", (uint8_t *)v239, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v240, -1, -1);
        MEMORY[0x23B83BC04](v239, -1, -1);

        v249 = *(void (**)(char *, uint64_t))(v323 + 8);
        v249(v305, v326);
        v83 = (uint64_t)v328;
      }
      else
      {

        v249 = *(void (**)(char *, uint64_t))(v323 + 8);
        v249(v219, v213);
        v83 = (uint64_t)v328;
        v242 = v317;
        v246 = v198;
      }
      sub_239351FB4();
      v313(v242, v236, v246);
      if ((v314[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8] & 1) == 0)
      {
        v250 = v249;
        v251 = *(_QWORD *)&v311[v83];
        if (!v251)
        {
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        v252 = *(double *)&v314[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
        type metadata accessor for CaptureManager();
        v333[0] = v318;
        v333[1] = v319;
        v333[2] = v320;
        v333[3] = v321;
        v334 = 0;
        v83 = *(_QWORD *)(v83 + v299);
        v253 = v314;
        v254 = *(void **)&v314[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
        swift_retain();
        v255 = v254;
        swift_retain();
        v256 = sub_23929C610((uint64_t)v333, v251, v83, v255, v252);
        v257 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager;
        *(_QWORD *)&v253[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = v256;
        swift_release();
        v258 = v326;
        if (*v300 != 2)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_23935211C();
          swift_release();
          swift_release();
          rawValue = v335.voxels._rawValue;
          swift_getKeyPath();
          swift_getKeyPath();
          v335.voxels._rawValue = (void *)15;
          v260 = v253;
          sub_239352128();
          v335.voxels._rawValue = rawValue;
          sub_2392F48FC(&v335.voxels._rawValue);
          sub_239331658(rawValue);
          OCVoxelCloud.init(voxels:transform:)(&v335, MEMORY[0x24BEE4AF8], v261);
          v262 = v335.transform.columns[0];
          v263 = v335.transform.columns[1];
          v264 = v335.transform.columns[2];
          v265 = v335.transform.columns[3].i64[1];
          v266 = v335.transform.columns[3].i64[0];
          v267 = (simd_float4 *)&v260[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud];
          v267->i64[0] = (uint64_t)v335.voxels._rawValue;
          v267->i64[1] = 0;
          v267[1] = v262;
          v267[2] = v263;
          v267[3] = v264;
          v267[4].i64[0] = v266;
          v267[4].i64[1] = v265;
          swift_bridgeObjectRelease();
          v268 = *(_QWORD *)&v253[v257];
          if (!v268)
            goto LABEL_79;
          v269 = swift_allocObject();
          *(_QWORD *)(v269 + 16) = v260;
          v270 = *(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)v268 + 488);
          v271 = v260;
          swift_retain();
          v272 = v270(1, sub_239342C74, v269);
          swift_release();
          swift_release();
          if ((v272 & 1) != 0)
          {
            v273 = v302;
            v274 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v325;
            v325((uint64_t)v302, (void (*)(_QWORD, _QWORD))v330, v258);
            v275 = sub_239352098();
            v276 = sub_239352578();
            if (os_log_type_enabled(v275, v276))
            {
              v277 = (uint8_t *)swift_slowAlloc();
              v278 = (void *)swift_slowAlloc();
              v335.voxels._rawValue = v278;
              *(_DWORD *)v277 = 136380675;
              v331[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v335);
              sub_2393526B0();
              v279 = "ObjectCaptureSession.%{private}s: AutomaticCapture: Take first shot success.";
LABEL_81:
              _os_log_impl(&dword_23925B000, v275, v276, v279, v277, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v278, -1, -1);
              v280 = v277;
              v274 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v325;
              MEMORY[0x23B83BC04](v280, -1, -1);
            }
          }
          else
          {
LABEL_79:
            v273 = v298;
            v274 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v325;
            v325((uint64_t)v298, (void (*)(_QWORD, _QWORD))v330, v258);
            v275 = sub_239352098();
            v276 = sub_23935256C();
            if (os_log_type_enabled(v275, v276))
            {
              v277 = (uint8_t *)swift_slowAlloc();
              v278 = (void *)swift_slowAlloc();
              v335.voxels._rawValue = v278;
              *(_DWORD *)v277 = 136380675;
              v331[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v335);
              sub_2393526B0();
              v279 = "ObjectCaptureSession.%{private}s: AutomaticCapture: Take first shot fail!";
              goto LABEL_81;
            }
          }

          v250(v273, v258);
          v281 = v301;
          v274(v301, (void (*)(_QWORD, _QWORD))v330, v258);
          v282 = sub_239352098();
          v283 = sub_239352560();
          if (os_log_type_enabled(v282, v283))
          {
            v284 = swift_slowAlloc();
            v330 = v250;
            v285 = v284;
            v329.i64[0] = swift_slowAlloc();
            v335.voxels._rawValue = (void *)v329.i64[0];
            *(_DWORD *)v285 = 136380931;
            v331[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v335);
            sub_2393526B0();
            *(_WORD *)(v285 + 12) = 2082;
            v328 = (_QWORD *)(v285 + 14);
            sub_23925FB08((uint64_t *)&unk_25692BD50);
            v286 = swift_allocObject();
            v287 = v324;
            v288 = v286;
            *(_OWORD *)(v286 + 16) = xmmword_239354060;
            sub_239351FB4();
            sub_239351FC0();
            v290 = v289;
            v291 = v327;
            v292 = *(void (**)(char *, uint64_t))(v322 + 8);
            v292(v287, v327);
            v293 = MEMORY[0x24BEE1448];
            *(_QWORD *)(v288 + 56) = MEMORY[0x24BEE13C8];
            *(_QWORD *)(v288 + 64) = v293;
            *(double *)(v288 + 32) = v290 * 1000.0;
            v294 = sub_239352308();
            v331[0] = sub_23925F3EC(v294, v295, (uint64_t *)&v335);
            sub_2393526B0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23925B000, v282, v283, "ObjectCaptureSession.%{private}s: Init CaptureManager and takes first shot take time = %{public}s ms", (uint8_t *)v285, 0x16u);
            v296 = v329.i64[0];
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v296, -1, -1);
            MEMORY[0x23B83BC04](v285, -1, -1);

            v330(v301, v326);
            v292((char *)v317, v291);
          }
          else
          {

            v250(v281, v258);
            (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v317, v327);
          }
          v164 = v316;
          *v315 = 1;
          goto LABEL_86;
        }
        goto LABEL_90;
      }
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v325(v130, (void (*)(_QWORD, _QWORD))v330, v15);
  v83 = v96;
  v137 = sub_239352098();
  v138 = v96;
  v139 = sub_239352578();
  if (!os_log_type_enabled(v137, v139))
  {

    v146 = v130;
    goto LABEL_43;
  }
  v140 = swift_slowAlloc();
  v141 = swift_slowAlloc();
  v347.transform.columns[0].i64[0] = v141;
  *(_DWORD *)v140 = 136380931;
  v346[0].transform.columns[0].i64[0] = sub_23925F3EC(0xD000000000000029, 0x80000002393609A0, (uint64_t *)&v347);
  sub_2393526B0();
  *(_WORD *)(v140 + 12) = 2050;
  v142 = *(_QWORD *)&v138[v105];
  if (v142)
  {
    v143 = *(double (**)(uint64_t))(*(_QWORD *)v142 + 184);
    v144 = swift_retain();
    v145 = v143(v144);
    swift_release();
    *(double *)v346[0].transform.columns[0].i64 = v145;
    sub_2393526B0();

    _os_log_impl(&dword_23925B000, v137, v139, "ObjectCaptureSession.%{private}s: Camera active max exposure duration successfully set to %{public}f seconds", (uint8_t *)v140, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v141, -1, -1);
    MEMORY[0x23B83BC04](v140, -1, -1);

    v146 = v312.i64[0];
    v15 = v326;
LABEL_43:
    ((void (*)(uint64_t, uint64_t))v329.i64[0])(v146, v15);
    v153 = v314;
    v148 = (void (*)(char *, void (*)(_QWORD, _QWORD), uint64_t))v325;
    goto LABEL_44;
  }
LABEL_103:

  __break(1u);
}

uint64_t sub_23930CBD4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, unint64_t a4, const char *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a4;
  v30 = a5;
  v28 = a3;
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239351FD8();
  v31 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_239354060;
  sub_239351FC0();
  v14 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v13 + 64) = v14;
  *(double *)(v13 + 32) = v15 * 1000.0;
  v16 = sub_239352308();
  v18 = v17;
  v19 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
  swift_bridgeObjectRetain();
  v20 = sub_239352098();
  v21 = a2();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v10;
    v24 = v23;
    v33 = v23;
    *(_DWORD *)v22 = 136380931;
    v26 = v6;
    v32 = sub_23925F3EC(v28, v29, &v33);
    v29 = v7;
    sub_2393526B0();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    v32 = sub_23925F3EC(v16, v18, &v33);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v20, v21, v30, (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v24, -1, -1);
    MEMORY[0x23B83BC04](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v27);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  }
}

BOOL sub_23930CECC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - v8;
  v10 = sub_239351FD8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v14 = a1[6];
  *(_OWORD *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin) = a1[5];
  v15 = a1[7];
  v16 = a1[8];
  v52 = v14;
  v53 = v15;
  v54 = v16;
  v17 = a1[3];
  v48 = a1[2];
  v49 = v17;
  v18 = a1[5];
  v50 = a1[4];
  v51 = v18;
  v19 = a1[1];
  v46 = *a1;
  v47 = v19;
  swift_beginAccess();
  v20 = OCProxySurfaceCreate();
  swift_endAccess();
  if (!v20)
  {
    v29 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM;
    *(_OWORD *)(v29 + 32) = 0u;
    *(_OWORD *)(v29 + 48) = 0u;
    *(_OWORD *)v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    *(_BYTE *)(v29 + 64) = 1;
    v30 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform;
    *(_OWORD *)v30 = 0u;
    *(_OWORD *)(v30 + 16) = 0u;
    *(_OWORD *)(v30 + 32) = 0u;
    *(_OWORD *)(v30 + 48) = 0u;
    *(_BYTE *)(v30 + 64) = 1;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection) = 0;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) = 0;
    v31 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v31, v3);
    v32 = sub_239352098();
    v33 = sub_239352560();
    if (os_log_type_enabled(v32, v33))
    {
      LODWORD(v41) = 0;
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v43 = v10;
      v36 = v35;
      v45[0] = v35;
      v42 = v3;
      *(_DWORD *)v34 = 136380675;
      v44 = sub_23925F3EC(0xD000000000000019, 0x8000000239360100, v45);
      v20 = v41;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v32, v33, "ObjectCaptureSession.%{private}s: Reset voxel integration subsession data.", v34, 0xCu);
      swift_arrayDestroy();
      v37 = v36;
      v10 = v43;
      MEMORY[0x23B83BC04](v37, -1, -1);
      MEMORY[0x23B83BC04](v34, -1, -1);

      v27 = *(void (**)(char *, uint64_t))(v4 + 8);
      v28 = v7;
      goto LABEL_6;
    }

    v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    v28 = v7;
LABEL_9:
    v38 = v3;
    goto LABEL_10;
  }
  v21 = sub_239275B74();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v21, v3);
  v22 = sub_239352098();
  v23 = sub_23935256C();
  if (!os_log_type_enabled(v22, v23))
  {

    v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    v28 = v9;
    goto LABEL_9;
  }
  v43 = v10;
  v24 = (uint8_t *)swift_slowAlloc();
  v25 = swift_slowAlloc();
  v42 = v3;
  v26 = v25;
  v45[0] = v25;
  v41 = v4;
  *(_DWORD *)v24 = 136380675;
  v44 = sub_23925F3EC(0xD000000000000019, 0x8000000239360100, v45);
  v10 = v43;
  sub_2393526B0();
  _os_log_impl(&dword_23925B000, v22, v23, "ObjectCaptureSession.%{private}s: Failed to create proxy surface!", v24, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x23B83BC04](v26, -1, -1);
  MEMORY[0x23B83BC04](v24, -1, -1);

  v27 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28 = v9;
LABEL_6:
  v38 = v42;
LABEL_10:
  v27(v28, v38);
  sub_239316764((uint64_t)v13, 0xD000000000000019, 0x8000000239360100);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20 == 0;
}

void sub_23930D3BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t ObjectType;
  char *v27;
  void *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  uint64_t v36;
  uint8_t *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  void (*v54)(char *, uint64_t);
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  unint64_t v62;
  float v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  uint64_t v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  _QWORD *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  id v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  char *v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  id v105;
  unsigned int v106;
  id v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char *v116;
  id v117;
  id v118;
  id v119;
  double v120;
  double v121;
  id v122;
  double v123;
  double v124;
  id v125;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  int v130;
  _DWORD *v131;
  id v132;
  id v133;
  uint64_t v134;
  int v135;
  int v136;
  char *v137;
  void (*v138)(char *, uint64_t, uint64_t);
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  id v148;
  double v149;
  uint64_t v150[3];

  v1 = v0;
  v147 = sub_2393520B0();
  v2 = *(_QWORD *)(v147 - 8);
  v3 = MEMORY[0x24BDAC7A8](v147);
  v143 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v139 = (char *)&v137 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v141 = (char *)&v137 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v140 = (char *)&v137 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v137 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v137 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v144 = (char *)&v137 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v137 - v19;
  type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
  v21 = sub_2392757E4();
  objc_msgSend(v21, sel_setFrameSemantics_, 24);
  v148 = objc_msgSend((id)swift_getObjCClassFromObject(), sel_recommendedVideoFormatForHighResolutionFrameCapturing);
  if (!v148)
    goto LABEL_79;
  v22 = sub_239263FB4();
  if ((v23 & 1) != 0)
  {
    v29 = v147;
  }
  else
  {
    v24 = v22;
    v25 = v16;
    ObjectType = swift_getObjectType();
    v27 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
    swift_beginAccess();
    v28 = (void *)(*(uint64_t (**)(uint64_t, char *))(ObjectType + 80))(v24, v27);
    swift_endAccess();
    if (v28)
    {

      v148 = v28;
    }
    v29 = v147;
    v16 = v25;
  }
  objc_msgSend(v21, sel_setVideoFormat_, v148);
  objc_msgSend(v21, sel_setAlwaysUsePrimaryCameraForTracking_, 1);
  v30 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported);
  if (v30 == 2)
    goto LABEL_80;
  v146 = v1;
  if ((v30 & 1) != 0)
  {
    v142 = v16;
    objc_msgSend(v21, sel_setTimeOfFlightProjectorMode_, *MEMORY[0x24BDB1450]);
    v31 = sub_239275A60();
    v138 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v138(v20, v31, v29);
    v32 = sub_239352098();
    v33 = sub_239352578();
    v34 = os_log_type_enabled(v32, v33);
    v145 = v2;
    v137 = v13;
    if (v34)
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v150[0] = v36;
      *(_DWORD *)v35 = 136380675;
      v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v32, v33, "ObjectCaptureSession.%{private}s: Set high quality mode for LiDAR point cloud.", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v36, -1, -1);
      v37 = v35;
      v29 = v147;
      MEMORY[0x23B83BC04](v37, -1, -1);
    }

    v38 = *(void (**)(char *, uint64_t))(v2 + 8);
    v38(v20, v29);
    v39 = v144;
    v138(v144, v31, v29);
    v40 = sub_239352098();
    v41 = sub_239352578();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v150[0] = v43;
      *(_DWORD *)v42 = 136380675;
      v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v40, v41, "ObjectCaptureSession.%{private}s: Set framerate = 120 for LiDAR point cloud.", v42, 0xCu);
      swift_arrayDestroy();
      v44 = v43;
      v29 = v147;
      MEMORY[0x23B83BC04](v44, -1, -1);
      MEMORY[0x23B83BC04](v42, -1, -1);
    }

    v38(v39, v29);
    v2 = v145;
    v1 = v146;
    v13 = v137;
    v16 = v142;
    objc_msgSend(v21, sel_setJasperFrameRate_, 120);
  }
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot) == 1)
  {
    objc_msgSend(v21, sel_setJasperFrameRate_, 60);
    v45 = sub_239275A60();
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v46(v16, v45, v29);
    v47 = sub_239352098();
    v48 = sub_239352578();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v145 = v2;
      v50 = (uint8_t *)v49;
      v51 = swift_slowAlloc();
      v150[0] = v51;
      v142 = v16;
      *(_DWORD *)v50 = 136380675;
      v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v47, v48, "ObjectCaptureSession.%{private}s: Adjusted framerate = 60 for LiDAR point cloud.", v50, 0xCu);
      swift_arrayDestroy();
      v52 = v51;
      v29 = v147;
      MEMORY[0x23B83BC04](v52, -1, -1);
      v53 = v50;
      v2 = v145;
      MEMORY[0x23B83BC04](v53, -1, -1);

      v54 = *(void (**)(char *, uint64_t))(v2 + 8);
      v54(v142, v29);
    }
    else
    {

      v54 = *(void (**)(char *, uint64_t))(v2 + 8);
      v54(v16, v29);
    }
    objc_msgSend(v21, sel_setDepthSensorNumberOfPointsMode_, 1);
    v46(v13, v45, v29);
    v55 = sub_239352098();
    v56 = sub_239352578();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v150[0] = v58;
      *(_DWORD *)v57 = 136380675;
      v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v55, v56, "ObjectCaptureSession.%{private}s: Set number of points = high, for LiDAR point cloud.", v57, 0xCu);
      swift_arrayDestroy();
      v59 = v58;
      v29 = v147;
      MEMORY[0x23B83BC04](v59, -1, -1);
      MEMORY[0x23B83BC04](v57, -1, -1);
    }

    v54(v13, v29);
    v1 = v146;
  }
  objc_msgSend(v21, sel_setFocusPixelBlurScoreDeliveryEnabled_, 1, v137);
  v60 = v21;
  v61 = (void *)sub_2393522CC();
  objc_msgSend(v60, sel_setSlamConfiguration_, v61);

  if (((*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x4B8))() & 1) != 0)
  {
    objc_msgSend(v60, sel_setPlaneDetection_, 0);
    v62 = sub_2392640C0();
    if ((v62 & 0x100000000) != 0)
    {
      v74 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent;
      v142 = (char *)sub_239270C6C(*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent));
      v75 = sub_239275A60();
      v76 = *(char **)(v2 + 16);
      v77 = v141;
      v140 = (char *)v75;
      v144 = v76;
      ((void (*)(char *))v76)(v141);
      v78 = v1;
      v79 = sub_239352098();
      v80 = sub_239352578();
      if (os_log_type_enabled(v79, v80))
      {
        v81 = swift_slowAlloc();
        v82 = swift_slowAlloc();
        v150[0] = v82;
        *(_DWORD *)v81 = 136381187;
        v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
        sub_2393526B0();
        *(_WORD *)(v81 + 12) = 2080;
        sub_239270C4C((uint64_t)v142);
        v83 = sub_2393524DC();
        v145 = v2;
        v149 = COERCE_DOUBLE(sub_23925F3EC(v83, v84, v150));
        sub_2393526B0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 22) = 2082;
        LOBYTE(v149) = *((_BYTE *)v146 + v74);
        v85 = sub_23935232C();
        v149 = COERCE_DOUBLE(sub_23925F3EC(v85, v86, v150));
        sub_2393526B0();

        v29 = v147;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v79, v80, "ObjectCaptureSession.%{private}s: Computed voxel size %s from scan extent: %{public}s.", (uint8_t *)v81, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v82, -1, -1);
        MEMORY[0x23B83BC04](v81, -1, -1);

        v71 = *(void (**)(char *, uint64_t))(v145 + 8);
        v71(v141, v29);
      }
      else
      {

        v71 = *(void (**)(char *, uint64_t))(v2 + 8);
        v71(v77, v29);
      }
      v87 = v139;
      v88 = objc_msgSend(v60, sel_sceneReconstructionOptions);
      v89 = (uint64_t)v142;
      objc_msgSend(v88, sel_setVoxelSize_, v142);

      v73 = (void (*)(char *, uint64_t, uint64_t))v144;
      ((void (*)(char *, char *, uint64_t))v144)(v87, v140, v29);
      v90 = sub_239352098();
      v91 = sub_239352578();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = swift_slowAlloc();
        v93 = swift_slowAlloc();
        v150[0] = v93;
        *(_DWORD *)v92 = 136380931;
        v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
        sub_2393526B0();
        *(_WORD *)(v92 + 12) = 2082;
        sub_239270C4C(v89);
        v94 = sub_2393524DC();
        v149 = COERCE_DOUBLE(sub_23925F3EC(v94, v95, v150));
        v29 = v147;
        v73 = (void (*)(char *, uint64_t, uint64_t))v144;
        sub_2393526B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v90, v91, "ObjectCaptureSession.%{private}s: Set ARKit scene reconstruction voxel size = %{public}s", (uint8_t *)v92, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v93, -1, -1);
        MEMORY[0x23B83BC04](v92, -1, -1);
      }

      v71(v87, v29);
      v72 = v143;
    }
    else
    {
      v63 = *(float *)&v62;
      v64 = sub_239275A60();
      v65 = v140;
      v144 = *(char **)(v2 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v144)(v140, v64, v29);
      v66 = sub_239352098();
      v67 = v2;
      v68 = sub_239352578();
      if (os_log_type_enabled(v66, v68))
      {
        v69 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        v150[0] = v70;
        *(_DWORD *)v69 = 136380931;
        v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
        sub_2393526B0();
        *(_WORD *)(v69 + 12) = 2050;
        v149 = v63;
        v29 = v147;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v66, v68, "ObjectCaptureSession.%{private}s: Using ARKit scene reconstruction voxel size %{public}f set by user default", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v70, -1, -1);
        MEMORY[0x23B83BC04](v69, -1, -1);
      }

      v71 = *(void (**)(char *, uint64_t))(v67 + 8);
      v71(v65, v29);
      v72 = v143;
      v73 = (void (*)(char *, uint64_t, uint64_t))v144;
    }
    objc_msgSend(v60, sel_setSceneReconstruction_, *MEMORY[0x24BDB1440]);
    v96 = sub_239275A60();
    v73(v72, v96, v29);
    v97 = sub_239352098();
    v98 = sub_239352578();
    if (os_log_type_enabled(v97, v98))
    {
      v99 = v72;
      v100 = (uint8_t *)swift_slowAlloc();
      v101 = v29;
      v102 = swift_slowAlloc();
      v150[0] = v102;
      *(_DWORD *)v100 = 136380675;
      v149 = COERCE_DOUBLE(sub_23925F3EC(0xD000000000000015, 0x8000000239360290, v150));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v97, v98, "ObjectCaptureSession.%{private}s: Enabled scene reconstruction with object capture preset", v100, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v102, -1, -1);
      MEMORY[0x23B83BC04](v100, -1, -1);

      v103 = v99;
      v104 = v101;
    }
    else
    {

      v103 = v72;
      v104 = v29;
    }
    v71(v103, v104);
    v1 = v146;
  }
  else
  {
    objc_msgSend(v60, sel_setPlaneDetection_, 1);
  }
  v105 = objc_msgSend(v60, sel_videoFormat);
  v106 = objc_msgSend(v105, sel_isRecommendedForHighResolutionFrameCapturing);

  if (!v106)
  {
    __break(1u);
    goto LABEL_64;
  }
  v107 = objc_msgSend(v60, sel_videoFormat);
  v108 = objc_msgSend(v107, sel_captureDevicePosition);

  if (v108 != (id)1)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v109 = objc_msgSend(v60, sel_videoFormat);
  v110 = objc_msgSend(v109, sel_captureDeviceType);

  v111 = sub_2393522F0();
  v113 = v112;
  if (v111 == sub_2393522F0() && v113 == v114)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_43;
  }
  v115 = sub_2393528CC();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v115 & 1) == 0)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_43:
  v116 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
  swift_beginAccess();
  if ((v116[8] & 1) == 0)
  {
LABEL_61:

    return;
  }
  v117 = objc_msgSend(v60, sel_videoFormat);
  v118 = objc_msgSend(v117, sel_framesPerSecond);

  if (v118 != (id)30)
    goto LABEL_66;
  v119 = objc_msgSend(v60, sel_videoFormat);
  objc_msgSend(v119, sel_imageResolution);
  v121 = v120;

  if ((~*(_QWORD *)&v121 & 0x7FF0000000000000) == 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v121 <= -1.0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v121 >= 4294967300.0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v121 != 1920)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v122 = objc_msgSend(v60, sel_videoFormat);
  objc_msgSend(v122, sel_imageResolution);
  v124 = v123;

  if ((~*(_QWORD *)&v124 & 0x7FF0000000000000) == 0)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v124 <= -1.0)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (v124 >= 4294967300.0)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v124 != 1440)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v125 = objc_msgSend(v60, sel_videoFormat);
  v126 = objc_msgSend(v125, sel_deviceFormat);

  LOBYTE(v125) = objc_msgSend(v126, sel_isVideoBinned);
  if ((v125 & 1) != 0)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v127 = objc_msgSend(v60, sel_videoFormat);
  v128 = objc_msgSend(v127, sel_deviceFormat);

  v129 = sub_23935262C();
  if (*(_QWORD *)(v129 + 16) < 2uLL)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v130 = *(_DWORD *)(v129 + 40);
  swift_bridgeObjectRelease();
  v131 = sub_2392DCCFC();
  if (v130 < 0 || v130 != *v131)
    goto LABEL_77;
  v132 = objc_msgSend(v60, sel_videoFormat);
  v133 = objc_msgSend(v132, sel_deviceFormat);

  v134 = sub_23935262C();
  if (*(_QWORD *)(v134 + 16) < 2uLL)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    return;
  }
  v135 = *(_DWORD *)(v134 + 44);
  swift_bridgeObjectRelease();
  v136 = *(_DWORD *)sub_2392DCD08();

  if (v135 < 0 || v135 != v136)
  {
    __break(1u);
    goto LABEL_61;
  }
}

char *sub_23930E664(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void *v39;
  uint64_t v40;
  id v41;
  char *v42;
  id v43;
  char *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *result;
  void *v52;
  id v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  void *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[2];
  uint64_t v97;
  unint64_t v98;
  uint64_t v99[3];
  id v100[8];

  v2 = v1;
  v93 = a1;
  v100[6] = *(id *)MEMORY[0x24BDAC8D0];
  v92 = sub_2393520B0();
  v94 = *(_QWORD *)(v92 - 8);
  v3 = MEMORY[0x24BDAC7A8](v92);
  v89 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v88 = (char *)&v86 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v91 = (char *)&v86 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v90 = (char *)&v86 - v9;
  v10 = sub_23925FB08(&qword_256927AD0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v86 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v86 - v17;
  v19 = sub_239351F3C();
  v20 = *(char **)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v86 - v24;
  v26 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL;
  swift_beginAccess();
  sub_23926059C(v26, (uint64_t)v18, &qword_256927AD0);
  v27 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v20 + 6);
  if (v27(v18, 1, v19) == 1)
  {
    sub_23925FE28((uint64_t)v18, &qword_256927AD0);
    v28 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL;
    swift_beginAccess();
    sub_23926059C(v28, (uint64_t)v16, &qword_256927AD0);
    if (v27(v16, 1, v19) == 1)
    {
      sub_23925FE28((uint64_t)v16, &qword_256927AD0);
      v29 = sub_239275A60();
      v30 = v94;
      v31 = v89;
      v32 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v89, v29, v92);
      v33 = sub_239352098();
      v34 = sub_239352578();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v99[0] = v36;
        *(_DWORD *)v35 = 136380675;
        v97 = sub_23925F3EC(0xD000000000000023, 0x8000000239360220, v99);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v33, v34, "ObjectCaptureSession.%{private}s: Using ARBaseConfiguration.", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v36, -1, -1);
        MEMORY[0x23B83BC04](v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
      v37 = v93;
      v38 = v93;
    }
    else
    {
      v63 = v23;
      (*((void (**)(char *, char *, uint64_t))v20 + 4))(v23, v16, v19);
      v64 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions;
      swift_beginAccess();
      v65 = v19;
      v66 = v92;
      if (*(_BYTE *)(v64 + 8) != 1)
        __break(1u);
      (*((void (**)(char *, char *, uint64_t))v20 + 2))(v13, v63, v65);
      (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v20 + 7))(v13, 0, 1, v65);
      v67 = v27(v13, 1, v65);
      v68 = v93;
      v87 = v65;
      if (v67 == 1)
      {
        v69 = 0;
      }
      else
      {
        v69 = (void *)sub_239351ED0();
        (*((void (**)(char *, uint64_t))v20 + 1))(v13, v65);
      }
      v78 = v94;
      v37 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1530]), sel_initWithBaseConfiguration_fileURL_, v68, v69);

      v79 = (_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps);
      swift_beginAccess();
      *v79 = MEMORY[0x24BEE4B08];
      swift_bridgeObjectRelease();
      objc_msgSend(objc_msgSend(v37, sel_recordingTechnique), sel_setExpectCustomData_, 1);
      swift_unknownObjectRelease();
      objc_msgSend(v37, sel_startRecording);
      v80 = sub_239275A60();
      v81 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v88, v80, v66);
      v82 = sub_239352098();
      v83 = sub_239352578();
      if (os_log_type_enabled(v82, v83))
      {
        v84 = (uint8_t *)swift_slowAlloc();
        v85 = swift_slowAlloc();
        v96[0] = v85;
        v93 = v63;
        *(_DWORD *)v84 = 136380675;
        v95 = sub_23925F3EC(0xD000000000000023, 0x8000000239360220, v96);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v82, v83, "ObjectCaptureSession.%{private}s: Using ARRecordingConfiguration.", v84, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v85, -1, -1);
        MEMORY[0x23B83BC04](v84, -1, -1);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v81, v66);
        (*((void (**)(char *, uint64_t))v20 + 1))(v93, v87);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v66);
        (*((void (**)(char *, uint64_t))v20 + 1))(v63, v87);
      }
    }
    return v37;
  }
  v89 = v20;
  (*((void (**)(char *, char *, uint64_t))v20 + 4))(v25, v18, v19);
  v39 = (void *)sub_239351ED0();
  v100[0] = 0;
  v40 = ARReplaySensorClassForMovieURL();

  v41 = v100[0];
  v42 = v25;
  if (!v40)
  {
    v70 = v100[0];
    v47 = v94;
    goto LABEL_15;
  }
  swift_getObjCClassMetadata();
  v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v44 = (char *)v41;
  v45 = (void *)sub_239351ED0();
  v46 = objc_msgSend(v43, sel_initWithSequenceURL_replayMode_, v45, 0);

  v47 = v94;
  if (!v46)
  {
LABEL_15:
    v71 = sub_239275A60();
    v73 = v91;
    v72 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v91, v71, v92);
    v74 = sub_239352098();
    v75 = sub_23935256C();
    if (os_log_type_enabled(v74, v75))
    {
      v87 = v19;
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = (void *)swift_slowAlloc();
      v100[0] = v77;
      *(_DWORD *)v76 = 136380675;
      v99[0] = sub_23925F3EC(0xD000000000000023, 0x8000000239360220, (uint64_t *)v100);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v74, v75, "ObjectCaptureSession.%{private}s: Failed to create replay sensor!", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v77, -1, -1);
      MEMORY[0x23B83BC04](v76, -1, -1);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v73, v72);
      (*((void (**)(char *, uint64_t))v89 + 1))(v42, v87);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v47 + 8))(v73, v72);
      (*((void (**)(char *, uint64_t))v89 + 1))(v42, v19);
    }

    return 0;
  }
  v91 = v44;
  objc_msgSend(v46, sel_setReplaySensorDelegate_, v2);
  sub_2392759EC(0, &qword_25692B648);
  sub_23925FB08(&qword_25692B650);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_239354060;
  v49 = type metadata accessor for ObjectCaptureFrameEvent();
  *(_QWORD *)(v48 + 56) = sub_23925FB08(&qword_25692B658);
  *(_QWORD *)(v48 + 32) = v49;
  v50 = (void *)MEMORY[0x23B83A4DC](v48);
  v100[0] = 0;
  result = (char *)sub_239352500();
  if (v100[0])
  {

    v52 = (void *)sub_2393524F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v46, sel_setCustomDataClasses_, v52);

    v53 = objc_allocWithZone(MEMORY[0x24BDB1548]);
    v93 = (char *)objc_msgSend(v53, sel_initWithBaseConfiguration_replaySensor_, v93, v46);
    v54 = (_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps);
    swift_beginAccess();
    *v54 = MEMORY[0x24BEE4B08];
    swift_bridgeObjectRelease();
    v99[0] = sub_239351F30();
    v99[1] = v55;
    sub_239351E70();
    v97 = 46;
    v98 = 0xE100000000000000;
    sub_239352380();
    swift_bridgeObjectRelease();
    v96[0] = 0xD000000000000012;
    v96[1] = 0x8000000239360250;
    sub_2392753CC();
    sub_2393526E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23930F300();
    swift_bridgeObjectRelease();
    v56 = sub_239275A60();
    v57 = v90;
    v58 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v90, v56, v92);
    v59 = sub_239352098();
    v60 = sub_239352578();
    if (os_log_type_enabled(v59, v60))
    {
      v87 = v19;
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      v99[0] = v62;
      *(_DWORD *)v61 = 136380675;
      v97 = sub_23925F3EC(0xD000000000000023, 0x8000000239360220, v99);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v59, v60, "ObjectCaptureSession.%{private}s: Using ARReplayConfiguration.", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v62, -1, -1);
      MEMORY[0x23B83BC04](v61, -1, -1);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v90, v58);
      (*((void (**)(char *, uint64_t))v89 + 1))(v42, v87);
    }
    else
    {
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v57, v58);
      (*((void (**)(char *, uint64_t))v89 + 1))(v42, v19);
    }

    return v93;
  }
  __break(1u);
  return result;
}

void sub_23930F300()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  double v13;
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;
  double v17[2];
  uint64_t v18;

  v0 = sub_2393520B0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_239352320();
  MEMORY[0x24BDAC7A8](v1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = (void *)sub_2393522CC();
  v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  if (v4)
  {
    sub_239352314();
    v15 = sub_2393522C0();
    v16 = v5;
    *(_QWORD *)&v17[0] = 10;
    v17[1] = -1.7573882e159;
    sub_2392753CC();
    v6 = sub_2393526C8();
    v7 = swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v6 + 16);
    if (v8)
    {
      v14[3] = v6;
      v9 = (uint64_t *)(v6 + 40);
      do
      {
        v11 = *(v9 - 1);
        v10 = *v9;
        v17[0] = 0.0;
        MEMORY[0x24BDAC7A8](v7);
        v14[-2] = v17;
        if ((v10 & 0x1000000000000000) == 0)
        {
          if ((v10 & 0x2000000000000000) != 0)
          {
            v15 = v11;
            v16 = v10 & 0xFFFFFFFFFFFFFFLL;
            switch((char)v11)
            {
              case 0:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
LABEL_12:
                swift_bridgeObjectRetain();
                goto LABEL_13;
              default:
                swift_bridgeObjectRetain();
                v12 = (_BYTE *)_swift_stdlib_strtod_clocale();
                if (v12)
LABEL_17:
                  LOBYTE(v18) = *v12 == 0;
                else
LABEL_13:
                  LOBYTE(v18) = 0;
                break;
            }
            goto LABEL_14;
          }
          if ((v11 & 0x1000000000000000) != 0)
          {
            switch(*(_BYTE *)(v10 + 32))
            {
              case 0:
              case 9:
              case 0xA:
              case 0xB:
              case 0xC:
              case 0xD:
              case 0x20:
                goto LABEL_12;
              default:
                swift_bridgeObjectRetain();
                v12 = (_BYTE *)_swift_stdlib_strtod_clocale();
                if (!v12)
                  goto LABEL_13;
                goto LABEL_17;
            }
          }
        }
        swift_bridgeObjectRetain();
        sub_2393527B8();
LABEL_14:
        v7 = swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
        {
          v13 = v17[0];
          swift_beginAccess();
          sub_23932F640(v17, v13);
          v7 = swift_endAccess();
        }
        v9 += 2;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_23930F908(int a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t aBlock[6];
  uint64_t v33;

  v2 = v1;
  LODWORD(v3) = a1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v31 = v2;
    v12 = v11;
    v13 = swift_slowAlloc();
    v30 = v3;
    v3 = v13;
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136380931;
    v33 = sub_23925F3EC(0xD000000000000025, 0x80000002393601F0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v12 + 12) = 2081;
    v33 = sub_23925F3EC(0xD000000000000025, 0x80000002393601F0, aBlock);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: Called %{private}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    v14 = v3;
    LOBYTE(v3) = v30;
    MEMORY[0x23B83BC04](v14, -1, -1);
    v15 = v12;
    v2 = v31;
    MEMORY[0x23B83BC04](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_239350DF0();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  v16 = *(void **)&v2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  v17 = objc_msgSend(v16, sel_configuration);
  if (v17)
  {
    v18 = v17;
    objc_opt_self();
    v19 = swift_dynamicCastObjCClass();

    if (v19)
      goto LABEL_7;
  }
  v20 = objc_msgSend(v16, sel_configuration);
  if (v20 && (v21 = v20, objc_opt_self(), v22 = swift_dynamicCastObjCClass(), v21, v22))
  {
LABEL_7:
    ObjectCaptureSession.takeStillImageDuringRecordOrReplay(isAutoCapture:)(v3 & 1);
  }
  else
  {
    v23 = swift_allocObject();
    *(_BYTE *)(v23 + 16) = v3 & 1;
    *(_QWORD *)(v23 + 24) = v2;
    v24 = v2;
    v25 = (id)OCNonModularSPI_CapturePhotoSettings();
    v26 = &v24[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions];
    swift_beginAccess();
    if ((v26[8] & 1) == 0)
    {
      v27 = *(_QWORD *)v26;
      if (v25)
        objc_msgSend(v25, sel_setHighResolutionPhotoEnabled_, 0);
      objc_msgSend(v25, sel_setMaxPhotoDimensions_, v27);
    }
    aBlock[4] = (uint64_t)sub_239341C30;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2392610E0;
    aBlock[3] = (uint64_t)&unk_250AC8520;
    v28 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_captureHighResolutionFrameWithPhotoSettings_completion_, v25, v28);
    _Block_release(v28);
    swift_release();

  }
}

Swift::Void __swiftcall ObjectCaptureSession.takeStillImageDuringRecordOrReplay(isAutoCapture:)(Swift::Bool isAutoCapture)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_currentFrame));
  if (v7)
  {
    v14 = v7;
    sub_23931029C(v7, isAutoCapture);

  }
  else
  {
    v8 = sub_239275B30();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
    v9 = sub_239352098();
    v10 = sub_23935256C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 136380675;
      v15 = sub_23925F3EC(0xD000000000000032, 0x800000023935E680, &v16);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: arsession current frame is nil!", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v12, -1, -1);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_23930FEBC(void *a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  if (a1)
  {
    v37 = a1;
    sub_23931029C(v37, a3 & 1);

  }
  else
  {
    v13 = sub_239275A60();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v14(v12, v13, v6);
    v15 = sub_239352098();
    v16 = sub_23935256C();
    if (os_log_type_enabled(v15, v16))
    {
      v36 = v14;
      v17 = swift_slowAlloc();
      v35 = v13;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v37 = v10;
      v20 = v19;
      v39 = v19;
      *(_DWORD *)v18 = 136380675;
      v38 = sub_23925F3EC(0xD000000000000025, 0x80000002393601F0, &v39);
      v14 = v36;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: Failed to capture high resolution frame!", v18, 0xCu);
      swift_arrayDestroy();
      v21 = v20;
      v10 = v37;
      MEMORY[0x23B83BC04](v21, -1, -1);
      v22 = v18;
      v13 = v35;
      MEMORY[0x23B83BC04](v22, -1, -1);
    }

    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v12, v6);
    if (a2)
    {
      v14(v10, v13, v6);
      v24 = a2;
      v25 = a2;
      v26 = a2;
      v27 = sub_239352098();
      v28 = sub_23935256C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v39 = v30;
        *(_DWORD *)v29 = 136380931;
        v38 = sub_23925F3EC(0xD000000000000025, 0x80000002393601F0, &v39);
        v37 = v10;
        sub_2393526B0();
        *(_WORD *)(v29 + 12) = 2082;
        swift_getErrorValue();
        v31 = sub_23935292C();
        v38 = sub_23925F3EC(v31, v32, &v39);
        sub_2393526B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23925B000, v27, v28, "ObjectCaptureSession.%{private}s: Error: %{public}s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v30, -1, -1);
        MEMORY[0x23B83BC04](v29, -1, -1);

        v33 = v37;
      }
      else
      {

        v33 = v10;
      }
      v23(v33, v6);
    }
  }
}

uint64_t sub_23931029C(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint8_t *v52;
  void (*v53)(char *, uint64_t);
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void (*v60)(char *, uint64_t, uint64_t);
  void *v61;
  id v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  char *v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  _BOOL4 v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  char **v81;
  id v82;
  void *v83;
  id v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint8_t *v89;
  id v90;
  int v91;
  uint64_t v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  int v104;
  uint64_t v105;
  char *v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  uint64_t v111;
  const char *v112;
  double v113;
  double v114;
  uint64_t v115;
  char *v116;
  NSObject *v117;
  os_log_type_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t result;
  uint64_t v123;
  id v124;
  __CVBuffer *v125;
  id v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  id v130;
  void *v131;
  id v132;
  char v133;
  int *v134;
  id v135;
  float32x4_t v136;
  float32x4_t v137;
  float32x4_t v138;
  void *v139;
  id v140;
  void *v141;
  uint64_t v142;
  id v143;
  void *v144;
  uint64_t v145;
  id v146;
  float32x4_t v147;
  float32x4_t v148;
  float32x4_t v149;
  unsigned int v150;
  unsigned int *v151;
  unint64_t v152;
  unsigned int v153;
  id v154;
  id v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  id v160;
  uint64_t v161;
  simd_float4x4 *v162;
  int8x16_t v163;
  int8x16_t v164;
  int8x16_t v165;
  int8x16_t v166;
  id v167;
  id v168;
  float32x4_t v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  int8x16_t v173;
  int8x16_t v174;
  int8x16_t v175;
  uint64_t v176;
  id v177;
  id v178;
  void *v179;
  uint64_t v180;
  id v181;
  void *v182;
  uint64_t v183;
  __CVBuffer *v184;
  uint64_t PixelFormatType;
  uint64_t v186;
  id v187;
  uint64_t v188;
  unsigned int *v189;
  uint64_t v190;
  const __CFString *v191;
  id v192;
  id v193;
  void *v194;
  id v195;
  void *v196;
  const __CFString *v197;
  void *v198;
  id v199;
  const __CFString *v200;
  void *v201;
  id v202;
  void *v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  uint64_t v210;
  id v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  NSObject *v219;
  os_log_type_t v220;
  uint8_t *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int8x16_t v228;
  int8x16_t v229;
  int8x16_t v230;
  int8x16_t v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  __int128 v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  float32x4_t v254;
  uint64_t v255;
  float32x4_t v256;
  float32x4_t v257;
  void (*v258)(char *, uint64_t, uint64_t);
  id v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  _OWORD v270[2];
  char v271;
  _OWORD v272[3];

  v259 = a1;
  v244 = sub_239352020();
  v243 = *(_QWORD *)(v244 - 8);
  MEMORY[0x24BDAC7A8](v244);
  v242 = (char *)&v226 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x24BDAC7A8](v4);
  v241 = (uint64_t)&v226 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v246 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v6 = MEMORY[0x24BDAC7A8](v246);
  v239 = (uint64_t)&v226 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v250 = (char *)&v226 - v8;
  v257.i64[0] = sub_239352674();
  v9 = *(_QWORD *)(v257.i64[0] - 8);
  v10 = MEMORY[0x24BDAC7A8](v257.i64[0]);
  v247 = (char *)&v226 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v249 = (char *)&v226 - v12;
  v13 = sub_239352680();
  MEMORY[0x24BDAC7A8](v13);
  v254.i64[0] = (uint64_t)&v226 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2393520B0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v236 = (char *)&v226 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v245 = (char *)&v226 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v248 = (char *)&v226 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v235 = (char *)&v226 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v237 = (char *)&v226 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)&v234 = (char *)&v226 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v238 = (char *)&v226 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v251 = (char *)&v226 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v226 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v226 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v226 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v226 - v42;
  v44 = sub_239275A60();
  v252 = v16;
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v255 = v15;
  v240 = a2;
  v258 = v45;
  if ((a2 & 1) != 0)
  {
    v45(v43, v44, v15);
    v46 = sub_239352098();
    v47 = sub_239352578();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = v9;
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v261 = v50;
      *(_DWORD *)v49 = 136380675;
      *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v46, v47, "ObjectCaptureSession.%{private}s: Received callback for high-res image capture request initiated by automatic capture.", v49, 0xCu);
      swift_arrayDestroy();
      v51 = v50;
      v15 = v255;
      MEMORY[0x23B83BC04](v51, -1, -1);
      v52 = v49;
      v9 = v48;
      MEMORY[0x23B83BC04](v52, -1, -1);
    }

    v53 = *(void (**)(char *, uint64_t))(v252 + 8);
    v53(v43, v15);
  }
  else
  {
    v45(v41, v44, v15);
    v54 = sub_239352098();
    v55 = sub_239352578();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v261 = v57;
      *(_DWORD *)v56 = 136380675;
      *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v54, v55, "ObjectCaptureSession.%{private}s: self.takeStillImageCapturecapture request initiated by manual capture.", v56, 0xCu);
      swift_arrayDestroy();
      v58 = v57;
      v15 = v255;
      MEMORY[0x23B83BC04](v58, -1, -1);
      MEMORY[0x23B83BC04](v56, -1, -1);
    }

    v53 = *(void (**)(char *, uint64_t))(v252 + 8);
    v53(v41, v15);
  }
  v59 = objc_msgSend(v259, sel_sceneDepth);
  v60 = v258;
  v256.i64[0] = (uint64_t)v53;
  if (v59
    && (v61 = v59, v62 = objc_msgSend(v59, sel_depthMap), v61, v62))
  {

  }
  else
  {
    v63 = sub_239275A60();
    v60(v38, v63, v15);
    v64 = sub_239352098();
    v65 = sub_23935256C();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v261 = v67;
      *(_DWORD *)v66 = 136380675;
      *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
      v53 = (void (*)(char *, uint64_t))v256.i64[0];
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v64, v65, "ObjectCaptureSession.%{private}s: No depth map is available in high-resolution ARFrame!", v66, 0xCu);
      swift_arrayDestroy();
      v68 = v67;
      v15 = v255;
      MEMORY[0x23B83BC04](v68, -1, -1);
      MEMORY[0x23B83BC04](v66, -1, -1);
    }

    v53(v38, v15);
    v60 = v258;
  }
  v69 = objc_msgSend(v259, sel_sceneDepth);
  v70 = v254.i64[0];
  if (v69
    && (v71 = v69, v72 = objc_msgSend(v69, sel_confidenceMap),
                   v71,
                   v72))
  {

    v73 = v251;
  }
  else
  {
    v74 = sub_239275A60();
    v60(v35, v74, v15);
    v75 = sub_239352098();
    v76 = sub_23935256C();
    v77 = os_log_type_enabled(v75, v76);
    v73 = v251;
    if (v77)
    {
      v78 = (uint8_t *)swift_slowAlloc();
      v79 = swift_slowAlloc();
      v261 = v79;
      *(_DWORD *)v78 = 136380675;
      *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
      v70 = v254.i64[0];
      v53 = (void (*)(char *, uint64_t))v256.i64[0];
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v75, v76, "ObjectCaptureSession.%{private}s: No confidence map is available in high-resolution ARFrame!", v78, 0xCu);
      swift_arrayDestroy();
      v80 = v79;
      v15 = v255;
      MEMORY[0x23B83BC04](v80, -1, -1);
      MEMORY[0x23B83BC04](v78, -1, -1);
    }

    v53(v35, v15);
    v60 = v258;
  }
  v81 = &off_250AD4000;
  v82 = objc_msgSend(v259, sel_capturedPointCloudData);
  if (v82
    && (v83 = v82,
        v84 = objc_msgSend(v82, sel_depthPointCloud),
        v83,
        v84))
  {

  }
  else
  {
    v85 = sub_239275A60();
    v60(v73, v85, v15);
    v86 = sub_239352098();
    v87 = sub_23935256C();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v88 = 0;
      _os_log_impl(&dword_23925B000, v86, v87, "No point cloud data is available in high-resolution ARFrame!", v88, 2u);
      v89 = v88;
      v15 = v255;
      MEMORY[0x23B83BC04](v89, -1, -1);
    }

    v53(v73, v15);
  }
  v90 = objc_msgSend(v259, sel_camera);
  sub_23935268C();

  v91 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v70, 2, v257.i64[0]);
  if (!v91)
  {
    v101 = v249;
    v102 = v257.i64[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v249, v70, v257.i64[0]);
    v103 = v247;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v247, v101, v102);
    v104 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v103, v102);
    if (v104 == *MEMORY[0x24BEDF330])
    {
      v105 = sub_239275A60();
      v106 = v238;
      v60(v238, v105, v15);
      v107 = sub_239352098();
      v108 = sub_23935256C();
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc();
        v110 = v15;
        v111 = swift_slowAlloc();
        v261 = v111;
        *(_DWORD *)v109 = 136380675;
        *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
        sub_2393526B0();
        v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: initializing!";
LABEL_73:
        _os_log_impl(&dword_23925B000, v107, v108, v112, v109, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v111, -1, -1);
        MEMORY[0x23B83BC04](v109, -1, -1);

        v224 = v106;
        v225 = v110;
LABEL_75:
        ((void (*)(char *, uint64_t))v256.i64[0])(v224, v225);
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v101, v257.i64[0]);
      }
    }
    else if (v104 == *MEMORY[0x24BEDF340])
    {
      v123 = sub_239275A60();
      v106 = v237;
      v60(v237, v123, v15);
      v107 = sub_239352098();
      v108 = sub_23935256C();
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc();
        v110 = v15;
        v111 = swift_slowAlloc();
        v261 = v111;
        *(_DWORD *)v109 = 136380675;
        *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
        sub_2393526B0();
        v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: excessive motion!";
        goto LABEL_73;
      }
    }
    else if (v104 == *MEMORY[0x24BEDF348])
    {
      v216 = sub_239275A60();
      v106 = v235;
      v60(v235, v216, v15);
      v107 = sub_239352098();
      v108 = sub_23935256C();
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc();
        v110 = v15;
        v111 = swift_slowAlloc();
        v261 = v111;
        *(_DWORD *)v109 = 136380675;
        *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
        sub_2393526B0();
        v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: insufficient features!";
        goto LABEL_73;
      }
    }
    else
    {
      if (v104 != *MEMORY[0x24BEDF338])
        goto LABEL_78;
      v223 = sub_239275A60();
      v106 = (char *)v234;
      v60((char *)v234, v223, v15);
      v107 = sub_239352098();
      v108 = sub_23935256C();
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc();
        v110 = v15;
        v111 = swift_slowAlloc();
        v261 = v111;
        *(_DWORD *)v109 = 136380675;
        *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
        sub_2393526B0();
        v112 = "ObjectCaptureSession.%{private}s: Camera tracking is limited: relocalizing!";
        goto LABEL_73;
      }
    }

    v224 = v106;
    v225 = v15;
    goto LABEL_75;
  }
  if (v91 != 1)
  {
    objc_msgSend(v259, sel_timestamp);
    if ((*(_BYTE *)(v253 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8) & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v114 = v113 - *(double *)(v253 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp);
      v115 = sub_239275A60();
      v116 = v245;
      v227 = v115;
      ((void (*)(char *))v60)(v245);
      v117 = sub_239352098();
      v118 = sub_239352578();
      if (os_log_type_enabled(v117, v118))
      {
        v119 = swift_slowAlloc();
        v120 = swift_slowAlloc();
        v261 = v120;
        *(_DWORD *)v119 = 136380931;
        *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
        sub_2393526B0();
        *(_WORD *)(v119 + 12) = 2050;
        *(double *)v272 = v114;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v117, v118, "ObjectCaptureSession.%{private}s: High-resolution pixel buffer %{public}f is retained.", (uint8_t *)v119, 0x16u);
        swift_arrayDestroy();
        v121 = v120;
        v81 = &off_250AD4000;
        MEMORY[0x23B83BC04](v121, -1, -1);
        MEMORY[0x23B83BC04](v119, -1, -1);
      }

      ((void (*)(char *, uint64_t))v256.i64[0])(v116, v15);
      v124 = v259;
      v125 = (__CVBuffer *)objc_msgSend(v259, sel_capturedImage);
      v126 = objc_msgSend(v124, sel_camera);
      objc_msgSend(v126, sel_intrinsics);
      v272[0] = v127;
      v272[1] = v128;
      v272[2] = v129;

      sub_2392F2D50(v125, (uint64_t)v272);
      v130 = objc_msgSend(v124, v81[371]);
      if (v130
        && (v131 = v130,
            v132 = objc_msgSend(v130, sel_depthPointCloud),
            v131,
            v132))
      {
        v133 = sub_23929D47C();
        sub_2392E0E14(v132, v133 & 1, (uint64_t)&v261);

        v9 = v261;
        v251 = v262;
        v249 = v263;
        v248 = v264;
        v247 = v265;
        v245 = v266;
        v238 = v267;
        v237 = v268;
        v235 = v269;
      }
      else
      {
        v9 = 0;
        v251 = 0;
        v249 = 0;
        v248 = 0;
        v247 = 0;
        v245 = 0;
        v238 = 0;
        v237 = 0;
        v235 = 0;
      }
      v134 = (int *)v246;
      v135 = objc_msgSend(v259, sel_camera);
      objc_msgSend(v135, sel_intrinsics);
      v257 = v136;
      v256 = v137;
      v254 = v138;

      v139 = *(void **)(v253 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
      v140 = objc_msgSend(v139, sel_configuration);
      if (v140)
      {
        v141 = v140;
        objc_opt_self();
        v142 = swift_dynamicCastObjCClass();

        if (v142)
          goto LABEL_49;
      }
      v143 = objc_msgSend(v139, sel_configuration);
      if (v143)
      {
        v144 = v143;
        objc_opt_self();
        v145 = swift_dynamicCastObjCClass();

        if (v145)
        {
LABEL_49:
          v146 = objc_msgSend(v259, sel_camera);
          objc_msgSend(v146, sel_intrinsics);
          v257 = v147;
          v256 = v148;
          v254 = v149;

          v150 = *(_DWORD *)sub_2392DCCFC();
          v151 = (unsigned int *)sub_2392DCD08();
          LODWORD(v152) = 0;
          *(float *)&v153 = (float)v150 / 1920.0;
          *((float *)&v152 + 1) = (float)*v151 / 1440.0;
          v257 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v153, v257.f32[0]), (float32x4_t)v152, *(float32x2_t *)v257.f32, 1), (float32x4_t)xmmword_239356720, v257, 2);
          v256 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v153, v256.f32[0]), (float32x4_t)v152, *(float32x2_t *)v256.f32, 1), (float32x4_t)xmmword_239356720, v256, 2);
          v254 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v153, v254.f32[0]), (float32x4_t)v152, *(float32x2_t *)v254.f32, 1), (float32x4_t)xmmword_239356720, v254, 2);
        }
      }
      v154 = v259;
      v155 = objc_msgSend(v259, sel_camera);
      objc_msgSend(v155, sel_transform);
      v246 = v156;
      v234 = v157;
      v233 = v158;
      v232 = v159;

      v160 = objc_msgSend(v154, sel_camera);
      v161 = (uint64_t)v250;
      sub_23935268C();

      wideToDepthCameraTransform()(v162);
      v228 = v163;
      v229 = v164;
      v230 = v165;
      v231 = v166;
      v167 = objc_msgSend(v154, sel_camera);
      v168 = objc_msgSend(v167, sel_calibrationData);

      v169 = v256;
      *(float32x4_t *)v161 = v257;
      *(float32x4_t *)(v161 + 16) = v169;
      v170 = v246;
      *(float32x4_t *)(v161 + 32) = v254;
      *(_OWORD *)(v161 + 48) = v170;
      v171 = v233;
      *(_OWORD *)(v161 + 64) = v234;
      *(_OWORD *)(v161 + 80) = v171;
      *(_OWORD *)(v161 + 96) = v232;
      v172 = v161 + v134[7];
      v173 = v228;
      *(_QWORD *)v172 = v228.i64[0];
      v174 = v229;
      *(int8x16_t *)(v172 + 8) = vextq_s8(v173, v229, 8uLL);
      v175 = v230;
      *(int8x16_t *)(v172 + 24) = vextq_s8(v174, v230, 8uLL);
      v174.i64[1] = v231.i64[1];
      *(int8x16_t *)(v172 + 40) = vextq_s8(v175, v231, 8uLL);
      *(_QWORD *)(v172 + 56) = v174.i64[1];
      *(_BYTE *)(v172 + 64) = 0;
      *(_QWORD *)(v161 + v134[8]) = v168;
      v176 = v161 + v134[9];
      *(_OWORD *)(v176 + 32) = 0u;
      *(_OWORD *)(v176 + 48) = 0u;
      *(_OWORD *)v176 = 0u;
      *(_OWORD *)(v176 + 16) = 0u;
      *(_BYTE *)(v176 + 64) = 1;
      v177 = objc_msgSend(v154, sel_capturedImage);
      v178 = objc_msgSend(v139, sel_configuration);
      if (!v178 || (v179 = v178, objc_opt_self(), v180 = swift_dynamicCastObjCClass(), v179, !v180))
      {
        v181 = objc_msgSend(v139, sel_configuration);
        if (!v181)
          goto LABEL_57;
        v182 = v181;
        objc_opt_self();
        v183 = swift_dynamicCastObjCClass();

        if (!v183)
          goto LABEL_57;
      }
      v184 = (__CVBuffer *)objc_msgSend(v259, sel_capturedImage);
      PixelFormatType = CVPixelBufferGetPixelFormatType(v184);

      v186 = *(_QWORD *)(v253 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler);
      if (v186)
      {
        swift_retain();
        v187 = objc_msgSend(v259, sel_capturedImage);
        memset(v270, 0, sizeof(v270));
        v271 = 1;
        v188 = *(unsigned int *)sub_2392DCCFC();
        v189 = (unsigned int *)sub_2392DCD08();
        v190 = (*(uint64_t (**)(id, _OWORD *, uint64_t, _QWORD, uint64_t))(*(_QWORD *)v186 + 184))(v187, v270, v188, *v189, PixelFormatType);
        swift_release();

        if (!v190)
        {
          sub_2392A0118(v9);
          v217 = v236;
          v218 = v255;
          v258(v236, v227, v255);
          v219 = sub_239352098();
          v220 = sub_23935256C();
          if (os_log_type_enabled(v219, v220))
          {
            v221 = (uint8_t *)swift_slowAlloc();
            v222 = swift_slowAlloc();
            v261 = v222;
            *(_DWORD *)v221 = 136380675;
            v260 = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v219, v220, "ObjectCaptureSession.%{private}s: failed to crop and scale image!", v221, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v222, -1, -1);
            MEMORY[0x23B83BC04](v221, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v252 + 8))(v217, v218);
          v215 = (uint64_t)v250;
          return sub_2392688AC(v215, type metadata accessor for ObjectCaptureSession.Frame.Camera);
        }

        v177 = (id)v190;
LABEL_57:
        v191 = (const __CFString *)*MEMORY[0x24BDD9470];
        v192 = v259;
        v193 = objc_msgSend(v259, sel_exifData);
        sub_239352284();

        v194 = (void *)sub_239352260();
        swift_bridgeObjectRelease();
        CVBufferSetAttachment((CVBufferRef)v177, v191, v194, kCVAttachmentMode_ShouldPropagate);

        v195 = objc_msgSend(v192, sel_tiffData);
        if (v195)
        {
          v196 = v195;
          sub_239352284();

          v197 = (const __CFString *)*MEMORY[0x24BDD96E8];
          v198 = (void *)sub_239352260();
          swift_bridgeObjectRelease();
          CVBufferSetAttachment((CVBufferRef)v177, v197, v198, kCVAttachmentMode_ShouldPropagate);

        }
        v199 = v259;
        sub_239335E68((uint64_t)objc_msgSend(v259, sel_deviceOrientation));
        v200 = (const __CFString *)*MEMORY[0x24BDD9698];
        v201 = (void *)sub_2393529BC();
        CVBufferSetAttachment((CVBufferRef)v177, v200, v201, kCVAttachmentMode_ShouldPropagate);

        v202 = objc_msgSend(v199, sel_sceneDepth);
        if (v202)
        {
          v203 = v202;
          v204 = objc_msgSend(v202, sel_depthMap);

        }
        else
        {
          v204 = 0;
        }
        v205 = v259;
        v206 = objc_msgSend(v259, sel_sceneDepth);
        v207 = objc_msgSend(v206, sel_confidenceMap);

        v261 = v9;
        v262 = v251;
        v263 = v249;
        v264 = v248;
        v265 = v247;
        v266 = v245;
        v267 = v238;
        v268 = v237;
        v269 = v235;
        v208 = objc_msgSend(v205, sel_capturedPointCloudData);
        v209 = objc_msgSend(v208, sel_depthPointCloud);

        v210 = v239;
        sub_239268820(v161, v239, type metadata accessor for ObjectCaptureSession.Frame.Camera);
        v211 = objc_msgSend(v205, sel_rawFeaturePoints);
        v212 = v177;
        v213 = v241;
        sub_239346994((uint64_t)v212, (uint64_t)v204, (uint64_t)v207, (uint64_t)&v261, (uint64_t)v209, v210, (uint64_t)v211, v240 & 1, v241, v114);
        v214 = (uint64_t)v242;
        sub_239352014();
        sub_2392FEE58(v213, v214);

        (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v214, v244);
        sub_2392688AC(v213, type metadata accessor for OCCaptureData);
        v215 = v161;
        return sub_2392688AC(v215, type metadata accessor for ObjectCaptureSession.Frame.Camera);
      }
    }
    sub_2392A0118(v9);
    __break(1u);
LABEL_78:
    result = sub_239352848();
    __break(1u);
    return result;
  }
  v92 = sub_239275A60();
  v93 = v248;
  v60(v248, v92, v15);
  v94 = sub_239352098();
  v95 = sub_23935256C();
  if (os_log_type_enabled(v94, v95))
  {
    v96 = (uint8_t *)swift_slowAlloc();
    v97 = v15;
    v98 = swift_slowAlloc();
    v261 = v98;
    *(_DWORD *)v96 = 136380675;
    *(_QWORD *)&v272[0] = sub_23925F3EC(0xD000000000000030, 0x8000000239360880, &v261);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v94, v95, "ObjectCaptureSession.%{private}s: Camera tracking is not available!", v96, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v98, -1, -1);
    MEMORY[0x23B83BC04](v96, -1, -1);

    v99 = v93;
    v100 = v97;
  }
  else
  {

    v99 = v93;
    v100 = v15;
  }
  return ((uint64_t (*)(char *, uint64_t))v256.i64[0])(v99, v100);
}

uint64_t sub_23931207C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  uint64_t result;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v1 = v0;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v48 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v48 - v10;
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed) & 1) != 0)
  {
    v12 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v12, v2);
    v13 = sub_239352098();
    v14 = sub_23935256C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v53 = v16;
      *(_DWORD *)v15 = 136380675;
      v52 = sub_23925F3EC(0x2870556E61656C63, 0xE900000000000029, &v53);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v13, v14, "ObjectCaptureSession.%{private}s: Resources have already been cleaned up!", v15, 0xCu);
      v17 = 1;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v16, -1, -1);
      MEMORY[0x23B83BC04](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return v17;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 1;
  }
  *((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed) = 1;
  v18 = sub_239275A60();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v19(v11, v18, v2);
  v20 = sub_239352098();
  v21 = sub_239352578();
  if (os_log_type_enabled(v20, v21))
  {
    v50 = v19;
    v22 = swift_slowAlloc();
    v49 = v18;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v53 = v24;
    v51 = v9;
    *(_DWORD *)v23 = 136380675;
    v52 = sub_23925F3EC(0x2870556E61656C63, 0xE900000000000029, &v53);
    v19 = v50;
    v9 = v51;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v20, v21, "ObjectCaptureSession.%{private}s: Starting resource clean up.", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v24, -1, -1);
    v25 = v23;
    v18 = v49;
    MEMORY[0x23B83BC04](v25, -1, -1);
  }

  v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v11, v2);
  result = (uint64_t)objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_pause);
  v28 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler);
  if (v28)
  {
    v29 = *(void (**)(uint64_t))(*(_QWORD *)v28 + 168);
    v30 = swift_retain();
    v29(v30);
    v31 = swift_release();
    v32 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager);
    if (v32)
    {
      v33 = *(void (**)(uint64_t))(*(_QWORD *)v32 + 120);
      v34 = swift_retain();
      v33(v34);
      v31 = swift_release();
    }
    if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v1) + 0x4B8))(v31) & 1) == 0)
    {
      v35 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager);
      if (v35)
      {
        v36 = *(void (**)(uint64_t))(*(_QWORD *)v35 + 280);
        v37 = swift_retain();
        v36(v37);
        swift_release();
      }
      sub_2393094F8();
    }
    v38 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
    if (v38)
    {
      v39 = *(void (**)(uint64_t))(*(_QWORD *)v38 + 160);
      v40 = swift_retain();
      v39(v40);
      swift_release();
    }
    sub_23931ABBC();
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager) = 0;
    swift_release();
    *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer) = 0;
    swift_release();
    v41 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager);
    if (v41)
    {
      v42 = *(void (**)(uint64_t))(*(_QWORD *)v41 + 608);
      v43 = swift_retain();
      v42(v43);
      swift_release();
      return 0;
    }
    v19(v9, v18, v2);
    v44 = sub_239352098();
    v45 = sub_239352578();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v53 = v47;
      *(_DWORD *)v46 = 136380675;
      v52 = sub_23925F3EC(0x2870556E61656C63, 0xE900000000000029, &v53);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v44, v45, "ObjectCaptureSession.%{private}s: Finished resource clean up.", v46, 0xCu);
      v17 = 1;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v47, -1, -1);
      MEMORY[0x23B83BC04](v46, -1, -1);

      v26(v9, v2);
      return v17;
    }

    v26(v9, v2);
    return 1;
  }
  __break(1u);
  return result;
}

void sub_239312660(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  _BOOL4 v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  os_log_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  void *v71;
  void *v72;
  unint64_t v73;
  void *v74;
  void *v75;
  char v76;
  uint64_t v77;
  char **v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  NSObject *v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  void (*v112)(char *, uint64_t, void *);
  char *v113;
  char *v114;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  _BOOL8 v120;
  uint64_t v121;
  char v122;
  unint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, void *);
  uint64_t v144;
  unint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  __int128 v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  _BOOL8 v183;
  uint64_t v184;
  char v185;
  unint64_t v186;
  char v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  void (*v202)(unint64_t, uint64_t);
  uint64_t v203;
  NSObject *v204;
  os_log_type_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  void *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __int128 v229;
  uint64_t v230;
  void (*v231)(char *, uint64_t);
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  uint64_t v247;
  __int128 v248;
  unint64_t v249;
  char *v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  uint64_t v256;
  unsigned int (*v257)(uint64_t, uint64_t, uint64_t);
  unint64_t v258;
  os_log_t v259;
  uint64_t v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;

  v2 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  MEMORY[0x24BDAC7A8](v2);
  *(_QWORD *)&v244 = (char *)&v223 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v4 = *(_QWORD *)(v263 - 8);
  v5 = MEMORY[0x24BDAC7A8](v263);
  v228 = (uint64_t)&v223 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v227 = (uint64_t)&v223 - v7;
  v8 = sub_23925FB08(&qword_25692B620);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v243 = (uint64_t)&v223 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v235 = (char *)&v223 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v240 = (char *)&v223 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v230 = (uint64_t)&v223 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)&v229 = (char *)&v223 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v251 = (uint64_t)&v223 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v250 = (char *)&v223 - v21;
  v22 = sub_239352020();
  v262 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v234 = (char *)&v223 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v249 = (unint64_t)&v223 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v242 = (char *)&v223 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v241 = (char *)&v223 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v257 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v223 - v32);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v255 = (char *)&v223 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v252 = (char *)&v223 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v223 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v253 = (char *)&v223 - v40;
  v41 = sub_23925FB08(&qword_25692B628);
  v42 = MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)&v246 = (char *)&v223 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)&v245 = (char *)&v223 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v239 = (char *)&v223 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v254 = (char *)&v223 - v48;
  v49 = sub_2393520B0();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v238 = (char *)&v223 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v223 - v53;
  v55 = (char *)*a1;
  v56 = sub_239275A60();
  v57 = *(char **)(v50 + 16);
  v233 = v56;
  v232 = v57;
  ((void (*)(char *))v57)(v54);
  sub_239341BF8(v55);
  sub_239341BF8(v55);
  v58 = sub_239352098();
  v59 = sub_239352578();
  v60 = v59;
  v61 = os_log_type_enabled(v58, v59);
  v237 = v2;
  v236 = v49;
  if (v61)
  {
    v62 = swift_slowAlloc();
    v260 = swift_slowAlloc();
    v264 = v260;
    *(_DWORD *)v62 = 136381187;
    v259 = v58;
    v273 = sub_23925F3EC(0xD000000000000022, 0x80000002393601A0, &v264);
    LODWORD(v258) = v60;
    sub_2393526B0();
    *(_WORD *)(v62 + 12) = 2081;
    v273 = sub_23925F3EC(0xD000000000000022, 0x80000002393601A0, &v264);
    sub_2393526B0();
    *(_WORD *)(v62 + 22) = 2082;
    v273 = (uint64_t)v55;
    sub_239341BF8(v55);
    v63 = sub_23935232C();
    v273 = sub_23925F3EC(v63, v64, &v264);
    v2 = v237;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    sub_239331658(v55);
    sub_239331658(v55);
    v65 = v259;
    _os_log_impl(&dword_23925B000, v259, (os_log_type_t)v258, "ObjectCaptureSession.%{private}s: Called %{private}s with state = %{public}s", (uint8_t *)v62, 0x20u);
    v66 = v260;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v66, -1, -1);
    MEMORY[0x23B83BC04](v62, -1, -1);

    v67 = *(void (**)(char *, uint64_t))(v50 + 8);
    v68 = v54;
    v69 = v236;
  }
  else
  {
    sub_239331658(v55);
    sub_239331658(v55);

    v67 = *(void (**)(char *, uint64_t))(v50 + 8);
    v68 = v54;
    v69 = v49;
  }
  v231 = v67;
  v67(v68, v69);
  v70 = (uint64_t (*)(uint64_t))v246;
  if ((unint64_t)(v55 - 7) < 0xA)
    return;
  swift_getKeyPath();
  v224 = v55;
  swift_getKeyPath();
  v71 = v261;
  sub_23935211C();
  swift_release();
  swift_release();
  v72 = (void *)v264;
  swift_getKeyPath();
  swift_getKeyPath();
  v264 = 16;
  v73 = v71;
  v74 = v224;
  sub_239352128();
  v264 = (uint64_t)v72;
  sub_2392F48FC((void **)&v264);
  sub_239331658(v72);
  v75 = *(void **)(v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing);
  *(_QWORD *)(v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing) = v74;
  sub_239341BF8(v74);
  sub_2393351A8(v75);
  v76 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v73) + 0x4B8))();
  v77 = (uint64_t)&unk_25692F000;
  v256 = v4;
  v261 = (void *)v22;
  v258 = v73;
  if ((v76 & 1) != 0)
  {
    v78 = (char **)(v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox);
    v70 = (uint64_t (*)(uint64_t))v262;
    if ((*(_BYTE *)(v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox + 64) & 1) != 0)
      goto LABEL_105;
    v241 = *v78;
    v240 = v78[1];
    v238 = v78[2];
    v237 = (uint64_t)v78[3];
    v236 = (uint64_t)v78[4];
    v235 = v78[5];
    v80 = v78[6];
    v79 = v78[7];
    v234 = v80;
    v233 = (uint64_t)v79;
    v81 = v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
    swift_beginAccess();
    v260 = v81;
    v82 = *(_QWORD *)v81;
    v83 = *(_QWORD *)(*(_QWORD *)v81 + 64);
    v226 = *(_QWORD *)v81 + 64;
    v84 = 1 << *(_BYTE *)(v82 + 32);
    v85 = -1;
    if (v84 < 64)
      v85 = ~(-1 << v84);
    v86 = v85 & v83;
    v232 = (char *)OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction;
    v231 = (void (*)(char *, uint64_t))OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
    v77 = (uint64_t)v250;
    v242 = v250 + 73;
    v228 = (unint64_t)(v84 + 63) >> 6;
    v225 = v228 - 1;
    v247 = v82;
    swift_bridgeObjectRetain();
    v243 = 0;
    v87 = (uint64_t)&unk_25692B630;
    while (1)
    {
      v88 = (uint64_t)v239;
      if (v86)
        break;
      v95 = v243 + 1;
      if (__OFADD__(v243, 1))
        goto LABEL_112;
      v90 = v261;
      v94 = (uint64_t)v254;
      if (v95 < v228)
      {
        v96 = *(_QWORD *)(v226 + 8 * v95);
        if (v96)
          goto LABEL_16;
        v97 = v243 + 2;
        ++v243;
        if (v95 + 1 < v228)
        {
          v96 = *(_QWORD *)(v226 + 8 * v97);
          if (v96)
            goto LABEL_19;
          v243 = v95 + 1;
          if (v95 + 2 < v228)
          {
            v96 = *(_QWORD *)(v226 + 8 * (v95 + 2));
            if (v96)
            {
              v95 += 2;
              goto LABEL_16;
            }
            v97 = v95 + 3;
            v243 = v95 + 2;
            if (v95 + 3 < v228)
            {
              v96 = *(_QWORD *)(v226 + 8 * v97);
              if (!v96)
              {
                while (1)
                {
                  v95 = v97 + 1;
                  if (__OFADD__(v97, 1))
                    break;
                  if (v95 >= v228)
                  {
                    v243 = v225;
                    goto LABEL_30;
                  }
                  v96 = *(_QWORD *)(v226 + 8 * v95);
                  ++v97;
                  if (v96)
                    goto LABEL_16;
                }
LABEL_114:
                __break(1u);
LABEL_115:
                (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v4 + 56))(v70, 1, 1, v263);
                goto LABEL_116;
              }
LABEL_19:
              v95 = v97;
LABEL_16:
              v249 = (v96 - 1) & v96;
              v89 = __clz(__rbit64(v96)) + (v95 << 6);
              v243 = v95;
LABEL_12:
              v91 = v247;
              (*((void (**)(char *, unint64_t, void *))v70 + 2))(v239, *(_QWORD *)(v247 + 48) + *((_QWORD *)v70 + 9) * v89, v90);
              v92 = *(_QWORD *)(v91 + 56) + *(_QWORD *)(v4 + 72) * v89;
              v93 = sub_23925FB08((uint64_t *)&unk_25692B630);
              sub_239268820(v92, v88 + *(int *)(v93 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v88, 0, 1, v93);
              v77 = (uint64_t)v250;
              v94 = (uint64_t)v254;
              goto LABEL_31;
            }
          }
        }
      }
LABEL_30:
      v98 = sub_23925FB08((uint64_t *)&unk_25692B630);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v88, 1, 1, v98);
      v249 = 0;
LABEL_31:
      sub_239268764(v88, v94, &qword_25692B628);
      v99 = sub_23925FB08((uint64_t *)&unk_25692B630);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v94, 1, v99) == 1)
        goto LABEL_104;
      v100 = (uint64_t)v253;
      (*((void (**)(char *, uint64_t, void *))v70 + 4))(v253, v94, v90);
      v101 = *(_QWORD *)v260;
      if (!*(_QWORD *)(*(_QWORD *)v260 + 16))
        goto LABEL_117;
      swift_bridgeObjectRetain();
      v102 = sub_239292F4C(v100);
      if ((v103 & 1) != 0)
      {
        sub_239268820(*(_QWORD *)(v101 + 56) + *(_QWORD *)(v4 + 72) * v102, v77, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v104 = *(NSObject **)(v4 + 56);
        v105 = v77;
        v106 = 0;
      }
      else
      {
        v104 = *(NSObject **)(v4 + 56);
        v105 = v77;
        v106 = 1;
      }
      v259 = v104;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v104)(v105, v106, 1, v263);
      swift_bridgeObjectRelease();
      v257 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      if (v257(v77, 1, v263) == 1)
        goto LABEL_118;
      v107 = v242[*(int *)(v263 + 32)];
      sub_2392688AC(v77, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      if ((v107 & 1) != 0)
        goto LABEL_109;
      v264 = (uint64_t)v241;
      v265 = (unint64_t)v240;
      v266 = v238;
      v267 = v237;
      v268 = v236;
      v269 = (uint64_t)v235;
      v270 = v234;
      v271 = v233;
      *(double *)&v108 = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)&v232[v258]));
      v248 = v108;
      v246 = v109;
      v245 = v110;
      v244 = v111;
      v112 = *(void (**)(char *, uint64_t, void *))(v262 + 16);
      v112(v39, v100, v90);
      v87 = v260;
      swift_beginAccess();
      v113 = v252;
      v114 = v39;
      v112(v252, (uint64_t)v39, v90);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v116 = (uint64_t)v255;
      v112(v255, (uint64_t)v113, v90);
      v272 = *(_QWORD *)v87;
      v117 = v272;
      *(_QWORD *)v87 = 0x8000000000000000;
      v77 = sub_239292F4C(v116);
      v119 = *(_QWORD *)(v117 + 16);
      v120 = (v118 & 1) == 0;
      v121 = v119 + v120;
      if (__OFADD__(v119, v120))
        goto LABEL_110;
      v122 = v118;
      if (*(_QWORD *)(v117 + 24) >= v121)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23932EB80();
      }
      else
      {
        sub_23932CCB8(v121, isUniquelyReferenced_nonNull_native);
        v123 = sub_239292F4C((uint64_t)v255);
        if ((v122 & 1) != (v124 & 1))
          goto LABEL_123;
        v77 = v123;
      }
      v125 = v114;
      v87 = v251;
      v126 = (uint64_t)v253;
      if ((v122 & 1) == 0)
        goto LABEL_121;
      v127 = v99;
      v128 = v125;
      v129 = v272;
      v130 = *(_QWORD *)(v4 + 72);
      v131 = v130 * v77;
      sub_2392C4FE0(*(_QWORD *)(v272 + 56) + v130 * v77, v251, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v132 = v263;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v259)(v87, 0, 1, v263);
      v133 = v87 + *(int *)(v132 + 32);
      if ((*(_BYTE *)(v133 + 73) & 1) != 0)
        goto LABEL_122;
      v134 = v246;
      *(_OWORD *)v133 = v248;
      *(_OWORD *)(v133 + 16) = v134;
      v135 = v244;
      *(_OWORD *)(v133 + 32) = v245;
      *(_OWORD *)(v133 + 48) = v135;
      v136 = v87;
      v137 = v229;
      sub_23926059C(v136, v229, &qword_25692B620);
      v138 = v257(v137, 1, v263) == 1;
      v139 = v261;
      if (v138)
      {
        sub_23925FE28(v137, &qword_25692B620);
        v140 = v272;
        v142 = v262;
        swift_arrayDestroy();
        sub_23932DDD4(v77, v140);
      }
      else
      {
        v141 = v227;
        sub_2392C4FE0(v137, v227, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        sub_2392C4FE0(v141, *(_QWORD *)(v129 + 56) + v131, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v142 = v262;
      }
      sub_23925FE28(v251, &qword_25692B620);
      v143 = *(void (**)(uint64_t, void *))(v142 + 8);
      v143((uint64_t)v255, v139);
      v87 = v260;
      *(_QWORD *)v260 = v272;
      v143((uint64_t)v252, v139);
      v39 = v128;
      v143((uint64_t)v128, v139);
      swift_endAccess();
      sub_239327338();
      v144 = *(_QWORD *)v87;
      if (!*(_QWORD *)(*(_QWORD *)v87 + 16))
        goto LABEL_119;
      swift_bridgeObjectRetain();
      v145 = sub_239292F4C(v126);
      v87 = (uint64_t)&unk_25692B630;
      if ((v146 & 1) != 0)
      {
        v147 = *(_QWORD *)(v144 + 56) + v145 * v130;
        v148 = v230;
        sub_239268820(v147, v230, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v149 = 0;
      }
      else
      {
        v149 = 1;
        v148 = v230;
      }
      v150 = v263;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v259)(v148, v149, 1, v263);
      swift_bridgeObjectRelease();
      if (v257(v148, 1, v150) == 1)
        goto LABEL_120;
      v151 = (uint64_t)&v254[*(int *)(v127 + 48)];
      sub_2393520D4();
      swift_release();
      v143(v126, v261);
      sub_2392688AC(v148, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_2392688AC(v151, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v4 = v256;
      v70 = (uint64_t (*)(uint64_t))v262;
      v73 = v258;
      v77 = (uint64_t)v250;
      v86 = v249;
    }
    v249 = (v86 - 1) & v86;
    v89 = __clz(__rbit64(v86)) | (v243 << 6);
    v90 = v261;
    goto LABEL_12;
  }
  v152 = v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  swift_beginAccess();
  v260 = v152;
  v153 = *(_QWORD *)v152;
  v154 = *(_QWORD *)(*(_QWORD *)v152 + 64);
  v225 = *(_QWORD *)v152 + 64;
  v155 = 1 << *(_BYTE *)(v153 + 32);
  v156 = -1;
  if (v155 < 64)
    v156 = ~(-1 << v155);
  v157 = v156 & v154;
  v239 = (char *)OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  v230 = (unint64_t)(v155 + 63) >> 6;
  v223 = v230 - 1;
  v247 = v153;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v248 = 0;
  *(_QWORD *)&v158 = 136380931;
  v229 = v158;
  v227 = 0x80000002393601A0;
  v226 = MEMORY[0x24BEE4AD8] + 8;
  v87 = v262;
  v159 = (uint64_t)v257;
  if (!v157)
    goto LABEL_60;
LABEL_58:
  v259 = (os_log_t)((v157 - 1) & v157);
  v160 = __clz(__rbit64(v157)) | ((_QWORD)v248 << 6);
LABEL_59:
  v161 = v247;
  (*(void (**)(uint64_t (*)(uint64_t), unint64_t, uint64_t))(v87 + 16))(v70, *(_QWORD *)(v247 + 48) + *(_QWORD *)(v87 + 72) * v160, v22);
  v162 = *(_QWORD *)(v161 + 56) + *(_QWORD *)(v4 + 72) * v160;
  v163 = sub_23925FB08((uint64_t *)&unk_25692B630);
  sub_239268820(v162, (uint64_t)v70 + *(int *)(v163 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  (*(void (**)(uint64_t (*)(uint64_t), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v70, 0, 1, v163);
  v159 = (uint64_t)v257;
  while (1)
  {
    v168 = v245;
    sub_239268764((uint64_t)v70, v245, &qword_25692B628);
    v169 = sub_23925FB08((uint64_t *)&unk_25692B630);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 48))(v168, 1, v169) == 1)
      goto LABEL_104;
    v170 = v168 + *(int *)(v169 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v159, v168, v22);
    v171 = v244;
    v70 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera;
    sub_239268820(v170 + *(int *)(v263 + 20), v244, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    sub_2392688AC(v170, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v172 = v171 + *(int *)(v2 + 40);
    v173 = *(_QWORD *)(v172 + 8);
    v255 = *(char **)v172;
    v254 = *(char **)(v172 + 16);
    v251 = *(_QWORD *)(v172 + 24);
    v253 = *(char **)(v172 + 32);
    v250 = *(char **)(v172 + 40);
    v252 = *(char **)(v172 + 48);
    v77 = v22;
    v174 = *(_QWORD *)(v172 + 56);
    LOBYTE(v170) = *(_BYTE *)(v172 + 64);
    sub_2392688AC(v171, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    if ((v170 & 1) != 0)
    {
      v4 = v256;
      v22 = v77;
      v70 = (uint64_t (*)(uint64_t))v243;
      goto LABEL_95;
    }
    v175 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
    v176 = v159;
    v177 = v241;
    v175(v241, v176, v77);
    v4 = v260;
    swift_beginAccess();
    v178 = v242;
    v175(v242, (uint64_t)v177, v77);
    v87 = swift_isUniquelyReferenced_nonNull_native();
    v179 = v249;
    v175((char *)v249, (uint64_t)v178, v77);
    v272 = *(_QWORD *)v4;
    v180 = v272;
    *(_QWORD *)v4 = 0x8000000000000000;
    v73 = sub_239292F4C(v179);
    v182 = *(_QWORD *)(v180 + 16);
    v183 = (v181 & 1) == 0;
    v184 = v182 + v183;
    if (__OFADD__(v182, v183))
    {
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    v185 = v181;
    if (*(_QWORD *)(v180 + 24) >= v184)
    {
      if ((v87 & 1) != 0)
      {
        if ((v181 & 1) == 0)
          break;
      }
      else
      {
        sub_23932EB80();
        if ((v185 & 1) == 0)
          break;
      }
      goto LABEL_88;
    }
    sub_23932CCB8(v184, v87);
    v186 = sub_239292F4C(v249);
    if ((v185 & 1) != (v187 & 1))
      goto LABEL_123;
    v73 = v186;
    if ((v185 & 1) == 0)
      break;
LABEL_88:
    v188 = v272;
    v4 = v256;
    v189 = *(_QWORD *)(v256 + 72) * v73;
    v190 = (uint64_t)v240;
    sub_2392C4FE0(*(_QWORD *)(v272 + 56) + v189, (uint64_t)v240, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v191 = v263;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v190, 0, 1, v263);
    v192 = (_QWORD *)(v190 + *(int *)(v191 + 20));
    v192[6] = v255;
    v192[7] = v173;
    v193 = v251;
    v192[8] = v254;
    v192[9] = v193;
    v194 = v250;
    v192[10] = v253;
    v192[11] = v194;
    v192[12] = v252;
    v192[13] = v174;
    v195 = v190;
    v196 = (uint64_t)v235;
    sub_23926059C(v195, (uint64_t)v235, &qword_25692B620);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v196, 1, v191) == 1)
    {
      sub_23925FE28(v196, &qword_25692B620);
      v197 = v272;
      v22 = (uint64_t)v261;
      v198 = v262;
      swift_arrayDestroy();
      sub_23932DDD4(v73, v197);
    }
    else
    {
      v199 = v196;
      v200 = v228;
      sub_2392C4FE0(v199, v228, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_2392C4FE0(v200, *(_QWORD *)(v188 + 56) + v189, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v22 = (uint64_t)v261;
      v198 = v262;
    }
    v70 = (uint64_t (*)(uint64_t))v243;
    v201 = v238;
    sub_23925FE28((uint64_t)v240, &qword_25692B620);
    v202 = *(void (**)(unint64_t, uint64_t))(v198 + 8);
    v202(v249, v22);
    *(_QWORD *)v260 = v272;
    v202((unint64_t)v242, v22);
    v202((unint64_t)v241, v22);
    swift_endAccess();
    v203 = v236;
    ((void (*)(char *, uint64_t, uint64_t))v232)(v201, v233, v236);
    v77 = (uint64_t)v234;
    v175(v234, (uint64_t)v257, v22);
    v204 = sub_239352098();
    v205 = sub_239352578();
    if (os_log_type_enabled(v204, v205))
    {
      v206 = v77;
      v77 = swift_slowAlloc();
      v207 = swift_slowAlloc();
      v264 = v207;
      *(_DWORD *)v77 = v229;
      *(_QWORD *)(v77 + 4) = sub_23925F3EC(0xD000000000000022, v227, &v264);
      *(_WORD *)(v77 + 12) = 2082;
      sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v208 = sub_2393528C0();
      *(_QWORD *)(v77 + 14) = sub_23925F3EC(v208, v209, &v264);
      swift_bridgeObjectRelease();
      v210 = v206;
      v4 = v256;
      v202(v210, v22);
      _os_log_impl(&dword_23925B000, v204, v205, "ObjectCaptureSession.%{private}s: Updated metadata of the shot %{public}s with the latest mobileSfM transform.", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v207, -1, -1);
      MEMORY[0x23B83BC04](v77, -1, -1);

      v211 = v238;
    }
    else
    {
      v202(v77, v22);

      v211 = v201;
    }
    v231(v211, v203);
    v87 = v262;
    v73 = v258;
    v2 = v237;
    v159 = (uint64_t)v257;
LABEL_95:
    v212 = sub_239327338();
    v213 = *(_QWORD *)v260;
    if (!*(_QWORD *)(*(_QWORD *)v260 + 16))
      goto LABEL_115;
    v77 = v212;
    swift_bridgeObjectRetain();
    v214 = sub_239292F4C(v159);
    if ((v215 & 1) != 0)
    {
      sub_239268820(*(_QWORD *)(v213 + 56) + *(_QWORD *)(v4 + 72) * v214, (uint64_t)v70, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      v216 = 0;
    }
    else
    {
      v216 = 1;
    }
    v217 = v263;
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v4 + 56))(v70, v216, 1, v263);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(v4 + 48))(v70, 1, v217) == 1)
    {
LABEL_116:
      __break(1u);
LABEL_117:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v77, 1, 1, v263);
LABEL_118:
      __break(1u);
LABEL_119:
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v259)(v230, 1, 1, v263);
LABEL_120:
      __break(1u);
LABEL_121:
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v259)(v87, 1, 1, v263);
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      sub_239352908();
      __break(1u);
      return;
    }
    sub_2393520D4();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v159, v22);
    sub_2392688AC((uint64_t)v70, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v70 = (uint64_t (*)(uint64_t))v246;
    v157 = (unint64_t)v259;
    if (v259)
      goto LABEL_58;
LABEL_60:
    v164 = v248 + 1;
    if (__OFADD__((_QWORD)v248, 1))
      goto LABEL_111;
    if (v164 < v230)
    {
      v165 = *(_QWORD *)(v225 + 8 * v164);
      if (v165)
        goto LABEL_63;
      v166 = v248 + 2;
      *(_QWORD *)&v248 = v248 + 1;
      if (v164 + 1 < v230)
      {
        v165 = *(_QWORD *)(v225 + 8 * v166);
        if (v165)
          goto LABEL_66;
        *(_QWORD *)&v248 = v164 + 1;
        if (v164 + 2 < v230)
        {
          v165 = *(_QWORD *)(v225 + 8 * (v164 + 2));
          if (v165)
          {
            v164 += 2;
            goto LABEL_63;
          }
          v166 = v164 + 3;
          *(_QWORD *)&v248 = v164 + 2;
          if (v164 + 3 < v230)
          {
            v165 = *(_QWORD *)(v225 + 8 * v166);
            if (v165)
            {
LABEL_66:
              v164 = v166;
LABEL_63:
              v259 = (os_log_t)((v165 - 1) & v165);
              v160 = __clz(__rbit64(v165)) + (v164 << 6);
              *(_QWORD *)&v248 = v164;
              goto LABEL_59;
            }
            while (1)
            {
              v164 = v166 + 1;
              if (__OFADD__(v166, 1))
                goto LABEL_113;
              if (v164 >= v230)
                break;
              v165 = *(_QWORD *)(v225 + 8 * v164);
              ++v166;
              if (v165)
                goto LABEL_63;
            }
            *(_QWORD *)&v248 = v223;
          }
        }
      }
    }
    v167 = sub_23925FB08((uint64_t *)&unk_25692B630);
    (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v70, 1, 1, v167);
    v259 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v256 + 56))(v240, 1, 1, v263);
  __break(1u);
LABEL_104:
  swift_release();
  v74 = v224;
LABEL_105:
  v218 = sub_239351FF0();
  v220 = v219;
  v221 = *(_DWORD *)(v73 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage);
  sub_2393274C4();
  v264 = 0x302E342E32;
  v265 = 0xE500000000000000;
  v266 = (char *)v218;
  v267 = v220;
  LODWORD(v268) = v221;
  sub_2393520D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((sub_23931207C() & 1) != 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_239341BF8(v74);
    sub_23935211C();
    swift_release();
    swift_release();
    v222 = (void *)v264;
    swift_getKeyPath();
    swift_getKeyPath();
    v264 = (uint64_t)v74;
    (id)v73;
    sub_239352128();
    v264 = (uint64_t)v222;
    sub_2392F48FC((void **)&v264);
    sub_239331658(v222);
  }
}

void (*sub_239314224(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_239352020();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_23932FF14(v2, (uint64_t)v5);
  return sub_2393142B4;
}

void sub_2393142B4(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_239314308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _OWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;

  v1 = v0;
  sub_2393094F8();
  v2 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
  *(_WORD *)(v2 + 32) = 256;
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  sub_2392FE7A0();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane) = 0;

  v4 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_BYTE *)(v4 + 64) = 1;
  v5 = v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox;
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_BYTE *)(v5 + 64) = 1;
  sub_239335310();
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor) = 0;

  sub_2392FE93C();
  v7 = (_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud);
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  *v7 = 0u;
  v7[1] = 0u;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer) = 0;
  swift_release();
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment);
  swift_beginAccess();
  *v8 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager);
  if (v9)
  {
    v10 = *(void (**)(uint64_t))(*(_QWORD *)v9 + 160);
    v11 = swift_retain();
    v10(v11);
    swift_release();
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer) = 0;
  return swift_release();
}

uint64_t sub_23931446C()
{
  _QWORD *v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[9];
  __int128 v19[10];

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B8))(v4) & 1) != 0)
    goto LABEL_7;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot))
    v1 = 0.75;
  else
    v1 = 0.8;
  if (qword_25692E840 != -1)
    goto LABEL_13;
  while (1)
  {
    sub_2392F2928((uint64_t)v19, (__n128)xmmword_25692E850, 0.01, v1);
    v18[6] = v19[6];
    v18[7] = v19[7];
    v18[8] = v19[8];
    v18[2] = v19[2];
    v18[3] = v19[3];
    v18[4] = v19[4];
    v18[5] = v19[5];
    v18[0] = v19[0];
    v18[1] = v19[1];
    nullsub_1(v18);
    sub_239268764((uint64_t)v18, (uint64_t)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, &qword_25692A908);
    if (!sub_23930CECC(v19))
      break;
LABEL_7:
    v7 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID);
    v8 = __OFADD__(v7, 1);
    v9 = v7 + 1;
    if (!v8)
    {
      *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID) = v9;
      return 1;
    }
    __break(1u);
LABEL_13:
    swift_once();
  }
  v11 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v11, v2);
  v12 = sub_239352098();
  v13 = sub_23935256C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v17 = v15;
    *(_DWORD *)v14 = 136380675;
    v16 = sub_23925F3EC(0xD000000000000011, 0x80000002393600E0, &v17);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v12, v13, "ObjectCaptureSession.%{private}s: Failed to start voxel integration!", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v15, -1, -1);
    MEMORY[0x23B83BC04](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return 0;
}

uint64_t sub_239314720()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  unsigned __int8 *v45;
  __int16 v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, _UNKNOWN **);
  char *v52;
  uint64_t v53;
  void (*v54)(char *, _UNKNOWN **);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, _UNKNOWN **);
  char *v58;
  uint64_t v59;
  void (*v60)(char *, _UNKNOWN **);
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78[3];
  uint64_t v79;

  v1 = sub_2393520B0();
  v75 = *(_QWORD *)(v1 - 8);
  v76 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v72 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v68 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)&v68 - v7;
  v8 = sub_239352020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_239351F3C();
  v15 = *(_QWORD *)(v74 - 8);
  v16 = MEMORY[0x24BDAC7A8](v74);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v68 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v68 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v73 = (char *)&v68 - v25;
  if ((sub_2392FE5BC() & 1) != 0 && !*(_QWORD *)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager])
  {
    v69 = v0;
    v70 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager;
    v34 = (uint64_t)&v0[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
    swift_beginAccess();
    sub_23926059C(v34, (uint64_t)v14, &qword_256927AD0);
    v35 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v74) == 1)
    {
      v36 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v37 = objc_msgSend(v36, sel_temporaryDirectory);

      sub_239351F18();
      sub_239351EE8();
      v68 = *(void (**)(char *, uint64_t))(v15 + 8);
      v68(v21, v74);
      sub_239352014();
      sub_239351FF0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v38 = v15;
      v39 = v73;
      sub_239351EE8();
      v35 = v74;
      swift_bridgeObjectRelease();
      v68(v24, v35);
      sub_23925FE28((uint64_t)v14, &qword_256927AD0);
      v41 = v75;
      v40 = v76;
      v42 = v38;
    }
    else
    {
      v43 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v42 = v15;
      v39 = v73;
      v43(v73, v14, v35);
      v41 = v75;
      v40 = v76;
    }
    v44 = v71;
    type metadata accessor for PGManager();
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v18, v39, v35);
    v45 = (unsigned __int8 *)sub_2392A54FC();
    if (v45[25])
      v46 = 256;
    else
      v46 = 0;
    v47 = sub_2392A616C((uint64_t)v18, *v45 | ((unint64_t)*((unsigned int *)v45 + 1) << 32), *((_DWORD *)v45 + 2), *((_QWORD *)v45 + 2), v46 | v45[24]);
    v49 = v69;
    v48 = v70;
    *(_QWORD *)&v69[v70] = v47;
    swift_release();
    v50 = *(_QWORD *)&v49[v48];
    if (v50)
    {
      v51 = *(void (**)(char *, _UNKNOWN **))(*(_QWORD *)v50 + 424);
      swift_retain();
      v52 = v49;
      v51(v49, &off_250AC7A50);
      swift_release();
      v53 = *(_QWORD *)&v49[v70];
      if (v53)
      {
        v54 = *(void (**)(char *, _UNKNOWN **))(*(_QWORD *)v53 + 496);
        v55 = v52;
        swift_retain();
        v54(v49, &off_250AC7A60);
        swift_release();
        v56 = *(_QWORD *)&v49[v70];
        if (v56)
        {
          v57 = *(void (**)(char *, _UNKNOWN **))(*(_QWORD *)v56 + 520);
          v58 = v55;
          swift_retain();
          v57(v49, &off_250AC7A90);
          swift_release();
          v59 = *(_QWORD *)&v49[v70];
          if (v59)
          {
            v60 = *(void (**)(char *, _UNKNOWN **))(*(_QWORD *)v59 + 544);
            v61 = v58;
            swift_retain();
            v60(v49, &off_250AC7AA0);
            swift_release();
          }
        }
      }
    }
    v62 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v44, v62, v40);
    v63 = sub_239352098();
    v64 = sub_239352578();
    if (os_log_type_enabled(v63, v64))
    {
      v76 = v42;
      v65 = (uint8_t *)swift_slowAlloc();
      v66 = v44;
      v67 = swift_slowAlloc();
      v79 = v67;
      *(_DWORD *)v65 = 136380675;
      v77 = sub_23925F3EC(0xD000000000000017, 0x80000002393600A0, &v79);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v63, v64, "ObjectCaptureSession.%{private}s: Initialized mobileSfM in ObjectCaptureSession.", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v67, -1, -1);
      MEMORY[0x23B83BC04](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v66, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v73, v35);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v39, v35);
    }
  }
  else
  {
    v26 = sub_239275A60();
    v28 = v75;
    v27 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v6, v26, v76);
    v29 = sub_239352098();
    v30 = sub_239352578();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v78[0] = v32;
      *(_DWORD *)v31 = 136380675;
      v79 = sub_23925F3EC(0xD000000000000017, 0x80000002393600A0, v78);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v29, v30, "ObjectCaptureSession.%{private}s: mobileSfM has not been initialized or it has already been initialized in ObjectCaptureSession!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v32, -1, -1);
      MEMORY[0x23B83BC04](v31, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v27);
  }
}

id ObjectCaptureSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ObjectCaptureSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t ObjectCaptureSession.startRecording(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[2];

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v21 = a1;
    v12 = v11;
    v13 = swift_slowAlloc();
    v20 = v2;
    v14 = v13;
    v23[0] = v13;
    *(_DWORD *)v12 = 136380931;
    v22 = sub_23925F3EC(0xD000000000000012, 0x800000023935E6F0, v23);
    sub_2393526B0();
    *(_WORD *)(v12 + 12) = 2081;
    v22 = sub_23925F3EC(0xD000000000000012, 0x800000023935E6F0, v23);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: Called %{private}s.", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    v15 = v14;
    v2 = v20;
    MEMORY[0x23B83BC04](v15, -1, -1);
    v16 = v12;
    a1 = v21;
    MEMORY[0x23B83BC04](v16, -1, -1);
  }

  v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  MEMORY[0x24BDAC7A8](v17);
  *(&v19 - 2) = v2;
  *(&v19 - 1) = a1;
  sub_2393525F0();
  return LOBYTE(v23[0]);
}

uint64_t sub_2393152F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_239351F3C();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v11 = a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL;
  swift_beginAccess();
  sub_239267C70((uint64_t)v8, v11, &qword_256927AD0);
  result = swift_endAccess();
  *a3 = 1;
  return result;
}

uint64_t ObjectCaptureSession.stopRecording(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[2];

  v3 = v2;
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v3;
    v14 = v13;
    v19 = swift_slowAlloc();
    v23[0] = v19;
    *(_DWORD *)v14 = 136380931;
    v22 = sub_23925F3EC(0xD000000000000021, 0x800000023935E710, v23);
    v20 = a1;
    sub_2393526B0();
    *(_WORD *)(v14 + 12) = 2081;
    v22 = sub_23925F3EC(0xD000000000000021, 0x800000023935E710, v23);
    a1 = v20;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v11, v12, "ObjectCaptureSession.%{private}s: Called %{private}s.", (uint8_t *)v14, 0x16u);
    v15 = v19;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v15, -1, -1);
    v16 = v14;
    v3 = v21;
    MEMORY[0x23B83BC04](v16, -1, -1);
  }

  v17 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  MEMORY[0x24BDAC7A8](v17);
  *(&v19 - 4) = v3;
  *(&v19 - 3) = a1;
  *(&v19 - 2) = a2;
  sub_2393525F0();
  return LOBYTE(v23[0]);
}

void sub_239315640(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t aBlock[6];
  id v32;

  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  v13 = objc_msgSend(v12, sel_configuration);
  if (v13)
  {
    v14 = v13;
    objc_opt_self();
    v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      v16 = (void *)v15;
      v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v18 = (_QWORD *)swift_allocObject();
      v18[2] = a2;
      v18[3] = a3;
      v18[4] = v17;
      v18[5] = v16;
      aBlock[4] = (uint64_t)sub_239342564;
      aBlock[5] = (uint64_t)v18;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23931620C;
      aBlock[3] = (uint64_t)&unk_250AC87C8;
      v19 = _Block_copy(aBlock);
      swift_retain();
      v20 = v14;
      swift_release();
      objc_msgSend(v16, sel_finishRecordingWithHandler_, v19);

      _Block_release(v19);
      v21 = 1;
      goto LABEL_9;
    }

  }
  v22 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v22, v8);
  v23 = a1;
  v24 = sub_239352098();
  v25 = sub_23935256C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_DWORD *)v26 = 136380931;
    v30 = a4;
    aBlock[0] = v27;
    v32 = (id)sub_23925F3EC(0xD000000000000021, 0x800000023935E710, aBlock);
    sub_2393526B0();
    *(_WORD *)(v26 + 12) = 2082;
    v32 = objc_msgSend(v12, sel_configuration);
    sub_23925FB08(&qword_25692A928);
    v28 = sub_23935232C();
    v32 = (id)sub_23925F3EC(v28, v29, aBlock);
    a4 = v30;
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v24, v25, "ObjectCaptureSession.%{private}s: Invalid ARConfiguration: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v27, -1, -1);
    MEMORY[0x23B83BC04](v26, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = 0;
LABEL_9:
  *a4 = v21;
}

void sub_239315998(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  _QWORD v31[8];

  v9 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_239351F3C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a4 + 16;
  a2(a1);
  swift_beginAccess();
  v17 = MEMORY[0x23B83BC88](a4 + 16);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_7;
  }
  v18 = (void *)v17;
  v19 = v17 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL;
  swift_beginAccess();
  sub_23926059C(v19, (uint64_t)v11, &qword_256927AD0);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_7:
    sub_23925FE28((uint64_t)v11, &qword_256927AD0);
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v31[5] = sub_239351F30();
  v31[6] = v20;
  sub_239351E70();
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_239352380();
  swift_bridgeObjectRelease();
  v31[3] = 0xD000000000000012;
  v31[4] = 0x8000000239360250;
  sub_2392753CC();
  v21 = sub_2393526E0();
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v24 = MEMORY[0x23B83BC88](v16);
  if (v24)
  {
    v25 = (void *)v24;
    sub_239315CA4(v21, v23);

  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
LABEL_8:
  v26 = objc_msgSend(a5, sel_templateConfiguration);
  if (v26)
  {
    v27 = v26;
    swift_beginAccess();
    v28 = MEMORY[0x23B83BC88](v16);
    if (v28)
    {
      v29 = (void *)v28;
      v30 = *(id *)(v28 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);

      objc_msgSend(v30, sel_runWithConfiguration_options_, v27, 0);
      v27 = v30;
    }

  }
}

uint64_t sub_239315CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  char *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v33 = a1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239352320();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_239351F3C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v34 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps);
  result = swift_beginAccess();
  v16 = *v14;
  if (!*(_QWORD *)(*v14 + 16))
    return result;
  v30 = v11;
  v31 = a2;
  v28[1] = v4;
  v29 = v12;
  v28[0] = v5;
  v37 = 0;
  v38 = 0xE000000000000000;
  v17 = v16 + 56;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v16 + 56);
  v21 = (unint64_t)(v18 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  while (1)
  {
    if (v20)
    {
      v20 &= v20 - 1;
      goto LABEL_6;
    }
    v24 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v21)
      goto LABEL_22;
    v25 = *(_QWORD *)(v17 + 8 * v24);
    ++v22;
    if (!v25)
    {
      v22 = v24 + 1;
      if (v24 + 1 >= v21)
        goto LABEL_22;
      v25 = *(_QWORD *)(v17 + 8 * v22);
      if (!v25)
      {
        v22 = v24 + 2;
        if (v24 + 2 >= v21)
          goto LABEL_22;
        v25 = *(_QWORD *)(v17 + 8 * v22);
        if (!v25)
          break;
      }
    }
LABEL_21:
    v20 = (v25 - 1) & v25;
LABEL_6:
    v35 = sub_2393524C4();
    v36 = v23;
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    MEMORY[0x23B83A218](v35, v36);
    result = swift_bridgeObjectRelease();
  }
  v26 = v24 + 3;
  if (v26 >= v21)
  {
LABEL_22:
    swift_release();
    v27 = v34;
    sub_239351EAC();
    v35 = v37;
    v36 = v38;
    swift_bridgeObjectRetain();
    sub_239352314();
    sub_2392753CC();
    sub_2393526EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v30);
    return swift_bridgeObjectRelease();
  }
  v25 = *(_QWORD *)(v17 + 8 * v26);
  if (v25)
  {
    v22 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    v22 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v22 >= v21)
      goto LABEL_22;
    v25 = *(_QWORD *)(v17 + 8 * v22);
    ++v26;
    if (v25)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_23931620C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t ObjectCaptureSession.setFrameEvent(frameEvent:)(void *a1)
{
  char *v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v11[6];

  v3 = *(NSObject **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_239335CA8;
  *(_QWORD *)(v5 + 24) = v4;
  v11[4] = sub_239295A70;
  v11[5] = v5;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23928562C;
  v11[3] = &unk_250AC6D20;
  v6 = _Block_copy(v11);
  v7 = v1;
  v8 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t ObjectCaptureSession.getFrameEvent(timestamp:)(double a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  _OWORD v26[2];
  uint64_t v27[4];

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession];
  v8 = objc_msgSend(v7, sel_configuration);
  if (!v8)
  {
LABEL_9:
    v16 = sub_239275B30();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v16, v3);
    v17 = v1;
    v18 = sub_239352098();
    v19 = sub_23935256C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v27[0] = v21;
      *(_DWORD *)v20 = 136380931;
      *(_QWORD *)&v26[0] = sub_23925F3EC(0xD000000000000019, 0x800000023935E740, v27);
      sub_2393526B0();
      *(_WORD *)(v20 + 12) = 2082;
      *(_QWORD *)&v26[0] = objc_msgSend(v7, sel_configuration);
      sub_23925FB08(&qword_25692A928);
      v22 = sub_23935232C();
      *(_QWORD *)&v26[0] = sub_23925F3EC(v22, v23, v27);
      sub_2393526B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23925B000, v18, v19, "ObjectCaptureSession.%{private}s: Not a replay configuration: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v21, -1, -1);
      MEMORY[0x23B83BC04](v20, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  v9 = v8;
  objc_opt_self();
  v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10)
  {

    goto LABEL_9;
  }
  v11 = objc_msgSend(v10, sel_replaySensor);
  if (!v11)
  {
LABEL_7:

    return 0;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, sel_customDataClasses);
  v14 = sub_23935250C();

  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (!v15 || (v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8] & 1) != 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  if (objc_msgSend(v12, sel_customDataForTimestamp_, *(double *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp] + a1))
  {
    sub_239352710();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();

    memset(v26, 0, sizeof(v26));
  }
  sub_239268764((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_25692A930);
  if (!v27[3])
  {
    sub_23925FE28((uint64_t)v27, (uint64_t *)&unk_25692A930);
    return 0;
  }
  type metadata accessor for ObjectCaptureFrameEvent();
  if (swift_dynamicCast())
    return v25[1];
  else
    return 0;
}

uint64_t sub_239316764(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239351FD8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  sub_23925FB08((uint64_t *)&unk_25692BD50);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_239354060;
  sub_239351FC0();
  v13 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v12 + 64) = v13;
  *(double *)(v12 + 32) = v14 * 1000.0;
  v30 = sub_239352308();
  v16 = v15;
  v17 = sub_239275B74();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
  swift_bridgeObjectRetain();
  v18 = sub_239352098();
  v19 = sub_239352560();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v28 = v5;
    v21 = a3;
    v22 = v20;
    v23 = swift_slowAlloc();
    v29 = v8;
    v24 = v23;
    v33 = v23;
    *(_DWORD *)v22 = 136380931;
    v27 = v4;
    v32 = sub_23925F3EC(v31, v21, &v33);
    sub_2393526B0();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    v32 = sub_23925F3EC(v30, v16, &v33);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v18, v19, "=== ObjectCaptureSession.%{private}s takes time = %{public}s ms ===", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v24, -1, -1);
    MEMORY[0x23B83BC04](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_239316A54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  float32x4_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float32x4_t v32;
  float v33;
  uint64_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  int v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  float v58;
  float v59;
  int v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  float32x4_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD v83[9];
  __int128 v84[10];

  v2 = v1;
  v80 = a1;
  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v74 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v74 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v74 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v74 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v74 - v20;
  v22 = (float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) != 0)
  {
    v23 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v23, v3);
    v24 = sub_239352098();
    v25 = sub_23935256C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = v3;
      v28 = swift_slowAlloc();
      *(_QWORD *)&v84[0] = v28;
      *(_DWORD *)v26 = 136380675;
      *(_QWORD *)&v83[0] = sub_23925F3EC(0xD00000000000002BLL, 0x80000002393603F0, (uint64_t *)v84);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v24, v25, "ObjectCaptureSession.%{private}s: Failed to start voxel integration at tap point, tap point is nil!", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v28, -1, -1);
      MEMORY[0x23B83BC04](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v27);
      return;
    }

    v44 = *(void (**)(char *, uint64_t))(v4 + 8);
    v45 = v7;
LABEL_17:
    v44(v45, v3);
    return;
  }
  if ((v22[2].i8[0] & 1) != 0)
  {
    v46 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v46, v3);
    v47 = sub_239352098();
    v48 = sub_23935256C();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = v3;
      v51 = swift_slowAlloc();
      *(_QWORD *)&v84[0] = v51;
      *(_DWORD *)v49 = 136380675;
      *(_QWORD *)&v83[0] = sub_23925F3EC(0xD00000000000002BLL, 0x80000002393603F0, (uint64_t *)v84);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v47, v48, "ObjectCaptureSession.%{private}s: Failed to start voxel integration at tap point, tap point in world is nil!", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v51, -1, -1);
      MEMORY[0x23B83BC04](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v50);
      return;
    }

    v44 = *(void (**)(char *, uint64_t))(v4 + 8);
    v45 = v10;
    goto LABEL_17;
  }
  v29 = vsubq_f32(v22[1], *(float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin));
  v30 = vmulq_f32(v29, v29);
  if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]) <= 0.3)
  {
    v52 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v52, v3);
    v53 = sub_239352098();
    v54 = sub_239352578();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v78 = v3;
      v56 = (uint8_t *)v55;
      v57 = swift_slowAlloc();
      *(_QWORD *)&v84[0] = v57;
      *(_DWORD *)v56 = 136380675;
      *(_QWORD *)&v83[0] = sub_23925F3EC(0xD00000000000002BLL, 0x80000002393603F0, (uint64_t *)v84);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v53, v54, "ObjectCaptureSession.%{private}s: New tap point is too close to the old tap point, not restarting voxel integration!", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v57, -1, -1);
      MEMORY[0x23B83BC04](v56, -1, -1);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v78);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
    }
LABEL_41:
    *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration) = 0;
    return;
  }
  v79 = v22[1];
  sub_2393094F8();
  v31 = vsubq_f32(*(float32x4_t *)((char *)v80 + *(int *)(type metadata accessor for OCCaptureData(0) + 40) + 96), v79);
  v32 = vmulq_f32(v31, v31);
  v33 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v32, 2), vaddq_f32(v32, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v32.f32, 1))).f32[0]);
  v34 = sub_239275B74();
  v35 = *(uint8_t **)(v4 + 16);
  v77 = v34;
  ((void (*)(char *))v35)(v21);
  v36 = sub_239352098();
  v37 = sub_239352578();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v76 = v35;
    v39 = v38;
    v75 = swift_slowAlloc();
    *(_QWORD *)&v84[0] = v75;
    *(_DWORD *)v39 = 136380931;
    v74[1] = v39 + 4;
    *(_QWORD *)&v83[0] = sub_23925F3EC(0xD00000000000002BLL, 0x80000002393603F0, (uint64_t *)v84);
    v78 = v3;
    sub_2393526B0();
    *(_WORD *)(v39 + 12) = 2050;
    *(double *)v83 = v33;
    v3 = v78;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v36, v37, "ObjectCaptureSession.%{private}s: Camera to tap point distance = %{public}fm", (uint8_t *)v39, 0x16u);
    v40 = v75;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v40, -1, -1);
    v41 = v39;
    v35 = v76;
    MEMORY[0x23B83BC04](v41, -1, -1);
  }

  v42 = *(void (**)(char *, uint64_t))(v4 + 8);
  v42(v21, v3);
  if (v33 <= 0.0)
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v33 > 0.5)
  {
    if (v33 <= 5.0)
    {
      v58 = (float)(-1.0 / powf(2.5, v33 + 3.8)) + 0.03;
      goto LABEL_23;
    }
    v43 = 1022739087;
  }
  else
  {
    v43 = 1008981770;
  }
  v58 = *(float *)&v43;
LABEL_23:
  if (v58 < 0.00999 || v58 > 0.03001)
    goto LABEL_43;
  v59 = 0.75;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot) & 1) != 0)
  {
LABEL_34:
    sub_2392F2928((uint64_t)v84, (__n128)v79, v58, v59);
    v83[6] = v84[6];
    v83[7] = v84[7];
    v83[8] = v84[8];
    v83[2] = v84[2];
    v83[3] = v84[3];
    v83[4] = v84[4];
    v83[5] = v84[5];
    v83[0] = v84[0];
    v83[1] = v84[1];
    nullsub_1(v83);
    sub_239268764((uint64_t)v83, v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, &qword_25692A908);
    if (!sub_23930CECC(v84))
    {
      ((void (*)(char *, uint64_t, uint64_t))v35)(v19, v77, v3);
      v61 = sub_239352098();
      v62 = sub_23935256C();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = swift_slowAlloc();
        v78 = v3;
        v64 = (uint8_t *)v63;
        v65 = swift_slowAlloc();
        v82 = v65;
        v79.i64[0] = (uint64_t)v42;
        *(_DWORD *)v64 = 136380675;
        v76 = v64 + 4;
        v81 = sub_23925F3EC(0xD00000000000002BLL, 0x80000002393603F0, &v82);
        v42 = (void (*)(char *, uint64_t))v79.i64[0];
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v61, v62, "ObjectCaptureSession.%{private}s: Failed to start voxel integration at tap point!", v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v65, -1, -1);
        v66 = v64;
        v3 = v78;
        MEMORY[0x23B83BC04](v66, -1, -1);
      }

      v42(v19, v3);
    }
    v67 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime;
    *(_QWORD *)v67 = *v80;
    *(_BYTE *)(v67 + 8) = 0;
    ((void (*)(char *, uint64_t, uint64_t))v35)(v16, v77, v3);
    v68 = sub_239352098();
    v69 = sub_239352578();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = swift_slowAlloc();
      v79.i64[0] = (uint64_t)v42;
      v71 = v3;
      v72 = (uint8_t *)v70;
      v73 = swift_slowAlloc();
      v82 = v73;
      *(_DWORD *)v72 = 136380675;
      v81 = sub_23925F3EC(0xD00000000000002BLL, 0x80000002393603F0, &v82);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v68, v69, "ObjectCaptureSession.%{private}s: Successfully restarted voxel integration at tap point.", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v73, -1, -1);
      MEMORY[0x23B83BC04](v72, -1, -1);

      ((void (*)(char *, uint64_t))v79.i64[0])(v16, v71);
    }
    else
    {

      v42(v16, v3);
    }
    goto LABEL_41;
  }
  if (v33 > 0.5)
  {
    if (v33 <= 5.0)
    {
      v59 = (float)(1.0 / (float)(exp2f(v33 + v33) * 3.0)) + 0.8;
      goto LABEL_32;
    }
    v60 = 1061997773;
  }
  else
  {
    v60 = 1064849900;
  }
  v59 = *(float *)&v60;
LABEL_32:
  if (v59 >= 0.79999 && v59 <= 0.97001)
    goto LABEL_34;
LABEL_44:
  __break(1u);
}

uint64_t sub_23931755C(_QWORD *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v20;
  int v21;
  void *v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  int v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  void *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  int v86;
  int v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  int v99;
  int v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  int v112;
  int v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _BYTE v118[144];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  char v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  char v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  char v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  int v153;
  char v154;
  _OWORD v155[6];
  uint64_t v156;
  int v157;
  int v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  uint64_t v163;

  *(_QWORD *)&v69 = a4;
  *(_QWORD *)&v68 = a3;
  v163 = *MEMORY[0x24BDAC8D0];
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v58 - v15;
  v17 = (void *)a1[2];
  if (!v17 || (v18 = (void *)a1[3]) == 0 || !a1[4])
  {
    v31 = sub_239275B74();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v31, v10);
    v32 = sub_239352098();
    v33 = sub_23935256C();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      *(_QWORD *)&v155[0] = v35;
      *(_DWORD *)v34 = 136380675;
      *(_QWORD *)&v119 = sub_23925F3EC(0xD00000000000008FLL, 0x8000000239360460, (uint64_t *)v155);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v32, v33, "ObjectCaptureSession.%{private}s: Invalid depth, confidence or pointcloud input!", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v35, -1, -1);
      MEMORY[0x23B83BC04](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0;
  }
  v19 = a1[11];
  v20 = 0;
  v21 = 1;
  switch(a2)
  {
    case 0:
      v70 = 0;
      v22 = v18;
      v23 = v19;
      *(_QWORD *)&v69 = v17;
      v24 = v22;
      LOBYTE(v155[0]) = BYTE4(a6) & 1;
      v25 = *(_QWORD *)(v23 + 16);
      v26 = *MEMORY[0x24BDAEE00];
      v27 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
      v28 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
      if ((a6 & 0x100000000) != 0)
        goto LABEL_86;
      if (*(float *)&a6 < 0.0)
        goto LABEL_86;
      v66 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
      v67 = v26;
      v64 = v28;
      v65 = v27;
      sub_239268764(a5, (uint64_t)&v119, &qword_25692B6D8);
      if ((v126 & 1) != 0)
        goto LABEL_86;
      v62 = v120;
      v63 = v119;
      v60 = v122;
      v61 = v121;
      v58 = v124;
      v59 = v123;
      v29 = v125;
      v30 = DWORD2(v125);
      sub_239268764(v68, (uint64_t)&v92, &qword_25692A8A0);
      if (v96 == 1)
      {
LABEL_86:
        if (!HIDWORD(v25))
        {
          if (!OCPointCloudCreateWithRGB())
          {
LABEL_12:

            return v70;
          }
LABEL_11:
          v70 = 0;
          goto LABEL_12;
        }
      }
      else
      {
        v155[0] = v63;
        v155[1] = v62;
        v155[2] = v61;
        v155[3] = v60;
        v155[4] = v59;
        v155[5] = v58;
        v156 = v29;
        v157 = v30;
        v158 = a6;
        v159 = v92;
        v160 = v93;
        v161 = v94;
        v162 = v95;
        if (!HIDWORD(v25))
        {
          if (!OCPointCloudCreateWithRGBAndPlaneClassification())
            goto LABEL_12;
          goto LABEL_11;
        }
      }
      goto LABEL_82;
    case 1:
    case 3:
      goto LABEL_20;
    case 2:
      v70 = 0;
      goto LABEL_22;
    case 4:
      v37 = a1[11];
      v38 = (void *)a1[3];
      v70 = 0;
      LODWORD(v67) = 2;
      goto LABEL_32;
    default:
      v21 = 0;
      v20 = 1;
LABEL_20:
      v70 = 0;
      if ((a2 - 1) < 2)
      {
        if ((v20 & 1) == 0)
        {
LABEL_22:
          if ((a6 & 0x100000000) != 0)
            goto LABEL_26;
          if (*(float *)&a6 < 0.0)
            goto LABEL_26;
          sub_239268764(a5, (uint64_t)&v146, &qword_25692B6D8);
          if ((v154 & 1) != 0)
            goto LABEL_26;
          v66 = v147;
          v67 = v146;
          v64 = v149;
          v65 = v148;
          v62 = v151;
          v63 = v150;
          v39 = v152;
          v40 = v153;
          sub_239268764(v68, (uint64_t)&v141, &qword_25692A8A0);
          if ((v145 & 1) != 0)
          {
LABEL_26:
            sub_239341D18((uint64_t)&v119);
          }
          else
          {
            v119 = v67;
            v120 = v66;
            v121 = v65;
            v122 = v64;
            v123 = v63;
            v124 = v62;
            *(_QWORD *)&v125 = v39;
            DWORD2(v125) = v40;
            LODWORD(v126) = a6;
            v127 = v141;
            v128 = v142;
            v129 = v143;
            v130 = v144;
            sub_239341D5C((uint64_t)&v119);
          }
          sub_239268764((uint64_t)&v119, (uint64_t)v155, &qword_25692B6C8);
          sub_239268764(v69, (uint64_t)&v136, &qword_25692A8A0);
          if ((v140 & 1) != 0
            || (v69 = v136,
                v66 = v138,
                v67 = v137,
                v65 = v139,
                sub_239268764(v68, (uint64_t)&v131, &qword_25692A8A0),
                (v135 & 1) != 0))
          {
            sub_2392677D0((uint64_t)&v119);
          }
          else
          {
            v119 = v69;
            v120 = v67;
            v121 = v66;
            v122 = v65;
            v123 = v131;
            v124 = v132;
            v125 = v133;
            v126 = v134;
            sub_2392688E8((uint64_t)&v119);
          }
          sub_239268764((uint64_t)&v119, (uint64_t)v118, &qword_25692B6D0);
          sub_239268764((uint64_t)v155, (uint64_t)&v119, &qword_25692B6C8);
          if (sub_239341D40((uint64_t)&v119) == 1)
            goto LABEL_45;
          v105 = v119;
          v106 = v120;
          v107 = v121;
          v108 = v122;
          v109 = v123;
          v110 = v124;
          v111 = v125;
          v112 = DWORD2(v125);
          v113 = v126;
          v68 = v128;
          v69 = v127;
          v114 = v127;
          v115 = v128;
          v66 = v130;
          v67 = v129;
          v116 = v129;
          v117 = v130;
          sub_239268764((uint64_t)v118, (uint64_t)&v92, &qword_25692B6D0);
          if (sub_239269494((uint64_t)&v92) == 1)
          {
LABEL_45:
            sub_239268764((uint64_t)v155, (uint64_t)&v92, &qword_25692B6C8);
            if (sub_239341D40((uint64_t)&v92) == 1)
            {
              sub_239268764((uint64_t)v118, (uint64_t)&v71, &qword_25692B6D0);
              if (sub_239269494((uint64_t)&v71) == 1)
              {
                type metadata accessor for OCCaptureData(0);
                if (!OCPointCloudCreateFromDenseDepth())
                  return v70;
              }
              else
              {
                v62 = v74;
                v63 = v73;
                v68 = v78;
                v69 = v71;
                v66 = v77;
                v67 = v72;
                v64 = v75;
                v65 = v76;
                type metadata accessor for OCCaptureData(0);
                if (!OCPointCloudCreateFromDenseDepthWithBoundingBox())
                  return v70;
              }
            }
            else
            {
              v68 = v102;
              v69 = v101;
              v66 = v104;
              v67 = v103;
              v79 = v92;
              v80 = v93;
              v81 = v94;
              v82 = v95;
              v83 = v96;
              v84 = v97;
              v85 = v98;
              v86 = v99;
              v87 = v100;
              v88 = v101;
              v89 = v102;
              v90 = v103;
              v91 = v104;
              type metadata accessor for OCCaptureData(0);
              if (!OCPointCloudCreateFromDenseDepthWithPlaneClassification())
                return v70;
            }
          }
          else
          {
            v64 = v93;
            v65 = v92;
            v62 = v95;
            v63 = v94;
            type metadata accessor for OCCaptureData(0);
            if (!OCPointCloudCreateFromDenseDepthWithPlaneClassificationAndBoundingBox())
              return v70;
          }
          v70 = 0;
          return 0;
        }
        __break(1u);
LABEL_81:
        __break(1u);
      }
      if (a2 != 3)
      {
        v45 = v18;
        v46 = v17;
        v47 = v45;
        v48 = sub_239275B74();
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, v48, v10);
        v49 = sub_239352098();
        v50 = sub_23935256C();
        if (os_log_type_enabled(v49, v50))
        {
          *(_QWORD *)&v69 = v46;
          v51 = swift_slowAlloc();
          *(_QWORD *)&v68 = v47;
          v52 = (uint8_t *)v51;
          v53 = swift_slowAlloc();
          *(_QWORD *)&v155[0] = v53;
          *(_DWORD *)v52 = 136380675;
          *(_QWORD *)&v119 = sub_23925F3EC(0xD00000000000008FLL, 0x8000000239360460, (uint64_t *)v155);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v49, v50, "ObjectCaptureSession.%{private}s: Invalid point type!", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v53, -1, -1);
          MEMORY[0x23B83BC04](v52, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        return 0;
      }
      v37 = v19;
      v38 = v18;
      LODWORD(v67) = v21;
      if ((v20 & 1) != 0)
        goto LABEL_81;
LABEL_32:
      *(_QWORD *)&v66 = v17;
      v41 = v38;
      LOBYTE(v155[0]) = BYTE4(a6) & 1;
      v42 = *(_QWORD *)(v37 + 16);
      if ((a6 & 0x100000000) != 0)
        goto LABEL_36;
      if (*(float *)&a6 < 0.0)
        goto LABEL_36;
      sub_239268764(a5, (uint64_t)&v146, &qword_25692B6D8);
      if ((v154 & 1) != 0)
        goto LABEL_36;
      v64 = v147;
      v65 = v146;
      v62 = v149;
      v63 = v148;
      v60 = v151;
      v61 = v150;
      v43 = v152;
      v44 = v153;
      sub_239268764(v68, (uint64_t)&v141, &qword_25692A8A0);
      if ((v145 & 1) != 0)
      {
LABEL_36:
        sub_239341D18((uint64_t)&v119);
      }
      else
      {
        v119 = v65;
        v120 = v64;
        v121 = v63;
        v122 = v62;
        v123 = v61;
        v124 = v60;
        *(_QWORD *)&v125 = v43;
        DWORD2(v125) = v44;
        LODWORD(v126) = a6;
        v127 = v141;
        v128 = v142;
        v129 = v143;
        v130 = v144;
        sub_239341D5C((uint64_t)&v119);
      }
      sub_239268764((uint64_t)&v119, (uint64_t)v155, &qword_25692B6C8);
      sub_239268764(v69, (uint64_t)&v136, &qword_25692A8A0);
      if ((v140 & 1) != 0
        || (v69 = v136,
            v64 = v138,
            v65 = v137,
            v63 = v139,
            sub_239268764(v68, (uint64_t)&v131, &qword_25692A8A0),
            (v135 & 1) != 0))
      {
        sub_2392677D0((uint64_t)&v119);
      }
      else
      {
        v119 = v69;
        v120 = v65;
        v121 = v64;
        v122 = v63;
        v123 = v131;
        v124 = v132;
        v125 = v133;
        v126 = v134;
        sub_2392688E8((uint64_t)&v119);
      }
      sub_239268764((uint64_t)&v119, (uint64_t)v118, &qword_25692B6D0);
      sub_239268764((uint64_t)v155, (uint64_t)&v119, &qword_25692B6C8);
      if (sub_239341D40((uint64_t)&v119) != 1)
      {
        v105 = v119;
        v106 = v120;
        v107 = v121;
        v108 = v122;
        v109 = v123;
        v110 = v124;
        v111 = v125;
        v112 = DWORD2(v125);
        v113 = v126;
        v68 = v128;
        v69 = v127;
        v114 = v127;
        v115 = v128;
        v64 = v130;
        v65 = v129;
        v116 = v129;
        v117 = v130;
        sub_239268764((uint64_t)v118, (uint64_t)&v92, &qword_25692B6D0);
        if (sub_239269494((uint64_t)&v92) != 1)
        {
          if (!HIDWORD(v42))
          {
            v60 = v94;
            v61 = v95;
            v62 = v92;
            v63 = v93;
            type metadata accessor for OCCaptureData(0);
            v56 = (void *)v66;
            if (!OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassificationAndBoundingBox())
              goto LABEL_66;
            goto LABEL_65;
          }
          goto LABEL_82;
        }
      }
      sub_239268764((uint64_t)v155, (uint64_t)&v92, &qword_25692B6C8);
      if (sub_239341D40((uint64_t)&v92) == 1)
      {
        sub_239268764((uint64_t)v118, (uint64_t)&v71, &qword_25692B6D0);
        v54 = sub_239269494((uint64_t)&v71);
        v55 = HIDWORD(v42);
        if (v54 == 1)
        {
          if (!v55)
          {
            type metadata accessor for OCCaptureData(0);
            v56 = (void *)v66;
            v57 = OCPointCloudCreateFromSparseAndDenseDepth();
            goto LABEL_64;
          }
        }
        else if (!v55)
        {
          v62 = v73;
          v63 = v74;
          v60 = v71;
          v61 = v72;
          v68 = v76;
          v69 = v75;
          v64 = v78;
          v65 = v77;
          type metadata accessor for OCCaptureData(0);
          v56 = (void *)v66;
          if (!OCPointCloudCreateFromSparseAndDenseDepthWithBoundingBox())
            goto LABEL_66;
          goto LABEL_65;
        }
LABEL_82:
        sub_23935283C();
        __break(1u);
        JUMPOUT(0x239318500);
      }
      v79 = v92;
      v80 = v93;
      v81 = v94;
      v82 = v95;
      v83 = v96;
      v84 = v97;
      v85 = v98;
      v86 = v99;
      v87 = v100;
      v68 = v102;
      v69 = v101;
      v88 = v101;
      v89 = v102;
      v64 = v104;
      v65 = v103;
      v90 = v103;
      v91 = v104;
      if (HIDWORD(v42))
        goto LABEL_82;
      type metadata accessor for OCCaptureData(0);
      v56 = (void *)v66;
      v57 = OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassification();
LABEL_64:
      if (v57)
LABEL_65:
        v70 = 0;
LABEL_66:

      return v70;
  }
}

void sub_239318514(double *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  float32x4_t *v31;
  float32x4_t v32;
  float32x4_t v33;
  float32x4_t v34;
  __CVBuffer *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  void *v72;
  void (*v73)(unint64_t, uint64_t);
  unint64_t v74;
  float32x4_t *v75;
  float32x4_t v76;
  float32x4_t v77;
  float32x4_t v78;
  float32x4_t v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  float32x4_t v99;
  float32x4_t v100;
  float32x4_t v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  float32x4_t v105;
  uint64_t v106;
  __n128 v107;
  double v108;
  uint64_t (*v109)(uint64_t, __n128, __n128, __n128, __n128, double);
  uint64_t v110;
  uint64_t v111;
  os_log_type_t v112;
  void *v113;
  const char *v114;
  uint64_t v115;
  __int128 *v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  ARPlaneAnchor *v122;
  simd_float4x4 *v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  void *v128;
  __int128 v129;
  ARPlaneExtent *v130;
  uint64_t v131;
  ARPlaneExtent *v132;
  uint64_t v133;
  __int128 *v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD v147[2];
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __n128 v152;
  __int128 v153;
  char *v154;
  __n128 v155;
  __int128 v156;
  __n128 v157;
  __n128 v158;
  float32x4_t *v159;
  uint64_t v160;
  float32x4_t v161;
  float32x4_t v162;
  float32x4_t v163;
  float32x4_t v164;
  double *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170[18];
  id v171[2];
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  float32x4_t v178;
  float32x4_t v179;
  float32x4_t v180;
  float32x4_t v181;
  char v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  char v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  char v195;

  v2 = v1;
  v4 = sub_239352674();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239352680();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v160 = (uint64_t)v147 - v12;
  v13 = sub_2393520B0();
  v166 = *(_QWORD *)(v13 - 8);
  v167 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v158.n128_u64[0] = (unint64_t)v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v147 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v155.n128_u64[0] = (unint64_t)v147 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v157.n128_u64[0] = (unint64_t)v147 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)&v156 = (char *)v147 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v154 = (char *)v147 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)&v153 = (char *)v147 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v147 - v29;
  v31 = (float32x4_t *)((char *)a1 + *(int *)(type metadata accessor for OCCaptureData(0) + 40));
  v32 = v31[4];
  v161 = v31[3];
  v162 = v32;
  v33 = v31[5];
  v159 = v31;
  v34 = v31[6];
  v163 = v33;
  v164 = v34;
  v165 = a1;
  v35 = (__CVBuffer *)*((_QWORD *)a1 + 1);
  CVPixelBufferGetWidth(v35);
  CVPixelBufferGetHeight(v35);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v2) + 0x420))(v171);
  if (v171[0] != (id)15)
  {
    sub_239331658(v171[0]);
    sub_239331658((id)0xF);
    sub_239268764((uint64_t)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v170, &qword_25692A908);
    sub_239268764((uint64_t)v170, (uint64_t)v171, &qword_25692A908);
    if (sub_239341CFC((uint64_t)v171) != 1)
    {
      v183 = 0u;
      v184 = 0u;
      v185 = 0u;
      v186 = 0u;
      v187 = 1;
      v188 = 0u;
      v189 = 0u;
      v190 = 0u;
      v191 = 0u;
      v192 = 0u;
      v193 = 0u;
      v195 = 1;
      v178.i8[0] = 1;
      v194 = 0u;
      v43 = v165;
      if (!sub_23931755C(v165, v172, (uint64_t)&v183, (uint64_t)&v183, (uint64_t)&v188, 0x100000000))
        return;
      swift_beginAccess();
      if (OCProxySurfaceExecutePipeline())
      {
        v44 = sub_239275B74();
        v46 = v166;
        v45 = v167;
        v47 = v158.n128_u64[0];
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v166 + 16))(v158.n128_u64[0], v44, v167);
        v48 = sub_239352098();
        v49 = sub_23935256C();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          v51 = swift_slowAlloc();
          v169 = v51;
          *(_DWORD *)v50 = 136380675;
          v168 = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, &v169);
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v48, v49, "ObjectCaptureSession.%{private}s: Failed to run voxel integration pipeline in scene mode!", v50, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v51, -1, -1);
          MEMORY[0x23B83BC04](v50, -1, -1);

          (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v158.n128_u64[0], v45);
        }
        else
        {

          (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v47, v45);
        }
        OCPointCloudRelease();
        return;
      }
      OCPointCloudRelease();
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_67;
  }
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  if ((*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) & 1) != 0)
  {
    v36 = sub_239275B74();
    v38 = v166;
    v37 = v167;
    (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v18, v36, v167);
    v39 = sub_239352098();
    v40 = sub_239352578();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = (void *)swift_slowAlloc();
      v171[0] = v42;
      *(_DWORD *)v41 = 136380675;
      v170[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, (uint64_t *)v171);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v39, v40, "ObjectCaptureSession.%{private}s: Waiting for corrected pose from mobileSfM!", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v42, -1, -1);
      MEMORY[0x23B83BC04](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v37);
    return;
  }
  v52 = *((unsigned __int8 *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions);
  if (v52 == 2)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if ((v52 & 1) != 0 && *((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) == 1)
  {
    v53 = sub_239275B74();
    v54 = v166;
    v55 = v167;
    (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v30, v53, v167);
    v56 = sub_239352098();
    v57 = sub_239352578();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (void *)swift_slowAlloc();
      v171[0] = v59;
      *(_DWORD *)v58 = 136380675;
      v170[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, (uint64_t *)v171);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v56, v57, "ObjectCaptureSession.%{private}s: Waiting for a new plane to be found under the object!", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v59, -1, -1);
      MEMORY[0x23B83BC04](v58, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v55);
    return;
  }
  v147[0] = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions;
  v60 = v2;
  v61 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform);
  v148 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 8);
  v62 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 16);
  *(_QWORD *)&v150 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 24);
  *(_QWORD *)&v149 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 32);
  v152.n128_u64[0] = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 40);
  *(_QWORD *)&v151 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 48);
  v158.n128_u64[0] = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 56);
  v63 = *((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64);
  v64 = v160;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v160, 1, 2, v4);
  sub_239268820(v64, (uint64_t)v11, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 2, v4))
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    v88 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v88 != *MEMORY[0x24BEDF330] && v88 != *MEMORY[0x24BEDF348])
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v89 = sub_239275B74();
      v91 = v166;
      v90 = v167;
      v92 = v155.n128_u64[0];
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v166 + 16))(v155.n128_u64[0], v89, v167);
      v93 = sub_239352098();
      v94 = sub_239352578();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc();
        v96 = (void *)swift_slowAlloc();
        v171[0] = v96;
        *(_DWORD *)v95 = 136380675;
        v170[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, (uint64_t *)v171);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v93, v94, "ObjectCaptureSession.%{private}s: Object tracking state is not acceptable!", v95, 0xCu);
        swift_arrayDestroy();
        v97 = v96;
LABEL_42:
        MEMORY[0x23B83BC04](v97, -1, -1);
        MEMORY[0x23B83BC04](v95, -1, -1);
      }
LABEL_43:

      v73 = *(void (**)(unint64_t, uint64_t))(v91 + 8);
      v74 = v92;
      v98 = v90;
LABEL_44:
      v73(v74, v98);
LABEL_45:
      sub_2392688AC(v160, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      return;
    }
  }
  if ((v63 & 1) != 0)
  {
    v65 = sub_239275B74();
    v67 = v166;
    v66 = v167;
    v68 = v157.n128_u64[0];
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v166 + 16))(v157.n128_u64[0], v65, v167);
    v69 = sub_239352098();
    v70 = sub_239352578();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      v72 = (void *)swift_slowAlloc();
      v171[0] = v72;
      *(_DWORD *)v71 = 136380675;
      v170[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, (uint64_t *)v171);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v69, v70, "ObjectCaptureSession.%{private}s: Object transform is not available in area mode.", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v72, -1, -1);
      MEMORY[0x23B83BC04](v71, -1, -1);

      v73 = *(void (**)(unint64_t, uint64_t))(v67 + 8);
      v74 = v157.n128_u64[0];
    }
    else
    {

      v73 = *(void (**)(unint64_t, uint64_t))(v67 + 8);
      v74 = v68;
    }
    v98 = v66;
    goto LABEL_44;
  }
  v75 = (float32x4_t *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM);
  if ((*((_BYTE *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM + 64) & 1) != 0)
  {
    if ((*((_BYTE *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) != 0)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    v76.i64[0] = v61;
    v76.i64[1] = v148;
    v77.i64[0] = v62;
    v77.i64[1] = v150;
    v78.i64[0] = v149;
    v78.i64[1] = v152.n128_u64[0];
    v79.i64[0] = v151;
    v79.i64[1] = v158.n128_u64[0];
    sub_2392DF290((uint64_t)v171, v161, v162, v163, v164, *(float32x4_t *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox), *(float32x4_t *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 16), *(float32x4_t *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 32), *(float32x4_t *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 48), v76, v77, v78, v79);
    v81 = v171[0];
    v80 = v171[1];
    v83 = v172;
    v82 = v173;
    v85 = v174;
    v84 = v175;
    v86 = v177;
    v87 = v176;
  }
  else
  {
    v99 = v75[1];
    v100 = v75[2];
    v101 = v75[3];
    v102 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v75, v161.f32[0]), v99, *(float32x2_t *)v161.f32, 1), v100, v161, 2), v101, v161, 3);
    v103 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v75, v162.f32[0]), v99, *(float32x2_t *)v162.f32, 1), v100, v162, 2), v101, v162, 3);
    v104 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v75, v163.f32[0]), v99, *(float32x2_t *)v163.f32, 1), v100, v163, 2), v101, v163, 3);
    v105 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(*v75, v164.f32[0]), v99, *(float32x2_t *)v164.f32, 1), v100, v164, 2), v101, v164, 3);
    v80 = (id)v102.i64[1];
    v81 = (id)v102.i64[0];
    v82 = v103.i64[1];
    v83 = v103.i64[0];
    v84 = v104.i64[1];
    v85 = v104.i64[0];
    v86 = v105.i64[1];
    v87 = v105.i64[0];
  }
  v106 = *(_QWORD *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager);
  if (!v106)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v2 = v60;
  v107.n128_u64[0] = (unint64_t)v81;
  v107.n128_u64[1] = (unint64_t)v80;
  v158 = v107;
  v107.n128_u64[0] = v83;
  v107.n128_u64[1] = v82;
  v157 = v107;
  v107.n128_u64[0] = v85;
  v107.n128_u64[1] = v84;
  v155 = v107;
  v107.n128_u64[0] = v87;
  v107.n128_u64[1] = v86;
  v152 = v107;
  v43 = v165;
  v108 = *v165;
  v109 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, double))(*(_QWORD *)v106 + 176);
  v110 = swift_retain();
  LOBYTE(v109) = v109(v110, v158, v157, v155, v152, v108);
  swift_release();
  if ((v109 & 1) != 0)
  {
    v111 = sub_239275B74();
    v91 = v166;
    v90 = v167;
    v92 = v156;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v166 + 16))(v156, v111, v167);
    v93 = sub_239352098();
    v112 = sub_239352578();
    if (!os_log_type_enabled(v93, v112))
      goto LABEL_43;
    v95 = (uint8_t *)swift_slowAlloc();
    v113 = (void *)swift_slowAlloc();
    v171[0] = v113;
    *(_DWORD *)v95 = 136380675;
    v170[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, (uint64_t *)v171);
    sub_2393526B0();
    v114 = "ObjectCaptureSession.%{private}s: Camera motion too fast, dropping frame!";
LABEL_41:
    _os_log_impl(&dword_23925B000, v93, v112, v114, v95, 0xCu);
    swift_arrayDestroy();
    v97 = v113;
    goto LABEL_42;
  }
  v115 = *((unsigned __int8 *)v60 + v147[0]);
  if (v115 == 2)
    goto LABEL_70;
  if ((v115 & 1) != 0)
  {
    v120 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane;
    v121 = *(void **)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (!v121)
    {
      v146 = sub_239275B74();
      v91 = v166;
      v90 = v167;
      v92 = v153;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v166 + 16))(v153, v146, v167);
      v93 = sub_239352098();
      v112 = sub_23935256C();
      if (!os_log_type_enabled(v93, v112))
        goto LABEL_43;
      v95 = (uint8_t *)swift_slowAlloc();
      v113 = (void *)swift_slowAlloc();
      v171[0] = v113;
      *(_DWORD *)v95 = 136380675;
      v170[0] = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, (uint64_t *)v171);
      sub_2393526B0();
      v114 = "ObjectCaptureSession.%{private}s: Voxel integration is paused till a new plane under the object is available";
      goto LABEL_41;
    }
    v122 = v121;
    getRotatedPlaneTransform(_:)(v123, v122);
    v156 = v124;
    v153 = v125;
    v150 = v127;
    v151 = v126;
    v128 = *(void **)((char *)v60 + v120);
    if (v128)
    {
      objc_msgSend(v128, sel_center);
      v149 = v129;
      v130 = -[ARPlaneAnchor planeExtent](v122, sel_planeExtent);
      -[ARPlaneExtent width](v130, sel_width);
      v148 = v131;

      v132 = -[ARPlaneAnchor planeExtent](v122, sel_planeExtent);
      -[ARPlaneExtent height](v132, sel_height);
      v147[0] = v133;

      sub_239268764((uint64_t)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v170, &qword_25692A908);
      sub_239268764((uint64_t)v170, (uint64_t)v171, &qword_25692A908);
      if (sub_239341CFC((uint64_t)v171) != 1)
      {
        v134 = (__int128 *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
        if ((*((_BYTE *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) == 0)
        {
          *(_QWORD *)&v135 = v148;
          *((_QWORD *)&v135 + 1) = LODWORD(v147[0]);
          v178 = v161;
          v179 = v162;
          v180 = v163;
          v181 = v164;
          v182 = 0;
          v136 = v134[1];
          v183 = *v134;
          v184 = v136;
          v137 = v134[3];
          v185 = v134[2];
          v186 = v137;
          v187 = 0;
          v188 = v156;
          v189 = v153;
          v190 = v151;
          v191 = v150;
          v192 = v149;
          v193 = v135;
          v194 = 0uLL;
          v195 = 0;
          LOBYTE(v169) = 0;
          v119 = sub_23931755C(v43, v172, (uint64_t)&v178, (uint64_t)&v183, (uint64_t)&v188, 1014350479);

          goto LABEL_57;
        }
LABEL_75:
        __break(1u);
        return;
      }
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  sub_239268764((uint64_t)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig, (uint64_t)v170, &qword_25692A908);
  sub_239268764((uint64_t)v170, (uint64_t)v171, &qword_25692A908);
  if (sub_239341CFC((uint64_t)v171) == 1)
    goto LABEL_71;
  v116 = (__int128 *)((char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  if ((*((_BYTE *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64) & 1) != 0)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v178 = v161;
  v179 = v162;
  v180 = v163;
  v181 = v164;
  v182 = 0;
  v117 = v116[1];
  v183 = *v116;
  v184 = v117;
  v118 = v116[3];
  v185 = v116[2];
  v186 = v118;
  v187 = 0;
  v188 = 0u;
  v189 = 0u;
  v190 = 0u;
  v191 = 0u;
  v192 = 0u;
  v193 = 0u;
  v195 = 1;
  LOBYTE(v169) = 1;
  v194 = 0u;
  v119 = sub_23931755C(v43, v172, (uint64_t)&v178, (uint64_t)&v183, (uint64_t)&v188, 0x100000000);
LABEL_57:
  if (!v119)
    goto LABEL_45;
  swift_beginAccess();
  if (OCProxySurfaceExecutePipeline())
  {
    v138 = sub_239275B74();
    v140 = v166;
    v139 = v167;
    v141 = v154;
    (*(void (**)(char *, uint64_t, uint64_t))(v166 + 16))(v154, v138, v167);
    v142 = sub_239352098();
    v143 = sub_23935256C();
    if (os_log_type_enabled(v142, v143))
    {
      v144 = (uint8_t *)swift_slowAlloc();
      v145 = swift_slowAlloc();
      v170[0] = v145;
      *(_DWORD *)v144 = 136380675;
      v169 = sub_23925F3EC(0xD000000000000017, 0x8000000239360440, v170);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v142, v143, "ObjectCaptureSession.%{private}s: Failed to run voxel integration pipeline in scanning mode!", v144, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v145, -1, -1);
      MEMORY[0x23B83BC04](v144, -1, -1);

      (*(void (**)(char *, uint64_t))(v140 + 8))(v154, v139);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v139);
    }
    OCPointCloudRelease();
    goto LABEL_45;
  }
  OCPointCloudRelease();
  sub_2392688AC(v160, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
LABEL_22:
  if ((*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime + 8) & 1) != 0
    || *v43 - *(double *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime) > 1.0)
  {
    sub_23931A4F4();
  }
}

void sub_23931985C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __n128 v39;
  unint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  _OWORD *v46;
  simd_float4 v47;
  simd_float4 v48;
  simd_float4 v49;
  simd_float4 v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  __n128 v58;
  uint64_t (*v59)();
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t (*v68)();
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  simd_float4 v75;
  simd_float4 v76;
  simd_float4 v77;
  simd_float4 v78;
  uint64_t DebugVoxelCloud;
  uint64_t v80;
  unsigned int v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t (*v88)();
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  simd_float4x4 *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  void *v98;
  void *v99;
  simd_float4 v100;
  simd_float4 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t DepthImage;
  id v107;
  uint64_t (*v108)();
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  void *v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  __n128 v131;
  __n128 v132;
  __n128 v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _OWORD v160[5];
  _BYTE v161[688];
  __n128 v162[43];
  uint64_t v163;
  _BYTE v164[688];
  CoreOC::OCVoxelCloud v165[8];
  _QWORD v166[86];
  id v167[87];

  MEMORY[0x24BDAC7A8](a1);
  v2 = v1;
  v149 = sub_2393520B0();
  v3 = *(_QWORD *)(v149 - 8);
  v4 = MEMORY[0x24BDAC7A8](v149);
  v141 = (char *)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v119 - v6;
  v8 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud);
  swift_beginAccess();
  v9 = *v8;
  if (*v8)
  {
    *(_QWORD *)&v148 = v7;
    v140 = v3;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    *(_QWORD *)&v147 = v8[4];
    *(_QWORD *)&v146 = v8[5];
    v13 = v8[6];
    v142 = v12;
    v143 = v13;
    v14 = v8[8];
    v15 = v8[9];
    v144 = v8[7];
    *(_QWORD *)&v145 = v14;
    v17 = v8[10];
    v16 = v8[11];
    swift_retain();
    swift_retain();
    swift_retain();
    if ((sub_2392FE71C() & 1) != 0)
    {
      v18 = v9;
    }
    else
    {
      v135 = v16;
      v136 = v15;
      v138 = v9;
      v139 = v17;
      v134 = v10;
      v137 = v11;
      (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v2) + 0x420))(v167);
      if (v167[0] == (id)15)
      {
        sub_239331658((id)0xF);
        sub_239331658((id)0xF);
        v19 = *v8;
        v133.n128_u64[0] = v8[1];
        v20 = v8[2];
        v132.n128_u64[0] = v8[3];
        v131.n128_u64[0] = v8[4];
        v21 = v8[5];
        v129 = v8[6];
        v130.n128_u64[0] = v21;
        v22 = v8[8];
        v128 = v8[7];
        v23 = v8[9];
        v24 = v8[10];
        v25 = (char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame;
        v26 = v8[11];
        swift_beginAccess();
        v27 = type metadata accessor for ObjectCaptureSession.Frame(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v25, 1, v27) == 1)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        v28 = &v25[*(int *)(v27 + 48)];
        v29 = *(_QWORD *)v28;
        v126 = *((_QWORD *)v28 + 1);
        v127 = v29;
        v30 = *((_QWORD *)v28 + 2);
        v124 = *((_QWORD *)v28 + 3);
        v125 = v30;
        v31 = *((_QWORD *)v28 + 4);
        v122 = *((_QWORD *)v28 + 5);
        v123 = v31;
        v32 = *((_QWORD *)v28 + 6);
        v120 = *((_QWORD *)v28 + 7);
        v121 = v32;
        v119 = *((_OWORD *)v28 + 4);
        v33 = v133.n128_u64[0];
        *(_QWORD *)v28 = v19;
        *((_QWORD *)v28 + 1) = v33;
        v34 = v132.n128_u64[0];
        *((_QWORD *)v28 + 2) = v20;
        *((_QWORD *)v28 + 3) = v34;
        v36 = v129;
        v35 = v130.n128_u64[0];
        *((_QWORD *)v28 + 4) = v131.n128_u64[0];
        *((_QWORD *)v28 + 5) = v35;
        v37 = v128;
        *((_QWORD *)v28 + 6) = v36;
        *((_QWORD *)v28 + 7) = v37;
        *((_QWORD *)v28 + 8) = v22;
        *((_QWORD *)v28 + 9) = v23;
        *((_QWORD *)v28 + 10) = v24;
        *((_QWORD *)v28 + 11) = v26;
        sub_2393310C8(v19);
        sub_239331104(v127);
        v7 = (char *)v148;
        v38 = v144;
      }
      else
      {
        sub_239331658(v167[0]);
        sub_239331658((id)0xF);
        v38 = v144;
        v7 = (char *)v148;
      }
      v39.n128_u64[0] = v147;
      v39.n128_u64[1] = v146;
      v133 = v39;
      v39.n128_u64[0] = v143;
      v39.n128_u64[1] = v38;
      v132 = v39;
      v39.n128_u64[0] = v145;
      v40 = v135;
      v39.n128_u64[1] = v136;
      v131 = v39;
      v39.n128_u64[0] = v139;
      v39.n128_u64[1] = v135;
      v130 = v39;
      if (*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData) == 1)
      {
        v41 = sub_2392FE204();
        v43 = v42;
        v44 = type metadata accessor for ObjectCaptureSession.Frame(0);
        v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
        if (v45(v43, 1, v44) == 1)
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        v46 = (_OWORD *)(v43 + *(int *)(v44 + 52));
        sub_239268764((uint64_t)v46, (uint64_t)v166, (uint64_t *)&unk_25692A8B0);
        sub_239268764((uint64_t)v166, (uint64_t)v167, (uint64_t *)&unk_25692A8B0);
        if (sub_239341CC4((uint64_t)v167) != 1)
        {
          sub_2392DFAF4(v138, 0, (simd_float4 *)v165);
          v47 = v165[0].transform.columns[0];
          v48 = v165[0].transform.columns[1];
          v49 = v165[0].transform.columns[2];
          v50 = v165[0].transform.columns[3];
          v46[5] = *(_OWORD *)&v165[0].voxels._rawValue;
          v46[6] = v47;
          v46[7] = v48;
          v46[8] = v49;
          v46[9] = v50;
          swift_bridgeObjectRelease();
        }
        ((void (*)(_BYTE *, _QWORD))v41)(v164, 0);
        v51 = sub_2392FE204();
        v53 = v52;
        if (v45(v52, 1, v44) == 1)
          goto LABEL_51;
        v54 = v53 + *(int *)(v44 + 52);
        sub_239268764(v54, (uint64_t)v164, (uint64_t *)&unk_25692A8B0);
        sub_239268764((uint64_t)v164, (uint64_t)v165, (uint64_t *)&unk_25692A8B0);
        if (sub_239341CC4((uint64_t)v165) != 1)
        {
          sub_2392E00E0(v138, 0, v162, v133, v132, v131, v130);
          v55 = v162[1];
          v56 = v162[2];
          v57 = v162[3];
          v58 = v162[4];
          *(__n128 *)(v54 + 256) = v162[0];
          *(__n128 *)(v54 + 272) = v55;
          *(__n128 *)(v54 + 288) = v56;
          *(__n128 *)(v54 + 304) = v57;
          *(__n128 *)(v54 + 320) = v58;
          swift_bridgeObjectRelease();
        }
        ((void (*)(_BYTE *, _QWORD))v51)(v161, 0);
        v59 = sub_2392FE204();
        v61 = v60;
        if (v45(v60, 1, v44) == 1)
          goto LABEL_53;
        v62 = v61 + *(int *)(v44 + 52);
        sub_239268764(v62, (uint64_t)v161, (uint64_t *)&unk_25692A8B0);
        sub_239268764((uint64_t)v161, (uint64_t)v162, (uint64_t *)&unk_25692A8B0);
        if (sub_239341CC4((uint64_t)v162) != 1)
        {
          v150.n128_u64[0] = v138;
          v150.n128_u64[1] = v134;
          v151 = v137;
          v152 = v147;
          v153 = v146;
          v154 = v143;
          v155 = v144;
          v159 = v40;
          v156 = v145;
          v157 = v136;
          v158 = v139;
          sub_2392E0374(&v150, (uint64_t)v160);
          v63 = *(_QWORD *)(v62 + 336);
          v64 = v160[1];
          v65 = v160[2];
          v66 = v160[3];
          v67 = v160[4];
          *(_OWORD *)(v62 + 336) = v160[0];
          *(_OWORD *)(v62 + 352) = v64;
          *(_OWORD *)(v62 + 368) = v65;
          *(_OWORD *)(v62 + 384) = v66;
          *(_OWORD *)(v62 + 400) = v67;
          sub_2393315F0(v63);
        }
        ((void (*)(uint64_t *, _QWORD))v59)(&v163, 0);
        v7 = (char *)v148;
      }
      if (*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) != 1)
      {
        sub_239331104(v138);
        v3 = v140;
        goto LABEL_26;
      }
      v68 = sub_2392FE204();
      v70 = v69;
      v71 = type metadata accessor for ObjectCaptureSession.Frame(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v70, 1, v71) == 1)
      {
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        return;
      }
      v72 = (_OWORD *)(v70 + *(int *)(v71 + 52));
      sub_239268764((uint64_t)v72, (uint64_t)v166, (uint64_t *)&unk_25692A8B0);
      sub_239268764((uint64_t)v166, (uint64_t)v167, (uint64_t *)&unk_25692A8B0);
      if (sub_239341CC4((uint64_t)v167) == 1)
      {
        ((void (*)(_BYTE *, _QWORD))v68)(v164, 0);
        v18 = v138;
      }
      else
      {
        v73 = v2;
        v74 = v138;
        sub_2392DFAF4(v138, 1, (simd_float4 *)v165);
        v75 = v165[0].transform.columns[0];
        v76 = v165[0].transform.columns[1];
        v77 = v165[0].transform.columns[2];
        v78 = v165[0].transform.columns[3];
        v72[27] = *(_OWORD *)&v165[0].voxels._rawValue;
        v72[28] = v75;
        v72[29] = v76;
        v72[30] = v77;
        v72[31] = v78;
        swift_bridgeObjectRelease();
        ((void (*)(_BYTE *, _QWORD))v68)(v164, 0);
        v18 = v74;
        v2 = v73;
      }
    }
    sub_239331104(v18);
    v3 = v140;
    v7 = (char *)v148;
  }
LABEL_26:
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels) == 1)
  {
    swift_beginAccess();
    DebugVoxelCloud = OCProxySurfaceGetDebugVoxelCloud();
    v80 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud;
    *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud) = DebugVoxelCloud;
    if (DebugVoxelCloud)
    {
      v81 = OCVoxelCloudSize();
      v82 = (char *)OCVoxelCloudVoxels();
      v83 = sub_239330418(v82, v81);
      OCVoxelCloudTransformMatrix();
      v147 = v85;
      v148 = v84;
      v145 = v87;
      v146 = v86;
      v88 = sub_2392FE204();
      v90 = v89;
      v91 = type metadata accessor for ObjectCaptureSession.Frame(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48))(v90, 1, v91) == 1)
      {
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v92 = v90 + *(int *)(v91 + 52);
      sub_239268764(v92, (uint64_t)v166, (uint64_t *)&unk_25692A8B0);
      sub_239268764((uint64_t)v166, (uint64_t)v167, (uint64_t *)&unk_25692A8B0);
      if (sub_239341CC4((uint64_t)v167) == 1)
      {
        swift_release();
      }
      else
      {
        OCVoxelCloud.init(voxels:transform:)(v165, (Swift::OpaquePointer)v83, v93);
        v100 = v165[0].transform.columns[0];
        v101 = v165[0].transform.columns[1];
        v102 = v165[0].transform.columns[2].i64[0];
        v103 = v165[0].transform.columns[3].i64[1];
        v104 = v165[0].transform.columns[2].i64[1];
        v105 = v165[0].transform.columns[3].i64[0];
        *(_QWORD *)(v92 + 160) = v165[0].voxels._rawValue;
        *(_QWORD *)(v92 + 168) = 0;
        *(simd_float4 *)(v92 + 176) = v100;
        *(simd_float4 *)(v92 + 192) = v101;
        *(_QWORD *)(v92 + 208) = v102;
        *(_QWORD *)(v92 + 216) = v104;
        *(_QWORD *)(v92 + 224) = v105;
        *(_QWORD *)(v92 + 232) = v103;
        swift_bridgeObjectRelease();
      }
      ((void (*)(_BYTE *, _QWORD))v88)(v164, 0);
    }
    else
    {
      v94 = sub_239275B74();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v7, v94, v149);
      v95 = sub_239352098();
      v96 = sub_23935256C();
      if (os_log_type_enabled(v95, v96))
      {
        v97 = (uint8_t *)swift_slowAlloc();
        v98 = (void *)swift_slowAlloc();
        *(_QWORD *)&v148 = v7;
        v99 = v98;
        v167[0] = v98;
        *(_DWORD *)v97 = 136380675;
        v166[0] = sub_23925F3EC(0xD000000000000010, 0x8000000239360420, (uint64_t *)v167);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v95, v96, "ObjectCaptureSession.%{private}s: Failed to get debug voxelcloud from voxel integration pipeline!", v97, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v99, -1, -1);
        MEMORY[0x23B83BC04](v97, -1, -1);

        (*(void (**)(_QWORD, uint64_t))(v3 + 8))(v148, v149);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v149);
      }
      *(_QWORD *)((char *)v2 + v80) = 0;
    }
  }
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth) != 1)
    return;
  swift_beginAccess();
  DepthImage = OCProxySurfaceCreateDepthImage();
  if (DepthImage)
  {
    v107 = (id)DepthImage;
    v108 = sub_2392FE204();
    v110 = v109;
    v111 = type metadata accessor for ObjectCaptureSession.Frame(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v110, 1, v111) != 1)
    {
      v112 = v110 + *(int *)(v111 + 52);
      sub_239268764(v112, (uint64_t)v166, (uint64_t *)&unk_25692A8B0);
      sub_239268764((uint64_t)v166, (uint64_t)v167, (uint64_t *)&unk_25692A8B0);
      if (sub_239341CC4((uint64_t)v167) != 1)
      {
        v113 = *(void **)(v112 + 240);
        *(_QWORD *)(v112 + 240) = v107;
        v107 = v107;

      }
      ((void (*)(CoreOC::OCVoxelCloud *, _QWORD))v108)(v165, 0);

      return;
    }
    goto LABEL_48;
  }
  v114 = sub_239275B74();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v141, v114, v149);
  v115 = sub_239352098();
  v116 = sub_23935256C();
  if (os_log_type_enabled(v115, v116))
  {
    v117 = (uint8_t *)swift_slowAlloc();
    v118 = (void *)swift_slowAlloc();
    v167[0] = v118;
    *(_DWORD *)v117 = 136380675;
    v166[0] = sub_23925F3EC(0xD000000000000010, 0x8000000239360420, (uint64_t *)v167);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v115, v116, "ObjectCaptureSession.%{private}s: Failed to get TSDF depth image from voxel integration pipeline!", v117, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v118, -1, -1);
    MEMORY[0x23B83BC04](v117, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v141, v149);
}

void sub_23931A4F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)();
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)();
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  swift_beginAccess();
  OCProxySurfaceCreateResults();
  v2 = v28;
  if (v26)
  {
    v3 = v29;
    v22 = v33;
    v23 = v31;
    v18 = v32;
    v19 = v30;
    v20 = v37;
    v21 = v35;
    v16 = v36;
    v17 = v34;
    type metadata accessor for OCDataBuffer();
    v15 = v26;
    v4 = sub_239351B44((uint64_t)v15);
    v25 = v0;
    v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud);
    swift_beginAccess();
    v6 = *v5;
    v24 = v27;
    *v5 = v4;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0;
    v5[4] = v19;
    v5[5] = v23;
    v5[6] = v18;
    v5[7] = v22;
    v5[8] = v17;
    v5[9] = v21;
    v5[10] = v16;
    v5[11] = v20;
    swift_retain();
    sub_239331104(v6);
    if (v24)
    {
      v7 = sub_239351B44((uint64_t)v24);
      v9 = sub_2392FEBB4();
      if (*v8)
      {
        v8[1] = v7;
        swift_retain();
        swift_release();
      }
      ((void (*)(id *, _QWORD))v9)(&v26, 0);
      swift_release();
    }
    if (v2)
    {
      v10 = v2;
      v11 = sub_239351B44((uint64_t)v10);
      v12 = v1;
      v14 = sub_2392FEBB4();
      if (*v13)
      {
        v13[2] = v11;
        swift_retain();
        swift_release();
      }
      ((void (*)(id *, _QWORD))v14)(&v26, 0);
      swift_release();

      swift_release();
    }
    else
    {

      swift_release();
      v12 = v25;
    }

    if (*(_BYTE *)(v12 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) == 1)
      *(_DWORD *)(v12 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage) = v3;
  }
  else
  {

  }
}

uint64_t sub_23931A79C(_QWORD *a1, float64x2_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int32x2_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31[10];
  id v32[8];
  char v33;

  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v31 - v14;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x420))(v32, v13);
  if (v32[0] == (id)14)
  {
    sub_239331658((id)0xE);
    sub_239331658((id)0xE);
    if ((*((_BYTE *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) == 0)
    {
      v16 = vmovn_s64(vcgtq_f64((float64x2_t)vdupq_n_s64(0x3EE4F8B588E368F1uLL), vabdq_f64(*(float64x2_t *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition), *a2)));
      if ((v16.i32[0] & v16.i32[1] & 1) != 0)
      {
        sub_239268764(a3, (uint64_t)v32, &qword_25692B7A0);
        if (v33 == 1)
        {
          v17 = sub_239275A60();
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v17, v8);
          v18 = sub_239352098();
          v19 = sub_23935256C();
          if (os_log_type_enabled(v18, v19))
          {
            v20 = (uint8_t *)swift_slowAlloc();
            v21 = swift_slowAlloc();
            v31[0] = v21;
            *(_DWORD *)v20 = 136380675;
            v31[9] = sub_23925F3EC(0xD000000000000059, 0x80000002393607E0, v31);
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v18, v19, "ObjectCaptureSession.%{private}s: Failed to set bounding box!", v20, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v21, -1, -1);
            MEMORY[0x23B83BC04](v20, -1, -1);
          }

          result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
        }
        else
        {
          sub_239268764(a3, (uint64_t)v31, &qword_25692B7A0);
          sub_2392FE858((uint64_t)v31);
          sub_239268764(a4, (uint64_t)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud, &qword_25692B7A8);
          sub_239342508(a4);
          result = swift_bridgeObjectRelease();
        }
        goto LABEL_12;
      }
    }
  }
  else
  {
    sub_239331658(v32[0]);
    sub_239331658((id)0xE);
  }
  v23 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v23, v8);
  v24 = sub_239352098();
  v25 = sub_23935256C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)v26 = 136380675;
    v31[0] = sub_23925F3EC(0xD000000000000059, 0x80000002393607E0, (uint64_t *)v32);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v24, v25, "ObjectCaptureSession.%{private}s: Not running bounding box detection because ObjectCaptureSession is not in detecting state or the tap position has changed!", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v27, -1, -1);
    MEMORY[0x23B83BC04](v26, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_12:
  v28 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager);
  if (v28)
  {
    v29 = *(void (**)(uint64_t))(*(_QWORD *)v28 + 296);
    v30 = swift_retain();
    v29(v30);
    return swift_release();
  }
  return result;
}

uint64_t sub_23931ABBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int64_t v36;

  v1 = sub_23925FB08(&qword_25692B7C0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v32 - v5;
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap);
  swift_beginAccess();
  v8 = *v7;
  v10 = (_QWORD *)(*v7 + 64);
  v9 = *v10;
  v34 = v7;
  v35 = v10;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v9;
  v14 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession;
  v36 = (unint64_t)(v11 + 63) >> 6;
  v33 = v36 - 1;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v13)
    goto LABEL_8;
LABEL_6:
  v19 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v20 = v19 | (v16 << 6);
  while (2)
  {
    v21 = *(_QWORD *)(v8 + 48);
    v22 = sub_239352020();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v4, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v20, v22);
    v23 = *(_QWORD *)(v8 + 56);
    v24 = sub_23925FB08(&qword_25692B7C8);
    v25 = *(void **)(v23 + 8 * v20);
    *(_QWORD *)&v4[*(int *)(v24 + 48)] = v25;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 0, 1, v24);
    v26 = v25;
    while (1)
    {
      sub_239268764((uint64_t)v4, (uint64_t)v6, &qword_25692B7C0);
      v31 = sub_23925FB08(&qword_25692B7C8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v6, 1, v31) == 1)
      {
        swift_release();
        *v34 = MEMORY[0x24BEE4B00];
        return swift_bridgeObjectRelease();
      }
      v17 = *(void **)&v6[*(int *)(v31 + 48)];
      objc_msgSend(*(id *)(v0 + v14), sel_removeAnchor_, v17);

      v18 = sub_239352020();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
      if (v13)
        goto LABEL_6;
LABEL_8:
      v27 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v27 < v36)
      {
        v28 = v35[v27];
        if (v28)
          goto LABEL_11;
        v29 = v16 + 2;
        ++v16;
        if (v27 + 1 < v36)
        {
          v28 = v35[v29];
          if (v28)
            goto LABEL_14;
          v16 = v27 + 1;
          if (v27 + 2 < v36)
          {
            v28 = v35[v27 + 2];
            if (v28)
            {
              v27 += 2;
              goto LABEL_11;
            }
            v29 = v27 + 3;
            v16 = v27 + 2;
            if (v27 + 3 < v36)
              break;
          }
        }
      }
LABEL_25:
      v30 = sub_23925FB08(&qword_25692B7C8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
      v13 = 0;
    }
    v28 = v35[v29];
    if (v28)
    {
LABEL_14:
      v27 = v29;
LABEL_11:
      v13 = (v28 - 1) & v28;
      v20 = __clz(__rbit64(v28)) + (v27 << 6);
      v16 = v27;
      continue;
    }
    break;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v36)
    {
      v16 = v33;
      goto LABEL_25;
    }
    v28 = v35[v27];
    ++v29;
    if (v28)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23931AEF8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = sub_239352170();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2393521C4();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v33 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2393520B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v16 = sub_239352098();
  v17 = sub_239352578();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v31 = v12;
    v19 = v18;
    v20 = swift_slowAlloc();
    v32 = v7;
    v29 = v20;
    aBlock[0] = v20;
    *(_DWORD *)v19 = 136381187;
    v37 = sub_23925F3EC(0xD000000000000037, 0x800000023935E760, aBlock);
    v30 = v11;
    sub_2393526B0();
    *(_WORD *)(v19 + 12) = 1026;
    LODWORD(v37) = a2 & 1;
    sub_2393526B0();
    *(_WORD *)(v19 + 18) = 2050;
    v37 = a1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v16, v17, "ObjectCaptureSession.%{private}s: Received flippable signal %{BOOL,public}d for sample id %{public}llu", (uint8_t *)v19, 0x1Cu);
    v21 = v29;
    swift_arrayDestroy();
    v7 = v32;
    MEMORY[0x23B83BC04](v21, -1, -1);
    MEMORY[0x23B83BC04](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v3;
  *(_QWORD *)(v22 + 24) = a1;
  *(_BYTE *)(v22 + 32) = a2 & 1;
  aBlock[4] = (uint64_t)sub_239336640;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC6D70;
  v23 = _Block_copy(aBlock);
  v24 = v3;
  v25 = v33;
  sub_239352188();
  v37 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  v26 = v36;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v25, v26, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v35);
  return swift_release();
}

void sub_23931B2E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v6 = MEMORY[0x23B83BC88](a1 + 16);
  if (v6)
  {
    v7 = (_BYTE *)v6;
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v14 = v12;
      *(_DWORD *)v11 = 136380675;
      v13[1] = sub_23925F3EC(0xD000000000000023, 0x8000000239360680, &v14);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: Pose correction timer has expired, using the last consistent pose before pause.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v12, -1, -1);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;

  }
}

uint64_t sub_23931B4B4@<X0>(uint64_t a1@<X0>, int8x16_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int8x16_t *v50;
  BOOL v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  unint64_t v63;
  int64_t v64;
  int64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  int8x16_t *v74;
  int8x16_t v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  unsigned int v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  float32x4_t *v106;
  uint64_t v107;
  float v108;
  float v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  __int32 v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  unint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  __int32 v136;
  unint64_t v137;
  uint64_t v138;
  _BOOL8 v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  __int32 v158;
  uint64_t v159;
  _BOOL8 v160;
  uint64_t v161;
  unint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int8x16_t v169;
  int8x16_t v170;
  int8x16_t v171;
  uint64_t v172;
  uint64_t v173;
  int64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, uint64_t);
  unint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  float32x4_t v184;
  float32x4_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int8x16_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t result;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  uint8_t *v202;
  uint64_t v203;
  uint64_t v204;
  int8x16_t *v205;
  int8x16_t v206;
  int8x16_t v207;
  unint64_t v208;
  uint64_t v209;
  float32x4_t v210;
  float32x4_t v211;
  uint64_t v212;
  float32x4_t v213;
  unsigned int (*v214)(unint64_t, uint64_t, uint64_t);
  float32x4_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  int64_t v231;
  uint64_t v232;
  int *v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  void (*v240)(uint64_t, uint64_t);
  float32x4_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  int8x16_t *v246;
  int8x16_t v247;
  int8x16_t v248;
  int8x16_t v249;
  int8x16_t v250;
  uint64_t v251;
  unint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  int8x16_t v260;
  int8x16_t v261;
  int8x16_t v262;
  simd_float4 v263;
  uint64_t v264;
  uint64_t v265[7];
  uint64_t v266;
  simd_float4x4 v267;
  simd_float4x4 v268;

  v246 = a2;
  v244 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v243 = *(_QWORD *)(v244 - 8);
  MEMORY[0x24BDAC7A8](v244);
  v217 = (uint64_t)&v208 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v5 = MEMORY[0x24BDAC7A8](v233);
  v224 = (unint64_t)&v208 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v229 = (uint64_t)&v208 - v7;
  v8 = sub_23925FB08(&qword_25692B620);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v226 = (uint64_t)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v225 = (uint64_t)&v208 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v228 = (uint64_t)&v208 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v216 = (uint64_t)&v208 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v218 = (uint64_t)&v208 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v230 = (unint64_t)&v208 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v242 = (uint64_t)&v208 - v21;
  v22 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v22);
  v253 = (char *)&v208 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_239352020();
  v257 = *(_QWORD *)(v256 - 8);
  v24 = MEMORY[0x24BDAC7A8](v256);
  v236 = (uint64_t)&v208 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v235 = (char *)&v208 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v234 = (char *)&v208 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v219 = (unint64_t)&v208 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v221 = (char *)&v208 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v220 = (char *)&v208 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v227 = (uint64_t)&v208 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v223 = (char *)&v208 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v222 = (char *)&v208 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v252 = (unint64_t)&v208 - v42;
  v43 = sub_2393520B0();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v237 = (char *)&v208 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v208 - v48;
  v50 = (int8x16_t *)MEMORY[0x24BDAEE00];
  v259 = v2;
  v258 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM;
  v51 = *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) == 1;
  v239 = v47;
  v238 = v44;
  if (v51)
  {
    v52 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v49, v52, v43);
    v53 = sub_239352098();
    v54 = sub_239352578();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v266 = v56;
      *(_DWORD *)v55 = 136380675;
      v265[6] = sub_23925F3EC(0xD000000000000020, 0x80000002393607B0, &v266);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v53, v54, "ObjectCaptureSession.%{private}s: Skipping shots before pause.", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v56, -1, -1);
      MEMORY[0x23B83BC04](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v238 + 8))(v49, v239);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
    }
  }
  v250 = *v50;
  v249 = v50[1];
  v248 = v50[2];
  v247 = v50[3];
  v57 = a1 + 64;
  v58 = 1 << *(_BYTE *)(a1 + 32);
  v59 = -1;
  if (v58 < 64)
    v59 = ~(-1 << v58);
  v60 = v59 & *(_QWORD *)(a1 + 64);
  v61 = (uint64_t *)(v259 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap);
  v254 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
  v62 = (uint64_t *)(v259 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap);
  v63 = v259 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v255 = v62;
  swift_beginAccess();
  v245 = (uint64_t *)v63;
  swift_beginAccess();
  v251 = 0;
  v64 = 0;
  v65 = (unint64_t)(v58 + 63) >> 6;
LABEL_9:
  v66 = (uint64_t)v253;
  while (1)
  {
    if (v60)
    {
      v67 = __clz(__rbit64(v60));
      v60 &= v60 - 1;
      v68 = v67 | (v64 << 6);
      goto LABEL_26;
    }
    v69 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_113;
    }
    if (v69 >= v65)
      goto LABEL_107;
    v70 = *(_QWORD *)(v57 + 8 * v69);
    ++v64;
    if (!v70)
    {
      v64 = v69 + 1;
      if (v69 + 1 >= v65)
        goto LABEL_107;
      v70 = *(_QWORD *)(v57 + 8 * v64);
      if (!v70)
      {
        v64 = v69 + 2;
        if (v69 + 2 >= v65)
          goto LABEL_107;
        v70 = *(_QWORD *)(v57 + 8 * v64);
        if (!v70)
          break;
      }
    }
LABEL_25:
    v60 = (v70 - 1) & v70;
    v68 = __clz(__rbit64(v70)) + (v64 << 6);
LABEL_26:
    v72 = *v61;
    if (*(_QWORD *)(*v61 + 16))
    {
      v73 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v68);
      v74 = (int8x16_t *)(*(_QWORD *)(a1 + 56) + (v68 << 6));
      v75 = *v74;
      v262 = v74[1];
      v263 = (simd_float4)v75;
      v261 = v74[2];
      v260 = v74[3];
      v76 = sub_2392C01BC(v73);
      if ((v77 & 1) != 0
        && *(_BYTE *)(*(_QWORD *)(v72 + 56) + v76) == 1
        && (*(_BYTE *)(v259 + v258) != 1 || v73 >= *(_QWORD *)(v259 + v254)))
      {
        v78 = *v255;
        if (*(_QWORD *)(*v255 + 16) && (v79 = sub_2392C01BC(v73), (v80 & 1) != 0))
        {
          v81 = *(_QWORD *)(v78 + 56);
          v82 = v257;
          v240 = *(void (**)(uint64_t, uint64_t))(v257 + 72);
          v83 = v256;
          v241.i64[0] = *(_QWORD *)(v257 + 16);
          ((void (*)(uint64_t, unint64_t, uint64_t))v241.i64[0])(v66, v81 + (_QWORD)v240 * v79, v256);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v66, 0, 1, v83);
          v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
          v63 = v252;
          if (v84(v66, 1, v83) == 1)
            goto LABEL_38;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v257 + 32))(v63, v66, v83);
          v85 = *v245;
          if (!*(_QWORD *)(*v245 + 16))
          {
            v89 = v242;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v243 + 56))(v242, 1, 1, v244);
LABEL_106:
            sub_23925FE28(v89, &qword_25692B620);
            (*(void (**)(unint64_t, uint64_t))(v257 + 8))(v63, v256);
            goto LABEL_9;
          }
          v231 = v65;
          v232 = v57;
          swift_bridgeObjectRetain();
          v86 = sub_239292F4C(v63);
          v88 = v243;
          if ((v87 & 1) != 0)
          {
            v89 = v242;
            sub_239268820(*(_QWORD *)(v85 + 56) + *(_QWORD *)(v243 + 72) * v86, v242, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
            v91 = v89;
            v92 = 0;
          }
          else
          {
            v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v243 + 56);
            v89 = v242;
            v91 = v242;
            v92 = 1;
          }
          v93 = v244;
          v215.i64[0] = (uint64_t)v90;
          v90(v91, v92, 1, v244);
          swift_bridgeObjectRelease();
          v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
          v95 = v94(v89, 1, v93);
          v57 = v232;
          v65 = v231;
          if (v95 == 1)
            goto LABEL_106;
          v214 = (unsigned int (*)(unint64_t, uint64_t, uint64_t))v94;
          sub_23925FE28(v89, &qword_25692B620);
          v96 = *v245;
          if (!*(_QWORD *)(*v245 + 16))
            goto LABEL_118;
          swift_bridgeObjectRetain();
          v97 = sub_239292F4C(v63);
          v66 = (uint64_t)v253;
          if ((v98 & 1) != 0)
          {
            v99 = v230;
            sub_239268820(*(_QWORD *)(v96 + 56) + *(_QWORD *)(v243 + 72) * v97, v230, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v100 = 0;
          }
          else
          {
            v100 = 1;
            v99 = v230;
          }
          v101 = v99;
          v102 = v244;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v215.i64[0])(v101, v100, 1, v244);
          v103 = v102;
          swift_bridgeObjectRelease();
          v63 = v230;
          if (v214(v230, 1, v103) == 1)
            goto LABEL_119;
          v104 = v63 + *(int *)(v103 + 20);
          v105 = v229;
          sub_239268820(v104, v229, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
          sub_2392688AC(v63, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          v212 = v233[11];
          if (*(_QWORD *)(*(_QWORD *)(v105 + v212) + 16) > 1uLL)
          {
            v107 = v256;
            goto LABEL_72;
          }
          v106 = (float32x4_t *)(v105 + v233[10]);
          v107 = v256;
          if ((v106[4].i8[0] & 1) != 0)
            goto LABEL_72;
          v210 = *v106;
          v211 = v106[1];
          v213 = v106[2];
          v215 = v106[3];
          v267.columns[1] = (simd_float4)v262;
          v267.columns[0] = v263;
          v267.columns[2] = (simd_float4)v261;
          v267.columns[3] = (simd_float4)v260;
          v268 = __invert_f4(v267);
          v210 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v268.columns[0], v210.f32[0]), (float32x4_t)v268.columns[1], *(float32x2_t *)v210.f32, 1), (float32x4_t)v268.columns[2], v210, 2), (float32x4_t)v268.columns[3], v210, 3);
          v211 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v268.columns[0], v211.f32[0]), (float32x4_t)v268.columns[1], *(float32x2_t *)v211.f32, 1), (float32x4_t)v268.columns[2], v211, 2), (float32x4_t)v268.columns[3], v211, 3);
          v213 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v268.columns[0], v213.f32[0]), (float32x4_t)v268.columns[1], *(float32x2_t *)v213.f32, 1), (float32x4_t)v268.columns[2], v213, 2), (float32x4_t)v268.columns[3], v213, 3);
          v215 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v268.columns[0], v215.f32[0]), (float32x4_t)v268.columns[1], *(float32x2_t *)v215.f32, 1), (float32x4_t)v268.columns[2], v215, 2), (float32x4_t)v268.columns[3], v215, 3);
          v108 = sub_2392E10A0(v210, *(int32x2_t *)v211.f32, (int32x4_t)v213);
          v109 = sub_2392E1104(*(double *)v210.i64, *(double *)v211.i64, *(double *)v213.i64, v215);
          ((void (*)(char *, unint64_t, uint64_t))v241.i64[0])(v222, v252, v107);
          v110 = v107;
          v111 = v245;
          swift_beginAccess();
          ((void (*)(char *, char *, uint64_t))v241.i64[0])(v223, v222, v110);
          v215.i32[0] = swift_isUniquelyReferenced_nonNull_native();
          ((void (*)(uint64_t, char *, uint64_t))v241.i64[0])(v227, v223, v110);
          v264 = *v111;
          v112 = v264;
          *v111 = 0x8000000000000000;
          v63 = sub_239292F4C(v227);
          v114 = *(_QWORD *)(v112 + 16);
          v115 = (v113 & 1) == 0;
          v116 = v114 + v115;
          if (__OFADD__(v114, v115))
            goto LABEL_116;
          if (*(_QWORD *)(v112 + 24) >= v116)
          {
            v119 = v243;
            if ((v215.i8[0] & 1) != 0)
              goto LABEL_55;
            v213.i32[0] = v113;
            sub_23932EB80();
            LOBYTE(v113) = v213.i8[0];
          }
          else
          {
            v213.i32[0] = v113;
            sub_23932CCB8(v116, v215.i32[0]);
            v117 = sub_239292F4C(v227);
            v118 = v113 & 1;
            LOBYTE(v113) = v213.i8[0];
            if ((v213.i8[0] & 1) != v118)
              goto LABEL_125;
            v63 = v117;
          }
          v119 = v243;
LABEL_55:
          if ((v113 & 1) == 0)
            goto LABEL_123;
          v120 = *(_QWORD *)(v264 + 56);
          v209 = *(_QWORD *)(v119 + 72);
          v213.i64[0] = v63;
          v121 = v120 + v209 * v63;
          v122 = v119;
          v123 = v218;
          sub_2392C4FE0(v121, v218, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          v124 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56);
          v125 = v244;
          v215.i64[0] = (uint64_t)v124;
          v124(v123, 0, 1, v244);
          v126 = v123 + *(int *)(v125 + 20);
          v210.i64[0] = v233[11];
          v127 = *(char **)(v126 + v210.i64[0]);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v211.i64[0] = v126;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v127 = sub_239281EC4(0, *((_QWORD *)v127 + 2) + 1, 1, v127);
          v130 = *((_QWORD *)v127 + 2);
          v129 = *((_QWORD *)v127 + 3);
          v131 = v130 + 1;
          if (v130 >= v129 >> 1)
          {
            v208 = v130 + 1;
            v192 = sub_239281EC4((char *)(v129 > 1), v130 + 1, 1, v127);
            v131 = v208;
            v127 = v192;
          }
          *((_QWORD *)v127 + 2) = v131;
          *(float *)&v127[4 * v130 + 32] = v108;
          *(_QWORD *)(v211.i64[0] + v210.i64[0]) = v127;
          v132 = v218;
          sub_239330210(v218, 1, &v264, v213.u64[0], v227);
          sub_23925FE28(v132, &qword_25692B620);
          v133 = *(void (**)(uint64_t, uint64_t))(v257 + 8);
          v134 = v256;
          v133(v227, v256);
          *v245 = v264;
          v133((uint64_t)v223, v134);
          v211.i64[0] = (uint64_t)v133;
          v133((uint64_t)v222, v134);
          swift_endAccess();
          ((void (*)(char *, unint64_t, uint64_t))v241.i64[0])(v220, v252, v134);
          swift_beginAccess();
          ((void (*)(char *, char *, uint64_t))v241.i64[0])(v221, v220, v134);
          v213.i32[0] = swift_isUniquelyReferenced_nonNull_native();
          v63 = v219;
          ((void (*)(unint64_t, char *, uint64_t))v241.i64[0])(v219, v221, v134);
          v264 = *v245;
          v135 = v264;
          *v245 = 0x8000000000000000;
          v137 = sub_239292F4C(v63);
          v138 = *(_QWORD *)(v135 + 16);
          v139 = (v136 & 1) == 0;
          v140 = v138 + v139;
          if (__OFADD__(v138, v139))
            goto LABEL_117;
          v63 = v244;
          if (*(_QWORD *)(v135 + 24) >= v140)
          {
            if ((v213.i8[0] & 1) != 0)
            {
              if ((v136 & 1) == 0)
                goto LABEL_124;
            }
            else
            {
              v213.i64[0] = v137;
              v210.i32[0] = v136;
              sub_23932EB80();
              v137 = v213.i64[0];
              if ((v210.i8[0] & 1) == 0)
                goto LABEL_124;
            }
          }
          else
          {
            v210.i32[0] = v136;
            sub_23932CCB8(v140, v213.i32[0]);
            v141 = sub_239292F4C(v219);
            if ((v210.i8[0] & 1) != (v142 & 1))
              goto LABEL_125;
            v137 = v141;
            if ((v210.i8[0] & 1) == 0)
              goto LABEL_124;
          }
          v143 = *(_QWORD *)(v264 + 56);
          v213.i64[0] = v137;
          v144 = v216;
          sub_2392C4FE0(v143 + v137 * v209, v216, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v215.i64[0])(v144, 0, 1, v63);
          v145 = v144 + *(int *)(v63 + 20);
          v209 = v233[12];
          v146 = *(char **)(v145 + v209);
          v147 = swift_isUniquelyReferenced_nonNull_native();
          v210.i64[0] = v145;
          if ((v147 & 1) == 0)
            v146 = sub_239281EC4(0, *((_QWORD *)v146 + 2) + 1, 1, v146);
          v149 = *((_QWORD *)v146 + 2);
          v148 = *((_QWORD *)v146 + 3);
          v150 = v149 + 1;
          if (v149 >= v148 >> 1)
          {
            v208 = v149 + 1;
            v193 = sub_239281EC4((char *)(v148 > 1), v149 + 1, 1, v146);
            v150 = v208;
            v146 = v193;
          }
          *((_QWORD *)v146 + 2) = v150;
          *(float *)&v146[4 * v149 + 32] = v109;
          *(_QWORD *)(v210.i64[0] + v209) = v146;
          v151 = v216;
          v152 = v219;
          sub_239330210(v216, 1, &v264, v213.u64[0], v219);
          sub_23925FE28(v151, &qword_25692B620);
          v153 = v152;
          v107 = v256;
          v154 = (void (*)(char *, uint64_t))v211.i64[0];
          ((void (*)(uint64_t, uint64_t))v211.i64[0])(v153, v256);
          *v245 = v264;
          v154(v221, v107);
          v154(v220, v107);
          swift_endAccess();
LABEL_72:
          ((void (*)(char *, unint64_t, uint64_t))v241.i64[0])(v234, v252, v107);
          v155 = v107;
          v156 = v245;
          swift_beginAccess();
          ((void (*)(char *, char *, uint64_t))v241.i64[0])(v235, v234, v155);
          v213.i32[0] = swift_isUniquelyReferenced_nonNull_native();
          ((void (*)(uint64_t, char *, uint64_t))v241.i64[0])(v236, v235, v155);
          v264 = *v156;
          v157 = v264;
          *v156 = 0x8000000000000000;
          v63 = sub_239292F4C(v236);
          v159 = *(_QWORD *)(v157 + 16);
          v160 = (v158 & 1) == 0;
          v161 = v159 + v160;
          if (__OFADD__(v159, v160))
            goto LABEL_114;
          if (*(_QWORD *)(v157 + 24) >= v161)
          {
            if ((v213.i8[0] & 1) == 0)
            {
              v241.i32[0] = v158;
              sub_23932EB80();
              LOBYTE(v158) = v241.i8[0];
            }
          }
          else
          {
            v241.i32[0] = v158;
            sub_23932CCB8(v161, v213.i32[0]);
            v162 = sub_239292F4C(v236);
            v163 = v158 & 1;
            LOBYTE(v158) = v241.i8[0];
            if ((v241.i8[0] & 1) != v163)
              goto LABEL_125;
            v63 = v162;
          }
          if ((v158 & 1) == 0)
            goto LABEL_120;
          v213.i64[0] = v264;
          v164 = *(_QWORD *)(v264 + 56);
          v210.i64[0] = *(_QWORD *)(v243 + 72);
          v211.i64[0] = v210.i64[0] * v63;
          v165 = v164 + v210.i64[0] * v63;
          v241.i64[0] = v63;
          v166 = v228;
          sub_2392C4FE0(v165, v228, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          v167 = v244;
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v215.i64[0])(v166, 0, 1, v244);
          v168 = v166 + *(int *)(v167 + 20) + v233[10];
          v170 = v262;
          v169 = (int8x16_t)v263;
          *(_QWORD *)v168 = v263.i64[0];
          *(int8x16_t *)(v168 + 8) = vextq_s8(v169, v170, 8uLL);
          v171 = v261;
          *(int8x16_t *)(v168 + 24) = vextq_s8(v170, v261, 8uLL);
          v170.i64[1] = v260.i64[1];
          *(int8x16_t *)(v168 + 40) = vextq_s8(v171, v260, 8uLL);
          *(_QWORD *)(v168 + 56) = v170.i64[1];
          *(_BYTE *)(v168 + 64) = 0;
          v172 = v166;
          v173 = v225;
          sub_23926059C(v172, v225, &qword_25692B620);
          if (v214(v173, 1, v167) == 1)
          {
            sub_23925FE28(v173, &qword_25692B620);
            v213.i64[0] = v264;
            v174 = v241.i64[0];
            v175 = v256;
            swift_arrayDestroy();
            sub_23932DDD4(v174, v213.i64[0]);
          }
          else
          {
            v176 = v217;
            sub_2392C4FE0(v173, v217, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            sub_2392C4FE0(v176, *(_QWORD *)(v213.i64[0] + 56) + v211.i64[0], type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v175 = v256;
          }
          sub_23925FE28(v228, &qword_25692B620);
          v177 = *(void (**)(uint64_t, uint64_t))(v257 + 8);
          v177(v236, v175);
          *v245 = v264;
          v177((uint64_t)v235, v175);
          v240 = v177;
          v177((uint64_t)v234, v175);
          swift_endAccess();
          v63 = *v245;
          if (!*(_QWORD *)(*v245 + 16))
            goto LABEL_121;
          swift_bridgeObjectRetain();
          v178 = sub_239292F4C(v252);
          v241.i64[0] = v63;
          if ((v179 & 1) != 0)
          {
            v180 = v226;
            sub_239268820(*(_QWORD *)(v63 + 56) + v178 * v210.i64[0], v226, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v181 = 0;
          }
          else
          {
            v181 = 1;
            v180 = v226;
          }
          v63 = v244;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v215.i64[0])(v180, v181, 1, v244);
          swift_bridgeObjectRelease();
          if (v214(v180, 1, v63) == 1)
            goto LABEL_122;
          v182 = v180 + *(int *)(v63 + 20);
          v63 = v224;
          sub_239268820(v182, v224, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
          sub_2392688AC(v180, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          v183 = v229;
          sub_239331084(v63, v229, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
          if (v251 >= v73 || (v186 = *(_QWORD *)(v183 + v212), *(_QWORD *)(v186 + 16) != 2))
          {
            v189 = v252;
LABEL_94:
            v240(v189, v256);
            goto LABEL_95;
          }
          v187 = *(_QWORD *)(v183 + v233[12]);
          v188 = *(_QWORD *)(v187 + 16);
          v189 = v252;
          if (!v188)
            goto LABEL_115;
          if (*(float *)(v186 + 32) > 1.0)
          {
            if (v188 == 1)
              goto LABEL_115;
            goto LABEL_94;
          }
          if (v188 == 1)
            goto LABEL_115;
          if (*(float *)(v187 + 32) > 0.005 || *(float *)(v186 + 36) > 1.0)
            goto LABEL_94;
          v185.i32[0] = *(_DWORD *)(v187 + 36);
          v215 = v185;
          v184.i32[0] = 1000593162;
          v241 = v184;
          v190 = (int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgeq_f32(v184, v185), 0);
          v250 = vbslq_s8(v190, (int8x16_t)v263, v250);
          v249 = vbslq_s8(v190, v262, v249);
          v248 = vbslq_s8(v190, v261, v248);
          v247 = vbslq_s8(v190, v260, v247);
          v240(v252, v256);
          v191 = v251;
          if (v215.f32[0] <= v241.f32[0])
            v191 = v73;
          v251 = v191;
LABEL_95:
          sub_2392688AC(v183, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v257 + 56))(v66, 1, 1, v256);
LABEL_38:
          sub_23925FE28(v66, &qword_2569281C0);
        }
      }
    }
  }
  v71 = v69 + 3;
  if (v71 >= v65)
  {
LABEL_107:
    result = swift_release();
    v195 = v251;
    if (!v251)
    {
      v196 = sub_239275A60();
      v197 = v238;
      v198 = v237;
      v199 = v239;
      (*(void (**)(char *, uint64_t, uint64_t))(v238 + 16))(v237, v196, v239);
      v200 = sub_239352098();
      v201 = sub_23935256C();
      if (os_log_type_enabled(v200, v201))
      {
        v202 = (uint8_t *)swift_slowAlloc();
        v203 = swift_slowAlloc();
        v265[0] = v203;
        *(_DWORD *)v202 = 136380675;
        v264 = sub_23925F3EC(0xD000000000000020, 0x80000002393607B0, v265);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v200, v201, "ObjectCaptureSession.%{private}s: mobileSfM pose for the new camera shot is not consistent.", v202, 0xCu);
        swift_arrayDestroy();
        v204 = v203;
        v195 = v251;
        MEMORY[0x23B83BC04](v204, -1, -1);
        MEMORY[0x23B83BC04](v202, -1, -1);
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v197 + 8))(v198, v199);
    }
    v205 = v246;
    v246->i64[0] = v195;
    v206 = v249;
    v205[1] = v250;
    v205[2] = v206;
    v207 = v247;
    v205[3] = v248;
    v205[4] = v207;
    return result;
  }
  v70 = *(_QWORD *)(v57 + 8 * v71);
  if (v70)
  {
    v64 = v71;
    goto LABEL_25;
  }
  while (1)
  {
    v64 = v71 + 1;
    if (__OFADD__(v71, 1))
      break;
    if (v64 >= v65)
      goto LABEL_107;
    v70 = *(_QWORD *)(v57 + 8 * v64);
    ++v71;
    if (v70)
      goto LABEL_25;
  }
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v215.i64[0])(v230, 1, 1, v244);
LABEL_119:
  __break(1u);
LABEL_120:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v215.i64[0])(v228, 1, 1, v244);
  __break(1u);
LABEL_121:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v215.i64[0])(v226, 1, 1, v244);
LABEL_122:
  __break(1u);
LABEL_123:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v218, 1, 1, v244);
  __break(1u);
LABEL_124:
  ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v215.i64[0])(v216, 1, 1, v63);
  __break(1u);
LABEL_125:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_23931CFD4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  char *v28;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_239352170();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393521C4();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2393520B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - v13;
  v15 = sub_239275A60();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v39 = v15;
  v40 = v16;
  ((void (*)(char *))v16)(v14);
  v17 = sub_239352098();
  v18 = sub_239352578();
  if (os_log_type_enabled(v17, v18))
  {
    v36 = v2;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v37 = a1;
    v21 = v20;
    aBlock[0] = v20;
    v38 = v9;
    *(_DWORD *)v19 = 136380675;
    v46 = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, aBlock);
    v2 = v36;
    v9 = v38;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v17, v18, "ObjectCaptureSession.%{private}s: Received mobileSfM pose updates for the camera shots.", v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    a1 = v37;
    MEMORY[0x23B83BC04](v22, -1, -1);
    MEMORY[0x23B83BC04](v19, -1, -1);
  }

  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v14, v9);
  if (*(_QWORD *)(a1 + 16))
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v2;
    *(_QWORD *)(v24 + 24) = a1;
    aBlock[4] = (uint64_t)sub_239336778;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_239262EDC;
    aBlock[3] = (uint64_t)&unk_250AC6DC0;
    v25 = _Block_copy(aBlock);
    v26 = v2;
    swift_bridgeObjectRetain();
    v27 = v42;
    sub_239352188();
    v46 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    v28 = v45;
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v27, v28, v25);
    _Block_release(v25);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v44);
    return swift_release();
  }
  else
  {
    v30 = v41;
    v40(v41, v39, v9);
    v31 = sub_239352098();
    v32 = sub_23935256C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)v33 = 136380675;
      v46 = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, aBlock);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v31, v32, "ObjectCaptureSession.%{private}s: Received empty list of mobileSfM pose updates for camera shots!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v34, -1, -1);
      MEMORY[0x23B83BC04](v33, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v23)(v30, v9);
  }
}

uint64_t sub_23931D4A4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  float32x4_t **v45;
  float32x4_t *v46;
  float32x4_t *v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t result;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, char *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t *v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char *v111;
  float32x4_t v112;
  float32x4_t v113;
  float32x4_t v114;
  float32x4_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t *v140;
  char *v141;
  simd_float4x4 v142;
  uint64_t v143;
  float32x4_t v144;
  float32x4_t v145;
  float32x4_t v146;
  float32x4_t v147;
  float32x4_t v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *);
  NSObject *v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  void *v161;
  void (*v162)(char *, uint64_t);
  uint64_t v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t *v165;
  uint64_t i;
  uint64_t v167;
  char v168;
  uint64_t v169;
  _BOOL8 v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  int8x16_t v178;
  int8x16_t v179;
  int8x16_t v180;
  void (*v181)(uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  NSObject *v186;
  os_log_type_t v187;
  uint8_t *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  float32x4_t v193;
  float32x4_t v194;
  float32x4_t v195;
  float32x4_t v196;
  float32x4_t v197;
  void (*v198)(uint64_t, uint64_t, uint64_t, char *);
  uint64_t *v199;
  void (*v200)(char *, unint64_t, uint64_t);
  float32x4_t v201;
  float32x4_t v202;
  float32x4_t v203;
  float32x4_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  float32x4_t v215;
  float32x4_t v216;
  float32x4_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  _OWORD v224[3];
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD v229[20];
  int8x16_t v230[8];
  uint64_t v231;
  char v232;
  simd_float4x4 v233;
  simd_float4x4 v234;
  simd_float4x4 v235;
  simd_float4x4 v236;
  simd_float4x4 v237;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v191 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v191 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v217.i64[0] = (uint64_t)&v191 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v216.i64[0] = (uint64_t)&v191 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v213 = (char *)&v191 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v214 = (char *)&v191 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v215.i64[0] = (uint64_t)&v191 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v191 - v22;
  v24 = sub_23925FB08(&qword_25692B620);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v209 = (uint64_t)&v191 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v191 - v27;
  v29 = (char *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v219 = *((_QWORD *)v29 - 1);
  v220 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v218 = (char *)&v191 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v191 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_239352020();
  v222 = *(_QWORD *)(v34 - 8);
  v223 = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v212 = (char *)&v191 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v211 = (char *)&v191 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v210 = (char *)&v191 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v221 = (uint64_t)&v191 - v42;
  (*(void (**)(int8x16_t *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x420))(v230, v41);
  if (v230[0].i64[0] == 15)
  {
    v207 = v5;
    v208 = v4;
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    sub_23931B4B4(a2, v230);
    v43 = v230[0].i64[0];
    v44 = (unint64_t)a1;
    if (!v230[0].i64[0])
      return sub_23931EC10(a2, (uint64_t)a1);
    v205 = a2;
    v201 = (float32x4_t)v230[1];
    v202 = (float32x4_t)v230[2];
    v203 = (float32x4_t)v230[3];
    v204 = (float32x4_t)v230[4];
    v45 = (float32x4_t **)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap);
    swift_beginAccess();
    v47 = *v45;
    if (v47[1].i64[0])
    {
      v48 = sub_2392C01BC(v43);
      if ((v49 & 1) != 0)
      {
        if (*(_BYTE *)(v47[3].i64[1] + v48) == 1)
        {
          v206 = (char *)v44;
          v50 = (uint64_t *)(v44 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap);
          swift_beginAccess();
          v51 = *v50;
          if (*(_QWORD *)(v51 + 16) && (v52 = sub_2392C01BC(v43), (v53 & 1) != 0))
          {
            v44 = v222;
            v54 = v223;
            v55 = *(_QWORD *)(v51 + 56) + *(_QWORD *)(v222 + 72) * v52;
            v56 = *(void (**)(char *, unint64_t, uint64_t))(v222 + 16);
            v56(v33, v55, v223);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v54);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v33, 1, v54) != 1)
            {
              v200 = v56;
              a2 = v221;
              (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v221, v33, v54);
              v57 = (uint64_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap];
              swift_beginAccess();
              v58 = *v57;
              if (!*(_QWORD *)(*v57 + 16))
              {
                (*(void (**)(char *, uint64_t, uint64_t, char *))(v219 + 56))(v28, 1, 1, v220);
LABEL_26:
                (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v221, v223);
                v70 = &qword_25692B620;
                v71 = (uint64_t)v28;
                goto LABEL_17;
              }
              swift_bridgeObjectRetain();
              v59 = sub_239292F4C(a2);
              v60 = v219;
              v199 = v57;
              if ((v61 & 1) != 0)
              {
                sub_239268820(*(_QWORD *)(v58 + 56) + *(_QWORD *)(v219 + 72) * v59, (uint64_t)v28, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                v62 = 0;
              }
              else
              {
                v62 = 1;
              }
              v84 = *(void (**)(uint64_t, uint64_t, uint64_t, char *))(v60 + 56);
              v85 = v60;
              v33 = v220;
              v198 = v84;
              v84((uint64_t)v28, v62, 1, v220);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(char *, uint64_t, char *))(v85 + 48))(v28, 1, v33) == 1)
                goto LABEL_26;
              v86 = (uint64_t)v28;
              v28 = v218;
              sub_2392C4FE0(v86, (uint64_t)v218, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
              v87 = *((int *)v33 + 5);
              v88 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
              if ((v28[v87 + 64 + *(int *)(v88 + 36)] & 1) == 0)
              {
                v96 = sub_239275A60();
                v97 = v207;
                v98 = v208;
                v99 = v217.i64[0];
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v217.i64[0], v96, v208);
                v100 = sub_239352098();
                v101 = sub_239352578();
                if (os_log_type_enabled(v100, v101))
                {
                  v102 = swift_slowAlloc();
                  v103 = swift_slowAlloc();
                  v230[0].i64[0] = v103;
                  *(_DWORD *)v102 = 136380931;
                  v229[0] = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, v230[0].i64);
                  sub_2393526B0();
                  *(_WORD *)(v102 + 12) = 2050;
                  v229[0] = v43;
                  sub_2393526B0();
                  _os_log_impl(&dword_23925B000, v100, v101, "ObjectCaptureSession.%{private}s: Already computed world to object transform from\ncamera %{public}ld previously!", (uint8_t *)v102, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x23B83BC04](v103, -1, -1);
                  MEMORY[0x23B83BC04](v102, -1, -1);

                  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v217.i64[0], v98);
                  goto LABEL_34;
                }

                (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v99, v98);
LABEL_37:
                v104 = (uint64_t)v28;
                goto LABEL_38;
              }
              v4 = v88;
              sub_239268764((uint64_t)&v28[*((int *)v33 + 7)], (uint64_t)v229, &qword_25692A8C0);
              sub_239268764((uint64_t)v229, (uint64_t)v230, &qword_25692A8C0);
              if (sub_2392687A8((uint64_t)v230) == 1 || v232 == 1)
              {
                v89 = sub_239275A60();
                v91 = v207;
                v90 = v208;
                (*(void (**)(char *, uint64_t, uint64_t))(v207 + 16))(v23, v89, v208);
                v92 = sub_239352098();
                v93 = sub_23935256C();
                if (os_log_type_enabled(v92, v93))
                {
                  v94 = swift_slowAlloc();
                  v95 = swift_slowAlloc();
                  *(_QWORD *)&v224[0] = v95;
                  *(_DWORD *)v94 = 136380931;
                  v228 = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, (uint64_t *)v224);
                  sub_2393526B0();
                  *(_WORD *)(v94 + 12) = 2050;
                  v228 = v43;
                  sub_2393526B0();
                  _os_log_impl(&dword_23925B000, v92, v93, "ObjectCaptureSession.%{private}s: Not computing world to object transform from mobileSfM because camera %{public}ld does not contain segmentId!", (uint8_t *)v94, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x23B83BC04](v95, -1, -1);
                  MEMORY[0x23B83BC04](v94, -1, -1);

                  (*(void (**)(char *, uint64_t))(v91 + 8))(v23, v208);
LABEL_34:
                  v104 = (uint64_t)v218;
LABEL_38:
                  sub_2392688AC(v104, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  v79 = *(void (**)(uint64_t, uint64_t))(v222 + 8);
LABEL_39:
                  v80 = v221;
                  v81 = v223;
LABEL_20:
                  v79(v80, v81);
                  v82 = v205;
                  v83 = (uint64_t)v206;
                  return sub_23931EC10(v82, v83);
                }

                (*(void (**)(char *, uint64_t))(v91 + 8))(v23, v90);
                goto LABEL_37;
              }
              v105 = v231;
              v106 = v206;
              if (v231 != *(_QWORD *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID])
              {
                v219 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID;
                v124 = sub_239275A60();
                v125 = v208;
                v126 = v216.i64[0];
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v216.i64[0], v124, v208);
                v220 = v106;
                v127 = sub_239352098();
                v128 = sub_23935256C();
                if (os_log_type_enabled(v127, v128))
                {
                  v129 = swift_slowAlloc();
                  v217.i64[0] = swift_slowAlloc();
                  *(_QWORD *)&v224[0] = v217.i64[0];
                  *(_DWORD *)v129 = 136381443;
                  v228 = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, (uint64_t *)v224);
                  sub_2393526B0();
                  *(_WORD *)(v129 + 12) = 2050;
                  v228 = v105;
                  sub_2393526B0();
                  *(_WORD *)(v129 + 22) = 2050;
                  v228 = v43;
                  sub_2393526B0();
                  *(_WORD *)(v129 + 32) = 2050;
                  v228 = *(_QWORD *)&v106[v219];
                  sub_2393526B0();
                  v130 = (uint64_t)v220;

                  _os_log_impl(&dword_23925B000, v127, v128, "ObjectCaptureSession.%{private}s: Not computing world to object transform from mobileSfM because segmentId = %{public}ld of the latest camera %{public}ld does not match the current segmentId = %{public}ld", (uint8_t *)v129, 0x2Au);
                  v131 = v217.i64[0];
                  swift_arrayDestroy();
                  MEMORY[0x23B83BC04](v131, -1, -1);
                  MEMORY[0x23B83BC04](v129, -1, -1);

                  (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v126, v208);
                  sub_2392688AC((uint64_t)v218, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  (*(void (**)(uint64_t, uint64_t))(v222 + 8))(v221, v223);
                }
                else
                {
                  v130 = (uint64_t)v220;

                  (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v126, v125);
                  sub_2392688AC((uint64_t)v28, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v221, v223);
                }
                goto LABEL_48;
              }
              v107 = (uint64_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap];
              swift_beginAccess();
              v108 = *v107;
              if (*(_QWORD *)(v108 + 16))
              {
                swift_bridgeObjectRetain();
                v43 = v221;
                v109 = sub_239292F4C(v221);
                if ((v110 & 1) != 0)
                {
                  v11 = (char *)*(id *)(*(_QWORD *)(v108 + 56) + 8 * v109);
                  swift_bridgeObjectRelease();
                  v111 = v206;
                  v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] = 1;
                  objc_msgSend(v11, sel_transform);
                  v234 = __invert_f4(v233);
                  v112 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v201, v234.columns[0].f32[0]), v202, *(float32x2_t *)v234.columns[0].f32, 1), v203, (float32x4_t)v234.columns[0], 2), v204, (float32x4_t)v234.columns[0], 3);
                  v113 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v201, v234.columns[1].f32[0]), v202, *(float32x2_t *)v234.columns[1].f32, 1), v203, (float32x4_t)v234.columns[1], 2), v204, (float32x4_t)v234.columns[1], 3);
                  v114 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v201, v234.columns[2].f32[0]), v202, *(float32x2_t *)v234.columns[2].f32, 1), v203, (float32x4_t)v234.columns[2], 2), v204, (float32x4_t)v234.columns[2], 3);
                  v115 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v201, v234.columns[3].f32[0]), v202, *(float32x2_t *)v234.columns[3].f32, 1), v203, (float32x4_t)v234.columns[3], 2), v204, (float32x4_t)v234.columns[3], 3);
                  v47 = (float32x4_t *)&v111[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform];
                  *v47 = v112;
                  v47[1] = v113;
                  v47[2] = v114;
                  v47[3] = v115;
                  v47[4].i8[0] = 0;
                  v46 = (float32x4_t *)&v111[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform];
                  if ((v111[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform + 64] & 1) != 0)
                  {
                    *v46 = v112;
                    v46[1] = v113;
                    v46[2] = v114;
                    v46[3] = v115;
                    v46[4].i8[0] = 0;
                    v116 = v112.i64[1];
                    v117 = v112.i64[0];
                    v118 = v113.i64[1];
                    v119 = v113.i64[0];
                    v120 = v114.i64[1];
                    v121 = v114.i64[0];
                    v122 = v115.i64[1];
                    v123 = v115.i64[0];
                    goto LABEL_57;
                  }
LABEL_56:
                  v123 = v46[3].i64[0];
                  v122 = v46[3].i64[1];
                  v121 = v46[2].i64[0];
                  v120 = v46[2].i64[1];
                  v119 = v46[1].i64[0];
                  v118 = v46[1].i64[1];
                  v140 = (uint64_t *)v46;
                  v117 = v46->i64[0];
                  v116 = v140[1];
LABEL_57:
                  v235.columns[0].i64[0] = v117;
                  v235.columns[0].i64[1] = v116;
                  v235.columns[1].i64[0] = v119;
                  v235.columns[1].i64[1] = v118;
                  v235.columns[2].i64[0] = v121;
                  v235.columns[2].i64[1] = v120;
                  v235.columns[3].i64[0] = v123;
                  v235.columns[3].i64[1] = v122;
                  v236 = __invert_f4(v235);
                  v130 = (uint64_t)v206;
                  if ((v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform + 64] & 1) != 0)
                  {

                    sub_2392688AC((uint64_t)v28, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v223);
LABEL_48:
                    v82 = v205;
                    v83 = v130;
                    return sub_23931EC10(v82, v83);
                  }
                  v197 = (float32x4_t)v236.columns[0];
                  v215 = (float32x4_t)v236.columns[1];
                  v216 = (float32x4_t)v236.columns[2];
                  v217 = (float32x4_t)v236.columns[3];
                  if ((v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox + 64] & 1) != 0)
                  {
                    __break(1u);
                    goto LABEL_77;
                  }
                  v141 = v206;
                  v192 = v4;
                  *(double *)v142.columns[0].i64 = sub_2392DF1A0(*(float32x4_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox], *(double *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox+ 16], *(double *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox+ 32], *(double *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox+ 48], *(float32x4_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform], *(float32x4_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform+ 16], *(float32x4_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform+ 32], *(float32x4_t *)&v206[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform+ 48]);
                  v143 = v207;
                  if ((v47[4].i8[0] & 1) != 0)
                  {
                    __break(1u);
                  }
                  else
                  {
                    v191 = v11;
                    v193 = *v47;
                    v194 = v47[1];
                    v195 = v47[2];
                    v196 = v47[3];
                    v237 = __invert_f4(v142);
                    v144 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], v197.f32[0]), (float32x4_t)v237.columns[1], *(float32x2_t *)v197.f32, 1), (float32x4_t)v237.columns[2], v197, 2), (float32x4_t)v237.columns[3], v197, 3);
                    v145 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], v215.f32[0]), (float32x4_t)v237.columns[1], *(float32x2_t *)v215.f32, 1), (float32x4_t)v237.columns[2], v215, 2), (float32x4_t)v237.columns[3], v215, 3);
                    v146 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], v216.f32[0]), (float32x4_t)v237.columns[1], *(float32x2_t *)v216.f32, 1), (float32x4_t)v237.columns[2], v216, 2), (float32x4_t)v237.columns[3], v216, 3);
                    v237.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v237.columns[0], v217.f32[0]), (float32x4_t)v237.columns[1], *(float32x2_t *)v217.f32, 1), (float32x4_t)v237.columns[2], v217, 2), (float32x4_t)v237.columns[3], v217, 3);
                    v237.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v144, v193.f32[0]), v145, *(float32x2_t *)v193.f32, 1), v146, v193, 2), (float32x4_t)v237.columns[0], v193, 3);
                    v237.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v144, v194.f32[0]), v145, *(float32x2_t *)v194.f32, 1), v146, v194, 2), (float32x4_t)v237.columns[0], v194, 3);
                    v237.columns[3] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v144, v195.f32[0]), v145, *(float32x2_t *)v195.f32, 1), v146, v195, 2), (float32x4_t)v237.columns[0], v195, 3);
                    v147 = v196;
                    v148 = vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v144, v196.f32[0]), v145, *(float32x2_t *)v196.f32, 1), v146, v196, 2);
                    v149 = &v141[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM];
                    *(simd_float4 *)v149 = v237.columns[1];
                    *((_OWORD *)v149 + 1) = v237.columns[2];
                    *((_OWORD *)v149 + 2) = v237.columns[3];
                    *((float32x4_t *)v149 + 3) = vmlaq_laneq_f32(v148, (float32x4_t)v237.columns[0], v147, 3);
                    v149[64] = 0;
                    v150 = sub_239275A60();
                    v151 = *(void (**)(char *))(v143 + 16);
                    v215.i64[0] = v150;
                    v216.i64[0] = (uint64_t)v151;
                    v151(v214);
                    v217.i64[0] = (uint64_t)v141;
                    v152 = sub_239352098();
                    LOBYTE(v11) = sub_239352578();
                    if (!os_log_type_enabled(v152, (os_log_type_t)v11))
                    {

                      v161 = (void *)v217.i64[0];
                      v162 = *(void (**)(char *, uint64_t))(v143 + 8);
                      v162(v214, v208);
LABEL_65:
                      v33 = v211;
                      a2 = (uint64_t)v212;
                      sub_2392F81E4();
                      *((_BYTE *)v161
                      + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM) = 0;
                      v28 = v210;
                      v163 = v223;
                      v164 = (void (*)(char *, char *, uint64_t))v200;
                      v200(v210, v221, v223);
                      v165 = v199;
                      swift_beginAccess();
                      v164(v33, v28, v163);
                      LODWORD(i) = swift_isUniquelyReferenced_nonNull_native();
                      v164((char *)a2, v33, v163);
                      v227 = *v165;
                      v167 = v227;
                      *v165 = 0x8000000000000000;
                      v44 = sub_239292F4C(a2);
                      v169 = *(_QWORD *)(v167 + 16);
                      v170 = (v168 & 1) == 0;
                      v171 = v169 + v170;
                      if (!__OFADD__(v169, v170))
                      {
                        LOBYTE(v11) = v168;
                        v172 = *(_QWORD *)(v167 + 24);
                        v214 = (char *)v162;
                        if (v172 >= v171)
                          goto LABEL_70;
                        sub_23932CCB8(v171, i);
                        v173 = sub_239292F4C(a2);
                        if ((v11 & 1) == (v174 & 1))
                        {
                          v44 = v173;
                          for (i = v192; (v11 & 1) == 0; i = v192)
                          {
                            while (1)
                            {
                              v198(v209, 1, 1, v220);
                              __break(1u);
LABEL_70:
                              if ((i & 1) == 0)
                                break;
                              i = v192;
                              if ((v11 & 1) != 0)
                                goto LABEL_72;
                            }
LABEL_78:
                            sub_23932EB80();
                          }
LABEL_72:
                          v175 = v209;
                          sub_2392C4FE0(*(_QWORD *)(v227 + 56) + *(_QWORD *)(v219 + 72) * v44, v209, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                          v176 = v220;
                          v198(v175, 0, 1, v220);
                          v177 = v175 + *((int *)v176 + 5) + (uint64_t)*(int *)(i + 36);
                          v178 = (int8x16_t)v201;
                          v179 = (int8x16_t)v202;
                          *(_QWORD *)v177 = v201.i64[0];
                          *(int8x16_t *)(v177 + 8) = vextq_s8(v178, v179, 8uLL);
                          v180 = (int8x16_t)v203;
                          *(int8x16_t *)(v177 + 24) = vextq_s8(v179, (int8x16_t)v203, 8uLL);
                          v179.i64[1] = v204.i64[1];
                          *(int8x16_t *)(v177 + 40) = vextq_s8(v180, (int8x16_t)v204, 8uLL);
                          *(_QWORD *)(v177 + 56) = v179.i64[1];
                          *(_BYTE *)(v177 + 64) = 0;
                          sub_239330210(v175, 1, &v227, v44, a2);
                          sub_23925FE28(v175, &qword_25692B620);
                          v181 = *(void (**)(uint64_t, uint64_t))(v222 + 8);
                          v182 = a2;
                          v183 = v223;
                          v181(v182, v223);
                          *v199 = v227;
                          v181((uint64_t)v33, v183);
                          v181((uint64_t)v28, v183);
                          swift_endAccess();
                          v184 = v213;
                          v185 = v208;
                          ((void (*)(char *, uint64_t, uint64_t))v216.i64[0])(v213, v215.i64[0], v208);
                          v186 = sub_239352098();
                          v187 = sub_239352578();
                          if (os_log_type_enabled(v186, v187))
                          {
                            v188 = (uint8_t *)swift_slowAlloc();
                            v189 = swift_slowAlloc();
                            *(_QWORD *)&v224[0] = v189;
                            *(_DWORD *)v188 = 136380675;
                            v227 = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, (uint64_t *)v224);
                            sub_2393526B0();
                            _os_log_impl(&dword_23925B000, v186, v187, "ObjectCaptureSession.%{private}s: Added initial camera to mobileSfM transform to a new camera shot.", v188, 0xCu);
                            swift_arrayDestroy();
                            MEMORY[0x23B83BC04](v189, -1, -1);
                            MEMORY[0x23B83BC04](v188, -1, -1);

                            v190 = v213;
                          }
                          else
                          {

                            v190 = v184;
                          }
                          ((void (*)(char *, uint64_t))v214)(v190, v185);
                          sub_2392688AC((uint64_t)v218, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                          v181(v221, v183);
                          v82 = v205;
                          v83 = v217.i64[0];
                          return sub_23931EC10(v82, v83);
                        }
                        goto LABEL_82;
                      }
LABEL_77:
                      __break(1u);
                      goto LABEL_78;
                    }
                    v153 = swift_slowAlloc();
                    v154 = swift_slowAlloc();
                    v227 = v154;
                    *(_DWORD *)v153 = 136380931;
                    *(_QWORD *)&v224[0] = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, &v227);
                    sub_2393526B0();
                    *(_WORD *)(v153 + 12) = 2082;
                    if ((v149[64] & 1) == 0)
                    {
                      v156 = *((_OWORD *)v149 + 1);
                      v155 = *((_OWORD *)v149 + 2);
                      v157 = *((_QWORD *)v149 + 6);
                      v158 = *((_QWORD *)v149 + 7);
                      v224[0] = *(_OWORD *)v149;
                      v224[1] = v156;
                      v224[2] = v155;
                      v225 = v157;
                      v226 = v158;
                      type metadata accessor for simd_float4x4(0);
                      v159 = sub_23935232C();
                      *(_QWORD *)&v224[0] = sub_23925F3EC(v159, v160, &v227);
                      sub_2393526B0();
                      v161 = (void *)v217.i64[0];

                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_23925B000, v152, (os_log_type_t)v11, "ObjectCaptureSession.%{private}s: Updated world to object transform %{public}s", (uint8_t *)v153, 0x16u);
                      swift_arrayDestroy();
                      MEMORY[0x23B83BC04](v154, -1, -1);
                      MEMORY[0x23B83BC04](v153, -1, -1);

                      v162 = *(void (**)(char *, uint64_t))(v207 + 8);
                      v162(v214, v208);
                      goto LABEL_65;
                    }
                  }

                  __break(1u);
LABEL_82:
                  result = sub_239352908();
                  __break(1u);
                  return result;
                }
                swift_bridgeObjectRelease();
              }
              v132 = sub_239275A60();
              v134 = v207;
              v133 = v208;
              v135 = v215.i64[0];
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16))(v215.i64[0], v132, v208);
              v136 = sub_239352098();
              v137 = sub_23935256C();
              if (!os_log_type_enabled(v136, v137))
              {

                (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v133);
                sub_2392688AC((uint64_t)v28, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                v79 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
                goto LABEL_39;
              }
              v138 = (uint8_t *)swift_slowAlloc();
              v139 = swift_slowAlloc();
              *(_QWORD *)&v224[0] = v139;
              *(_DWORD *)v138 = 136380675;
              v227 = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, (uint64_t *)v224);
              sub_2393526B0();
              _os_log_impl(&dword_23925B000, v136, v137, "ObjectCaptureSession.%{private}s: Shot anchor does not exist for the current camera pose!", v138, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B83BC04](v139, -1, -1);
              MEMORY[0x23B83BC04](v138, -1, -1);

              (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v135, v208);
              goto LABEL_37;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56))(v33, 1, 1, v223);
          }
          v70 = &qword_2569281C0;
          v71 = (uint64_t)v33;
LABEL_17:
          sub_23925FE28(v71, v70);
          v72 = sub_239275A60();
          v74 = v207;
          v73 = v208;
          (*(void (**)(char *, uint64_t, uint64_t))(v207 + 16))(v11, v72, v208);
          v75 = sub_239352098();
          v76 = sub_23935256C();
          if (os_log_type_enabled(v75, v76))
          {
            v77 = (uint8_t *)swift_slowAlloc();
            v78 = swift_slowAlloc();
            v230[0].i64[0] = v78;
            *(_DWORD *)v77 = 136380675;
            v229[0] = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, v230[0].i64);
            sub_2393526B0();
            _os_log_impl(&dword_23925B000, v75, v76, "ObjectCaptureSession.%{private}s: Not computing world to object transform from mobileSfM because metadata for the latest shot is invalid!", v77, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v78, -1, -1);
            MEMORY[0x23B83BC04](v77, -1, -1);
          }

          v79 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
          v80 = (uint64_t)v11;
          v81 = v73;
          goto LABEL_20;
        }
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_55;
  }
  sub_239331658((id)v230[0].i64[0]);
  sub_239331658((id)0xF);
  v63 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v63, v4);
  v64 = sub_239352098();
  v65 = sub_23935256C();
  v66 = v5;
  if (os_log_type_enabled(v64, v65))
  {
    v67 = (uint8_t *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    v230[0].i64[0] = v68;
    *(_DWORD *)v67 = 136380675;
    v229[0] = sub_23925F3EC(0xD000000000000032, 0x800000023935E7A0, v230[0].i64);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v64, v65, "ObjectCaptureSession.%{private}s: Session not in scanning mode!", v67, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v68, -1, -1);
    MEMORY[0x23B83BC04](v67, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v8, v4);
}

uint64_t sub_23931EC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  BOOL v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  char *v61;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL8 v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  uint64_t result;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  void (*v101)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;

  v107 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v92 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23925FB08(&qword_25692B620);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v93 = (uint64_t)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v97 = (uint64_t)&v91 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v104 = (uint64_t)&v91 - v10;
  v11 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_239352020();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v100 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v99 = (char *)&v91 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v98 = (char *)&v91 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v91 - v22;
  v24 = *(_QWORD *)(a1 + 64);
  v118 = a1 + 64;
  v25 = 1 << *(_BYTE *)(a1 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v28 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap);
  v29 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap);
  v110 = a1;
  swift_bridgeObjectRetain();
  v119 = v28;
  swift_beginAccess();
  v108 = v29;
  swift_beginAccess();
  v30 = 0;
  v31 = v25 + 63;
  v32 = (uint64_t)v23;
  v33 = v31 >> 6;
  v103 = v23;
  v102 = v31 >> 6;
  while (v27)
  {
    v34 = __clz(__rbit64(v27));
    v27 &= v27 - 1;
    v35 = v34 | (v30 << 6);
LABEL_22:
    v39 = *v119;
    if (!*(_QWORD *)(*v119 + 16))
      goto LABEL_4;
    v40 = *(_QWORD *)(v110 + 48);
    v41 = (uint64_t *)(*(_QWORD *)(v110 + 56) + (v35 << 6));
    v113 = v41[1];
    v111 = *v41;
    v115 = v41[3];
    v112 = v41[2];
    v117 = v41[5];
    v114 = v41[4];
    v42 = v41[7];
    v116 = v41[6];
    v43 = sub_2392C01BC(*(_QWORD *)(v40 + 8 * v35));
    if ((v44 & 1) == 0)
    {
LABEL_4:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
      goto LABEL_5;
    }
    v109 = v42;
    v45 = *(_QWORD *)(v39 + 56);
    v46 = *(_QWORD *)(v15 + 72);
    v47 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v47(v13, v45 + v46 * v43, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
LABEL_5:
      sub_23925FE28((uint64_t)v13, &qword_2569281C0);
    }
    else
    {
      v105 = v46;
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v32, v13, v14);
      v48 = *v108;
      if (!*(_QWORD *)(*v108 + 16))
      {
        v54 = v104;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v104, 1, 1, v107);
        v55 = v54;
        goto LABEL_32;
      }
      swift_bridgeObjectRetain();
      v49 = sub_239292F4C(v32);
      v51 = v106;
      v52 = v104;
      if ((v50 & 1) != 0)
      {
        sub_239268820(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v106 + 72) * v49, v104, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v53 = v107;
        v101 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
        v101(v52, 0, 1, v107);
      }
      else
      {
        v53 = v107;
        v101 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
        v101(v104, 1, 1, v107);
      }
      swift_bridgeObjectRelease();
      v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      v57 = v56(v52, 1, v53) == 1;
      v55 = v52;
      v32 = (uint64_t)v103;
      v33 = v102;
      if (v57)
      {
LABEL_32:
        sub_23925FE28(v55, &qword_25692B620);
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v32, v14);
      }
      else
      {
        v96 = v56;
        sub_23925FE28(v52, &qword_25692B620);
        v58 = v32;
        v59 = v98;
        v47(v98, v58, v14);
        v60 = v108;
        swift_beginAccess();
        v61 = v99;
        v47(v99, (unint64_t)v59, v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v63 = (uint64_t)v100;
        v47(v100, (unint64_t)v61, v14);
        v64 = *v60;
        v120 = *v60;
        *v60 = 0x8000000000000000;
        v65 = sub_239292F4C(v63);
        v67 = v65;
        v68 = *(_QWORD *)(v64 + 16);
        v69 = (v66 & 1) == 0;
        v70 = v68 + v69;
        if (__OFADD__(v68, v69))
          goto LABEL_49;
        v71 = v66;
        if (*(_QWORD *)(v64 + 24) >= v70)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v66 & 1) == 0)
              goto LABEL_45;
          }
          else
          {
            sub_23932EB80();
            if ((v71 & 1) == 0)
              goto LABEL_45;
          }
        }
        else
        {
          sub_23932CCB8(v70, isUniquelyReferenced_nonNull_native);
          v72 = sub_239292F4C((uint64_t)v100);
          if ((v71 & 1) != (v73 & 1))
            goto LABEL_50;
          v67 = v72;
          if ((v71 & 1) == 0)
          {
LABEL_45:
            v101(v97, 1, 1, v107);
            __break(1u);
            return swift_release();
          }
        }
        v94 = v120;
        v74 = *(_QWORD *)(v106 + 72) * v67;
        v75 = *(_QWORD *)(v120 + 56) + v74;
        v95 = v67;
        v76 = v97;
        sub_2392C4FE0(v75, v97, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v77 = v107;
        v101(v76, 0, 1, v107);
        v78 = v76 + *(int *)(v77 + 20);
        v79 = v78 + *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0) + 40);
        v80 = v113;
        *(_QWORD *)v79 = v111;
        *(_QWORD *)(v79 + 8) = v80;
        v81 = v115;
        *(_QWORD *)(v79 + 16) = v112;
        *(_QWORD *)(v79 + 24) = v81;
        v82 = v117;
        *(_QWORD *)(v79 + 32) = v114;
        *(_QWORD *)(v79 + 40) = v82;
        v83 = v109;
        *(_QWORD *)(v79 + 48) = v116;
        *(_QWORD *)(v79 + 56) = v83;
        *(_BYTE *)(v79 + 64) = 0;
        v84 = v93;
        sub_23926059C(v76, v93, &qword_25692B620);
        if (v96(v84, 1, v77) == 1)
        {
          sub_23925FE28(v84, &qword_25692B620);
          v85 = v120;
          v86 = v95;
          swift_arrayDestroy();
          sub_23932DDD4(v86, v85);
        }
        else
        {
          v87 = v92;
          sub_2392C4FE0(v84, v92, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          sub_2392C4FE0(v87, *(_QWORD *)(v94 + 56) + v74, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        }
        v33 = v102;
        sub_23925FE28(v97, &qword_25692B620);
        v88 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v88((uint64_t)v100, v14);
        *v108 = v120;
        v88((uint64_t)v99, v14);
        v88((uint64_t)v98, v14);
        swift_endAccess();
        v89 = (uint64_t)v103;
        v88((uint64_t)v103, v14);
        v32 = v89;
      }
    }
  }
  v36 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v36 >= v33)
    return swift_release();
  v37 = *(_QWORD *)(v118 + 8 * v36);
  ++v30;
  if (v37)
    goto LABEL_21;
  v30 = v36 + 1;
  if (v36 + 1 >= v33)
    return swift_release();
  v37 = *(_QWORD *)(v118 + 8 * v30);
  if (v37)
    goto LABEL_21;
  v30 = v36 + 2;
  if (v36 + 2 >= v33)
    return swift_release();
  v37 = *(_QWORD *)(v118 + 8 * v30);
  if (v37)
  {
LABEL_21:
    v27 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v30 << 6);
    goto LABEL_22;
  }
  v38 = v36 + 3;
  if (v38 >= v33)
    return swift_release();
  v37 = *(_QWORD *)(v118 + 8 * v38);
  if (v37)
  {
    v30 = v38;
    goto LABEL_21;
  }
  while (1)
  {
    v30 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v30 >= v33)
      return swift_release();
    v37 = *(_QWORD *)(v118 + 8 * v30);
    ++v38;
    if (v37)
      goto LABEL_21;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_23931F514(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t aBlock[6];

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239352170();
  v23 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393521C4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v1;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = (uint64_t)sub_23933678C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_239262EDC;
    aBlock[3] = (uint64_t)&unk_250AC6E10;
    v15 = _Block_copy(aBlock);
    v16 = v1;
    swift_bridgeObjectRetain();
    sub_239352188();
    v24 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v13, v9, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return swift_release();
  }
  else
  {
    v18 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v18, v3);
    v19 = sub_239352098();
    v20 = sub_239352554();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136380675;
      v24 = sub_23925F3EC(0xD00000000000002BLL, 0x800000023935E7E0, aBlock);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v19, v20, "ObjectCaptureSession.%{private}s: Received empty list of invalid mobileSfM pose for camera shots!", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v22, -1, -1);
      MEMORY[0x23B83BC04](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_23931F874(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  uint64_t v58;
  int v59;
  _QWORD *v60;
  uint64_t v61;
  NSObject *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id v69[3];
  uint64_t v70;

  v4 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239352020();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_2393520B0();
  v11 = *(_QWORD *)(v68 - 8);
  v12 = MEMORY[0x24BDAC7A8](v68);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v55 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v55 - v19;
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x420))(v69, v18);
  if (v69[0] == (id)15)
  {
    v65 = a2;
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    v21 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager);
    if (v21)
    {
      v63 = v17;
      v67 = v10;
      v60 = a1;
      v22 = v65;
      v23 = *(_QWORD *)(v65 + 16);
      if (v23)
      {
        v61 = v11;
        v24 = (char *)v60 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
        v66 = v21;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v25 = 0;
        *(_QWORD *)&v26 = 136381187;
        v57 = v26;
        v56 = 0x800000023935E7E0;
        v55 = MEMORY[0x24BEE4AD8] + 8;
        v64 = v23;
        while (1)
        {
          v27 = *(_QWORD *)v24;
          if (*(_QWORD *)(*(_QWORD *)v24 + 16)
            && (v28 = *(_QWORD *)(v22 + 8 * v25 + 32), v29 = sub_2392C01BC(v28), (v30 & 1) != 0))
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v27 + 56) + *(_QWORD *)(v8 + 72) * v29, v7);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
            {
              v31 = v67;
              (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v67, v6, v7);
              v32 = v66;
              if (((*(uint64_t (**)(char *))(*(_QWORD *)v66 + 512))(v31) & 1) != 0)
              {
                v33 = sub_239275A60();
                v34 = v61;
                v35 = v63;
                (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v63, v33, v68);
                swift_retain();
                v36 = sub_239352098();
                v37 = sub_239352578();
                v62 = v36;
                v59 = v37;
                if (os_log_type_enabled(v36, v37))
                {
                  v38 = swift_slowAlloc();
                  v58 = swift_slowAlloc();
                  v70 = v58;
                  *(_DWORD *)v38 = v57;
                  v39 = sub_23925F3EC(0xD00000000000002BLL, v56, &v70);
                  *(_QWORD *)(v38 + 4) = v39;
                  *(_WORD *)(v38 + 12) = 2050;
                  *(_QWORD *)(v38 + 14) = v28;
                  *(_WORD *)(v38 + 22) = 2050;
                  *(_QWORD *)(v38 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v32 + 888))(v39);
                  swift_release();
                  v40 = v62;
                  _os_log_impl(&dword_23925B000, v62, (os_log_type_t)v59, "ObjectCaptureSession.%{private}s: Deleted unknown state pose from AC pose graph: sampleID: %{public}ld, number of invalid AC shots: %{public}ld", (uint8_t *)v38, 0x20u);
                  v41 = v58;
                  swift_arrayDestroy();
                  MEMORY[0x23B83BC04](v41, -1, -1);
                  MEMORY[0x23B83BC04](v38, -1, -1);

                  (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v68);
                }
                else
                {
                  swift_release();

                  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v68);
                }
                (*(void (**)(char *, uint64_t))(v8 + 8))(v67, v7);
                v22 = v65;
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v7);
              }
              v23 = v64;
              goto LABEL_7;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
          }
          sub_23925FE28((uint64_t)v6, &qword_2569281C0);
LABEL_7:
          if (v23 == ++v25)
          {
            swift_bridgeObjectRelease();
            v48 = v66;
            goto LABEL_27;
          }
        }
      }
      v48 = v21;
      swift_retain();
LABEL_27:
      v54 = sub_239326F5C();
      v70 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 888))(v54);
      sub_2393520D4();
      swift_release();
      return swift_release();
    }
    else
    {
      v49 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, v49, v68);
      v50 = sub_239352098();
      v51 = sub_23935256C();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = (void *)swift_slowAlloc();
        v69[0] = v53;
        *(_DWORD *)v52 = 136380675;
        v70 = sub_23925F3EC(0xD00000000000002BLL, 0x800000023935E7E0, (uint64_t *)v69);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v50, v51, "ObjectCaptureSession.%{private}s: Failed to update invalid shot pose - capture manager has not been initialized!", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v53, -1, -1);
        MEMORY[0x23B83BC04](v52, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v20, v68);
    }
  }
  else
  {
    sub_239331658(v69[0]);
    sub_239331658((id)0xF);
    v42 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v42, v68);
    v43 = sub_239352098();
    v44 = sub_23935256C();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = (void *)swift_slowAlloc();
      v69[0] = v46;
      *(_DWORD *)v45 = 136380675;
      v70 = sub_23925F3EC(0xD00000000000002BLL, 0x800000023935E7E0, (uint64_t *)v69);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v43, v44, "ObjectCaptureSession.%{private}s: Session not in scanning mode!", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v46, -1, -1);
      MEMORY[0x23B83BC04](v45, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v68);
  }
}

uint64_t sub_23931FF94(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_239352170();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393521C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_2393367A0;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC6E60;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_bridgeObjectRetain();
  sub_239352188();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v4, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_23932018C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239326D68();
  v14 = a2;
  swift_bridgeObjectRetain();
  sub_2393520D4();
  swift_bridgeObjectRelease();
  swift_release();
  v7 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  swift_bridgeObjectRetain();
  v8 = sub_239352098();
  v9 = sub_239352578();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v14 = v11;
    *(_DWORD *)v10 = 136380931;
    v13 = sub_23925F3EC(0xD000000000000022, 0x8000000239360780, &v14);
    sub_2393526B0();
    *(_WORD *)(v10 + 12) = 2050;
    v13 = *(_QWORD *)(a2 + 16);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v8, v9, "ObjectCaptureSession.%{private}s: Published %{public}ld updated mesh anchors", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v11, -1, -1);
    MEMORY[0x23B83BC04](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2393203A8(char a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v2 = a1 & 1;
  v3 = sub_239352170();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393521C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = v1;
  aBlock[4] = sub_2393367A8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC6EB0;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  sub_239352188();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v4, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_23932059C(char a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  void *v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  int v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v3 = a1 & 1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - v9;
  v11 = sub_239275A60();
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v32(v10, v11, v4);
  v12 = sub_239352098();
  v13 = sub_239352578();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v31 = v3;
    v15 = v14;
    v16 = swift_slowAlloc();
    v29 = v11;
    v17 = v16;
    v34 = v16;
    *(_DWORD *)v15 = 136380931;
    v30 = v8;
    v33 = sub_23925F3EC(0xD000000000000027, 0x8000000239360750, &v34);
    sub_2393526B0();
    *(_WORD *)(v15 + 12) = 2082;
    LOBYTE(v33) = v31;
    v18 = sub_23935232C();
    v33 = sub_23925F3EC(v18, v19, &v34);
    v8 = v30;
    sub_2393526B0();
    LOBYTE(v3) = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v12, v13, "ObjectCaptureSession.%{private}s: Received request from area mode mesh manager\nto update scan extent to: %{public}s.", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    v20 = v17;
    v11 = v29;
    MEMORY[0x23B83BC04](v20, -1, -1);
    MEMORY[0x23B83BC04](v15, -1, -1);
  }

  v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v10, v4);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent) = v3;
  sub_23930D3BC();
  v23 = v22;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_runWithConfiguration_options_, v22, 8);
  v32(v8, v11, v4);
  v24 = sub_239352098();
  v25 = sub_239352578();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v34 = v27;
    *(_DWORD *)v26 = 136380675;
    v33 = sub_23925F3EC(0xD000000000000027, 0x8000000239360750, &v34);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v24, v25, "ObjectCaptureSession.%{private}s: Restarted scene reconstruction with updated voxel size.", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v27, -1, -1);
    MEMORY[0x23B83BC04](v26, -1, -1);

  }
  else
  {

  }
  return ((uint64_t (*)(char *, uint64_t))v21)(v8, v4);
}

uint64_t sub_239320930(char a1)
{
  return sub_2393203A8(a1 & 1);
}

uint64_t sub_239320938(int a1, uint64_t a2, int a3)
{
  void *v3;
  void *v4;
  uint8_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  char *v28;
  char *v29;
  uint64_t v31;
  int v32;
  int v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v4 = v3;
  LODWORD(v5) = a3;
  v36 = a2;
  v7 = sub_239352170();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393521C4();
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2393520B0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = sub_239352098();
  v18 = sub_239352578();
  if (os_log_type_enabled(v17, v18))
  {
    v33 = a1;
    v19 = swift_slowAlloc();
    v32 = (int)v5;
    v5 = (uint8_t *)v19;
    v20 = swift_slowAlloc();
    v34 = v4;
    v21 = v20;
    aBlock[0] = v20;
    v35 = v8;
    *(_DWORD *)v5 = 136380675;
    v41 = sub_23925F3EC(0xD000000000000031, 0x800000023935E810, aBlock);
    LOBYTE(a1) = v33;
    v8 = v35;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v17, v18, "ObjectCaptureSession.%{private}s: Received finalize input callback.", v5, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    v4 = v34;
    MEMORY[0x23B83BC04](v22, -1, -1);
    v23 = v5;
    LOBYTE(v5) = v32;
    MEMORY[0x23B83BC04](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v24 = swift_allocObject();
  v25 = v36;
  *(_QWORD *)(v24 + 16) = v4;
  *(_QWORD *)(v24 + 24) = v25;
  *(_BYTE *)(v24 + 32) = v5 & 1;
  *(_BYTE *)(v24 + 33) = a1 & 1;
  aBlock[4] = (uint64_t)sub_2393367D8;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC6F00;
  v26 = _Block_copy(aBlock);
  v27 = v4;
  v28 = v37;
  sub_239352188();
  v41 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  v29 = v40;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v28, v29, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v29, v7);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
  return swift_release();
}

uint64_t sub_239320CD0(char *a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v34 = a4;
  v36 = a3;
  v35 = a2;
  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - v9;
  v11 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager;
  v12 = *(_QWORD *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager];
  if (v12)
  {
    v13 = *(void (**)(uint64_t))(*(_QWORD *)v12 + 632);
    v14 = swift_retain();
    v13(v14);
    swift_release();
  }
  v15 = sub_239275A60();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v37 = v15;
  v38 = v16;
  ((void (*)(char *))v16)(v10);
  v17 = sub_239352098();
  v18 = sub_239352578();
  if (os_log_type_enabled(v17, v18))
  {
    v33 = v5;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v42[0] = v20;
    *(_DWORD *)v19 = 136380675;
    v41 = sub_23925F3EC(0xD000000000000031, 0x800000023935E810, v42);
    v5 = v33;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v17, v18, "ObjectCaptureSession.%{private}s: Mobile sfm has been disabled gracefully.", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v20, -1, -1);
    MEMORY[0x23B83BC04](v19, -1, -1);
  }

  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v10, v5);
  *(_QWORD *)&a1[v11] = 0;
  swift_release();
  v22 = &a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime];
  swift_beginAccess();
  *(_QWORD *)v22 = v35;
  v22[8] = v36 & 1;
  sub_2392F5160();
  v23 = *(void **)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing];
  v24 = v39;
  if (v23 != (void *)18)
  {
    if ((v34 & 1) != 0)
    {
      v25 = v5;
      sub_239341BF8(*(id *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing]);
    }
    else
    {
      if (v23 == (void *)17)
      {
        sub_239341BF8((id)0x11);
        sub_239331658((id)0x11);
        sub_239331658((id)0x11);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_23935211C();
        swift_release();
        swift_release();
        v26 = (void *)v41;
        swift_getKeyPath();
        swift_getKeyPath();
        v41 = 5;
        a1;
        sub_239352128();
        v41 = (uint64_t)v26;
        sub_2392F48FC((void **)&v41);
        sub_239331658(v26);
        goto LABEL_12;
      }
      v25 = v5;
      sub_239341BF8(*(id *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing]);
      sub_239341BF8(v23);
      sub_239331658(v23);
      sub_239331658((id)0x11);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_239341BF8(v23);
    sub_23935211C();
    swift_release();
    swift_release();
    v27 = (void *)v41;
    swift_getKeyPath();
    swift_getKeyPath();
    v41 = (uint64_t)v23;
    a1;
    sub_239352128();
    v41 = (uint64_t)v27;
    sub_2392F48FC((void **)&v41);
    sub_239331658(v27);
    sub_2393351A8(v23);
    v5 = v25;
  }
LABEL_12:
  v38(v24, v37, v5);
  v28 = sub_239352098();
  v29 = sub_239352578();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v41 = v31;
    *(_DWORD *)v30 = 136380675;
    v40 = sub_23925F3EC(0xD000000000000031, 0x800000023935E810, &v41);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v28, v29, "ObjectCaptureSession.%{private}s: MobileSfM exited gracefully and the snapshot was written if applicable.", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v31, -1, -1);
    MEMORY[0x23B83BC04](v30, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v21)(v24, v5);
}

uint64_t sub_239321218(int a1, uint64_t a2, char a3)
{
  return sub_239320938(a1, a2, a3 & 1);
}

uint64_t sub_239321220(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_239352170();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393521C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_23933682C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC6F50;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_retain();
  sub_239352188();
  v16[1] = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, v4, MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_239321418(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  void *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(id *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *a1) + 0x420))(&v19, v6);
  if (v19 == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    v9 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v9, v4);
    v10 = sub_239352098();
    v11 = sub_239352578();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v17 = a2;
      v13 = (uint8_t *)v12;
      v14 = (void *)swift_slowAlloc();
      v19 = v14;
      *(_DWORD *)v13 = 136380675;
      v18 = sub_23925F3EC(0xD000000000000023, 0x8000000239360720, (uint64_t *)&v19);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v10, v11, "ObjectCaptureSession.%{private}s: Updated mobileSfM point cloud.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v14, -1, -1);
      v15 = v13;
      a2 = v17;
      MEMORY[0x23B83BC04](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer) = a2;
    swift_retain();
    swift_release();
  }
  else
  {
    sub_239331658(v19);
    sub_239331658((id)0xF);
  }
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didUpdate:)(ARSession _, ARFrame didUpdate)
{
  sub_239336834(didUpdate.super.isa);
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didAdd:)(ARSession _, Swift::OpaquePointer didAdd)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  objc_class *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  objc_class *isa;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = sub_239352170();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393521C4();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)&isa - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&isa - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  swift_bridgeObjectRetain_n();
  v15 = sub_239352098();
  v16 = sub_239352560();
  if (os_log_type_enabled(v15, v16))
  {
    isa = _.super.isa;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136380931;
    v34 = sub_23925F3EC(0xD000000000000012, 0x800000023935E850, aBlock);
    sub_2393526B0();
    *(_WORD *)(v17 + 12) = 2050;
    if ((unint64_t)didAdd._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_239352854();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)(((unint64_t)didAdd._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v34 = v19;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: has been called. #anchors = %{public}ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v18, -1, -1);
    MEMORY[0x23B83BC04](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    _.super.isa = isa;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    v20 = swift_allocObject();
    *(Swift::OpaquePointer *)(v20 + 16) = didAdd;
    *(_QWORD *)(v20 + 24) = v3;
    *(ARSession *)(v20 + 32) = _;
    aBlock[4] = (uint64_t)sub_2393375E8;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_239262EDC;
    aBlock[3] = (uint64_t)&unk_250AC6FA0;
    v21 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v22 = v3;
    v23 = _.super.isa;
    v24 = v28;
    sub_239352188();
    v34 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    v25 = v31;
    v26 = v33;
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v24, v25, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
    swift_release();
  }
}

void sub_239321AC0(unint64_t a1, uint64_t isUniquelyReferenced_nonNull_native, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  void *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;

  v6 = sub_239352680();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v43 - v10;
  v12 = sub_239352020();
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v52 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v48 = sub_239352854();
    if (v48)
      goto LABEL_3;
  }
  else
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v48 = v14;
    if (v14)
    {
LABEL_3:
      v43 = a3;
      v44 = v11;
      v45 = v9;
      v46 = isUniquelyReferenced_nonNull_native;
      v15 = (char **)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
      v51 = a1 & 0xC000000000000001;
      v16 = 4;
      a3 = (char *)v48;
      v47 = a1;
      while (1)
      {
        if (v51)
          v18 = (id)MEMORY[0x23B83A68C](v16 - 4, a1);
        else
          v18 = *(id *)(a1 + 8 * v16);
        v19 = v18;
        v11 = (char *)(v16 - 3);
        if (__OFADD__(v16 - 4, 1))
        {
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        objc_opt_self();
        v20 = swift_dynamicCastObjCClass();
        if (v20)
          break;
LABEL_6:

        ++v16;
        if (v11 == a3)
        {
          swift_bridgeObjectRelease();
          v9 = v45;
          isUniquelyReferenced_nonNull_native = v46;
          a3 = v43;
          v11 = v44;
          goto LABEL_29;
        }
      }
      v21 = (void *)v20;
      v22 = v19;
      v23 = objc_msgSend(v21, sel_identifier);
      v24 = v52;
      sub_239352008();

      swift_beginAccess();
      v25 = v22;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = *v15;
      a3 = v53;
      *v15 = (char *)0x8000000000000000;
      a1 = sub_239292F4C(v24);
      v27 = *((_QWORD *)a3 + 2);
      v28 = (v26 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        goto LABEL_25;
      v9 = v26;
      if (*((_QWORD *)a3 + 3) < v29)
      {
        sub_23932DA3C(v29, isUniquelyReferenced_nonNull_native, &qword_25692B6F0);
        v30 = sub_239292F4C(v52);
        if ((v9 & 1) != (v31 & 1))
        {
          sub_239352908();
          __break(1u);
          return;
        }
        a1 = v30;
        a3 = v53;
        if ((v9 & 1) == 0)
          goto LABEL_19;
LABEL_4:
        isUniquelyReferenced_nonNull_native = *((_QWORD *)a3 + 7);
        v17 = 8 * a1;

        *(_QWORD *)(isUniquelyReferenced_nonNull_native + v17) = v21;
LABEL_5:
        *v15 = a3;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v50);
        swift_endAccess();

        a1 = v47;
        a3 = (char *)v48;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        a3 = v53;
        if ((v26 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_23932F418(&qword_25692B6F0);
        a3 = v53;
        if ((v9 & 1) != 0)
          goto LABEL_4;
      }
LABEL_19:
      *(_QWORD *)&a3[8 * (a1 >> 6) + 64] |= 1 << a1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 16))(*((_QWORD *)a3 + 6) + *(_QWORD *)(v49 + 72) * a1, v52, v50);
      *(_QWORD *)(*((_QWORD *)a3 + 7) + 8 * a1) = v21;
      v32 = *((_QWORD *)a3 + 2);
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_26;
      *((_QWORD *)a3 + 2) = v34;
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_29:
  v35 = objc_msgSend(a3, sel_currentFrame, v43, v44, v45, v46);
  if (v35)
  {
    v36 = v35;
    v37 = *(void **)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend(v36, sel_camera);
      sub_23935268C();

      v40 = sub_239352674();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 2, 2, v40);
      LOBYTE(v39) = sub_239352668();
      v41 = MEMORY[0x24BEDF358];
      sub_2392688AC(v9, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      sub_2392688AC((uint64_t)v11, (uint64_t (*)(_QWORD))v41);
      if ((v39 & 1) != 0)
      {
        v42 = *(void **)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane) = v37;

        v36 = v42;
      }
      else
      {

        v36 = v38;
      }
    }

  }
  sub_239321F1C();
}

void sub_239321F1C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  void *v25;
  id v26;
  char *v27;
  void *v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint8_t *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t *v61;
  void *v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69[3];
  _OWORD v70[2];
  char v71;

  v1 = v0;
  v2 = sub_2393520B0();
  v66 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v65 = (char *)&v64 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v64 - v8;
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_OWORD *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420))(v70, v12);
  v15 = &unk_25692E000;
  v16 = (_QWORD *)&unk_25692E000;
  if (*(_QWORD *)&v70[0] != 15)
  {
    sub_239331658(*(id *)&v70[0]);
    sub_239331658((id)0xF);
    v27 = (char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
    if ((*((_BYTE *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) != 0)
    {
      v28 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
      *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane) = 0;
    }
    else
    {
      v29 = v27[32];
      v30 = *((_OWORD *)v27 + 1);
      v70[0] = *(_OWORD *)v27;
      v70[1] = v30;
      v71 = v29 & 1;
      v31 = sub_2393267F4((uint64_t)v70);
      v28 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
      *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane) = v31;
    }

    goto LABEL_30;
  }
  v64 = (char *)v2;
  sub_239331658((id)0xF);
  sub_239331658((id)0xF);
  v17 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane;
  v18 = *(void **)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
  v19 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
  swift_beginAccess();
  if (v18)
  {
    v20 = *v19;
    v21 = v18;
    swift_bridgeObjectRetain();
    v22 = objc_msgSend(v21, sel_identifier);
    sub_239352008();

    if (*(_QWORD *)(v20 + 16) && (v23 = sub_239292F4C((uint64_t)v14), (v24 & 1) != 0))
    {
      v25 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v23);
      v26 = v25;
    }
    else
    {
      v25 = 0;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v32 = *(void **)((char *)v1 + v17);
  *(_QWORD *)((char *)v1 + v17) = v25;

  v15 = &unk_25692E000;
  v33 = v66;
  if (!*(_QWORD *)((char *)v1 + v17))
  {
    v16 = &unk_25692E000;
    v41 = *(void **)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
    if (v41)
    {
      v42 = v41;
      v43 = sub_239275A60();
      v44 = v64;
      (*(void (**)(char *, uint64_t, char *))(v33 + 16))(v9, v43, v64);
      v45 = sub_239352098();
      v46 = sub_239352578();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc();
        v65 = v42;
        v48 = (uint8_t *)v47;
        v33 = swift_slowAlloc();
        v69[0] = v33;
        *(_DWORD *)v48 = 136380675;
        v67 = sub_23925F3EC(0x6C50657461647075, 0xED00002928656E61, v69);
        v16 = (_QWORD *)&unk_25692E000;
        v15 = (_QWORD *)&unk_25692E000;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v45, v46, "ObjectCaptureSession.%{private}s: Plane under the object was removed, looking for another plane close to the old plane.", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v33, -1, -1);
        v49 = v48;
        v42 = v65;
        MEMORY[0x23B83BC04](v49, -1, -1);

        (*(void (**)(char *, char *))(v66 + 8))(v9, v44);
      }
      else
      {

        (*(void (**)(char *, char *))(v33 + 8))(v9, v44);
      }
      v55 = sub_239326464(v42);
      v51 = *(NSObject **)((char *)v1 + v17);
      *(_QWORD *)((char *)v1 + v17) = v55;

      if (*(_QWORD *)((char *)v1 + v17))
        goto LABEL_30;
      __break(1u);
    }
    else
    {
      v17 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane;
      if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) & 1) != 0)
        goto LABEL_30;
      v50 = sub_239275A60();
      v42 = v64;
      v44 = v65;
      (*(void (**)(char *, uint64_t, char *))(v33 + 16))(v65, v50, v64);
      v51 = sub_239352098();
      v52 = sub_23935256C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        v69[0] = v54;
        *(_DWORD *)v53 = 136380675;
        v67 = sub_23925F3EC(0x6C50657461647075, 0xED00002928656E61, v69);
        v15 = (_QWORD *)&unk_25692E000;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v51, v52, "ObjectCaptureSession.%{private}s: Plane under the object was removed, cloudn't find another plane close to the old plane. Setting should wait for plane = true.", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v54, -1, -1);
        MEMORY[0x23B83BC04](v53, -1, -1);

        (*(void (**)(char *, char *))(v66 + 8))(v65, v42);
LABEL_29:
        *((_BYTE *)v1 + v17) = 1;
        goto LABEL_30;
      }
    }

    (*(void (**)(char *, char *))(v33 + 8))(v44, v42);
    goto LABEL_29;
  }
  v34 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane;
  v16 = (_QWORD *)&unk_25692E000;
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane) == 1)
  {
    v35 = sub_239275A60();
    v36 = v64;
    (*(void (**)(char *, uint64_t, char *))(v33 + 16))(v5, v35, v64);
    v37 = sub_239352098();
    v38 = sub_239352578();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v69[0] = v40;
      *(_DWORD *)v39 = 136380675;
      v67 = sub_23925F3EC(0x6C50657461647075, 0xED00002928656E61, v69);
      v15 = (_QWORD *)&unk_25692E000;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v37, v38, "ObjectCaptureSession.%{private}s: Found a new plane under the object after it was removed. Setting should wait for plane = false.", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v40, -1, -1);
      MEMORY[0x23B83BC04](v39, -1, -1);

      (*(void (**)(char *, char *))(v66 + 8))(v5, v64);
    }
    else
    {

      (*(void (**)(char *, char *))(v33 + 8))(v5, v36);
    }
    *((_BYTE *)v1 + v34) = 0;
  }
LABEL_30:
  v56 = v15[299];
  v57 = *(void **)((char *)v1 + v56);
  v58 = *(void **)((char *)v1 + v16[300]);
  v59 = v58;
  v60 = v57;
  sub_239337648(v57, v58);

  if (*((_BYTE *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection) == 1)
  {
    sub_239326DC0();
    v61 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
    swift_beginAccess();
    v62 = *(void **)((char *)v1 + v56);
    v67 = *v61;
    v68 = v62;
    v63 = v62;
    swift_bridgeObjectRetain();
    sub_2393520D4();

    swift_bridgeObjectRelease();
    swift_release();
  }
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didUpdate:)(ARSession _, Swift::OpaquePointer didUpdate)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  objc_class *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  objc_class *isa;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = sub_239352170();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393521C4();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)&isa - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&isa - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  swift_bridgeObjectRetain_n();
  v15 = sub_239352098();
  v16 = sub_239352560();
  if (os_log_type_enabled(v15, v16))
  {
    isa = _.super.isa;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136380931;
    v34 = sub_23925F3EC(0xD000000000000015, 0x800000023935E870, aBlock);
    sub_2393526B0();
    *(_WORD *)(v17 + 12) = 2050;
    if ((unint64_t)didUpdate._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_239352854();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)(((unint64_t)didUpdate._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v34 = v19;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: has been called. #anchors = %{public}ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v18, -1, -1);
    MEMORY[0x23B83BC04](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    _.super.isa = isa;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    v20 = swift_allocObject();
    *(Swift::OpaquePointer *)(v20 + 16) = didUpdate;
    *(_QWORD *)(v20 + 24) = v3;
    *(ARSession *)(v20 + 32) = _;
    aBlock[4] = (uint64_t)sub_2393375F8;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_239262EDC;
    aBlock[3] = (uint64_t)&unk_250AC6FF0;
    v21 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v22 = v3;
    v23 = _.super.isa;
    v24 = v28;
    sub_239352188();
    v34 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    v25 = v31;
    v26 = v33;
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v24, v25, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
    swift_release();
  }
}

void sub_239322AC8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  char *isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  id v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  _QWORD *v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  id v97;
  simd_float4 v98;
  simd_float4 v99;
  simd_float4 v100;
  simd_float4 *v101;
  char *v102;
  NSObject *v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  _BOOL4 v109;
  uint64_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int8x16_t v113;
  int8x16_t v114;
  double v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  char *v122;
  simd_float4 v123;
  simd_float4 v124;
  uint64_t v125;
  uint64_t v126;
  __n128 v127;
  uint64_t v128;
  __n128 v129;
  __n128 v130;
  __n128 v131;
  uint64_t v132;
  void (*v133)(uint64_t, __n128, __n128, __n128, __n128);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  Class v138;
  unint64_t v139;
  char v140;
  unint64_t v141;
  uint64_t v142;
  Class v143;
  uint64_t v144;
  void (*v145)(uint64_t, _QWORD, uint64_t, NSObject *);
  unsigned int (*v146)(uint64_t, uint64_t, NSObject *);
  uint64_t (*v147)();
  void (*v148)(_QWORD *);
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  __n128 v152;
  Class v153;
  unint64_t v154;
  char v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  NSObject *v160;
  os_log_type_t v161;
  _BOOL4 v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *);
  char *v177;
  uint64_t v178;
  NSObject *v179;
  NSObject *v180;
  os_log_type_t v181;
  __int32 v182;
  _BOOL4 v183;
  uint64_t v184;
  uint64_t v185;
  NSObject *v186;
  NSObject *v187;
  id v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  void (*v192)(char *, uint64_t);
  char *v193;
  uint64_t v194;
  int *v195;
  id v196;
  uint64_t v197;
  Class v198;
  unint64_t v199;
  char v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(uint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v207;
  uint64_t (*v208)(uint64_t, uint64_t);
  int v209;
  uint64_t v210;
  int *v211;
  id v212;
  char *v213;
  __n128 v214;
  __n128 v215;
  __n128 v216;
  __n128 v217;
  void (*v218)(char *, char *, int *);
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  unint64_t v223;
  uint64_t v224;
  _BOOL8 v225;
  uint64_t v226;
  char v227;
  unint64_t v228;
  char v229;
  uint64_t v230;
  __n128 *v231;
  __n128 v232;
  __n128 v233;
  uint64_t v234;
  NSObject *v235;
  void (*v236)(char *, NSObject *);
  id v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char v242;
  uint64_t v243;
  __n128 v244;
  __n128 v245;
  __n128 v246;
  __n128 v247;
  uint64_t v248;
  char v249;
  id v250;
  NSObject v251;
  unint64_t v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  int *v257;
  id v258;
  NSObject *v259;
  os_log_type_t v260;
  uint64_t v261;
  id v262;
  uint64_t v263;
  char *v264;
  NSObject *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  os_log_type_t v269;
  uint64_t v270;
  id v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  _QWORD *v277;
  uint64_t v278;
  void (*v279)(uint64_t);
  uint64_t v280;
  uint64_t v281;
  void (*v282)(unint64_t);
  id v283;
  void *v284;
  id v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v289;
  uint64_t (*v290)(void);
  void *v291;
  id v292;
  id v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t (*v296)(void);
  _QWORD v297[2];
  uint64_t v298;
  uint64_t v299;
  char *v300;
  int *v301;
  char *v302;
  uint64_t v303;
  unint64_t v304;
  char *v305;
  uint64_t v306;
  int *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  unint64_t v311;
  char *v312;
  uint64_t v313;
  char *v314;
  char *v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  simd_float4 *v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  _QWORD *v326;
  char *v327;
  __n128 v328;
  __n128 v329;
  __n128 v330;
  __n128 v331;
  char *v332;
  unint64_t v333;
  unint64_t v334;
  __int128 v335;
  __n128 v336;
  __n128 v337;
  __n128 v338;
  NSObject *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  unint64_t v345;
  simd_float4 v346;
  char *v347;
  int *v348;
  int v349;
  uint64_t v350;
  simd_float4 v351;
  simd_float4 v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  simd_float4 v357;
  char *v358;
  NSObject *v359;
  NSObject *v360;
  uint64_t v361;
  uint64_t v362;
  unint64_t v363;
  char *v364;
  char *v365;
  unint64_t v366;
  _OWORD v367[10];
  CoreOC::OCBoundingBox v368[2];
  _QWORD v369[4];
  uint64_t v370[4];

  v6 = sub_239352680();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v323 = (char *)v297 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v322 = (char *)v297 - v9;
  v10 = sub_23925FB08(&qword_25692B620);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v297 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (int *)((char *)v297 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v318 = (char *)v297 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v343 = (char *)v297 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v353 = (uint64_t)v297 - v21;
  v22 = sub_23925FB08(&qword_2569281C0);
  MEMORY[0x24BDAC7A8](v22);
  v354 = (char *)v297 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350 = sub_2393520B0();
  v341 = *(_QWORD *)(v350 - 8);
  v24 = MEMORY[0x24BDAC7A8](v350);
  v325 = (char *)v297 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v305 = (char *)v297 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v327 = (char *)v297 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v347 = (char *)v297 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v332 = (char *)v297 - v32;
  v33 = sub_239352020();
  isa = (char *)v33[-1].isa;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v315 = (char *)v297 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v312 = (char *)v297 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v314 = (char *)v297 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v319 = (char *)v297 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v317 = (char *)v297 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v316 = (char *)v297 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v320 = (char *)v297 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  isUniquelyReferenced_nonNull_native = (uint64_t)v297 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49);
  v348 = (int *)((char *)v297 - v53);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v364 = (char *)v297 - v55;
  MEMORY[0x24BDAC7A8](v54);
  v344 = (uint64_t)v297 - v56;
  v334 = sub_2392C2C48(MEMORY[0x24BEE4AF8]);
  if (a1 >> 62)
    goto LABEL_168;
  v57 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v58 = v57;
  if (!v57)
  {
LABEL_169:
    swift_bridgeObjectRelease();
    v277 = &unk_25692E000;
    v276 = v334;
    goto LABEL_170;
  }
LABEL_3:
  v358 = isa;
  v300 = v13;
  v301 = v16;
  v311 = a3;
  v362 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart;
  v361 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager;
  v59 = a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  v60 = a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap;
  v342 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  v13 = (char *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap);
  v298 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager;
  v321 = (simd_float4 *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox);
  v309 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager;
  v310 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction;
  v326 = (_QWORD *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
  v366 = a1 & 0xC000000000000001;
  v313 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID;
  v365 = (char *)v58;
  v308 = a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment;
  swift_beginAccess();
  v359 = v59;
  swift_beginAccess();
  v299 = v60;
  swift_beginAccess();
  v302 = v13;
  swift_beginAccess();
  v349 = 0;
  a3 = 0;
  v355 = a1 & 0xFFFFFFFFFFFFFF8;
  v363 = a1;
  v345 = a1 + 32;
  v297[1] = (char *)v367 + 8;
  *(_QWORD *)&v61 = 136380931;
  v335 = v61;
  v333 = (unint64_t)"session(_:didAdd:)";
  v304 = 0x800000023935E870;
  v303 = MEMORY[0x24BEE4AD8] + 8;
  v356 = a2;
  v360 = v33;
  v340 = isUniquelyReferenced_nonNull_native;
  do
  {
    while (1)
    {
      if (v366)
      {
        v64 = (id)MEMORY[0x23B83A68C](a3, v363);
      }
      else
      {
        if (a3 >= *(_QWORD *)(v355 + 16))
          goto LABEL_167;
        v64 = *(id *)(v345 + 8 * a3);
      }
      v65 = v64;
      v13 = (char *)(a3 + 1);
      if (__OFADD__(a3, 1))
      {
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        swift_bridgeObjectRetain();
        v58 = sub_239352854();
        if (!v58)
          goto LABEL_169;
        goto LABEL_3;
      }
      objc_opt_self();
      v66 = swift_dynamicCastObjCClass();
      if (v66)
      {
        isa = (char *)v66;
        v336.n128_u64[0] = a3 + 1;
LABEL_56:
        v82 = v65;
        v83 = objc_msgSend(isa, sel_identifier);
        a1 = v344;
        sub_239352008();

        v84 = v326;
        swift_beginAccess();
        v33 = v82;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v367[0] = *v84;
        v85 = *(_QWORD *)&v367[0];
        *v84 = 0x8000000000000000;
        v87 = sub_239292F4C(a1);
        v88 = *(_QWORD *)(v85 + 16);
        v89 = (v86 & 1) == 0;
        v90 = v88 + v89;
        if (__OFADD__(v88, v89))
        {
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          (*(void (**)(uint64_t, uint64_t, uint64_t, NSObject *))(a1 + 56))(a2, 1, 1, v33);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          ((void (*)(char *, uint64_t, uint64_t, int *))a2)(v300, 1, 1, v16);
LABEL_190:
          __break(1u);
LABEL_191:
          sub_239352908();
          __break(1u);
          JUMPOUT(0x239324CE4);
        }
        a2 = v86;
        if (*(_QWORD *)(v85 + 24) >= v90)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_23932F418(&qword_25692B6F0);
        }
        else
        {
          sub_23932DA3C(v90, isUniquelyReferenced_nonNull_native, &qword_25692B6F0);
          v91 = sub_239292F4C(v344);
          if ((a2 & 1) != (v92 & 1))
            goto LABEL_191;
          v87 = v91;
        }
        v13 = v358;
        v93 = *(_QWORD **)&v367[0];
        if ((a2 & 1) != 0)
        {
          a1 = *(_QWORD *)(*(_QWORD *)&v367[0] + 56);
          v62 = 8 * v87;

          *(_QWORD *)(a1 + v62) = isa;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)&v367[0] + 8 * (v87 >> 6) + 64) |= 1 << v87;
          (*((void (**)(unint64_t, uint64_t, NSObject *))v13 + 2))(v93[6] + *((_QWORD *)v13 + 9) * v87, v344, v360);
          *(_QWORD *)(v93[7] + 8 * v87) = isa;
          v94 = v93[2];
          v95 = __OFADD__(v94, 1);
          v96 = v94 + 1;
          if (v95)
            goto LABEL_183;
          v93[2] = v96;
        }
        *v326 = v93;
        swift_bridgeObjectRelease();
        (*((void (**)(uint64_t, NSObject *))v13 + 1))(v344, v360);
        swift_endAccess();

        a2 = v356;
        goto LABEL_6;
      }
      isUniquelyReferenced_nonNull_native = type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor();
      v67 = swift_dynamicCastClass();
      if (!v67)
        break;
      isa = (char *)v67;
      v336.n128_u64[0] = a3 + 1;
LABEL_66:
      v97 = v65;
      OCBoundingBox.init(transform:)(v368, (simd_float4x4 *)objc_msgSend(isa, sel_transform));
      v98 = v368[0].transform.columns[1];
      v99 = v368[0].transform.columns[2];
      v100 = v368[0].transform.columns[3];
      v101 = v321;
      v357 = v368[0].transform.columns[0];
      *v321 = v368[0].transform.columns[0];
      v101[1] = v98;
      v351 = v99;
      v352 = v98;
      v101[2] = v99;
      v101[3] = v100;
      v346 = v100;
      v101[4].i8[0] = 0;
      (*(void (**)(_OWORD *__return_ptr))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a2) + 0x420))(v367);
      v102 = v332;
      if (*(_QWORD *)&v367[0] == 15)
      {
        sub_239331658((id)0xF);
        sub_239331658((id)0xF);
        v367[0] = v357;
        v367[1] = v352;
        v367[2] = v351;
        v367[3] = v346;
        sub_239345BA8(*(_QWORD *)(a2 + v313));
      }
      else
      {
        sub_239331658(*(id *)&v367[0]);
        sub_239331658((id)0xF);
      }
      v103 = sub_239275A60();
      v104 = v341;
      v105 = *(void (**)(char *))(v341 + 16);
      v339 = v103;
      v106 = v350;
      v338.n128_u64[0] = (unint64_t)v105;
      v105(v102);
      v16 = (int *)v97;
      v107 = sub_239352098();
      v108 = sub_239352578();
      v109 = os_log_type_enabled(v107, v108);
      v307 = v16;
      if (v109)
      {
        v110 = swift_slowAlloc();
        v357.i64[0] = swift_slowAlloc();
        v368[0].transform.columns[0].i64[0] = v357.i64[0];
        *(_DWORD *)v110 = v335;
        *(_QWORD *)(v110 + 4) = sub_23925F3EC(0xD000000000000015, v333 | 0x8000000000000000, (uint64_t *)v368);
        *(_WORD *)(v110 + 12) = 2082;
        objc_msgSend(isa, sel_transform);
        *(int32x2_t *)&v115 = sub_2392DEC48(v111, v112, v113, v114);
        isa = v116;
        v117 = MEMORY[0x23B83A2FC](v115);
        v119 = v118;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v110 + 14) = sub_23925F3EC(v117, v119, (uint64_t *)v368);

        a2 = v356;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v107, v108, "ObjectCaptureSession.%{private}s: Bounding box anchor updated: %{public}s", (uint8_t *)v110, 0x16u);
        v120 = v357.i64[0];
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v120, -1, -1);
        MEMORY[0x23B83BC04](v110, -1, -1);

        v121 = *(void (**)(char *, uint64_t))(v104 + 8);
        v122 = v332;
      }
      else
      {

        v121 = *(void (**)(char *, uint64_t))(v104 + 8);
        v122 = v102;
      }
      v337.n128_u64[0] = (unint64_t)v121;
      v121(v122, v106);
      v33 = v360;
      isUniquelyReferenced_nonNull_native = (uint64_t)v358;
      if ((v321[4].i8[0] & 1) != 0)
        goto LABEL_188;
      v124 = v321[1];
      v123 = v321[2];
      v125 = v321[3].i64[0];
      v126 = v321[3].i64[1];
      v368[0].transform.columns[0] = *v321;
      v368[0].transform.columns[1] = v124;
      v368[0].transform.columns[2] = v123;
      v368[0].transform.columns[3].i64[1] = v126;
      v368[0].transform.columns[3].i64[0] = v125;
      v127.n128_f64[0] = OCBoundingBox.scaledTransform(scale:)(COERCE_FLOAT(*(_OWORD *)(a2 + v310)));
      v128 = *(_QWORD *)(a2 + v309);
      v330 = v129;
      v331 = v127;
      v328 = v131;
      v329 = v130;
      if (v128)
      {
        v132 = *(_QWORD *)(a2 + v313);
        v133 = *(void (**)(uint64_t, __n128, __n128, __n128, __n128))(*(_QWORD *)v128 + 600);
        swift_retain();
        v133(v132, v331, v330, v329, v328);
        swift_release();
      }
      v134 = *(_QWORD *)v308;
      v13 = *(char **)(*(_QWORD *)v308 + 16);
      v306 = *(_QWORD *)v308;
      if (v13)
      {
        isa = (char *)(v134
                     + ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80)));
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v351.i64[0] = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72);
        v357.i64[0] = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
        v135 = v353;
        v136 = v354;
        ((void (*)(char *, char *, NSObject *))v357.i64[0])(v354, isa, v33);
        while (1)
        {
          v352.i64[0] = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56);
          ((void (*)(char *, _QWORD, uint64_t, NSObject *))v352.i64[0])(v136, 0, 1, v33);
          if ((*(unsigned int (**)(char *, uint64_t, NSObject *))(isUniquelyReferenced_nonNull_native + 48))(v136, 1, v33) == 1)goto LABEL_111;
          v16 = (int *)v364;
          (*(void (**)(char *, char *, NSObject *))(isUniquelyReferenced_nonNull_native + 32))(v364, v136, v33);
          v138 = v359->isa;
          if (!*((_QWORD *)v359->isa + 2))
            break;
          swift_bridgeObjectRetain();
          v139 = sub_239292F4C((uint64_t)v16);
          if ((v140 & 1) != 0)
          {
            v141 = v139;
            v142 = *((_QWORD *)v138 + 7);
            v33 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
            v143 = v33[-1].isa;
            v144 = v142 + *((_QWORD *)v143 + 9) * v141;
            v135 = v353;
            sub_239268820(v144, v353, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v145 = (void (*)(uint64_t, _QWORD, uint64_t, NSObject *))*((_QWORD *)v143 + 7);
            a2 = v356;
            v145(v135, 0, 1, v33);
          }
          else
          {
            v33 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
            v135 = v353;
            (*((void (**)(uint64_t, uint64_t, uint64_t, NSObject *))v33[-1].isa + 7))(v353, 1, 1, v33);
          }
          swift_bridgeObjectRelease();
          type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
          a1 = (unint64_t)v33[-1].isa;
          v146 = *(unsigned int (**)(uint64_t, uint64_t, NSObject *))(a1 + 48);
          if (v146(v135, 1, v33) == 1)
            goto LABEL_78;
          sub_23925FE28(v135, &qword_25692B620);
          v16 = v348;
          ((void (*)(int *, char *, NSObject *))v357.i64[0])(v348, v364, v360);
          v147 = sub_2392FE248();
          v148 = sub_239314224(v369);
          a2 = v149;
          if (v146(v149, 1, v33) == 1)
            goto LABEL_185;
          v150 = a2 + SHIDWORD(v33[3].isa);
          sub_239268764(v150, (uint64_t)v367, &qword_25692A8C0);
          sub_239268764((uint64_t)v367, (uint64_t)v368, &qword_25692A8C0);
          if (sub_2392687A8((uint64_t)v368) != 1)
          {
            v151 = v330;
            *(__n128 *)v150 = v331;
            *(__n128 *)(v150 + 16) = v151;
            v152 = v328;
            *(__n128 *)(v150 + 32) = v329;
            *(__n128 *)(v150 + 48) = v152;
          }
          ((void (*)(_QWORD *, _QWORD))v148)(v369, 0);
          v346.i64[0] = *((_QWORD *)v358 + 1);
          ((void (*)(int *, NSObject *))v346.i64[0])(v348, v360);
          ((void (*)(uint64_t *, _QWORD))v147)(v370, 0);
          a2 = (uint64_t)v343;
          v16 = (int *)v364;
          sub_239327338();
          v153 = v359->isa;
          if (!*((_QWORD *)v359->isa + 2))
            goto LABEL_186;
          swift_bridgeObjectRetain();
          v154 = sub_239292F4C((uint64_t)v16);
          if ((v155 & 1) != 0)
          {
            sub_239268820(*((_QWORD *)v153 + 7) + *(_QWORD *)(a1 + 72) * v154, a2, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v156 = 0;
          }
          else
          {
            v156 = 1;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, NSObject *))(a1 + 56))(a2, v156, 1, v33);
          swift_bridgeObjectRelease();
          if (v146(a2, 1, v33) == 1)
            goto LABEL_187;
          sub_2393520D4();
          swift_release();
          sub_2392688AC(a2, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          v157 = v347;
          v158 = v350;
          ((void (*)(char *, NSObject *, uint64_t))v338.n128_u64[0])(v347, v339, v350);
          v159 = v340;
          v33 = v360;
          ((void (*)(uint64_t, char *, NSObject *))v357.i64[0])(v340, v364, v360);
          v160 = sub_239352098();
          v161 = sub_239352578();
          v162 = os_log_type_enabled(v160, v161);
          v136 = v354;
          if (v162)
          {
            v163 = swift_slowAlloc();
            v324 = swift_slowAlloc();
            v370[0] = v324;
            *(_DWORD *)v163 = v335;
            *(_QWORD *)(v163 + 4) = sub_23925F3EC(0xD000000000000015, v333 | 0x8000000000000000, v370);
            *(_WORD *)(v163 + 12) = 2082;
            sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
            v164 = sub_2393528C0();
            *(_QWORD *)(v163 + 14) = sub_23925F3EC(v164, v165, v370);
            swift_bridgeObjectRelease();
            v166 = v159;
            v16 = (int *)v346.i64[0];
            ((void (*)(uint64_t, NSObject *))v346.i64[0])(v166, v33);
            _os_log_impl(&dword_23925B000, v160, v161, "ObjectCaptureSession.%{private}s: Published bounding box update for shot %{public}s", (uint8_t *)v163, 0x16u);
            v167 = v324;
            swift_arrayDestroy();
            v168 = v167;
            v169 = v347;
            MEMORY[0x23B83BC04](v168, -1, -1);
            MEMORY[0x23B83BC04](v163, -1, -1);

            v170 = v169;
            v171 = v350;
          }
          else
          {

            v172 = v159;
            v16 = (int *)v346.i64[0];
            ((void (*)(uint64_t, NSObject *))v346.i64[0])(v172, v33);
            v170 = v157;
            v171 = v158;
          }
          ((void (*)(char *, uint64_t))v337.n128_u64[0])(v170, v171);
          ((void (*)(char *, NSObject *))v16)(v364, v33);
          a2 = v356;
          v135 = v353;
          isUniquelyReferenced_nonNull_native = (uint64_t)v358;
LABEL_79:
          isa += v351.i64[0];
          if (!--v13)
          {
            ((void (*)(char *, uint64_t, uint64_t, NSObject *))v352.i64[0])(v136, 1, 1, v33);
            goto LABEL_111;
          }
          ((void (*)(char *, char *, NSObject *))v357.i64[0])(v136, isa, v33);
        }
        v137 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v135, 1, 1, v137);
LABEL_78:
        sub_23925FE28(v135, &qword_25692B620);
        isUniquelyReferenced_nonNull_native = (uint64_t)v358;
        v33 = v360;
        (*((void (**)(char *, NSObject *))v358 + 1))(v364, v360);
        v136 = v354;
        goto LABEL_79;
      }
      swift_bridgeObjectRetain();
      (*(void (**)(char *, uint64_t, uint64_t, NSObject *))(isUniquelyReferenced_nonNull_native + 56))(v354, 1, 1, v33);
LABEL_111:
      a1 = (unint64_t)v307;

      swift_bridgeObjectRelease();
LABEL_6:
      v63 = v365;
      a3 = v336.n128_u64[0];
LABEL_7:
      if ((char *)a3 == v63)
      {
        swift_bridgeObjectRelease();
        a3 = v311;
        v276 = v334;
        v277 = (_QWORD *)&unk_25692E000;
        if ((v349 & 1) != 0)
          goto LABEL_164;
        goto LABEL_170;
      }
    }
    v33 = type metadata accessor for ObjectCaptureSession.ShotAnchor();
    v68 = swift_dynamicCastClass();
    if (v68)
    {
      isa = (char *)v68;
LABEL_101:
      v173 = v65;
      v174 = sub_239275A60();
      v175 = v341;
      v176 = *(void (**)(char *))(v341 + 16);
      v177 = v327;
      v346.i64[0] = v174;
      v178 = v350;
      v351.i64[0] = (uint64_t)v176;
      v176(v327);
      v179 = v173;
      v180 = sub_239352098();
      v181 = sub_239352578();
      v182 = v181;
      v183 = os_log_type_enabled(v180, v181);
      v339 = v179;
      if (v183)
      {
        v184 = swift_slowAlloc();
        v185 = swift_slowAlloc();
        v368[0].transform.columns[0].i64[0] = v185;
        *(_DWORD *)v184 = v335;
        *(_QWORD *)(v184 + 4) = sub_23925F3EC(0xD000000000000015, v304, (uint64_t *)v368);
        *(_WORD *)(v184 + 12) = 2082;
        v186 = v179;
        v357.i32[0] = v182;
        v187 = v186;
        v188 = objc_msgSend(isa, sel_description);
        v189 = sub_2393522F0();
        v191 = v190;

        *(_QWORD *)(v184 + 14) = sub_23925F3EC(v189, v191, (uint64_t *)v368);
        v178 = v350;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v180, (os_log_type_t)v357.i8[0], "ObjectCaptureSession.%{private}s: Received shot anchor update: %{public}s", (uint8_t *)v184, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v185, -1, -1);
        MEMORY[0x23B83BC04](v184, -1, -1);

        v192 = *(void (**)(char *, uint64_t))(v341 + 8);
        v193 = v327;
      }
      else
      {

        v192 = *(void (**)(char *, uint64_t))(v175 + 8);
        v193 = v177;
      }
      v352.i64[0] = (uint64_t)v192;
      v192(v193, v178);
      v194 = (uint64_t)v318;
      v195 = (int *)v360;
      isUniquelyReferenced_nonNull_native = (uint64_t)v358;
      v196 = objc_msgSend(isa, sel_identifier);
      v197 = (uint64_t)v320;
      sub_239352008();

      v198 = v359->isa;
      if (*((_QWORD *)v359->isa + 2))
      {
        swift_bridgeObjectRetain();
        v199 = sub_239292F4C(v197);
        if ((v200 & 1) != 0)
        {
          v201 = v199;
          v202 = *((_QWORD *)v198 + 7);
          v203 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
          v204 = *(_QWORD *)(v203 - 8);
          v205 = v202 + *(_QWORD *)(v204 + 72) * v201;
          v197 = (uint64_t)v320;
          sub_239268820(v205, v194, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          v206 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v204 + 56);
          v195 = (int *)v360;
          v206(v194, 0, 1, v203);
        }
        else
        {
          v203 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 56))(v194, 1, 1, v203);
        }
        swift_bridgeObjectRelease();
        v178 = v350;
      }
      else
      {
        v203 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 56))(v194, 1, 1, v203);
      }
      v357.i64[0] = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8);
      ((void (*)(uint64_t, int *))v357.i64[0])(v197, v195);
      type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      a1 = *(_QWORD *)(v203 - 8);
      v207 = v203;
      v16 = v195;
      v208 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 48);
      v338.n128_u64[0] = v207;
      v209 = v208(v194, 1);
      v210 = sub_23925FE28(v194, &qword_25692B620);
      if (v209 == 1)
      {
        a2 = v356;
        a1 = (unint64_t)v325;
        v211 = v16;
        goto LABEL_145;
      }
      v329.n128_u64[0] = (unint64_t)v208;
      v212 = objc_msgSend(isa, sel_identifier);
      v213 = v316;
      sub_239352008();

      objc_msgSend(isa, sel_transform);
      v336 = v215;
      v337 = v214;
      v330 = v217;
      v331 = v216;
      v33 = v359;
      swift_beginAccess();
      v218 = *(void (**)(char *, char *, int *))(isUniquelyReferenced_nonNull_native + 16);
      v219 = v317;
      v218(v317, v213, v16);
      a2 = swift_isUniquelyReferenced_nonNull_native();
      v220 = (uint64_t)v319;
      v218(v319, v219, v16);
      *&v367[0] = (NSObject)v33->isa;
      v221 = *(_QWORD *)&v367[0];
      v33->isa = (Class)0x8000000000000000;
      v223 = sub_239292F4C(v220);
      v224 = *(_QWORD *)(v221 + 16);
      v225 = (v222 & 1) == 0;
      v226 = v224 + v225;
      if (__OFADD__(v224, v225))
        goto LABEL_184;
      v227 = v222;
      if (*(_QWORD *)(v221 + 24) >= v226)
      {
        v16 = (int *)v338.n128_u64[0];
        if ((a2 & 1) != 0)
        {
          if ((v222 & 1) == 0)
            goto LABEL_161;
        }
        else
        {
          sub_23932EB80();
          if ((v227 & 1) == 0)
            goto LABEL_161;
        }
      }
      else
      {
        sub_23932CCB8(v226, a2);
        v228 = sub_239292F4C((uint64_t)v319);
        v16 = (int *)v338.n128_u64[0];
        if ((v227 & 1) != (v229 & 1))
          goto LABEL_191;
        v223 = v228;
        if ((v227 & 1) == 0)
        {
LABEL_161:
          (*(void (**)(int *, uint64_t, uint64_t, int *))(a1 + 56))(v301, 1, 1, v16);
          __break(1u);
          break;
        }
      }
      isUniquelyReferenced_nonNull_native = *(_QWORD *)(a1 + 72);
      v230 = (uint64_t)v301;
      sub_2392C4FE0(*(_QWORD *)(*(_QWORD *)&v367[0] + 56) + isUniquelyReferenced_nonNull_native * v223, (uint64_t)v301, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      a2 = *(_QWORD *)(a1 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, int *))a2)(v230, 0, 1, v16);
      v231 = (__n128 *)(v230 + v16[5]);
      v232 = v336;
      v231[3] = v337;
      v231[4] = v232;
      v233 = v330;
      v231[5] = v331;
      v231[6] = v233;
      v234 = (uint64_t)v319;
      sub_239330210(v230, 1, (uint64_t *)v367, v223, (uint64_t)v319);
      sub_23925FE28(v230, &qword_25692B620);
      v235 = v360;
      v236 = (void (*)(char *, NSObject *))v357.i64[0];
      ((void (*)(uint64_t, NSObject *))v357.i64[0])(v234, v360);
      v359->isa = *(Class *)&v367[0];
      v236(v317, v235);
      v236(v316, v235);
      swift_endAccess();
      v237 = objc_msgSend(isa, sel_identifier);
      v238 = (uint64_t)v314;
      sub_239352008();

      v239 = *(_QWORD *)v299;
      v240 = (uint64_t)v312;
      if (*(_QWORD *)(*(_QWORD *)v299 + 16))
      {
        swift_bridgeObjectRetain();
        v241 = sub_239292F4C(v238);
        if ((v242 & 1) != 0)
        {
          v243 = *(_QWORD *)(*(_QWORD *)(v239 + 56) + 8 * v241);
          swift_bridgeObjectRelease();
          ((void (*)(char *, NSObject *))v357.i64[0])(v314, v235);
          objc_msgSend(isa, sel_transform);
          v337 = v245;
          v338 = v244;
          v336 = v246;
          v331 = v247;
          v248 = v334;
          v249 = swift_isUniquelyReferenced_nonNull_native();
          v368[0].transform.columns[0].i64[0] = v248;
          sub_23932E8E4(v243, v249, v338, v337, v336, v331);
          v334 = v368[0].transform.columns[0].i64[0];
          swift_bridgeObjectRelease();
LABEL_139:
          sub_239327338();
          v250 = objc_msgSend(isa, sel_identifier);
          sub_239352008();

          v251.isa = v359->isa;
          if (!*((_QWORD *)v359->isa + 2))
            goto LABEL_189;
          swift_bridgeObjectRetain();
          v252 = sub_239292F4C(v240);
          if ((v253 & 1) != 0)
          {
            v254 = (uint64_t)v300;
            sub_239268820(*((_QWORD *)v251.isa + 7) + v252 * isUniquelyReferenced_nonNull_native, (uint64_t)v300, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
            v255 = 0;
          }
          else
          {
            v255 = 1;
            v254 = (uint64_t)v300;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, int *))a2)(v254, v255, 1, v16);
          swift_bridgeObjectRelease();
          if (((uint64_t (*)(uint64_t, uint64_t, int *))v329.n128_u64[0])(v254, 1, v16) == 1)
            goto LABEL_190;
          v256 = v240;
          v257 = (int *)v360;
          ((void (*)(uint64_t, NSObject *))v357.i64[0])(v256, v360);
          sub_2393520D4();
          v211 = v257;
          swift_release();
          v210 = sub_2392688AC(v254, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
          a2 = v356;
          v178 = v350;
          a1 = (unint64_t)v325;
LABEL_145:
          (*(void (**)(CoreOC::OCBoundingBox *__return_ptr, uint64_t))((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a2)
                                                                               + 0x420))(v368, v210);
          if (v368[0].transform.columns[0].i64[0] == 15)
          {
            sub_239331658((id)0xF);
            sub_239331658((id)0xF);
            if (*(_QWORD *)(*(_QWORD *)v302 + 16))
            {
              v16 = *(int **)(a2 + v298);
              if (v16)
              {
                swift_retain();
                v258 = objc_msgSend(isa, sel_identifier);
                isUniquelyReferenced_nonNull_native = (uint64_t)v315;
                sub_239352008();

                objc_msgSend(isa, sel_transform);
                LOBYTE(v258) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 504))(isUniquelyReferenced_nonNull_native);
                ((void (*)(uint64_t, int *))v357.i64[0])(isUniquelyReferenced_nonNull_native, v211);
                if ((v258 & 1) != 0)
                {
                  a1 = (unint64_t)v305;
                  ((void (*)(char *, uint64_t, uint64_t))v351.i64[0])(v305, v346.i64[0], v178);
                  v33 = v339;
                  v259 = sub_239352098();
                  v260 = sub_239352578();
                  isUniquelyReferenced_nonNull_native = v260;
                  if (!os_log_type_enabled(v259, v260))
                  {

                    swift_release();
                    v267 = (char *)a1;
                    v275 = v178;
                    goto LABEL_156;
                  }
                  v261 = swift_slowAlloc();
                  v351.i32[0] = isUniquelyReferenced_nonNull_native;
                  isUniquelyReferenced_nonNull_native = v261;
                  v346.i64[0] = swift_slowAlloc();
                  v368[0].transform.columns[0].i64[0] = v346.i64[0];
                  *(_DWORD *)isUniquelyReferenced_nonNull_native = v335;
                  v339 = v259;
                  *(_QWORD *)&v367[0] = sub_23925F3EC(0xD000000000000015, v333 | 0x8000000000000000, (uint64_t *)v368);
                  sub_2393526B0();
                  *(_WORD *)(isUniquelyReferenced_nonNull_native + 12) = 2082;
                  v262 = objc_msgSend(isa, sel_identifier);
                  a1 = (unint64_t)v315;
                  sub_239352008();

                  v263 = sub_239351FF0();
                  isa = v264;
                  ((void (*)(unint64_t, NSObject *))v357.i64[0])(a1, v360);
                  *(_QWORD *)&v367[0] = sub_23925F3EC(v263, (unint64_t)isa, (uint64_t *)v368);
                  sub_2393526B0();

                  swift_bridgeObjectRelease();
                  v265 = v339;
                  _os_log_impl(&dword_23925B000, v339, (os_log_type_t)v351.i8[0], "ObjectCaptureSession.%{private}s: Update shot with id = %{public}s for automatic capture.", (uint8_t *)isUniquelyReferenced_nonNull_native, 0x16u);
                  v266 = v346.i64[0];
                  swift_arrayDestroy();
                  MEMORY[0x23B83BC04](v266, -1, -1);
                  MEMORY[0x23B83BC04](isUniquelyReferenced_nonNull_native, -1, -1);

                  swift_release();
                  v267 = v305;
                  goto LABEL_154;
                }
                swift_release();
              }
            }
          }
          else
          {
            sub_239331658((id)v368[0].transform.columns[0].i64[0]);
            sub_239331658((id)0xF);
          }
          ((void (*)(unint64_t, uint64_t, uint64_t))v351.i64[0])(a1, v346.i64[0], v178);
          v16 = v339;
          v33 = sub_239352098();
          v268 = v178;
          v269 = sub_23935256C();
          if (!os_log_type_enabled(v33, v269))
          {

            v267 = (char *)a1;
            v275 = v268;
            goto LABEL_156;
          }
          isUniquelyReferenced_nonNull_native = swift_slowAlloc();
          v270 = swift_slowAlloc();
          v368[0].transform.columns[0].i64[0] = v270;
          *(_DWORD *)isUniquelyReferenced_nonNull_native = v335;
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 4) = sub_23925F3EC(0xD000000000000015, v333 | 0x8000000000000000, (uint64_t *)v368);
          *(_WORD *)(isUniquelyReferenced_nonNull_native + 12) = 2082;
          v271 = objc_msgSend(isa, sel_identifier);
          a1 = (unint64_t)v315;
          sub_239352008();

          v272 = sub_239351FF0();
          isa = v273;
          ((void (*)(unint64_t, NSObject *))v357.i64[0])(a1, v360);
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 14) = sub_23925F3EC(v272, (unint64_t)isa, (uint64_t *)v368);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23925B000, v33, v269, "ObjectCaptureSession.%{private}s: Failed to update shot with id = %{public}s for automatic capture!", (uint8_t *)isUniquelyReferenced_nonNull_native, 0x16u);
          swift_arrayDestroy();
          v274 = v270;
          a2 = v356;
          MEMORY[0x23B83BC04](v274, -1, -1);
          MEMORY[0x23B83BC04](isUniquelyReferenced_nonNull_native, -1, -1);

          v267 = v325;
LABEL_154:
          v275 = v350;
LABEL_156:
          ((void (*)(char *, uint64_t))v352.i64[0])(v267, v275);
LABEL_157:
          a3 = (unint64_t)v13;
          v63 = v365;
          goto LABEL_7;
        }
        swift_bridgeObjectRelease();
      }
      ((void (*)(uint64_t, NSObject *))v357.i64[0])(v238, v235);
      goto LABEL_139;
    }
    v16 = (int *)a3;
    objc_opt_self();
    v69 = swift_dynamicCastObjCClass();
    if (!v69)
    {
      ++a3;
      goto LABEL_109;
    }
    v70 = v69;
    *(_BYTE *)(a2 + v362) = 1;
    a1 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a2) + 0x420);
    isa = v65;
    ((void (*)(CoreOC::OCBoundingBox *__return_ptr))a1)(v368);
    v71 = v368[0].transform.columns[0].i64[0];
    if (v368[0].transform.columns[0].i64[0] != 15)
    {
      switch(v368[0].transform.columns[0].i64[0])
      {
        case 7:
          v71 = 7;
          break;
        case 0xALL:
          v71 = 10;
          break;
        case 0xBLL:
          v71 = 11;
          break;
        case 0xCLL:
          v71 = 12;
          break;
        case 0xDLL:
          v71 = 13;
          break;
        case 0xELL:
          v71 = 14;
          break;
        case 0x10:
          v71 = 16;
          break;
        case 0x11:
          v71 = 17;
          break;
        default:
          break;
      }
      a3 = (unint64_t)v13;
      goto LABEL_129;
    }
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    v72 = *(_QWORD *)(a2 + v361);
    if (!v72)
    {
      a3 = (unint64_t)v13;
      goto LABEL_130;
    }
    a1 = *(_QWORD *)(*(_QWORD *)v72 + 360);
    swift_retain();
    v73 = ((uint64_t (*)(uint64_t))a1)(v70);
    swift_release();

    if ((v73 & 1) == 0)
      goto LABEL_157;
    if (v13 == v365)
      break;
    a1 = (unint64_t)v16 + 5;
    while (1)
    {
      a3 = a1 - 4;
      if (v366)
      {
        v74 = (id)MEMORY[0x23B83A68C](a1 - 4, v363);
      }
      else
      {
        if (a3 >= *(_QWORD *)(v355 + 16))
          goto LABEL_167;
        v74 = *(id *)(v363 + 8 * a1);
      }
      v65 = v74;
      v16 = (int *)(a1 - 3);
      if (__OFADD__(a3, 1))
        goto LABEL_166;
      objc_opt_self();
      v75 = swift_dynamicCastObjCClass();
      if (v75)
      {
        isa = (char *)v75;
        v336.n128_u64[0] = a1 - 3;
        v349 = 1;
        goto LABEL_56;
      }
      v76 = swift_dynamicCastClass();
      if (v76)
      {
        isa = (char *)v76;
        v336.n128_u64[0] = a1 - 3;
        v349 = 1;
        goto LABEL_66;
      }
      v77 = swift_dynamicCastClass();
      if (v77)
      {
        isa = (char *)v77;
        v349 = 1;
        v13 = (char *)(a1 - 3);
        goto LABEL_101;
      }
      objc_opt_self();
      v78 = swift_dynamicCastObjCClass();
      if (!v78)
      {
        v349 = 1;
        a3 = a1 - 3;
LABEL_109:

        v63 = v365;
        goto LABEL_7;
      }
      v79 = v78;
      *(_BYTE *)(a2 + v362) = 1;
      v13 = *(char **)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)a2) + 0x420);
      isa = v65;
      ((void (*)(CoreOC::OCBoundingBox *__return_ptr))v13)(v368);
      v71 = v368[0].transform.columns[0].i64[0];
      if (v368[0].transform.columns[0].i64[0] != 15)
      {
        switch(v368[0].transform.columns[0].i64[0])
        {
          case 7:
            v349 = 1;
            v71 = 7;
            a3 = a1 - 3;
            break;
          case 0xALL:
            v349 = 1;
            v71 = 10;
            a3 = a1 - 3;
            break;
          case 0xBLL:
            v349 = 1;
            v71 = 11;
            a3 = a1 - 3;
            break;
          case 0xCLL:
            v349 = 1;
            v71 = 12;
            a3 = a1 - 3;
            break;
          case 0xDLL:
            v349 = 1;
            v71 = 13;
            a3 = a1 - 3;
            break;
          case 0xELL:
            v349 = 1;
            v71 = 14;
            a3 = a1 - 3;
            break;
          case 0x10:
            v349 = 1;
            v71 = 16;
            a3 = a1 - 3;
            break;
          case 0x11:
            v349 = 1;
            v71 = 17;
            a3 = a1 - 3;
            break;
          default:
            v349 = 1;
            a3 = a1 - 3;
            break;
        }
LABEL_129:
        sub_239331658((id)v71);
        sub_239331658((id)0xF);
        goto LABEL_130;
      }
      sub_239331658((id)0xF);
      sub_239331658((id)0xF);
      v80 = *(_QWORD *)(a2 + v361);
      if (!v80)
      {
        v349 = 1;
        a3 = a1 - 3;
LABEL_130:

        v63 = v365;
        goto LABEL_7;
      }
      v13 = *(char **)(*(_QWORD *)v80 + 360);
      swift_retain();
      v81 = ((uint64_t (*)(uint64_t))v13)(v79);
      swift_release();

      if ((v81 & 1) == 0)
        break;
      ++a1;
      if (v16 == (int *)v365)
        goto LABEL_162;
    }
    v349 = 1;
    a3 = a1 - 3;
  }
  while (v16 != (int *)v365);
LABEL_162:
  swift_bridgeObjectRelease();
  a3 = v311;
  v276 = v334;
  v277 = (_QWORD *)&unk_25692E000;
LABEL_164:
  v278 = *(_QWORD *)(a2 + v361);
  if (v278)
  {
    v279 = *(void (**)(uint64_t))(*(_QWORD *)v278 + 400);
    v280 = swift_retain();
    v279(v280);
    swift_release();
    v277 = (_QWORD *)&unk_25692E000;
  }
LABEL_170:
  v281 = *(_QWORD *)(a2 + v277[285]);
  if (v281 && *(_QWORD *)(v276 + 16))
  {
    v282 = *(void (**)(unint64_t))(*(_QWORD *)v281 + 592);
    swift_retain();
    v282(v276);
    swift_release();
  }
  swift_bridgeObjectRelease();
  v283 = objc_msgSend((id)a3, sel_currentFrame);
  if (v283)
  {
    v284 = v283;
    v285 = objc_msgSend(v283, sel_camera);
    v286 = (uint64_t)v322;
    sub_23935268C();

    v287 = sub_239352674();
    v288 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 56);
    v289 = (uint64_t)v323;
    v288(v323, 2, 2, v287);
    LOBYTE(v285) = sub_239352668();
    v290 = MEMORY[0x24BEDF358];
    sub_2392688AC(v289, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
    sub_2392688AC(v286, (uint64_t (*)(_QWORD))v290);
    if ((v285 & 1) != 0)
    {
      v291 = *(void **)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
      if (v291)
      {
        v292 = v291;
        v293 = objc_msgSend(v284, sel_camera);
        v294 = (uint64_t)v322;
        sub_23935268C();

        v295 = (uint64_t)v323;
        v288(v323, 2, 2, v287);
        LOBYTE(v293) = sub_239352668();
        v296 = MEMORY[0x24BEDF358];
        sub_2392688AC(v295, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
        sub_2392688AC(v294, (uint64_t (*)(_QWORD))v296);
        if ((v293 & 1) != 0)
        {
          v292 = *(id *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
          *(_QWORD *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane) = v291;
        }

      }
      sub_239321F1C();
    }

  }
}

uint64_t sub_239324D48(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_2392759EC(0, &qword_25692A940);
  v8 = sub_23935244C();
  v9 = a3;
  v10 = a1;
  a5(v9, v8);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:didRemove:)(ARSession _, Swift::OpaquePointer didRemove)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  objc_class *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  objc_class *isa;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = sub_239352170();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393521C4();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)&isa - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393520B0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&isa - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  swift_bridgeObjectRetain_n();
  v15 = sub_239352098();
  v16 = sub_239352560();
  if (os_log_type_enabled(v15, v16))
  {
    isa = _.super.isa;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136380931;
    v34 = sub_23925F3EC(0xD000000000000015, 0x800000023935E890, aBlock);
    sub_2393526B0();
    *(_WORD *)(v17 + 12) = 2050;
    if ((unint64_t)didRemove._rawValue >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_239352854();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)(((unint64_t)didRemove._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v34 = v19;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s has been called. #anchors = %{public}ld", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v18, -1, -1);
    MEMORY[0x23B83BC04](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    _.super.isa = isa;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if ((*((_BYTE *)v3 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    v20 = swift_allocObject();
    *(Swift::OpaquePointer *)(v20 + 16) = didRemove;
    *(_QWORD *)(v20 + 24) = v3;
    *(ARSession *)(v20 + 32) = _;
    aBlock[4] = (uint64_t)sub_23933763C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_239262EDC;
    aBlock[3] = (uint64_t)&unk_250AC7040;
    v21 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    v22 = v3;
    v23 = _.super.isa;
    v24 = v28;
    sub_239352188();
    v34 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    v25 = v31;
    v26 = v33;
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v24, v25, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
    swift_release();
  }
}

void sub_2393251F0(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void *v17;
  void (*v18)(unint64_t, uint64_t);
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  char v38;
  uint64_t (*v39)(void);
  void *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;

  v6 = sub_239352680();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - v10;
  v12 = sub_239352020();
  v46 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_239352854();
    if (v14)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
    goto LABEL_18;
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
    return;
  }
  v42 = a3;
  v43 = v11;
  v44 = v9;
  v45 = a2;
  v15 = 0;
  v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap);
  v47 = a1 & 0xC000000000000001;
  do
  {
    if (v47)
      v19 = (id)MEMORY[0x23B83A68C](v15, a1);
    else
      v19 = *(id *)(a1 + 8 * v15 + 32);
    v17 = v19;
    objc_opt_self();
    v20 = swift_dynamicCastObjCClass();
    if (v20)
    {
      v21 = (void *)v20;
      v22 = v12;
      v23 = a1;
      v24 = v17;
      v25 = objc_msgSend(v21, sel_identifier);
      v26 = (uint64_t)v48;
      sub_239352008();

      swift_beginAccess();
      swift_bridgeObjectRetain();
      v27 = sub_239292F4C(v26);
      LOBYTE(v26) = v28;
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v30 = *v16;
        v49 = *v16;
        *v16 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_23932F418(&qword_25692B6F0);
          v30 = v49;
        }
        v18 = *(void (**)(unint64_t, uint64_t))(v46 + 8);
        v18(*(_QWORD *)(v30 + 48) + *(_QWORD *)(v46 + 72) * v27, v22);
        v31 = v49;
        v17 = *(void **)(*(_QWORD *)(v49 + 56) + 8 * v27);
        sub_2392CDB44(v27, v49);
        *v16 = v31;
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = 0;
        v18 = *(void (**)(unint64_t, uint64_t))(v46 + 8);
      }
      v18((unint64_t)v48, v22);
      swift_endAccess();

      a1 = v23;
      v12 = v22;
    }
    ++v15;

  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  v9 = v44;
  a2 = v45;
  a3 = v42;
  v11 = v43;
LABEL_19:
  v32 = objc_msgSend(a3, sel_currentFrame);
  if (v32)
  {
    v33 = v32;
    v34 = *(void **)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane);
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v33, sel_camera);
      sub_23935268C();

      v37 = sub_239352674();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v9, 2, 2, v37);
      v38 = sub_239352668();
      v39 = MEMORY[0x24BEDF358];
      sub_2392688AC((uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
      sub_2392688AC((uint64_t)v11, (uint64_t (*)(_QWORD))v39);
      if ((v38 & 1) != 0)
      {
        v40 = *(void **)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane);
        *(_QWORD *)(a2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane) = v34;

        v33 = v40;
      }
      else
      {

        v33 = v35;
      }
    }

  }
  sub_239321F1C();
}

Swift::Void __swiftcall ObjectCaptureSession.session(_:cameraDidChangeTrackingState:)(ARSession _, ARCamera cameraDidChangeTrackingState)
{
  sub_239337B38(cameraDidChangeTrackingState.super.isa);
}

uint64_t sub_2393255CC(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char v29;
  uint64_t (*v30)(void);
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  double *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t (*v56)(void);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  double *v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[4];

  v81 = sub_2393521F4();
  v79 = *(_QWORD *)(v81 - 8);
  v4 = MEMORY[0x24BDAC7A8](v81);
  v78 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v80 = (char *)&v70 - v6;
  v7 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (double *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = sub_2393520B0();
  v10 = *(_QWORD *)(v83 - 8);
  v11 = MEMORY[0x24BDAC7A8](v83);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (void (*)(char *, uint64_t))((char *)&v70 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v70 - v17;
  v19 = sub_239352680();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v70 - v24;
  if (a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] != 1)
    return result;
  v76 = v9;
  v77 = v16;
  v82 = a1;
  v26 = a2;
  sub_23935268C();
  v27 = sub_239352674();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v22, 2, 2, v27);
  v29 = sub_239352668();
  v30 = MEMORY[0x24BEDF358];
  sub_2392688AC((uint64_t)v22, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  sub_2392688AC((uint64_t)v25, (uint64_t (*)(_QWORD))v30);
  if ((v29 & 1) == 0)
  {
    v70 = v22;
    v71 = v28;
    v72 = v27;
    v73 = v26;
    v31 = v82;
    sub_2392F81E4();
    v31[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 1;
    v32 = sub_239275A60();
    v33 = v10;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v34(v18, v32, v83);
    v35 = sub_239352098();
    v36 = sub_239352578();
    v37 = os_log_type_enabled(v35, v36);
    v74 = v13;
    v75 = v10;
    if (v37)
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v86[0] = v39;
      *(_DWORD *)v38 = 136380675;
      v85 = sub_23925F3EC(0xD000000000000028, 0x8000000239360650, v86);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v35, v36, "ObjectCaptureSession.%{private}s: Set should wait for pose correction using  mobileSfM.", v38, 0xCu);
      swift_arrayDestroy();
      v40 = v39;
      v33 = v75;
      MEMORY[0x23B83BC04](v40, -1, -1);
      MEMORY[0x23B83BC04](v38, -1, -1);
    }

    v41 = *(void (**)(char *, uint64_t))(v33 + 8);
    v41(v18, v83);
    v42 = v76;
    v43 = (char *)v77;
    v44 = v82;
    v45 = (uint64_t)&v82[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
    swift_beginAccess();
    sub_23926059C(v45, (uint64_t)v42, (uint64_t *)&unk_25692A910);
    v46 = type metadata accessor for ObjectCaptureSession.Frame(0);
    result = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v42, 1, v46);
    if ((_DWORD)result == 1)
      goto LABEL_23;
    v47 = *v42 * 1000.0;
    result = sub_2392688AC((uint64_t)v42, type metadata accessor for ObjectCaptureSession.Frame);
    if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) != 0)
    {
      if (v47 > -9.22337204e18)
      {
        if (v47 < 9.22337204e18)
        {
          v48 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
          *(_QWORD *)&v44[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = (uint64_t)v47;
          v49 = v83;
          v34(v43, v32, v83);
          v50 = v44;
          v51 = sub_239352098();
          v52 = sub_239352578();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = swift_slowAlloc();
            v54 = swift_slowAlloc();
            v85 = v54;
            *(_DWORD *)v53 = 136380931;
            v84 = sub_23925F3EC(0xD000000000000028, 0x8000000239360650, &v85);
            v77 = v41;
            sub_2393526B0();
            *(_WORD *)(v53 + 12) = 2050;
            v84 = *(_QWORD *)&v82[v48];
            sub_2393526B0();

            _os_log_impl(&dword_23925B000, v51, v52, "ObjectCaptureSession.%{private}s: Set pause time for pose correction = %{public}ld", (uint8_t *)v53, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B83BC04](v54, -1, -1);
            MEMORY[0x23B83BC04](v53, -1, -1);

            v77(v43, v83);
          }
          else
          {

            v41(v43, v49);
          }
          v13 = v74;
          v10 = v75;
          v27 = v72;
          v22 = v70;
          v28 = v71;
          goto LABEL_13;
        }
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }
LABEL_13:
  sub_23935268C();
  v28(v22, 2, 2, v27);
  v55 = sub_239352668();
  v56 = MEMORY[0x24BEDF358];
  sub_2392688AC((uint64_t)v22, (uint64_t (*)(_QWORD))MEMORY[0x24BEDF358]);
  result = sub_2392688AC((uint64_t)v25, (uint64_t (*)(_QWORD))v56);
  v57 = v82;
  if ((v55 & 1) != 0
    && v82[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] == 1)
  {
    sub_2392F81E4();
    *(_QWORD *)&v57[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem] = sub_2392FD9C0();
    swift_release();
    v58 = v78;
    sub_2393521DC();
    v59 = v80;
    MEMORY[0x23B83A0EC](v58, 10.0);
    v60 = v13;
    v61 = *(void (**)(char *, uint64_t))(v79 + 8);
    v62 = v58;
    v63 = v81;
    v61(v62, v81);
    swift_retain();
    sub_2393525CC();
    swift_release();
    v61(v59, v63);
    v64 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v60, v64, v83);
    v65 = v57;
    v66 = sub_239352098();
    v67 = sub_239352578();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v69 = swift_slowAlloc();
      v85 = v69;
      *(_DWORD *)v68 = 136380931;
      v84 = sub_23925F3EC(0xD000000000000028, 0x8000000239360650, &v85);
      sub_2393526B0();
      *(_WORD *)(v68 + 12) = 2050;
      v84 = 0x4024000000000000;
      sub_2393526B0();

      _os_log_impl(&dword_23925B000, v66, v67, "ObjectCaptureSession.%{private}s: Set set wait for pose correction timer to %{public}f seconds.", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v69, -1, -1);
      MEMORY[0x23B83BC04](v68, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v60, v83);
  }
  return result;
}

Swift::Void __swiftcall ObjectCaptureSession.sessionWasInterrupted(_:)(ARSession a1)
{
  sub_239337F60(0xD000000000000019, 0x8000000239360630, "ObjectCaptureSession.%{private}s: ARSession was interrupted!");
}

Swift::Void __swiftcall ObjectCaptureSession.sessionInterruptionEnded(_:)(ARSession a1)
{
  sub_239337F60(0xD00000000000001CLL, 0x8000000239360610, "ObjectCaptureSession.%{private}s: ARSession interruption ended!");
}

uint64_t sub_239325F40(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *);
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  _BYTE *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v2 = sub_23925FB08((uint64_t *)&unk_25692A910);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (double *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v33 - v11;
  if (a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] != 1)
    return result;
  sub_2392F81E4();
  a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 1;
  v13 = sub_239275A60();
  v14 = *(void (**)(char *))(v6 + 16);
  v35 = v13;
  v14(v12);
  v15 = sub_239352098();
  v16 = sub_239352578();
  v17 = os_log_type_enabled(v15, v16);
  v36 = v9;
  v37 = v5;
  if (v17)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v40[0] = v19;
    v34 = v14;
    *(_DWORD *)v18 = 136380675;
    v39 = sub_23925F3EC(0xD000000000000026, 0x80000002393605B0, v40);
    v5 = v37;
    v14 = v34;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: Set should wait for pose correction using mobileSfM", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v19, -1, -1);
    v20 = v18;
    v9 = v36;
    MEMORY[0x23B83BC04](v20, -1, -1);
  }

  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v12, v5);
  v22 = (uint64_t)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  swift_beginAccess();
  sub_23926059C(v22, (uint64_t)v4, (uint64_t *)&unk_25692A910);
  v23 = type metadata accessor for ObjectCaptureSession.Frame(0);
  result = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v4, 1, v23);
  if ((_DWORD)result == 1)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v24 = *v4 * 1000.0;
  result = sub_2392688AC((uint64_t)v4, type metadata accessor for ObjectCaptureSession.Frame);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v25 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection;
  *(_QWORD *)&a1[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = (uint64_t)v24;
  ((void (*)(char *, uint64_t, uint64_t))v14)(v9, v35, v5);
  v26 = a1;
  v27 = sub_239352098();
  v28 = sub_239352578();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v39 = v30;
    *(_DWORD *)v29 = 136380931;
    v38 = sub_23925F3EC(0xD000000000000026, 0x80000002393605B0, &v39);
    sub_2393526B0();
    *(_WORD *)(v29 + 12) = 2050;
    v38 = *(_QWORD *)&a1[v25];
    sub_2393526B0();

    _os_log_impl(&dword_23925B000, v27, v28, "ObjectCaptureSession.%{private}s: Set pause time for pose correction = %{public}ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v30, -1, -1);
    MEMORY[0x23B83BC04](v29, -1, -1);

    v31 = v36;
    v32 = v37;
  }
  else
  {

    v31 = v9;
    v32 = v5;
  }
  return ((uint64_t (*)(char *, uint64_t))v21)(v31, v32);
}

void ObjectCaptureSession.session(_:didFailWithError:)(uint64_t a1, void *a2)
{
  sub_239338468(a2);
}

uint64_t ObjectCaptureSession.session(_:didChange:)(uint64_t a1, uint64_t a2)
{
  return sub_2393388E8(a2);
}

void *sub_239326464(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  void *v12;
  void *v13;
  float v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  double v28;
  uint64_t v29;
  _OWORD v30[2];
  char v31;

  v27 = a1;
  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - v7;
  v9 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition + 33) & 1) != 0
    || (v10 = *(_BYTE *)(v9 + 32),
        v11 = *(_OWORD *)(v9 + 16),
        v30[0] = *(_OWORD *)v9,
        v30[1] = v11,
        v31 = v10 & 1,
        (v12 = (void *)sub_2393267F4((uint64_t)v30)) == 0))
  {
    v20 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v20, v2);
    v21 = sub_239352098();
    v22 = sub_23935256C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v29 = v24;
      *(_DWORD *)v23 = 136380675;
      v28 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001FLL, 0x80000002393606B0, &v29));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v21, v22, "ObjectCaptureSession.%{private}s: Failed to recompute the nearest plane under the object, using the old plane without anchor updates!", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v24, -1, -1);
      MEMORY[0x23B83BC04](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return v27;
  }
  v13 = v12;
  v14 = sub_2392DFA64(v27, v12);
  if (v14 > 0.01)
  {
    v15 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v15, v2);
    v16 = sub_239352098();
    v17 = sub_23935256C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v29 = v19;
      *(_DWORD *)v18 = 136380931;
      v28 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001FLL, 0x80000002393606B0, &v29));
      sub_2393526B0();
      *(_WORD *)(v18 + 12) = 2050;
      v28 = v14;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v16, v17, "ObjectCaptureSession.%{private}s: Recomputed plane is too far (%{public}f meters) from old plane, using the old plane without anchor updates!", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v19, -1, -1);
      MEMORY[0x23B83BC04](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v27;
  }
  return v13;
}

uint64_t sub_2393267F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  float32x4_t v33;
  double v34;
  uint64_t v35[3];
  uint64_t v36;
  _BYTE v37[32];
  float32x4_t v38;
  char v39;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v33 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - v11;
  sub_239268764(a1 + 16, (uint64_t)v37, &qword_25692B6F8);
  sub_239268764((uint64_t)v37, (uint64_t)&v38, &qword_25692B6F8);
  if ((v39 & 1) != 0)
  {
    v13 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    v14 = sub_239352098();
    v15 = sub_23935256C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v35[0] = v17;
      *(_DWORD *)v16 = 136380675;
      v36 = sub_23925F3EC(0xD00000000000001FLL, 0x80000002393606D0, v35);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v14, v15, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below tap position because worldPoint is nil!", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v17, -1, -1);
      MEMORY[0x23B83BC04](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return 0;
  }
  v33 = v38;
  v18 = v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v18 + 16))
  {
    v27 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v27, v3);
    v28 = sub_239352098();
    v29 = sub_23935256C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v36 = v31;
      *(_DWORD *)v30 = 136380675;
      v34 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001FLL, 0x80000002393606D0, &v36));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v28, v29, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below tap position because no planes were detected!", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v31, -1, -1);
      MEMORY[0x23B83BC04](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    return 0;
  }
  v19 = swift_bridgeObjectRetain();
  sub_2393354F4(v19, v33);
  v21 = v20;
  swift_bridgeObjectRelease();
  if (!v21)
  {
    v22 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, v22, v3);
    v23 = sub_239352098();
    v24 = sub_23935256C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v36 = v26;
      *(_DWORD *)v25 = 136381443;
      v34 = COERCE_DOUBLE(sub_23925F3EC(0xD00000000000001FLL, 0x80000002393606D0, &v36));
      sub_2393526B0();
      *(_WORD *)(v25 + 12) = 2050;
      v34 = v33.f32[0];
      sub_2393526B0();
      *(_WORD *)(v25 + 22) = 2050;
      v34 = v33.f32[1];
      sub_2393526B0();
      *(_WORD *)(v25 + 32) = 2050;
      v34 = v33.f32[2];
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v23, v24, "ObjectCaptureSession.%{private}s: Failed to compute nearest plane below world tap point x=%{public}f, y=%{public}f, z=%{public}f", (uint8_t *)v25, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v26, -1, -1);
      MEMORY[0x23B83BC04](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
    return 0;
  }
  return v21;
}

uint64_t sub_239326D0C()
{
  return sub_2393271B8(&qword_25692A948);
}

uint64_t sub_239326D18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 232))();
  *a2 = result;
  return result;
}

uint64_t sub_239326D4C()
{
  return sub_23932727C((void (*)(void))sub_239326D0C, &qword_25692A948, &qword_25692A950);
}

uint64_t sub_239326D68()
{
  return sub_239327344(&qword_25692A958);
}

uint64_t sub_239326D78()
{
  return sub_239327408((void (*)(void))sub_239326D68, &qword_25692A958, &qword_25692A960);
}

uint64_t sub_239326D94()
{
  return sub_2393274D0(&qword_25692A968);
}

uint64_t sub_239326DA4()
{
  return sub_2393275C4((void (*)(void))sub_239326D94, &qword_25692A968, &qword_25692A970);
}

uint64_t sub_239326DC0()
{
  return sub_23932769C(&qword_25692A978);
}

uint64_t sub_239326DCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 376))();
  *a2 = result;
  return result;
}

uint64_t sub_239326E00()
{
  return sub_239327790((void (*)(void))sub_239326DC0, &qword_25692A978, &qword_25692A980);
}

uint64_t sub_239326E1C()
{
  return sub_239327868(&qword_25692A988);
}

uint64_t sub_239326E28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 424))();
  *a2 = result;
  return result;
}

uint64_t sub_239326E5C()
{
  return sub_23932795C((void (*)(void))sub_239326E1C, &qword_25692A988, &qword_25692A990);
}

uint64_t sub_239326E78()
{
  return sub_239327A34(&qword_25692A998);
}

uint64_t sub_239326E84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 472))();
  *a2 = result;
  return result;
}

uint64_t sub_239326EB8()
{
  return sub_239327B28((void (*)(void))sub_239326E78, &qword_25692A998, &qword_25692A9A0);
}

uint64_t sub_239326ED4()
{
  return sub_239327C00(&qword_25692A9A8);
}

uint64_t sub_239326EE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 520))();
  *a2 = result;
  return result;
}

uint64_t sub_239326F10(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 120) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_239326F40()
{
  return sub_239327C94((void (*)(void))sub_239326ED4, &qword_25692A9A8, &qword_25692A9B0);
}

uint64_t sub_239326F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 128))
  {
    v1 = *(_QWORD *)(v0 + 128);
  }
  else
  {
    v2 = v0;
    sub_23925FB08(&qword_25692A9B8);
    swift_allocObject();
    v1 = sub_2393520E0();
    *(_QWORD *)(v2 + 128) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_239326FD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 568))();
  *a2 = result;
  return result;
}

uint64_t sub_239327004(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 136) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_239327034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 136))
  {
    v1 = *(_QWORD *)(v0 + 136);
  }
  else
  {
    v2 = v0;
    sub_239326F5C();
    sub_23925FB08(&qword_25692A9B8);
    sub_239263A08(&qword_25692A9C0, &qword_25692A9B8, MEMORY[0x24BDB9CB0]);
    v1 = sub_239352134();
    swift_release();
    *(_QWORD *)(v2 + 136) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_2393270E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return swift_release();
}

uint64_t ObjectCaptureSessionObservingPublishers.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ObjectCaptureSessionObservingPublishers.__deallocating_deinit()
{
  ObjectCaptureSessionObservingPublishers.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2393271AC()
{
  return sub_2393271B8(&qword_25692A9C8);
}

uint64_t sub_2393271B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 16);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 16) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_239327230@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 216))();
  *a2 = result;
  return result;
}

uint64_t sub_239327260()
{
  return sub_23932727C((void (*)(void))sub_2393271AC, &qword_25692A9C8, &qword_25692A9D0);
}

uint64_t sub_23932727C(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 24))
  {
    v4 = *(_QWORD *)(v3 + 24);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 24) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_239327338()
{
  return sub_239327344(&qword_25692A9D8);
}

uint64_t sub_239327344(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 32))
  {
    v2 = *(_QWORD *)(v1 + 32);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 32) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_2393273BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 264))();
  *a2 = result;
  return result;
}

uint64_t sub_2393273EC()
{
  return sub_239327408((void (*)(void))sub_239327338, &qword_25692A9D8, &qword_25692A9E0);
}

uint64_t sub_239327408(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 40))
  {
    v4 = *(_QWORD *)(v3 + 40);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 40) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2393274C4()
{
  return sub_2393274D0(&qword_25692A9E8);
}

uint64_t sub_2393274D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 48))
  {
    v2 = *(_QWORD *)(v1 + 48);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 48) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_239327548@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 312))();
  *a2 = result;
  return result;
}

uint64_t sub_239327578(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 56) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2393275A8()
{
  return sub_2393275C4((void (*)(void))sub_2393274C4, &qword_25692A9E8, &qword_25692A9F0);
}

uint64_t sub_2393275C4(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 56))
  {
    v4 = *(_QWORD *)(v3 + 56);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 56) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_239327680(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t sub_239327690()
{
  return sub_23932769C(&qword_25692A9F8);
}

uint64_t sub_23932769C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 64))
  {
    v2 = *(_QWORD *)(v1 + 64);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 64) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_239327714@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 360))();
  *a2 = result;
  return result;
}

uint64_t sub_239327744(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 72) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_239327774()
{
  return sub_239327790((void (*)(void))sub_239327690, &qword_25692A9F8, &qword_25692AA00);
}

uint64_t sub_239327790(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 72))
  {
    v4 = *(_QWORD *)(v3 + 72);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 72) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23932784C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t sub_23932785C()
{
  return sub_239327868(&qword_25692AA08);
}

uint64_t sub_239327868(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 80))
  {
    v2 = *(_QWORD *)(v1 + 80);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 80) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_2393278E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t sub_239327910(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 88) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_239327940()
{
  return sub_23932795C((void (*)(void))sub_23932785C, &qword_25692AA08, &qword_25692AA10);
}

uint64_t sub_23932795C(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 88))
  {
    v4 = *(_QWORD *)(v3 + 88);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 88) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_239327A18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_release();
}

uint64_t sub_239327A28()
{
  return sub_239327A34(&qword_25692A958);
}

uint64_t sub_239327A34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 96))
  {
    v2 = *(_QWORD *)(v1 + 96);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 96) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_239327AAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 456))();
  *a2 = result;
  return result;
}

uint64_t sub_239327ADC(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 104) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_239327B0C()
{
  return sub_239327B28((void (*)(void))sub_239327A28, &qword_25692A958, &qword_25692A960);
}

uint64_t sub_239327B28(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 104))
  {
    v4 = *(_QWORD *)(v3 + 104);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 104) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_239327BE4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return swift_release();
}

uint64_t sub_239327BF4()
{
  return sub_239327C00(&qword_25692AA18);
}

uint64_t sub_239327C00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 112))
  {
    v2 = *(_QWORD *)(v1 + 112);
  }
  else
  {
    v3 = v1;
    sub_23925FB08(a1);
    swift_allocObject();
    v2 = sub_2393520E0();
    *(_QWORD *)(v3 + 112) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_239327C78()
{
  return sub_239327C94((void (*)(void))sub_239327BF4, &qword_25692AA18, (unint64_t *)&unk_25692AA20);
}

uint64_t sub_239327C94(void (*a1)(void), uint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  if (*(_QWORD *)(v3 + 120))
  {
    v4 = *(_QWORD *)(v3 + 120);
  }
  else
  {
    v7 = v3;
    a1();
    sub_23925FB08(a2);
    sub_239263A08(a3, a2, MEMORY[0x24BDB9CB0]);
    v4 = sub_239352134();
    swift_release();
    *(_QWORD *)(v7 + 120) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_239327D50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return swift_release();
}

double ObjectCaptureSessionWritingPublishers.init()()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[6] = 0u;
  v0[7] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t ObjectCaptureSessionWritingPublishers.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ObjectCaptureSessionWritingPublishers.__deallocating_deinit()
{
  ObjectCaptureSessionWritingPublishers.deinit();
  return swift_deallocClassInstance();
}

uint64_t ObjectCaptureSessionWritingPublishers.send(shot:shotMetadata:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  v4 = sub_23925FB08(&qword_256929AC0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a1;
  v8 = (void *)a1[1];
  v9 = (void *)a1[2];
  v11 = (void *)a1[3];
  v10 = (void *)a1[4];
  sub_2393271AC();
  v12 = (uint64_t)v6 + *(int *)(v4 + 48);
  *v6 = v7;
  v6[1] = v8;
  v6[2] = v9;
  v6[3] = v11;
  v6[4] = v10;
  sub_239268820(a2, v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v13 = v10;
  v14 = v8;
  v15 = v9;
  v16 = v11;
  sub_2393520D4();
  swift_release();
  return sub_23925FE28((uint64_t)v6, &qword_256929AC0);
}

uint64_t ObjectCaptureSessionWritingPublishers.send(shotMetadata:)()
{
  sub_239327338();
  sub_2393520D4();
  return swift_release();
}

Swift::Void __swiftcall ObjectCaptureSessionWritingPublishers.send(sessionMetadata:)(CoreOC::ObjectCaptureSession::Metadata::Session *sessionMetadata)
{
  sub_2393274C4();
  sub_2393520D4();
  swift_release();
}

uint64_t ObjectCaptureSessionWritingPublishers.send(depthPointCloud:timestamp:)()
{
  sub_23932785C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2393520D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

Swift::Void __swiftcall ObjectCaptureSessionWritingPublishers.sendComplete()()
{
  sub_2393274C4();
  sub_2393520C8();
  swift_release();
}

uint64_t ObjectCaptureSessionFrameSPI.depthPointCloud.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_239331294(v2);
}

uint64_t ObjectCaptureSessionFrameSPI.voxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[6];
  *a1 = v1[5];
  a1[1] = v2;
  v3 = v1[8];
  a1[2] = v1[7];
  a1[3] = v3;
  a1[4] = v1[9];
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSessionFrameSPI.debugVoxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[11];
  *a1 = v1[10];
  a1[1] = v2;
  v3 = v1[13];
  a1[2] = v1[12];
  a1[3] = v3;
  a1[4] = v1[14];
  return swift_bridgeObjectRetain();
}

void *ObjectCaptureSessionFrameSPI.tsdfDepth.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 240);
  v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSessionFrameSPI.pointCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[17];
  *a1 = v1[16];
  a1[1] = v2;
  v3 = v1[19];
  a1[2] = v1[18];
  a1[3] = v3;
  a1[4] = v1[20];
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSessionFrameSPI.triangleMesh.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[42];
  v3 = v1[43];
  v4 = v1[44];
  v5 = v1[45];
  v6 = v1[46];
  v7 = v1[47];
  v8 = v1[48];
  v9 = v1[49];
  v10 = v1[50];
  v11 = v1[51];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_23933132C(v2);
}

void *ObjectCaptureSessionFrameSPI.plane.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 416);
  v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSessionFrameSPI.coverageVoxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[28];
  *a1 = v1[27];
  a1[1] = v2;
  v3 = v1[30];
  a1[2] = v1[29];
  a1[3] = v3;
  a1[4] = v1[31];
  return swift_bridgeObjectRetain();
}

uint64_t ObjectCaptureSessionFrameSPI.maskingVoxelCloud.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[33];
  *a1 = v1[32];
  a1[1] = v2;
  v3 = v1[35];
  a1[2] = v1[34];
  a1[3] = v3;
  a1[4] = v1[36];
  return swift_bridgeObjectRetain();
}

float ObjectCaptureSessionFrameSPI.luxLevel.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 592);
}

void *ObjectCaptureSessionFrameSPI.rawFeaturePoints.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 600);
  v2 = v1;
  return v1;
}

uint64_t ObjectCaptureSessionFrameSPI.objectContour.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t ObjectCaptureSessionFrameSPI.ratioObjectInFOVThreshold.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 616) | ((unint64_t)*(unsigned __int8 *)(v0 + 620) << 32);
}

double ObjectCaptureSessionFrameSPI.captureFactors.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  double result;

  v2 = *(_QWORD *)(v1 + 632);
  v3 = *(_QWORD *)(v1 + 648);
  v4 = *(_DWORD *)(v1 + 664);
  v5 = *(_BYTE *)(v1 + 668);
  v6 = *(_BYTE *)(v1 + 669);
  v7 = *(_BYTE *)(v1 + 670);
  v8 = *(_BYTE *)(v1 + 671);
  v9 = *(_BYTE *)(v1 + 672);
  v10 = *(_BYTE *)(v1 + 673);
  v11 = *(_BYTE *)(v1 + 674);
  v12 = *(_BYTE *)(v1 + 675);
  v13 = *(_BYTE *)(v1 + 676);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 624);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v1 + 640);
  *(_QWORD *)(a1 + 24) = v3;
  result = *(double *)(v1 + 656);
  *(double *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 44) = v5;
  *(_BYTE *)(a1 + 45) = v6;
  *(_BYTE *)(a1 + 46) = v7;
  *(_BYTE *)(a1 + 47) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 49) = v10;
  *(_BYTE *)(a1 + 50) = v11;
  *(_BYTE *)(a1 + 51) = v12;
  *(_BYTE *)(a1 + 52) = v13;
  return result;
}

uint64_t ObjectCaptureSessionFrameSPI.angularSpeeds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_239328360(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD00000000000001BLL, 0x800000023935E8B0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug tap position: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338B14;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC70B8;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239328630()
{
  return sub_23932C2C0();
}

uint64_t sub_23932863C(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD00000000000001ELL, 0x800000023935E8D0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug plane detection: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338B54;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7130;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932890C()
{
  return sub_23932C2C0();
}

uint64_t sub_239328918(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD00000000000001CLL, 0x800000023935E8F0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug masking voxel: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338B94;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC71A8;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239328BE8()
{
  return sub_23932C2C0();
}

uint64_t sub_239328BF4(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD00000000000001DLL, 0x800000023935E910, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug camera control: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338BD4;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7220;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239328EC4()
{
  return sub_23932C2C0();
}

uint64_t sub_239328ED0(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD00000000000001BLL, 0x800000023935E930, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug debug voxels: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338C14;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7298;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_2393291A0()
{
  return sub_23932C2C0();
}

uint64_t sub_2393291AC(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000019, 0x800000023935E950, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug tsdf depth: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338C54;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7310;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932947C()
{
  return sub_23932C2C0();
}

uint64_t sub_239329488(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000023, 0x800000023935E970, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug surface geometry data: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338C94;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7388;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239329758()
{
  return sub_23932C2C0();
}

uint64_t sub_239329764(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000023, 0x800000023935E9A0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug coverage guide voxels: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338CD4;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7400;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239329A34()
{
  return sub_23932C2C0();
}

uint64_t sub_239329A40(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000027, 0x800000023935E9D0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug explicit feedback enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338D14;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7478;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239329D10(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000022, 0x800000023935EA00, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug auto capture enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338D3C;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC74F0;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_239329FE0(uint64_t a1, int a2, char *a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  LODWORD(v4) = a2;
  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = sub_239275B30();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if ((v4 & 1) != 0)
  {
    v14(v10, v13, v6);
    v15 = sub_239352098();
    v16 = sub_239352578();
    if (os_log_type_enabled(v15, v16))
    {
      v33 = a1;
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      LODWORD(v32) = v4;
      v4 = v18;
      aBlock[0] = v18;
      *(_DWORD *)v17 = 136380675;
      v34 = sub_23925F3EC(0xD00000000000001ALL, 0x800000023935EA30, aBlock);
      a1 = v33;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v15, v16, "ObjectCaptureSession.%{private}s: [SPI]removed capture cool down time adjustment.", v17, 0xCu);
      swift_arrayDestroy();
      v19 = v4;
      LOBYTE(v4) = v32;
      MEMORY[0x23B83BC04](v19, -1, -1);
      MEMORY[0x23B83BC04](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    v14(v12, v13, v6);
    v20 = sub_239352098();
    v21 = sub_239352578();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      aBlock[0] = v32;
      *(_DWORD *)v22 = 136380931;
      v33 = a1;
      v34 = sub_23925F3EC(0xD00000000000001ALL, 0x800000023935EA30, aBlock);
      a1 = v33;
      sub_2393526B0();
      *(_WORD *)(v22 + 12) = 2050;
      v34 = a1;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v20, v21, "ObjectCaptureSession.%{private}s: [SPI]adjusted capture cool down time: %{public}f", (uint8_t *)v22, 0x16u);
      v23 = v32;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v23, -1, -1);
      MEMORY[0x23B83BC04](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  v24 = *(NSObject **)&a3[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a3;
  *(_QWORD *)(v25 + 24) = a1;
  *(_BYTE *)(v25 + 32) = v4 & 1;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_239338D88;
  *(_QWORD *)(v26 + 24) = v25;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7568;
  v27 = _Block_copy(aBlock);
  v28 = a3;
  swift_retain();
  swift_release();
  dispatch_sync(v24, v27);
  _Block_release(v27);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932A400(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t result;
  _BYTE v32[12];
  int v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  char *v37;
  void (*v38)(_BYTE *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v4 = sub_239351F3C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v32[-v9];
  v11 = sub_2393520B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_239275B30();
  v39 = v12;
  v40 = v11;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  v38 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v38(v10, a1, v4);
  v16 = sub_239352098();
  v17 = sub_239352578();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v36 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    v20 = v19;
    v34 = swift_slowAlloc();
    aBlock[0] = v34;
    *(_DWORD *)v20 = 136381187;
    v33 = v18;
    v41 = sub_23925F3EC(0xD000000000000019, 0x800000023935EA50, aBlock);
    v35 = a1;
    sub_2393526B0();
    *(_WORD *)(v20 + 12) = 2160;
    v41 = 1752392040;
    sub_2393526B0();
    *(_WORD *)(v20 + 22) = 2081;
    v37 = a2;
    sub_239262570(&qword_25692AA30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v21 = sub_2393528C0();
    v41 = sub_23925F3EC(v21, v22, aBlock);
    a1 = v35;
    a2 = v37;
    sub_2393526B0();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl(&dword_23925B000, v16, (os_log_type_t)v33, "ObjectCaptureSession.%{private}s: [SPI]set replay video URL: %{private,mask.hash}s", (uint8_t *)v20, 0x20u);
    v23 = v34;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v23, -1, -1);
    v24 = v20;
    v8 = v36;
    MEMORY[0x23B83BC04](v24, -1, -1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
  }

  (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v14, v40);
  v25 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v38(v8, a1, v4);
  v26 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a2;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v27 + v26, v8, v4);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_239338E2C;
  *(_QWORD *)(v28 + 24) = v27;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC75E0;
  v29 = _Block_copy(aBlock);
  v30 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v25, v29);
  _Block_release(v29);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v25 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932A80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_23925FB08(&qword_256927AD0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239351F3C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL;
  swift_beginAccess();
  sub_239267C70((uint64_t)v6, v9, &qword_256927AD0);
  return swift_endAccess();
}

uint64_t sub_23932A8F4()
{
  sub_23925FB08(&qword_256927AD0);
  return sub_2393525F0();
}

uint64_t sub_23932A958(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000022, 0x800000023935EA70, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set debug write all frame data: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338ED8;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7658;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932AC28()
{
  return sub_23932C2C0();
}

uint64_t sub_23932AC34(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000017, 0x800000023935EAA0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set run arkit only: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338F18;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC76D0;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932AF04(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000022, 0x800000023935EAC0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set voxel integration enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338F40;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7748;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932B1D4(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000022, 0x800000023935EAF0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set explicit feedback enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338F68;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC77C0;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932B4A4(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000016, 0x800000023935EB20, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set coverage enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338F90;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7838;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932B774(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000016, 0x800000023935EB40, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set automatic capture enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338FB8;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC78B0;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932BA44(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD00000000000001BLL, 0x800000023935EB60, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set mobileSfM enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239338FE0;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7928;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932BD14(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000022, 0x800000023935EB80, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set mobileSfM enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239339008;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC79A0;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932BFE4(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t aBlock[6];

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239275B30();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_239352098();
  v10 = sub_239352578();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)v11 = 136380931;
    v21 = sub_23925F3EC(0xD000000000000024, 0x800000023935EBB0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v11 + 12) = 1026;
    LODWORD(v21) = a1 & 1;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v9, v10, "ObjectCaptureSession.%{private}s: [SPI]set Capture Rate Control enabled: %{BOOL,public}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v12, -1, -1);
    MEMORY[0x23B83BC04](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = *(NSObject **)&a2[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue];
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_BYTE *)(v14 + 24) = a1 & 1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_239339030;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_239295A70;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23928562C;
  aBlock[3] = (uint64_t)&unk_250AC7A18;
  v16 = _Block_copy(aBlock);
  v17 = a2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23932C2B4()
{
  return sub_23932C2C0();
}

uint64_t sub_23932C2C0()
{
  unsigned __int8 v1;

  sub_2393525F0();
  return v1;
}

_QWORD *static ObjectCaptureSessionSPI.readHEICToShots(heicFolderURL:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *result;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239351F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ObjectCaptureImageFolderReader();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = ObjectCaptureImageFolderReader.__allocating_init(url:)((uint64_t)v9);
  v11 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 160))();
  type metadata accessor for SegmentIDConverter();
  v12 = sub_2392E2D90();
  v13 = (*(uint64_t (**)(void))(*(_QWORD *)v10 + 184))();
  (*(void (**)(_QWORD))(*(_QWORD *)v12 + 120))(v13 & 1);
  if (v11)
  {
    swift_release();
    sub_23925FB08(&qword_25692AA38);
    result = (_QWORD *)swift_allocObject();
    result[2] = v11;
    result[3] = sub_239339070;
    result[4] = v12;
  }
  else
  {
    v15 = sub_239275B30();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
    v16 = sub_239352098();
    v17 = sub_23935256C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v18 = 136380675;
      v20[0] = v18 + 4;
      v20[1] = sub_23925F3EC(0xD00000000000001FLL, 0x800000023935EBE0, &v21);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v16, v17, "ObjectCaptureSession.%{private}s: Error reading PG samples!", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v19, -1, -1);
      MEMORY[0x23B83BC04](v18, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return result;
}

uint64_t static ObjectCaptureSessionSPI.makeSessionMetaDataForHEICBundle(bundleID:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = sub_239352380();
  *(_QWORD *)a1 = 0x302E342E32;
  *(_QWORD *)(a1 + 8) = 0xE500000000000000;
  *(_QWORD *)(a1 + 16) = 0x6965685F6D6F7266;
  *(_QWORD *)(a1 + 24) = 0xEA00000000005F63;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t ObjectCaptureSessionSPI.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ObjectCaptureSessionSPI.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_23932C66C()
{
  id *v0;

  return *v0;
}

uint64_t sub_23932C674()
{
  return sub_2393522F0();
}

uint64_t sub_23932C684()
{
  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  return sub_239351E4C();
}

uint64_t sub_23932C6C4()
{
  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  return sub_239351E1C();
}

uint64_t sub_23932C704(void *a1)
{
  id v2;

  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  v2 = a1;
  return sub_239351E10();
}

uint64_t sub_23932C768()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_239352698();

  return v2;
}

uint64_t sub_23932C79C()
{
  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  return sub_239351E40();
}

uint64_t sub_23932C7EC()
{
  sub_239352980();
  sub_23935229C();
  return sub_2393529B0();
}

uint64_t sub_23932C848()
{
  sub_239262570(&qword_25692B868, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357558);
  return sub_239352920();
}

uint64_t sub_23932C888()
{
  sub_239262570(&qword_25692B868, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357558);
  return sub_239352914();
}

uint64_t sub_23932C8C8()
{
  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  return sub_239351E04();
}

uint64_t sub_23932C908()
{
  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  return sub_239351E28();
}

uint64_t sub_23932C960(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23925FB08(&qword_25692B6A0);
  v10 = *(_QWORD *)(sub_239352020() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23935283C();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_239352020() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_239336070(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_23932CB68(_QWORD *a1)
{
  return sub_239296CFC(0, a1[2], 0, a1);
}

uint64_t sub_23932CB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_239292F4C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23932EB80();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_239352020();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_2392C4FE0(v12 + *(_QWORD *)(v14 + 72) * v6, a2, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_23932DDD4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_23932CCB8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_239352020();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  sub_23925FB08(&qword_25692B640);
  v48 = a2;
  v12 = sub_23935286C();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_2392C4FE0(v31 + v32 * v24, v49, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_239268820(v33 + v32 * v24, v49, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_2392C4FE0(v49, *(_QWORD *)(v13 + 56) + v32 * v22, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_23932D0D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_239352020();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_23925FB08(&qword_25692B690);
  result = sub_23935286C();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_239352974();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_23932D404(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_239352020();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  sub_23925FB08(&qword_25692B698);
  v8 = sub_23935286C();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23932D7A0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  sub_23925FB08(&qword_25692B798);
  result = sub_23935286C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      result = sub_239352974();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_23932DA3C(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = sub_239352020();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  sub_23925FB08(a3);
  v44 = a2;
  v12 = sub_23935286C();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

unint64_t sub_23932DDD4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_239352020();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_239352740();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_239262570(&qword_256928168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_239352290();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23932E0A8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_239352740();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_239352974();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_239352020() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23932E264(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_239352020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_239292F4C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      return sub_239331084(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23932EB80();
    goto LABEL_7;
  }
  sub_23932CCB8(v17, a3 & 1);
  v24 = sub_239292F4C(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_239352908();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23932EA3C(v14, (uint64_t)v11, a1, v20);
}

void sub_23932E3D4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_239352020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_239292F4C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23932F418(&qword_25692B6A8);
    goto LABEL_7;
  }
  sub_23932DA3C(v17, a3 & 1, &qword_25692B6A8);
  v22 = sub_239292F4C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_239352908();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_2392CE45C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23932E540(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2392C01BC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_239352020();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_23932EAF4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23932EE48();
      goto LABEL_7;
    }
    sub_23932D0D4(v13, a3 & 1);
    v20 = sub_2392C01BC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23932EAF4(v10, a2, a1, v16);
    }
  }
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_23932E664(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_239352020();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_239292F4C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23932F068();
    goto LABEL_7;
  }
  sub_23932D404(result, a3 & 1);
  result = sub_239292F4C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_239352908();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2392CE45C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23932E7B4(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2392C01BC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23932F28C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    *(_BYTE *)(v16[7] + v10) = a1 & 1;
    v18 = v16[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_23932D7A0(result, a3 & 1);
  result = sub_2392C01BC(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_23932E8E4(uint64_t a1, char a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 *v19;
  char v20;
  __n128 *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v7 = v6;
  v10 = *v6;
  v12 = sub_2392C01BC(a1);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a2 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a2 & 1) == 0)
  {
    result = (uint64_t)sub_2392C1974();
LABEL_7:
    v18 = (_QWORD *)*v7;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (__n128 *)(v18[7] + (v12 << 6));
      *v19 = a3;
      v19[1] = a4;
      v19[2] = a5;
      v19[3] = a6;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a1;
    v21 = (__n128 *)(v18[7] + (v12 << 6));
    *v21 = a3;
    v21[1] = a4;
    v21[2] = a5;
    v21[3] = a6;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_2392C0C2C(result, a2 & 1);
  result = sub_2392C01BC(a1);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v7;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_23932EA3C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_239352020();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  result = sub_2392C4FE0(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_23932EAF4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_239352020();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

void *sub_23932EB80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_239352020();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_25692B640);
  v30 = v0;
  v5 = *v0;
  v6 = sub_239352860();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_2392C4FE0(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for ObjectCaptureSession.Metadata.Shot))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_239268820(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23932EE48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_239352020();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_25692B690);
  v24 = v0;
  v5 = *v0;
  v6 = sub_239352860();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23932F068()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_239352020();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(&qword_25692B698);
  v24 = v0;
  v5 = *v0;
  v6 = sub_239352860();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23932F28C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_23925FB08(&qword_25692B798);
  v2 = *v0;
  v3 = sub_239352860();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23932F418(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_239352020();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_239352860();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v26 = v9;
    return result;
  }
  result = (id)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v27 = v7 + 64;
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v7 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23932F640(double *a1, double a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t result;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = sub_239352974();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_23932F9E0(v9, isUniquelyReferenced_nonNull_native, a2);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v6 + 48);
  v11 = *(double *)(v10 + 8 * v9);
  if (v11 != a2)
  {
    v13 = ~v8;
    do
    {
      v9 = (v9 + 1) & v13;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_8;
      v11 = *(double *)(v10 + 8 * v9);
    }
    while (v11 != a2);
  }
  result = 0;
  a2 = v11;
LABEL_9:
  *a1 = a2;
  return result;
}

uint64_t sub_23932F74C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_23925FB08(&qword_25692B678);
  result = sub_2393527A0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v1;
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_239352974();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23932F9E0(uint64_t result, char a2, double a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v4 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0)
    goto LABEL_14;
  if ((a2 & 1) != 0)
  {
    sub_23932F74C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23932FB10();
      goto LABEL_14;
    }
    sub_23932FCA4();
  }
  v8 = *v3;
  result = sub_239352974();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  v4 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(double *)(v10 + 8 * v4) == a3)
    {
LABEL_13:
      result = sub_2393528FC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        v4 = (v4 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
          break;
        if (*(double *)(v10 + 8 * v4) == a3)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(_QWORD *)(v12 + 48) + 8 * v4) = a3;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_23932FB10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_23925FB08(&qword_25692B678);
  v2 = *v0;
  v3 = sub_239352794();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23932FCA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_23925FB08(&qword_25692B678);
  result = sub_2393527A0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_239352974();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void (*sub_23932FF14(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_239352020();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_2392D93CC(v4);
  v4[12] = sub_239330040(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_23932FFD4;
}

void sub_23932FFD4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_239330040(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  *v8 = a2;
  v8[1] = v3;
  v9 = sub_23925FB08(&qword_25692B620);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_239292F4C(a2);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        v21 = *(_QWORD *)(v20 - 8);
        sub_2392C4FE0(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_2393301C4;
      }
LABEL_11:
      v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_23932EB80();
      goto LABEL_7;
    }
    sub_23932CCB8(v16, a3 & 1);
    v23 = sub_239292F4C(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_239352020();
  result = (void (*)(uint64_t **))sub_239352908();
  __break(1u);
  return result;
}

void sub_2393301C4(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[2];
  sub_239330210((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_23925FE28((uint64_t)v2, &qword_25692B620);
  free(v2);
  free(v1);
}

unint64_t sub_239330210(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t result;
  int64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;

  v23 = a5;
  v25 = a4;
  v26 = a2;
  v24 = sub_239352020();
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23925FB08(&qword_25692B620);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v23 - v18;
  sub_23926059C(a1, (uint64_t)v12, &qword_25692B620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    result = sub_23925FE28((uint64_t)v12, &qword_25692B620);
    if ((v26 & 1) != 0)
    {
      v21 = v25;
      swift_arrayDestroy();
      return sub_23932DDD4(v21, *a3);
    }
  }
  else
  {
    sub_2392C4FE0((uint64_t)v12, (uint64_t)v19, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    v22 = (_QWORD *)*a3;
    if ((v26 & 1) != 0)
    {
      return sub_2392C4FE0((uint64_t)v19, v22[7] + *(_QWORD *)(v14 + 72) * v25, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v24);
      sub_2392C4FE0((uint64_t)v19, (uint64_t)v17, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      return sub_23932EA3C(v25, (uint64_t)v9, (uint64_t)v17, v22);
    }
  }
  return result;
}

uint64_t sub_239330418(char *a1, uint64_t a2)
{
  char *v4;
  size_t v5;
  char *v6;
  uint64_t result;

  if (!a2)
    return MEMORY[0x24BEE4AF8];
  if (a2 > 0)
  {
    sub_23925FB08(&qword_25692B6C0);
    v4 = (char *)swift_allocObject();
    v5 = j__malloc_size(v4);
    *((_QWORD *)v4 + 2) = a2;
    *((_QWORD *)v4 + 3) = 2 * ((uint64_t)(v5 - 32) / 48);
    v6 = v4 + 32;
    if (&v4[48 * a2 + 32] <= a1 || v6 >= &a1[48 * a2])
    {
      memcpy(v6, a1, 48 * a2);
      return (uint64_t)v4;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t _s6CoreOC20ObjectCaptureSessionC5ErrorO2eeoiySbAE_AEtFZ_0(id *a1, void **a2)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      if (v3)
        goto LABEL_17;
      goto LABEL_7;
    case 1uLL:
      if (v3 == (void *)1)
        goto LABEL_7;
      goto LABEL_17;
    case 2uLL:
      if (v3 != (void *)2)
        goto LABEL_17;
      goto LABEL_7;
    case 3uLL:
      if (v3 != (void *)3)
        goto LABEL_17;
      goto LABEL_7;
    case 4uLL:
      if (v3 != (void *)4)
        goto LABEL_17;
      goto LABEL_7;
    case 5uLL:
      if (v3 != (void *)5)
        goto LABEL_17;
      goto LABEL_7;
    case 6uLL:
      if (v3 != (void *)6)
        goto LABEL_17;
LABEL_7:
      v5 = 1;
      break;
    default:
      if ((unint64_t)v3 < 7)
      {
LABEL_17:
        sub_2392D0F0C(*a1);
        v5 = 0;
      }
      else
      {
        v4 = v2;
        v5 = 1;
      }
      break;
  }
  sub_2392D0F0C(v3);
  sub_2392D0F70(v2);
  sub_2392D0F70(v3);
  return v5;
}

BOOL _s6CoreOC20ObjectCaptureSessionC5StateO2eeoiySbAE_AEtFZ_0(id *a1, id *a2)
{
  char *v2;
  char *v3;
  _BOOL8 v4;
  uint64_t v5;

  v2 = (char *)*a1;
  v3 = (char *)*a2;
  switch((unint64_t)*a1)
  {
    case 7uLL:
      if (v3 != (char *)7)
        goto LABEL_28;
      v4 = 1;
      v5 = 7;
      break;
    case 8uLL:
      if (v3 != (char *)8)
        goto LABEL_28;
      v4 = 1;
      v5 = 8;
      break;
    case 9uLL:
      if (v3 != (char *)9)
        goto LABEL_28;
      v4 = 1;
      v5 = 9;
      break;
    case 0xAuLL:
      if (v3 != (char *)10)
        goto LABEL_28;
      v4 = 1;
      v5 = 10;
      break;
    case 0xBuLL:
      if (v3 != (char *)11)
        goto LABEL_28;
      v4 = 1;
      v5 = 11;
      break;
    case 0xCuLL:
      if (v3 != (char *)12)
        goto LABEL_28;
      v4 = 1;
      v5 = 12;
      break;
    case 0xDuLL:
      if (v3 != (char *)13)
        goto LABEL_28;
      v4 = 1;
      v5 = 13;
      break;
    case 0xEuLL:
      if (v3 != (char *)14)
        goto LABEL_28;
      v4 = 1;
      v5 = 14;
      break;
    case 0xFuLL:
      if (v3 != (char *)15)
        goto LABEL_28;
      v4 = 1;
      v5 = 15;
      break;
    case 0x10uLL:
      if (v3 != (char *)16)
        goto LABEL_28;
      v4 = 1;
      v5 = 16;
      break;
    case 0x11uLL:
      if (v3 != (char *)17)
        goto LABEL_28;
      v4 = 1;
      v5 = 17;
      break;
    default:
      if ((unint64_t)(v3 - 7) < 0xB)
      {
LABEL_28:
        sub_239341BF8(*a2);
        sub_239341BF8(v2);
        v4 = 0;
        v5 = (uint64_t)v2;
      }
      else
      {
        switch((unint64_t)v2)
        {
          case 0uLL:
            if (!v3)
              goto LABEL_33;
            goto LABEL_7;
          case 1uLL:
            if (v3 == (char *)1)
              goto LABEL_33;
            goto LABEL_7;
          case 2uLL:
            if (v3 != (char *)2)
              goto LABEL_7;
            goto LABEL_33;
          case 3uLL:
            if (v3 != (char *)3)
              goto LABEL_7;
            goto LABEL_33;
          case 4uLL:
            if (v3 != (char *)4)
              goto LABEL_7;
            goto LABEL_33;
          case 5uLL:
            if (v3 != (char *)5)
              goto LABEL_7;
            goto LABEL_33;
          case 6uLL:
            if (v3 == (char *)6)
            {
LABEL_33:
              v4 = 1;
            }
            else
            {
LABEL_7:
              v4 = 0;
LABEL_31:
              sub_2392D0F0C(*a1);
              sub_2392D0F0C(v2);
            }
            sub_239341BF8(v3);
            sub_239341BF8(v3);
            sub_239341BF8(v3);
            sub_239341BF8(v2);
            sub_2392D0F70(v2);
            sub_2392D0F70(v3);
            sub_239331658(v2);
            sub_239331658(v3);
            v5 = (uint64_t)v3;
            v3 = v2;
            break;
          default:
            v4 = (unint64_t)v3 > 6;
            goto LABEL_31;
        }
      }
      break;
  }
  sub_239331658((id)v5);
  sub_239331658(v3);
  return v4;
}

__int32 *sub_239330868@<X0>(int a1@<W0>, float32x4_t *a2@<X8>, float32x4_t a3@<Q0>, float32_t a4@<S1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  float v11;
  __int32 *result;
  int32x2_t v13;
  float32x4_t v14;
  int8x16_t v15;
  float v16;
  float v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  __int32 v29;
  __int32 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  float32x4_t v35;
  float32x4_t v36;
  uint64_t v37;

  v35 = a3;
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = fmaxf(powf((float)(vmuls_lane_f32(vmulq_lane_f32(v35, *(float32x2_t *)v35.f32, 1).f32[0], v35, 2) * 0.000000064)/ 0.0083902, 0.33333), 0.004);
  result = (__int32 *)OCProxySurfaceNumVoxelsAlongAxisInVoxelBlock();
  *(float *)v13.i32 = v11 * (float)result;
  *(float32x2_t *)v14.f32 = vdiv_f32(vmul_f32(*(float32x2_t *)v35.f32, (float32x2_t)0x3F0000003F000000), (float32x2_t)vdup_lane_s32(v13, 0));
  v14.f32[2] = vmuls_lane_f32(0.5, v35, 2) / *(float *)v13.i32;
  v14.i32[3] = 0;
  v15 = (int8x16_t)vrndpq_f32(v14);
  v16 = *(float *)v15.i32 + *(float *)v15.i32;
  v15.i32[0] = vextq_s8(v15, v15, 8uLL).u32[0];
  *(float32x2_t *)v15.i8 = vadd_f32(*(float32x2_t *)v15.i8, *(float32x2_t *)v15.i8);
  v17 = vmuls_lane_f32(v16, *(float32x2_t *)v15.i8, 1) * *(float *)v15.i32;
  if ((~LODWORD(v17) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v17 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v17 >= 4295000000.0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v18 = v17;
  if (v17 >= 0x2710)
    v18 = 10000;
  if (v18 <= 1)
    v19 = 1;
  else
    v19 = v18;
  v20 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
  v21 = sub_239352098();
  v22 = sub_239352578();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v33 = v8;
    v24 = v23;
    v25 = swift_slowAlloc();
    v37 = v25;
    *(_DWORD *)v24 = 136381187;
    v36.i64[0] = sub_23925F3EC(0xD00000000000006ELL, 0x80000002393609D0, &v37);
    v32 = v7;
    v34 = a1;
    sub_2393526B0();
    *(_WORD *)(v24 + 12) = 1026;
    v36.i32[0] = v19;
    sub_2393526B0();
    *(_WORD *)(v24 + 18) = 2082;
    v36 = v35;
    sub_23925FB08((uint64_t *)&unk_2569281A0);
    sub_239263A08((unint64_t *)&qword_256927600, (uint64_t *)&unk_2569281A0, MEMORY[0x24BEE4120]);
    LOBYTE(a1) = v34;
    v26 = sub_2393528F0();
    v36.i64[0] = sub_23925F3EC(v26, v27, &v37);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v21, v22, "ObjectCaptureSession.%{private}s: Computed voxel integration capacity = %{public}u for the bounding box of size %{public}s", (uint8_t *)v24, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v25, -1, -1);
    MEMORY[0x23B83BC04](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v32);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v28 = *sub_239263F48();
  v29 = *(_DWORD *)sub_2392DCCFC();
  result = (__int32 *)sub_2392DCD08();
  v30 = *result;
  a2->i32[0] = 1;
  a2->i8[4] = 1;
  a2[1].i64[0] = 0x100000004;
  a2[1].f32[2] = a4;
  a2[1].i32[3] = v19;
  a2[2].f32[0] = v11;
  a2[2].i8[4] = 33;
  a2[2].i64[1] = 0x3D4CCCCD3F83D70ALL;
  a2[3].i32[0] = 1084227584;
  a2[4] = v35;
  a2[5].i64[0] = 0;
  a2[5].i64[1] = 0;
  a2[6].i64[0] = 644245094500000;
  a2[6].i32[2] = v28;
  a2[6].i8[12] = 0;
  a2[7].i32[0] = 1;
  a2[7].i32[1] = v29;
  a2[7].i32[2] = v30;
  a2[7].i8[12] = a1 & 1;
  a2[8].i32[0] = 1048576000;
  return result;
}

unint64_t sub_239330C64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_23925FB08(&qword_25692B7D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_23925FB08(&qword_25692B690);
    v7 = (_QWORD *)sub_239352878();
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23926059C(v9, (uint64_t)v5, &qword_25692B7D8);
      v11 = *v5;
      result = sub_2392C01BC(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = sub_239352020();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_239330DCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23925FB08(&qword_25692B798);
    v3 = (_QWORD *)sub_239352878();
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_2392C01BC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t _s6CoreOC20ObjectCaptureSessionC24isCurrentDeviceSupportedSbvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2393520B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2392DCFF8();
  if ((v4 & 1) == 0)
  {
    v5 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    v6 = sub_239352098();
    v7 = sub_23935256C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v12 = v9;
      *(_DWORD *)v8 = 136380675;
      v11 = sub_23925F3EC(0xD000000000000018, 0x8000000239360C50, &v12);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v6, v7, "ObjectCaptureSession.%{private}s: The device is not supported on this device", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v9, -1, -1);
      MEMORY[0x23B83BC04](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v4 & 1;
}

uint64_t type metadata accessor for ObjectCaptureSession.Frame.Camera(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692F288);
}

uint64_t type metadata accessor for ObjectCaptureSession.Frame.Object(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692F298);
}

uint64_t type metadata accessor for ObjectCaptureSession.Frame(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692F278);
}

uint64_t sub_239331084(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2393310C8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_239331104(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_23933113C(void *a1)
{
  bzero(a1, 0x2B0uLL);
}

id sub_239331144(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53)
{
  id v53;
  id v54;
  id v55;

  if (STACK[0x338])
  {
    v55 = (id)STACK[0x2E8];
    sub_239331294((uint64_t)result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = a31;
    sub_23933132C(a43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = a53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v55;
  }
  return result;
}

uint64_t sub_239331294(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23933132C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

#error "239331478: call analysis failed (funcsize=82)"

uint64_t sub_2393314A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53)
{
  void *v53;

  if (STACK[0x338])
  {
    v53 = (void *)STACK[0x2E8];
    sub_2392A0118(result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_2393315F0(a43);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2393315F0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ObjectCaptureSession.Mesh.Anchor(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692F2A8);
}

uint64_t type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(uint64_t a1)
{
  return sub_239267738(a1, qword_25692F2C8);
}

uint64_t type metadata accessor for ObjectCaptureSession.Metadata.Shot(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692F2B8);
}

void sub_239331658(id a1)
{
  if ((char *)a1 - 7 >= (char *)0xB)
    sub_2392D0F70(a1);
}

uint64_t type metadata accessor for ObjectCaptureSessionObservingPublishers()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ObjectCaptureSessionWritingPublishers()
{
  return objc_opt_self();
}

uint64_t sub_2393316AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2393316D0()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled);
  result = swift_beginAccess();
  *v1 = 1;
  return result;
}

uint64_t sub_23933171C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23933172C()
{
  return swift_release();
}

uint64_t sub_239331734(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(unint64_t, unint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *);
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  id v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  char *v73;
  void *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t result;
  void *v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  uint64_t v93;
  char v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t);
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  uint64_t v106;
  char v107;
  int IsTimeOfFlightSensorType80;
  char *v109;
  NSObject *v110;
  os_log_type_t v111;
  uint8_t *v112;
  void *v113;
  const char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  char *v119;
  NSObject *v120;
  os_log_type_t v121;
  uint8_t *v122;
  void *v123;
  uint64_t v124;
  uint64_t *v125;
  os_log_type_t v126;
  uint8_t *v127;
  void *v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  void *v136;
  void *v137;
  uint64_t v138;
  uint64_t *v139;
  os_log_type_t v140;
  uint8_t *v141;
  void *v142;
  void *v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  char *v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  void *v151;
  void *v152;
  char *v153;
  void *v154;
  void *v155;
  id v156;
  char *v157;
  char *v158;
  NSObject *v159;
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  void *v164;
  char *v165;
  _QWORD *v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, _UNKNOWN **);
  char *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  id v174;
  NSObject *v175;
  os_log_type_t v176;
  uint8_t *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  void (*v182)(unint64_t, unint64_t);
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  void (*v193)(char *);
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  void *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  void *v210[2];
  float v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;

  v198 = a2;
  v196 = a1;
  v205 = sub_2393520B0();
  v208 = *(_QWORD *)(v205 - 8);
  v5 = MEMORY[0x24BDAC7A8](v205);
  v197 = (char *)&v179 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v191 = (char *)&v179 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v190 = (char *)&v179 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v188 = (char *)&v179 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v179 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v179 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v179 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v180 = (char *)&v179 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v186 = (char *)&v179 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v189 = (char *)&v179 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v192 = (char *)&v179 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v203 = (char *)&v179 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v194 = (char *)&v179 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v179 - v34;
  v36 = sub_23925FB08(&qword_256927AD0);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v201 = (uint64_t)&v179 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v179 - v39;
  v199 = sub_239351FD8();
  v204 = *(_QWORD *)(v199 - 8);
  MEMORY[0x24BDAC7A8](v199);
  v42 = (char *)&v179 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239351FB4();
  v202 = a3;
  sub_23926059C(a3, (uint64_t)v40, &qword_256927AD0);
  v43 = sub_239351F3C();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v40, 1, v43);
  v185 = v3;
  v187 = v18;
  v181 = v21;
  if (v45 == 1)
  {
    sub_23925FE28((uint64_t)v40, &qword_256927AD0);
    v195 = 0;
    v46 = 0xE000000000000000;
  }
  else
  {
    v195 = sub_239351E7C();
    v46 = v47;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v43);
  }
  v48 = type metadata accessor for MemoryLogger();
  v49 = *(void (**)(unint64_t, unint64_t))(v48 + 88);
  v183 = v48;
  v182 = v49;
  v49(0xD00000000000002DLL, 0x8000000239360B10);
  v50 = sub_239275A60();
  v51 = v208;
  v52 = *(void (**)(char *))(v208 + 16);
  v53 = v35;
  v206 = v50;
  v54 = v205;
  v52(v35);
  swift_bridgeObjectRetain();
  v55 = sub_239352098();
  v56 = sub_239352578();
  v57 = os_log_type_enabled(v55, v56);
  v200 = v42;
  v184 = v15;
  if (v57)
  {
    v58 = swift_slowAlloc();
    v59 = (void *)swift_slowAlloc();
    v193 = v52;
    v60 = v59;
    v210[0] = v59;
    *(_DWORD *)v58 = 136381187;
    v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
    sub_2393526B0();
    *(_WORD *)(v58 + 12) = 2160;
    v212 = 1752392040;
    sub_2393526B0();
    *(_WORD *)(v58 + 22) = 2081;
    swift_bridgeObjectRetain();
    v212 = sub_23925F3EC(v195, v46, (uint64_t *)v210);
    v61 = v204;
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v55, v56, "ObjectCaptureSession.%{private}s: Snapshot URL: %{private,mask.hash}s", (uint8_t *)v58, 0x20u);
    swift_arrayDestroy();
    v62 = v60;
    v52 = v193;
    MEMORY[0x23B83BC04](v62, -1, -1);
    MEMORY[0x23B83BC04](v58, -1, -1);

    v208 = *(_QWORD *)(v208 + 8);
    ((void (*)(char *, uint64_t))v208)(v53, v54);
    v63 = v203;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v208 = *(_QWORD *)(v51 + 8);
    ((void (*)(char *, uint64_t))v208)(v53, v54);
    v63 = v203;
    v61 = v204;
  }
  v64 = v201;
  sub_23926059C(v202, v201, &qword_256927AD0);
  v65 = v207;
  v66 = (uint64_t)&v207[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
  swift_beginAccess();
  sub_239267C70(v64, v66, &qword_256927AD0);
  swift_endAccess();
  if ((_s6CoreOC20ObjectCaptureSessionC24isCurrentDeviceSupportedSbvgZ_0() & 1) == 0)
  {
    v69 = v197;
    ((void (*)(char *, uint64_t, uint64_t))v52)(v197, v206, v54);
    v70 = sub_239352098();
    v71 = sub_23935256C();
    if (!os_log_type_enabled(v70, v71))
      goto LABEL_37;
    v72 = (uint8_t *)swift_slowAlloc();
    v73 = v69;
    v74 = (void *)swift_slowAlloc();
    v210[0] = v74;
    v75 = v54;
    *(_DWORD *)v72 = 136380675;
    v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
    sub_2393526B0();
    v76 = "ObjectCaptureSession.%{private}s: Unsupported device. Failed to initiate an ObjectCaptureSession!";
LABEL_36:
    _os_log_impl(&dword_23925B000, v70, v71, v76, v72, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v74, -1, -1);
    MEMORY[0x23B83BC04](v72, -1, -1);

    v115 = v73;
    v116 = v75;
LABEL_38:
    ((void (*)(char *, uint64_t))v208)(v115, v116);
    v117 = v200;
    sub_2392D0F1C();
    swift_allocError();
    *v118 = 0;
    swift_willThrow();
    goto LABEL_39;
  }
  if (v196)
    OCMetalInitWithDevice();
  v67 = v198;
  if (v198)
  {
    v68 = v198;
  }
  else
  {
    v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
    v67 = v198;
  }
  v77 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager;
  v78 = *(void **)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager];
  *(_QWORD *)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager] = v68;
  v79 = v67;

  result = *(_QWORD *)&v65[v77];
  if (!result)
  {
    __break(1u);
    goto LABEL_70;
  }
  result = (uint64_t)objc_msgSend((id)result, sel_isDeviceMotionAvailable);
  if ((result & 1) == 0)
  {
    v69 = v194;
    ((void (*)(char *, uint64_t, uint64_t))v52)(v194, v206, v54);
    v70 = sub_239352098();
    v71 = sub_23935256C();
    if (!os_log_type_enabled(v70, v71))
      goto LABEL_37;
    v72 = (uint8_t *)swift_slowAlloc();
    v73 = v69;
    v74 = (void *)swift_slowAlloc();
    v210[0] = v74;
    v75 = v54;
    *(_DWORD *)v72 = 136380675;
    v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
    sub_2393526B0();
    v76 = "ObjectCaptureSession.%{private}s: The device-motion service is not available on this device!";
    goto LABEL_36;
  }
  v81 = *(void **)&v65[v77];
  if (!v81)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  type metadata accessor for MotionManager();
  *(_QWORD *)&v65[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager] = sub_2392608AC(v81);
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v52)(v63, v206, v54);
  v82 = sub_239352098();
  v83 = sub_239352578();
  if (os_log_type_enabled(v82, v83))
  {
    v84 = (uint8_t *)swift_slowAlloc();
    v85 = (void *)swift_slowAlloc();
    v210[0] = v85;
    *(_DWORD *)v84 = 136380675;
    v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
    v54 = v205;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v82, v83, "ObjectCaptureSession.%{private}s: Initialize object-centric capture mode properties.", v84, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v85, -1, -1);
    MEMORY[0x23B83BC04](v84, -1, -1);
  }

  ((void (*)(char *, uint64_t))v208)(v63, v54);
  type metadata accessor for VoxelIntegrationManager();
  sub_23935181C();
  v86 = v207;
  *(_QWORD *)&v207[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = v87;
  swift_release();
  type metadata accessor for MaskingManager();
  v88 = sub_23926197C(256, 192);
  if (!v88)
  {
    v69 = v191;
    ((void (*)(char *, uint64_t, uint64_t))v52)(v191, v206, v54);
    v70 = sub_239352098();
    v71 = sub_23935256C();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = v69;
      v74 = (void *)swift_slowAlloc();
      v210[0] = v74;
      v75 = v54;
      *(_DWORD *)v72 = 136380675;
      v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
      sub_2393526B0();
      v76 = "ObjectCaptureSession.%{private}s: Failed to create masking manager!";
      goto LABEL_36;
    }
LABEL_37:

    v115 = v69;
    v116 = v54;
    goto LABEL_38;
  }
  v89 = v88;
  v90 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager;
  *(_QWORD *)&v86[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager] = v88;
  swift_retain();
  result = swift_release();
  v91 = *(_QWORD *)&v86[v90];
  if (!v91)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v92 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v91 + 272);
  v93 = swift_retain();
  v94 = v92(v93);
  swift_release();
  if ((v94 & 1) == 0)
  {
    v119 = v192;
    ((void (*)(char *, uint64_t, uint64_t))v52)(v192, v206, v54);
    v120 = sub_239352098();
    v121 = sub_23935256C();
    if (os_log_type_enabled(v120, v121))
    {
      v122 = (uint8_t *)swift_slowAlloc();
      v123 = (void *)swift_slowAlloc();
      v210[0] = v123;
      v124 = v54;
      *(_DWORD *)v122 = 136380675;
      v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v120, v121, "ObjectCaptureSession.%{private}s: Failed to start masking manager!", v122, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v123, -1, -1);
      MEMORY[0x23B83BC04](v122, -1, -1);

      v125 = &v216;
LABEL_44:
      v129 = (char *)*(v125 - 32);
      v130 = v124;
LABEL_46:
      ((void (*)(char *, uint64_t))v208)(v129, v130);
      v117 = v200;
      sub_2392D0F1C();
      swift_allocError();
      *v131 = 0;
      swift_willThrow();
      swift_release();
      goto LABEL_39;
    }
LABEL_45:

    v129 = v119;
    v130 = v54;
    goto LABEL_46;
  }
  v193 = v52;
  type metadata accessor for ExplicitFeedbackManager();
  sub_2392964A8((uint64_t)&v211);
  v95 = sub_2392964C0(&v211);
  if (!v95)
  {
    v119 = v190;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v190, v206, v54);
    v120 = sub_239352098();
    v126 = sub_23935256C();
    if (os_log_type_enabled(v120, v126))
    {
      v127 = (uint8_t *)swift_slowAlloc();
      v128 = (void *)swift_slowAlloc();
      v210[0] = v128;
      v124 = v54;
      *(_DWORD *)v127 = 136380675;
      v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v120, v126, "ObjectCaptureSession.%{private}s: Failed to create explicit feedback manager!", v127, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v128, -1, -1);
      MEMORY[0x23B83BC04](v127, -1, -1);

      v125 = &v215;
      goto LABEL_44;
    }
    goto LABEL_45;
  }
  v96 = (char *)v95;
  v97 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager;
  *(_QWORD *)&v86[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager] = v95;
  swift_retain();
  result = swift_release();
  v98 = *(_QWORD *)&v86[v97];
  if (!v98)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v99 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v98 + 112);
  v100 = swift_retain();
  v101 = v99(v100);
  swift_release();
  if ((v101 & 1) == 0)
  {
    v132 = v189;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v189, v206, v54);
    v133 = sub_239352098();
    v134 = sub_23935256C();
    if (os_log_type_enabled(v133, v134))
    {
      v135 = (uint8_t *)swift_slowAlloc();
      v136 = (void *)swift_slowAlloc();
      v203 = v96;
      v137 = v136;
      v210[0] = v136;
      v138 = v54;
      *(_DWORD *)v135 = 136380675;
      v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v133, v134, "ObjectCaptureSession.%{private}s: Failed to start explicit feedback manager!", v135, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v137, -1, -1);
      MEMORY[0x23B83BC04](v135, -1, -1);

      v139 = &v214;
LABEL_51:
      v144 = (char *)*(v139 - 32);
      v145 = v138;
LABEL_53:
      ((void (*)(char *, uint64_t))v208)(v144, v145);
      v117 = v200;
      sub_2392D0F1C();
      swift_allocError();
      *v146 = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      goto LABEL_39;
    }
LABEL_52:

    v144 = v132;
    v145 = v54;
    goto LABEL_53;
  }
  type metadata accessor for ImageScaler();
  v102 = sub_239342EA0();
  if (!v102)
  {
    v132 = v188;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v188, v206, v54);
    v133 = sub_239352098();
    v140 = sub_23935256C();
    if (os_log_type_enabled(v133, v140))
    {
      v141 = (uint8_t *)swift_slowAlloc();
      v142 = (void *)swift_slowAlloc();
      v203 = v96;
      v143 = v142;
      v210[0] = v142;
      v138 = v54;
      *(_DWORD *)v141 = 136380675;
      v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v133, v140, "ObjectCaptureSession.%{private}s: Failed to create image scaler!", v141, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v143, -1, -1);
      MEMORY[0x23B83BC04](v141, -1, -1);

      v139 = &v213;
      goto LABEL_51;
    }
    goto LABEL_52;
  }
  v103 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler;
  *(_QWORD *)&v86[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler] = v102;
  v202 = v102;
  swift_retain();
  result = swift_release();
  v104 = *(_QWORD *)&v86[v103];
  if (v104)
  {
    v105 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v104 + 160);
    v106 = swift_retain();
    v107 = v105(v106);
    swift_release();
    if ((v107 & 1) != 0)
    {
      v86[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported] = OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightOCMacroModeSupported();
      IsTimeOfFlightSensorType80 = OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightSensorType80();
      v86[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot] = IsTimeOfFlightSensorType80;
      v201 = v89;
      if (IsTimeOfFlightSensorType80)
      {
        v109 = v180;
        ((void (*)(char *, uint64_t, uint64_t))v193)(v180, v206, v54);
        v110 = sub_239352098();
        v111 = sub_239352578();
        if (os_log_type_enabled(v110, v111))
        {
          v112 = (uint8_t *)swift_slowAlloc();
          v113 = (void *)swift_slowAlloc();
          v210[0] = v113;
          *(_DWORD *)v112 = 136380675;
          v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
          v54 = v205;
          sub_2393526B0();
          v114 = "ObjectCaptureSession.%{private}s: ToF sensor type 80";
LABEL_58:
          _os_log_impl(&dword_23925B000, v110, v111, v114, v112, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v113, -1, -1);
          MEMORY[0x23B83BC04](v112, -1, -1);
        }
      }
      else
      {
        v109 = v181;
        ((void (*)(char *, uint64_t, uint64_t))v193)(v181, v206, v54);
        v110 = sub_239352098();
        v111 = sub_239352578();
        if (os_log_type_enabled(v110, v111))
        {
          v112 = (uint8_t *)swift_slowAlloc();
          v113 = (void *)swift_slowAlloc();
          v210[0] = v113;
          *(_DWORD *)v112 = 136380675;
          v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
          v54 = v205;
          sub_2393526B0();
          v114 = "ObjectCaptureSession.%{private}s: ToF sensor type 74";
          goto LABEL_58;
        }
      }

      ((void (*)(char *, uint64_t))v208)(v109, v54);
      v203 = v96;
      swift_getKeyPath();
      swift_getKeyPath();
      v154 = v207;
      sub_23935211C();
      swift_release();
      swift_release();
      v155 = v210[0];
      swift_getKeyPath();
      swift_getKeyPath();
      v210[0] = (void *)10;
      v156 = v154;
      sub_239352128();
      v210[0] = v155;
      sub_2392F48FC(v210);
      sub_239331658(v155);
      v157 = v187;
      ((void (*)(char *, uint64_t, uint64_t))v193)(v187, v206, v54);
      v158 = (char *)v156;
      v159 = sub_239352098();
      v160 = sub_239352578();
      if (os_log_type_enabled(v159, v160))
      {
        v161 = swift_slowAlloc();
        v198 = (void *)swift_slowAlloc();
        v210[0] = v198;
        *(_DWORD *)v161 = 136380931;
        v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
        sub_2393526B0();
        *(_WORD *)(v161 + 12) = 2082;
        v197 = (char *)(v161 + 14);
        sub_239352020();
        sub_239262570(&qword_256928160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v54 = v205;
        v162 = sub_2393528C0();
        v212 = sub_23925F3EC(v162, v163, (uint64_t *)v210);
        sub_2393526B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v159, v160, "ObjectCaptureSession.%{private}s: Session identifier: %{public}s", (uint8_t *)v161, 0x16u);
        v164 = v198;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v164, -1, -1);
        MEMORY[0x23B83BC04](v161, -1, -1);

        v165 = v187;
      }
      else
      {

        v165 = v157;
      }
      ((void (*)(char *, uint64_t))v208)(v165, v54);
      v61 = v204;
      v167 = v184;
      v168 = *(_QWORD *)&v207[v90];
      if (v168)
      {
        v169 = *(void (**)(char *, _UNKNOWN **))(*(_QWORD *)v168 + 176);
        v170 = v158;
        swift_retain();
        v169(v158, &off_250AC7A40);
        swift_release();
      }
      *(_QWORD *)&v158[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem] = sub_2392FD9C0();
      swift_release();
      objc_msgSend(*(id *)&v158[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession], sel__addObserver_, v158);
      type metadata accessor for ObjectCaptureSessionSPI();
      v171 = swift_allocObject();
      v172 = (uint64_t *)&v158[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi];
      swift_beginAccess();
      *v172 = v171;
      swift_release();
      sub_239350DE4();
      OCSignPostsAriadneDbgCode();
      sub_239350EA4();
      sub_239352344();
      v173 = kdebug_trace_string();
      swift_release();
      *(_QWORD *)&v158[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId] = v173;
      sub_239350D9C();
      OCSignPostsAriadneDbgCode();
      kdebug_trace();
      sub_239350DFC();
      OCSignPostsAriadneDbgCode();
      kdebug_trace();
      sub_2393357D4(0xD000000000000019, 0x8000000239360BB0, "ObjectCaptureSession.%{private}s: pnp_measurement_window_start %{public}s");
      v174 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
      objc_msgSend(v174, sel_addObserver_selector_name_object_, v158, sel_logThermalStateChange, *MEMORY[0x24BDD1168], 0);

      ((void (*)(char *, uint64_t, uint64_t))v193)(v167, v206, v54);
      v175 = sub_239352098();
      v176 = sub_239352578();
      if (os_log_type_enabled(v175, v176))
      {
        v177 = (uint8_t *)swift_slowAlloc();
        v178 = swift_slowAlloc();
        v212 = v178;
        *(_DWORD *)v177 = 136380675;
        v209 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, &v212);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v175, v176, "ObjectCaptureSession.%{private}s: Session is created.", v177, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v178, -1, -1);
        MEMORY[0x23B83BC04](v177, -1, -1);
      }

      ((void (*)(char *, uint64_t))v208)(v167, v54);
      v182(0xD000000000000023, 0x8000000239360B80);
      swift_release();
      swift_release();
      swift_release();
      v117 = v200;
      goto LABEL_39;
    }
    v147 = v186;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v186, v206, v54);
    v148 = sub_239352098();
    v149 = sub_23935256C();
    if (os_log_type_enabled(v148, v149))
    {
      v150 = (uint8_t *)swift_slowAlloc();
      v151 = (void *)swift_slowAlloc();
      v203 = v96;
      v152 = v151;
      v210[0] = v151;
      *(_DWORD *)v150 = 136380675;
      v212 = sub_23925F3EC(0xD00000000000003ALL, 0x8000000239360B40, (uint64_t *)v210);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v148, v149, "ObjectCaptureSession.%{private}s: Failed to start image scaler!", v150, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v152, -1, -1);
      MEMORY[0x23B83BC04](v150, -1, -1);

      v153 = v186;
    }
    else
    {

      v153 = v147;
    }
    ((void (*)(char *, uint64_t))v208)(v153, v54);
    v117 = v200;
    sub_2392D0F1C();
    swift_allocError();
    *v166 = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
LABEL_39:
    sub_2392FD024();
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v117, v199);
  }
LABEL_73:
  __break(1u);
  return result;
}

id sub_2393332B8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  _OWORD *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  _OWORD *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _OWORD *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  id v83;
  objc_class *v84;
  id v85;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  objc_super v101;
  uint64_t aBlock[6];
  _BYTE v103[88];
  uint64_t v104;

  v92 = a4;
  v90 = a3;
  v89 = a2;
  v88 = a1;
  v100 = sub_2393520B0();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_239352170();
  MEMORY[0x24BDAC7A8](v96);
  v95 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2393525E4();
  v94 = *((_QWORD *)v97 - 1);
  MEMORY[0x24BDAC7A8](v97);
  v93 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2393525C0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23925FB08(&qword_25692A8F8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_observingPublishers;
  type metadata accessor for ObjectCaptureSessionObservingPublishers();
  v15 = (_OWORD *)swift_allocObject();
  v15[1] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  v15[4] = 0u;
  v15[5] = 0u;
  v15[6] = 0u;
  v15[7] = 0u;
  v15[8] = 0u;
  *(_QWORD *)&v4[v14] = v15;
  v16 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  type metadata accessor for ObjectCaptureSessionWritingPublishers();
  v17 = (_OWORD *)swift_allocObject();
  v17[1] = 0u;
  v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[6] = 0u;
  v17[7] = 0u;
  *(_QWORD *)&v4[v16] = v17;
  *(_QWORD *)&v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi] = 0;
  v18 = &v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable] = 1;
  v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled] = 0;
  v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled] = 0;
  v19 = &v4[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot];
  LOBYTE(aBlock[0]) = 0;
  v20 = v4;
  sub_2393520F8();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v13, v10);
  v21 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue;
  sub_2392759EC(0, (unint64_t *)&qword_256927408);
  sub_2393521A0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_256927DD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_23925FB08(&qword_256927410);
  sub_239263A08((unint64_t *)&qword_256927DE0, &qword_256927410, MEMORY[0x24BEE12C8]);
  sub_239352734();
  (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v94 + 104))(v93, *MEMORY[0x24BEE5750], v97);
  *(_QWORD *)&v20[v21] = sub_239352614();
  sub_239352014();
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause] = 10;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing] = 18;
  v22 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  v23 = type metadata accessor for ObjectCaptureSession.Frame(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap;
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v20[v24] = sub_2392F3534(MEMORY[0x24BEE4AF8], &qword_25692B7F8, &qword_25692B6F0);
  v26 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform];
  v27 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v28 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v30 = *(_QWORD *)(MEMORY[0x24BDAEE00] + 48);
  v29 = *(_QWORD *)(MEMORY[0x24BDAEE00] + 56);
  *(_OWORD *)v26 = *MEMORY[0x24BDAEE00];
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v28;
  *((_QWORD *)v26 + 6) = v30;
  *((_QWORD *)v26 + 7) = v29;
  v26[64] = 0;
  v31 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  *(_QWORD *)&v20[v31] = sub_2392F337C(v25);
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex] = 0;
  v32 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_needToStopMotionManager] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported] = 2;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot] = 0;
  v33 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
  v34 = sub_239351F3C();
  v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v97(v33, 1, 1, v34);
  v35 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMUserDefaultValue;
  v20[v35] = sub_239263CE0();
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio] = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV] = _Q0;
  v41 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  *(_QWORD *)&v20[v41] = sub_2392F3534(v25, &qword_25692B7E8, &qword_25692B6A8);
  v42 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap;
  *(_QWORD *)&v20[v42] = sub_2392F36C0(v25);
  v43 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
  *(_QWORD *)&v20[v43] = sub_239330C64(v25);
  v44 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap;
  *(_QWORD *)&v20[v44] = sub_239330DCC(v25);
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numInitialShotsBeforeFlippableDecision] = 10;
  v45 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions];
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numPoseUpdatesToCheckForConsistency] = 2;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateRotationDiffThreshold] = 1065353216;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateTranslationDiffThreshold] = 1000593162;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_waitTimeThresholdForPoseCorrectionInSec] = 0x4024000000000000;
  v46 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem;
  aBlock[4] = (uint64_t)nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC8868;
  _Block_copy(aBlock);
  v104 = v25;
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  sub_239352224();
  swift_allocObject();
  *(_QWORD *)&v20[v46] = sub_23935220C();
  v47 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform];
  *(_OWORD *)v47 = 0u;
  *((_OWORD *)v47 + 1) = 0u;
  *((_OWORD *)v47 + 2) = 0u;
  *((_OWORD *)v47 + 3) = 0u;
  v47[64] = 1;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_consecutiveObjectFlippabilityCount] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minConsecutiveObjectFlippabilityCount] = 5;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minShotFlippableMapSize] = 5;
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions] = xmmword_2393566F0;
  v48 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
  *(_OWORD *)v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  v48[32] = 0;
  v48[33] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_yDistanceThresholdBetweenPrevAndCurrPlanes] = 1008981770;
  v49 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
  *((_OWORD *)v49 + 2) = 0u;
  *((_OWORD *)v49 + 3) = 0u;
  *(_OWORD *)v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  v49[64] = 1;
  v50 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox];
  *(_OWORD *)v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  *((_OWORD *)v50 + 2) = 0u;
  *((_OWORD *)v50 + 3) = 0u;
  v50[64] = 1;
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction] = xmmword_239354C80;
  v51 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud];
  *v51 = 0u;
  v51[1] = 0u;
  v51[2] = 0u;
  v51[3] = 0u;
  v51[4] = 0u;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID] = -1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment] = v25;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudUpdateInterval] = 0x3FA10CB295E9E1B1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCacheInterval] = 0x4008000000000000;
  v52 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox];
  *(_OWORD *)v52 = 0u;
  *((_OWORD *)v52 + 1) = 0u;
  *((_OWORD *)v52 + 2) = 0u;
  *((_OWORD *)v52 + 3) = 0u;
  v52[64] = 1;
  *(_OWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction] = xmmword_239354C80;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldCreateFreeformMeshBuffersFromHeap] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshHeapVertexCapacity] = 400000;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent] = 0;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementInitialVoxelSize] = 1000593162;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeIncrement] = 1000593162;
  *(_DWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeScanExtentThreshold] = 1014350479;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurface] = 0;
  v53 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin];
  *v53 = 0;
  v53[1] = 0;
  v54 = (uint64_t)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig];
  sub_239334200((uint64_t)v103);
  sub_239268764((uint64_t)v103, v54, &qword_25692A908);
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud] = 0;
  v55 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud];
  v55[4] = 0u;
  v55[5] = 0u;
  v55[2] = 0u;
  v55[3] = 0u;
  *v55 = 0u;
  v55[1] = 0u;
  v56 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_intrinsicsFromLastFrame];
  *((_OWORD *)v56 + 1) = 0u;
  *((_OWORD *)v56 + 2) = 0u;
  *(_OWORD *)v56 = 0u;
  v56[48] = 1;
  v57 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageHeightFromLastFrame];
  *(_QWORD *)v57 = 0;
  v57[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration] = 0;
  v58 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime];
  *(_QWORD *)v58 = 0;
  v58[8] = 1;
  v59 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM];
  *((_OWORD *)v59 + 2) = 0u;
  *((_OWORD *)v59 + 3) = 0u;
  *(_OWORD *)v59 = 0u;
  *((_OWORD *)v59 + 1) = 0u;
  v59[64] = 1;
  v60 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform];
  *(_OWORD *)v60 = 0u;
  *((_OWORD *)v60 + 1) = 0u;
  *((_OWORD *)v60 + 2) = 0u;
  *((_OWORD *)v60 + 3) = 0u;
  v60[64] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled] = 0;
  v61 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown];
  *(_QWORD *)v61 = 0;
  v61[8] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData] = 0;
  v62 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugOCBundleWriteDisabled;
  v20[v62] = *sub_239263E34();
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled] = 1;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride] = 0;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer] = 0;
  v63 = &v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform];
  v64 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v65 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v66 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *v63 = *MEMORY[0x24BDAEE00];
  v63[1] = v64;
  v63[2] = v65;
  v63[3] = v66;
  v67 = v97;
  v97(&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL], 1, 1, v34);
  v67(&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL], 1, 1, v34);
  *(_QWORD *)&v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps] = MEMORY[0x24BEE4B08];
  v68 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration;
  v20[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration] = 0;
  v69 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v69, v100);
  v70 = v20;
  v71 = sub_239352098();
  v72 = sub_239352578();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = swift_slowAlloc();
    v74 = swift_slowAlloc();
    aBlock[0] = v74;
    *(_DWORD *)v73 = 136380931;
    v104 = sub_23925F3EC(0xD000000000000034, 0x8000000239360BF0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v73 + 12) = 2082;
    LOBYTE(v104) = v20[v68];
    v75 = sub_23935232C();
    v104 = sub_23925F3EC(v75, v76, aBlock);
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v71, v72, "ObjectCaptureSession.%{private}s: Initialize with configuration: %{public}s.", (uint8_t *)v73, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v74, -1, -1);
    MEMORY[0x23B83BC04](v73, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
  v77 = v92;
  v78 = v91;
  v79 = v90;
  v80 = v89;
  v81 = v88;
  if (v88)
    v82 = v88;
  else
    v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1558]), sel_init);
  *(_QWORD *)&v70[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession] = v82;
  swift_beginAccess();
  v104 = 10;
  v83 = v81;
  sub_2393520F8();
  swift_endAccess();

  v84 = (objc_class *)type metadata accessor for ObjectCaptureSession(0);
  v101.receiver = v70;
  v101.super_class = v84;
  v85 = objc_msgSendSuper2(&v101, sel_init);
  sub_239331734(v80, v79, v77);

  if (v78)
  sub_23925FE28(v77, &qword_256927AD0);
  return v85;
}

double sub_239334200(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0x200000000;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 136) = 0;
  return result;
}

id sub_239334234(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  _BYTE *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  char *v20;
  char *v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  _OWORD *v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  _OWORD *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  id v84;
  id v85;
  objc_class *v86;
  id v87;
  void *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, uint64_t);
  int v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  objc_super v103;
  uint64_t aBlock[6];
  _BYTE v105[80];
  uint64_t v106;

  v93 = a4;
  v91 = a3;
  v90 = a2;
  v89 = a1;
  v102 = sub_2393520B0();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v100 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_239352170();
  MEMORY[0x24BDAC7A8](v97);
  v96 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_2393525E4();
  v95 = *((_QWORD *)v98 - 1);
  MEMORY[0x24BDAC7A8](v98);
  v94 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2393525C0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23925FB08(&qword_25692A8F8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = *a5;
  v16 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_observingPublishers;
  type metadata accessor for ObjectCaptureSessionObservingPublishers();
  v17 = (_OWORD *)swift_allocObject();
  v17[1] = 0u;
  v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[6] = 0u;
  v17[7] = 0u;
  v17[8] = 0u;
  *(_QWORD *)&v5[v16] = v17;
  v18 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_writingPublishers;
  type metadata accessor for ObjectCaptureSessionWritingPublishers();
  v19 = (_OWORD *)swift_allocObject();
  v19[1] = 0u;
  v19[2] = 0u;
  v19[3] = 0u;
  v19[4] = 0u;
  v19[5] = 0u;
  v19[6] = 0u;
  v19[7] = 0u;
  *(_QWORD *)&v5[v18] = v19;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_spi] = 0;
  v20 = &v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_estimatedReconstructionTime];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable] = 1;
  v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isOverCaptureEnabled] = 0;
  v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isFreeformModeEnabled] = 0;
  v21 = &v5[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__canTakeManualShot];
  LOBYTE(aBlock[0]) = 0;
  v22 = v5;
  sub_2393520F8();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v15, v12);
  v23 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_sessionQueue;
  sub_2392759EC(0, (unint64_t *)&qword_256927408);
  sub_2393521A0();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_256927DD0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_23925FB08(&qword_256927410);
  sub_239263A08((unint64_t *)&qword_256927DE0, &qword_256927410, MEMORY[0x24BEE12C8]);
  sub_239352734();
  (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v95 + 104))(v94, *MEMORY[0x24BEE5750], v98);
  *(_QWORD *)&v22[v23] = sub_239352614();
  sub_239352014();
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateOnPause] = 10;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_stateAfterFinishing] = 18;
  v24 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_currentFrame];
  v25 = type metadata accessor for ObjectCaptureSession.Frame(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_planeMap;
  v27 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v22[v26] = sub_2392F3534(MEMORY[0x24BEE4AF8], &qword_25692B7F8, &qword_25692B6F0);
  v28 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectTransform];
  v29 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v30 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v32 = *(_QWORD *)(MEMORY[0x24BDAEE00] + 48);
  v31 = *(_QWORD *)(MEMORY[0x24BDAEE00] + 56);
  *(_OWORD *)v28 = *MEMORY[0x24BDAEE00];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v30;
  *((_QWORD *)v28 + 6) = v32;
  *((_QWORD *)v28 + 7) = v31;
  v28[64] = 0;
  v33 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_metadataMap;
  *(_QWORD *)&v22[v33] = sub_2392F337C(v27);
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex] = 0;
  v34 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp];
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_needToStopMotionManager] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isHighQualityMacroModeSupported] = 2;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isToFSensorTypePeridot] = 0;
  v35 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_snapshotURL];
  v36 = sub_239351F3C();
  v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v98(v35, 1, 1, v36);
  v37 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMUserDefaultValue;
  v22[v37] = sub_239263CE0();
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isClosed] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectInFOVRatio] = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_centerOfObjectInFOV] = _Q0;
  v43 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_uuidToShotAnchorsMap;
  *(_QWORD *)&v22[v43] = sub_2392F3534(v27, &qword_25692B7E8, &qword_25692B6A8);
  v44 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotUUIDToIDMap;
  *(_QWORD *)&v22[v44] = sub_2392F36C0(v27);
  v45 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotIDToUUIDMap;
  *(_QWORD *)&v22[v45] = sub_239330C64(v27);
  v46 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap;
  *(_QWORD *)&v22[v46] = sub_239330DCC(v27);
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numInitialShotsBeforeFlippableDecision] = 10;
  v47 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maxPhotoDimensions];
  *(_QWORD *)v47 = 0;
  v47[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPoseCorrectionUsingMobileSfMEnabled] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_numPoseUpdatesToCheckForConsistency] = 2;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateRotationDiffThreshold] = 1065353216;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_mobileSfMPoseUpdateTranslationDiffThreshold] = 1000593162;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_waitTimeThresholdForPoseCorrectionInSec] = 0x4024000000000000;
  v48 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_poseCorrectionTimerWorkItem;
  aBlock[4] = (uint64_t)nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC8840;
  _Block_copy(aBlock);
  v106 = v27;
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  sub_239352224();
  swift_allocObject();
  *(_QWORD *)&v22[v48] = sub_23935220C();
  v49 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToMobileSfMTransform];
  *(_OWORD *)v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  *((_OWORD *)v49 + 2) = 0u;
  *((_OWORD *)v49 + 3) = 0u;
  v49[64] = 1;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_consecutiveObjectFlippabilityCount] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minConsecutiveObjectFlippabilityCount] = 5;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_minShotFlippableMapSize] = 5;
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureOptions] = xmmword_2393566F0;
  v50 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_tapPosition];
  *(_OWORD *)v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  v50[32] = 0;
  v50[33] = 1;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_plane] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_prevPlane] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_yDistanceThresholdBetweenPrevAndCurrPlanes] = 1008981770;
  v51 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialCameraTransform];
  *((_OWORD *)v51 + 2) = 0u;
  *((_OWORD *)v51 + 3) = 0u;
  *(_OWORD *)v51 = 0u;
  *((_OWORD *)v51 + 1) = 0u;
  v51[64] = 1;
  v52 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBox];
  *(_OWORD *)v52 = 0u;
  *((_OWORD *)v52 + 1) = 0u;
  *((_OWORD *)v52 + 2) = 0u;
  *((_OWORD *)v52 + 3) = 0u;
  v52[64] = 1;
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForObjectCentricReconstruction] = xmmword_239354C80;
  v53 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingVoxelCloud];
  *v53 = 0u;
  v53[1] = 0u;
  v53[2] = 0u;
  v53[3] = 0u;
  v53[4] = 0u;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_coverage] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_staticSegmentID] = -1;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotsInCurrentSegment] = v27;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCircularBuffer] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudUpdateInterval] = 0x3FA10CB295E9E1B1;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_temporalDepthPointCloudCacheInterval] = 0x4008000000000000;
  v54 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformBoundingBox];
  *(_OWORD *)v54 = 0u;
  *((_OWORD *)v54 + 1) = 0u;
  *((_OWORD *)v54 + 2) = 0u;
  *((_OWORD *)v54 + 3) = 0u;
  v54[64] = 1;
  *(_OWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_scaleForFreeformReconstruction] = xmmword_239354C80;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldCreateFreeformMeshBuffersFromHeap] = 1;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshHeapVertexCapacity] = 400000;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformScanExtent] = 0;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementInitialVoxelSize] = 1000593162;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeIncrement] = 1000593162;
  *(_DWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformMeshRefinementVoxelSizeScanExtentThreshold] = 1014350479;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_freeformCanAutoCaptureStart] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurface] = 0;
  v55 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceObjectOrigin];
  *v55 = 0;
  v55[1] = 0;
  v56 = (uint64_t)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceConfig];
  sub_239334200((uint64_t)v105);
  sub_239268764((uint64_t)v105, v56, &qword_25692A908);
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_proxySurfaceDebugVoxelCloud] = 0;
  v57 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pointCloud];
  v57[4] = 0u;
  v57[5] = 0u;
  v57[2] = 0u;
  v57[3] = 0u;
  *v57 = 0u;
  v57[1] = 0u;
  v58 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_intrinsicsFromLastFrame];
  *((_OWORD *)v58 + 1) = 0u;
  *((_OWORD *)v58 + 2) = 0u;
  *(_OWORD *)v58 = 0u;
  v58[48] = 1;
  v59 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageHeightFromLastFrame];
  *(_QWORD *)v59 = 0;
  v59[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldRestartVoxelIntegration] = 0;
  v60 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelHashingRestartTime];
  *(_QWORD *)v60 = 0;
  v60[8] = 1;
  v61 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_worldToObjectTransformFromMobileSfM];
  *((_OWORD *)v61 + 2) = 0u;
  *((_OWORD *)v61 + 3) = 0u;
  *(_OWORD *)v61 = 0u;
  *((_OWORD *)v61 + 1) = 0u;
  v61[64] = 1;
  v62 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_initialWorldToMobileSfMTransform];
  *(_OWORD *)v62 = 0u;
  *((_OWORD *)v62 + 1) = 0u;
  *((_OWORD *)v62 + 2) = 0u;
  *((_OWORD *)v62 + 3) = 0u;
  v62[64] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForPoseCorrectionUsingMobileSfM] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pauseTimeForPoseCorrection] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shouldWaitForNewPlane] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_voxelIntegrationManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_maskingManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_explicitFeedbackManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageScaler] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_motionManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_internalMotionManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_pgManager] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_isPgManagerTornDown] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_meshManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_cameraControl] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_captureManager] = 0;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_traceDebugId] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled] = 0;
  v63 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown];
  *(_QWORD *)v63 = 0;
  v63[8] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData] = 0;
  v64 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugOCBundleWriteDisabled;
  v22[v64] = *sub_239263E34();
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled] = 1;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride] = 0;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled] = 1;
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMPointCloudBuffer] = 0;
  v65 = &v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__scaleWorldToObjectTransform];
  v66 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 16);
  v67 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 32);
  v68 = *(_OWORD *)(MEMORY[0x24BDAEE00] + 48);
  *v65 = *MEMORY[0x24BDAEE00];
  v65[1] = v66;
  v65[2] = v67;
  v65[3] = v68;
  v69 = v98;
  v98(&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL], 1, 1, v36);
  v69(&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__recordVideoURL], 1, 1, v36);
  *(_QWORD *)&v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__skippedFramesTimeStamps] = MEMORY[0x24BEE4B08];
  v70 = OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration;
  v22[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_configuration] = v99;
  v71 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v71, v102);
  v72 = v22;
  v73 = sub_239352098();
  v74 = sub_239352578();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    aBlock[0] = v76;
    *(_DWORD *)v75 = 136380931;
    v106 = sub_23925F3EC(0xD000000000000042, 0x8000000239360AC0, aBlock);
    sub_2393526B0();
    *(_WORD *)(v75 + 12) = 2082;
    LOBYTE(v106) = v22[v70];
    v77 = sub_23935232C();
    v106 = sub_23925F3EC(v77, v78, aBlock);
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v73, v74, "ObjectCaptureSession.%{private}s: Initialize with configuration: %{public}s.", (uint8_t *)v75, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v76, -1, -1);
    MEMORY[0x23B83BC04](v75, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
  v79 = v93;
  v80 = v92;
  v81 = v91;
  v82 = v90;
  v83 = v89;
  if (v89)
    v84 = v89;
  else
    v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB1558]), sel_init);
  *(_QWORD *)&v72[OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession] = v84;
  swift_beginAccess();
  v106 = 10;
  v85 = v83;
  sub_2393520F8();
  swift_endAccess();

  v86 = (objc_class *)type metadata accessor for ObjectCaptureSession(0);
  v103.receiver = v72;
  v103.super_class = v86;
  v87 = objc_msgSendSuper2(&v103, sel_init);
  sub_239331734(v82, v81, v79);

  if (v80)
  sub_23925FE28(v79, &qword_256927AD0);
  return v87;
}

uint64_t type metadata accessor for ObjectCaptureSession(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692F268);
}

void sub_2393351A8(id a1)
{
  if (a1 != (id)18)
    sub_239331658(a1);
}

uint64_t sub_2393351B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2392F6CC0(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_2393351E0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_2392F74D0(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD **)(v1 + 32), a1);
}

uint64_t sub_239335210@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_2392F8618(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_239335238@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_2392F90A0(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1, *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_239335264()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_239335288()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;

  v1 = *(_BYTE **)(v0 + 24);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 16)) + 0x420))(&v2);
  if (v2 == (id)14)
  {
    sub_239331658((id)0xE);
    sub_239331658((id)0xE);
    *v1 = 1;
  }
  else
  {
    sub_239331658(v2);
    sub_239331658((id)0xE);
  }
}

uint64_t sub_239335300()
{
  return swift_deallocObject();
}

uint64_t sub_239335310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_boundingBoxAnchor);
  if (v6)
  {
    v7 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession);
    v8 = v6;
    objc_msgSend(v7, sel_removeAnchor_, v8);
    v9 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v9, v1);
    v10 = sub_239352098();
    v11 = sub_239352578();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v13;
      *(_DWORD *)v12 = 136380675;
      v14 = sub_23925F3EC(0xD000000000000011, 0x800000023935F190, &v15);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v10, v11, "ObjectCaptureSession.%{private}s: Existing bounding box anchor removed.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v13, -1, -1);
      MEMORY[0x23B83BC04](v12, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

void sub_2393354F4(uint64_t a1, float32x4_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  float v8;
  int64_t v9;
  float v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  ARPlaneAnchor *v16;
  simd_float4x4 *v17;
  float v18;
  float v19;
  ARPlaneExtent *v20;
  float v21;
  float v22;
  double v23;
  float v24;
  float v25;
  ARPlaneExtent *v26;
  float v27;
  float v28;
  double v29;
  float v30;
  double v31;
  float32x4_t v32;
  float v33;
  ARPlaneAnchor *v34;
  float32x4_t v35;
  float32x4_t v36;
  float32x4_t v38;
  simd_float4x4 v39;
  simd_float4x4 v40;

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v35 = (float32x4_t)vdupq_laneq_s32((int32x4_t)a2, 2);
  v36 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)a2.f32, 1);
  v8 = a2.f32[1] + -0.02;
  swift_bridgeObjectRetain();
  v34 = 0;
  v9 = 0;
  v10 = 3.4028e38;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v13 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v13 < v7)
    {
      v14 = *(_QWORD *)(v3 + 8 * v13);
      ++v9;
      if (v14)
        goto LABEL_22;
      v9 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * v9);
      if (v14)
        goto LABEL_22;
      v9 = v13 + 2;
      if (v13 + 2 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * v9);
      if (v14)
        goto LABEL_22;
      v9 = v13 + 3;
      if (v13 + 3 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * v9);
      if (v14)
      {
LABEL_22:
        v6 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v9 << 6); ; i = v11 | (v9 << 6))
        {
          v16 = (ARPlaneAnchor *)*(id *)(*(_QWORD *)(a1 + 56) + 8 * i);
          getRotatedPlaneTransform(_:)(v17, v16);
          v40 = __invert_f4(v39);
          v38 = vaddq_f32((float32x4_t)v40.columns[3], vmlaq_f32(vmlaq_f32(vmulq_n_f32((float32x4_t)v40.columns[0], a2.f32[0]), v36, (float32x4_t)v40.columns[1]), v35, (float32x4_t)v40.columns[2]));
          -[ARPlaneAnchor center](v16, sel_center);
          v19 = vabds_f32(v18, v38.f32[0]);
          v20 = -[ARPlaneAnchor planeExtent](v16, sel_planeExtent);
          -[ARPlaneExtent width](v20, sel_width);
          v22 = v21;

          if ((float)(v22 * 0.5) < v19)
            goto LABEL_5;
          *(float *)&v23 = v22 * 0.5;
          -[ARPlaneAnchor center](v16, sel_center, v23);
          v25 = vabds_f32(v24, v38.f32[2]);
          v26 = -[ARPlaneAnchor planeExtent](v16, sel_planeExtent);
          -[ARPlaneExtent height](v26, sel_height);
          v28 = v27;

          if ((float)(v28 * 0.5) < v25
            || (*(float *)&v29 = v28 * 0.5,
                -[ARPlaneAnchor transform](v16, sel_transform, v29),
                *(float *)&v31 = v30,
                v30 > v8)
            || (-[ARPlaneAnchor transform](v16, sel_transform, v31), LODWORD(v33) = vsubq_f32(a2, v32).i32[1],
                                                                     v33 >= v10))
          {
LABEL_5:

            if (!v6)
              goto LABEL_7;
          }
          else
          {

            v10 = v33;
            v34 = v16;
            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v11 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v15 = v13 + 4;
      if (v15 < v7)
      {
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (v14)
        {
          v9 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          v9 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_31;
          if (v9 >= v7)
            break;
          v14 = *(_QWORD *)(v3 + 8 * v9);
          ++v15;
          if (v14)
            goto LABEL_22;
        }
      }
    }
LABEL_29:
    swift_release();
    return;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_2393357D4(uint64_t a1, unint64_t a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a1;
  v32 = a2;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_239351FD8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v13 = (void *)sub_2393522CC();
  objc_msgSend(v12, sel_setDateFormat_, v13);

  sub_239351FCC();
  v14 = (void *)sub_239351F90();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15 = objc_msgSend(v12, sel_stringFromDate_, v14);

  v16 = sub_2393522F0();
  v18 = v17;

  v19 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19, v4);
  swift_bridgeObjectRetain();
  v20 = sub_239352098();
  v21 = sub_239352578();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v29 = a3;
    v23 = v22;
    v24 = swift_slowAlloc();
    v30 = v5;
    v25 = v16;
    v26 = v24;
    v34 = v24;
    *(_DWORD *)v23 = 136380931;
    v27 = sub_23925F3EC(v31, v32, &v34);
    v32 = v4;
    v33 = v27;
    sub_2393526B0();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    v33 = sub_23925F3EC(v25, v18, &v34);
    sub_2393526B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23925B000, v20, v21, v29, (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v26, -1, -1);
    MEMORY[0x23B83BC04](v23, -1, -1);

    return (*(uint64_t (**)(char *, unint64_t))(v30 + 8))(v7, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_239335AC8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_2392FAC24(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_239335AF4()
{
  return sub_239335B94((uint64_t (*)(unint64_t, _QWORD))sub_2392FB248);
}

uint64_t sub_239335B00()
{
  return swift_deallocObject();
}

uint64_t sub_239335B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_239351FD8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_239335B88()
{
  return sub_239335B94((uint64_t (*)(unint64_t, _QWORD))sub_2392FB910);
}

uint64_t sub_239335B94(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(sub_239351FD8() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_239335BE4()
{
  uint64_t v0;

  return sub_2392FC540(*(char **)(v0 + 16));
}

uint64_t sub_239335BEC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_239335C10()
{
  uint64_t v0;

  sub_2392FCCE8(*(_QWORD **)(v0 + 80), *(float32x4_t *)(v0 + 16), *(float32x4_t *)(v0 + 32), *(float32x4_t *)(v0 + 48), *(int8x16_t *)(v0 + 64));
}

double sub_239335C20(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 224) = 256;
  return result;
}

uint64_t sub_239335C4C(uint64_t result)
{
  *(_BYTE *)(result + 225) = 0;
  return result;
}

uint64_t sub_239335C54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_2393152F4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_239335C7C(char *a1@<X8>)
{
  uint64_t v1;

  sub_239315640(*(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_239335CA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  _QWORD *v7;
  double v8;
  _QWORD *v9;
  _QWORD *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD **)(v0 + 24);
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_arSession), sel_configuration));
  if (v3)
  {
    v16 = v3;
    objc_opt_self();
    v4 = swift_dynamicCastObjCClass();
    if (v4)
    {
      if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8) & 1) == 0)
      {
        v5 = (void *)v4;
        v6 = *(double *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp);
        v7 = (_QWORD *)MEMORY[0x24BEE4EA0];
        v8 = v6 + (*(double (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x78))();
        type metadata accessor for ObjectCaptureFrameEvent();
        v9 = (*(_QWORD *(**)(char *__return_ptr))((*v7 & *v1) + 0x90))((char *)&v18 + 1);
        v10 = (*(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *))((*v7 & *v1) + 0xA8))(&v18, v9);
        v17 = v18;
        v11 = (*(double (**)(_QWORD *))((*v7 & *v1) + 0xC0))(v10);
        v13 = v12;
        v14 = (*(uint64_t (**)(void))((*v7 & *v1) + 0xD8))();
        v15 = ObjectCaptureFrameEvent.__allocating_init(timestamp:gesture:scanStatus:position:boxTransform:)((_BYTE *)&v18 + 1, &v17, v14, v8, v11, v13);
        objc_msgSend(objc_msgSend(v5, sel_recordingTechnique), sel_recordCustomData_forTimestamp_, v15, v8);
        swift_unknownObjectRelease();

      }
    }

  }
}

uint64_t sub_239335E58()
{
  return swift_deallocObject();
}

uint64_t sub_239335E68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) < 4)
    return dword_239356730[a1 - 1];
  v7 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  v8 = sub_239352098();
  v9 = sub_23935256C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v10 = 136380931;
    v14 = sub_23925F3EC(0xD000000000000036, 0x80000002393608F0, &v15);
    sub_2393526B0();
    *(_WORD *)(v10 + 12) = 2082;
    v14 = a1;
    type metadata accessor for UIDeviceOrientation(0);
    v12 = sub_23935232C();
    v14 = sub_23925F3EC(v12, v13, &v15);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v8, v9, "ObjectCaptureSession.%{private}s: Unsupported device orientation detected: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v11, -1, -1);
    MEMORY[0x23B83BC04](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 1;
}

uint64_t sub_239336070(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_239352020() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2393363A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];
  _BYTE v23[80];
  _BYTE v24[96];

  v7 = sub_239352170();
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2393521C4();
  v10 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_239268764(a1, (uint64_t)v23, &qword_25692B7A0);
  sub_239268764(a2, (uint64_t)v24, &qword_25692B7A8);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v3;
  v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v13 + 48) = v14;
  *(_BYTE *)(v13 + 64) = *(_BYTE *)(a3 + 32);
  sub_239268764((uint64_t)v23, v13 + 80, &qword_25692B7A0);
  sub_239268764((uint64_t)v24, v13 + 160, &qword_25692B7A8);
  aBlock[4] = sub_2393424F4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_239262EDC;
  aBlock[3] = &unk_250AC8778;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_239342508((uint64_t)v24);
  sub_239352188();
  v21 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  return swift_release();
}

void sub_239336640()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  char *v4;
  char isUniquelyReferenced_nonNull_native;
  char *v6;
  uint64_t v7;
  id v8[3];

  v1 = *(_QWORD **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0x420))(v8);
  if (v8[0] == (id)15)
  {
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      v4 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_shotFlippableMap;
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v7 = *(_QWORD *)v4;
      *(_QWORD *)v4 = 0x8000000000000000;
      sub_23932E7B4(v3, v2, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)v4 = v7;
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (*(_QWORD *)(*(_QWORD *)v4 + 16) >= 0xAuLL)
      {
        v6 = (char *)v1 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_objectFlippable;
        swift_beginAccess();
        *v6 = v3;
        sub_2392F5508();
      }
    }
  }
  else
  {
    sub_239331658(v8[0]);
    sub_239331658((id)0xF);
  }
}

uint64_t sub_23933676C()
{
  return sub_2393367F4((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_239336778()
{
  uint64_t v0;

  return sub_23931D4A4(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_239336780()
{
  return sub_2393367F4((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23933678C()
{
  uint64_t v0;

  return sub_23931F874(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_239336794()
{
  return sub_2393367F4((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2393367A0()
{
  uint64_t v0;

  return sub_23932018C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2393367A8()
{
  uint64_t v0;

  return sub_23932059C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_2393367B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2393367D8()
{
  uint64_t v0;

  return sub_239320CD0(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(unsigned __int8 *)(v0 + 33));
}

uint64_t sub_2393367E8()
{
  return sub_2393367F4((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2393367F4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_23933682C()
{
  uint64_t v0;

  sub_239321418(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_239336834(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  double v64;
  __CVBuffer *v65;
  id v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  id v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  id v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  id v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  id v96;
  int *v97;
  simd_float4x4 *v98;
  int8x16_t v99;
  int8x16_t v100;
  int8x16_t v101;
  int8x16_t v102;
  id v103;
  id v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  char *v108;
  int8x16_t v109;
  int8x16_t v110;
  int8x16_t v111;
  char *v112;
  id v113;
  id v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  id v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int8x16_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int8x16_t v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  char *v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _OWORD v159[3];

  v2 = v1;
  v4 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v7 = MEMORY[0x24BDAC7A8](v148);
  v149 = (uint64_t)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_OWORD *)((char *)&v127 - v9);
  v11 = sub_2393520B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)&v144 = (char *)&v127 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v127 - v19;
  result = (id)MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v127 - v22;
  v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(_QWORD *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_frameIndex) = v26;
  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * v26 + 0x888888888888888, 1) <= 0x888888888888888uLL)
  {
    *(_QWORD *)&v142 = v10;
    v27 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v23, v27, v11);
    v28 = sub_239352098();
    v29 = v11;
    v30 = sub_239352578();
    if (os_log_type_enabled(v28, v30))
    {
      *(_QWORD *)&v143 = v12;
      v31 = swift_slowAlloc();
      v145 = v2;
      v32 = (uint8_t *)v31;
      v33 = swift_slowAlloc();
      v146 = v6;
      v34 = v33;
      v150 = v33;
      *(_QWORD *)&v147 = v15;
      *(_DWORD *)v32 = 136380675;
      *(_QWORD *)&v159[0] = sub_23925F3EC(0xD000000000000015, 0x800000023935E870, &v150);
      v12 = v143;
      v15 = (char *)v147;
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v28, v30, "ObjectCaptureSession.%{private}s: has been called.", v32, 0xCu);
      swift_arrayDestroy();
      v35 = v34;
      v6 = v146;
      MEMORY[0x23B83BC04](v35, -1, -1);
      v36 = v32;
      v2 = v145;
      MEMORY[0x23B83BC04](v36, -1, -1);
    }

    result = (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v23, v29);
    v11 = v29;
    v10 = (_OWORD *)v142;
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) & 1) == 0)
  {
    v37 = objc_msgSend(a1, sel_smoothedSceneDepth);
    v146 = v6;
    *(_QWORD *)&v147 = v15;
    if (v37
      && (v38 = v37, v39 = objc_msgSend(v37, sel_depthMap), v38, v39))
    {

    }
    else
    {
      v40 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v20, v40, v11);
      v41 = sub_239352098();
      v42 = sub_23935256C();
      if (os_log_type_enabled(v41, v42))
      {
        *(_QWORD *)&v142 = v10;
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        v150 = v44;
        *(_QWORD *)&v143 = v12;
        *(_DWORD *)v43 = 136380675;
        *(_QWORD *)&v159[0] = sub_23925F3EC(0xD000000000000015, 0x800000023935E870, &v150);
        v10 = (_OWORD *)v142;
        v12 = v143;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v41, v42, "ObjectCaptureSession.%{private}s: No depth map is available in ARFrame!", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v44, -1, -1);
        MEMORY[0x23B83BC04](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
      v15 = (char *)v147;
    }
    v45 = objc_msgSend(a1, sel_depthConfidenceData);

    if (!v45)
    {
      v46 = sub_239275A60();
      v47 = v144;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 16))(v144, v46, v11);
      v48 = sub_239352098();
      v49 = sub_23935256C();
      if (os_log_type_enabled(v48, v49))
      {
        *(_QWORD *)&v143 = v12;
        v50 = (uint8_t *)swift_slowAlloc();
        v51 = swift_slowAlloc();
        v150 = v51;
        *(_DWORD *)v50 = 136380675;
        *(_QWORD *)&v159[0] = sub_23925F3EC(0xD000000000000015, 0x800000023935E870, &v150);
        v12 = v143;
        v15 = (char *)v147;
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v48, v49, "ObjectCaptureSession.%{private}s: No confidence map is available in ARFrame!", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v51, -1, -1);
        MEMORY[0x23B83BC04](v50, -1, -1);

        (*(void (**)(_QWORD, uint64_t))(v12 + 8))(v144, v11);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v47, v11);
      }
    }
    v52 = objc_msgSend(a1, sel_capturedPointCloudData);
    if (v52
      && (v53 = v52,
          v54 = objc_msgSend(v52, sel_depthPointCloud),
          v53,
          v54))
    {

    }
    else
    {
      v55 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v55, v11);
      v56 = sub_239352098();
      v57 = sub_23935256C();
      if (os_log_type_enabled(v56, v57))
      {
        *(_QWORD *)&v143 = v12;
        v58 = (uint8_t *)swift_slowAlloc();
        v59 = swift_slowAlloc();
        v150 = v59;
        *(_DWORD *)v58 = 136380675;
        *(_QWORD *)&v159[0] = sub_23925F3EC(0xD000000000000015, 0x800000023935E870, &v150);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v56, v57, "ObjectCaptureSession.%{private}s: No point cloud data is available in ARFrame!", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v59, -1, -1);
        MEMORY[0x23B83BC04](v58, -1, -1);

        (*(void (**)(_QWORD, uint64_t))(v143 + 8))(v147, v11);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      }
    }
    v60 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_referenceTimestamp + 8) == 1)
    {
      objc_msgSend(a1, sel_timestamp);
      *(_QWORD *)v60 = v61;
      *(_BYTE *)(v60 + 8) = 0;
    }
    result = objc_msgSend(a1, sel_timestamp);
    if ((*(_BYTE *)(v60 + 8) & 1) == 0)
    {
      v63 = v62;
      v64 = *(double *)v60;
      v65 = (__CVBuffer *)objc_msgSend(a1, sel_capturedImage);
      v66 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v66, sel_intrinsics);
      v159[0] = v67;
      v159[1] = v68;
      v159[2] = v69;

      sub_2392F2D50(v65, (uint64_t)v159);
      v70 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v70, sel_intrinsics);
      v147 = v71;
      v144 = v72;
      v143 = v73;

      v74 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_intrinsicsFromLastFrame;
      v75 = v144;
      *(_OWORD *)v74 = v147;
      *(_OWORD *)(v74 + 16) = v75;
      *(_OWORD *)(v74 + 32) = v143;
      *(_BYTE *)(v74 + 48) = 0;
      v76 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v76, sel_imageResolution);
      v78 = v77;

      v79 = v2 + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession_imageHeightFromLastFrame;
      *(_QWORD *)v79 = v78;
      *(_BYTE *)(v79 + 8) = 0;
      v80 = objc_msgSend(a1, sel_capturedPointCloudData);
      v145 = v2;
      if (v80
        && (v81 = v80,
            v82 = objc_msgSend(v80, sel_depthPointCloud),
            v81,
            v82))
      {
        v83 = sub_23929D47C();
        sub_2392E0E14(v82, v83 & 1, (uint64_t)&v150);

        v84 = v151;
        v128 = v150;
        v130 = v152;
        v85 = v154;
        v129 = v153;
        v134 = v155;
        v133 = v156;
        v132 = v157;
        v131 = v158;
      }
      else
      {
        v128 = 0;
        v84 = 0;
        v130 = 0;
        v129 = 0;
        v85 = 0;
        v134 = 0;
        v133 = 0;
        v132 = 0;
        v131 = 0;
      }
      v86 = v63 - v64;
      v87 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v87, sel_intrinsics);
      v147 = v88;
      v144 = v89;
      v143 = v90;

      v91 = objc_msgSend(a1, sel_camera);
      objc_msgSend(v91, sel_transform);
      v142 = v92;
      v141 = v93;
      v140 = v94;
      v139 = v95;

      v96 = objc_msgSend(a1, sel_camera);
      v97 = (int *)v148;
      sub_23935268C();

      wideToDepthCameraTransform()(v98);
      v135 = v99;
      v136 = v100;
      v137 = v101;
      v138 = v102;
      v103 = objc_msgSend(a1, sel_camera);
      v104 = objc_msgSend(v103, sel_calibrationData);

      v105 = v144;
      *v10 = v147;
      v10[1] = v105;
      v106 = v142;
      v10[2] = v143;
      v10[3] = v106;
      v107 = v140;
      v10[4] = v141;
      v10[5] = v107;
      v10[6] = v139;
      v108 = (char *)v10 + v97[7];
      v109 = v135;
      *(_QWORD *)v108 = v135.i64[0];
      v110 = v136;
      *(int8x16_t *)(v108 + 8) = vextq_s8(v109, v136, 8uLL);
      v111 = v137;
      *(int8x16_t *)(v108 + 24) = vextq_s8(v110, v137, 8uLL);
      v110.i64[1] = v138.i64[1];
      *(int8x16_t *)(v108 + 40) = vextq_s8(v111, v138, 8uLL);
      *((_QWORD *)v108 + 7) = v110.i64[1];
      v108[64] = 0;
      *(_QWORD *)((char *)v10 + v97[8]) = v104;
      v112 = (char *)v10 + v97[9];
      *((_OWORD *)v112 + 2) = 0u;
      *((_OWORD *)v112 + 3) = 0u;
      *(_OWORD *)v112 = 0u;
      *((_OWORD *)v112 + 1) = 0u;
      v112[64] = 1;
      v113 = objc_msgSend(a1, sel_capturedImage);
      v114 = objc_msgSend(a1, sel_smoothedSceneDepth);
      if (v114)
      {
        v115 = v114;
        v116 = objc_msgSend(v114, sel_depthMap);

      }
      else
      {
        v116 = 0;
      }
      v117 = v128;
      v118 = v130;
      v119 = v129;
      v120 = objc_msgSend(a1, sel_depthConfidenceData);
      v150 = v117;
      v151 = v84;
      v152 = v118;
      v153 = v119;
      v154 = v85;
      v155 = v134;
      v156 = v133;
      v157 = v132;
      v158 = v131;
      v121 = objc_msgSend(a1, sel_capturedPointCloudData);
      v122 = objc_msgSend(v121, sel_depthPointCloud);

      v123 = v149;
      sub_239268820((uint64_t)v10, v149, type metadata accessor for ObjectCaptureSession.Frame.Camera);
      v124 = objc_msgSend(a1, sel_rawFeaturePoints);
      v125 = sub_23929D47C();
      v126 = (uint64_t)v146;
      sub_239346994((uint64_t)v113, (uint64_t)v116, (uint64_t)v120, (uint64_t)&v150, (uint64_t)v122, v123, (uint64_t)v124, v125 & 1, (uint64_t)v146, v86);
      sub_2392FEBF8(v126);
      sub_2392688AC(v126, type metadata accessor for OCCaptureData);
      return (id)sub_2392688AC((uint64_t)v10, type metadata accessor for ObjectCaptureSession.Frame.Camera);
    }
LABEL_36:
    __break(1u);
  }
  return result;
}

void sub_2393375E8()
{
  uint64_t v0;

  sub_239321AC0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32));
}

void sub_2393375F8()
{
  uint64_t v0;

  sub_239322AC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_239337608()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_23933763C()
{
  uint64_t v0;

  sub_2393251F0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_239337648(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float32x4_t v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  float32x4_t v35;
  id v36;
  __int128 v37;
  uint64_t v38;

  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - v9;
  if (a1)
  {
    if (a2)
    {
      v36 = a1;
      v11 = a2;
      objc_msgSend(v36, sel_center);
      v35 = v12;
      objc_msgSend(v11, sel_center);
      v14 = vsubq_f32(v35, v13);
      v15 = vmulq_f32(v14, v14);
      if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1))).f32[0]) <= 0.001)
      {

      }
      else
      {
        v16 = sub_239275A60();
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v16, v4);
        v17 = v36;
        v18 = sub_239352098();
        v19 = sub_239352578();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          v36 = (id)swift_slowAlloc();
          v38 = (uint64_t)v36;
          *(_DWORD *)v20 = 136380931;
          *(_QWORD *)&v37 = sub_23925F3EC(0xD000000000000022, 0x80000002393606F0, &v38);
          sub_2393526B0();
          *(_WORD *)(v20 + 12) = 2080;
          objc_msgSend(v17, sel_center, v20 + 14);
          v37 = v21;
          sub_23925FB08((uint64_t *)&unk_2569281A0);
          sub_239263A08((unint64_t *)&qword_256927600, (uint64_t *)&unk_2569281A0, MEMORY[0x24BEE4120]);
          v22 = sub_2393528F0();
          *(_QWORD *)&v37 = sub_23925F3EC(v22, v23, &v38);
          sub_2393526B0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23925B000, v18, v19, "ObjectCaptureSession.%{private}s: Updated plane with center %s", (uint8_t *)v20, 0x16u);
          v24 = v36;
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v24, -1, -1);
          MEMORY[0x23B83BC04](v20, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
    }
    else
    {
      v25 = a1;
      v26 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v26, v4);
      v27 = v25;
      v28 = sub_239352098();
      v29 = sub_239352578();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v38 = v31;
        *(_DWORD *)v30 = 136380931;
        *(_QWORD *)&v37 = sub_23925F3EC(0xD000000000000022, 0x80000002393606F0, &v38);
        sub_2393526B0();
        *(_WORD *)(v30 + 12) = 2080;
        v36 = (id)(v30 + 14);
        objc_msgSend(v27, sel_center);
        v37 = v32;
        sub_23925FB08((uint64_t *)&unk_2569281A0);
        sub_239263A08((unint64_t *)&qword_256927600, (uint64_t *)&unk_2569281A0, MEMORY[0x24BEE4120]);
        v33 = sub_2393528F0();
        *(_QWORD *)&v37 = sub_23925F3EC(v33, v34, &v38);
        sub_2393526B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23925B000, v28, v29, "ObjectCaptureSession.%{private}s: Updated plane with center %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v31, -1, -1);
        MEMORY[0x23B83BC04](v30, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
}

uint64_t sub_239337B38(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_239352170();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393521C4();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_239352680();
  MEMORY[0x24BDAC7A8](v32);
  v8 = sub_2393520B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = a1;
  v14 = sub_239352098();
  v15 = sub_239352578();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)v16 = 136380931;
    v39 = sub_23925F3EC(0xD000000000000028, 0x8000000239360650, aBlock);
    v31 = v1;
    sub_2393526B0();
    *(_WORD *)(v16 + 12) = 2082;
    v29 = v8;
    sub_23935268C();
    v17 = sub_23935232C();
    v39 = sub_23925F3EC(v17, v18, aBlock);
    v2 = v31;
    sub_2393526B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v14, v15, "ObjectCaptureSession.%{private}s: ARCamera did change tracking state to %{public}s", (uint8_t *)v16, 0x16u);
    v19 = v30;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v19, -1, -1);
    MEMORY[0x23B83BC04](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v2;
  *(_QWORD *)(v20 + 24) = v13;
  aBlock[4] = (uint64_t)sub_239342494;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC86D8;
  v21 = _Block_copy(aBlock);
  v22 = v13;
  v23 = v2;
  v24 = v33;
  sub_239352188();
  v39 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  v25 = v36;
  v26 = v38;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v24, v25, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
  return swift_release();
}

uint64_t sub_239337F60(uint64_t a1, unint64_t a2, const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_2393520B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = sub_239352098();
  v12 = sub_239352578();
  if (os_log_type_enabled(v11, v12))
  {
    v19 = a3;
    v13 = swift_slowAlloc();
    v18 = a1;
    v14 = a2;
    v15 = (uint8_t *)v13;
    v16 = swift_slowAlloc();
    v21 = v16;
    *(_DWORD *)v15 = 136380675;
    v20 = sub_23925F3EC(v18, v14, &v21);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v11, v12, v19, v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v16, -1, -1);
    MEMORY[0x23B83BC04](v15, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s6CoreOC20ObjectCaptureSessionC34sessionShouldAttemptRelocalizationySbSo9ARSessionCF_0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  char *v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_239352170();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2393521C4();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393520B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = sub_239352098();
  v13 = sub_239352578();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v25 = v1;
    v16 = v15;
    aBlock[0] = v15;
    v26 = v3;
    *(_DWORD *)v14 = 136380675;
    v31 = sub_23925F3EC(0xD000000000000026, 0x80000002393605B0, aBlock);
    v3 = v26;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v12, v13, "ObjectCaptureSession.%{private}s: has been called.", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    v1 = v25;
    MEMORY[0x23B83BC04](v17, -1, -1);
    MEMORY[0x23B83BC04](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v1;
  aBlock[4] = (uint64_t)sub_239342460;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_239262EDC;
  aBlock[3] = (uint64_t)&unk_250AC8688;
  v19 = _Block_copy(aBlock);
  v20 = v1;
  v21 = v27;
  sub_239352188();
  v31 = MEMORY[0x24BEE4AF8];
  sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23925FB08((uint64_t *)&unk_2569281F0);
  sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
  v22 = v30;
  sub_239352734();
  MEMORY[0x23B83A4A0](0, v21, v22, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v22, v2);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
  swift_release();
  return 1;
}

void sub_239338468(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  void *v18;
  uint8_t *v19;
  id v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  char *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *aBlock[6];
  uint64_t v41;

  v2 = v1;
  v4 = sub_239352170();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2393521C4();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2393520B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v14 = sub_239352098();
  v15 = sub_239352578();
  if (os_log_type_enabled(v14, v15))
  {
    v35 = v4;
    v16 = swift_slowAlloc();
    v33 = a1;
    v17 = (uint8_t *)v16;
    v18 = (void *)swift_slowAlloc();
    aBlock[0] = v18;
    v34 = v2;
    *(_DWORD *)v17 = 136380675;
    v41 = sub_23925F3EC(0xD00000000000001CLL, 0x8000000239360590, (uint64_t *)aBlock);
    v2 = v34;
    v4 = v35;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v14, v15, "ObjectCaptureSession.%{private}s: has been called.", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v18, -1, -1);
    v19 = v17;
    a1 = v33;
    MEMORY[0x23B83BC04](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  aBlock[0] = a1;
  v20 = a1;
  sub_23925FB08(&qword_2569273F8);
  type metadata accessor for ARError(0);
  if (swift_dynamicCast())
  {
    v21 = (void *)v41;
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v21;
    v22[3] = v2;
    v22[4] = a1;
    aBlock[4] = sub_23934220C;
    aBlock[5] = v22;
    aBlock[0] = (void *)MEMORY[0x24BDAC760];
    aBlock[1] = (void *)1107296256;
    aBlock[2] = sub_239262EDC;
    aBlock[3] = &unk_250AC8638;
    v23 = _Block_copy(aBlock);
    v24 = a1;
    v25 = v21;
    v26 = v2;
    v27 = v25;
    v28 = v26;
    v29 = v36;
    sub_239352188();
    v41 = MEMORY[0x24BEE4AF8];
    sub_239262570((unint64_t *)&qword_25692A8E0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_23925FB08((uint64_t *)&unk_2569281F0);
    sub_239263A08((unint64_t *)&qword_25692A8F0, (uint64_t *)&unk_2569281F0, MEMORY[0x24BEE12C8]);
    v30 = v39;
    sub_239352734();
    MEMORY[0x23B83A4A0](0, v29, v30, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v30, v4);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v38);
    swift_release();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v31 = a1;
    sub_23935211C();
    swift_release();
    swift_release();
    v32 = aBlock[0];
    swift_getKeyPath();
    swift_getKeyPath();
    aBlock[0] = a1;
    v2;
    sub_239352128();
    aBlock[0] = v32;
    sub_2392F48FC(aBlock);
    sub_239331658(v32);
  }
}

uint64_t sub_2393388E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_2393520B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  v7 = sub_239352098();
  v8 = sub_239352578();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136380931;
    v14 = sub_23925F3EC(0xD000000000000015, 0x8000000239360570, &v15);
    sub_2393526B0();
    *(_WORD *)(v9 + 12) = 2082;
    v14 = a1;
    type metadata accessor for ARSessionState(0);
    v11 = sub_23935232C();
    v14 = sub_23925F3EC(v11, v12, &v15);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v7, v8, "ObjectCaptureSession.%{private}s: has been called. The session state did change to %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v10, -1, -1);
    MEMORY[0x23B83BC04](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t type metadata accessor for ObjectCaptureSession.BoundingBoxAnchor()
{
  return objc_opt_self();
}

uint64_t sub_239338AF0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_239338B14()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338B2C()
{
  return swift_deallocObject();
}

void sub_239338B3C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTapPosition);
}

void sub_239338B54()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338B6C()
{
  return swift_deallocObject();
}

void sub_239338B7C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugPlaneDetection);
}

void sub_239338B94()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338BAC()
{
  return swift_deallocObject();
}

void sub_239338BBC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugMaskingVoxel);
}

void sub_239338BD4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338BEC()
{
  return swift_deallocObject();
}

void sub_239338BFC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCameraControl);
}

void sub_239338C14()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338C2C()
{
  return swift_deallocObject();
}

void sub_239338C3C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugDebugVoxels);
}

void sub_239338C54()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338C6C()
{
  return swift_deallocObject();
}

void sub_239338C7C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugTsdfDepth);
}

void sub_239338C94()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338CAC()
{
  return swift_deallocObject();
}

void sub_239338CBC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugSurfaceGeometryData);
}

void sub_239338CD4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338CEC()
{
  return swift_deallocObject();
}

void sub_239338CFC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugCoverageGuideVoxels);
}

void sub_239338D14()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugExplicitFeedbackEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338D2C()
{
  return swift_deallocObject();
}

void sub_239338D3C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAutoCaptureEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338D54()
{
  return swift_deallocObject();
}

uint64_t sub_239338D64()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_239338D88()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugAdjustedCaptureCoolDown;
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 8) = v1;
}

uint64_t sub_239338DA8()
{
  return swift_deallocObject();
}

uint64_t sub_239338DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_239351F3C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_239338E2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_239351F3C() - 8) + 80);
  return sub_23932A80C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_239338E5C()
{
  return swift_deallocObject();
}

uint64_t sub_239338E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__replayVideoURL;
  swift_beginAccess();
  return sub_23926059C(v3, a1, &qword_256927AD0);
}

void sub_239338ED8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338EF0()
{
  return swift_deallocObject();
}

void sub_239338F00(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugWriteAllFramesData);
}

void sub_239338F18()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__bypassAllAlgos) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338F30()
{
  return swift_deallocObject();
}

void sub_239338F40()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__voxelIntegrationEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338F58()
{
  return swift_deallocObject();
}

void sub_239338F68()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__explicitFeedbackEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338F80()
{
  return swift_deallocObject();
}

void sub_239338F90()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__coverageEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338FA8()
{
  return swift_deallocObject();
}

void sub_239338FB8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__autoCaptureEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338FD0()
{
  return swift_deallocObject();
}

void sub_239338FE0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239338FF8()
{
  return swift_deallocObject();
}

void sub_239339008()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__mobileSfMiPhoneOverride) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239339020()
{
  return swift_deallocObject();
}

void sub_239339030()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__captureRateControlEnabled) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_239339048()
{
  return swift_deallocObject();
}

void sub_239339058(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC6CoreOC20ObjectCaptureSession__debugOCBundleWriteDisabled);
}

__n128 sub_239339070@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  _BYTE v17[32];
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = (int *)sub_23925FB08(&qword_25692B6E0);
  sub_239268968(v17, (double *)(a1 + v3[12]), v1);
  v4 = *(_QWORD *)v17;
  v16 = *(_OWORD *)&v17[8];
  v5 = *(_QWORD *)&v17[24];
  v6 = v18;
  v7 = sub_2392694B0((uint64_t)v17);
  v8 = v20;
  result = *(__n128 *)v17;
  v10 = *(_OWORD *)&v17[16];
  v11 = v18;
  v12 = v19;
  v13 = a1 + v3[16];
  v14 = a1 + v3[20];
  *(_QWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)v13 = v7;
  *(_BYTE *)(v13 + 8) = v15 & 1;
  *(__n128 *)v14 = result;
  *(_OWORD *)(v14 + 16) = v10;
  *(_OWORD *)(v14 + 32) = v11;
  *(_OWORD *)(v14 + 48) = v12;
  *(_QWORD *)(v14 + 64) = v8;
  return result;
}

unint64_t sub_239339138()
{
  unint64_t result;

  result = qword_25692AA40;
  if (!qword_25692AA40)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureSession.Frame.Feedback, &type metadata for ObjectCaptureSession.Frame.Feedback);
    atomic_store(result, (unint64_t *)&qword_25692AA40);
  }
  return result;
}

unint64_t sub_239339184()
{
  unint64_t result;

  result = qword_25692AA50;
  if (!qword_25692AA50)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureSession.Frame.Feedback, &type metadata for ObjectCaptureSession.Frame.Feedback);
    atomic_store(result, (unint64_t *)&qword_25692AA50);
  }
  return result;
}

unint64_t sub_2393391CC()
{
  unint64_t result;

  result = qword_25692AA58;
  if (!qword_25692AA58)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureSession.Frame.Feedback, &type metadata for ObjectCaptureSession.Frame.Feedback);
    atomic_store(result, (unint64_t *)&qword_25692AA58);
  }
  return result;
}

unint64_t sub_239339214()
{
  unint64_t result;

  result = qword_25692AA60;
  if (!qword_25692AA60)
  {
    result = MEMORY[0x23B83BB44](&protocol conformance descriptor for ObjectCaptureSession.Metadata.Shot.CaptureMode, &type metadata for ObjectCaptureSession.Metadata.Shot.CaptureMode);
    atomic_store(result, (unint64_t *)&qword_25692AA60);
  }
  return result;
}

uint64_t sub_239339258()
{
  return type metadata accessor for ObjectCaptureSession(0);
}

void sub_239339260()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_239342C30(319, &qword_25692AA90, (uint64_t)&type metadata for ObjectCaptureSession.State, MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
  {
    sub_239342C30(319, &qword_25692AA98, MEMORY[0x24BEE1328], MEMORY[0x24BDB9EF0]);
    if (v1 <= 0x3F)
    {
      sub_239352020();
      if (v2 <= 0x3F)
      {
        sub_23926B494(319, (unint64_t *)&unk_25692AAA0, (void (*)(uint64_t))type metadata accessor for ObjectCaptureSession.Frame);
        if (v3 <= 0x3F)
        {
          sub_23926B494(319, (unint64_t *)&qword_256928E18, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for ObjectCaptureSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureSession.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420))();
}

uint64_t dispatch thunk of ObjectCaptureSession.$state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x438))();
}

uint64_t dispatch thunk of ObjectCaptureSession.spi.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x450))();
}

uint64_t dispatch thunk of ObjectCaptureSession.estimatedReconstructionTime.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x468))();
}

uint64_t dispatch thunk of ObjectCaptureSession.objectFlippable.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x480))();
}

uint64_t dispatch thunk of ObjectCaptureSession.isOverCaptureEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x498))();
}

uint64_t dispatch thunk of ObjectCaptureSession.enableOverCapture()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B0))();
}

uint64_t dispatch thunk of ObjectCaptureSession.isFreeformModeEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B8))();
}

uint64_t dispatch thunk of ObjectCaptureSession.canTakeManualShot.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4D0))();
}

uint64_t dispatch thunk of ObjectCaptureSession.$canTakeManualShot.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4E8))();
}

uint64_t dispatch thunk of ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1280))();
}

uint64_t dispatch thunk of ObjectCaptureSession.__allocating_init(arSession:mtlDevice:motionManager:snapshotURL:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1288))();
}

uint64_t dispatch thunk of ObjectCaptureSession.run()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x510))();
}

uint64_t dispatch thunk of ObjectCaptureSession.pause()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x518))();
}

uint64_t dispatch thunk of ObjectCaptureSession.pause(fastResuming:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x520))();
}

uint64_t dispatch thunk of ObjectCaptureSession.resume()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x528))();
}

uint64_t dispatch thunk of ObjectCaptureSession.detectObject(at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x530))();
}

uint64_t dispatch thunk of ObjectCaptureSession.startCapturing(inside:)(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x538);
  v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v5;
  v8 = v2;
  return v3(v7) & 1;
}

uint64_t dispatch thunk of ObjectCaptureSession.startCapturing(inside:with:)(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x24BEE4EA0] & *v1) + 0x540);
  v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v5;
  v8 = v2;
  return v3(v7) & 1;
}

uint64_t dispatch thunk of ObjectCaptureSession.finish()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x548))();
}

uint64_t dispatch thunk of ObjectCaptureSession.cancel()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x550))();
}

uint64_t dispatch thunk of ObjectCaptureSession.takeManualShot()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x558))();
}

uint64_t dispatch thunk of ObjectCaptureSession.resetCapturePoseGraph()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x560))();
}

uint64_t dispatch thunk of ObjectCaptureSession.updateFreeformScanVolume(boundingBox:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x568))();
}

uint64_t dispatch thunk of ObjectCaptureSession.captureCoolDownTime.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x570))();
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_239339A20 + 4 * byte_23935678E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_239339A54 + 4 * byte_239356789[v4]))();
}

uint64_t sub_239339A54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_239339A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x239339A64);
  return result;
}

uint64_t sub_239339A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x239339A78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_239339A7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_239339A84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Configuration()
{
  return &type metadata for ObjectCaptureSession.Configuration;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.HardwareSpecs()
{
  return &type metadata for ObjectCaptureSession.HardwareSpecs;
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Error(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ObjectCaptureSession.Error(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for ObjectCaptureSession.Error(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

_QWORD *initializeWithTake for ObjectCaptureSession.Error(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for ObjectCaptureSession.Error(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Error(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 6;
  if (v4 >= 8)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

uint64_t sub_239339CA8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_239339CC0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Error()
{
  return &type metadata for ObjectCaptureSession.Error;
}

void destroy for ObjectCaptureSession.State(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 7 < 0 && (unint64_t)v1 >= 7)

}

_QWORD *_s6CoreOC20ObjectCaptureSessionC5StateOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 7 < 0 && (unint64_t)v3 >= 7)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for ObjectCaptureSession.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  int v6;
  void *v7;
  int v8;
  id v10;
  id v12;
  void *v13;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 - 7;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 - 7;
  if ((v6 & 0x80000000) == 0)
  {
    if ((v8 & 0x80000000) == 0)
    {
LABEL_15:
      *a1 = v7;
      return a1;
    }
LABEL_13:
    if ((unint64_t)v7 >= 7)
      v10 = v7;
    goto LABEL_15;
  }
  if ((v8 & 0x80000000) == 0)
  {
    if ((unint64_t)v3 >= 7)
    {

      v7 = *a2;
    }
    goto LABEL_15;
  }
  if ((unint64_t)v3 < 7)
    goto LABEL_13;
  if ((unint64_t)v7 >= 7)
  {
    v12 = v7;
    v13 = *a1;
    *a1 = v7;

  }
  else
  {

    *a1 = *a2;
  }
  return a1;
}

void **assignWithTake for ObjectCaptureSession.State(void **a1, unint64_t *a2)
{
  void *v3;
  int v4;
  unint64_t v5;
  unint64_t v7;

  v3 = *a1;
  v4 = -1;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    v4 = (int)v3;
  v5 = *a2;
  if (v4 - 7 >= 0)
    goto LABEL_4;
  LODWORD(v7) = -1;
  if (v5 < 0xFFFFFFFF)
    v7 = *a2;
  if ((int)v7 - 7 < 0)
  {
    if ((unint64_t)v3 >= 7)
    {
      if (v5 >= 7)
      {
        *a1 = (void *)v5;

        return a1;
      }
      goto LABEL_13;
    }
  }
  else if ((unint64_t)v3 >= 7)
  {
LABEL_13:

  }
LABEL_4:
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFED && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483630);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 7;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 10;
  if (v5 >= 0xC)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483630;
    if (a3 >= 0x7FFFFFEE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFEE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 17;
  }
  return result;
}

uint64_t sub_239339F64(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 7;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_239339F88(_QWORD *result, unsigned int a2)
{
  int v2;

  if (a2 > 0x7FFFFFF8)
  {
    v2 = -2147483641;
  }
  else
  {
    if (!a2)
      return result;
    v2 = 6;
  }
  *result = v2 + a2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.State()
{
  return &type metadata for ObjectCaptureSession.State;
}

uint64_t *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Frame(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(_OWORD *, uint64_t, uint64_t);
  id v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(_OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  void *v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  void *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  void *v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  id v106;
  id v107;
  uint64_t v109;
  char *__dst;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    v26 = (uint64_t *)(v25 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v5;
    v7 = (void *)a2[2];
    v6 = (void *)a2[3];
    a1[2] = (uint64_t)v7;
    a1[3] = (uint64_t)v6;
    v8 = a3[8];
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(_OWORD *)((char *)a2 + v8 + 16);
    *v9 = *(_OWORD *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = *(_OWORD *)((char *)a2 + v8 + 96);
    v13 = *(_OWORD *)((char *)a2 + v8 + 64);
    v9[5] = *(_OWORD *)((char *)a2 + v8 + 80);
    v9[6] = v12;
    v14 = *(_OWORD *)((char *)a2 + v8 + 48);
    v9[2] = *(_OWORD *)((char *)a2 + v8 + 32);
    v9[3] = v14;
    v9[4] = v13;
    v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    v16 = v15[6];
    __dst = (char *)v9 + v16;
    v17 = &v10[v16];
    v18 = sub_239352674();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v5;
    v22 = v7;
    v23 = v6;
    v109 = v19;
    if (v20(v17, 2, v18))
    {
      v24 = sub_239352680();
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 2, v18);
    }
    v27 = v15[7];
    v28 = (char *)v9 + v27;
    v29 = &v10[v27];
    v30 = *((_OWORD *)v29 + 3);
    *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    *((_OWORD *)v28 + 3) = v30;
    v28[64] = v29[64];
    v31 = *((_OWORD *)v29 + 1);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_OWORD *)v28 + 1) = v31;
    v32 = v15[8];
    v33 = *(void **)&v10[v32];
    *(_QWORD *)((char *)v9 + v32) = v33;
    v34 = v15[9];
    v35 = (char *)v9 + v34;
    v36 = &v10[v34];
    v37 = *((_OWORD *)v36 + 3);
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    *((_OWORD *)v35 + 3) = v37;
    v35[64] = v36[64];
    v38 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v38;
    v26 = a1;
    v39 = a3[9];
    v40 = (_OWORD *)((char *)a1 + v39);
    v41 = (_OWORD *)((char *)a2 + v39);
    v42 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
    v43 = *(_QWORD *)(v42 - 8);
    v44 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v43 + 48);
    v45 = v33;
    if (v44(v41, 1, v42))
    {
      v46 = sub_23925FB08(&qword_25692A8A8);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = v41[1];
      *v40 = *v41;
      v40[1] = v47;
      v48 = v41[3];
      v40[2] = v41[2];
      v40[3] = v48;
      v49 = v41[5];
      v40[4] = v41[4];
      v40[5] = v49;
      v50 = v41[7];
      v40[6] = v41[6];
      v40[7] = v50;
      v51 = *(int *)(v42 + 24);
      v52 = (char *)v40 + v51;
      v53 = (char *)v41 + v51;
      if (v20((char *)v41 + v51, 2, v18))
      {
        v54 = sub_239352680();
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v52, v53, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v52, 0, 2, v18);
      }
      *(_QWORD *)((char *)v40 + *(int *)(v42 + 28)) = *(_QWORD *)((char *)v41 + *(int *)(v42 + 28));
      v55 = *(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56);
      swift_bridgeObjectRetain();
      v55(v40, 0, 1, v42);
      v26 = a1;
    }
    v56 = a3[11];
    *(_DWORD *)((char *)v26 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)v26 + v56) = *(uint64_t *)((char *)a2 + v56);
    v57 = a3[12];
    v58 = (char *)v26 + v57;
    v59 = (char *)a2 + v57;
    if (*(_QWORD *)v59)
    {
      v60 = *((_QWORD *)v59 + 1);
      v61 = *((_QWORD *)v59 + 2);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      *((_QWORD *)v58 + 2) = v61;
      v62 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v62;
      v63 = *((_OWORD *)v59 + 5);
      *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
      *((_OWORD *)v58 + 5) = v63;
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      v64 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v64;
      v65 = *((_OWORD *)v59 + 5);
      *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
      *((_OWORD *)v58 + 5) = v65;
      v66 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v66;
    }
    v67 = a3[13];
    v68 = (char *)v26 + v67;
    v69 = (char *)a2 + v67;
    v70 = *(uint64_t *)((char *)a2 + v67 + 680);
    if (v70)
    {
      if (*(_QWORD *)v69)
      {
        v71 = *((_QWORD *)v69 + 1);
        v72 = *((_QWORD *)v69 + 2);
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *((_QWORD *)v68 + 1) = v71;
        v73 = v70;
        v74 = *((_QWORD *)v69 + 3);
        v75 = *((_QWORD *)v69 + 4);
        *((_QWORD *)v68 + 2) = v72;
        *((_QWORD *)v68 + 3) = v74;
        v76 = *((_QWORD *)v69 + 5);
        v77 = *((_QWORD *)v69 + 6);
        *((_QWORD *)v68 + 4) = v75;
        *((_QWORD *)v68 + 5) = v76;
        v79 = *((_QWORD *)v69 + 7);
        v78 = *((_QWORD *)v69 + 8);
        *((_QWORD *)v68 + 6) = v77;
        *((_QWORD *)v68 + 7) = v79;
        *((_QWORD *)v68 + 8) = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v70 = v73;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v80 = *((_OWORD *)v69 + 3);
        *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
        *((_OWORD *)v68 + 3) = v80;
        *((_QWORD *)v68 + 8) = *((_QWORD *)v69 + 8);
        v81 = *((_OWORD *)v69 + 1);
        *(_OWORD *)v68 = *(_OWORD *)v69;
        *((_OWORD *)v68 + 1) = v81;
      }
      *((_QWORD *)v68 + 10) = *((_QWORD *)v69 + 10);
      v82 = *((_OWORD *)v69 + 7);
      *((_OWORD *)v68 + 6) = *((_OWORD *)v69 + 6);
      *((_OWORD *)v68 + 7) = v82;
      v83 = *((_OWORD *)v69 + 9);
      *((_OWORD *)v68 + 8) = *((_OWORD *)v69 + 8);
      *((_OWORD *)v68 + 9) = v83;
      *((_QWORD *)v68 + 20) = *((_QWORD *)v69 + 20);
      v84 = *((_OWORD *)v69 + 14);
      *((_OWORD *)v68 + 13) = *((_OWORD *)v69 + 13);
      *((_OWORD *)v68 + 14) = v84;
      v85 = *((_OWORD *)v69 + 12);
      *((_OWORD *)v68 + 11) = *((_OWORD *)v69 + 11);
      *((_OWORD *)v68 + 12) = v85;
      v86 = (void *)*((_QWORD *)v69 + 30);
      *((_QWORD *)v68 + 30) = v86;
      *((_QWORD *)v68 + 32) = *((_QWORD *)v69 + 32);
      v87 = *((_OWORD *)v69 + 20);
      *((_OWORD *)v68 + 19) = *((_OWORD *)v69 + 19);
      *((_OWORD *)v68 + 20) = v87;
      v88 = *((_OWORD *)v69 + 18);
      *((_OWORD *)v68 + 17) = *((_OWORD *)v69 + 17);
      *((_OWORD *)v68 + 18) = v88;
      v89 = *((_QWORD *)v69 + 42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v90 = v86;
      swift_bridgeObjectRetain();
      if (v89)
      {
        v91 = *((_QWORD *)v69 + 43);
        *((_QWORD *)v68 + 42) = v89;
        *((_QWORD *)v68 + 43) = v91;
        v92 = *((_OWORD *)v69 + 23);
        *((_OWORD *)v68 + 22) = *((_OWORD *)v69 + 22);
        *((_OWORD *)v68 + 23) = v92;
        v93 = *((_OWORD *)v69 + 25);
        *((_OWORD *)v68 + 24) = *((_OWORD *)v69 + 24);
        *((_OWORD *)v68 + 25) = v93;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v94 = *((_OWORD *)v69 + 24);
        *((_OWORD *)v68 + 23) = *((_OWORD *)v69 + 23);
        *((_OWORD *)v68 + 24) = v94;
        *((_OWORD *)v68 + 25) = *((_OWORD *)v69 + 25);
        v95 = *((_OWORD *)v69 + 22);
        *((_OWORD *)v68 + 21) = *((_OWORD *)v69 + 21);
        *((_OWORD *)v68 + 22) = v95;
      }
      v26 = a1;
      v96 = (void *)*((_QWORD *)v69 + 52);
      *((_QWORD *)v68 + 52) = v96;
      *((_QWORD *)v68 + 54) = *((_QWORD *)v69 + 54);
      v97 = *((_OWORD *)v69 + 29);
      *((_OWORD *)v68 + 28) = *((_OWORD *)v69 + 28);
      *((_OWORD *)v68 + 29) = v97;
      v98 = *((_OWORD *)v69 + 31);
      *((_OWORD *)v68 + 30) = *((_OWORD *)v69 + 30);
      *((_OWORD *)v68 + 31) = v98;
      *((_QWORD *)v68 + 64) = *((_QWORD *)v69 + 64);
      v99 = *((_OWORD *)v69 + 33);
      v100 = *((_OWORD *)v69 + 34);
      v101 = *((_OWORD *)v69 + 36);
      *((_OWORD *)v68 + 35) = *((_OWORD *)v69 + 35);
      *((_OWORD *)v68 + 36) = v101;
      *((_OWORD *)v68 + 33) = v99;
      *((_OWORD *)v68 + 34) = v100;
      *((_DWORD *)v68 + 148) = *((_DWORD *)v69 + 148);
      v102 = (void *)*((_QWORD *)v69 + 75);
      *((_QWORD *)v68 + 75) = v102;
      *((_QWORD *)v68 + 76) = *((_QWORD *)v69 + 76);
      v68[620] = v69[620];
      *((_DWORD *)v68 + 154) = *((_DWORD *)v69 + 154);
      v103 = *((_OWORD *)v69 + 39);
      v104 = *((_OWORD *)v69 + 40);
      v105 = *((_OWORD *)v69 + 41);
      *(_QWORD *)(v68 + 669) = *(_QWORD *)(v69 + 669);
      *((_OWORD *)v68 + 40) = v104;
      *((_OWORD *)v68 + 41) = v105;
      *((_OWORD *)v68 + 39) = v103;
      *((_QWORD *)v68 + 85) = v70;
      v106 = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v107 = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy((char *)v26 + v67, (char *)a2 + v67, 0x2B0uLL);
    }
  }
  return v26;
}

uint64_t destroy for ObjectCaptureSession.Frame(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  id *v14;

  v4 = (char *)a1 + a2[8];
  v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v6 = &v4[*(int *)(v5 + 24)];
  v7 = sub_239352674();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 2, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);

  v10 = (char *)a1 + a2[9];
  v11 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = &v10[*(int *)(v11 + 24)];
    if (!v9(v12, 2, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    swift_bridgeObjectRelease();
  }
  result = *(uint64_t *)((char *)a1 + a2[12]);
  if (result)
  {
    swift_release();
    swift_release();
    result = swift_release();
  }
  v14 = (id *)((char *)a1 + a2[13]);
  if (v14[85])
  {
    if (*v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v14[42])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for ObjectCaptureSession.Frame(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  int *v35;
  _QWORD *v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(_OWORD *, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(_OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  void *v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  void *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  void *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  id v104;
  id v105;
  uint64_t v107;
  uint64_t v108;
  char *__dst;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = (void *)a2[3];
  a1[2] = v5;
  a1[3] = v4;
  v6 = a3[8];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_OWORD *)((char *)a2 + v6 + 96);
  v11 = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[6] = v10;
  v12 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v12;
  v7[4] = v11;
  v13 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v14 = v13[6];
  __dst = (char *)v7 + v14;
  v15 = &v8[v14];
  v16 = sub_239352674();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v3;
  v20 = v5;
  v21 = v4;
  v107 = v17;
  v108 = v16;
  if (v18(v15, 2, v16))
  {
    v22 = sub_239352680();
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 2, v16);
  }
  v23 = v13[7];
  v24 = (char *)v7 + v23;
  v25 = &v8[v23];
  v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  v24[64] = v25[64];
  v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  v28 = v13[8];
  v29 = *(void **)&v8[v28];
  *(_QWORD *)((char *)v7 + v28) = v29;
  v30 = v13[9];
  v31 = (char *)v7 + v30;
  v32 = &v8[v30];
  v33 = *((_OWORD *)v32 + 3);
  *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
  *((_OWORD *)v31 + 3) = v33;
  v31[64] = v32[64];
  v34 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v34;
  v35 = a3;
  v36 = a1;
  v37 = a3[9];
  v38 = (_OWORD *)((char *)a1 + v37);
  v39 = (_OWORD *)((char *)a2 + v37);
  v40 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v41 + 48);
  v43 = v29;
  if (v42(v39, 1, v40))
  {
    v44 = sub_23925FB08(&qword_25692A8A8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = v39[1];
    *v38 = *v39;
    v38[1] = v45;
    v46 = v39[3];
    v38[2] = v39[2];
    v38[3] = v46;
    v47 = v39[5];
    v38[4] = v39[4];
    v38[5] = v47;
    v48 = v39[7];
    v38[6] = v39[6];
    v38[7] = v48;
    v49 = *(int *)(v40 + 24);
    v50 = (char *)v38 + v49;
    v51 = (char *)v39 + v49;
    if (v18((char *)v39 + v49, 2, v108))
    {
      v52 = sub_239352680();
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v50, v51, v108);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v50, 0, 2, v108);
    }
    *(_QWORD *)((char *)v38 + *(int *)(v40 + 28)) = *(_QWORD *)((char *)v39 + *(int *)(v40 + 28));
    v53 = *(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56);
    swift_bridgeObjectRetain();
    v53(v38, 0, 1, v40);
    v35 = a3;
  }
  v54 = v35[11];
  *(_DWORD *)((char *)a1 + v35[10]) = *(_DWORD *)((char *)a2 + v35[10]);
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  v55 = v35[12];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  if (*(_QWORD *)v57)
  {
    v58 = *((_QWORD *)v57 + 1);
    v59 = *((_QWORD *)v57 + 2);
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    *((_QWORD *)v56 + 2) = v59;
    v60 = *((_OWORD *)v57 + 3);
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    *((_OWORD *)v56 + 3) = v60;
    v61 = *((_OWORD *)v57 + 5);
    *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
    *((_OWORD *)v56 + 5) = v61;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v62 = *((_OWORD *)v57 + 3);
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    *((_OWORD *)v56 + 3) = v62;
    v63 = *((_OWORD *)v57 + 5);
    *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
    *((_OWORD *)v56 + 5) = v63;
    v64 = *((_OWORD *)v57 + 1);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v64;
  }
  v65 = v35[13];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  v68 = *(_QWORD *)((char *)a2 + v65 + 680);
  if (v68)
  {
    if (*(_QWORD *)v67)
    {
      v69 = *((_QWORD *)v67 + 1);
      v70 = *((_QWORD *)v67 + 2);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = v69;
      v71 = v68;
      v72 = *((_QWORD *)v67 + 3);
      v73 = *((_QWORD *)v67 + 4);
      *((_QWORD *)v66 + 2) = v70;
      *((_QWORD *)v66 + 3) = v72;
      v74 = *((_QWORD *)v67 + 5);
      v75 = *((_QWORD *)v67 + 6);
      *((_QWORD *)v66 + 4) = v73;
      *((_QWORD *)v66 + 5) = v74;
      v77 = *((_QWORD *)v67 + 7);
      v76 = *((_QWORD *)v67 + 8);
      *((_QWORD *)v66 + 6) = v75;
      *((_QWORD *)v66 + 7) = v77;
      *((_QWORD *)v66 + 8) = v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v78 = *((_OWORD *)v67 + 3);
      *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
      *((_OWORD *)v66 + 3) = v78;
      *((_QWORD *)v66 + 8) = *((_QWORD *)v67 + 8);
      v79 = *((_OWORD *)v67 + 1);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v79;
    }
    *((_QWORD *)v66 + 10) = *((_QWORD *)v67 + 10);
    v80 = *((_OWORD *)v67 + 7);
    *((_OWORD *)v66 + 6) = *((_OWORD *)v67 + 6);
    *((_OWORD *)v66 + 7) = v80;
    v81 = *((_OWORD *)v67 + 9);
    *((_OWORD *)v66 + 8) = *((_OWORD *)v67 + 8);
    *((_OWORD *)v66 + 9) = v81;
    *((_QWORD *)v66 + 20) = *((_QWORD *)v67 + 20);
    v82 = *((_OWORD *)v67 + 14);
    *((_OWORD *)v66 + 13) = *((_OWORD *)v67 + 13);
    *((_OWORD *)v66 + 14) = v82;
    v83 = *((_OWORD *)v67 + 12);
    *((_OWORD *)v66 + 11) = *((_OWORD *)v67 + 11);
    *((_OWORD *)v66 + 12) = v83;
    v84 = (void *)*((_QWORD *)v67 + 30);
    *((_QWORD *)v66 + 30) = v84;
    *((_QWORD *)v66 + 32) = *((_QWORD *)v67 + 32);
    v85 = *((_OWORD *)v67 + 20);
    *((_OWORD *)v66 + 19) = *((_OWORD *)v67 + 19);
    *((_OWORD *)v66 + 20) = v85;
    v86 = *((_OWORD *)v67 + 18);
    *((_OWORD *)v66 + 17) = *((_OWORD *)v67 + 17);
    *((_OWORD *)v66 + 18) = v86;
    v87 = *((_QWORD *)v67 + 42);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v88 = v84;
    swift_bridgeObjectRetain();
    if (v87)
    {
      v89 = *((_QWORD *)v67 + 43);
      *((_QWORD *)v66 + 42) = v87;
      *((_QWORD *)v66 + 43) = v89;
      v90 = *((_OWORD *)v67 + 23);
      *((_OWORD *)v66 + 22) = *((_OWORD *)v67 + 22);
      *((_OWORD *)v66 + 23) = v90;
      v91 = *((_OWORD *)v67 + 25);
      *((_OWORD *)v66 + 24) = *((_OWORD *)v67 + 24);
      *((_OWORD *)v66 + 25) = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v92 = *((_OWORD *)v67 + 24);
      *((_OWORD *)v66 + 23) = *((_OWORD *)v67 + 23);
      *((_OWORD *)v66 + 24) = v92;
      *((_OWORD *)v66 + 25) = *((_OWORD *)v67 + 25);
      v93 = *((_OWORD *)v67 + 22);
      *((_OWORD *)v66 + 21) = *((_OWORD *)v67 + 21);
      *((_OWORD *)v66 + 22) = v93;
    }
    v36 = a1;
    v94 = (void *)*((_QWORD *)v67 + 52);
    *((_QWORD *)v66 + 52) = v94;
    *((_QWORD *)v66 + 54) = *((_QWORD *)v67 + 54);
    v95 = *((_OWORD *)v67 + 29);
    *((_OWORD *)v66 + 28) = *((_OWORD *)v67 + 28);
    *((_OWORD *)v66 + 29) = v95;
    v96 = *((_OWORD *)v67 + 31);
    *((_OWORD *)v66 + 30) = *((_OWORD *)v67 + 30);
    *((_OWORD *)v66 + 31) = v96;
    *((_QWORD *)v66 + 64) = *((_QWORD *)v67 + 64);
    v97 = *((_OWORD *)v67 + 33);
    v98 = *((_OWORD *)v67 + 34);
    v99 = *((_OWORD *)v67 + 36);
    *((_OWORD *)v66 + 35) = *((_OWORD *)v67 + 35);
    *((_OWORD *)v66 + 36) = v99;
    *((_OWORD *)v66 + 33) = v97;
    *((_OWORD *)v66 + 34) = v98;
    *((_DWORD *)v66 + 148) = *((_DWORD *)v67 + 148);
    v100 = (void *)*((_QWORD *)v67 + 75);
    *((_QWORD *)v66 + 75) = v100;
    *((_QWORD *)v66 + 76) = *((_QWORD *)v67 + 76);
    v66[620] = v67[620];
    *((_DWORD *)v66 + 154) = *((_DWORD *)v67 + 154);
    v101 = *((_OWORD *)v67 + 39);
    v102 = *((_OWORD *)v67 + 40);
    v103 = *((_OWORD *)v67 + 41);
    *(_QWORD *)(v66 + 669) = *(_QWORD *)(v67 + 669);
    *((_OWORD *)v66 + 40) = v102;
    *((_OWORD *)v66 + 41) = v103;
    *((_OWORD *)v66 + 39) = v101;
    *((_QWORD *)v66 + 85) = v68;
    v104 = v94;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105 = v100;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((char *)a1 + v65, (char *)a2 + v65, 0x2B0uLL);
  }
  return v36;
}

_QWORD *assignWithCopy for ObjectCaptureSession.Frame(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  _OWORD *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  int v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  void *v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  id v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  void *v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  void *v122;
  int v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  id v127;
  id v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  void *v132;
  void *v133;
  id v134;
  _OWORD *v135;
  _OWORD *v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  void *v147;
  void *v148;
  id v149;
  void *v150;
  void *v151;
  id v152;
  int v153;
  uint64_t v155;
  _QWORD *v156;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v9 = (void *)a1[2];
  v10 = (void *)a2[2];
  a1[2] = v10;
  v11 = v10;

  v12 = (void *)a1[3];
  v13 = (void *)a2[3];
  a1[3] = v13;
  v14 = v13;

  v15 = a3[8];
  v156 = a1;
  v16 = (_OWORD *)((char *)a1 + v15);
  v17 = (char *)a2 + v15;
  *v16 = *(_OWORD *)((char *)a2 + v15);
  v16[1] = *(_OWORD *)((char *)a2 + v15 + 16);
  v16[2] = *(_OWORD *)((char *)a2 + v15 + 32);
  v16[3] = *(_OWORD *)((char *)a2 + v15 + 48);
  v16[4] = *(_OWORD *)((char *)a2 + v15 + 64);
  v16[5] = *(_OWORD *)((char *)a2 + v15 + 80);
  v16[6] = *(_OWORD *)((char *)a2 + v15 + 96);
  v18 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v19 = v18[6];
  v20 = (char *)v16 + v19;
  v21 = &v17[v19];
  v22 = sub_239352674();
  v155 = *(_QWORD *)(v22 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
  v24 = v23(v20, 2, v22);
  v25 = v23(v21, 2, v22);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v20, 0, 2, v22);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v155 + 8))(v20, v22);
LABEL_6:
    v26 = sub_239352680();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v155 + 24))(v20, v21, v22);
LABEL_7:
  v27 = v18[7];
  v28 = (char *)v16 + v27;
  v29 = &v17[v27];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v30 = *((_OWORD *)v29 + 1);
  v31 = *((_OWORD *)v29 + 2);
  v32 = *((_OWORD *)v29 + 3);
  v28[64] = v29[64];
  *((_OWORD *)v28 + 2) = v31;
  *((_OWORD *)v28 + 3) = v32;
  *((_OWORD *)v28 + 1) = v30;
  v33 = v18[8];
  v34 = *(void **)((char *)v16 + v33);
  v35 = *(void **)&v17[v33];
  *(_QWORD *)((char *)v16 + v33) = v35;
  v36 = v35;

  v37 = v18[9];
  v38 = (char *)v16 + v37;
  v39 = &v17[v37];
  *(_OWORD *)v38 = *(_OWORD *)v39;
  v40 = *((_OWORD *)v39 + 1);
  v41 = *((_OWORD *)v39 + 2);
  v42 = *((_OWORD *)v39 + 3);
  v38[64] = v39[64];
  *((_OWORD *)v38 + 2) = v41;
  *((_OWORD *)v38 + 3) = v42;
  *((_OWORD *)v38 + 1) = v40;
  v43 = a3[9];
  v44 = (char *)v156 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_2392688AC((uint64_t)v44, type metadata accessor for ObjectCaptureSession.Frame.Object);
      goto LABEL_13;
    }
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = *((_OWORD *)v45 + 1);
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
    *((_OWORD *)v44 + 3) = *((_OWORD *)v45 + 3);
    *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
    *((_OWORD *)v44 + 5) = *((_OWORD *)v45 + 5);
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    *((_OWORD *)v44 + 7) = *((_OWORD *)v45 + 7);
    v62 = *(int *)(v46 + 24);
    v63 = &v44[v62];
    v64 = &v45[v62];
    v65 = v23(&v44[v62], 2, v22);
    v66 = v23(v64, 2, v22);
    if (v65)
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v63, v64, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v63, 0, 2, v22);
LABEL_23:
        *(_QWORD *)&v44[*(int *)(v46 + 28)] = *(_QWORD *)&v45[*(int *)(v46 + 28)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      if (!v66)
      {
        (*(void (**)(char *, char *, uint64_t))(v155 + 24))(v63, v64, v22);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v155 + 8))(v63, v22);
    }
    v68 = sub_239352680();
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_23;
  }
  if (v50)
  {
LABEL_13:
    v61 = sub_23925FB08(&qword_25692A8A8);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_24;
  }
  v51 = *(_OWORD *)v45;
  v52 = *((_OWORD *)v45 + 1);
  v53 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v53;
  *(_OWORD *)v44 = v51;
  *((_OWORD *)v44 + 1) = v52;
  v54 = *((_OWORD *)v45 + 4);
  v55 = *((_OWORD *)v45 + 5);
  v56 = *((_OWORD *)v45 + 7);
  *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
  *((_OWORD *)v44 + 7) = v56;
  *((_OWORD *)v44 + 4) = v54;
  *((_OWORD *)v44 + 5) = v55;
  v57 = *(int *)(v46 + 24);
  v58 = &v44[v57];
  v59 = &v45[v57];
  if (v23(&v45[v57], 2, v22))
  {
    v60 = sub_239352680();
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v58, v59, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v58, 0, 2, v22);
  }
  *(_QWORD *)&v44[*(int *)(v46 + 28)] = *(_QWORD *)&v45[*(int *)(v46 + 28)];
  v67 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56);
  swift_bridgeObjectRetain();
  v67(v44, 0, 1, v46);
LABEL_24:
  v69 = v156;
  *(_DWORD *)((char *)v156 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)v156 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v70 = a3[12];
  v71 = (char *)v156 + v70;
  v72 = (char *)a2 + v70;
  v73 = *(_QWORD *)((char *)a2 + v70);
  if (*(_QWORD *)((char *)v156 + v70))
  {
    if (v73)
    {
      *(_QWORD *)v71 = v73;
      swift_retain();
      swift_release();
      *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
      swift_retain();
      swift_release();
      *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
      swift_retain();
      swift_release();
      *((_OWORD *)v71 + 2) = *((_OWORD *)v72 + 2);
      *((_OWORD *)v71 + 3) = *((_OWORD *)v72 + 3);
      *((_OWORD *)v71 + 4) = *((_OWORD *)v72 + 4);
      *((_OWORD *)v71 + 5) = *((_OWORD *)v72 + 5);
    }
    else
    {
      sub_23933B958((uint64_t)v156 + v70);
      v77 = *((_OWORD *)v72 + 1);
      *(_OWORD *)v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v77;
      v78 = *((_OWORD *)v72 + 5);
      v80 = *((_OWORD *)v72 + 2);
      v79 = *((_OWORD *)v72 + 3);
      *((_OWORD *)v71 + 4) = *((_OWORD *)v72 + 4);
      *((_OWORD *)v71 + 5) = v78;
      *((_OWORD *)v71 + 2) = v80;
      *((_OWORD *)v71 + 3) = v79;
    }
  }
  else if (v73)
  {
    *(_QWORD *)v71 = v73;
    *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
    *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
    v74 = *((_OWORD *)v72 + 2);
    v75 = *((_OWORD *)v72 + 3);
    v76 = *((_OWORD *)v72 + 5);
    *((_OWORD *)v71 + 4) = *((_OWORD *)v72 + 4);
    *((_OWORD *)v71 + 5) = v76;
    *((_OWORD *)v71 + 2) = v74;
    *((_OWORD *)v71 + 3) = v75;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v81 = *((_OWORD *)v72 + 1);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *((_OWORD *)v71 + 1) = v81;
    v82 = *((_OWORD *)v72 + 2);
    v83 = *((_OWORD *)v72 + 3);
    v84 = *((_OWORD *)v72 + 5);
    *((_OWORD *)v71 + 4) = *((_OWORD *)v72 + 4);
    *((_OWORD *)v71 + 5) = v84;
    *((_OWORD *)v71 + 2) = v82;
    *((_OWORD *)v71 + 3) = v83;
  }
  v85 = a3[13];
  v86 = (uint64_t)v156 + v85;
  v87 = (char *)a2 + v85;
  v88 = *(_QWORD *)((char *)v156 + v85 + 680);
  v89 = *((_QWORD *)v87 + 85);
  if (v88)
  {
    if (v89)
    {
      v90 = *(_QWORD *)v87;
      if (*(_QWORD *)v86)
      {
        if (v90)
        {
          *(_QWORD *)v86 = v90;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 24) = *((_QWORD *)v87 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 32) = *((_QWORD *)v87 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 40) = *((_QWORD *)v87 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 48) = *((_QWORD *)v87 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 56) = *((_QWORD *)v87 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 64) = *((_QWORD *)v87 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_2392A0570(v86);
          *(_OWORD *)v86 = *(_OWORD *)v87;
          v92 = *((_OWORD *)v87 + 2);
          v91 = *((_OWORD *)v87 + 3);
          v93 = *((_OWORD *)v87 + 1);
          *(_QWORD *)(v86 + 64) = *((_QWORD *)v87 + 8);
          *(_OWORD *)(v86 + 32) = v92;
          *(_OWORD *)(v86 + 48) = v91;
          *(_OWORD *)(v86 + 16) = v93;
        }
      }
      else if (v90)
      {
        *(_QWORD *)v86 = v90;
        *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
        *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
        *(_QWORD *)(v86 + 24) = *((_QWORD *)v87 + 3);
        *(_QWORD *)(v86 + 32) = *((_QWORD *)v87 + 4);
        *(_QWORD *)(v86 + 40) = *((_QWORD *)v87 + 5);
        *(_QWORD *)(v86 + 48) = *((_QWORD *)v87 + 6);
        *(_QWORD *)(v86 + 56) = *((_QWORD *)v87 + 7);
        *(_QWORD *)(v86 + 64) = *((_QWORD *)v87 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v69 = v156;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v86 = *(_OWORD *)v87;
        v129 = *((_OWORD *)v87 + 1);
        v130 = *((_OWORD *)v87 + 2);
        v131 = *((_OWORD *)v87 + 3);
        *(_QWORD *)(v86 + 64) = *((_QWORD *)v87 + 8);
        *(_OWORD *)(v86 + 32) = v130;
        *(_OWORD *)(v86 + 48) = v131;
        *(_OWORD *)(v86 + 16) = v129;
      }
      *(_QWORD *)(v86 + 80) = *((_QWORD *)v87 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 96) = *((_OWORD *)v87 + 6);
      *(_OWORD *)(v86 + 112) = *((_OWORD *)v87 + 7);
      *(_OWORD *)(v86 + 128) = *((_OWORD *)v87 + 8);
      *(_OWORD *)(v86 + 144) = *((_OWORD *)v87 + 9);
      *(_QWORD *)(v86 + 160) = *((_QWORD *)v87 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 176) = *((_OWORD *)v87 + 11);
      *(_OWORD *)(v86 + 192) = *((_OWORD *)v87 + 12);
      *(_OWORD *)(v86 + 208) = *((_OWORD *)v87 + 13);
      *(_OWORD *)(v86 + 224) = *((_OWORD *)v87 + 14);
      v132 = *(void **)(v86 + 240);
      v133 = (void *)*((_QWORD *)v87 + 30);
      *(_QWORD *)(v86 + 240) = v133;
      v134 = v133;

      *(_QWORD *)(v86 + 256) = *((_QWORD *)v87 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 272) = *((_OWORD *)v87 + 17);
      *(_OWORD *)(v86 + 288) = *((_OWORD *)v87 + 18);
      *(_OWORD *)(v86 + 304) = *((_OWORD *)v87 + 19);
      *(_OWORD *)(v86 + 320) = *((_OWORD *)v87 + 20);
      v135 = (_OWORD *)(v86 + 336);
      v136 = v87 + 336;
      v137 = *((_QWORD *)v87 + 42);
      if (*(_QWORD *)(v86 + 336))
      {
        if (v137)
        {
          *(_QWORD *)(v86 + 336) = v137;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v86 + 344) = *((_QWORD *)v87 + 43);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_OWORD *)(v86 + 352) = *((_OWORD *)v87 + 22);
          *(_OWORD *)(v86 + 368) = *((_OWORD *)v87 + 23);
          *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
          *(_OWORD *)(v86 + 400) = *((_OWORD *)v87 + 25);
        }
        else
        {
          sub_23933B97C(v86 + 336);
          *v135 = *v136;
          v141 = *((_OWORD *)v87 + 25);
          v143 = *((_OWORD *)v87 + 22);
          v142 = *((_OWORD *)v87 + 23);
          *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
          *(_OWORD *)(v86 + 400) = v141;
          *(_OWORD *)(v86 + 352) = v143;
          *(_OWORD *)(v86 + 368) = v142;
        }
      }
      else if (v137)
      {
        *(_QWORD *)(v86 + 336) = v137;
        *(_QWORD *)(v86 + 344) = *((_QWORD *)v87 + 43);
        v138 = *((_OWORD *)v87 + 22);
        v139 = *((_OWORD *)v87 + 23);
        v140 = *((_OWORD *)v87 + 25);
        *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
        *(_OWORD *)(v86 + 400) = v140;
        *(_OWORD *)(v86 + 352) = v138;
        *(_OWORD *)(v86 + 368) = v139;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *v135 = *v136;
        v144 = *((_OWORD *)v87 + 22);
        v145 = *((_OWORD *)v87 + 23);
        v146 = *((_OWORD *)v87 + 25);
        *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
        *(_OWORD *)(v86 + 400) = v146;
        *(_OWORD *)(v86 + 352) = v144;
        *(_OWORD *)(v86 + 368) = v145;
      }
      v147 = *(void **)(v86 + 416);
      v148 = (void *)*((_QWORD *)v87 + 52);
      *(_QWORD *)(v86 + 416) = v148;
      v149 = v148;

      *(_QWORD *)(v86 + 432) = *((_QWORD *)v87 + 54);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 448) = *((_OWORD *)v87 + 28);
      *(_OWORD *)(v86 + 464) = *((_OWORD *)v87 + 29);
      *(_OWORD *)(v86 + 480) = *((_OWORD *)v87 + 30);
      *(_OWORD *)(v86 + 496) = *((_OWORD *)v87 + 31);
      *(_QWORD *)(v86 + 512) = *((_QWORD *)v87 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(v86 + 528) = *((_OWORD *)v87 + 33);
      *(_OWORD *)(v86 + 544) = *((_OWORD *)v87 + 34);
      *(_OWORD *)(v86 + 560) = *((_OWORD *)v87 + 35);
      *(_OWORD *)(v86 + 576) = *((_OWORD *)v87 + 36);
      *(_DWORD *)(v86 + 592) = *((_DWORD *)v87 + 148);
      v150 = *(void **)(v86 + 600);
      v151 = (void *)*((_QWORD *)v87 + 75);
      *(_QWORD *)(v86 + 600) = v151;
      v152 = v151;

      *(_QWORD *)(v86 + 608) = *((_QWORD *)v87 + 76);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v153 = *((_DWORD *)v87 + 154);
      *(_BYTE *)(v86 + 620) = v87[620];
      *(_DWORD *)(v86 + 616) = v153;
      *(_DWORD *)(v86 + 624) = *((_DWORD *)v87 + 156);
      *(_QWORD *)(v86 + 632) = *((_QWORD *)v87 + 79);
      *(_DWORD *)(v86 + 640) = *((_DWORD *)v87 + 160);
      *(_DWORD *)(v86 + 644) = *((_DWORD *)v87 + 161);
      *(_QWORD *)(v86 + 648) = *((_QWORD *)v87 + 81);
      *(_DWORD *)(v86 + 656) = *((_DWORD *)v87 + 164);
      *(_DWORD *)(v86 + 660) = *((_DWORD *)v87 + 165);
      *(_DWORD *)(v86 + 664) = *((_DWORD *)v87 + 166);
      *(_BYTE *)(v86 + 668) = v87[668];
      *(_BYTE *)(v86 + 669) = v87[669];
      *(_BYTE *)(v86 + 670) = v87[670];
      *(_BYTE *)(v86 + 671) = v87[671];
      *(_BYTE *)(v86 + 672) = v87[672];
      *(_BYTE *)(v86 + 673) = v87[673];
      *(_BYTE *)(v86 + 674) = v87[674];
      *(_BYTE *)(v86 + 675) = v87[675];
      *(_BYTE *)(v86 + 676) = v87[676];
      *(_QWORD *)(v86 + 680) = *((_QWORD *)v87 + 85);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v69;
    }
    sub_23933B9B0(v86);
LABEL_40:
    memcpy((void *)v86, v87, 0x2B0uLL);
    return v69;
  }
  if (!v89)
    goto LABEL_40;
  if (*(_QWORD *)v87)
  {
    *(_QWORD *)v86 = *(_QWORD *)v87;
    *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
    *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
    *(_QWORD *)(v86 + 24) = *((_QWORD *)v87 + 3);
    *(_QWORD *)(v86 + 32) = *((_QWORD *)v87 + 4);
    *(_QWORD *)(v86 + 40) = *((_QWORD *)v87 + 5);
    *(_QWORD *)(v86 + 48) = *((_QWORD *)v87 + 6);
    *(_QWORD *)(v86 + 56) = *((_QWORD *)v87 + 7);
    *(_QWORD *)(v86 + 64) = *((_QWORD *)v87 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69 = v156;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v86 = *(_OWORD *)v87;
    v94 = *((_OWORD *)v87 + 1);
    v95 = *((_OWORD *)v87 + 2);
    v96 = *((_OWORD *)v87 + 3);
    *(_QWORD *)(v86 + 64) = *((_QWORD *)v87 + 8);
    *(_OWORD *)(v86 + 32) = v95;
    *(_OWORD *)(v86 + 48) = v96;
    *(_OWORD *)(v86 + 16) = v94;
  }
  *(_QWORD *)(v86 + 80) = *((_QWORD *)v87 + 10);
  v97 = *((_OWORD *)v87 + 6);
  v98 = *((_OWORD *)v87 + 7);
  v99 = *((_OWORD *)v87 + 9);
  *(_OWORD *)(v86 + 128) = *((_OWORD *)v87 + 8);
  *(_OWORD *)(v86 + 144) = v99;
  *(_OWORD *)(v86 + 96) = v97;
  *(_OWORD *)(v86 + 112) = v98;
  *(_QWORD *)(v86 + 160) = *((_QWORD *)v87 + 20);
  v100 = *((_OWORD *)v87 + 11);
  v101 = *((_OWORD *)v87 + 12);
  v102 = *((_OWORD *)v87 + 14);
  *(_OWORD *)(v86 + 208) = *((_OWORD *)v87 + 13);
  *(_OWORD *)(v86 + 224) = v102;
  *(_OWORD *)(v86 + 176) = v100;
  *(_OWORD *)(v86 + 192) = v101;
  v103 = (void *)*((_QWORD *)v87 + 30);
  *(_QWORD *)(v86 + 240) = v103;
  *(_QWORD *)(v86 + 256) = *((_QWORD *)v87 + 32);
  v104 = *((_OWORD *)v87 + 17);
  v105 = *((_OWORD *)v87 + 18);
  v106 = *((_OWORD *)v87 + 20);
  *(_OWORD *)(v86 + 304) = *((_OWORD *)v87 + 19);
  *(_OWORD *)(v86 + 320) = v106;
  *(_OWORD *)(v86 + 272) = v104;
  *(_OWORD *)(v86 + 288) = v105;
  v107 = *((_QWORD *)v87 + 42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v108 = v103;
  swift_bridgeObjectRetain();
  if (v107)
  {
    *(_QWORD *)(v86 + 336) = v107;
    *(_QWORD *)(v86 + 344) = *((_QWORD *)v87 + 43);
    v109 = *((_OWORD *)v87 + 22);
    v110 = *((_OWORD *)v87 + 23);
    v111 = *((_OWORD *)v87 + 25);
    *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
    *(_OWORD *)(v86 + 400) = v111;
    *(_OWORD *)(v86 + 352) = v109;
    *(_OWORD *)(v86 + 368) = v110;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v86 + 336) = *((_OWORD *)v87 + 21);
    v112 = *((_OWORD *)v87 + 22);
    v113 = *((_OWORD *)v87 + 23);
    v114 = *((_OWORD *)v87 + 25);
    *(_OWORD *)(v86 + 384) = *((_OWORD *)v87 + 24);
    *(_OWORD *)(v86 + 400) = v114;
    *(_OWORD *)(v86 + 352) = v112;
    *(_OWORD *)(v86 + 368) = v113;
  }
  v115 = (void *)*((_QWORD *)v87 + 52);
  *(_QWORD *)(v86 + 416) = v115;
  *(_QWORD *)(v86 + 432) = *((_QWORD *)v87 + 54);
  v116 = *((_OWORD *)v87 + 28);
  v117 = *((_OWORD *)v87 + 29);
  v118 = *((_OWORD *)v87 + 31);
  *(_OWORD *)(v86 + 480) = *((_OWORD *)v87 + 30);
  *(_OWORD *)(v86 + 496) = v118;
  *(_OWORD *)(v86 + 448) = v116;
  *(_OWORD *)(v86 + 464) = v117;
  *(_QWORD *)(v86 + 512) = *((_QWORD *)v87 + 64);
  v119 = *((_OWORD *)v87 + 33);
  v120 = *((_OWORD *)v87 + 34);
  v121 = *((_OWORD *)v87 + 36);
  *(_OWORD *)(v86 + 560) = *((_OWORD *)v87 + 35);
  *(_OWORD *)(v86 + 576) = v121;
  *(_OWORD *)(v86 + 528) = v119;
  *(_OWORD *)(v86 + 544) = v120;
  *(_DWORD *)(v86 + 592) = *((_DWORD *)v87 + 148);
  v122 = (void *)*((_QWORD *)v87 + 75);
  *(_QWORD *)(v86 + 600) = v122;
  *(_QWORD *)(v86 + 608) = *((_QWORD *)v87 + 76);
  v123 = *((_DWORD *)v87 + 154);
  *(_BYTE *)(v86 + 620) = v87[620];
  *(_DWORD *)(v86 + 616) = v123;
  v124 = *((_OWORD *)v87 + 39);
  v125 = *((_OWORD *)v87 + 40);
  v126 = *((_OWORD *)v87 + 41);
  *(_QWORD *)(v86 + 669) = *(_QWORD *)(v87 + 669);
  *(_OWORD *)(v86 + 640) = v125;
  *(_OWORD *)(v86 + 656) = v126;
  *(_OWORD *)(v86 + 624) = v124;
  *(_QWORD *)(v86 + 680) = *((_QWORD *)v87 + 85);
  v127 = v115;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v128 = v122;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v69;
}

uint64_t sub_23933B958(uint64_t a1)
{
  _s5FrameV10PointCloudVwxx();
  return a1;
}

uint64_t sub_23933B97C(uint64_t a1)
{
  destroy for OCTriangleMesh();
  return a1;
}

uint64_t sub_23933B9B0(uint64_t a1)
{
  destroy for ObjectCaptureSessionFrameSPI(a1);
  return a1;
}

uint64_t initializeWithTake for ObjectCaptureSession.Frame(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  _OWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char *__dst;
  unsigned int (*v52)(const void *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(_OWORD *)(a2 + v6 + 48);
  v7[2] = *(_OWORD *)(a2 + v6 + 32);
  v7[3] = v10;
  v11 = *(_OWORD *)(a2 + v6 + 80);
  v7[4] = *(_OWORD *)(a2 + v6 + 64);
  v7[5] = v11;
  v7[6] = *(_OWORD *)(a2 + v6 + 96);
  v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v13 = v12[6];
  v14 = (char *)v7 + v13;
  v15 = (const void *)(v8 + v13);
  v16 = sub_239352674();
  v17 = *(_QWORD *)(v16 - 8);
  v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  if (v52(v15, 2, v16))
  {
    v18 = sub_239352680();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  v19 = v12[7];
  v20 = (char *)v7 + v19;
  v21 = v8 + v19;
  v22 = *(_OWORD *)(v21 + 48);
  *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
  *((_OWORD *)v20 + 3) = v22;
  v20[64] = *(_BYTE *)(v21 + 64);
  v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  *(_QWORD *)((char *)v7 + v12[8]) = *(_QWORD *)(v8 + v12[8]);
  v24 = v12[9];
  v25 = (char *)v7 + v24;
  v26 = v8 + v24;
  v27 = *(_OWORD *)(v26 + 48);
  *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
  *((_OWORD *)v25 + 3) = v27;
  v25[64] = *(_BYTE *)(v26 + 64);
  v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  v29 = a3[9];
  v30 = (_OWORD *)(a1 + v29);
  v31 = (_OWORD *)(a2 + v29);
  v32 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = sub_23925FB08(&qword_25692A8A8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = v31[1];
    *v30 = *v31;
    v30[1] = v35;
    v36 = v31[3];
    v30[2] = v31[2];
    v30[3] = v36;
    v37 = v31[5];
    v30[4] = v31[4];
    v30[5] = v37;
    v38 = v31[7];
    v30[6] = v31[6];
    v30[7] = v38;
    v39 = *(int *)(v32 + 24);
    __dst = (char *)v30 + v39;
    v40 = (char *)v31 + v39;
    if (v52((char *)v31 + v39, 2, v16))
    {
      v41 = sub_239352680();
      memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v40, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 2, v16);
    }
    *(_QWORD *)((char *)v30 + *(int *)(v32 + 28)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v42 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  v43 = a3[12];
  v44 = a3[13];
  v45 = (_OWORD *)(a1 + v43);
  v46 = (_OWORD *)(a2 + v43);
  v47 = v46[3];
  v45[2] = v46[2];
  v45[3] = v47;
  v48 = v46[5];
  v45[4] = v46[4];
  v45[5] = v48;
  v49 = v46[1];
  *v45 = *v46;
  v45[1] = v49;
  memcpy((void *)(a1 + v44), (const void *)(a2 + v44), 0x2B0uLL);
  return a1;
}

_QWORD *assignWithTake for ObjectCaptureSession.Frame(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _OWORD *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  void *v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  void *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  void *v94;
  uint64_t v96;
  int *v97;

  *a1 = *a2;
  v6 = (void *)a1[1];
  a1[1] = a2[1];

  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = (void *)a1[3];
  a1[3] = a2[3];

  v97 = a3;
  v9 = a3[8];
  v10 = (_OWORD *)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = *(_OWORD *)((char *)a2 + v9 + 16);
  *v10 = *(_OWORD *)((char *)a2 + v9);
  v10[1] = v12;
  v13 = *(_OWORD *)((char *)a2 + v9 + 48);
  v10[2] = *(_OWORD *)((char *)a2 + v9 + 32);
  v10[3] = v13;
  v14 = *(_OWORD *)((char *)a2 + v9 + 80);
  v10[4] = *(_OWORD *)((char *)a2 + v9 + 64);
  v10[5] = v14;
  v10[6] = *(_OWORD *)((char *)a2 + v9 + 96);
  v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v16 = v15[6];
  v17 = (char *)v10 + v16;
  v18 = &v11[v16];
  v19 = sub_239352674();
  v96 = *(_QWORD *)(v19 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48);
  v21 = v20(v17, 2, v19);
  v22 = v20(v18, 2, v19);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v17, 0, 2, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v96 + 8))(v17, v19);
LABEL_6:
    v23 = sub_239352680();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v96 + 40))(v17, v18, v19);
LABEL_7:
  v24 = v15[7];
  v25 = (char *)v10 + v24;
  v26 = &v11[v24];
  v27 = *((_OWORD *)v26 + 3);
  *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  *((_OWORD *)v25 + 3) = v27;
  v25[64] = v26[64];
  v28 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  v29 = v15[8];
  v30 = *(void **)((char *)v10 + v29);
  *(_QWORD *)((char *)v10 + v29) = *(_QWORD *)&v11[v29];

  v31 = v15[9];
  v32 = (char *)v10 + v31;
  v33 = &v11[v31];
  v34 = *((_OWORD *)v33 + 3);
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  *((_OWORD *)v32 + 3) = v34;
  v32[64] = v33[64];
  v35 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v35;
  v36 = v97[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for ObjectCaptureSession.Frame.Object(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (v43)
    {
      sub_2392688AC((uint64_t)v37, type metadata accessor for ObjectCaptureSession.Frame.Object);
      goto LABEL_13;
    }
    v53 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v53;
    v54 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v54;
    v55 = *((_OWORD *)v38 + 5);
    *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
    *((_OWORD *)v37 + 5) = v55;
    v56 = *((_OWORD *)v38 + 7);
    *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
    *((_OWORD *)v37 + 7) = v56;
    v57 = *(int *)(v39 + 24);
    v58 = &v37[v57];
    v59 = &v38[v57];
    v60 = v20(&v37[v57], 2, v19);
    v61 = v20(v59, 2, v19);
    if (v60)
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v58, v59, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v58, 0, 2, v19);
LABEL_23:
        *(_QWORD *)&v37[*(int *)(v39 + 28)] = *(_QWORD *)&v38[*(int *)(v39 + 28)];
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 40))(v58, v59, v19);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v96 + 8))(v58, v19);
    }
    v62 = sub_239352680();
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_23;
  }
  if (v43)
  {
LABEL_13:
    v52 = sub_23925FB08(&qword_25692A8A8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_24;
  }
  v44 = *((_OWORD *)v38 + 1);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v44;
  v45 = *((_OWORD *)v38 + 3);
  *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
  *((_OWORD *)v37 + 3) = v45;
  v46 = *((_OWORD *)v38 + 5);
  *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
  *((_OWORD *)v37 + 5) = v46;
  v47 = *((_OWORD *)v38 + 7);
  *((_OWORD *)v37 + 6) = *((_OWORD *)v38 + 6);
  *((_OWORD *)v37 + 7) = v47;
  v48 = *(int *)(v39 + 24);
  v49 = &v37[v48];
  v50 = &v38[v48];
  if (v20(&v38[v48], 2, v19))
  {
    v51 = sub_239352680();
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v49, v50, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v49, 0, 2, v19);
  }
  *(_QWORD *)&v37[*(int *)(v39 + 28)] = *(_QWORD *)&v38[*(int *)(v39 + 28)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_24:
  v63 = v97[11];
  *(_DWORD *)((char *)a1 + v97[10]) = *(_DWORD *)((char *)a2 + v97[10]);
  *(_QWORD *)((char *)a1 + v63) = *(_QWORD *)((char *)a2 + v63);
  v64 = v97[12];
  v65 = (uint64_t)a1 + v64;
  v66 = (char *)a2 + v64;
  if (*(_QWORD *)((char *)a1 + v64))
  {
    if (*(_QWORD *)v66)
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      swift_release();
      *(_QWORD *)(v65 + 8) = *((_QWORD *)v66 + 1);
      swift_release();
      *(_QWORD *)(v65 + 16) = *((_QWORD *)v66 + 2);
      swift_release();
      v67 = *((_OWORD *)v66 + 3);
      *(_OWORD *)(v65 + 32) = *((_OWORD *)v66 + 2);
      *(_OWORD *)(v65 + 48) = v67;
      v68 = *((_OWORD *)v66 + 5);
      *(_OWORD *)(v65 + 64) = *((_OWORD *)v66 + 4);
      *(_OWORD *)(v65 + 80) = v68;
      goto LABEL_29;
    }
    sub_23933B958(v65);
  }
  v69 = *((_OWORD *)v66 + 3);
  *(_OWORD *)(v65 + 32) = *((_OWORD *)v66 + 2);
  *(_OWORD *)(v65 + 48) = v69;
  v70 = *((_OWORD *)v66 + 5);
  *(_OWORD *)(v65 + 64) = *((_OWORD *)v66 + 4);
  *(_OWORD *)(v65 + 80) = v70;
  v71 = *((_OWORD *)v66 + 1);
  *(_OWORD *)v65 = *(_OWORD *)v66;
  *(_OWORD *)(v65 + 16) = v71;
LABEL_29:
  v72 = v97[13];
  v73 = (_QWORD *)((char *)a1 + v72);
  v74 = (_QWORD *)((char *)a2 + v72);
  if (*(_QWORD *)((char *)a1 + v72 + 680))
  {
    if (v74[85])
    {
      if (*v73)
      {
        if (*v74)
        {
          *v73 = *v74;
          swift_bridgeObjectRelease();
          v73[1] = v74[1];
          swift_bridgeObjectRelease();
          v73[2] = v74[2];
          swift_bridgeObjectRelease();
          v73[3] = v74[3];
          swift_bridgeObjectRelease();
          v73[4] = v74[4];
          swift_bridgeObjectRelease();
          v73[5] = v74[5];
          swift_bridgeObjectRelease();
          v73[6] = v74[6];
          swift_bridgeObjectRelease();
          v73[7] = v74[7];
          swift_bridgeObjectRelease();
          v73[8] = v74[8];
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        sub_2392A0570((uint64_t)v73);
      }
      v75 = *((_OWORD *)v74 + 3);
      *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
      *((_OWORD *)v73 + 3) = v75;
      v73[8] = v74[8];
      v76 = *((_OWORD *)v74 + 1);
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *((_OWORD *)v73 + 1) = v76;
LABEL_38:
      v73[10] = v74[10];
      swift_bridgeObjectRelease();
      v77 = *((_OWORD *)v74 + 7);
      *((_OWORD *)v73 + 6) = *((_OWORD *)v74 + 6);
      *((_OWORD *)v73 + 7) = v77;
      v78 = *((_OWORD *)v74 + 9);
      *((_OWORD *)v73 + 8) = *((_OWORD *)v74 + 8);
      *((_OWORD *)v73 + 9) = v78;
      v73[20] = v74[20];
      swift_bridgeObjectRelease();
      v79 = *((_OWORD *)v74 + 12);
      *((_OWORD *)v73 + 11) = *((_OWORD *)v74 + 11);
      *((_OWORD *)v73 + 12) = v79;
      v80 = *((_OWORD *)v74 + 14);
      *((_OWORD *)v73 + 13) = *((_OWORD *)v74 + 13);
      *((_OWORD *)v73 + 14) = v80;
      v81 = (void *)v73[30];
      v73[30] = v74[30];

      v73[32] = v74[32];
      swift_bridgeObjectRelease();
      v82 = *((_OWORD *)v74 + 18);
      *((_OWORD *)v73 + 17) = *((_OWORD *)v74 + 17);
      *((_OWORD *)v73 + 18) = v82;
      v83 = *((_OWORD *)v74 + 20);
      *((_OWORD *)v73 + 19) = *((_OWORD *)v74 + 19);
      *((_OWORD *)v73 + 20) = v83;
      if (v73[42])
      {
        v84 = v74[42];
        if (v84)
        {
          v73[42] = v84;
          swift_bridgeObjectRelease();
          v73[43] = v74[43];
          swift_bridgeObjectRelease();
          v85 = *((_OWORD *)v74 + 23);
          *((_OWORD *)v73 + 22) = *((_OWORD *)v74 + 22);
          *((_OWORD *)v73 + 23) = v85;
          v86 = *((_OWORD *)v74 + 25);
          *((_OWORD *)v73 + 24) = *((_OWORD *)v74 + 24);
          *((_OWORD *)v73 + 25) = v86;
LABEL_43:
          v89 = (void *)v73[52];
          v73[52] = v74[52];

          v73[54] = v74[54];
          swift_bridgeObjectRelease();
          v90 = *((_OWORD *)v74 + 29);
          *((_OWORD *)v73 + 28) = *((_OWORD *)v74 + 28);
          *((_OWORD *)v73 + 29) = v90;
          v91 = *((_OWORD *)v74 + 31);
          *((_OWORD *)v73 + 30) = *((_OWORD *)v74 + 30);
          *((_OWORD *)v73 + 31) = v91;
          v73[64] = v74[64];
          swift_bridgeObjectRelease();
          v92 = *((_OWORD *)v74 + 34);
          *((_OWORD *)v73 + 33) = *((_OWORD *)v74 + 33);
          *((_OWORD *)v73 + 34) = v92;
          v93 = *((_OWORD *)v74 + 36);
          *((_OWORD *)v73 + 35) = *((_OWORD *)v74 + 35);
          *((_OWORD *)v73 + 36) = v93;
          *((_DWORD *)v73 + 148) = *((_DWORD *)v74 + 148);
          v94 = (void *)v73[75];
          v73[75] = v74[75];

          v73[76] = v74[76];
          swift_bridgeObjectRelease();
          *((_DWORD *)v73 + 154) = *((_DWORD *)v74 + 154);
          *((_BYTE *)v73 + 620) = *((_BYTE *)v74 + 620);
          *((_DWORD *)v73 + 156) = *((_DWORD *)v74 + 156);
          v73[79] = v74[79];
          v73[80] = v74[80];
          v73[81] = v74[81];
          v73[82] = v74[82];
          *((_DWORD *)v73 + 166) = *((_DWORD *)v74 + 166);
          *((_BYTE *)v73 + 668) = *((_BYTE *)v74 + 668);
          *((_BYTE *)v73 + 669) = *((_BYTE *)v74 + 669);
          *((_BYTE *)v73 + 670) = *((_BYTE *)v74 + 670);
          *((_BYTE *)v73 + 671) = *((_BYTE *)v74 + 671);
          *((_BYTE *)v73 + 672) = *((_BYTE *)v74 + 672);
          *((_BYTE *)v73 + 673) = *((_BYTE *)v74 + 673);
          *((_BYTE *)v73 + 674) = *((_BYTE *)v74 + 674);
          *((_BYTE *)v73 + 675) = *((_BYTE *)v74 + 675);
          *((_BYTE *)v73 + 676) = *((_BYTE *)v74 + 676);
          v73[85] = v74[85];
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_23933B97C((uint64_t)(v73 + 42));
      }
      v87 = *((_OWORD *)v74 + 24);
      *((_OWORD *)v73 + 23) = *((_OWORD *)v74 + 23);
      *((_OWORD *)v73 + 24) = v87;
      *((_OWORD *)v73 + 25) = *((_OWORD *)v74 + 25);
      v88 = *((_OWORD *)v74 + 22);
      *((_OWORD *)v73 + 21) = *((_OWORD *)v74 + 21);
      *((_OWORD *)v73 + 22) = v88;
      goto LABEL_43;
    }
    sub_23933B9B0((uint64_t)v73);
  }
  memcpy(v73, v74, 0x2B0uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Frame()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933C440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_23925FB08(&qword_25692A8A8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Frame()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933C4F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_23925FB08(&qword_25692A8A8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23933C590()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ObjectCaptureSession.Frame.Camera(319);
  if (v0 <= 0x3F)
  {
    sub_23926B494(319, qword_25692AB08, (void (*)(uint64_t))type metadata accessor for ObjectCaptureSession.Frame.Object);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Frame.Feedback()
{
  return &type metadata for ObjectCaptureSession.Frame.Feedback;
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Frame.Camera(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  id v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    v10 = a3[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[6] = *((_OWORD *)a2 + 6);
    v13 = sub_239352674();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    {
      v15 = sub_239352680();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)v4 + v17;
    v20 = (uint64_t)a2 + v17;
    v19[64] = *(_BYTE *)(v20 + 64);
    v21 = *(_OWORD *)(v20 + 48);
    *((_OWORD *)v19 + 2) = *(_OWORD *)(v20 + 32);
    *((_OWORD *)v19 + 3) = v21;
    v22 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v22;
    v23 = *(void **)((char *)a2 + v18);
    *(_QWORD *)((char *)v4 + v18) = v23;
    v24 = a3[9];
    v25 = (char *)v4 + v24;
    v26 = (uint64_t)a2 + v24;
    v27 = *(_OWORD *)(v26 + 48);
    *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
    *((_OWORD *)v25 + 3) = v27;
    v25[64] = *(_BYTE *)(v26 + 64);
    v28 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v28;
    v29 = v23;
  }
  return v4;
}

void destroy for ObjectCaptureSession.Frame.Camera(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_239352674();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

_OWORD *initializeWithCopy for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  id v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    v14 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v17[64] = v18[64];
  v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  v21 = *(void **)((char *)a2 + v16);
  *(_QWORD *)((char *)a1 + v16) = v21;
  v22 = a3[9];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = v24[64];
  v26 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  v27 = v21;
  return a1;
}

_OWORD *assignWithCopy for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239352674();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_239352680();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = *((_OWORD *)v17 + 1);
  v19 = *((_OWORD *)v17 + 2);
  v20 = *((_OWORD *)v17 + 3);
  v16[64] = v17[64];
  *((_OWORD *)v16 + 2) = v19;
  *((_OWORD *)v16 + 3) = v20;
  *((_OWORD *)v16 + 1) = v18;
  v21 = a3[8];
  v22 = *(void **)((char *)a1 + v21);
  v23 = *(void **)((char *)a2 + v21);
  *(_QWORD *)((char *)a1 + v21) = v23;
  v24 = v23;

  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = *((_OWORD *)v27 + 1);
  v29 = *((_OWORD *)v27 + 2);
  v30 = *((_OWORD *)v27 + 3);
  v26[64] = v27[64];
  *((_OWORD *)v26 + 2) = v29;
  *((_OWORD *)v26 + 3) = v30;
  *((_OWORD *)v26 + 1) = v28;
  return a1;
}

_OWORD *initializeWithTake for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    v14 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v17[64] = v18[64];
  v19 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v19;
  v20 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v20;
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  return a1;
}

_OWORD *assignWithTake for ObjectCaptureSession.Frame.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 2, v12);
  v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  v18 = a3[7];
  v19 = a3[8];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  v20[64] = v21[64];
  v22 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v22;
  v23 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  v24 = *(void **)((char *)a1 + v19);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);

  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v28;
  v26[64] = v27[64];
  v29 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Frame.Camera()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933CE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_239352680();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Frame.Camera()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933CE9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_239352680();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
  return result;
}

uint64_t sub_23933CF18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352680();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Frame.Object(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    v10 = *((_OWORD *)a2 + 7);
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    a1[6] = *((_OWORD *)a2 + 6);
    a1[7] = v10;
    v14 = sub_239352674();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 2, v14))
    {
      v16 = sub_239352680();
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 2, v14);
    }
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ObjectCaptureSession.Frame.Object(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_239352674();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 2, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v13 = sub_239352674();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    v15 = sub_239352680();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *assignWithCopy for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239352674();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_239352680();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v13 = sub_239352674();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
  {
    v15 = sub_239352680();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *assignWithTake for ObjectCaptureSession.Frame.Object(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v13 = sub_239352674();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 2, v13);
  v17 = v15(v12, 2, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_239352680();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Frame.Object()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933D5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_239352680();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Frame.Object()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933D664(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_239352680();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

uint64_t sub_23933D6E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352680();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s5FrameV10PointCloudVwxx()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s5FrameV10PointCloudVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s5FrameV10PointCloudVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

__n128 _s5FrameV10PointCloudVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t _s5FrameV10PointCloudVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  return a1;
}

uint64_t _s5FrameV10PointCloudVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5FrameV10PointCloudVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Frame.PointCloud()
{
  return &type metadata for ObjectCaptureSession.Frame.PointCloud;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Mesh()
{
  return &type metadata for ObjectCaptureSession.Mesh;
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Mesh.Anchor(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_239352020();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)a1 + v12) = v14;
    v15 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v15;
    v16 = a3[9];
    v17 = a3[10];
    v18 = (_OWORD *)((char *)a1 + v16);
    v19 = (_OWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v19[3];
    v18[2] = v19[2];
    v18[3] = v21;
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    v22 = a3[12];
    *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
    *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v23 = v10;
    v24 = v11;
    v25 = v14;
    v26 = v15;
  }
  return a1;
}

void destroy for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = a3[9];
  v16 = a3[10];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v22 = v9;
  v23 = v10;
  v24 = v13;
  v25 = v14;
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  v19 = a3[8];
  v20 = *(void **)(a1 + v19);
  v21 = *(void **)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v21;
  v22 = v21;

  v23 = a3[9];
  v24 = (_OWORD *)(a1 + v23);
  v25 = (_OWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  v24[2] = v25[2];
  v24[3] = v25[3];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[9];
  v10 = a3[10];
  v11 = (_OWORD *)(a1 + v9);
  v12 = (_OWORD *)(a2 + v9);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = v12[3];
  v11[2] = v12[2];
  v11[3] = v14;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v15 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for ObjectCaptureSession.Mesh.Anchor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[7];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[8];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  v15 = a3[9];
  v16 = a3[10];
  v17 = (_OWORD *)(a1 + v15);
  v18 = (_OWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v21 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Mesh.Anchor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933DEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_239352020();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Mesh.Anchor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933DF30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_239352020();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23933DFA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352020();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for ObjectCaptureSession.Shot(id *a1)
{

}

_QWORD *initializeWithCopy for ObjectCaptureSession.Shot(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

_QWORD *assignWithCopy for ObjectCaptureSession.Shot(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a1[2];
  v8 = (void *)a2[2];
  a1[2] = v8;
  v9 = v8;

  v10 = (void *)a1[3];
  v11 = (void *)a2[3];
  a1[3] = v11;
  v12 = v11;

  v13 = (void *)a1[4];
  v14 = (void *)a2[4];
  a1[4] = v14;
  v15 = v14;

  return a1;
}

uint64_t assignWithTake for ObjectCaptureSession.Shot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Shot(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Shot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Shot()
{
  return &type metadata for ObjectCaptureSession.Shot;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata()
{
  return &type metadata for ObjectCaptureSession.Metadata;
}

uint64_t initializeWithCopy for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ObjectCaptureSession.Metadata.Session(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 36))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Session()
{
  return &type metadata for ObjectCaptureSession.Metadata.Session;
}

uint64_t _s6CoreOC20ObjectCaptureSessionC8MetadataO7SessionV10ProvenanceVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ObjectCaptureSession.Metadata.Session.Provenance(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ObjectCaptureSession.Metadata.Session.Provenance(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ObjectCaptureSession.Metadata.Session.Provenance(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for ObjectCaptureSession.Metadata.Session.Provenance(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session.Provenance(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Session.Provenance(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Session.Provenance()
{
  return &type metadata for ObjectCaptureSession.Metadata.Session.Provenance;
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Metadata.Shot(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _OWORD *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  _OWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  id v74;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_OWORD *)((char *)a2 + v7 + 16);
    *v8 = *(_OWORD *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(_OWORD *)((char *)a2 + v7 + 80);
    v8[4] = *(_OWORD *)((char *)a2 + v7 + 64);
    v8[5] = v11;
    v8[6] = *(_OWORD *)((char *)a2 + v7 + 96);
    v12 = *(_OWORD *)((char *)a2 + v7 + 48);
    v8[2] = *(_OWORD *)((char *)a2 + v7 + 32);
    v8[3] = v12;
    v13 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
    v14 = v13[6];
    v15 = (char *)v8 + v14;
    v16 = &v9[v14];
    v17 = sub_239352674();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 2, v17))
    {
      v19 = sub_239352680();
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 2, v17);
    }
    v21 = v13[7];
    v22 = *(void **)&v9[v21];
    *(_QWORD *)((char *)v8 + v21) = v22;
    v23 = v13[8];
    v24 = (char *)v8 + v23;
    v25 = &v9[v23];
    v26 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v26;
    v24[64] = v25[64];
    v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v27;
    v28 = v13[9];
    v29 = (char *)v8 + v28;
    v30 = &v9[v28];
    v29[64] = v30[64];
    v31 = *((_OWORD *)v30 + 3);
    *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    *((_OWORD *)v29 + 3) = v31;
    v32 = *((_OWORD *)v30 + 1);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v32;
    v33 = v13[10];
    v34 = (char *)v8 + v33;
    v35 = &v9[v33];
    v34[64] = v35[64];
    v36 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v36;
    v37 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v37;
    *(_QWORD *)((char *)v8 + v13[11]) = *(_QWORD *)&v9[v13[11]];
    *(_QWORD *)((char *)v8 + v13[12]) = *(_QWORD *)&v9[v13[12]];
    v38 = a3[6];
    __dst = (char *)v4 + v38;
    v39 = (char *)a2 + v38;
    v40 = sub_239352020();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    v43 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42(v39, 1, v40))
    {
      v44 = sub_23925FB08(&qword_2569281C0);
      memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dst, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
    }
    v45 = a3[7];
    v46 = (char *)v4 + v45;
    v47 = (char *)a2 + v45;
    v48 = (void *)*((_QWORD *)v47 + 16);
    if (v48 == (void *)1)
    {
      v49 = *((_OWORD *)v47 + 7);
      *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
      *((_OWORD *)v46 + 7) = v49;
      *((_OWORD *)v46 + 8) = *((_OWORD *)v47 + 8);
      v46[144] = v47[144];
      v50 = *((_OWORD *)v47 + 3);
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
      *((_OWORD *)v46 + 3) = v50;
      v51 = *((_OWORD *)v47 + 5);
      *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
      *((_OWORD *)v46 + 5) = v51;
      v52 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v52;
    }
    else
    {
      v53 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v53;
      v54 = *((_OWORD *)v47 + 3);
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
      *((_OWORD *)v46 + 3) = v54;
      v55 = *((_OWORD *)v47 + 5);
      *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
      *((_OWORD *)v46 + 5) = v55;
      v56 = *((_OWORD *)v47 + 7);
      *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
      *((_OWORD *)v46 + 7) = v56;
      v46[144] = v47[144];
      v57 = *((_QWORD *)v47 + 17);
      *((_QWORD *)v46 + 16) = v48;
      *((_QWORD *)v46 + 17) = v57;
      v58 = v48;
    }
    v59 = a3[8];
    v60 = a3[9];
    v61 = (_OWORD *)((char *)v4 + v59);
    v62 = (_OWORD *)((char *)a2 + v59);
    v63 = v62[3];
    v61[2] = v62[2];
    v61[3] = v63;
    *(_OWORD *)((char *)v61 + 58) = *(_OWORD *)((char *)v62 + 58);
    v64 = v62[1];
    *v61 = *v62;
    v61[1] = v64;
    *((_BYTE *)v4 + v60) = *((_BYTE *)a2 + v60);
    v65 = a3[10];
    v66 = a3[11];
    v67 = (_OWORD *)((char *)v4 + v65);
    v68 = (_OWORD *)((char *)a2 + v65);
    *v67 = *v68;
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v68 + 9);
    v69 = *(void **)((char *)a2 + v66);
    *(_QWORD *)((char *)v4 + v66) = v69;
    v70 = a3[12];
    v71 = a3[13];
    v72 = (char *)v4 + v70;
    v73 = (char *)a2 + v70;
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v72[8] = v73[8];
    *(_QWORD *)((char *)v4 + v71) = *(_QWORD *)((char *)a2 + v71);
    v74 = v69;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ObjectCaptureSession.Metadata.Shot(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_239352674();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[6];
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = *(void **)(a1 + a2[7] + 128);
  if (v12 != (void *)1)

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ObjectCaptureSession.Metadata.Shot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  id v72;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = v10;
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  v11 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v11;
  v12 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v13 = v12[6];
  v14 = (char *)v7 + v13;
  v15 = &v8[v13];
  v16 = sub_239352674();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
  {
    v18 = sub_239352680();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  v19 = v12[7];
  v20 = *(void **)&v8[v19];
  *(_QWORD *)((char *)v7 + v19) = v20;
  v21 = v12[8];
  v22 = (char *)v7 + v21;
  v23 = &v8[v21];
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  v26 = v12[9];
  v27 = (char *)v7 + v26;
  v28 = &v8[v26];
  v27[64] = v28[64];
  v29 = *((_OWORD *)v28 + 3);
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  *((_OWORD *)v27 + 3) = v29;
  v30 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v30;
  v31 = v12[10];
  v32 = (char *)v7 + v31;
  v33 = &v8[v31];
  v32[64] = v33[64];
  v34 = *((_OWORD *)v33 + 3);
  *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
  *((_OWORD *)v32 + 3) = v34;
  v35 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v35;
  *(_QWORD *)((char *)v7 + v12[11]) = *(_QWORD *)&v8[v12[11]];
  *(_QWORD *)((char *)v7 + v12[12]) = *(_QWORD *)&v8[v12[12]];
  v36 = a3[6];
  __dst = (char *)a1 + v36;
  v37 = (char *)a2 + v36;
  v38 = sub_239352020();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40(v37, 1, v38))
  {
    v42 = sub_23925FB08(&qword_2569281C0);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  v43 = a3[7];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = (void *)*((_QWORD *)v45 + 16);
  if (v46 == (void *)1)
  {
    v47 = *((_OWORD *)v45 + 7);
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    *((_OWORD *)v44 + 7) = v47;
    *((_OWORD *)v44 + 8) = *((_OWORD *)v45 + 8);
    v44[144] = v45[144];
    v48 = *((_OWORD *)v45 + 3);
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
    *((_OWORD *)v44 + 3) = v48;
    v49 = *((_OWORD *)v45 + 5);
    *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
    *((_OWORD *)v44 + 5) = v49;
    v50 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v50;
  }
  else
  {
    v51 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v51;
    v52 = *((_OWORD *)v45 + 3);
    *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
    *((_OWORD *)v44 + 3) = v52;
    v53 = *((_OWORD *)v45 + 5);
    *((_OWORD *)v44 + 4) = *((_OWORD *)v45 + 4);
    *((_OWORD *)v44 + 5) = v53;
    v54 = *((_OWORD *)v45 + 7);
    *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
    *((_OWORD *)v44 + 7) = v54;
    v44[144] = v45[144];
    v55 = *((_QWORD *)v45 + 17);
    *((_QWORD *)v44 + 16) = v46;
    *((_QWORD *)v44 + 17) = v55;
    v56 = v46;
  }
  v57 = a3[8];
  v58 = a3[9];
  v59 = (_OWORD *)((char *)a1 + v57);
  v60 = (_OWORD *)((char *)a2 + v57);
  v61 = v60[3];
  v59[2] = v60[2];
  v59[3] = v61;
  *(_OWORD *)((char *)v59 + 58) = *(_OWORD *)((char *)v60 + 58);
  v62 = v60[1];
  *v59 = *v60;
  v59[1] = v62;
  *((_BYTE *)a1 + v58) = *((_BYTE *)a2 + v58);
  v63 = a3[10];
  v64 = a3[11];
  v65 = (_OWORD *)((char *)a1 + v63);
  v66 = (_OWORD *)((char *)a2 + v63);
  *v65 = *v66;
  *(_OWORD *)((char *)v65 + 9) = *(_OWORD *)((char *)v66 + 9);
  v67 = *(void **)((char *)a2 + v64);
  *(_QWORD *)((char *)a1 + v64) = v67;
  v68 = a3[12];
  v69 = a3[13];
  v70 = (char *)a1 + v68;
  v71 = (char *)a2 + v68;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v70[8] = v71[8];
  *(_QWORD *)((char *)a1 + v69) = *(_QWORD *)((char *)a2 + v69);
  v72 = v67;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ObjectCaptureSession.Metadata.Shot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  _OWORD *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  void *v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  _OWORD *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  _OWORD *v86;
  __int128 *v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;

  *a1 = *a2;
  v4 = a3[5];
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  *v5 = *(_OWORD *)((char *)a2 + v4);
  v5[1] = *(_OWORD *)((char *)a2 + v4 + 16);
  v5[2] = *(_OWORD *)((char *)a2 + v4 + 32);
  v5[3] = *(_OWORD *)((char *)a2 + v4 + 48);
  v5[4] = *(_OWORD *)((char *)a2 + v4 + 64);
  v5[5] = *(_OWORD *)((char *)a2 + v4 + 80);
  v5[6] = *(_OWORD *)((char *)a2 + v4 + 96);
  v7 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v8 = v7[6];
  v9 = (char *)v5 + v8;
  v10 = &v6[v8];
  v11 = sub_239352674();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 2, v11);
  v15 = v13(v10, 2, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_239352680();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = v7[7];
  v18 = *(void **)((char *)v5 + v17);
  v19 = *(void **)&v6[v17];
  *(_QWORD *)((char *)v5 + v17) = v19;
  v20 = v19;

  v21 = v7[8];
  v22 = (char *)v5 + v21;
  v23 = &v6[v21];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v24 = *((_OWORD *)v23 + 1);
  v25 = *((_OWORD *)v23 + 2);
  v26 = *((_OWORD *)v23 + 3);
  v22[64] = v23[64];
  *((_OWORD *)v22 + 2) = v25;
  *((_OWORD *)v22 + 3) = v26;
  *((_OWORD *)v22 + 1) = v24;
  v27 = v7[9];
  v28 = (char *)v5 + v27;
  v29 = &v6[v27];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v30 = *((_OWORD *)v29 + 1);
  v31 = *((_OWORD *)v29 + 2);
  v32 = *((_OWORD *)v29 + 3);
  v28[64] = v29[64];
  *((_OWORD *)v28 + 2) = v31;
  *((_OWORD *)v28 + 3) = v32;
  *((_OWORD *)v28 + 1) = v30;
  v33 = v7[10];
  v34 = (char *)v5 + v33;
  v35 = &v6[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v36 = *((_OWORD *)v35 + 1);
  v37 = *((_OWORD *)v35 + 2);
  v38 = *((_OWORD *)v35 + 3);
  v34[64] = v35[64];
  *((_OWORD *)v34 + 2) = v37;
  *((_OWORD *)v34 + 3) = v38;
  *((_OWORD *)v34 + 1) = v36;
  *(_QWORD *)((char *)v5 + v7[11]) = *(_QWORD *)&v6[v7[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v5 + v7[12]) = *(_QWORD *)&v6[v7[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[6];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_239352020();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
LABEL_12:
    v47 = sub_23925FB08(&qword_2569281C0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
LABEL_13:
  v48 = a3[7];
  v49 = (uint64_t)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = *(void **)((char *)a1 + v48 + 128);
  v52 = *(_QWORD *)((char *)a2 + v48 + 128);
  if (v51 == (void *)1)
  {
    if (v52 == 1)
    {
      v53 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *(_OWORD *)(v49 + 16) = v53;
      v54 = *((_OWORD *)v50 + 2);
      v55 = *((_OWORD *)v50 + 3);
      v56 = *((_OWORD *)v50 + 5);
      *(_OWORD *)(v49 + 64) = *((_OWORD *)v50 + 4);
      *(_OWORD *)(v49 + 80) = v56;
      *(_OWORD *)(v49 + 32) = v54;
      *(_OWORD *)(v49 + 48) = v55;
      v57 = *((_OWORD *)v50 + 6);
      v58 = *((_OWORD *)v50 + 7);
      v59 = *((_OWORD *)v50 + 8);
      *(_BYTE *)(v49 + 144) = v50[144];
      *(_OWORD *)(v49 + 112) = v58;
      *(_OWORD *)(v49 + 128) = v59;
      *(_OWORD *)(v49 + 96) = v57;
    }
    else
    {
      v67 = *(_OWORD *)v50;
      v68 = *((_OWORD *)v50 + 1);
      v69 = *((_OWORD *)v50 + 3);
      *(_OWORD *)(v49 + 32) = *((_OWORD *)v50 + 2);
      *(_OWORD *)(v49 + 48) = v69;
      *(_OWORD *)v49 = v67;
      *(_OWORD *)(v49 + 16) = v68;
      v70 = *((_OWORD *)v50 + 4);
      v71 = *((_OWORD *)v50 + 5);
      v72 = *((_OWORD *)v50 + 7);
      *(_OWORD *)(v49 + 96) = *((_OWORD *)v50 + 6);
      *(_OWORD *)(v49 + 112) = v72;
      *(_OWORD *)(v49 + 64) = v70;
      *(_OWORD *)(v49 + 80) = v71;
      v73 = (void *)*((_QWORD *)v50 + 16);
      *(_QWORD *)(v49 + 128) = v73;
      v74 = *((_QWORD *)v50 + 17);
      *(_BYTE *)(v49 + 144) = v50[144];
      *(_QWORD *)(v49 + 136) = v74;
      v75 = v73;
    }
  }
  else if (v52 == 1)
  {
    sub_23933F298(v49);
    v60 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v60;
    v61 = *((_OWORD *)v50 + 5);
    v63 = *((_OWORD *)v50 + 2);
    v62 = *((_OWORD *)v50 + 3);
    *(_OWORD *)(v49 + 64) = *((_OWORD *)v50 + 4);
    *(_OWORD *)(v49 + 80) = v61;
    *(_OWORD *)(v49 + 32) = v63;
    *(_OWORD *)(v49 + 48) = v62;
    v65 = *((_OWORD *)v50 + 7);
    v64 = *((_OWORD *)v50 + 8);
    v66 = *((_OWORD *)v50 + 6);
    *(_BYTE *)(v49 + 144) = v50[144];
    *(_OWORD *)(v49 + 112) = v65;
    *(_OWORD *)(v49 + 128) = v64;
    *(_OWORD *)(v49 + 96) = v66;
  }
  else
  {
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = *((_OWORD *)v50 + 1);
    *(_OWORD *)(v49 + 32) = *((_OWORD *)v50 + 2);
    *(_OWORD *)(v49 + 48) = *((_OWORD *)v50 + 3);
    *(_OWORD *)(v49 + 64) = *((_OWORD *)v50 + 4);
    *(_OWORD *)(v49 + 80) = *((_OWORD *)v50 + 5);
    *(_OWORD *)(v49 + 96) = *((_OWORD *)v50 + 6);
    *(_OWORD *)(v49 + 112) = *((_OWORD *)v50 + 7);
    v76 = (void *)*((_QWORD *)v50 + 16);
    *(_QWORD *)(v49 + 128) = v76;
    v77 = v76;

    v78 = *((_QWORD *)v50 + 17);
    *(_BYTE *)(v49 + 144) = v50[144];
    *(_QWORD *)(v49 + 136) = v78;
  }
  v79 = a3[8];
  v80 = (_OWORD *)((char *)a1 + v79);
  v81 = (_OWORD *)((char *)a2 + v79);
  *v80 = *v81;
  v82 = v81[1];
  v83 = v81[2];
  v84 = v81[3];
  *(_OWORD *)((char *)v80 + 58) = *(_OWORD *)((char *)v81 + 58);
  v80[2] = v83;
  v80[3] = v84;
  v80[1] = v82;
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v85 = a3[10];
  v86 = (_OWORD *)((char *)a1 + v85);
  v87 = (__int128 *)((char *)a2 + v85);
  v88 = *v87;
  *(_OWORD *)((char *)v86 + 9) = *(__int128 *)((char *)v87 + 9);
  *v86 = v88;
  v89 = a3[11];
  v90 = *(void **)((char *)a1 + v89);
  v91 = *(void **)((char *)a2 + v89);
  *(_QWORD *)((char *)a1 + v89) = v91;
  v92 = v91;

  v93 = a3[12];
  v94 = (char *)a1 + v93;
  v95 = (char *)a2 + v93;
  v96 = *(_QWORD *)v95;
  v94[8] = v95[8];
  *(_QWORD *)v94 = v96;
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23933F298(uint64_t a1)
{

  return a1;
}

_QWORD *initializeWithTake for ObjectCaptureSession.Metadata.Shot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = v10;
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  v11 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v11;
  v12 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v13 = v12[6];
  v14 = (char *)v7 + v13;
  v15 = &v8[v13];
  v16 = sub_239352674();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
  {
    v18 = sub_239352680();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  *(_QWORD *)((char *)v7 + v12[7]) = *(_QWORD *)&v8[v12[7]];
  v19 = v12[8];
  v20 = (char *)v7 + v19;
  v21 = &v8[v19];
  v22 = *((_OWORD *)v21 + 3);
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  *((_OWORD *)v20 + 3) = v22;
  v20[64] = v21[64];
  v23 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  v24 = v12[9];
  v25 = (char *)v7 + v24;
  v26 = &v8[v24];
  v25[64] = v26[64];
  v27 = *((_OWORD *)v26 + 3);
  *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
  *((_OWORD *)v25 + 3) = v27;
  v28 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  v29 = v12[10];
  v30 = (char *)v7 + v29;
  v31 = &v8[v29];
  v30[64] = v31[64];
  v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  *(_QWORD *)((char *)v7 + v12[11]) = *(_QWORD *)&v8[v12[11]];
  *(_QWORD *)((char *)v7 + v12[12]) = *(_QWORD *)&v8[v12[12]];
  v34 = a3[6];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_239352020();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = sub_23925FB08(&qword_2569281C0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v40 = a3[7];
  v41 = a3[8];
  v42 = (char *)a1 + v40;
  v43 = (char *)a2 + v40;
  v42[144] = v43[144];
  v44 = *((_OWORD *)v43 + 5);
  *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
  *((_OWORD *)v42 + 5) = v44;
  v45 = *((_OWORD *)v43 + 3);
  *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
  *((_OWORD *)v42 + 3) = v45;
  v46 = *((_OWORD *)v43 + 8);
  v47 = *((_OWORD *)v43 + 6);
  *((_OWORD *)v42 + 7) = *((_OWORD *)v43 + 7);
  *((_OWORD *)v42 + 8) = v46;
  *((_OWORD *)v42 + 6) = v47;
  v48 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v48;
  v49 = (_OWORD *)((char *)a1 + v41);
  v50 = (_OWORD *)((char *)a2 + v41);
  *(_OWORD *)((char *)v49 + 58) = *(_OWORD *)((char *)v50 + 58);
  v51 = v50[3];
  v49[2] = v50[2];
  v49[3] = v51;
  v52 = v50[1];
  *v49 = *v50;
  v49[1] = v52;
  v53 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v54 = (_OWORD *)((char *)a1 + v53);
  v55 = (_OWORD *)((char *)a2 + v53);
  *v54 = *v55;
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v55 + 9);
  v56 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  return a1;
}

_QWORD *assignWithTake for ObjectCaptureSession.Metadata.Shot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  _OWORD *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  _OWORD *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;

  *a1 = *a2;
  v4 = a3[5];
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = *(_OWORD *)((char *)a2 + v4 + 16);
  *v5 = *(_OWORD *)((char *)a2 + v4);
  v5[1] = v7;
  v8 = *(_OWORD *)((char *)a2 + v4 + 48);
  v5[2] = *(_OWORD *)((char *)a2 + v4 + 32);
  v5[3] = v8;
  v9 = *(_OWORD *)((char *)a2 + v4 + 80);
  v5[4] = *(_OWORD *)((char *)a2 + v4 + 64);
  v5[5] = v9;
  v5[6] = *(_OWORD *)((char *)a2 + v4 + 96);
  v10 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v11 = v10[6];
  v12 = (char *)v5 + v11;
  v13 = &v6[v11];
  v14 = sub_239352674();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 2, v14);
  v18 = v16(v13, 2, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 2, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_239352680();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = v10[7];
  v21 = *(void **)((char *)v5 + v20);
  *(_QWORD *)((char *)v5 + v20) = *(_QWORD *)&v6[v20];

  v22 = v10[8];
  v23 = (char *)v5 + v22;
  v24 = &v6[v22];
  v25 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = v24[64];
  v26 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  v27 = v10[9];
  v28 = (char *)v5 + v27;
  v29 = &v6[v27];
  v30 = *((_OWORD *)v29 + 3);
  *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
  *((_OWORD *)v28 + 3) = v30;
  v28[64] = v29[64];
  v31 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v31;
  v32 = v10[10];
  v33 = (char *)v5 + v32;
  v34 = &v6[v32];
  v33[64] = v34[64];
  v35 = *((_OWORD *)v34 + 3);
  *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
  *((_OWORD *)v33 + 3) = v35;
  v36 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v36;
  *(_QWORD *)((char *)v5 + v10[11]) = *(_QWORD *)&v6[v10[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v5 + v10[12]) = *(_QWORD *)&v6[v10[12]];
  swift_bridgeObjectRelease();
  v37 = a3[6];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_239352020();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
LABEL_12:
    v45 = sub_23925FB08(&qword_2569281C0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v38, v39, v40);
LABEL_13:
  v46 = a3[7];
  v47 = (uint64_t)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = *(void **)((char *)a1 + v46 + 128);
  if (v49 != (void *)1)
  {
    v50 = *((_QWORD *)v48 + 16);
    if (v50 != 1)
    {
      v55 = *((_OWORD *)v48 + 1);
      *(_OWORD *)v47 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 16) = v55;
      v56 = *((_OWORD *)v48 + 3);
      *(_OWORD *)(v47 + 32) = *((_OWORD *)v48 + 2);
      *(_OWORD *)(v47 + 48) = v56;
      v57 = *((_OWORD *)v48 + 5);
      *(_OWORD *)(v47 + 64) = *((_OWORD *)v48 + 4);
      *(_OWORD *)(v47 + 80) = v57;
      v58 = *((_OWORD *)v48 + 7);
      *(_OWORD *)(v47 + 96) = *((_OWORD *)v48 + 6);
      *(_OWORD *)(v47 + 112) = v58;
      *(_QWORD *)(v47 + 128) = v50;

      *(_QWORD *)(v47 + 136) = *((_QWORD *)v48 + 17);
      *(_BYTE *)(v47 + 144) = v48[144];
      goto LABEL_18;
    }
    sub_23933F298(v47);
  }
  v51 = *((_OWORD *)v48 + 7);
  *(_OWORD *)(v47 + 96) = *((_OWORD *)v48 + 6);
  *(_OWORD *)(v47 + 112) = v51;
  *(_OWORD *)(v47 + 128) = *((_OWORD *)v48 + 8);
  *(_BYTE *)(v47 + 144) = v48[144];
  v52 = *((_OWORD *)v48 + 3);
  *(_OWORD *)(v47 + 32) = *((_OWORD *)v48 + 2);
  *(_OWORD *)(v47 + 48) = v52;
  v53 = *((_OWORD *)v48 + 5);
  *(_OWORD *)(v47 + 64) = *((_OWORD *)v48 + 4);
  *(_OWORD *)(v47 + 80) = v53;
  v54 = *((_OWORD *)v48 + 1);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v54;
LABEL_18:
  v59 = a3[8];
  v60 = a3[9];
  v61 = (_OWORD *)((char *)a1 + v59);
  v62 = (_OWORD *)((char *)a2 + v59);
  v63 = v62[3];
  v61[2] = v62[2];
  v61[3] = v63;
  *(_OWORD *)((char *)v61 + 58) = *(_OWORD *)((char *)v62 + 58);
  v64 = v62[1];
  *v61 = *v62;
  v61[1] = v64;
  *((_BYTE *)a1 + v60) = *((_BYTE *)a2 + v60);
  v65 = a3[10];
  v66 = a3[11];
  v67 = (_OWORD *)((char *)a1 + v65);
  v68 = (_OWORD *)((char *)a2 + v65);
  *v67 = *v68;
  *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v68 + 9);
  v69 = *(void **)((char *)a1 + v66);
  *(_QWORD *)((char *)a1 + v66) = *(_QWORD *)((char *)a2 + v66);

  v70 = a3[12];
  v71 = a3[13];
  v72 = (char *)a1 + v70;
  v73 = (char *)a2 + v70;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  *(_QWORD *)((char *)a1 + v71) = *(_QWORD *)((char *)a2 + v71);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933F97C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_23925FB08(&qword_2569281C0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[13]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23933FA30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_23925FB08(&qword_2569281C0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[13]) = (a2 - 1);
  return result;
}

void sub_23933FAD4()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(319);
  if (v0 <= 0x3F)
  {
    sub_23926B494(319, qword_2569276A0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  id v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v8;
    v9 = *((_OWORD *)a2 + 5);
    a1[4] = *((_OWORD *)a2 + 4);
    a1[5] = v9;
    v10 = a3[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[6] = *((_OWORD *)a2 + 6);
    v13 = sub_239352674();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    {
      v15 = sub_239352680();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)v4 + v17) = v19;
    v20 = (char *)v4 + v18;
    v21 = (uint64_t)a2 + v18;
    v20[64] = *(_BYTE *)(v21 + 64);
    v22 = *(_OWORD *)(v21 + 48);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
    *((_OWORD *)v20 + 3) = v22;
    v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (char *)v4 + v24;
    v27 = (uint64_t)a2 + v24;
    v26[64] = *(_BYTE *)(v27 + 64);
    v28 = *(_OWORD *)(v27 + 48);
    *((_OWORD *)v26 + 2) = *(_OWORD *)(v27 + 32);
    *((_OWORD *)v26 + 3) = v28;
    v29 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v29;
    v30 = (char *)v4 + v25;
    v31 = (uint64_t)a2 + v25;
    v30[64] = *(_BYTE *)(v31 + 64);
    v32 = *(_OWORD *)(v31 + 48);
    *((_OWORD *)v30 + 2) = *(_OWORD *)(v31 + 32);
    *((_OWORD *)v30 + 3) = v32;
    v33 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v33;
    v34 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(_QWORD *)((char *)v4 + v34) = *(uint64_t *)((char *)a2 + v34);
    v35 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ObjectCaptureSession.Metadata.Shot.Camera(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_239352674();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  id v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    v14 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  v18[64] = v19[64];
  v20 = *((_OWORD *)v19 + 3);
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  *((_OWORD *)v18 + 3) = v20;
  v21 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  v24[64] = v25[64];
  v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  v28 = (char *)a1 + v23;
  v29 = (char *)a2 + v23;
  v28[64] = v29[64];
  v30 = *((_OWORD *)v29 + 3);
  *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
  *((_OWORD *)v28 + 3) = v30;
  v31 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v31;
  v32 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  v33 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *assignWithCopy for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_239352674();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_239352680();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  v15 = a3[7];
  v16 = *(void **)((char *)a1 + v15);
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = v17;

  v19 = a3[8];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v22 = *((_OWORD *)v21 + 1);
  v23 = *((_OWORD *)v21 + 2);
  v24 = *((_OWORD *)v21 + 3);
  v20[64] = v21[64];
  *((_OWORD *)v20 + 2) = v23;
  *((_OWORD *)v20 + 3) = v24;
  *((_OWORD *)v20 + 1) = v22;
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = *((_OWORD *)v27 + 1);
  v29 = *((_OWORD *)v27 + 2);
  v30 = *((_OWORD *)v27 + 3);
  v26[64] = v27[64];
  *((_OWORD *)v26 + 2) = v29;
  *((_OWORD *)v26 + 3) = v30;
  *((_OWORD *)v26 + 1) = v28;
  v31 = a3[10];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  v34 = *((_OWORD *)v33 + 1);
  v35 = *((_OWORD *)v33 + 2);
  v36 = *((_OWORD *)v33 + 3);
  v32[64] = v33[64];
  *((_OWORD *)v32 + 2) = v35;
  *((_OWORD *)v32 + 3) = v36;
  *((_OWORD *)v32 + 1) = v34;
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    v14 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  v15 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v16[64] = v17[64];
  v18 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v18;
  v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  v20 = a3[9];
  v21 = a3[10];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  v22[64] = v23[64];
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  v26 = (char *)a1 + v21;
  v27 = (char *)a2 + v21;
  v26[64] = v27[64];
  v28 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v28;
  v29 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  v30 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  return a1;
}

_OWORD *assignWithTake for ObjectCaptureSession.Metadata.Shot.Camera(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_239352674();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 2, v12);
  v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_239352680();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  v18 = a3[7];
  v19 = *(void **)((char *)a1 + v18);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);

  v20 = a3[8];
  v21 = a3[9];
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  v22[64] = v23[64];
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  v26 = (char *)a1 + v21;
  v27 = (char *)a2 + v21;
  v26[64] = v27[64];
  v28 = *((_OWORD *)v27 + 3);
  *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 3) = v28;
  v29 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v29;
  v30 = a3[10];
  v31 = a3[11];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  v34 = *(_OWORD *)v33;
  v35 = *((_OWORD *)v33 + 1);
  v36 = *((_OWORD *)v33 + 2);
  v37 = *((_OWORD *)v33 + 3);
  v32[64] = v33[64];
  *((_OWORD *)v32 + 2) = v36;
  *((_OWORD *)v32 + 3) = v37;
  *(_OWORD *)v32 = v34;
  *((_OWORD *)v32 + 1) = v35;
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Camera()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2393404C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_239352680();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Camera()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934054C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_239352680();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t sub_2393405C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352680();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.CaptureMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2393406B8 + 4 * byte_239356798[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2393406EC + 4 * byte_239356793[v4]))();
}

uint64_t sub_2393406EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2393406F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2393406FCLL);
  return result;
}

uint64_t sub_239340708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x239340710);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_239340714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23934071C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Shot.CaptureMode()
{
  return &type metadata for ObjectCaptureSession.Metadata.Shot.CaptureMode;
}

void destroy for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1)
{

}

uint64_t initializeWithCopy for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  id v9;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v7 = *(void **)(a2 + 128);
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v7;
  *(_QWORD *)(a1 + 136) = v8;
  v9 = v7;
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v4 = *(void **)(a1 + 128);
  v5 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v7;
  return a1;
}

__n128 initializeWithTake for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Object(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 145))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 128);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Object(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 144) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 145) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 145) = 0;
    if (a2)
      *(_QWORD *)(result + 128) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Shot.Object()
{
  return &type metadata for ObjectCaptureSession.Metadata.Shot.Object;
}

__n128 initializeWithCopy for ObjectCaptureSession.Metadata.Shot.Scene(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Scene(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.Metadata.Shot.Scene(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 73) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.Metadata.Shot.Scene()
{
  return &type metadata for ObjectCaptureSession.Metadata.Shot.Scene;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.CaptureOptions(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.CaptureOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.CaptureOptions()
{
  return &type metadata for ObjectCaptureSession.CaptureOptions;
}

uint64_t type metadata accessor for ObjectCaptureSession.ShotAnchor()
{
  return objc_opt_self();
}

__n128 initializeWithCopy for ObjectCaptureSession.CameraInfos(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.CameraInfos(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 225))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.CameraInfos(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 224) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 225) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.CameraInfos()
{
  return &type metadata for ObjectCaptureSession.CameraInfos;
}

uint64_t method lookup function for ObjectCaptureSessionObservingPublishers()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.framePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.meshPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.tapPositionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.planeDetectionPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.explicitFeedbackPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.cameraControlPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.shotCameraPosePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ObjectCaptureSessionObservingPublishers.shotCameraInvalidPoseNumPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t method lookup function for ObjectCaptureSessionWritingPublishers()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.shotPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.shotMetadataPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.sessionMetadataPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.planesPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.depthPointCloudPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.meshPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ObjectCaptureSessionWritingPublishers.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t destroy for ObjectCaptureSessionFrameSPI(uint64_t a1)
{
  if (*(_QWORD *)a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 336))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectCaptureSessionFrameSPI(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  id v39;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    v10 = *(_QWORD *)(a2 + 56);
    v11 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    *(_QWORD *)(a1 + 64) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v16 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v16;
  v17 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v17;
  v18 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 240) = v18;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  v19 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v19;
  v20 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v20;
  v21 = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v18;
  swift_bridgeObjectRetain();
  if (v21)
  {
    v23 = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 336) = v21;
    *(_QWORD *)(a1 + 344) = v23;
    v24 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v24;
    v25 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v26;
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    v27 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v27;
  }
  v28 = *(void **)(a2 + 416);
  *(_QWORD *)(a1 + 416) = v28;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  v29 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v29;
  v30 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v30;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  v31 = *(_OWORD *)(a2 + 528);
  v32 = *(_OWORD *)(a2 + 544);
  v33 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v33;
  *(_OWORD *)(a1 + 528) = v31;
  *(_OWORD *)(a1 + 544) = v32;
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  v34 = *(void **)(a2 + 600);
  *(_QWORD *)(a1 + 600) = v34;
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_BYTE *)(a1 + 620) = *(_BYTE *)(a2 + 620);
  *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
  v35 = *(_OWORD *)(a2 + 624);
  v36 = *(_OWORD *)(a2 + 640);
  v37 = *(_OWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 669) = *(_QWORD *)(a2 + 669);
  *(_OWORD *)(a1 + 640) = v36;
  *(_OWORD *)(a1 + 656) = v37;
  *(_OWORD *)(a1 + 624) = v35;
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  v38 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectCaptureSessionFrameSPI(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  void *v13;
  id v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  int v33;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 8) = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2392A0570(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *((_OWORD *)a2 + 2);
      v6 = *((_OWORD *)a2 + 3);
      v8 = *((_OWORD *)a2 + 1);
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)(a1 + 48) = v6;
      *(_OWORD *)(a1 + 16) = v8;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = *((_OWORD *)a2 + 1);
    v10 = *((_OWORD *)a2 + 2);
    v11 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v9;
  }
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
  *(_QWORD *)(a1 + 160) = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
  *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
  *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
  *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
  v12 = *(void **)(a1 + 240);
  v13 = (void *)a2[30];
  *(_QWORD *)(a1 + 240) = v13;
  v14 = v13;

  *(_QWORD *)(a1 + 256) = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 272) = *((_OWORD *)a2 + 17);
  *(_OWORD *)(a1 + 288) = *((_OWORD *)a2 + 18);
  *(_OWORD *)(a1 + 304) = *((_OWORD *)a2 + 19);
  *(_OWORD *)(a1 + 320) = *((_OWORD *)a2 + 20);
  v15 = (_OWORD *)(a1 + 336);
  v16 = a2 + 42;
  v17 = a2[42];
  if (*(_QWORD *)(a1 + 336))
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 336) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 344) = a2[43];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 352) = *((_OWORD *)a2 + 22);
      *(_OWORD *)(a1 + 368) = *((_OWORD *)a2 + 23);
      *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
      *(_OWORD *)(a1 + 400) = *((_OWORD *)a2 + 25);
    }
    else
    {
      sub_23933B97C(a1 + 336);
      *v15 = *v16;
      v21 = *((_OWORD *)a2 + 25);
      v23 = *((_OWORD *)a2 + 22);
      v22 = *((_OWORD *)a2 + 23);
      *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
      *(_OWORD *)(a1 + 400) = v21;
      *(_OWORD *)(a1 + 352) = v23;
      *(_OWORD *)(a1 + 368) = v22;
    }
  }
  else if (v17)
  {
    *(_QWORD *)(a1 + 336) = v17;
    *(_QWORD *)(a1 + 344) = a2[43];
    v18 = *((_OWORD *)a2 + 22);
    v19 = *((_OWORD *)a2 + 23);
    v20 = *((_OWORD *)a2 + 25);
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    *(_OWORD *)(a1 + 400) = v20;
    *(_OWORD *)(a1 + 352) = v18;
    *(_OWORD *)(a1 + 368) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v15 = *v16;
    v24 = *((_OWORD *)a2 + 22);
    v25 = *((_OWORD *)a2 + 23);
    v26 = *((_OWORD *)a2 + 25);
    *(_OWORD *)(a1 + 384) = *((_OWORD *)a2 + 24);
    *(_OWORD *)(a1 + 400) = v26;
    *(_OWORD *)(a1 + 352) = v24;
    *(_OWORD *)(a1 + 368) = v25;
  }
  v27 = *(void **)(a1 + 416);
  v28 = (void *)a2[52];
  *(_QWORD *)(a1 + 416) = v28;
  v29 = v28;

  *(_QWORD *)(a1 + 432) = a2[54];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 448) = *((_OWORD *)a2 + 28);
  *(_OWORD *)(a1 + 464) = *((_OWORD *)a2 + 29);
  *(_OWORD *)(a1 + 480) = *((_OWORD *)a2 + 30);
  *(_OWORD *)(a1 + 496) = *((_OWORD *)a2 + 31);
  *(_QWORD *)(a1 + 512) = a2[64];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 528) = *((_OWORD *)a2 + 33);
  *(_OWORD *)(a1 + 544) = *((_OWORD *)a2 + 34);
  *(_OWORD *)(a1 + 560) = *((_OWORD *)a2 + 35);
  *(_OWORD *)(a1 + 576) = *((_OWORD *)a2 + 36);
  *(_DWORD *)(a1 + 592) = *((_DWORD *)a2 + 148);
  v30 = *(void **)(a1 + 600);
  v31 = (void *)a2[75];
  *(_QWORD *)(a1 + 600) = v31;
  v32 = v31;

  *(_QWORD *)(a1 + 608) = a2[76];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = *((_DWORD *)a2 + 154);
  *(_BYTE *)(a1 + 620) = *((_BYTE *)a2 + 620);
  *(_DWORD *)(a1 + 616) = v33;
  *(_DWORD *)(a1 + 624) = *((_DWORD *)a2 + 156);
  *(_QWORD *)(a1 + 632) = a2[79];
  *(_DWORD *)(a1 + 640) = *((_DWORD *)a2 + 160);
  *(_DWORD *)(a1 + 644) = *((_DWORD *)a2 + 161);
  *(_QWORD *)(a1 + 648) = a2[81];
  *(_DWORD *)(a1 + 656) = *((_DWORD *)a2 + 164);
  *(_DWORD *)(a1 + 660) = *((_DWORD *)a2 + 165);
  *(_DWORD *)(a1 + 664) = *((_DWORD *)a2 + 166);
  *(_BYTE *)(a1 + 668) = *((_BYTE *)a2 + 668);
  *(_BYTE *)(a1 + 669) = *((_BYTE *)a2 + 669);
  *(_BYTE *)(a1 + 670) = *((_BYTE *)a2 + 670);
  *(_BYTE *)(a1 + 671) = *((_BYTE *)a2 + 671);
  *(_BYTE *)(a1 + 672) = *((_BYTE *)a2 + 672);
  *(_BYTE *)(a1 + 673) = *((_BYTE *)a2 + 673);
  *(_BYTE *)(a1 + 674) = *((_BYTE *)a2 + 674);
  *(_BYTE *)(a1 + 675) = *((_BYTE *)a2 + 675);
  *(_BYTE *)(a1 + 676) = *((_BYTE *)a2 + 676);
  *(_QWORD *)(a1 + 680) = a2[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ObjectCaptureSessionFrameSPI(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2B0uLL);
}

uint64_t assignWithTake for ObjectCaptureSessionFrameSPI(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;

  if (*(_QWORD *)a1)
  {
    if (*(_QWORD *)a2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2392A0570(a1);
  }
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_6:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  v9 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v9;
  v10 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v11;
  v12 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v12;
  if (!*(_QWORD *)(a1 + 336))
  {
LABEL_10:
    v16 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v16;
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    v17 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v17;
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(a2 + 336);
  if (!v13)
  {
    sub_23933B97C(a1 + 336);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 336) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v14;
  v15 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v15;
LABEL_11:
  v18 = *(void **)(a1 + 416);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);

  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRelease();
  v19 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v19;
  v20 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v20;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  swift_bridgeObjectRelease();
  v21 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v21;
  v22 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v22;
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  v23 = *(void **)(a1 + 600);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);

  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
  *(_BYTE *)(a1 + 620) = *(_BYTE *)(a2 + 620);
  *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_DWORD *)(a1 + 664) = *(_DWORD *)(a2 + 664);
  *(_BYTE *)(a1 + 668) = *(_BYTE *)(a2 + 668);
  *(_BYTE *)(a1 + 669) = *(_BYTE *)(a2 + 669);
  *(_BYTE *)(a1 + 670) = *(_BYTE *)(a2 + 670);
  *(_BYTE *)(a1 + 671) = *(_BYTE *)(a2 + 671);
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_BYTE *)(a1 + 673) = *(_BYTE *)(a2 + 673);
  *(_BYTE *)(a1 + 674) = *(_BYTE *)(a2 + 674);
  *(_BYTE *)(a1 + 675) = *(_BYTE *)(a2 + 675);
  *(_BYTE *)(a1 + 676) = *(_BYTE *)(a2 + 676);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSessionFrameSPI(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 688))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 680);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSessionFrameSPI(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 680) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 688) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 680) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 688) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSessionFrameSPI()
{
  return &type metadata for ObjectCaptureSessionFrameSPI;
}

uint64_t type metadata accessor for ObjectCaptureSessionSPI()
{
  return objc_opt_self();
}

uint64_t method lookup function for ObjectCaptureSessionSPI()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugTapPosition(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugTapPosition(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugPlaneDetection(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugPlaneDetection(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugMaskingVoxel(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugMaskingVoxel(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugCameraControl(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugCameraControl(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugDebugVoxels(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugDebugVoxels(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugTsdfDepth(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugTsdfDepth(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugSurfaceGeometryData(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugSurfaceGeometryData(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugCoverageGuideVoxels(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugCoverageGuideVoxels(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugExplicitFeedbackEnabled(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugAutoCaptureEnabled(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setCaptureCoolDown(_:for:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 232))(a1, a2 & 1);
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setReplayVideoURL(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.replayVideoURL(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setDebugWriteAllFramesData(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugWriteAllFramesData(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setRunArkitOnly(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setVoxelIntegrationEnabled(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setExplicitFeedbackEnabled(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setRunCoverage(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setAutoCapture(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setMobileSfMEnabled(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setMobileSfMiPhoneOverride(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.setCaptureRateControlEnabled(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ObjectCaptureSessionSPI.debugOCBundleWriteDisabled(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

_QWORD *sub_239341A84(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_239341A90(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_239341AB0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for CMVideoDimensions(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B608, (uint64_t)&unk_250AC8450, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

__n128 sub_239341AF4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t sub_239341B20(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 144))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_239341B74(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 144) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 1;
  }
  return result;
}

void type metadata accessor for OCProxySurfaceConfig(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B618, (uint64_t)&unk_250AC84D0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

id sub_239341BF8(id result)
{
  if ((char *)result - 7 >= (char *)0xB)
    return sub_2392D0F0C(result);
  return result;
}

uint64_t sub_239341C0C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_239341C30(void *a1, void *a2)
{
  uint64_t v2;

  sub_23930FEBC(a1, a2, *(_BYTE *)(v2 + 16));
}

_BYTE *sub_239341C3C@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_239341CA8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 225))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_239341CC4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 680);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_239341CDC(int a1)
{
  sub_23930F908(a1);
}

uint64_t sub_239341CFC(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 4);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

double sub_239341D18(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 192) = 1;
  return result;
}

uint64_t sub_239341D40(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_239341D5C(uint64_t result)
{
  *(_BYTE *)(result + 192) = 0;
  return result;
}

uint64_t sub_239341D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for OCCaptureData(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v13 = *(_QWORD *)(v2 + 64);
  v4 = sub_239352020();
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v15 = *(_QWORD *)(v4 - 8);
  v16 = v4;

  v14 = v3;
  v6 = v0 + v3;

  if (*(_QWORD *)(v0 + v3 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v7 = v6 + *(int *)(v1 + 40);
  v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v9 = v7 + *(int *)(v8 + 24);
  v10 = sub_239352674();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);

  (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v0 + ((v14 + v13 + v5) & ~v5), v16);
  return swift_deallocObject();
}

void sub_239341F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char *v7;
  id v8;

  v1 = *(_QWORD *)(type metadata accessor for OCCaptureData(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_239352020() - 8) + 80);
  (*(void (**)(id *__return_ptr))((*MEMORY[0x24BEE4EA0] & **(_QWORD **)(v0 + 16)) + 0x420))(&v8);
  if (v8 == (id)15)
  {
    v5 = (v2 + 24) & ~v2;
    v6 = (uint64_t *)(v0 + ((v5 + v3 + v4) & ~v4));
    v7 = (char *)(v0 + v5);
    sub_239331658((id)0xF);
    sub_239331658((id)0xF);
    sub_239304910(v7, v6);
  }
  else
  {
    sub_239331658(v8);
    sub_239331658((id)0xF);
  }
}

uint64_t sub_239341FE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for OCCaptureData(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  v3 = v0 + v2;
  if (*(_QWORD *)(v0 + v2 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v4 = v3 + *(int *)(v1 + 40);
  v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_239352674();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

  return swift_deallocObject();
}

uint64_t sub_239342144()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OCCaptureData(0) - 8) + 80);
  return sub_2392FF3CC(v0 + ((v1 + 24) & ~v1));
}

void type metadata accessor for ThermalState(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B818, (uint64_t)&unk_250AC8908, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for ARSessionState(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B810, (uint64_t)&unk_250AC88E8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for ARError(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B808, (uint64_t)&unk_250AC88C0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

uint64_t sub_2393421D8()
{
  id *v0;

  return swift_deallocObject();
}

void sub_23934220C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  char *v3;
  char *v4;
  id v5;
  char *v6;
  char *v7;
  char *v8;

  v1 = (void *)v0[3];
  v2 = (void *)v0[4];
  v7 = (char *)v0[2];
  type metadata accessor for ARError(0);
  sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
  sub_239351E34();
  if ((unint64_t)(v8 - 101) < 2 || v8 == (char *)200 || v8 == (char *)400)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23935211C();
    swift_release();
    swift_release();
    v3 = v8;
    swift_getKeyPath();
    swift_getKeyPath();
    v1;
    sub_239352128();
    sub_2392F48FC((void **)&v8);
    v4 = v3;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v5 = v2;
    sub_23935211C();
    swift_release();
    swift_release();
    v6 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    v1;
    sub_239352128();
    sub_2392F48FC((void **)&v7);
    v4 = v6;
  }
  sub_239331658(v4);
}

uint64_t sub_239342460()
{
  uint64_t v0;

  return sub_239325F40(*(_BYTE **)(v0 + 16));
}

uint64_t sub_239342468()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_239342494()
{
  uint64_t v0;

  return sub_2393255CC(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23934249C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2393424C0()
{
  uint64_t v0;

  sub_23931B2E0(v0);
}

uint64_t sub_2393424C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2393424F4()
{
  uint64_t v0;

  return sub_23931A79C(*(_QWORD **)(v0 + 16), (float64x2_t *)(v0 + 32), v0 + 80, v0 + 160);
}

uint64_t sub_239342508(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_239342530()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_239342564(uint64_t a1)
{
  uint64_t v1;

  sub_239315998(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B800, (uint64_t)&unk_250AC88A0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void sub_23934258C(_BYTE *a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + 33))
    v2 = 256;
  else
    v2 = 0;
  sub_23930A580(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32), *(void (**)(char *, uint64_t))(v1 + 40), a1, *(__n128 *)(v1 + 48), *(__n128 *)(v1 + 64), *(__n128 *)(v1 + 80), *(__n128 *)(v1 + 96));
}

id sub_2393425D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + 25))
    v2 = 256;
  else
    v2 = 0;
  return sub_239307D08(*(_QWORD *)(v1 + 16), v2 | *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE **)(v1 + 40), a1);
}

__n128 sub_23934261C(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t sub_239342640(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_239342660(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 112) = v3;
  return result;
}

void type metadata accessor for OCMaskingPlane(uint64_t a1)
{
  sub_239342C30(a1, (unint64_t *)&unk_25692B820, (uint64_t)&unk_250AC8980, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.BoundingBoxData()
{
  return &type metadata for ObjectCaptureSession.BoundingBoxData;
}

__n128 initializeWithCopy for ObjectCaptureSession.PlaneData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureSession.PlaneData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureSession.PlaneData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 192) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureSession.PlaneData()
{
  return &type metadata for ObjectCaptureSession.PlaneData;
}

__n128 sub_239342794(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2393427A0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2393427F4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

void type metadata accessor for OCProxySurfaceCoverageGuideConfig(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B830, (uint64_t)&unk_250AC8B18, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OCProxySurfaceDepthRenderingConfig(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B838, (uint64_t)&unk_250AC8B48, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

uint64_t sub_23934286C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 12);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2393428C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)(result + 12) = a2 + 1;
  }
  return result;
}

void type metadata accessor for OCProxySurfacePointCloudSamplingConfig(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B840, (uint64_t)&unk_250AC8BC8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

__n128 initializeWithTake for OCVoxelCloud(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_239342938(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_239342958(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

void type metadata accessor for OCProxySurfaceVoxelIntegrationConfig(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B848, (uint64_t)&unk_250AC8C50, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OCProxySurfacePipelineType(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B850, (uint64_t)&unk_250AC8CA0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

uint64_t sub_2393429D0()
{
  return sub_239262570(&qword_25692B858, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357480);
}

uint64_t sub_2393429FC()
{
  return sub_239262570(&qword_25692B860, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_2393574A8);
}

uint64_t sub_239342A28()
{
  return sub_239262570(&qword_25692B868, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357558);
}

uint64_t sub_239342A54()
{
  return sub_239262570(&qword_25692B870, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357528);
}

uint64_t sub_239342A80()
{
  return sub_239262570(&qword_25692B878, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_2393574E8);
}

uint64_t sub_239342AAC()
{
  return sub_239262570(&qword_25692B880, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_239357638);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B8A0, (uint64_t)&unk_250AC8CC8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

uint64_t sub_239342AF4()
{
  return sub_239262570(&qword_25692B888, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_239357600);
}

unint64_t sub_239342B24()
{
  unint64_t result;

  result = qword_25692B890;
  if (!qword_25692B890)
  {
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25692B890);
  }
  return result;
}

uint64_t sub_239342B68()
{
  return sub_239262570(&qword_25692B898, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_239357670);
}

uint64_t sub_239342B94()
{
  return sub_239262570(&qword_25692B6E8, (uint64_t (*)(uint64_t))type metadata accessor for ARError, (uint64_t)&unk_239357598);
}

void type metadata accessor for OCProxySurfaceCoverageCameraConfig(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B8A8, (uint64_t)&unk_250AC8D40, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OCProxySurfaceDepthImageResolution(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B8B0, (uint64_t)&unk_250AC8D68, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OCProxySurfaceMode(uint64_t a1)
{
  sub_239342C30(a1, &qword_25692B8B8, (uint64_t)&unk_250AC8D90, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OCProxySurfaceInputType(uint64_t a1)
{
  sub_239342C30(a1, (unint64_t *)&unk_25692B8C0, (uint64_t)&unk_250AC8DB8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE4D40]);
}

void sub_239342C30(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

Swift::String __swiftcall OCGitHash()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = 0;
  v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_239342EA0()
{
  swift_allocObject();
  return sub_239342ED0();
}

uint64_t sub_239342ED0()
{
  uint64_t v0;
  uint64_t result;

  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_DWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 44) = 1;
  *(_QWORD *)(v0 + 48) = 0;
  result = OCImageScalerCreate();
  if ((_DWORD)result)
  {

    type metadata accessor for ImageScaler();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_239342F84()
{
  uint64_t v0;
  uint64_t result;

  result = OCImageScalerDestroy();
  if ((_DWORD)result)
  {
    __break(1u);
  }
  else
  {

    return swift_deallocClassInstance();
  }
  return result;
}

BOOL sub_239342FB8()
{
  return OCImageScalerStart() == 0;
}

BOOL sub_239342FD8()
{
  return OCImageScalerStop() == 0;
}

CVPixelBufferRef sub_239342FF8(__CVBuffer *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  const __CFAllocator *v6;
  __CVPixelBufferPool *v7;
  CVReturn v8;
  CVPixelBufferRef v9;
  __CVBuffer *v10;
  int v11;
  CVPixelBufferRef v13;
  uint64_t v14;
  _BYTE v15[32];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  sub_2393432A8(a2, (uint64_t)&v14);
  v13 = 0;
  v5 = *(void **)(v2 + 48);
  if (!v5)
    return 0;
  v6 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v7 = v5;
  v8 = CVPixelBufferPoolCreatePixelBuffer(v6, v7, &v13);
  v9 = v13;
  if (v8)
  {

LABEL_5:
    return 0;
  }
  CVPixelBufferGetWidth(a1);
  CVPixelBufferGetHeight(a1);
  sub_2393432A8(a2, (uint64_t)v15);
  v10 = v9;
  v11 = OCImageScalerResizeImage();

  v7 = v10;
  if (v11)
    goto LABEL_5;
  return v9;
}

CVPixelBufferRef sub_239343158(__CVBuffer *a1, uint64_t a2, size_t a3, size_t a4, OSType a5)
{
  CVReturn v10;
  CVPixelBufferRef v11;
  CVPixelBufferRef v13;
  uint64_t v14;
  _BYTE v15[32];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  sub_2393432A8(a2, (uint64_t)&v14);
  v13 = 0;
  v10 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], a3, a4, a5, 0, &v13);
  v11 = v13;
  if (v10
    || (CVPixelBufferGetWidth(a1),
        CVPixelBufferGetHeight(a1),
        sub_2393432A8(a2, (uint64_t)v15),
        OCImageScalerResizeImage()))
  {

    return 0;
  }
  return v11;
}

uint64_t type metadata accessor for ImageScaler()
{
  return objc_opt_self();
}

uint64_t sub_2393432A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23925FB08(&qword_25692B990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 initializeBufferWithCopyOfBuffer for ImageScaler.Config(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ImageScaler.Config()
{
  return &type metadata for ImageScaler.Config;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_239263BFC(a1, &qword_25692BA98);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_239263BFC(a1, (unint64_t *)&unk_25692BAA0);
}

uint64_t sub_23934333C()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_239343370(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_2393433B4()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_2393433E8(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_23934342C(char *a1, char a2, uint64_t a3)
{
  swift_allocObject();
  return sub_23934347C(a1, a2, a3);
}

uint64_t sub_23934347C(char *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t result;
  float v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];
  uint64_t v77[3];
  uint64_t v78;
  uint64_t v79[2];

  v4 = v3;
  v75 = sub_2393520B0();
  v8 = *(_QWORD *)(v75 - 8);
  v9 = MEMORY[0x24BDAC7A8](v75);
  v11 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v64 - v18;
  v74 = v4;
  *(_QWORD *)(v4 + 48) = 0;
  v20 = v4 + 48;
  *(_QWORD *)(v20 - 8) = 0;
  *(_QWORD *)(v20 + 8) = 0;
  *(_QWORD *)(v20 - 16) = 512;
  *(_OWORD *)(v20 + 16) = xmmword_239357830;
  *(_QWORD *)(v20 - 32) = a1;
  *(_BYTE *)(v20 - 24) = a2;
  if ((a2 & 1) == 0)
  {
    swift_unknownObjectRetain();
LABEL_20:
    v59 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v59, v75);
    v60 = sub_239352098();
    v61 = sub_239352578();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      v79[0] = v63;
      v72 = v11;
      *(_DWORD *)v62 = 136380675;
      v78 = sub_23925F3EC(0xD00000000000002FLL, 0x8000000239360CB0, v79);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v60, v61, "MeshBuffer.%{private}s: Initialized MeshBuffer.", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v63, -1, -1);
      MEMORY[0x23B83BC04](v62, -1, -1);

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v72, v75);
    }
    else
    {

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v75);
    }
    return v74;
  }
  v68 = v17;
  v69 = (void (*)(char *, uint64_t))(v20 + 8);
  v70 = v16;
  v67 = v15;
  v21 = objc_allocWithZone(MEMORY[0x24BDDD5F0]);
  swift_unknownObjectRetain();
  v73 = objc_msgSend(v21, sel_init);
  objc_msgSend(v73, sel_setResourceOptions_, 512);
  result = getpagesize();
  v23 = ceilf((float)a3 / (float)(int)result) * (float)(int)result;
  if ((~LODWORD(v23) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v23 <= -9.2234e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v23 < 9.2234e18)
  {
    *(_QWORD *)(v74 + 40) = (uint64_t)v23;
    v24 = sub_239275BB8();
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v25(v19, v24, v75);
    swift_retain();
    v26 = v8;
    v27 = sub_239352098();
    v28 = sub_239352578();
    v29 = os_log_type_enabled(v27, v28);
    v71 = v26;
    v72 = v11;
    if (v29)
    {
      v30 = swift_slowAlloc();
      v65 = swift_slowAlloc();
      v77[0] = v65;
      *(_DWORD *)v30 = 136380931;
      v64[1] = v30 + 4;
      v76[0] = sub_23925F3EC(0xD00000000000002FLL, 0x8000000239360CB0, v77);
      v66 = v24;
      v31 = v74;
      sub_2393526B0();
      *(_WORD *)(v30 + 12) = 2050;
      v76[0] = *(_QWORD *)(v31 + 40);
      v24 = v66;
      sub_2393526B0();
      swift_release();
      _os_log_impl(&dword_23925B000, v27, v28, "MeshBuffer.%{private}s: Computed page-aligned heap size = %{public}ld bytes.", (uint8_t *)v30, 0x16u);
      v32 = v65;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v32, -1, -1);
      MEMORY[0x23B83BC04](v30, -1, -1);

      v33 = *(void (**)(char *, uint64_t))(v71 + 8);
    }
    else
    {

      swift_release();
      v33 = *(void (**)(char *, uint64_t))(v26 + 8);
    }
    v33(v19, v75);
    v34 = v73;
    objc_msgSend(v73, sel_setSize_, *(_QWORD *)(v20 - 8));
    v35 = objc_msgSend(a1, sel_newHeapWithDescriptor_, v34);
    if (v35)
    {
      v36 = v35;
      swift_beginAccess();
      *(_QWORD *)v20 = v36;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v37 = objc_msgSend(a1, sel_newHeapWithDescriptor_, v73);
      if (v37)
      {
        v38 = v37;
        v39 = v69;
        swift_beginAccess();
        *(_QWORD *)v39 = v38;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        v40 = v70;
        v25(v70, v24, v75);
        v41 = sub_239352098();
        v42 = sub_239352578();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          v79[0] = v44;
          *(_DWORD *)v43 = 136380675;
          v69 = v33;
          v78 = sub_23925F3EC(0xD00000000000002FLL, 0x8000000239360CB0, v79);
          v45 = v75;
          sub_2393526B0();
          _os_log_impl(&dword_23925B000, v41, v42, "MeshBuffer.%{private}s: Created primary and fallback heaps.", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v44, -1, -1);
          MEMORY[0x23B83BC04](v43, -1, -1);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          v69(v40, v45);
        }
        else
        {

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v33(v40, v75);
        }
        v8 = v71;
        v11 = v72;
        goto LABEL_20;
      }
      v53 = v67;
      v25(v67, v24, v75);
      swift_retain();
      v54 = sub_239352098();
      v55 = sub_23935256C();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v76[0] = v71;
        *(_DWORD *)v56 = 136380931;
        v72 = a1;
        v79[0] = sub_23925F3EC(0xD00000000000002FLL, 0x8000000239360CB0, v76);
        sub_2393526B0();
        *(_WORD *)(v56 + 12) = 2050;
        v57 = *(_QWORD *)(v74 + 40);
        swift_release();
        v79[0] = v57;
        sub_2393526B0();
        swift_release();
        _os_log_impl(&dword_23925B000, v54, v55, "MeshBuffer.%{private}s: Failed to create fallback heap of size %{public}ld bytes!", (uint8_t *)v56, 0x16u);
        v58 = v71;
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v58, -1, -1);
        MEMORY[0x23B83BC04](v56, -1, -1);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release_n();
      }
      v52 = v53;
    }
    else
    {
      v46 = v68;
      v25(v68, v24, v75);
      swift_retain();
      v47 = sub_239352098();
      v48 = sub_23935256C();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = swift_slowAlloc();
        v50 = swift_slowAlloc();
        v77[0] = v50;
        *(_DWORD *)v49 = 136380931;
        v72 = a1;
        v76[0] = sub_23925F3EC(0xD00000000000002FLL, 0x8000000239360CB0, v77);
        sub_2393526B0();
        *(_WORD *)(v49 + 12) = 2050;
        v51 = *(_QWORD *)(v74 + 40);
        swift_release();
        v76[0] = v51;
        sub_2393526B0();
        swift_release();
        _os_log_impl(&dword_23925B000, v47, v48, "MeshBuffer.%{private}s: Failed to create heap of size\n%{public}ld bytes!", (uint8_t *)v49, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v50, -1, -1);
        MEMORY[0x23B83BC04](v49, -1, -1);

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
        swift_release_n();
      }
      v52 = v46;
    }
    v33(v52, v75);
    return 0;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_239343EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  id result;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v27 - v9;
  if (*(_BYTE *)(v1 + 24) != 1)
  {
    v21 = objc_msgSend(*(id *)(v1 + 16), sel_newBufferWithLength_options_, a1, 512);
    if (!v21)
    {
      v22 = sub_239275BB8();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v22, v3);
      v23 = sub_239352098();
      v24 = sub_23935256C();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v28 = v26;
        *(_DWORD *)v25 = 136380675;
        v27 = sub_23925F3EC(0xD000000000000013, 0x8000000239360CE0, &v28);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v23, v24, "MeshBuffer.%{private}s: Failed to allocate buffer on device!", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v26, -1, -1);
        MEMORY[0x23B83BC04](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      return 0;
    }
    return v21;
  }
  v11 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 192);
  v12 = v11(v8);
  result = (id)swift_unknownObjectRelease();
  if (!v12)
  {
    __break(1u);
    goto LABEL_17;
  }
  v14 = (*(uint64_t (**)(id))(*(_QWORD *)v1 + 216))(result);
  result = (id)swift_unknownObjectRelease();
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (id)v11((uint64_t)result);
  if (result)
  {
    v15 = objc_msgSend(result, sel_newBufferWithLength_options_, a1, 0);
    swift_unknownObjectRelease();
    if (!v15)
    {
      v16 = sub_239275BB8();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v16, v3);
      v17 = sub_239352098();
      v18 = sub_23935256C();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v20 = swift_slowAlloc();
        v28 = v20;
        *(_DWORD *)v19 = 136380675;
        v27 = sub_23925F3EC(0xD000000000000013, 0x8000000239360CE0, &v28);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v17, v18, "MeshBuffer.%{private}s: Failed to allocate buffer on heap!", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v20, -1, -1);
        MEMORY[0x23B83BC04](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      return 0;
    }
    return v15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_239344230(const void *a1, size_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;

  v5 = sub_2393520B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v34 - v11;
  if (*(_BYTE *)(v2 + 24) != 1)
  {
    v22 = objc_msgSend(*(id *)(v2 + 16), sel_newBufferWithBytes_length_options_, a1, a2, 512);
    if (v22)
      return (uint64_t)v22;
    v23 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v23, v5);
    v24 = sub_239352098();
    v25 = sub_23935256C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v35 = v27;
      *(_DWORD *)v26 = 136380675;
      v34 = sub_23925F3EC(0xD000000000000019, 0x8000000239360D00, &v35);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v24, v25, "MeshBuffer.%{private}s: Failed to allocate buffer on device!", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v27, -1, -1);
      MEMORY[0x23B83BC04](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  v13 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 192);
  v14 = v13(v10);
  v15 = swift_unknownObjectRelease();
  if (!v14)
  {
    __break(1u);
    goto LABEL_19;
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 216))(v15);
  v17 = swift_unknownObjectRelease();
  if (!v16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v18 = (void *)v13(v17);
  if (!v18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v19 = objc_msgSend(v18, sel_newBufferWithLength_options_, a2, 0);
  swift_unknownObjectRelease();
  if (!v19)
  {
    v28 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v28, v5);
    v29 = sub_239352098();
    v30 = sub_23935256C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v35 = v32;
      *(_DWORD *)v31 = 136380675;
      v34 = sub_23925F3EC(0xD000000000000019, 0x8000000239360D00, &v35);
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v29, v30, "MeshBuffer.%{private}s: Failed to allocate buffer on heap!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v32, -1, -1);
      MEMORY[0x23B83BC04](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    return 0;
  }
  v20 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v21 = v19;
  if ((a2 & 0x8000000000000000) == 0)
  {
    memmove(v20, a1, a2);
    return (uint64_t)v19;
  }
LABEL_21:
  result = sub_239352884();
  __break(1u);
  return result;
}

id sub_239344640(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = objc_retainAutorelease(a1);
  v3 = (*(uint64_t (**)(id, id))(*(_QWORD *)v1 + 256))(objc_msgSend(v2, sel_bytes), objc_msgSend(v2, sel_length));
  if (!v3)
    return 0;
  v4 = v3;
  v5 = (uint64_t)objc_msgSend(v2, sel_length) / 12;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB14D0]), sel_initWithBuffer_count_format_componentsPerVector_offset_stride_, v4, v5, 30, 3, 0, 12);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_239344710(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  if (0xAAAAAAAAAAAAAAABLL * result + 0x2AAAAAAAAAAAAAAALL > 0x5555555555555554)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    v3 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 248))();
    if (!v3)
      return 0;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB14D0]), sel_initWithBuffer_count_format_componentsPerVector_offset_stride_, v3, v2 / 12, 30, 3, 0, 12);
    swift_unknownObjectRelease();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_2393447D0(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t result;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];

  v2 = v1;
  v4 = sub_2393520B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v35 - v10;
  if (v1[24] != 1)
    return 1;
  v12 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 192);
  result = v12(v9);
  if (!result)
    goto LABEL_16;
  v14 = objc_msgSend((id)result, sel_currentAllocatedSize);
  v15 = swift_unknownObjectRelease();
  result = v12(v15);
  if (!result)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v16 = objc_msgSend((id)result, sel_usedSize);
  result = swift_unknownObjectRelease();
  v17 = __OFSUB__(v14, v16);
  v18 = v14 - v16;
  if (v17)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v18 >= a1)
    return 1;
  v19 = sub_239275BB8();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v11, v19, v4);
  v21 = sub_239352098();
  v22 = sub_239352560();
  v39 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v38 = v20;
    v24 = v23;
    v36 = swift_slowAlloc();
    v43[0] = v36;
    *(_DWORD *)v24 = 136381187;
    v35[1] = v24 + 4;
    v42 = sub_23925F3EC(0xD000000000000012, 0x8000000239360D60, v43);
    v37 = v19;
    sub_2393526B0();
    *(_WORD *)(v24 + 12) = 2050;
    v42 = a1;
    sub_2393526B0();
    *(_WORD *)(v24 + 22) = 2049;
    v42 = v18;
    v19 = v37;
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v21, (os_log_type_t)v39, "MeshBuffer.%{private}s: Cannot allocate %{public}ld bytes on the heap since the heap only has %{private}ld bytes available!", (uint8_t *)v24, 0x20u);
    v25 = v36;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v25, -1, -1);
    v26 = v24;
    v20 = v38;
    MEMORY[0x23B83BC04](v26, -1, -1);
  }

  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v11, v4);
  v28 = (uint64_t *)(v2 + 48);
  result = swift_beginAccess();
  if (!*((_QWORD *)v2 + 6))
    goto LABEL_18;
  result = swift_beginAccess();
  v29 = *((_QWORD *)v2 + 7);
  if (!v29)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  v30 = *v28;
  *v28 = v29;
  *((_QWORD *)v2 + 7) = v30;
  v20(v8, v19, v4);
  v31 = sub_239352098();
  v32 = sub_239352578();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v41 = v34;
    *(_DWORD *)v33 = 136380675;
    v40 = sub_23925F3EC(0xD000000000000012, 0x8000000239360D60, &v41);
    sub_2393526B0();
    _os_log_impl(&dword_23925B000, v31, v32, "MeshBuffer.%{private}s: Swapped heaps!", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v34, -1, -1);
    MEMORY[0x23B83BC04](v33, -1, -1);
  }

  v27(v8, v4);
  return 0;
}

uint64_t sub_239344BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  float v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v29 - v7;
  v9 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 192))(v6);
  if (!v9)
  {
    v22 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v22, v1);
    v23 = sub_239352098();
    v24 = sub_23935256C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v32 = v26;
      *(_DWORD *)v25 = 136380675;
      v31 = COERCE_DOUBLE(sub_23925F3EC(0x5370616548676F6CLL, 0xEE00292873746174, &v32));
      sub_2393526B0();
      _os_log_impl(&dword_23925B000, v23, v24, "MeshBuffer.%{private}s: Not using heap!", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v26, -1, -1);
      MEMORY[0x23B83BC04](v25, -1, -1);
    }

    v27 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    v28 = v5;
    return v27(v28, v1);
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_currentAllocatedSize);
  result = (uint64_t)objc_msgSend(v10, sel_usedSize);
  v13 = 100 * result;
  if ((unsigned __int128)(result * (__int128)100) >> 64 == (100 * result) >> 63)
  {
    v14 = sub_239275BB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v14, v1);
    swift_unknownObjectRetain_n();
    v15 = sub_239352098();
    v16 = sub_239352578();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (float)v13 / (float)(uint64_t)v11;
      v18 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32 = v29;
      *(_DWORD *)v18 = 136381699;
      v30 = v1;
      v31 = COERCE_DOUBLE(sub_23925F3EC(0x5370616548676F6CLL, 0xEE00292873746174, &v32));
      sub_2393526B0();
      *(_WORD *)(v18 + 12) = 2049;
      v31 = v17;
      sub_2393526B0();
      *(_WORD *)(v18 + 22) = 2049;
      v31 = COERCE_DOUBLE(objc_msgSend(v10, sel_size));
      sub_2393526B0();
      *(_WORD *)(v18 + 32) = 2049;
      v19 = objc_msgSend(v10, sel_currentAllocatedSize);
      swift_unknownObjectRelease();
      v31 = *(double *)&v19;
      sub_2393526B0();
      swift_unknownObjectRelease();
      *(_WORD *)(v18 + 42) = 2049;
      v20 = objc_msgSend(v10, sel_usedSize);
      swift_unknownObjectRelease();
      v31 = *(double *)&v20;
      sub_2393526B0();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_23925B000, v15, v16, "MeshBuffer.%{private}s: Heap stats: used = %{private}f%%, size = %{private}ld bytes, allocated size = %{private}ld bytes, used size = %{private}ld bytes", (uint8_t *)v18, 0x34u);
      v21 = v29;
      swift_arrayDestroy();
      MEMORY[0x23B83BC04](v21, -1, -1);
      MEMORY[0x23B83BC04](v18, -1, -1);
      swift_unknownObjectRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v8, v30);
    }

    swift_unknownObjectRelease_n();
    v27 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
    v28 = v8;
    return v27(v28, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_239345038()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23934506C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2393451EC(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t type metadata accessor for FreeformMeshBuffer()
{
  return objc_opt_self();
}

void type metadata accessor for MTLResourceOptions()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_25692BC78)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_25692BC78);
  }
}

uint64_t sub_23934511C()
{
  return sub_2393451AC(&qword_25692BC80, (uint64_t)&unk_239357910);
}

uint64_t sub_239345140()
{
  return sub_2393451AC(&qword_25692BC88, (uint64_t)&unk_2393578DC);
}

uint64_t sub_239345164()
{
  return sub_2393451AC(&qword_25692BC90, (uint64_t)&unk_23935793C);
}

uint64_t sub_239345188()
{
  return sub_2393451AC(&qword_25692BC98, (uint64_t)&unk_239357978);
}

uint64_t sub_2393451AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for MTLResourceOptions();
    result = MEMORY[0x23B83BB44](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2393451EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void __swiftcall wideToDepthCameraTransform()(simd_float4x4 *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  float32x4_t v8;
  float32x4_t v9;
  int8x16_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  float32x4_t v16;
  int8x16_t v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  int8x16_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  uint64_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  int8x16_t v32;
  uint64_t v33[3];

  v33[1] = *MEMORY[0x24BDAC8D0];
  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = &v24.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v24.i8[-v6];
  if ((byte_25692BD00 & 1) != 0)
  {
    v8 = *(float32x4_t *)MEMORY[0x24BDAEE00];
    v9 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 32);
    v10 = *(int8x16_t *)(MEMORY[0x24BDAEE00] + 48);
    v26 = *(float32x4_t *)(MEMORY[0x24BDAEE00] + 16);
    v27 = v8;
    v29 = v8;
    v30 = v26;
    v24 = v10;
    v25 = v9;
    v31 = v9;
    v32 = v10;
    if (OCNonModularSPI_GetWideToDepthTransform() || (sub_2392E0EFC(v29, v30, v31, v32) & 1) == 0)
    {
      v19 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v19, v1);
      v20 = sub_239352098();
      v21 = sub_23935256C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v33[0] = v23;
        *(_DWORD *)v22 = 136380675;
        v28 = sub_23925F3EC(0xD00000000000001CLL, 0x8000000239360E40, v33);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v20, v21, "%{private}s: Failed to obtain wide to depth camera transform, using identity instead.", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v23, -1, -1);
        MEMORY[0x23B83BC04](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      unk_25692FAF0 = v27.i64[1];
      qword_25692FAE0 = v27.i64[0];
      unk_25692FB10 = v26.i64[1];
      qword_25692FB00 = v26.i64[0];
      v18 = &unk_25692F000;
      v17 = v24;
      v16 = v25;
    }
    else
    {
      v11 = sub_239275A60();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v11, v1);
      v12 = sub_239352098();
      v13 = sub_239352578();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v33[0] = v15;
        *(_DWORD *)v14 = 136380675;
        v28 = sub_23925F3EC(0xD00000000000001CLL, 0x8000000239360E40, v33);
        sub_2393526B0();
        _os_log_impl(&dword_23925B000, v12, v13, "%{private}s: Obtained wide to depth camera transform.", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B83BC04](v15, -1, -1);
        MEMORY[0x23B83BC04](v14, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      v16 = v31;
      v17 = v32;
      unk_25692FAF0 = v29.i64[1];
      qword_25692FAE0 = v29.i64[0];
      unk_25692FB10 = v30.i64[1];
      qword_25692FB00 = v30.i64[0];
      v18 = (_QWORD *)&unk_25692F000;
    }
    v18[356] = v16.i64[0];
    unk_25692FB30 = v16.i64[1];
    unk_25692FB50 = v17.i64[1];
    qword_25692FB40 = v17.i64[0];
    byte_25692BD00 = 0;
  }
}

__n128 OCBoundingBox.transform.getter()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

double OCBoundingBox.scaledTransform(scale:)(float a1)
{
  float32x4_t *v1;
  double result;

  *(_QWORD *)&result = vmulq_n_f32(*v1, a1).u64[0];
  return result;
}

__n128 OCBoundingBox.position.getter()
{
  __n128 *v0;

  return v0[3];
}

__n64 OCBoundingBox.extent.getter()
{
  float32x4_t *v0;
  float32x4_t v1;
  float32x4_t v2;
  __n64 result;

  v1 = vmulq_f32(*v0, *v0);
  result.n64_f32[0] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v1, 2), vaddq_f32(v1, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v1.f32, 1))).f32[0]);
  v2 = vmulq_f32(v0[1], v0[1]);
  result.n64_u32[1] = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).f32[0]);
  return result;
}

float32x4_t OCBoundingBox.rotation.getter@<Q0>(float32x4_t *a1@<X8>)
{
  float32x4_t *v1;
  float32x4_t v2;
  float32x4_t v3;
  int32x4_t v4;
  float32x2_t v5;
  float32x2_t v6;
  float32x4_t result;
  int32x4_t v8;
  float32x2_t v9;
  float32x2_t v10;
  int32x4_t v11;
  float32x4_t v12;

  v2 = v1[1];
  v3 = v1[2];
  v4 = (int32x4_t)vmulq_f32(*v1, *v1);
  v4.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v4, 2), vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1))).u32[0];
  v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  result = vmulq_n_f32(*v1, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  v8 = (int32x4_t)vmulq_f32(v2, v2);
  v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
  v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  v8.i32[0] = vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).u32[0];
  v11 = (int32x4_t)vmulq_f32(v3, v3);
  v11.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), vadd_f32(*(float32x2_t *)v11.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1))).u32[0];
  v12 = vmulq_n_f32(v2, *(float *)v8.i32);
  *(float32x2_t *)v8.i8 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  *(float32x2_t *)v8.i8 = vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8)));
  *a1 = result;
  a1[1] = v12;
  a1[2] = vmulq_n_f32(v3, vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8))).f32[0]);
  return result;
}

uint64_t OCBoundingBox.dict.getter()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;

  sub_2392DEC48(*v0, v0[1], v0[2], v0[3]);
  v2 = v1;
  sub_23925FB08(&qword_25692B720);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2393548B0;
  *(_QWORD *)(inited + 32) = 0x726F66736E617274;
  *(_QWORD *)(inited + 40) = 0xE90000000000006DLL;
  v4 = sub_23925FB08((uint64_t *)&unk_25692BD10);
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = 0x6E656469666E6F63;
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 88) = 0xEA00000000006563;
  *(_QWORD *)(inited + 96) = 0x3FF0000000000000;
  sub_23925DBD8(inited);
  v5 = sub_239352260();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_23934588C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a2;
  v7 = sub_23925FB08(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23925FB08(a3);
  v11 = sub_239352878();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_23926059C(v17, (uint64_t)v10, v30);
    result = sub_239292F4C((uint64_t)v10);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = sub_239352020();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v10, v23);
    v24 = v12[7];
    v25 = a4(0);
    result = sub_2392C4FE0(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v21, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

__n128 OCBoundingBox.init(position:extent:rotation:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 result@<Q0>, float32x4_t a4@<Q1>)
{
  __int128 v4;
  float32x4_t v5;
  __int128 v6;
  __int128 v7;

  *(float32x2_t *)&v4 = vmul_n_f32(*(float32x2_t *)a1, a4.f32[0]);
  *((float *)&v4 + 2) = *(float *)(a1 + 8) * a4.f32[0];
  v5 = *(float32x4_t *)(a1 + 32);
  HIDWORD(v4) = 0;
  *(float32x2_t *)&v6 = vmul_lane_f32(*(float32x2_t *)(a1 + 16), *(float32x2_t *)a4.f32, 1);
  *((_QWORD *)&v6 + 1) = COERCE_UNSIGNED_INT(vmuls_lane_f32(*(float *)(a1 + 24), *(float32x2_t *)a4.f32, 1));
  *(float32x2_t *)&v7 = vmul_laneq_f32(*(float32x2_t *)v5.f32, a4, 2);
  *((_QWORD *)&v7 + 1) = vmulq_f32(v5, a4).u32[2];
  result.n128_u32[3] = 1.0;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

void __swiftcall OCBoundingBox.init(transform:)(CoreOC::OCBoundingBox *__return_ptr retstr, simd_float4x4 *transform)
{
  simd_float4 v2;
  simd_float4 v3;
  simd_float4 v4;
  simd_float4 v5;

  retstr->transform.columns[0] = v2;
  retstr->transform.columns[1] = v3;
  retstr->transform.columns[2] = v4;
  retstr->transform.columns[3] = v5;
}

float OCBoundingBox.scale(_:)@<S0>(_OWORD *a1@<X8>, float32x4_t a2@<Q0>)
{
  uint64_t v2;
  float32x4_t v3;
  __int128 v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float v8;
  float32x4_t v9;
  float32x2_t v10;
  float32x2_t v11;
  float32x4_t v12;
  float32x4_t v13;
  float32x4_t v14;
  float v15;
  __int128 v16;
  float result;

  v3 = *(float32x4_t *)(v2 + 16);
  v5 = *(float32x4_t *)(v2 + 32);
  v4 = *(_OWORD *)(v2 + 48);
  v6 = vmulq_f32(*(float32x4_t *)v2, *(float32x4_t *)v2);
  v6.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v6, 2), vaddq_f32(v6, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v6.f32, 1))).u32[0];
  v7 = vmulq_f32(v3, v3);
  v8 = sqrtf(v6.f32[0]);
  v7.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).u32[0];
  v9 = vmulq_f32(v5, v5);
  v9.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v9, 2), vaddq_f32(v9, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v9.f32, 1))).u32[0];
  v10 = vrsqrte_f32((float32x2_t)v6.u32[0]);
  v11 = vmul_f32(v10, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v10, v10)));
  v12 = vmulq_n_f32(*(float32x4_t *)v2, vmul_f32(v11, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v11, v11))).f32[0]);
  *(float32x2_t *)v6.f32 = vrsqrte_f32((float32x2_t)v7.u32[0]);
  *(float32x2_t *)v6.f32 = vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32)));
  v13 = vmulq_n_f32(v3, vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32))).f32[0]);
  *(float32x2_t *)v6.f32 = vrsqrte_f32((float32x2_t)v9.u32[0]);
  *(float32x2_t *)v6.f32 = vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32)));
  v14 = vmulq_n_f32(v5, vmul_f32(*(float32x2_t *)v6.f32, vrsqrts_f32((float32x2_t)v9.u32[0], vmul_f32(*(float32x2_t *)v6.f32, *(float32x2_t *)v6.f32))).f32[0]);
  v6.f32[0] = v8 * a2.f32[0];
  v7.f32[0] = vmuls_lane_f32(sqrtf(v7.f32[0]), *(float32x2_t *)a2.f32, 1);
  v15 = vmuls_lane_f32(sqrtf(v9.f32[0]), a2, 2);
  *(float32x2_t *)&v16 = vmul_n_f32(*(float32x2_t *)v12.f32, v6.f32[0]);
  *((_QWORD *)&v16 + 1) = COERCE_UNSIGNED_INT(vmuls_lane_f32(v6.f32[0], v12, 2));
  *(float32x2_t *)v12.f32 = vmul_n_f32(*(float32x2_t *)v13.f32, v7.f32[0]);
  v12.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v7.f32[0], v13, 2));
  *(float32x2_t *)v13.f32 = vmul_n_f32(*(float32x2_t *)v14.f32, v15);
  v13.i64[1] = COERCE_UNSIGNED_INT(vmuls_lane_f32(v15, v14, 2));
  result = 1.0;
  HIDWORD(v4) = 1.0;
  *a1 = v16;
  a1[1] = v12;
  a1[2] = v13;
  a1[3] = v4;
  return result;
}

uint64_t sub_239345BA8(uint64_t a1)
{
  int8x16_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int8x16_t v7;
  int8x16_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v23 = v1[1];
  v24 = v7;
  v8 = v1[2];
  v21 = v1[3];
  v22 = v8;
  v9 = sub_239275A60();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  v10 = sub_239352098();
  v11 = sub_239352578();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v25 = a1;
    v26 = v20;
    *(_DWORD *)v12 = 134349314;
    sub_2393526B0();
    *(_WORD *)(v12 + 12) = 2082;
    v19 = v12 + 14;
    *(int32x2_t *)&v13 = sub_2392DEC48(v24, v23, v22, v21);
    v14 = MEMORY[0x23B83A2FC](v13);
    v16 = v15;
    swift_bridgeObjectRelease();
    v25 = sub_23925F3EC(v14, v16, &v26);
    sub_2393526B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23925B000, v10, v11, "Bounding Box: Segment = %{public}ld, Bounding box transform = %{public}s", (uint8_t *)v12, 0x16u);
    v17 = v20;
    swift_arrayDestroy();
    MEMORY[0x23B83BC04](v17, -1, -1);
    MEMORY[0x23B83BC04](v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OCDepthPointCloud.bankIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.bankIds.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.bankIds.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.spotIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.spotIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.spotIds.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.echoIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.echoIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.echoIds.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.euclideanDistances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.euclideanDistances.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.euclideanDistances.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.confidences.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.confidences.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.confidences.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.intensities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.intensities.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.intensities.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.signalToNoiseRatios.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.signalToNoiseRatios.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.signalToNoiseRatios.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.uv.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.uv.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.uv.modify())()
{
  return nullsub_1;
}

uint64_t OCDepthPointCloud.xyz.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCDepthPointCloud.xyz.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*OCDepthPointCloud.xyz.modify())()
{
  return nullsub_1;
}

void OCDepthPointCloud.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v1;
  a1[2] = v1;
  a1[3] = v1;
  a1[4] = v1;
  a1[5] = v1;
  a1[6] = v1;
  a1[7] = v1;
  a1[8] = v1;
}

uint64_t OCDepthPointCloud.init(bankIds:spotIds:echoIds:euclideanDistances:confidences:intensities:signalToNoiseRatios:uv:xyz:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

__n128 OCDepthPointCloud.append(bankId:spotId:echoId:euclideanDistance:confidence:intensity:signalToNoiseRatio:uv:xyz:)(char a1, char a2, char a3, float a4, float a5, float a6, float a7, double a8, double a9, __n128 a10)
{
  uint64_t v10;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  double *v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  __n128 result;

  v20 = *(char **)v10;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_2392E3DB8(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
  v22 = *((_QWORD *)v20 + 2);
  v21 = *((_QWORD *)v20 + 3);
  if (v22 >= v21 >> 1)
    v20 = sub_2392E3DB8((char *)(v21 > 1), v22 + 1, 1, v20);
  *((_QWORD *)v20 + 2) = v22 + 1;
  v20[v22 + 32] = a1;
  *(_QWORD *)v10 = v20;
  v23 = *(char **)(v10 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_2392E3DB8(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
  v25 = *((_QWORD *)v23 + 2);
  v24 = *((_QWORD *)v23 + 3);
  if (v25 >= v24 >> 1)
    v23 = sub_2392E3DB8((char *)(v24 > 1), v25 + 1, 1, v23);
  *((_QWORD *)v23 + 2) = v25 + 1;
  v23[v25 + 32] = a2;
  *(_QWORD *)(v10 + 8) = v23;
  v26 = *(char **)(v10 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_2392E3DB8(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
  v28 = *((_QWORD *)v26 + 2);
  v27 = *((_QWORD *)v26 + 3);
  if (v28 >= v27 >> 1)
    v26 = sub_2392E3DB8((char *)(v27 > 1), v28 + 1, 1, v26);
  *((_QWORD *)v26 + 2) = v28 + 1;
  v26[v28 + 32] = a3;
  *(_QWORD *)(v10 + 16) = v26;
  v29 = *(char **)(v10 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v29 = sub_239281EC4(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
  v31 = *((_QWORD *)v29 + 2);
  v30 = *((_QWORD *)v29 + 3);
  if (v31 >= v30 >> 1)
    v29 = sub_239281EC4((char *)(v30 > 1), v31 + 1, 1, v29);
  *((_QWORD *)v29 + 2) = v31 + 1;
  *(float *)&v29[4 * v31 + 32] = a4;
  *(_QWORD *)(v10 + 24) = v29;
  v32 = *(char **)(v10 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v32 = sub_239281EC4(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
  v34 = *((_QWORD *)v32 + 2);
  v33 = *((_QWORD *)v32 + 3);
  if (v34 >= v33 >> 1)
    v32 = sub_239281EC4((char *)(v33 > 1), v34 + 1, 1, v32);
  *((_QWORD *)v32 + 2) = v34 + 1;
  *(float *)&v32[4 * v34 + 32] = a5;
  *(_QWORD *)(v10 + 32) = v32;
  v35 = *(char **)(v10 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v35 = sub_239281EC4(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
  v37 = *((_QWORD *)v35 + 2);
  v36 = *((_QWORD *)v35 + 3);
  if (v37 >= v36 >> 1)
    v35 = sub_239281EC4((char *)(v36 > 1), v37 + 1, 1, v35);
  *((_QWORD *)v35 + 2) = v37 + 1;
  *(float *)&v35[4 * v37 + 32] = a6;
  *(_QWORD *)(v10 + 40) = v35;
  v38 = *(char **)(v10 + 48);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v38 = sub_239281EC4(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
  v40 = *((_QWORD *)v38 + 2);
  v39 = *((_QWORD *)v38 + 3);
  if (v40 >= v39 >> 1)
    v38 = sub_239281EC4((char *)(v39 > 1), v40 + 1, 1, v38);
  *((_QWORD *)v38 + 2) = v40 + 1;
  *(float *)&v38[4 * v40 + 32] = a7;
  *(_QWORD *)(v10 + 48) = v38;
  v41 = *(_QWORD **)(v10 + 56);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v41 = sub_2392E3CAC(0, v41[2] + 1, 1, v41);
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
    v41 = sub_2392E3CAC((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
  v41[2] = v43 + 1;
  v44 = (double *)&v41[2 * v43];
  v44[4] = a8;
  v44[5] = a9;
  *(_QWORD *)(v10 + 56) = v41;
  v45 = *(_QWORD **)(v10 + 64);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v45 = sub_239275064(0, v45[2] + 1, 1, v45);
  v47 = v45[2];
  v46 = v45[3];
  if (v47 >= v46 >> 1)
    v45 = sub_239275064((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
  v45[2] = v47 + 1;
  result = a10;
  *(__n128 *)&v45[2 * v47 + 4] = a10;
  *(_QWORD *)(v10 + 64) = v45;
  return result;
}

Swift::Void __swiftcall OCDepthPointCloud.remove(at:)(Swift::Int at)
{
  uint64_t v1;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16) > at)
  {
    sub_239346528(at);
    sub_239346528(at);
    sub_239346528(at);
    sub_2393465F4(at);
    sub_2393465F4(at);
    sub_2393465F4(at);
    sub_2393465F4(at);
    sub_2393466CC(at);
    sub_2393467A8(at);
  }
}

uint64_t sub_239346528(unint64_t a1)
{
  char **v1;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  int64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_23934C1A8((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[a1 + 32];
      v8 = *v7;
      memmove(v7, v7 + 1, v6);
      *((_QWORD *)v3 + 2) = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2393465F4(unint64_t a1)
{
  char **v1;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_23934C194((uint64_t)v3);
  v4 = *((_QWORD *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      result = (uint64_t)memmove(&v3[4 * a1 + 32], &v3[4 * a1 + 36], 4 * v6);
      *((_QWORD *)v3 + 2) = v5;
      *v1 = v3;
      return result;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2393466CC(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_23934C180(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      result = (uint64_t)memmove(&v3[2 * a1 + 4], &v3[2 * a1 + 6], 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return result;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t sub_2393467A8(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_23934C16C(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      result = (uint64_t)memmove(&v3[2 * a1 + 4], &v3[2 * a1 + 6], 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return result;
    }
  }
  result = sub_239352884();
  __break(1u);
  return result;
}

uint64_t (*OCVoxelCloud.voxels.modify())()
{
  return nullsub_1;
}

uint64_t (*OCVoxelCloud.transform.modify())()
{
  return nullsub_1;
}

void __swiftcall OCVoxelCloud.init(voxels:transform:)(CoreOC::OCVoxelCloud *__return_ptr retstr, Swift::OpaquePointer voxels, simd_float4x4 *transform)
{
  simd_float4 v3;
  simd_float4 v4;
  simd_float4 v5;
  simd_float4 v6;

  retstr->voxels = voxels;
  retstr->transform.columns[0] = v3;
  retstr->transform.columns[1] = v4;
  retstr->transform.columns[2] = v5;
  retstr->transform.columns[3] = v6;
}

uint64_t OCPointCloud.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCPointCloud.points.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*OCPointCloud.points.modify())()
{
  return nullsub_1;
}

__n128 OCPointCloud.transform.getter()
{
  __n128 *v0;

  return v0[1];
}

void OCPointCloud.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 *v4;

  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

uint64_t (*OCPointCloud.transform.modify())()
{
  return nullsub_1;
}

unint64_t sub_239346914@<X0>(unint64_t result@<X0>, __n128 *a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>, __n128 a6@<Q3>)
{
  a2->n128_u64[0] = result;
  a2[1] = a3;
  a2[2] = a4;
  a2[3] = a5;
  a2[4] = a6;
  return result;
}

uint64_t (*OCTriangleMesh.vertexBuffer.modify())()
{
  return nullsub_1;
}

uint64_t OCTriangleMesh.indexBuffer.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OCTriangleMesh.indexBuffer.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*OCTriangleMesh.indexBuffer.modify())()
{
  return nullsub_1;
}

uint64_t (*OCTriangleMesh.transform.modify())()
{
  return nullsub_1;
}

unint64_t sub_239346984@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>)
{
  a3->n128_u64[0] = result;
  a3->n128_u64[1] = a2;
  a3[1] = a4;
  a3[2] = a5;
  a3[3] = a6;
  a3[4] = a7;
  return result;
}

uint64_t sub_239346994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  int *v17;
  uint64_t result;

  v14 = *(_QWORD *)(a4 + 64);
  *(double *)a9 = a10;
  *(_QWORD *)(a9 + 8) = a1;
  *(_QWORD *)(a9 + 16) = a2;
  *(_QWORD *)(a9 + 24) = a3;
  v15 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(a9 + 48) = v15;
  v16 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a9 + 80) = v16;
  *(_QWORD *)(a9 + 96) = v14;
  *(_QWORD *)(a9 + 104) = a5;
  v17 = (int *)type metadata accessor for OCCaptureData(0);
  result = sub_2392C4FE0(a6, a9 + v17[10], type metadata accessor for ObjectCaptureSession.Frame.Camera);
  *(_QWORD *)(a9 + v17[11]) = a7;
  *(_BYTE *)(a9 + v17[12]) = a8;
  return result;
}

uint64_t sub_239346A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  *(double *)a3 = a4;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 24) = v6;
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a3 + 56) = v7;
  *(_QWORD *)(a3 + 72) = v8;
  v9 = type metadata accessor for OCBundleData(0);
  return sub_2392C4FE0(a2, a3 + *(int *)(v9 + 24), type metadata accessor for ObjectCaptureSession.Frame.Camera);
}

__n128 sub_239346A88@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>, __n128 a8@<Q4>, __n128 a9@<Q5>, __n128 a10@<Q6>, __n128 a11@<Q7>, __n128 a12)
{
  uint64_t v16;
  uint64_t v17;
  int *v18;
  _OWORD *v19;
  __int128 v20;
  _OWORD *v21;
  __n128 *v22;
  __n128 result;
  _BYTE v24[64];
  simd_float4x4 v28;

  *(__n128 *)&v24[32] = a7;
  *(__n128 *)&v24[48] = a8;
  *(__n128 *)v24 = a5;
  *(__n128 *)&v24[16] = a6;
  v16 = sub_239352020();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a3, a1, v16);
  v18 = (int *)type metadata accessor for OCObjectCentricPoseNode(0);
  *(double *)(a3 + v18[5]) = a4;
  v19 = (_OWORD *)(a3 + v18[6]);
  v20 = a2[1];
  *v19 = *a2;
  v19[1] = v20;
  v19[2] = a2[2];
  *(simd_float4x4 *)(a3 + v18[7]) = *(simd_float4x4 *)v24;
  v28 = __invert_f4(*(simd_float4x4 *)v24);
  *(simd_float4 *)&v24[32] = v28.columns[1];
  *(simd_float4 *)&v24[48] = v28.columns[0];
  *(simd_float4 *)v24 = v28.columns[3];
  *(simd_float4 *)&v24[16] = v28.columns[2];
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  v21 = (_OWORD *)(a3 + v18[8]);
  *v21 = *(_OWORD *)&v24[48];
  v21[1] = *(_OWORD *)&v24[32];
  v21[2] = *(_OWORD *)&v24[16];
  v21[3] = *(_OWORD *)v24;
  v22 = (__n128 *)(a3 + v18[9]);
  *v22 = a9;
  v22[1] = a10;
  v22[2] = a11;
  result = a12;
  v22[3] = a12;
  return result;
}

__n128 sub_239346BBC@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>, __n128 a8@<Q4>)
{
  uint64_t v12;
  int *v13;
  _OWORD *v14;
  __int128 v15;
  __n128 *v16;
  __n128 result;

  v12 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a3, a1, v12);
  v13 = (int *)type metadata accessor for VIOPoseNode(0);
  *(double *)(a3 + v13[5]) = a4;
  v14 = (_OWORD *)(a3 + v13[6]);
  v15 = a2[1];
  *v14 = *a2;
  v14[1] = v15;
  v14[2] = a2[2];
  v16 = (__n128 *)(a3 + v13[7]);
  *v16 = a5;
  v16[1] = a6;
  result = a8;
  v16[2] = a7;
  v16[3] = a8;
  return result;
}

float GeoDebugData.minSphereAngle.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void GeoDebugData.minSphereAngle.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*GeoDebugData.minSphereAngle.modify())()
{
  return nullsub_1;
}

float GeoDebugData.baselineOfMinSphereAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void GeoDebugData.baselineOfMinSphereAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*GeoDebugData.baselineOfMinSphereAngle.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minSphereAngleShotTimestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void GeoDebugData.minSphereAngleShotTimestamp.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*GeoDebugData.minSphereAngleShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.minBaseline.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void GeoDebugData.minBaseline.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*GeoDebugData.minBaseline.modify())()
{
  return nullsub_1;
}

float GeoDebugData.sphereAngleOfMinBaseline.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

void GeoDebugData.sphereAngleOfMinBaseline.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 20) = a1;
}

uint64_t (*GeoDebugData.sphereAngleOfMinBaseline.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minBaselineShotTimestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void GeoDebugData.minBaselineShotTimestamp.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*GeoDebugData.minBaselineShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.minGlobalAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void GeoDebugData.minGlobalAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*GeoDebugData.minGlobalAngle.modify())()
{
  return nullsub_1;
}

float GeoDebugData.baselineOfMinGlobalAngle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

void GeoDebugData.baselineOfMinGlobalAngle.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 36) = a1;
}

uint64_t (*GeoDebugData.baselineOfMinGlobalAngle.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minGlobalAngleShotTimestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void GeoDebugData.minGlobalAngleShotTimestamp.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*GeoDebugData.minGlobalAngleShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.minGlobalBaseline.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void GeoDebugData.minGlobalBaseline.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*GeoDebugData.minGlobalBaseline.modify())()
{
  return nullsub_1;
}

float GeoDebugData.globalAngleOfMinBaseline.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 52);
}

void GeoDebugData.globalAngleOfMinBaseline.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 52) = a1;
}

uint64_t (*GeoDebugData.globalAngleOfMinBaseline.modify())()
{
  return nullsub_1;
}

double GeoDebugData.minGlobalBaselineShotTimestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void GeoDebugData.minGlobalBaselineShotTimestamp.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*GeoDebugData.minGlobalBaselineShotTimestamp.modify())()
{
  return nullsub_1;
}

float GeoDebugData.sphereAngleConfusionIntervalUpperBound.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 64);
}

void GeoDebugData.sphereAngleConfusionIntervalUpperBound.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 64) = a1;
}

uint64_t (*GeoDebugData.sphereAngleConfusionIntervalUpperBound.modify())()
{
  return nullsub_1;
}

float GeoDebugData.sphereAngleConfusionIntervalLowerBound.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 68);
}

void GeoDebugData.sphereAngleConfusionIntervalLowerBound.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 68) = a1;
}

uint64_t (*GeoDebugData.sphereAngleConfusionIntervalLowerBound.modify())()
{
  return nullsub_1;
}

float GeoDebugData.baselineThreshold.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 72);
}

void GeoDebugData.baselineThreshold.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 72) = a1;
}

uint64_t (*GeoDebugData.baselineThreshold.modify())()
{
  return nullsub_1;
}

Swift::Void __swiftcall GeoDebugData.reset()()
{
  _QWORD *v0;

  *v0 = 0xBF8000007F800000;
  v0[1] = 0xBFF0000000000000;
  v0[2] = 0xBF8000007F800000;
  v0[3] = 0xBFF0000000000000;
  v0[4] = 0xBF8000007F800000;
  v0[5] = 0xBFF0000000000000;
  v0[6] = 0xBF8000007F800000;
  v0[7] = 0xBFF0000000000000;
}

double sub_239346E7C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0xBF8000007F800000;
  *(_QWORD *)(a1 + 8) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 16) = 0xBF8000007F800000;
  *(_QWORD *)(a1 + 24) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 32) = 0xBF8000007F800000;
  *(_QWORD *)(a1 + 40) = 0xBFF0000000000000;
  *(_QWORD *)(a1 + 48) = 0xBF8000007F800000;
  *(_QWORD *)(a1 + 56) = 0xBFF0000000000000;
  __asm { FMOV            V0.2S, #-1.0 }
  *(double *)(a1 + 64) = result;
  *(_DWORD *)(a1 + 72) = -1082130432;
  return result;
}

uint64_t sub_239346EBC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_239346EF8(a1);
  return v2;
}

uint64_t sub_239346EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int8x16_t v4;
  float32x2_t v5;
  float32x2_t v6;
  int8x16_t v7;
  int8x16_t v8;
  float32x4_t v10;
  float32x4_t v11;
  float32x4_t v12;
  simd_float4 v13;
  char v14;
  simd_float4x4 v15;

  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 88) = sub_23934588C(MEMORY[0x24BEE4AF8], &qword_25692C168, (uint64_t *)&unk_25692C140, type metadata accessor for OCObjectCentricPoseNode);
  *(_QWORD *)(v1 + 96) = sub_23934588C(v3, &qword_25692C160, (uint64_t *)&unk_25692C150, type metadata accessor for VIOPoseNode);
  sub_239351FB4();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_vioClosenessCheckLogIntervalThresh) = 0x3FF0000000000000;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming) = 0;
  sub_239268764(a1, (uint64_t)&v10, &qword_25692A8A0);
  if (v14 == 1)
  {
    sub_239268764(a1, v1 + 16, &qword_25692A8A0);
  }
  else
  {
    v4 = (int8x16_t)vmulq_f32(v10, v10);
    *(float32x2_t *)v4.i8 = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
    v4.i32[0] = vadd_f32(*(float32x2_t *)v4.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v4.i8, 1)).u32[0];
    v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
    v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
    v4.i32[0] = vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).u32[0];
    v7 = (int8x16_t)vmulq_f32(v11, v11);
    *(float32x2_t *)v7.i8 = vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL));
    v15.columns[0] = (simd_float4)vmulq_n_f32(v10, *(float *)v4.i32);
    v4.i32[0] = vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v7.i8, 1)).u32[0];
    *(float32x2_t *)v7.i8 = vrsqrte_f32((float32x2_t)v4.u32[0]);
    *(float32x2_t *)v7.i8 = vmul_f32(*(float32x2_t *)v7.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v7.i8, *(float32x2_t *)v7.i8)));
    v4.i32[0] = vmul_f32(*(float32x2_t *)v7.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v7.i8, *(float32x2_t *)v7.i8))).u32[0];
    v15.columns[3] = v13;
    v8 = (int8x16_t)vmulq_f32(v12, v12);
    *(float32x2_t *)v8.i8 = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL));
    v15.columns[1] = (simd_float4)vmulq_n_f32(v11, *(float *)v4.i32);
    v4.i32[0] = vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1)).u32[0];
    *(float32x2_t *)v8.i8 = vrsqrte_f32((float32x2_t)v4.u32[0]);
    *(float32x2_t *)v8.i8 = vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8)));
    v15.columns[2] = (simd_float4)vmulq_n_f32(v12, vmul_f32(*(float32x2_t *)v8.i8, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(*(float32x2_t *)v8.i8, *(float32x2_t *)v8.i8))).f32[0]);
    *(simd_float4x4 *)(v1 + 16) = __invert_f4(v15);
    *(_BYTE *)(v1 + 80) = 0;
  }
  return v1;
}

uint64_t sub_23934709C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = sub_239352020();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23925FB08(&qword_25692BD20);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - v10;
  swift_beginAccess();
  v12 = *(_QWORD *)(v1 + 88);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_239292F4C(a1);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      v24 = v1 + 88;
      v16 = v5;
      v17 = a1;
      v18 = *(_QWORD *)(v12 + 56);
      v19 = type metadata accessor for OCObjectCentricPoseNode(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = v18 + *(_QWORD *)(v20 + 72) * v15;
      a1 = v17;
      v5 = v16;
      sub_239268820(v21, (uint64_t)v11, type metadata accessor for OCObjectCentricPoseNode);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
    }
    else
    {
      v19 = type metadata accessor for OCObjectCentricPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for OCObjectCentricPoseNode(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v11, 1, v19) != 1)
    {
      sub_23925FE28((uint64_t)v11, &qword_25692BD20);
      return 0;
    }
  }
  else
  {
    v19 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  }
  sub_23925FE28((uint64_t)v11, &qword_25692BD20);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v25);
  sub_239268820(a1, (uint64_t)v9, type metadata accessor for OCObjectCentricPoseNode);
  type metadata accessor for OCObjectCentricPoseNode(0);
  v22 = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 0, 1, v19);
  swift_beginAccess();
  sub_239347344((uint64_t)v9, (uint64_t)v5, &qword_25692BD20, type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_25692C140);
  swift_endAccess();
  return v22;
}

uint64_t sub_239347344(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v9 = v5;
  v12 = sub_23925FB08(a3);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a4(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - v16;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(a1, 1) == 1)
  {
    sub_23925FE28(a1, a3);
    sub_23934C1BC(a2, a4, a5, (uint64_t)v14);
    v19 = sub_239352020();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
    return sub_23925FE28((uint64_t)v14, a3);
  }
  else
  {
    sub_2392C4FE0(a1, (uint64_t)v17, a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v9;
    *v9 = 0x8000000000000000;
    sub_23934C9C8((uint64_t)v17, a2, isUniquelyReferenced_nonNull_native, a4, a5);
    *v9 = v24;
    swift_bridgeObjectRelease();
    v22 = sub_239352020();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a2, v22);
  }
}

uint64_t sub_2393474D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v4 = sub_239352020();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23925FB08(&qword_25692BD28);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = v1 + 96;
  swift_beginAccess();
  v15 = *(_QWORD *)(v1 + 96);
  if (*(_QWORD *)(v15 + 16))
  {
    v33 = v5;
    swift_bridgeObjectRetain();
    v16 = sub_239292F4C(a1);
    if ((v17 & 1) != 0)
    {
      v18 = v16;
      v31 = v4;
      v19 = *(_QWORD *)(v15 + 56);
      v20 = type metadata accessor for VIOPoseNode(0);
      v32 = v14;
      v21 = v7;
      v22 = v2;
      v23 = a1;
      v24 = *(_QWORD *)(v20 - 8);
      v25 = v19 + *(_QWORD *)(v24 + 72) * v18;
      v4 = v31;
      sub_239268820(v25, (uint64_t)v13, type metadata accessor for VIOPoseNode);
      v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
      a1 = v23;
      v2 = v22;
      v7 = v21;
      v26(v13, 0, 1, v20);
    }
    else
    {
      v20 = type metadata accessor for VIOPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for VIOPoseNode(0);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20);
    v5 = v33;
    if (v27 != 1)
    {
      sub_23925FE28((uint64_t)v13, &qword_25692BD28);
      return 0;
    }
  }
  else
  {
    v20 = type metadata accessor for VIOPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  }
  sub_23925FE28((uint64_t)v13, &qword_25692BD28);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_239268820(a1, (uint64_t)v11, type metadata accessor for VIOPoseNode);
  type metadata accessor for VIOPoseNode(0);
  v28 = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
  swift_beginAccess();
  sub_239347344((uint64_t)v11, (uint64_t)v7, &qword_25692BD28, type metadata accessor for VIOPoseNode, (uint64_t *)&unk_25692C150);
  swift_endAccess();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming) = 1;
  return v28;
}

uint64_t sub_2393477A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v2 = v1;
  v4 = sub_23925FB08(&qword_25692BD28);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v55 - v8;
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23925FB08(&qword_25692BD20);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v55 - v18;
  v57 = v1 + 88;
  swift_beginAccess();
  v20 = *(_QWORD *)(v1 + 88);
  v21 = *(_QWORD *)(v20 + 16);
  v58 = v11;
  v59 = v10;
  if (v21)
  {
    v56 = v17;
    swift_bridgeObjectRetain();
    v22 = sub_239292F4C(a1);
    if ((v23 & 1) != 0)
    {
      v24 = v22;
      v55 = a1;
      v25 = *(_QWORD *)(v20 + 56);
      v26 = type metadata accessor for OCObjectCentricPoseNode(0);
      v27 = v9;
      v28 = v7;
      v29 = v13;
      v30 = *(_QWORD *)(v26 - 8);
      v31 = v25 + *(_QWORD *)(v30 + 72) * v24;
      a1 = v55;
      sub_239268820(v31, (uint64_t)v19, type metadata accessor for OCObjectCentricPoseNode);
      v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
      v13 = v29;
      v7 = v28;
      v9 = v27;
      v11 = v58;
      v32(v19, 0, 1, v26);
    }
    else
    {
      v26 = type metadata accessor for OCObjectCentricPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v19, 1, 1, v26);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for OCObjectCentricPoseNode(0);
    v34 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v19, 1, v26) != 1)
    {
      sub_23925FE28((uint64_t)v19, &qword_25692BD20);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v59);
      v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
      v49 = 1;
      v50 = (uint64_t)v56;
      v48(v56, 1, 1, v26);
      swift_beginAccess();
      sub_239347344(v50, (uint64_t)v13, &qword_25692BD20, type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_25692C140);
      goto LABEL_16;
    }
  }
  else
  {
    v33 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v19, 1, 1, v33);
  }
  sub_23925FE28((uint64_t)v19, &qword_25692BD20);
  swift_beginAccess();
  v35 = *(_QWORD *)(v2 + 96);
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    v36 = sub_239292F4C(a1);
    if ((v37 & 1) != 0)
    {
      v38 = v36;
      v39 = v13;
      v40 = *(_QWORD *)(v35 + 56);
      v41 = type metadata accessor for VIOPoseNode(0);
      v42 = (uint64_t)v9;
      v43 = v7;
      v44 = a1;
      v45 = *(_QWORD *)(v41 - 8);
      v46 = v40 + *(_QWORD *)(v45 + 72) * v38;
      v13 = v39;
      sub_239268820(v46, v42, type metadata accessor for VIOPoseNode);
      v47 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56);
      a1 = v44;
      v7 = v43;
      v9 = (char *)v42;
      v47(v42, 0, 1, v41);
    }
    else
    {
      v41 = type metadata accessor for VIOPoseNode(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v9, 1, 1, v41);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for VIOPoseNode(0);
    v52 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v9, 1, v41) == 1)
      goto LABEL_14;
    sub_23925FE28((uint64_t)v9, &qword_25692BD28);
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v13, a1, v59);
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v49 = 1;
    v53(v7, 1, 1, v41);
    swift_beginAccess();
    sub_239347344((uint64_t)v7, (uint64_t)v13, &qword_25692BD28, type metadata accessor for VIOPoseNode, (uint64_t *)&unk_25692C150);
LABEL_16:
    swift_endAccess();
    return v49;
  }
  v51 = type metadata accessor for VIOPoseNode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v9, 1, 1, v51);
LABEL_14:
  sub_23925FE28((uint64_t)v9, &qword_25692BD28);
  return 0;
}

uint64_t sub_239347C48(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  int v53;
  int v54;
  void (*v55)(uint64_t *, uint64_t, uint64_t);
  void (*v56)(uint64_t *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  void (*v63)(uint64_t *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v101;
  char v102;
  uint64_t v103;
  _BOOL8 v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  _BOOL8 v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  __n128 *v119;
  __n128 v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  __n128 *v124;
  __n128 v125;
  __n128 v126;
  uint64_t v127;
  uint64_t result;
  uint64_t v129;
  void (*v130)(uint64_t *, uint64_t, uint64_t);
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  __n128 v137;
  __n128 v138;
  __n128 v139;
  __n128 v140;
  uint64_t *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148[3];

  v140 = a5;
  v139 = a4;
  v138 = a3;
  v137 = a2;
  v7 = sub_23925FB08(&qword_25692BD28);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v131 = (uint64_t)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v143 = (uint64_t)&v129 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v129 - v12;
  v14 = sub_239352020();
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v141 = (uint64_t *)((char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v16);
  v136 = (char *)&v129 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v135 = (char *)&v129 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v134 = (char *)&v129 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v133 = (char *)&v129 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v142 = (char *)&v129 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (uint64_t *)((char *)&v129 - v28);
  v30 = sub_23925FB08(&qword_25692BD20);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v129 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v144 = (char *)&v129 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v129 - v36;
  v38 = (uint64_t *)(v5 + 88);
  swift_beginAccess();
  v146 = v5;
  v39 = *(_QWORD *)(v5 + 88);
  v40 = *(_QWORD *)(v39 + 16);
  v132 = v33;
  v145 = v29;
  if (!v40)
  {
    v52 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v37, 1, 1, v52);
LABEL_7:
    v53 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v41 = sub_239292F4C(a1);
  if ((v42 & 1) != 0)
  {
    v43 = v41;
    v44 = *(_QWORD *)(v39 + 56);
    v45 = type metadata accessor for OCObjectCentricPoseNode(0);
    v130 = v15;
    v46 = v13;
    v47 = v38;
    v48 = a1;
    v49 = v14;
    v50 = *(_QWORD *)(v45 - 8);
    sub_239268820(v44 + *(_QWORD *)(v50 + 72) * v43, (uint64_t)v37, type metadata accessor for OCObjectCentricPoseNode);
    v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56);
    v14 = v49;
    a1 = v48;
    v38 = v47;
    v13 = v46;
    v15 = v130;
    v51(v37, 0, 1, v45);
  }
  else
  {
    v45 = type metadata accessor for OCObjectCentricPoseNode(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v37, 1, 1, v45);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for OCObjectCentricPoseNode(0);
  v53 = 1;
  v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v37, 1, v45);
  v29 = v145;
  if (v54 == 1)
    goto LABEL_7;
LABEL_8:
  sub_23925FE28((uint64_t)v37, &qword_25692BD20);
  v55 = (void (*)(uint64_t *, uint64_t, uint64_t))*((_QWORD *)v15 + 2);
  v55(v29, a1, v14);
  if (v53)
  {
    v56 = (void (*)(uint64_t *, uint64_t))*((_QWORD *)v15 + 1);
    v56(v29, v14);
  }
  else
  {
    v57 = (uint64_t)v13;
    v58 = v146;
    swift_beginAccess();
    v59 = *(_QWORD *)(v58 + 96);
    if (*(_QWORD *)(v59 + 16))
    {
      swift_bridgeObjectRetain();
      v60 = sub_239292F4C((uint64_t)v29);
      if ((v61 & 1) != 0)
      {
        v62 = v60;
        v130 = v55;
        v63 = v15;
        v64 = *(_QWORD *)(v59 + 56);
        v65 = type metadata accessor for VIOPoseNode(0);
        v66 = v38;
        v67 = a1;
        v68 = v14;
        v69 = *(_QWORD *)(v65 - 8);
        v70 = v64 + *(_QWORD *)(v69 + 72) * v62;
        v15 = v63;
        v55 = v130;
        sub_239268820(v70, v57, type metadata accessor for VIOPoseNode);
        v71 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56);
        v14 = v68;
        a1 = v67;
        v38 = v66;
        v71(v57, 0, 1, v65);
      }
      else
      {
        v65 = type metadata accessor for VIOPoseNode(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v57, 1, 1, v65);
      }
      swift_bridgeObjectRelease();
      v29 = v145;
    }
    else
    {
      v65 = type metadata accessor for VIOPoseNode(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v57, 1, 1, v65);
    }
    v56 = (void (*)(uint64_t *, uint64_t))*((_QWORD *)v15 + 1);
    v56(v29, v14);
    type metadata accessor for VIOPoseNode(0);
    v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v57, 1, v65);
    sub_23925FE28(v57, &qword_25692BD28);
    if (v72 == 1)
      return 0;
  }
  v74 = *v38;
  if (*(_QWORD *)(*v38 + 16))
  {
    v145 = v38;
    swift_bridgeObjectRetain();
    v75 = sub_239292F4C(a1);
    v76 = (uint64_t)v144;
    if ((v77 & 1) != 0)
    {
      v78 = v75;
      v79 = *(_QWORD *)(v74 + 56);
      v80 = type metadata accessor for OCObjectCentricPoseNode(0);
      v81 = *(_QWORD *)(v80 - 8);
      sub_239268820(v79 + *(_QWORD *)(v81 + 72) * v78, v76, type metadata accessor for OCObjectCentricPoseNode);
      (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v81 + 56))(v76, 0, 1, v80);
    }
    else
    {
      v80 = type metadata accessor for OCObjectCentricPoseNode(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v80 - 8) + 56))(v76, 1, 1, v80);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for OCObjectCentricPoseNode(0);
    v83 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v83 + 48))(v76, 1, v80) != 1)
    {
      sub_23925FE28(v76, &qword_25692BD20);
      v98 = v142;
      v55((uint64_t *)v142, a1, v14);
      v85 = v145;
      swift_beginAccess();
      v88 = v133;
      v55((uint64_t *)v133, (uint64_t)v98, v14);
      LODWORD(v99) = swift_isUniquelyReferenced_nonNull_native();
      isUniquelyReferenced_nonNull_native = (uint64_t)v134;
      v146 = v14;
      v55((uint64_t *)v134, (uint64_t)v88, v14);
      v148[0] = *v85;
      v101 = v148[0];
      *v85 = 0x8000000000000000;
      v94 = sub_239292F4C(isUniquelyReferenced_nonNull_native);
      v103 = *(_QWORD *)(v101 + 16);
      v104 = (v102 & 1) == 0;
      v105 = v103 + v104;
      if (!__OFADD__(v103, v104))
      {
        LOBYTE(v55) = v102;
        if (*(_QWORD *)(v101 + 24) < v105)
        {
          sub_23934C308(v105, (int)v99, type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_25692C140);
          v106 = sub_239292F4C(isUniquelyReferenced_nonNull_native);
          if ((v55 & 1) != (v107 & 1))
          {
LABEL_55:
            sub_239352908();
            __break(1u);
            goto LABEL_56;
          }
          v94 = v106;
          if ((v55 & 1) == 0)
            goto LABEL_52;
          goto LABEL_43;
        }
        if ((v99 & 1) != 0)
        {
          if ((v102 & 1) == 0)
          {
LABEL_52:
            (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v83 + 56))(v132, 1, 1, v80);
            __break(1u);
            goto LABEL_53;
          }
LABEL_43:
          v118 = (uint64_t)v132;
          sub_2392C4FE0(*(_QWORD *)(v148[0] + 56) + *(_QWORD *)(v83 + 72) * v94, (uint64_t)v132, type metadata accessor for OCObjectCentricPoseNode);
          v73 = 1;
          (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v83 + 56))(v118, 0, 1, v80);
          v119 = (__n128 *)(v118 + *(int *)(v80 + 36));
          v120 = v138;
          *v119 = v137;
          v119[1] = v120;
          v121 = v140;
          v119[2] = v139;
          v119[3] = v121;
          sub_23934CECC(v118, 1, v148, v94, isUniquelyReferenced_nonNull_native, &qword_25692BD20, type metadata accessor for OCObjectCentricPoseNode);
          sub_23925FE28(v118, &qword_25692BD20);
          v122 = v146;
          v56((uint64_t *)isUniquelyReferenced_nonNull_native, v146);
          *v145 = v148[0];
          v56((uint64_t *)v88, v122);
          v56((uint64_t *)v142, v122);
LABEL_47:
          swift_endAccess();
          return v73;
        }
LABEL_51:
        sub_23934CC08(type metadata accessor for OCObjectCentricPoseNode, (uint64_t *)&unk_25692C140);
        if ((v55 & 1) == 0)
          goto LABEL_52;
        goto LABEL_43;
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
  }
  else
  {
    v82 = type metadata accessor for OCObjectCentricPoseNode(0);
    v76 = (uint64_t)v144;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v144, 1, 1, v82);
  }
  sub_23925FE28(v76, &qword_25692BD20);
  v84 = v146;
  v85 = (uint64_t *)(v146 + 96);
  swift_beginAccess();
  v86 = *(_QWORD *)(v84 + 96);
  if (!*(_QWORD *)(v86 + 16))
  {
    v108 = type metadata accessor for VIOPoseNode(0);
    v97 = v143;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v143, 1, 1, v108);
LABEL_35:
    sub_23925FE28(v97, &qword_25692BD28);
    return 1;
  }
  v87 = a1;
  v88 = (char *)v14;
  swift_bridgeObjectRetain();
  v89 = v87;
  v90 = sub_239292F4C(v87);
  if ((v91 & 1) != 0)
  {
    v92 = v90;
    v93 = *(_QWORD *)(v86 + 56);
    v94 = type metadata accessor for VIOPoseNode(0);
    v95 = *(_QWORD *)(v94 - 8);
    v96 = v93 + *(_QWORD *)(v95 + 72) * v92;
    v97 = v143;
    sub_239268820(v96, v143, type metadata accessor for VIOPoseNode);
    (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v95 + 56))(v97, 0, 1, v94);
  }
  else
  {
    v94 = type metadata accessor for VIOPoseNode(0);
    v97 = v143;
    (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v94 - 8) + 56))(v143, 1, 1, v94);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for VIOPoseNode(0);
  v83 = *(_QWORD *)(v94 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v83 + 48))(v97, 1, v94) == 1)
    goto LABEL_35;
  sub_23925FE28(v97, &qword_25692BD28);
  v109 = v135;
  v55((uint64_t *)v135, v89, (uint64_t)v88);
  swift_beginAccess();
  v99 = v136;
  v55((uint64_t *)v136, (uint64_t)v109, (uint64_t)v88);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v110 = (uint64_t)v141;
  v55(v141, (uint64_t)v99, (uint64_t)v88);
  v147 = *v85;
  v111 = v147;
  *v85 = 0x8000000000000000;
  v80 = sub_239292F4C(v110);
  v113 = *(_QWORD *)(v111 + 16);
  v114 = (v112 & 1) == 0;
  v115 = v113 + v114;
  if (__OFADD__(v113, v114))
    goto LABEL_50;
  LOBYTE(v99) = v112;
  if (*(_QWORD *)(v111 + 24) >= v115)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v112 & 1) != 0)
      {
LABEL_46:
        v123 = v131;
        sub_2392C4FE0(*(_QWORD *)(v147 + 56) + *(_QWORD *)(v83 + 72) * v80, v131, type metadata accessor for VIOPoseNode);
        v73 = 1;
        (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v83 + 56))(v123, 0, 1, v94);
        v124 = (__n128 *)(v123 + *(int *)(v94 + 28));
        v125 = v138;
        *v124 = v137;
        v124[1] = v125;
        v126 = v140;
        v124[2] = v139;
        v124[3] = v126;
        v127 = (uint64_t)v141;
        sub_23934CECC(v123, 1, &v147, v80, (uint64_t)v141, &qword_25692BD28, type metadata accessor for VIOPoseNode);
        sub_23925FE28(v123, &qword_25692BD28);
        v56((uint64_t *)v127, (uint64_t)v88);
        *v85 = v147;
        v56((uint64_t *)v136, (uint64_t)v88);
        v56((uint64_t *)v135, (uint64_t)v88);
        goto LABEL_47;
      }
LABEL_54:
      (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v83 + 56))(v131, 1, 1, v94);
      __break(1u);
      goto LABEL_55;
    }
LABEL_53:
    sub_23934CC08(type metadata accessor for VIOPoseNode, (uint64_t *)&unk_25692C150);
    if ((v99 & 1) != 0)
      goto LABEL_46;
    goto LABEL_54;
  }
  sub_23934C308(v115, isUniquelyReferenced_nonNull_native, type metadata accessor for VIOPoseNode, (uint64_t *)&unk_25692C150);
  v116 = sub_239292F4C((uint64_t)v141);
  if ((v99 & 1) == (v117 & 1))
  {
    v80 = v116;
    if ((v99 & 1) == 0)
      goto LABEL_54;
    goto LABEL_46;
  }
LABEL_56:
  result = sub_239352908();
  __break(1u);
  return result;
}

uint64_t sub_239348820()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 88) = MEMORY[0x24BEE4B00];
  return swift_bridgeObjectRelease();
}

uint64_t sub_239348860()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 96) = MEMORY[0x24BEE4B00];
  return swift_bridgeObjectRelease();
}

uint64_t sub_2393488A0(uint64_t a1, uint64_t (*a2)(uint64_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128), float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, uint64_t a7, uint64_t a8)
{
  float32x4_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  float v58;
  int v59;
  float v60;
  float v61;
  float v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  unsigned __int32 v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t);
  float32x4_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  float32x4_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  float32x2_t *v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  float32x4_t v110;
  float32x4_t v111;
  __n128 v112;
  __n128 v113;
  __n128 v114;
  uint64_t v115;
  float v116;
  int v117;
  float v118;
  float v119;
  float v120;
  uint64_t v121;
  float32x4_t *v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  float32x4_t *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int64_t v139;
  float32x4_t v140;
  float32x4_t v141;
  float32x4_t v142;
  float32x4_t v143;
  float32x4_t v144;
  float32x4_t v145;
  float32x4_t v146;
  float32x4_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128);
  uint64_t v150;
  float v151;
  char v152;
  float v153;
  char v154;
  float v155;
  char v156;
  uint64_t v157;
  simd_float4x4 v158;
  char v159;
  simd_float4x4 v160;

  v149 = a2;
  v147 = a6;
  v146 = a5;
  v145 = a4;
  v144 = a3;
  v148 = a1;
  v132 = sub_2393520B0();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v142.i64[0] = (uint64_t)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_239352164();
  v129 = *(_QWORD *)(v130 - 8);
  v11 = MEMORY[0x24BDAC7A8](v130);
  v126 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v128 = (char *)&v124 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v134 = (char *)&v124 - v15;
  v143.i64[0] = type metadata accessor for VIOPoseNode(0);
  v140.i64[0] = *(_QWORD *)(v143.i64[0] - 8);
  MEMORY[0x24BDAC7A8](v143.i64[0]);
  v17 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23925FB08(&qword_25692BD30);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v124 - v22;
  v136 = sub_2393521F4();
  v135 = *(_QWORD *)(v136 - 8);
  v24 = MEMORY[0x24BDAC7A8](v136);
  v127 = (char *)&v124 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v137 = (char *)&v124 - v26;
  v27 = (int *)type metadata accessor for OCObjectCentricPoseNode(0);
  v139 = *((_QWORD *)v27 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23925FB08(&qword_25692BD38);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v124 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v124 - v34;
  *(_QWORD *)a8 = 0xBF8000007F800000;
  *(_QWORD *)(a8 + 8) = 0xBFF0000000000000;
  *(_QWORD *)(a8 + 16) = 0xBF8000007F800000;
  *(_QWORD *)(a8 + 24) = 0xBFF0000000000000;
  *(_QWORD *)(a8 + 32) = 0xBF8000007F800000;
  *(_QWORD *)(a8 + 40) = 0xBFF0000000000000;
  *(_QWORD *)(a8 + 48) = 0xBF8000007F800000;
  *(_QWORD *)(a8 + 56) = 0xBFF0000000000000;
  sub_239268764(v148, (uint64_t)&v158, &qword_25692A8A0);
  if ((v159 & 1) == 0 && (v8[5].i8[0] & 1) == 0)
  {
    v143 = v8[1];
    v142 = v8[2];
    v141 = v8[3];
    v140 = v8[4];
    v160 = __invert_f4(v158);
    v86 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v160.columns[0].f32[0]), v142, *(float32x2_t *)v160.columns[0].f32, 1), v141, (float32x4_t)v160.columns[0], 2), v140, (float32x4_t)v160.columns[0], 3);
    v160.columns[0] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v160.columns[1].f32[0]), v142, *(float32x2_t *)v160.columns[1].f32, 1), v141, (float32x4_t)v160.columns[1], 2), v140, (float32x4_t)v160.columns[1], 3);
    v160.columns[1] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v160.columns[2].f32[0]), v142, *(float32x2_t *)v160.columns[2].f32, 1), v141, (float32x4_t)v160.columns[2], 2), v140, (float32x4_t)v160.columns[2], 3);
    v160.columns[2] = (simd_float4)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, v160.columns[3].f32[0]), v142, *(float32x2_t *)v160.columns[3].f32, 1), v141, (float32x4_t)v160.columns[3], 2), v140, (float32x4_t)v160.columns[3], 3);
    v144 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v144.f32[0]), (float32x4_t)v160.columns[0], *(float32x2_t *)v144.f32, 1), (float32x4_t)v160.columns[1], v144, 2), (float32x4_t)v160.columns[2], v144, 3);
    v145 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v145.f32[0]), (float32x4_t)v160.columns[0], *(float32x2_t *)v145.f32, 1), (float32x4_t)v160.columns[1], v145, 2), (float32x4_t)v160.columns[2], v145, 3);
    v146 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v146.f32[0]), (float32x4_t)v160.columns[0], *(float32x2_t *)v146.f32, 1), (float32x4_t)v160.columns[1], v146, 2), (float32x4_t)v160.columns[2], v146, 3);
    v147 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v86, v147.f32[0]), (float32x4_t)v160.columns[0], *(float32x2_t *)v147.f32, 1), (float32x4_t)v160.columns[1], v147, 2), (float32x4_t)v160.columns[2], v147, 3);
    swift_beginAccess();
    v87 = v8[5].i64[1];
    v88 = *(_QWORD *)(v87 + 64);
    v136 = v87 + 64;
    v89 = 1 << *(_BYTE *)(v87 + 32);
    v90 = -1;
    if (v89 < 64)
      v90 = ~(-1 << v89);
    v91 = v90 & v88;
    v137 = (char *)((unint64_t)(v89 + 63) >> 6);
    v135 = (uint64_t)(v137 - 1);
    v138 = v87;
    result = swift_bridgeObjectRetain();
    v148 = 0;
    while (!v91)
    {
      v100 = v148 + 1;
      if (__OFADD__(v148, 1))
      {
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      if (v100 < (uint64_t)v137)
      {
        v101 = *(_QWORD *)(v136 + 8 * v100);
        if (v101)
          goto LABEL_55;
        v102 = v148 + 2;
        ++v148;
        if (v100 + 1 < (uint64_t)v137)
        {
          v101 = *(_QWORD *)(v136 + 8 * v102);
          if (v101)
            goto LABEL_58;
          v148 = v100 + 1;
          if (v100 + 2 < (uint64_t)v137)
          {
            v101 = *(_QWORD *)(v136 + 8 * (v100 + 2));
            if (v101)
            {
              v100 += 2;
LABEL_55:
              v91 = (v101 - 1) & v101;
              v94 = __clz(__rbit64(v101)) + (v100 << 6);
              v148 = v100;
LABEL_51:
              v95 = v138;
              v96 = *(_QWORD *)(v138 + 48);
              v97 = sub_239352020();
              (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v33, v96 + *(_QWORD *)(*(_QWORD *)(v97 - 8) + 72) * v94, v97);
              v98 = *(_QWORD *)(v95 + 56) + *(_QWORD *)(v139 + 72) * v94;
              v99 = sub_23925FB08(&qword_25692BD48);
              sub_239268820(v98, (uint64_t)&v33[*(int *)(v99 + 48)], type metadata accessor for OCObjectCentricPoseNode);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v33, 0, 1, v99);
              goto LABEL_70;
            }
            v102 = v100 + 3;
            v148 = v100 + 2;
            if (v100 + 3 < (uint64_t)v137)
            {
              v101 = *(_QWORD *)(v136 + 8 * v102);
              if (v101)
              {
LABEL_58:
                v100 = v102;
                goto LABEL_55;
              }
              while (1)
              {
                v100 = v102 + 1;
                if (__OFADD__(v102, 1))
                  goto LABEL_93;
                if (v100 >= (uint64_t)v137)
                  break;
                v101 = *(_QWORD *)(v136 + 8 * v100);
                ++v102;
                if (v101)
                  goto LABEL_55;
              }
              v148 = v135;
            }
          }
        }
      }
      v103 = sub_23925FB08(&qword_25692BD48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v33, 1, 1, v103);
      v91 = 0;
LABEL_70:
      sub_239268764((uint64_t)v33, (uint64_t)v35, &qword_25692BD38);
      v104 = sub_23925FB08(&qword_25692BD48);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v35, 1, v104) == 1)
      {
        swift_release();
        return 1;
      }
      sub_2392C4FE0((uint64_t)&v35[*(int *)(v104 + 48)], (uint64_t)v29, type metadata accessor for OCObjectCentricPoseNode);
      v105 = v27[9];
      v106 = (float32x2_t *)&v29[v27[8]];
      v107 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, COERCE_FLOAT(*(_OWORD *)v106->f32)), v142, *v106, 1), v141, *(float32x4_t *)v106->f32, 2), v140, *(float32x4_t *)v106->f32, 3);
      v108 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, COERCE_FLOAT(*(_OWORD *)v106[2].f32)), v142, v106[2], 1), v141, *(float32x4_t *)v106[2].f32, 2), v140, *(float32x4_t *)v106[2].f32, 3);
      v109 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, COERCE_FLOAT(*(_OWORD *)v106[4].f32)), v142, v106[4], 1), v141, *(float32x4_t *)v106[4].f32, 2), v140, *(float32x4_t *)v106[4].f32, 3);
      v110 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v143, COERCE_FLOAT(*(_OWORD *)v106[6].f32)), v142, v106[6], 1), v141, *(float32x4_t *)v106[6].f32, 2), v140, *(float32x4_t *)v106[6].f32, 3);
      v111 = *(float32x4_t *)&v29[v105 + 48];
      v112 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, COERCE_FLOAT(*(_OWORD *)&v29[v105])), v108, *(float32x2_t *)&v29[v105], 1), v109, *(float32x4_t *)&v29[v105], 2), v110, *(float32x4_t *)&v29[v105], 3);
      v113 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, COERCE_FLOAT(*(_OWORD *)&v29[v105 + 16])), v108, *(float32x2_t *)&v29[v105 + 16], 1), v109, *(float32x4_t *)&v29[v105 + 16], 2), v110, *(float32x4_t *)&v29[v105 + 16], 3);
      v114 = (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, COERCE_FLOAT(*(_OWORD *)&v29[v105 + 32])), v108, *(float32x2_t *)&v29[v105 + 32], 1), v109, *(float32x4_t *)&v29[v105 + 32], 2), v110, *(float32x4_t *)&v29[v105 + 32], 3);
      LODWORD(v150) = 0;
      BYTE4(v150) = 1;
      v151 = 0.0;
      v152 = 1;
      v153 = 0.0;
      v154 = 1;
      v155 = 0.0;
      v156 = 1;
      if ((v149(&v150, (__n128)v144, (__n128)v145, (__n128)v146, (__n128)v147, v112, v113, v114, (__n128)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v107, v111.f32[0]), v108, *(float32x2_t *)v111.f32, 1), v109, v111, 2), v110, v111, 3)) & 1) != 0)
      {
        sub_2392688AC((uint64_t)v29, type metadata accessor for OCObjectCentricPoseNode);
        swift_release();
        v121 = sub_239352020();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v121 - 8) + 8))(v35, v121);
        return 0;
      }
      v115 = *(_QWORD *)&v29[v27[5]];
      if ((v150 & 0x100000000) == 0 && (v152 & 1) == 0)
      {
        v116 = v151;
        v117 = v150;
        if (*(float *)&v150 < *(float *)a8)
        {
          *(_DWORD *)a8 = v150;
          *(float *)(a8 + 4) = v116;
          *(_QWORD *)(a8 + 8) = v115;
        }
        if (v116 < *(float *)(a8 + 16))
        {
          *(float *)(a8 + 16) = v116;
          *(_DWORD *)(a8 + 20) = v117;
          *(_QWORD *)(a8 + 24) = v115;
        }
      }
      if (((v156 | v154) & 1) == 0)
      {
        v118 = v155;
        v119 = sub_2392DF050(v153, -1.0, 1.0);
        v120 = acosf(v119);
        if (*(float *)(a8 + 32) < v120)
        {
          *(float *)(a8 + 32) = v120;
          *(float *)(a8 + 36) = v118;
          *(_QWORD *)(a8 + 40) = v115;
        }
        if (v118 < *(float *)(a8 + 48))
        {
          *(float *)(a8 + 48) = v118;
          *(float *)(a8 + 52) = v120;
          *(_QWORD *)(a8 + 56) = v115;
        }
      }
      sub_2392688AC((uint64_t)v29, type metadata accessor for OCObjectCentricPoseNode);
      v92 = sub_239352020();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v92 - 8) + 8))(v35, v92);
    }
    v93 = __clz(__rbit64(v91));
    v91 &= v91 - 1;
    v94 = v93 | (v148 << 6);
    goto LABEL_51;
  }
  sub_2393521DC();
  swift_beginAccess();
  v133 = v8;
  v36 = v8[6].i64[0];
  v37 = *(_QWORD *)(v36 + 64);
  v138 = v36 + 64;
  v38 = 1 << *(_BYTE *)(v36 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & v37;
  v139 = (unint64_t)(v38 + 63) >> 6;
  v125 = v139 - 1;
  v141.i64[0] = v36;
  result = swift_bridgeObjectRetain();
  v148 = 0;
  v42 = v142.i64[0];
  while (1)
  {
    if (v40)
    {
      v44 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v45 = v44 | (v148 << 6);
LABEL_9:
      v46 = v141.i64[0];
      v47 = *(_QWORD *)(v141.i64[0] + 48);
      v48 = sub_239352020();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v21, v47 + *(_QWORD *)(*(_QWORD *)(v48 - 8) + 72) * v45, v48);
      v49 = *(_QWORD *)(v46 + 56) + *(_QWORD *)(v140.i64[0] + 72) * v45;
      v50 = sub_23925FB08(&qword_25692BD40);
      sub_239268820(v49, (uint64_t)&v21[*(int *)(v50 + 48)], type metadata accessor for VIOPoseNode);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v21, 0, 1, v50);
      v42 = v142.i64[0];
      goto LABEL_28;
    }
    v51 = v148 + 1;
    if (__OFADD__(v148, 1))
    {
      __break(1u);
      goto LABEL_91;
    }
    if (v51 < v139)
    {
      v52 = *(_QWORD *)(v138 + 8 * v51);
      if (v52)
        goto LABEL_13;
      v53 = v148 + 2;
      ++v148;
      if (v51 + 1 < v139)
      {
        v52 = *(_QWORD *)(v138 + 8 * v53);
        if (v52)
          goto LABEL_16;
        v148 = v51 + 1;
        if (v51 + 2 < v139)
        {
          v52 = *(_QWORD *)(v138 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
            goto LABEL_13;
          }
          v53 = v51 + 3;
          v148 = v51 + 2;
          if (v51 + 3 < v139)
            break;
        }
      }
    }
LABEL_27:
    v54 = sub_23925FB08(&qword_25692BD40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v21, 1, 1, v54);
    v40 = 0;
LABEL_28:
    sub_239268764((uint64_t)v21, (uint64_t)v23, &qword_25692BD30);
    v55 = sub_23925FB08(&qword_25692BD40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v23, 1, v55) == 1)
    {
      swift_release();
      v63 = OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming;
      if (v133->i8[OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_shouldLogClosenessTiming] == 1)
      {
        v64 = v127;
        sub_2393521DC();
        v65 = v134;
        sub_2393521E8();
        v149 = *(uint64_t (**)(uint64_t *, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))(v135 + 8);
        ((void (*)(char *, uint64_t))v149)(v64, v136);
        v66 = sub_239275A60();
        v67 = v131;
        v68 = v132;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v42, v66, v132);
        v69 = v129;
        v70 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
        v71 = v128;
        v72 = v65;
        v73 = v130;
        v70(v128, v72, v130);
        swift_retain_n();
        v74 = sub_239352098();
        v75 = sub_239352554();
        v76 = v75;
        if (os_log_type_enabled(v74, v75))
        {
          v77 = swift_slowAlloc();
          v148 = swift_slowAlloc();
          v150 = v148;
          *(_DWORD *)v77 = 136381187;
          v147.i32[0] = v76;
          v157 = sub_23925F3EC(0xD00000000000003DLL, 0x8000000239360E60, &v150);
          sub_2393526B0();
          *(_WORD *)(v77 + 12) = 2080;
          v70(v126, v71, v73);
          v78 = sub_23935232C();
          v157 = sub_23925F3EC(v78, v79, &v150);
          sub_2393526B0();
          swift_bridgeObjectRelease();
          v80 = *(void (**)(char *, uint64_t))(v69 + 8);
          v80(v71, v73);
          *(_WORD *)(v77 + 22) = 2080;
          v81 = v133;
          v157 = *(_QWORD *)(v133[6].i64[0] + 16);
          v82 = sub_2393528C0();
          v157 = sub_23925F3EC(v82, v83, &v150);
          sub_2393526B0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23925B000, v74, (os_log_type_t)v147.i8[0], "OCPoseGraph.%{private}s: Pose closeness check took\n%s with %s poses.", (uint8_t *)v77, 0x20u);
          v84 = v148;
          swift_arrayDestroy();
          MEMORY[0x23B83BC04](v84, -1, -1);
          MEMORY[0x23B83BC04](v77, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v142.i64[0], v132);
          v80(v134, v73);
        }
        else
        {
          v122 = v133;
          swift_release_n();

          v123 = *(void (**)(char *, uint64_t))(v69 + 8);
          v81 = v122;
          v123(v71, v73);
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v42, v68);
          v123(v134, v73);
        }
        ((void (*)(char *, uint64_t))v149)(v137, v136);
        v81->i8[v63] = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v136);
      }
      return 1;
    }
    sub_2392C4FE0((uint64_t)&v23[*(int *)(v55 + 48)], (uint64_t)v17, type metadata accessor for VIOPoseNode);
    LODWORD(v150) = 0;
    BYTE4(v150) = 1;
    v151 = 0.0;
    v152 = 1;
    v153 = 0.0;
    v154 = 1;
    v155 = 0.0;
    v156 = 1;
    v56 = v143.i64[0];
    if ((v149(&v150, (__n128)v144, (__n128)v145, (__n128)v146, (__n128)v147, *(__n128 *)&v17[*(int *)(v143.i64[0] + 28)], *(__n128 *)&v17[*(int *)(v143.i64[0] + 28) + 16], *(__n128 *)&v17[*(int *)(v143.i64[0] + 28) + 32], *(__n128 *)&v17[*(int *)(v143.i64[0] + 28) + 48]) & 1) != 0)
    {
      sub_2392688AC((uint64_t)v17, type metadata accessor for VIOPoseNode);
      swift_release();
      (*(void (**)(char *, uint64_t))(v135 + 8))(v137, v136);
      v85 = sub_239352020();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v85 - 8) + 8))(v23, v85);
      return 0;
    }
    v57 = *(_QWORD *)&v17[*(int *)(v56 + 20)];
    if ((v150 & 0x100000000) == 0 && (v152 & 1) == 0)
    {
      v58 = v151;
      v59 = v150;
      if (*(float *)&v150 < *(float *)a8)
      {
        *(_DWORD *)a8 = v150;
        *(float *)(a8 + 4) = v58;
        *(_QWORD *)(a8 + 8) = v57;
      }
      if (v58 < *(float *)(a8 + 16))
      {
        *(float *)(a8 + 16) = v58;
        *(_DWORD *)(a8 + 20) = v59;
        *(_QWORD *)(a8 + 24) = v57;
      }
    }
    if (((v156 | v154) & 1) == 0)
    {
      v60 = v155;
      v61 = sub_2392DF050(v153, -1.0, 1.0);
      v62 = acosf(v61);
      if (*(float *)(a8 + 32) < v62)
      {
        *(float *)(a8 + 32) = v62;
        *(float *)(a8 + 36) = v60;
        *(_QWORD *)(a8 + 40) = v57;
      }
      if (v60 < *(float *)(a8 + 48))
      {
        *(float *)(a8 + 48) = v60;
        *(float *)(a8 + 52) = v62;
        *(_QWORD *)(a8 + 56) = v57;
      }
    }
    sub_2392688AC((uint64_t)v17, type metadata accessor for VIOPoseNode);
    v43 = sub_239352020();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v23, v43);
  }
  v52 = *(_QWORD *)(v138 + 8 * v53);
  if (v52)
  {
LABEL_16:
    v51 = v53;
LABEL_13:
    v40 = (v52 - 1) & v52;
    v45 = __clz(__rbit64(v52)) + (v51 << 6);
    v148 = v51;
    goto LABEL_9;
  }
  while (1)
  {
    v51 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (v51 >= v139)
    {
      v148 = v125;
      goto LABEL_27;
    }
    v52 = *(_QWORD *)(v138 + 8 * v51);
    ++v53;
    if (v52)
      goto LABEL_13;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_2393499F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC6CoreOC24OCObjectCentricPoseGraph_vioClosenessCheckLogTime;
  v2 = sub_239351FD8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

float CaptureFactors.videoExposureTime.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t CaptureFactors.videoIspDGain.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

float CaptureFactors.videoIMUMaxAngularSpeed.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

float CaptureFactors.photoExposureTime.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

uint64_t CaptureFactors.photoISO.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

float CaptureFactors.photoIMUMaxAngularSpeed.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

float CaptureFactors.photoBlurScore.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

float CaptureFactors.photoAcceptanceRate.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 40);
}

uint64_t CaptureFactors.preCaptureCheckPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t sub_239349A98@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 44);
  return result;
}

uint64_t sub_239349AA4(char *a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 44);
  *(_BYTE *)(a2 + 44) = v2;
  return sub_239349BE0(v3);
}

uint64_t sub_239349AD0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v1 + 44);
  *(_BYTE *)(v1 + 44) = a1;
  if ((v6 & 1) == 0 && (a1 & 1) != 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture ON.", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_239349BE0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && *(_BYTE *)(v1 + 44) == 1)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture ON.", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.objectOutOfFOV.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 45);
}

uint64_t sub_239349CF8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 45);
  return result;
}

uint64_t sub_239349D04(char *a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 45);
  *(_BYTE *)(a2 + 45) = v2;
  return sub_239349E40(v3);
}

uint64_t sub_239349D30(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v1 + 45);
  *(_BYTE *)(v1 + 45) = a1;
  if ((v6 & 1) == 0 && (a1 & 1) != 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Object out of FOV!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_239349E40(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && *(_BYTE *)(v1 + 45) == 1)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Object out of FOV!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.isTooDark.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 46);
}

uint64_t sub_239349F58@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 46);
  return result;
}

uint64_t sub_239349F64(char *a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 46);
  *(_BYTE *)(a2 + 46) = v2;
  return sub_23934A0A0(v3);
}

uint64_t sub_239349F90(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v1 + 46);
  *(_BYTE *)(v1 + 46) = a1;
  if ((v6 & 1) == 0 && (a1 & 1) != 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Too dark!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23934A0A0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0 && *(_BYTE *)(v1 + 46) == 1)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Too dark!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.geometryPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 47);
}

uint64_t sub_23934A1B8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 47);
  return result;
}

uint64_t sub_23934A1C4(char *a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 47);
  *(_BYTE *)(a2 + 47) = v2;
  return sub_23934A304(v3);
}

uint64_t sub_23934A1F0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 47);
  *(_BYTE *)(v1 + 47) = a1;
  if ((_DWORD)v6 == 1 && (a1 & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Pose graph proximity check failed!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23934A304(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (*(_BYTE *)(v1 + 47) & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Pose graph proximity check failed!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.cameraStatusPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_23934A418@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 48);
  return result;
}

uint64_t sub_23934A424(char *a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a2 + 48) = v2;
  return sub_23934A564(v3);
}

uint64_t sub_23934A450(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 48);
  *(_BYTE *)(v1 + 48) = a1;
  if ((_DWORD)v6 == 1 && (a1 & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Camera not in good status!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23934A564(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (*(_BYTE *)(v1 + 48) & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: Camera not in good status!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.imuMotionBlurPreCaptureCheckPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_23934A678@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 49);
  return result;
}

uint64_t sub_23934A684(char *a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *a1;
  v3 = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a2 + 49) = v2;
  return sub_23934A7C4(v3);
}

uint64_t sub_23934A6B0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 49);
  *(_BYTE *)(v1 + 49) = a1;
  if ((_DWORD)v6 == 1 && (a1 & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: IMU detected fast motion!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23934A7C4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0 && (*(_BYTE *)(v1 + 49) & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture OFF: IMU detected fast motion!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t CaptureFactors.postCaptureCheckPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t sub_23934A8D8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 50);
  return result;
}

uint64_t sub_23934A8E4(_BYTE *a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 50) = *a1;
  return sub_23934AA14();
}

uint64_t sub_23934A90C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 50) = a1;
  if ((a1 & 1) != 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture-Post accepted.", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23934AA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 50) == 1)
  {
    v6 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
    v7 = sub_239352098();
    v8 = sub_239352578();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23925B000, v7, v8, "Capture Manager : AutoCapture-Post accepted.", v9, 2u);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t CaptureFactors.imuMotionBlurPostCaptureCheckPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t CaptureFactors.focusPixelBlurScorePostCaptureCheckPassed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t sub_23934AB2C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 52);
  return result;
}

uint64_t sub_23934AB38(_BYTE *a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 52) = *a1;
  return sub_23934AC68();
}

uint64_t sub_23934AB60(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v3 = sub_2393520B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 52) = a1;
  if ((a1 & 1) == 0)
  {
    v8 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v3);
    v9 = sub_239352098();
    v10 = sub_239352578();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23925B000, v9, v10, "Capture Manager : AutoCapture-Post rejected: Blur score above threshold!", v11, 2u);
      MEMORY[0x23B83BC04](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_23934AC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v1 = sub_2393520B0();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 52) & 1) == 0)
  {
    v6 = sub_239275A60();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
    v7 = sub_239352098();
    v8 = sub_239352578();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23925B000, v7, v8, "Capture Manager : AutoCapture-Post rejected: Blur score above threshold!", v9, 2u);
      MEMORY[0x23B83BC04](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

Swift::String __swiftcall CaptureFactors.preCaptureFactorsDescription()()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  Swift::String result;

  v1 = *(float *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(float *)(v0 + 16);
  v4 = MEMORY[0x24BEE14E8];
  if (*(float *)v0 > 0.0)
  {
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_239354060;
    *(_QWORD *)(v5 + 56) = v4;
    *(_QWORD *)(v5 + 64) = MEMORY[0x24BEE1568];
    *(float *)(v5 + 32) = v1;
    sub_239352308();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    swift_bridgeObjectRelease();
  }
  if (v2 >= 1)
  {
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v6 = swift_allocObject();
    v7 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v6 + 16) = xmmword_239354060;
    v8 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 64) = v8;
    *(_QWORD *)(v6 + 32) = v2;
    sub_239352308();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    swift_bridgeObjectRelease();
  }
  if (v3 > 0.0)
  {
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_239354060;
    *(_QWORD *)(v9 + 56) = v4;
    *(_QWORD *)(v9 + 64) = MEMORY[0x24BEE1568];
    *(float *)(v9 + 32) = (float)(v3 / 3.1416) * 180.0;
    sub_239352308();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    swift_bridgeObjectRelease();
  }
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  v10 = 0xD000000000000015;
  v11 = (void *)0x8000000239360EA0;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

UIColor __swiftcall CaptureFactors.preCaptureFactorsDescriptionColor()()
{
  _BYTE *v0;
  char **v1;
  int v2;
  int v3;
  int v4;
  void *v5;
  char **v6;

  if ((v0[44] & 1) != 0)
  {
    v1 = &selRef_greenColor;
LABEL_12:
    v5 = (void *)objc_opt_self();
    return (UIColor)objc_msgSend(v5, *v1);
  }
  v1 = &selRef_magentaColor;
  if ((v0[45] & 1) != 0 || (v0[46] & 1) != 0)
    goto LABEL_12;
  v2 = v0[47];
  v3 = v0[48];
  v4 = v0[49];
  v5 = (void *)objc_opt_self();
  v6 = &selRef_brownColor;
  if (v4)
    v6 = &selRef_whiteColor;
  if (!v3)
    v6 = &selRef_purpleColor;
  if (v2)
    v1 = v6;
  else
    v1 = &selRef_orangeColor;
  return (UIColor)objc_msgSend(v5, *v1);
}

Swift::String __swiftcall CaptureFactors.postCaptureFactorsDescription()()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  float v3;
  float v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String result;

  v1 = *(float *)(v0 + 20);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(float *)(v0 + 32);
  v3 = *(float *)(v0 + 36);
  v5 = *(float *)(v0 + 40);
  v6 = MEMORY[0x24BEE14E8];
  v7 = MEMORY[0x24BEE1568];
  if (v5 > 0.0)
  {
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_239354060;
    *(_QWORD *)(v8 + 56) = v6;
    *(_QWORD *)(v8 + 64) = v7;
    *(float *)(v8 + 32) = v5;
    sub_239352308();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    swift_bridgeObjectRelease();
  }
  if (v1 <= 0.0 || v2 < 1)
  {
    if (v4 > 0.0)
      goto LABEL_13;
  }
  else
  {
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_239354060;
    *(_QWORD *)(v13 + 56) = v6;
    *(_QWORD *)(v13 + 64) = v7;
    *(float *)(v13 + 32) = v1;
    sub_239352308();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    v14 = swift_allocObject();
    v15 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v14 + 16) = xmmword_239354060;
    v16 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v14 + 56) = v15;
    *(_QWORD *)(v14 + 64) = v16;
    *(_QWORD *)(v14 + 32) = v2;
    sub_239352308();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    swift_bridgeObjectRelease();
    if (v4 > 0.0)
    {
LABEL_13:
      sub_23925FB08((uint64_t *)&unk_25692BD50);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_239354060;
      *(_QWORD *)(v17 + 56) = v6;
      *(_QWORD *)(v17 + 64) = v7;
      *(float *)(v17 + 32) = (float)(v4 / 3.1416) * 180.0;
      sub_239352308();
      sub_239352380();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_239352380();
      swift_bridgeObjectRelease();
      sub_239352380();
      swift_bridgeObjectRelease();
      if (v3 <= 0.0)
        goto LABEL_11;
      goto LABEL_10;
    }
  }
  if (v3 > 0.0)
  {
LABEL_10:
    sub_23925FB08((uint64_t *)&unk_25692BD50);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_239354060;
    *(_QWORD *)(v10 + 56) = v6;
    *(_QWORD *)(v10 + 64) = v7;
    *(float *)(v10 + 32) = v3;
    sub_239352308();
    sub_239352380();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_239352380();
    swift_bridgeObjectRelease();
    sub_239352380();
    swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_239352380();
  swift_bridgeObjectRelease();
  sub_239352380();
  swift_bridgeObjectRelease();
  v11 = 0xD000000000000016;
  v12 = (void *)0x8000000239360F40;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

UIColor __swiftcall CaptureFactors.postCaptureFactorsDescriptionColor()()
{
  uint64_t v0;
  void *v1;
  char **v2;
  int v3;

  if (*(_BYTE *)(v0 + 50) == 1)
  {
    v1 = (void *)objc_opt_self();
    v2 = &selRef_greenColor;
  }
  else
  {
    v3 = *(unsigned __int8 *)(v0 + 52);
    v1 = (void *)objc_opt_self();
    v2 = &selRef_orangeColor;
    if (v3)
      v2 = &selRef_whiteColor;
  }
  return (UIColor)objc_msgSend(v1, *v2);
}

uint64_t sub_23934BA54()
{
  _BYTE *v0;

  return (v0[47] & ~(v0[45] | v0[46])) & (v0[48] & v0[49]) & 1;
}

double sub_23934BA80@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)a1 = -1082130432;
  *(_QWORD *)(a1 + 8) = -1;
  __asm { FMOV            V0.2S, #-1.0 }
  *(_QWORD *)(a1 + 16) = _D0;
  *(_QWORD *)(a1 + 24) = -1;
  *(_QWORD *)(a1 + 32) = _D0;
  *(_DWORD *)(a1 + 40) = -1082130432;
  *(_QWORD *)&result = 0x10101000000;
  *(_QWORD *)(a1 + 44) = 0x10101000000;
  *(_BYTE *)(a1 + 52) = 0;
  return result;
}

void sub_23934BAB8()
{
  byte_25692FB60 = 1;
  qword_25692FB68 = 0xE700000000000000;
}

void sub_23934BAD4()
{
  byte_25692FB78 = 1;
  qword_25692FB80 = 0xE800000000000000;
}

void sub_23934BAF0()
{
  byte_25692FB90 = 1;
  qword_25692FB98 = 0xE700000000000000;
}

void sub_23934BB0C()
{
  byte_25692FBA8 = 1;
  qword_25692FBB0 = 0xE600000000000000;
}

void sub_23934BB28()
{
  byte_25692FBC0 = 1;
  qword_25692FBC8 = 0xE800000000000000;
}

void sub_23934BB44()
{
  byte_25692FBD8 = 1;
  qword_25692FBE0 = 0xEE00564F46664F74;
}

_QWORD *sub_23934BB6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;

  sub_2392F391C();
  sub_2392A0940();
  if ((sub_23935271C() & 1) != 0)
  {
    if (qword_25692FB58 != -1)
      swift_once();
    if (byte_25692FB60)
      v0 = 0x747361466F6F54;
    else
      v0 = 0;
    v1 = qword_25692FB68;
    swift_bridgeObjectRetain();
    v2 = sub_2392BFCAC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = sub_2392BFCAC((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
    v2[2] = v4 + 1;
    v5 = &v2[2 * v4];
    v5[4] = v0;
    v5[5] = v1;
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_2392F3934();
  if ((sub_23935271C() & 1) != 0)
  {
    if (qword_25692FB70 != -1)
      swift_once();
    if (byte_25692FB78)
      v6 = 0x746867694C776F4CLL;
    else
      v6 = 0;
    v7 = qword_25692FB80;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2392BFCAC(0, v2[2] + 1, 1, v2);
    v9 = v2[2];
    v8 = v2[3];
    if (v9 >= v8 >> 1)
      v2 = sub_2392BFCAC((_QWORD *)(v8 > 1), v9 + 1, 1, v2);
    v2[2] = v9 + 1;
    v10 = &v2[2 * v9];
    v10[4] = v6;
    v10[5] = v7;
  }
  sub_2392F3994();
  if ((sub_23935271C() & 1) != 0)
  {
    if (qword_25692FB88 != -1)
      swift_once();
    if (byte_25692FB90)
      v11 = 0x6B7261446F6F54;
    else
      v11 = 0;
    v12 = qword_25692FB98;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2392BFCAC(0, v2[2] + 1, 1, v2);
    v14 = v2[2];
    v13 = v2[3];
    if (v14 >= v13 >> 1)
      v2 = sub_2392BFCAC((_QWORD *)(v13 > 1), v14 + 1, 1, v2);
    v2[2] = v14 + 1;
    v15 = &v2[2 * v14];
    v15[4] = v11;
    v15[5] = v12;
  }
  sub_2392F394C();
  if ((sub_23935271C() & 1) != 0)
  {
    if (qword_25692FBA0 != -1)
      swift_once();
    if (byte_25692FBA8)
      v16 = 0x7261466F6F54;
    else
      v16 = 0;
    v17 = qword_25692FBB0;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2392BFCAC(0, v2[2] + 1, 1, v2);
    v19 = v2[2];
    v18 = v2[3];
    if (v19 >= v18 >> 1)
      v2 = sub_2392BFCAC((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
    v2[2] = v19 + 1;
    v20 = &v2[2 * v19];
    v20[4] = v16;
    v20[5] = v17;
  }
  sub_2392F3964();
  if ((sub_23935271C() & 1) != 0)
  {
    if (qword_25692FBB8 != -1)
      swift_once();
    if (byte_25692FBC0)
      v21 = 0x65736F6C436F6F54;
    else
      v21 = 0;
    v22 = qword_25692FBC8;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2392BFCAC(0, v2[2] + 1, 1, v2);
    v24 = v2[2];
    v23 = v2[3];
    if (v24 >= v23 >> 1)
      v2 = sub_2392BFCAC((_QWORD *)(v23 > 1), v24 + 1, 1, v2);
    v2[2] = v24 + 1;
    v25 = &v2[2 * v24];
    v25[4] = v21;
    v25[5] = v22;
  }
  sub_2392F397C();
  if ((sub_23935271C() & 1) != 0)
  {
    if (qword_25692FBD0 != -1)
      swift_once();
    if (byte_25692FBD8)
      v26 = 0x754F7463656A624FLL;
    else
      v26 = 0;
    v27 = qword_25692FBE0;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_2392BFCAC(0, v2[2] + 1, 1, v2);
    v29 = v2[2];
    v28 = v2[3];
    if (v29 >= v28 >> 1)
      v2 = sub_2392BFCAC((_QWORD *)(v28 > 1), v29 + 1, 1, v2);
    v2[2] = v29 + 1;
    v30 = &v2[2 * v29];
    v30[4] = v26;
    v30[5] = v27;
  }
  return v2;
}

uint64_t type metadata accessor for OCCaptureData(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692FC00);
}

uint64_t type metadata accessor for OCBundleData(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692FC10);
}

uint64_t type metadata accessor for OCObjectCentricPoseNode(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692FC20);
}

uint64_t type metadata accessor for VIOPoseNode(uint64_t a1)
{
  return sub_239267738(a1, (uint64_t *)&unk_25692FC30);
}

_QWORD *sub_23934C16C(_QWORD *a1)
{
  return sub_239275064(0, a1[2], 0, a1);
}

_QWORD *sub_23934C180(_QWORD *a1)
{
  return sub_2392E3CAC(0, a1[2], 0, a1);
}

char *sub_23934C194(uint64_t a1)
{
  return sub_239281EC4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_23934C1A8(uint64_t a1)
{
  return sub_2392E3DB8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23934C1BC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_239292F4C(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v7;
    v21 = *v7;
    *v7 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23934CC08(a2, a3);
      v13 = v21;
    }
    v14 = *(_QWORD *)(v13 + 48);
    v15 = sub_239352020();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
    v16 = *(_QWORD *)(v13 + 56);
    v17 = a2(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_2392C4FE0(v16 + *(_QWORD *)(v18 + 72) * v10, a4, a2);
    sub_23934C6F4(v10, v13, a2);
    *v7 = v13;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a4, 0, 1, v17);
  }
  else
  {
    v20 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
}

uint64_t sub_23934C308(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  sub_23925FB08(a4);
  v49 = a2;
  v15 = sub_23935286C();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v46 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v44 = v4;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45)
      break;
    v28 = v46;
    v29 = v46[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_34;
      v29 = v46[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v45)
              goto LABEL_34;
            v29 = v46[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_2392C4FE0(v33 + v34 * v26, v50, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_239268820(v35 + v34 * v26, v50, v51);
    }
    sub_239350044(&qword_256928168, MEMORY[0x24BDCEA88]);
    result = sub_239352290();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    result = sub_2392C4FE0(v50, *(_QWORD *)(v16 + 56) + v34 * v24, v51);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v6 = v44;
  v28 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v16;
  return result;
}

unint64_t sub_23934C6F4(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v35 = a3;
  v5 = sub_239352020();
  v38 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_239352740();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v37 = (result + 1) & v12;
      v13 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v14 = v12;
      do
      {
        v15 = v9;
        v16 = v13;
        v17 = v13 * v11;
        v18 = v14;
        v36(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v5);
        sub_239350044(&qword_256928168, MEMORY[0x24BDCEA88]);
        v19 = sub_239352290();
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v8, v5);
        v14 = v18;
        v20 = v19 & v18;
        if (a1 >= (uint64_t)v37)
        {
          if (v20 >= v37 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v9 = v15;
            if (v16 * a1 < v17
              || *(_QWORD *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v17 + v16))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = *(_QWORD *)(*(_QWORD *)(v35(0) - 8) + 72);
            v25 = v24 * a1;
            result = v23 + v24 * a1;
            v26 = v24 * v11;
            v27 = v23 + v24 * v11 + v24;
            if (v25 < v26 || result >= v27)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              v14 = v18;
            }
            else
            {
              a1 = v11;
              v14 = v18;
              if (v25 != v26)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v14 = v18;
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v37 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v9 = v15;
LABEL_5:
        v11 = (v11 + 1) & v14;
        v13 = v16;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_23934C9C8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;

  v28 = a5;
  v29 = a1;
  v7 = (_QWORD **)v5;
  v10 = sub_239352020();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_239292F4C(a2);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a3 & 1) != 0)
  {
LABEL_7:
    v22 = *v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      v24 = a4(0);
      return sub_239331084(v29, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, a4);
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a3 & 1) == 0)
  {
    sub_23934CC08(a4, v28);
    goto LABEL_7;
  }
  sub_23934C308(v19, a3 & 1, a4, v28);
  v26 = sub_239292F4C(a2);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_239352908();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v7;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  return sub_23934CB50(v16, (uint64_t)v13, v29, v22, a4);
}

uint64_t sub_23934CB50(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_239352020();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_2392C4FE0(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

void *sub_23934CC08(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v5;
  v38 = sub_239352020();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23925FB08(a2);
  v34 = v2;
  v8 = *v2;
  v9 = sub_239352860();
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; result = (void *)sub_2392C4FE0(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_239268820(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_23934CECC(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  unint64_t result;
  uint64_t *v25;
  int64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  int v33;

  v29 = a5;
  v31 = a4;
  v32 = a3;
  v33 = a2;
  v30 = sub_239352020();
  v10 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23925FB08(a6);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a7(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v28 - v21;
  sub_23926059C(a1, (uint64_t)v15, a6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v23 = v32;
    result = sub_23925FE28((uint64_t)v15, a6);
    if ((v33 & 1) != 0)
    {
      v25 = v23;
      v26 = v31;
      swift_arrayDestroy();
      return sub_23934C6F4(v26, *v25, a7);
    }
  }
  else
  {
    sub_2392C4FE0((uint64_t)v15, (uint64_t)v22, a7);
    v27 = (_QWORD *)*v32;
    if ((v33 & 1) != 0)
    {
      return sub_2392C4FE0((uint64_t)v22, v27[7] + *(_QWORD *)(v17 + 72) * v31, a7);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v29, v30);
      sub_2392C4FE0((uint64_t)v22, (uint64_t)v20, a7);
      return sub_23934CB50(v31, (uint64_t)v12, (uint64_t)v20, v27, a7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OCBoundingBox()
{
  return &type metadata for OCBoundingBox;
}

uint64_t destroy for OCDepthPointCloud()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for OCDepthPointCloud(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OCDepthPointCloud(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for OCDepthPointCloud(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for OCDepthPointCloud(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OCDepthPointCloud(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OCDepthPointCloud(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OCDepthPointCloud()
{
  return &type metadata for OCDepthPointCloud;
}

ValueMetadata *type metadata accessor for OCVoxelCloud()
{
  return &type metadata for OCVoxelCloud;
}

uint64_t destroy for OCPointCloud()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OCPointCloud(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6CoreOC12OCVoxelCloudVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

uint64_t _s6CoreOC12OCVoxelCloudVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for OCPointCloud()
{
  return &type metadata for OCPointCloud;
}

uint64_t destroy for OCTriangleMesh()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OCTriangleMesh(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OCTriangleMesh(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

_OWORD *assignWithTake for OCTriangleMesh(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;

  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  return a1;
}

uint64_t _s6CoreOC12OCVoxelCloudVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23934D6EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OCTriangleMesh()
{
  return &type metadata for OCTriangleMesh;
}

_QWORD *sub_23934D750(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  _OWORD *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  void *v26;
  uint64_t v27;
  _OWORD *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  char *__dst;
  uint64_t v60;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (void *)a2[2];
    v9 = (void *)a2[3];
    a1[2] = v8;
    a1[3] = v9;
    v10 = a2 + 4;
    v11 = a2[4];
    v12 = v7;
    v13 = v8;
    v14 = v9;
    v60 = v6;
    if (v11)
    {
      v15 = a2[5];
      v16 = a2[6];
      v4[4] = v11;
      v4[5] = v15;
      v17 = a2[7];
      v18 = a2[8];
      v4[6] = v16;
      v4[7] = v17;
      v19 = a2[9];
      v20 = a2[10];
      v4[8] = v18;
      v4[9] = v19;
      v22 = a2[11];
      v21 = a2[12];
      v4[10] = v20;
      v4[11] = v22;
      v4[12] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)a2 + 5);
      *((_OWORD *)v4 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)v4 + 5) = v24;
      v4[12] = a2[12];
      v25 = *((_OWORD *)a2 + 3);
      *((_OWORD *)v4 + 2) = *v10;
      *((_OWORD *)v4 + 3) = v25;
    }
    v26 = (void *)a2[13];
    v4[13] = v26;
    v27 = *(int *)(v6 + 40);
    v28 = (_OWORD *)((char *)v4 + v27);
    v29 = (char *)a2 + v27;
    v30 = *(_OWORD *)((char *)a2 + v27 + 16);
    *v28 = *(_OWORD *)((char *)a2 + v27);
    v28[1] = v30;
    v31 = *(_OWORD *)((char *)a2 + v27 + 80);
    v28[4] = *(_OWORD *)((char *)a2 + v27 + 64);
    v28[5] = v31;
    v28[6] = *(_OWORD *)((char *)a2 + v27 + 96);
    v32 = *(_OWORD *)((char *)a2 + v27 + 48);
    v28[2] = *(_OWORD *)((char *)a2 + v27 + 32);
    v28[3] = v32;
    v33 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    v34 = v33[6];
    __dst = (char *)v28 + v34;
    v35 = &v29[v34];
    v36 = sub_239352674();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    v39 = v26;
    if (v38(v35, 2, v36))
    {
      v40 = sub_239352680();
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 2, v36);
    }
    v41 = v33[7];
    v42 = (char *)v28 + v41;
    v43 = &v29[v41];
    v44 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v44;
    v42[64] = v43[64];
    v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v45;
    v46 = v33[8];
    v47 = *(void **)&v29[v46];
    *(_QWORD *)((char *)v28 + v46) = v47;
    v48 = v33[9];
    v49 = (char *)v28 + v48;
    v50 = &v29[v48];
    v49[64] = v50[64];
    v51 = *((_OWORD *)v50 + 3);
    *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
    *((_OWORD *)v49 + 3) = v51;
    v52 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v52;
    v53 = *(int *)(v60 + 44);
    v54 = *(int *)(v60 + 48);
    v55 = *(void **)((char *)a2 + v53);
    *(_QWORD *)((char *)v4 + v53) = v55;
    *((_BYTE *)v4 + v54) = *((_BYTE *)a2 + v54);
    v56 = v47;
    v57 = v55;
  }
  return v4;
}

void sub_23934D9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_239352674();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

}

_QWORD *sub_23934DAD8(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  char *__dst;

  v5 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = (void *)a2[2];
  v7 = (void *)a2[3];
  a1[2] = v6;
  a1[3] = v7;
  v8 = a2 + 4;
  v9 = a2[4];
  v10 = v5;
  v11 = v6;
  v12 = v7;
  if (v9)
  {
    v13 = a2[5];
    v14 = a2[6];
    a1[4] = v9;
    a1[5] = v13;
    v15 = a2[7];
    v16 = a2[8];
    a1[6] = v14;
    a1[7] = v15;
    v17 = a2[9];
    v18 = a2[10];
    a1[8] = v16;
    a1[9] = v17;
    v20 = a2[11];
    v19 = a2[12];
    a1[10] = v18;
    a1[11] = v20;
    a1[12] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *((_OWORD *)v8 + 3);
    *((_OWORD *)a1 + 4) = *((_OWORD *)v8 + 2);
    *((_OWORD *)a1 + 5) = v21;
    a1[12] = v8[8];
    v22 = *((_OWORD *)v8 + 1);
    *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
    *((_OWORD *)a1 + 3) = v22;
  }
  v23 = (void *)a2[13];
  a1[13] = v23;
  v24 = a3[10];
  v25 = (_OWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_OWORD *)((char *)a2 + v24 + 16);
  *v25 = *(_OWORD *)((char *)a2 + v24);
  v25[1] = v27;
  v28 = *(_OWORD *)((char *)a2 + v24 + 80);
  v25[4] = *(_OWORD *)((char *)a2 + v24 + 64);
  v25[5] = v28;
  v25[6] = *(_OWORD *)((char *)a2 + v24 + 96);
  v29 = *(_OWORD *)((char *)a2 + v24 + 48);
  v25[2] = *(_OWORD *)((char *)a2 + v24 + 32);
  v25[3] = v29;
  v30 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v31 = v30[6];
  __dst = (char *)v25 + v31;
  v32 = &v26[v31];
  v33 = sub_239352674();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v23;
  if (v35(v32, 2, v33))
  {
    v37 = sub_239352680();
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 2, v33);
  }
  v38 = v30[7];
  v39 = (char *)v25 + v38;
  v40 = &v26[v38];
  v41 = *((_OWORD *)v40 + 3);
  *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
  *((_OWORD *)v39 + 3) = v41;
  v39[64] = v40[64];
  v42 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v42;
  v43 = v30[8];
  v44 = *(void **)&v26[v43];
  *(_QWORD *)((char *)v25 + v43) = v44;
  v45 = v30[9];
  v46 = (char *)v25 + v45;
  v47 = &v26[v45];
  v46[64] = v47[64];
  v48 = *((_OWORD *)v47 + 3);
  *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
  *((_OWORD *)v46 + 3) = v48;
  v49 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v49;
  v50 = a3[11];
  v51 = a3[12];
  v52 = *(void **)((char *)a2 + v50);
  *(_QWORD *)((char *)a1 + v50) = v52;
  *((_BYTE *)a1 + v51) = *((_BYTE *)a2 + v51);
  v53 = v44;
  v54 = v52;
  return a1;
}

_QWORD *sub_23934DD24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  _OWORD *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  int *v59;
  uint64_t v60;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v9 = (void *)a1[2];
  v10 = (void *)a2[2];
  a1[2] = v10;
  v11 = v10;

  v12 = (void *)a1[3];
  v13 = (void *)a2[3];
  a1[3] = v13;
  v14 = v13;

  v15 = a1 + 4;
  v17 = a2 + 4;
  v16 = a2[4];
  v60 = a3;
  if (a1[4])
  {
    if (v16)
    {
      a1[4] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[11] = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2392A0570((uint64_t)(a1 + 4));
      *v15 = *v17;
      v19 = *((_OWORD *)a2 + 4);
      v18 = *((_OWORD *)a2 + 5);
      v20 = *((_OWORD *)a2 + 3);
      a1[12] = a2[12];
      *((_OWORD *)a1 + 4) = v19;
      *((_OWORD *)a1 + 5) = v18;
      *((_OWORD *)a1 + 3) = v20;
    }
  }
  else if (v16)
  {
    a1[4] = v16;
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v15 = *v17;
    v21 = *((_OWORD *)a2 + 3);
    v22 = *((_OWORD *)a2 + 4);
    v23 = *((_OWORD *)a2 + 5);
    a1[12] = a2[12];
    *((_OWORD *)a1 + 4) = v22;
    *((_OWORD *)a1 + 5) = v23;
    *((_OWORD *)a1 + 3) = v21;
  }
  v24 = (void *)a1[13];
  v25 = (void *)a2[13];
  a1[13] = v25;
  v26 = v25;

  v27 = *(int *)(a3 + 40);
  v28 = (_OWORD *)((char *)a1 + v27);
  v29 = (char *)a2 + v27;
  *v28 = *(_OWORD *)((char *)a2 + v27);
  v28[1] = *(_OWORD *)((char *)a2 + v27 + 16);
  v28[2] = *(_OWORD *)((char *)a2 + v27 + 32);
  v28[3] = *(_OWORD *)((char *)a2 + v27 + 48);
  v28[4] = *(_OWORD *)((char *)a2 + v27 + 64);
  v28[5] = *(_OWORD *)((char *)a2 + v27 + 80);
  v28[6] = *(_OWORD *)((char *)a2 + v27 + 96);
  v59 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v30 = v59[6];
  v31 = (char *)v28 + v30;
  v32 = &v29[v30];
  v33 = sub_239352674();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  LODWORD(v24) = v35(v31, 2, v33);
  v36 = v35(v32, 2, v33);
  if (!(_DWORD)v24)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_13;
  }
  if (v36)
  {
LABEL_13:
    v37 = sub_239352680();
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 2, v33);
LABEL_14:
  v38 = v59[7];
  v39 = (char *)v28 + v38;
  v40 = &v29[v38];
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v41 = *((_OWORD *)v40 + 1);
  v42 = *((_OWORD *)v40 + 2);
  v43 = *((_OWORD *)v40 + 3);
  v39[64] = v40[64];
  *((_OWORD *)v39 + 2) = v42;
  *((_OWORD *)v39 + 3) = v43;
  *((_OWORD *)v39 + 1) = v41;
  v44 = v59[8];
  v45 = *(void **)((char *)v28 + v44);
  v46 = *(void **)&v29[v44];
  *(_QWORD *)((char *)v28 + v44) = v46;
  v47 = v46;

  v48 = v59[9];
  v49 = (char *)v28 + v48;
  v50 = &v29[v48];
  *(_OWORD *)v49 = *(_OWORD *)v50;
  v51 = *((_OWORD *)v50 + 1);
  v52 = *((_OWORD *)v50 + 2);
  v53 = *((_OWORD *)v50 + 3);
  v49[64] = v50[64];
  *((_OWORD *)v49 + 2) = v52;
  *((_OWORD *)v49 + 3) = v53;
  *((_OWORD *)v49 + 1) = v51;
  v54 = *(int *)(v60 + 44);
  v55 = *(void **)((char *)a1 + v54);
  v56 = *(void **)((char *)a2 + v54);
  *(_QWORD *)((char *)a1 + v54) = v56;
  v57 = v56;

  *((_BYTE *)a1 + *(int *)(v60 + 48)) = *((_BYTE *)a2 + *(int *)(v60 + 48));
  return a1;
}

uint64_t sub_23934E150(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = a3[10];
  v10 = (_OWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_OWORD *)(a2 + v9 + 16);
  *v10 = *(_OWORD *)(a2 + v9);
  v10[1] = v12;
  v13 = *(_OWORD *)(a2 + v9 + 48);
  v10[2] = *(_OWORD *)(a2 + v9 + 32);
  v10[3] = v13;
  v14 = *(_OWORD *)(a2 + v9 + 80);
  v10[4] = *(_OWORD *)(a2 + v9 + 64);
  v10[5] = v14;
  v10[6] = *(_OWORD *)(a2 + v9 + 96);
  v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v16 = v15[6];
  v17 = (char *)v10 + v16;
  v18 = (const void *)(v11 + v16);
  v19 = sub_239352674();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 2, v19))
  {
    v21 = sub_239352680();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 2, v19);
  }
  v22 = v15[7];
  v23 = (char *)v10 + v22;
  v24 = v11 + v22;
  v25 = *(_OWORD *)(v24 + 48);
  *((_OWORD *)v23 + 2) = *(_OWORD *)(v24 + 32);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = *(_BYTE *)(v24 + 64);
  v26 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  *(_QWORD *)((char *)v10 + v15[8]) = *(_QWORD *)(v11 + v15[8]);
  v27 = v15[9];
  v28 = (char *)v10 + v27;
  v29 = v11 + v27;
  v28[64] = *(_BYTE *)(v29 + 64);
  v30 = *(_OWORD *)(v29 + 48);
  *((_OWORD *)v28 + 2) = *(_OWORD *)(v29 + 32);
  *((_OWORD *)v28 + 3) = v30;
  v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v31;
  v32 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  return a1;
}

_QWORD *sub_23934E2E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  _OWORD *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  int *v43;
  uint64_t v44;

  *a1 = *a2;
  v6 = (void *)a1[1];
  a1[1] = a2[1];

  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = (void *)a1[3];
  a1[3] = a2[3];

  v9 = a2[4];
  if (a1[4])
  {
    if (v9)
    {
      a1[4] = v9;
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      swift_bridgeObjectRelease();
      a1[11] = a2[11];
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_2392A0570((uint64_t)(a1 + 4));
  }
  v10 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v10;
  a1[12] = a2[12];
  v11 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v11;
LABEL_6:
  v12 = (void *)a1[13];
  a1[13] = a2[13];

  v44 = a3;
  v13 = *(int *)(a3 + 40);
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = *(_OWORD *)((char *)a2 + v13 + 16);
  *v14 = *(_OWORD *)((char *)a2 + v13);
  v14[1] = v16;
  v17 = *(_OWORD *)((char *)a2 + v13 + 48);
  v14[2] = *(_OWORD *)((char *)a2 + v13 + 32);
  v14[3] = v17;
  v18 = *(_OWORD *)((char *)a2 + v13 + 80);
  v14[4] = *(_OWORD *)((char *)a2 + v13 + 64);
  v14[5] = v18;
  v14[6] = *(_OWORD *)((char *)a2 + v13 + 96);
  v43 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v19 = v43[6];
  v20 = (char *)v14 + v19;
  v21 = &v15[v19];
  v22 = sub_239352674();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 2, v22);
  v26 = v24(v21, 2, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v20, v21, v22);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_11;
  }
  if (v26)
  {
LABEL_11:
    v27 = sub_239352680();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 2, v22);
LABEL_12:
  v28 = v43[7];
  v29 = (char *)v14 + v28;
  v30 = &v15[v28];
  v31 = *((_OWORD *)v30 + 3);
  *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
  *((_OWORD *)v29 + 3) = v31;
  v29[64] = v30[64];
  v32 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v32;
  v33 = v43[8];
  v34 = *(void **)((char *)v14 + v33);
  *(_QWORD *)((char *)v14 + v33) = *(_QWORD *)&v15[v33];

  v35 = v43[9];
  v36 = (char *)v14 + v35;
  v37 = &v15[v35];
  v38 = *((_OWORD *)v37 + 3);
  *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
  *((_OWORD *)v36 + 3) = v38;
  v36[64] = v37[64];
  v39 = *((_OWORD *)v37 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v39;
  v40 = *(int *)(v44 + 44);
  v41 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);

  *((_BYTE *)a1 + *(int *)(v44 + 48)) = *((_BYTE *)a2 + *(int *)(v44 + 48));
  return a1;
}

uint64_t sub_23934E5CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934E5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_23934E654()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934E660(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23934E6D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObjectCaptureSession.Frame.Camera(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23934E77C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  id v34;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (_OWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_OWORD *)((char *)a2 + v10 + 16);
    *v11 = *(_OWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v14 = *(_OWORD *)((char *)a2 + v10 + 48);
    v11[2] = *(_OWORD *)((char *)a2 + v10 + 32);
    v11[3] = v14;
    v15 = *(_OWORD *)((char *)a2 + v10 + 80);
    v11[4] = *(_OWORD *)((char *)a2 + v10 + 64);
    v11[5] = v15;
    v11[6] = *(_OWORD *)((char *)a2 + v10 + 96);
    v16 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    v17 = v16[6];
    __dst = (char *)v11 + v17;
    v18 = &v12[v17];
    v19 = sub_239352674();
    v36 = *(_QWORD *)(v19 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v18, 2, v19))
    {
      v20 = sub_239352680();
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 2, v19);
    }
    v22 = v16[7];
    v23 = (char *)v11 + v22;
    v24 = &v12[v22];
    v25 = *((_OWORD *)v24 + 3);
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((_OWORD *)v23 + 3) = v25;
    v23[64] = v24[64];
    v26 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v26;
    v27 = v16[8];
    v28 = *(void **)&v12[v27];
    *(_QWORD *)((char *)v11 + v27) = v28;
    v29 = v16[9];
    v30 = (char *)v11 + v29;
    v31 = &v12[v29];
    v32 = *((_OWORD *)v31 + 3);
    *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
    *((_OWORD *)v30 + 3) = v32;
    v30[64] = v31[64];
    v33 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v33;
    v34 = v28;
  }
  return v3;
}

void sub_23934E99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_239352674();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

}

_QWORD *sub_23934EA70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  id v32;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (_OWORD *)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = *(_OWORD *)((char *)a2 + v9 + 16);
  *v10 = *(_OWORD *)((char *)a2 + v9);
  v10[1] = v12;
  v13 = *(_OWORD *)((char *)a2 + v9 + 48);
  v10[2] = *(_OWORD *)((char *)a2 + v9 + 32);
  v10[3] = v13;
  v14 = *(_OWORD *)((char *)a2 + v9 + 80);
  v10[4] = *(_OWORD *)((char *)a2 + v9 + 64);
  v10[5] = v14;
  v10[6] = *(_OWORD *)((char *)a2 + v9 + 96);
  v15 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v16 = v15[6];
  __dst = (char *)v10 + v16;
  v17 = &v11[v16];
  v18 = sub_239352674();
  v34 = *(_QWORD *)(v18 - 8);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v17, 2, v18))
  {
    v19 = sub_239352680();
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 2, v18);
  }
  v20 = v15[7];
  v21 = (char *)v10 + v20;
  v22 = &v11[v20];
  v23 = *((_OWORD *)v22 + 3);
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  *((_OWORD *)v21 + 3) = v23;
  v21[64] = v22[64];
  v24 = *((_OWORD *)v22 + 1);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v24;
  v25 = v15[8];
  v26 = *(void **)&v11[v25];
  *(_QWORD *)((char *)v10 + v25) = v26;
  v27 = v15[9];
  v28 = (char *)v10 + v27;
  v29 = &v11[v27];
  v30 = *((_OWORD *)v29 + 3);
  *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
  *((_OWORD *)v28 + 3) = v30;
  v28[64] = v29[64];
  v31 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v31;
  v32 = v26;
  return a1;
}

_QWORD *sub_23934EC64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = *(_OWORD *)((char *)a2 + v6 + 16);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  v9 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v10 = v9[6];
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_239352674();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 2, v13);
  v17 = v15(v12, 2, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = sub_239352680();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
LABEL_7:
  v19 = v9[7];
  v20 = (char *)v7 + v19;
  v21 = &v8[v19];
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v22 = *((_OWORD *)v21 + 1);
  v23 = *((_OWORD *)v21 + 2);
  v24 = *((_OWORD *)v21 + 3);
  v20[64] = v21[64];
  *((_OWORD *)v20 + 2) = v23;
  *((_OWORD *)v20 + 3) = v24;
  *((_OWORD *)v20 + 1) = v22;
  v25 = v9[8];
  v26 = *(void **)((char *)v7 + v25);
  v27 = *(void **)&v8[v25];
  *(_QWORD *)((char *)v7 + v25) = v27;
  v28 = v27;

  v29 = v9[9];
  v30 = (char *)v7 + v29;
  v31 = &v8[v29];
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v32 = *((_OWORD *)v31 + 1);
  v33 = *((_OWORD *)v31 + 2);
  v34 = *((_OWORD *)v31 + 3);
  v30[64] = v31[64];
  *((_OWORD *)v30 + 2) = v33;
  *((_OWORD *)v30 + 3) = v34;
  *((_OWORD *)v30 + 1) = v32;
  return a1;
}

uint64_t sub_23934EF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (_OWORD *)(a1 + v4);
  v6 = a2 + v4;
  v7 = *(_OWORD *)(a2 + v4 + 16);
  *v5 = *(_OWORD *)(a2 + v4);
  v5[1] = v7;
  v8 = *(_OWORD *)(a2 + v4 + 32);
  v9 = *(_OWORD *)(a2 + v4 + 48);
  v10 = *(_OWORD *)(a2 + v4 + 96);
  v5[5] = *(_OWORD *)(a2 + v4 + 80);
  v5[6] = v10;
  v11 = *(_OWORD *)(a2 + v4 + 64);
  v5[3] = v9;
  v5[4] = v11;
  v5[2] = v8;
  v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v13 = v12[6];
  v14 = (char *)v5 + v13;
  v15 = (const void *)(v6 + v13);
  v16 = sub_239352674();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 2, v16))
  {
    v18 = sub_239352680();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
  }
  v19 = v12[7];
  v20 = (char *)v5 + v19;
  v21 = v6 + v19;
  v22 = *(_OWORD *)(v21 + 48);
  *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
  *((_OWORD *)v20 + 3) = v22;
  v20[64] = *(_BYTE *)(v21 + 64);
  v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v23;
  *(_QWORD *)((char *)v5 + v12[8]) = *(_QWORD *)(v6 + v12[8]);
  v24 = v12[9];
  v25 = (char *)v5 + v24;
  v26 = v6 + v24;
  v27 = *(_OWORD *)(v26 + 48);
  *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
  *((_OWORD *)v25 + 3) = v27;
  v25[64] = *(_BYTE *)(v26 + 64);
  v28 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  return a1;
}

_QWORD *sub_23934F084(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *v7 = *(_OWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = *(_OWORD *)((char *)a2 + v6 + 48);
  v7[2] = *(_OWORD *)((char *)a2 + v6 + 32);
  v7[3] = v10;
  v11 = *(_OWORD *)((char *)a2 + v6 + 80);
  v7[4] = *(_OWORD *)((char *)a2 + v6 + 64);
  v7[5] = v11;
  v7[6] = *(_OWORD *)((char *)a2 + v6 + 96);
  v12 = (int *)type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  v13 = v12[6];
  v14 = (char *)v7 + v13;
  v15 = &v8[v13];
  v16 = sub_239352674();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 2, v16);
  v20 = v18(v15, 2, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_239352680();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 2, v16);
LABEL_7:
  v22 = v12[7];
  v23 = (char *)v7 + v22;
  v24 = &v8[v22];
  v25 = *((_OWORD *)v24 + 3);
  *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
  *((_OWORD *)v23 + 3) = v25;
  v23[64] = v24[64];
  v26 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v26;
  v27 = v12[8];
  v28 = *(void **)((char *)v7 + v27);
  *(_QWORD *)((char *)v7 + v27) = *(_QWORD *)&v8[v27];

  v29 = v12[9];
  v30 = (char *)v7 + v29;
  v31 = &v8[v29];
  v32 = *((_OWORD *)v31 + 3);
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((_OWORD *)v30 + 3) = v32;
  v30[64] = v31[64];
  v33 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v33;
  return a1;
}

uint64_t sub_23934F2BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934F2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23934F344()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934F350(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23934F3C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ObjectCaptureSession.Frame.Camera(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23934F444(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_239352020();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(_OWORD *)((char *)a2 + v12);
    v15 = *(_OWORD *)((char *)a2 + v12 + 16);
    v16 = *(_OWORD *)((char *)a2 + v12 + 32);
    v17 = *(_OWORD *)((char *)a2 + v12 + 48);
    v18 = (_OWORD *)((char *)a1 + v12);
    *v18 = v14;
    v18[1] = v15;
    v18[2] = v16;
    v18[3] = v17;
    v19 = (_OWORD *)((char *)a1 + v13);
    v20 = (_OWORD *)((char *)a2 + v13);
    v21 = v20[3];
    v19[2] = v20[2];
    v19[3] = v21;
    v22 = v20[1];
    *v19 = *v20;
    v19[1] = v22;
    v23 = a3[9];
    v24 = (_OWORD *)((char *)a1 + v23);
    v25 = (__int128 *)((char *)a2 + v23);
    v26 = *v25;
    v27 = v25[1];
    v28 = v25[3];
    v24[2] = v25[2];
    v24[3] = v28;
    *v24 = v26;
    v24[1] = v27;
  }
  return a1;
}

uint64_t sub_23934F538(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(_OWORD *)(a2 + v11);
  v14 = *(_OWORD *)(a2 + v11 + 16);
  v15 = *(_OWORD *)(a2 + v11 + 32);
  v16 = *(_OWORD *)(a2 + v11 + 48);
  v17 = (_OWORD *)(a1 + v11);
  *v17 = v13;
  v17[1] = v14;
  v17[2] = v15;
  v17[3] = v16;
  v18 = (_OWORD *)(a1 + v12);
  v19 = (_OWORD *)(a2 + v12);
  v20 = v19[3];
  v18[2] = v19[2];
  v18[3] = v20;
  v21 = v19[1];
  *v18 = *v19;
  v18[1] = v21;
  v22 = a3[9];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (__int128 *)(a2 + v22);
  v25 = *v24;
  v26 = v24[1];
  v27 = v24[3];
  v23[2] = v24[2];
  v23[3] = v27;
  *v23 = v25;
  v23[1] = v26;
  return a1;
}

uint64_t sub_23934F5FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = a3[7];
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  v13 = a3[8];
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  v16 = a3[9];
  v17 = (_OWORD *)(a1 + v16);
  v18 = (_OWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  return a1;
}

uint64_t sub_23934F700(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(_OWORD *)(a2 + v11);
  v14 = *(_OWORD *)(a2 + v11 + 16);
  v15 = *(_OWORD *)(a2 + v11 + 32);
  v16 = *(_OWORD *)(a2 + v11 + 48);
  v17 = (_OWORD *)(a1 + v11);
  *v17 = v13;
  v17[1] = v14;
  v17[2] = v15;
  v17[3] = v16;
  v18 = (_OWORD *)(a1 + v12);
  v19 = (_OWORD *)(a2 + v12);
  v20 = v19[3];
  v18[2] = v19[2];
  v18[3] = v20;
  v21 = v19[1];
  *v18 = *v19;
  v18[1] = v21;
  v22 = a3[9];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (__int128 *)(a2 + v22);
  v25 = *v24;
  v26 = v24[1];
  v27 = v24[3];
  v23[2] = v24[2];
  v23[3] = v27;
  *v23 = v25;
  v23[1] = v26;
  return a1;
}

uint64_t sub_23934F7C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = v14[3];
  v13[2] = v14[2];
  v13[3] = v16;
  v17 = (_OWORD *)(a1 + v12);
  v18 = (_OWORD *)(a2 + v12);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  v21 = a3[9];
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v23[3];
  v22[2] = v23[2];
  v22[3] = v25;
  return a1;
}

uint64_t sub_23934F888()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934F898()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934F8A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352020();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23934F934(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_239352020();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v9[2] = v10[2];
    v12 = a3[7];
    v13 = (_OWORD *)((char *)a1 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
  }
  return a1;
}

uint64_t sub_23934F9F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_239352020();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23934FA24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  return a1;
}

uint64_t sub_23934FAB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = a3[7];
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

uint64_t sub_23934FB60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  return a1;
}

uint64_t sub_23934FBF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_239352020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  return a1;
}

uint64_t sub_23934FC80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934FC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_239352020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23934FCCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23934FCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_239352020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23934FD1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239352020();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithCopy for GeoMetrics(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GeoMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GeoMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 29) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GeoMetrics()
{
  return &type metadata for GeoMetrics;
}

__n128 initializeWithCopy for GeoDebugData(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GeoDebugData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 76))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GeoDebugData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 76) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GeoDebugData()
{
  return &type metadata for GeoDebugData;
}

uint64_t sub_23934FEB0()
{
  return type metadata accessor for OCObjectCentricPoseGraph(0);
}

uint64_t type metadata accessor for OCObjectCentricPoseGraph(uint64_t a1)
{
  return sub_239267738(a1, qword_25692FC40);
}

uint64_t sub_23934FECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_239351FD8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

__n128 initializeWithCopy for CaptureFactors(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CaptureFactors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 53))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 44);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureFactors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 53) = 0;
    if (a2)
      *(_BYTE *)(result + 44) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureFactors()
{
  return &type metadata for CaptureFactors;
}

uint64_t sub_239350044(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_239352020();
    result = MEMORY[0x23B83BB44](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2393500B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_2393500F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t sub_23935013C(uint64_t result, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = *v2;
  v4 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 96));
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v4)
    {
      v6 = (_QWORD *)result;
      v7 = 0;
      v8 = *(_QWORD *)(v3 + 80);
      v9 = (uint64_t)v2 + *(_QWORD *)(v3 + 88);
      v10 = *(_QWORD *)(v8 - 8);
      v11 = *(_QWORD *)(v10 + 72);
      v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
      v13 = v4;
      do
      {
        result = v12(*v6 + v7, v9, v8);
        v7 += v11;
        --v13;
      }
      while (v13);
    }
    *a2 = v4;
  }
  return result;
}

uint64_t *sub_2393501DC(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_239350224(a1, a2);
}

uint64_t *sub_239350224(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v3 = v2;
  v6 = *v2;
  v7 = sub_2393520B0();
  MEMORY[0x24BDAC7A8](v7);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(v6 + 120)) = 0;
  v8 = *(_QWORD *)(v6 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((uint64_t)v3 + *(_QWORD *)(*v3 + 88), a2, v8);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 96)) = a1;
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 112)) = 0;
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = 0;
  swift_retain();
  v10 = sub_239350520();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  swift_release();
  v11 = (uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 120));
  swift_beginAccess();
  *v11 = v10;
  swift_release();
  return v2;
}

uint64_t sub_239350520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_239352494();
  if (!v0)
  {
    swift_bridgeObjectRetain();
    v1 = sub_2393527DC();
    swift_bridgeObjectRelease();
    if (!v1)
    {
      v2 = sub_2393524B8();
      MEMORY[0x23B83BB44](MEMORY[0x24BEE12E0], v2);
      v1 = sub_2393528E4();
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_2393505C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  v4 = *v2;
  if (a1 < 0 || (*(uint64_t (**)(void))(v4 + 128))() <= a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 56))(a2, 1, 1);
  sub_239350A1C(a1);
  v6 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  result = swift_beginAccess();
  if (*v6)
  {
    v8 = *(_QWORD *)(v4 + 80);
    swift_retain();
    sub_239352818();
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 0, 1, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2393506B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 216))(0);
}

uint64_t sub_2393506C0()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t result;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
  v2 = __OFSUB__(v1, 1);
  result = v1 - 1;
  if (!v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 216))(result);
  __break(1u);
  return result;
}

uint64_t sub_239350700()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  result = swift_beginAccess();
  *v1 = 0;
  *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)) = 0;
  return result;
}

BOOL sub_239350750()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))() == 0;
}

BOOL sub_239350774()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))() == *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
}

uint64_t sub_2393507A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _BYTE v24[24];

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](a1);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(v9 + 112);
  v13 = *(_QWORD *)(v2 + v12);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  v16 = *(_QWORD *)(v2 + *(_QWORD *)(v9 + 96));
  if (!v16)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v15 == 0x8000000000000000 && v16 == -1)
    goto LABEL_24;
  *(_QWORD *)(v2 + v12) = v15 % v16;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 256))(result) & 1) != 0)
  {
    v18 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
    result = swift_beginAccess();
    if (!*v18)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    swift_retain();
    sub_239352818();
    swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, 1, 1, v6);
  }
  v19 = *(_QWORD *)(v2 + v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v11, a1, v6);
  v20 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 120);
  result = swift_beginAccess();
  if (!*(_QWORD *)v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_23935280C();
  result = sub_239352800();
  if ((v19 & 0x8000000000000000) != 0)
    goto LABEL_21;
  if (*(_QWORD *)(*(_QWORD *)v20 + 16) <= v19)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v7 + 40))(*(_QWORD *)v20+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v19, v11, v6);
  v21 = swift_endAccess();
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 128))(v21);
  if (__OFADD__(result, 1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v16 >= result + 1)
    v22 = result + 1;
  else
    v22 = v16;
  v23 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  result = swift_beginAccess();
  *v23 = v22;
  return result;
}

BOOL sub_2393509E0(uint64_t a1)
{
  uint64_t v1;

  return (a1 & 0x8000000000000000) == 0 && (*(uint64_t (**)(void))(*(_QWORD *)v1 + 128))() > a1;
}

uint64_t sub_239350A1C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v3 = __OFSUB__(v2, result);
  v4 = v2 - result;
  if (v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
  v3 = __OFADD__(v4, v5);
  v6 = v4 + v5;
  if (v3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v5 != -1 || v6 != 0x8000000000000000)
    return v6 % v5;
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_239350A70()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_release();
  return v0;
}

uint64_t sub_239350AAC()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_239350AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = sub_2393526A4();
  v18 = *(_QWORD *)(v2 - 8);
  v19 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - v4;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = MEMORY[0x24BDAC7A8](v3);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  v12 = sub_23935247C();
  v20 = v12;
  result = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
  if ((result & 0x8000000000000000) == 0)
  {
    v14 = result;
    if (!result)
      return v12;
    v15 = *(void (**)(uint64_t))(*(_QWORD *)v0 + 216);
    v16 = result;
    while (v14 >= v16)
    {
      v15(--v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v1) == 1)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v19);
        if (!v16)
          return v20;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v5, v1);
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v1);
        sub_2393524B8();
        sub_2393524AC();
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v1);
        if (!v16)
          return v20;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_239350CB4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CircularBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_239350D60(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CircularBuffer);
}

uint64_t sub_239350D4C(uint64_t a1, _QWORD *a2)
{
  return sub_23935013C(a1, a2);
}

uint64_t sub_239350D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B83BAC0](a1, v6, a5);
}

void sub_239350D8C()
{
  swift_deletedMethodError();
  __break(1u);
}

void *sub_239350D9C()
{
  return &unk_239357D4C;
}

void *sub_239350DA8()
{
  return &unk_239357D4E;
}

void *sub_239350DB4()
{
  return &unk_239357D50;
}

void *sub_239350DC0()
{
  return &unk_239357D52;
}

const __int16 *sub_239350DCC()
{
  return asc_239357D58;
}

__int16 *sub_239350DD8()
{
  return &asc_239357D58[1];
}

__int16 *sub_239350DE4()
{
  return &asc_239357D58[2];
}

void *sub_239350DF0()
{
  return &unk_239357D5E;
}

void *sub_239350DFC()
{
  return &unk_239357D64;
}

void *sub_239350E08()
{
  return &unk_239357D66;
}

void *sub_239350E14()
{
  return &unk_239357D68;
}

void *sub_239350E20()
{
  return &unk_239357D6A;
}

void *sub_239350E2C()
{
  return &unk_239357D6C;
}

void *sub_239350E38()
{
  return &unk_239357D6E;
}

void *sub_239350E44()
{
  return &unk_239357D70;
}

void *sub_239350E50()
{
  return &unk_239357D72;
}

void *sub_239350E5C()
{
  return &unk_239357D74;
}

void *sub_239350E68()
{
  return &unk_239357D76;
}

void *sub_239350E74()
{
  return &unk_239357D78;
}

void *sub_239350E80()
{
  return &unk_239357D7A;
}

const __int16 *sub_239350E8C()
{
  return aE_0;
}

__int16 *sub_239350E98()
{
  return &aE_0[1];
}

__int16 *sub_239350EA4()
{
  return &aE_0[2];
}

void *sub_239350EB0()
{
  return &unk_239357D90;
}

uint64_t sub_239350EBC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_239350EF8(a1);
  return v2;
}

char *sub_239350EF8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *(_QWORD *)v1;
  v11 = a1;
  v2 = sub_2393525E4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2393525C0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_2393521C4();
  MEMORY[0x24BDAC7A8](v7);
  sub_239261E08();
  sub_2393521A0();
  v12 = MEMORY[0x24BEE4AF8];
  sub_2393510B4();
  sub_23925FB08(&qword_256927410);
  sub_2393510FC();
  sub_239352734();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5750], v2);
  *((_QWORD *)v1 + 2) = sub_239352614();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 80) - 8) + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], v11);
  return v1;
}

unint64_t sub_2393510B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256927DD0;
  if (!qword_256927DD0)
  {
    v1 = sub_2393525C0();
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_256927DD0);
  }
  return result;
}

unint64_t sub_2393510FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256927DE0;
  if (!qword_256927DE0)
  {
    v1 = sub_239262518(&qword_256927410);
    result = MEMORY[0x23B83BB44](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256927DE0);
  }
  return result;
}

uint64_t sub_239351148()
{
  return sub_2393525F0();
}

uint64_t sub_239351190@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_2393511FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_239351288(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

uint64_t sub_239351238()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return swift_deallocClassInstance();
}

uint64_t sub_239351288(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[2];
  (*(void (**)(char *))(v3 + 16))(v5);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, v5, v2);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_239351528;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_239295A70;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23928562C;
  aBlock[3] = &unk_250AC99C8;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23935141C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23935142C()
{
  return swift_release();
}

uint64_t sub_239351434()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_239350D60(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t sub_2393514C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_239351528()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(uint64_t **)(v0 + 24);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = *v1;
  v5 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 24))(v5, v3);
  return swift_endAccess();
}

uint64_t sub_2393515A8()
{
  return swift_deallocObject();
}

void sub_2393515C0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  char **v8;
  char *v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  __n128 *v14;
  char *v15;
  unint64_t v16;
  char *v17;
  float v18;
  float v19;
  float v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int32x4_t v25;
  int32x2_t v26;
  float32x4_t v27;
  float32x4_t v29;
  float32x4_t v31;
  float32x4_t v33;
  float32x4_t v35;
  float32x4_t v36;
  simd_float4x4 v37;

  v6 = v5;
  v10 = *(char **)(v5 + 48);
  v8 = (char **)(v5 + 48);
  v9 = v10;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_239351868(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    *v8 = v9;
  }
  v13 = *((_QWORD *)v9 + 2);
  v12 = *((_QWORD *)v9 + 3);
  if (v13 >= v12 >> 1)
  {
    v9 = sub_239351868((char *)(v12 > 1), v13 + 1, 1, v9);
    *v8 = v9;
  }
  *((_QWORD *)v9 + 2) = v13 + 1;
  v14 = (__n128 *)&v9[80 * v13];
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6].n128_f64[0] = a5;
  v15 = *v8;
  v16 = *((_QWORD *)*v8 + 2);
  if (v16 >= 3)
  {
    sub_23935196C(0, 1);
    v15 = *v8;
    v16 = *((_QWORD *)*v8 + 2);
  }
  if (v16 >= 2)
  {
    v17 = &v15[80 * v16];
    v18 = *((double *)v17 + 2) - *((double *)v17 - 8);
    if (v18 <= 0.0)
    {
      __break(1u);
    }
    else
    {
      v29 = *((float32x4_t *)v17 - 3);
      v31 = *((float32x4_t *)v17 - 2);
      v33 = *((float32x4_t *)v17 - 1);
      v35 = *(float32x4_t *)v17;
      v37 = __invert_f4(*((simd_float4x4 *)v17 - 2));
      v26 = (int32x2_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[1].f32[0]), v31, *(float32x2_t *)v37.columns[1].f32, 1), v33, (float32x4_t)v37.columns[1], 2), v35, (float32x4_t)v37.columns[1], 3).u64[0];
      v27 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[0].f32[0]), v31, *(float32x2_t *)v37.columns[0].f32, 1), v33, (float32x4_t)v37.columns[0], 2), v35, (float32x4_t)v37.columns[0], 3);
      v25 = (int32x4_t)vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[2].f32[0]), v31, *(float32x2_t *)v37.columns[2].f32, 1), v33, (float32x4_t)v37.columns[2], 2), v35, (float32x4_t)v37.columns[2], 3);
      v36 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v29, v37.columns[3].f32[0]), v31, *(float32x2_t *)v37.columns[3].f32, 1), v33, (float32x4_t)v37.columns[3], 2), v35, (float32x4_t)v37.columns[3], 3);
      v19 = sub_2392E10A0(v27, v26, v25);
      v20 = sub_2392E1104(*(double *)v27.i64, *(double *)&v26, *(double *)v25.i64, v36) / v18;
      if ((float)(v19 / v18) > 60.0 || v20 > 0.5)
      {
        *(_QWORD *)(v6 + 40) = 15;
        return;
      }
      v22 = *(_QWORD *)(v6 + 40);
      v23 = __OFSUB__(v22, 1);
      v24 = v22 - 1;
      if (!v23)
      {
        *(_QWORD *)(v6 + 40) = v24 & ~(v24 >> 63);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_2393517F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_23935181C()
{
  uint64_t v0;
  double result;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = 0x3F00000042700000;
  *(_QWORD *)&result = 15;
  *(_OWORD *)(v0 + 32) = xmmword_239357DE0;
  *(_QWORD *)(v0 + 48) = MEMORY[0x24BEE4AF8];
  return result;
}

char *sub_239351868(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23925FB08(&qword_25692C278);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 80 * v8;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_23935196C(unint64_t result, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  const void *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_23;
  }
  else
  {
    if (v5 <= v9)
      v10 = v5 + v8;
    else
      v10 = v5;
    result = (unint64_t)sub_239351868((char *)result, v10, 1, (char *)v4);
    v4 = result;
    if (!v8)
      goto LABEL_23;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFSUB__(v11, a2);
  v13 = v11 - a2;
  if (v12)
    goto LABEL_29;
  result = v4 + 32 + 80 * v6;
  v14 = (const void *)(v4 + 32 + 80 * a2);
  v15 = 80 * v13;
  if ((uint64_t)(80 * v6) < 80 * a2 || (result < (unint64_t)v14 + v15 ? (v16 = v6 == a2) : (v16 = 0), !v16))
    result = (unint64_t)memmove((void *)result, v14, v15);
  v17 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v17, v8);
  v18 = v17 + v8;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v18;
LABEL_23:
    *v2 = v4;
    return result;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VoxelIntegrationManager()
{
  return objc_opt_self();
}

__n128 initializeWithCopy for VoxelIntegrationManager.TransformWithTimestamp(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VoxelIntegrationManager.TransformWithTimestamp(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VoxelIntegrationManager.TransformWithTimestamp(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VoxelIntegrationManager.TransformWithTimestamp()
{
  return &type metadata for VoxelIntegrationManager.TransformWithTimestamp;
}

const char *sub_239351B38()
{
  return "1.1.0";
}

uint64_t sub_239351B44(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_239351B74()
{
  return OCDataBufferGetSize();
}

uint64_t sub_239351B7C()
{
  return OCDataBufferGetDataSize();
}

uint64_t sub_239351B84()
{
  return OCDataBufferGetBytesPerData();
}

uint64_t sub_239351B8C()
{
  return OCDataBufferGetDataFormatType();
}

id sub_239351B94()
{
  uint64_t v0;
  void *v1;
  void *IOSurface;
  id v3;
  id v4;

  v0 = swift_dynamicCastObjCProtocolConditional();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  swift_unknownObjectRetain();
  if (!objc_msgSend(v1, sel_supportsBufferWithIOSurface)
    || (IOSurface = (void *)OCDataBufferGetIOSurface()) == 0)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v3 = IOSurface;
  v4 = objc_msgSend(v1, sel_newBufferWithIOSurface_, v3);
  swift_unknownObjectRelease();

  return v4;
}

void *sub_239351C4C()
{
  void *IOSurface;
  __IOSurface *v1;
  void *BaseAddress;

  IOSurface = (void *)OCDataBufferGetIOSurface();
  if (!IOSurface)
    return 0;
  v1 = IOSurface;
  BaseAddress = IOSurfaceGetBaseAddress(v1);

  return BaseAddress;
}

uint64_t sub_239351C90()
{
  return OCDataBufferGetDataAt();
}

uint64_t OCDataBuffer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t OCDataBuffer.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OCDataBuffer()
{
  return objc_opt_self();
}

uint64_t method lookup function for OCDataBuffer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OCDataBuffer.count.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of OCDataBuffer.numBytes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of OCDataBuffer.stride.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of OCDataBuffer.formatType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of OCDataBuffer.asMTLBuffer(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of OCDataBuffer.baseAddress()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of OCDataBuffer.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_239351D5C()
{
  return MEMORY[0x24BDCB620]();
}

uint64_t sub_239351D68()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_239351D74()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_239351D80()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_239351D8C()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_239351D98()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_239351DA4()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_239351DB0()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_239351DBC()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_239351DC8()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_239351DD4()
{
  return MEMORY[0x24BDCBE78]();
}

uint64_t sub_239351DE0()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_239351DEC()
{
  return MEMORY[0x24BDCC720]();
}

uint64_t sub_239351DF8()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_239351E04()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_239351E10()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_239351E1C()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_239351E28()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_239351E34()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_239351E40()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_239351E4C()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_239351E58()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_239351E64()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_239351E70()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_239351E7C()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_239351E88()
{
  return MEMORY[0x24BDCD830]();
}

uint64_t sub_239351E94()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_239351EA0()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_239351EAC()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_239351EB8()
{
  return MEMORY[0x24BDCD888]();
}

uint64_t sub_239351EC4()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_239351ED0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_239351EDC()
{
  return MEMORY[0x24BDCD908]();
}

uint64_t sub_239351EE8()
{
  return MEMORY[0x24BDCD918]();
}

uint64_t sub_239351EF4()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_239351F00()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_239351F0C()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_239351F18()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_239351F24()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_239351F30()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_239351F3C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_239351F48()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_239351F54()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_239351F60()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_239351F6C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_239351F78()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_239351F84()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t sub_239351F90()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_239351F9C()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_239351FA8()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_239351FB4()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_239351FC0()
{
  return MEMORY[0x24BDCE8B0]();
}

uint64_t sub_239351FCC()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_239351FD8()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_239351FE4()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_239351FF0()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_239351FFC()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_239352008()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_239352014()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_239352020()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23935202C()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_239352038()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_239352044()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_239352050()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_23935205C()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_239352068()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_239352074()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_239352080()
{
  return MEMORY[0x24BEE62D8]();
}

uint64_t sub_23935208C()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_239352098()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2393520A4()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2393520B0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2393520BC()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_2393520C8()
{
  return MEMORY[0x24BDB9C70]();
}

uint64_t sub_2393520D4()
{
  return MEMORY[0x24BDB9C78]();
}

uint64_t sub_2393520E0()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_2393520EC()
{
  return MEMORY[0x24BDB9E50]();
}

uint64_t sub_2393520F8()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_239352104()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_239352110()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t sub_23935211C()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_239352128()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_239352134()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_239352140()
{
  return MEMORY[0x24BDB9FB0]();
}

uint64_t sub_23935214C()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t sub_239352158()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_239352164()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_239352170()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23935217C()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_239352188()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_239352194()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_2393521A0()
{
  return MEMORY[0x24BEE54D8]();
}

uint64_t sub_2393521AC()
{
  return MEMORY[0x24BEE54E0]();
}

uint64_t sub_2393521B8()
{
  return MEMORY[0x24BEE54E8]();
}

uint64_t sub_2393521C4()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2393521D0()
{
  return MEMORY[0x24BEE5558]();
}

uint64_t sub_2393521DC()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_2393521E8()
{
  return MEMORY[0x24BEE5580]();
}

uint64_t sub_2393521F4()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_239352200()
{
  return MEMORY[0x24BEE55B8]();
}

uint64_t sub_23935220C()
{
  return MEMORY[0x24BEE55D8]();
}

uint64_t sub_239352218()
{
  return MEMORY[0x24BEE55E0]();
}

uint64_t sub_239352224()
{
  return MEMORY[0x24BEE55F8]();
}

uint64_t sub_239352230()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_23935223C()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_239352248()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_239352254()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_239352260()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23935226C()
{
  return MEMORY[0x24BDCF818]();
}

uint64_t sub_239352278()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t sub_239352284()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_239352290()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23935229C()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2393522A8()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2393522B4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2393522C0()
{
  return MEMORY[0x24BDCF890]();
}

uint64_t sub_2393522CC()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2393522D8()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_2393522E4()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_2393522F0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2393522FC()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_239352308()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_239352314()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_239352320()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23935232C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_239352338()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_239352344()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_239352350()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_23935235C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_239352368()
{
  return MEMORY[0x24BEE0B78]();
}

uint64_t sub_239352374()
{
  return MEMORY[0x24BEE0BA0]();
}

uint64_t sub_239352380()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23935238C()
{
  return MEMORY[0x24BEE0BE0]();
}

uint64_t sub_239352398()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_2393523A4()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_2393523B0()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2393523BC()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_2393523C8()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_2393523D4()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_2393523E0()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_2393523EC()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_2393523F8()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_239352404()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_239352410()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23935241C()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_239352428()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_239352434()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_239352440()
{
  return MEMORY[0x24BDCFBC0]();
}

uint64_t sub_23935244C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_239352458()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_239352464()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_239352470()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23935247C()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_239352488()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_239352494()
{
  return MEMORY[0x24BEE1198]();
}

uint64_t sub_2393524A0()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2393524AC()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_2393524B8()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2393524C4()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_2393524D0()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_2393524DC()
{
  return MEMORY[0x24BEE1488]();
}

uint64_t sub_2393524E8()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t sub_2393524F4()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_239352500()
{
  return MEMORY[0x24BDCFCC8]();
}

uint64_t sub_23935250C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_239352518()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_239352524()
{
  return MEMORY[0x24BEDF2A0]();
}

uint64_t sub_239352530()
{
  return MEMORY[0x24BEDF2A8]();
}

uint64_t sub_23935253C()
{
  return MEMORY[0x24BDBD780]();
}

uint64_t sub_239352548()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t sub_239352554()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_239352560()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23935256C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_239352578()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_239352584()
{
  return MEMORY[0x24BEE79B8]();
}

uint64_t sub_239352590()
{
  return MEMORY[0x24BEDF310]();
}

uint64_t sub_23935259C()
{
  return MEMORY[0x24BEDF320]();
}

uint64_t sub_2393525A8()
{
  return MEMORY[0x24BEE5658]();
}

uint64_t sub_2393525B4()
{
  return MEMORY[0x24BEE5678]();
}

uint64_t sub_2393525C0()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2393525CC()
{
  return MEMORY[0x24BEE56C0]();
}

uint64_t sub_2393525D8()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_2393525E4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2393525F0()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_2393525FC()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_239352608()
{
  return MEMORY[0x24BEE5798]();
}

uint64_t sub_239352614()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_239352620()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_23935262C()
{
  return MEMORY[0x24BEDF458]();
}

uint64_t sub_239352638()
{
  return MEMORY[0x24BDD00F8]();
}

uint64_t sub_239352644()
{
  return MEMORY[0x24BEE5318]();
}

uint64_t sub_239352650()
{
  return MEMORY[0x24BEE5320]();
}

uint64_t sub_23935265C()
{
  return MEMORY[0x24BEE5328]();
}

uint64_t sub_239352668()
{
  return MEMORY[0x24BEDF328]();
}

uint64_t sub_239352674()
{
  return MEMORY[0x24BEDF350]();
}

uint64_t sub_239352680()
{
  return MEMORY[0x24BEDF358]();
}

uint64_t sub_23935268C()
{
  return MEMORY[0x24BEDF368]();
}

uint64_t sub_239352698()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_2393526A4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2393526B0()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2393526BC()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2393526C8()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_2393526D4()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_2393526E0()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_2393526EC()
{
  return MEMORY[0x24BDD0608]();
}

uint64_t sub_2393526F8()
{
  return MEMORY[0x24BDD0620]();
}

uint64_t sub_239352704()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_239352710()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23935271C()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_239352728()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_239352734()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_239352740()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23935274C()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_239352758()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_239352764()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_239352770()
{
  return MEMORY[0x24BEE2488]();
}

uint64_t sub_23935277C()
{
  return MEMORY[0x24BEE2490]();
}

uint64_t sub_239352788()
{
  return MEMORY[0x24BEE2498]();
}

uint64_t sub_239352794()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2393527A0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2393527AC()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2393527B8()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_2393527C4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2393527D0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2393527DC()
{
  return MEMORY[0x24BEE2638]();
}

uint64_t sub_2393527E8()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2393527F4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_239352800()
{
  return MEMORY[0x24BEE2968]();
}

uint64_t sub_23935280C()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_239352818()
{
  return MEMORY[0x24BEE2A80]();
}

uint64_t sub_239352824()
{
  return MEMORY[0x24BEE2B80]();
}

uint64_t sub_239352830()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23935283C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_239352848()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_239352854()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_239352860()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23935286C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_239352878()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_239352884()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_239352890()
{
  return MEMORY[0x24BEE30D0]();
}

uint64_t sub_23935289C()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_2393528A8()
{
  return MEMORY[0x24BEE3278]();
}

uint64_t sub_2393528B4()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_2393528C0()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2393528CC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2393528D8()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_2393528E4()
{
  return MEMORY[0x24BEE3D90]();
}

uint64_t sub_2393528F0()
{
  return MEMORY[0x24BEE3E90]();
}

uint64_t sub_2393528FC()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_239352908()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_239352914()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_239352920()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23935292C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_239352938()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_239352944()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_239352950()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23935295C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_239352968()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_239352974()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_239352980()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23935298C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_239352998()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2393529A4()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_2393529B0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2393529BC()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t ARReplaySensorClassForMovieURL()
{
  return MEMORY[0x24BDB1430]();
}

uint64_t ARVisionCameraToRenderingCoordinateTransform()
{
  return MEMORY[0x24BDB1460]();
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x24BDBBD08]();
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x24BDBBDE0](allocator, theDict);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x24BDBBEF8](cf);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x24BDBC698]();
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return (CFURLRef)MEMORY[0x24BDBC858](allocator, filePath, pathStyle, isDirectory);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x24BDBD918](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDBB8](name);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x24BDD9048](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x24BDD9088](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x24BDD9090](idst);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x24BDBE680](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x24BDBE6E0](image);
}

CFDictionaryRef CGImageSourceCopyAuxiliaryDataInfoAtIndex(CGImageSourceRef isrc, size_t index, CFStringRef auxiliaryImageDataType)
{
  return (CFDictionaryRef)MEMORY[0x24BDD9130](isrc, index, auxiliaryImageDataType);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x24BDD9148](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x24BDD9158](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x24BDD9168](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x24BDD9180](url, options);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  Float64 result;

  MEMORY[0x24BDC0490](time);
  return result;
}

uint64_t CPGAddSampleCallbackBundleCreate()
{
  return MEMORY[0x24BE1FAF8]();
}

uint64_t CPGAddSampleCallbackBundleRelease()
{
  return MEMORY[0x24BE1FB00]();
}

uint64_t CPGAddSampleCallbackBundleSetStreamProcessingCallback()
{
  return MEMORY[0x24BE1FB08]();
}

uint64_t CPGAddSampleStreamProcessingOutputGetFlipRecommendation()
{
  return MEMORY[0x24BE1FB10]();
}

uint64_t CPGAddSampleStreamProcessingOutputRelease()
{
  return MEMORY[0x24BE1FB18]();
}

uint64_t CPGAddSampleStreamProcessingOutputRetain()
{
  return MEMORY[0x24BE1FB20]();
}

uint64_t CPGBoundingBoxCreateFromTransform()
{
  return MEMORY[0x24BE1FB28]();
}

uint64_t CPGBoundingBoxGetTransform()
{
  return MEMORY[0x24BE1FB30]();
}

uint64_t CPGBoundingBoxRelease()
{
  return MEMORY[0x24BE1FB38]();
}

uint64_t CPGCameraCreateWithIntrinsicsExtrinsicsResolution()
{
  return MEMORY[0x24BE1FB40]();
}

uint64_t CPGCameraGetTransform()
{
  return MEMORY[0x24BE1FB48]();
}

uint64_t CPGCameraRelease()
{
  return MEMORY[0x24BE1FB50]();
}

uint64_t CPGDepthPointCloudAddPoint()
{
  return MEMORY[0x24BE1FB58]();
}

uint64_t CPGDepthPointCloudCreateWithSensorConfig()
{
  return MEMORY[0x24BE1FB60]();
}

uint64_t CPGDepthPointCloudGetNumberOfPoints()
{
  return MEMORY[0x24BE1FB68]();
}

uint64_t CPGDepthPointCloudRelease()
{
  return MEMORY[0x24BE1FB70]();
}

uint64_t CPGFinalizeInputCallbackBundleCreate()
{
  return MEMORY[0x24BE1FB78]();
}

uint64_t CPGFinalizeInputCallbackBundleRelease()
{
  return MEMORY[0x24BE1FB80]();
}

uint64_t CPGFinalizeInputCallbackBundleSetCompletionCallback()
{
  return MEMORY[0x24BE1FB88]();
}

uint64_t CPGFinalizeInputResultGetErrorCode()
{
  return MEMORY[0x24BE1FB90]();
}

uint64_t CPGFinalizeInputResultRelease()
{
  return MEMORY[0x24BE1FB98]();
}

uint64_t CPGFinalizeInputResultRetain()
{
  return MEMORY[0x24BE1FBA0]();
}

uint64_t CPGLocalizationUpdatesGetObjectTransform()
{
  return MEMORY[0x24BE1FBA8]();
}

uint64_t CPGLocalizationUpdatesGetState()
{
  return MEMORY[0x24BE1FBB0]();
}

uint64_t CPGMaskingOptionsCreate()
{
  return MEMORY[0x24BE1FBB8]();
}

uint64_t CPGMaskingOptionsRelease()
{
  return MEMORY[0x24BE1FBC0]();
}

uint64_t CPGMaskingOptionsSetMaskingType()
{
  return MEMORY[0x24BE1FBC8]();
}

uint64_t CPGObjectTransformGetTransformMatrix()
{
  return MEMORY[0x24BE1FBD0]();
}

uint64_t CPGObjectTransformRelease()
{
  return MEMORY[0x24BE1FBD8]();
}

uint64_t CPGOutputCreateWithTransform()
{
  return MEMORY[0x24BE1FBE0]();
}

uint64_t CPGOutputGetFailure()
{
  return MEMORY[0x24BE1FBE8]();
}

uint64_t CPGOutputGetModelURL()
{
  return MEMORY[0x24BE1FBF0]();
}

uint64_t CPGOutputGetObjAssetsURLs()
{
  return MEMORY[0x24BE1FBF8]();
}

uint64_t CPGOutputGetProperties()
{
  return MEMORY[0x24BE1FC00]();
}

uint64_t CPGOutputGetQuadMeshObjAssetsURLs()
{
  return MEMORY[0x24BE1FC08]();
}

uint64_t CPGOutputGetQuadMeshUsdaAssetsURLs()
{
  return MEMORY[0x24BE1FC10]();
}

uint64_t CPGOutputGetSfmMap()
{
  return MEMORY[0x24BE1FC18]();
}

uint64_t CPGOutputGetUsdaAssetsURLs()
{
  return MEMORY[0x24BE1FC20]();
}

uint64_t CPGOutputModelOptionsCreate()
{
  return MEMORY[0x24BE1FC28]();
}

uint64_t CPGOutputModelOptionsGetMaxPolyCount()
{
  return MEMORY[0x24BE1FC30]();
}

uint64_t CPGOutputModelOptionsGetMaxTextureResolution()
{
  return MEMORY[0x24BE1FC38]();
}

uint64_t CPGOutputModelOptionsGetTextureDestination()
{
  return MEMORY[0x24BE1FC40]();
}

uint64_t CPGOutputModelOptionsGetTextureFormat()
{
  return MEMORY[0x24BE1FC48]();
}

uint64_t CPGOutputModelOptionsGetTextureLossyCompressionQuality()
{
  return MEMORY[0x24BE1FC50]();
}

uint64_t CPGOutputModelOptionsRelease()
{
  return MEMORY[0x24BE1FC58]();
}

uint64_t CPGOutputModelOptionsSetMaxPolyCount()
{
  return MEMORY[0x24BE1FC60]();
}

uint64_t CPGOutputModelOptionsSetMaxTextureResolution()
{
  return MEMORY[0x24BE1FC68]();
}

uint64_t CPGOutputModelOptionsSetTextureDestination()
{
  return MEMORY[0x24BE1FC70]();
}

uint64_t CPGOutputModelOptionsSetTextureFormat()
{
  return MEMORY[0x24BE1FC78]();
}

uint64_t CPGOutputModelOptionsSetTextureLossyCompressionQuality()
{
  return MEMORY[0x24BE1FC80]();
}

uint64_t CPGOutputRelease()
{
  return MEMORY[0x24BE1FC88]();
}

uint64_t CPGOutputRetain()
{
  return MEMORY[0x24BE1FC90]();
}

uint64_t CPGProcessingCallbackBundleCreate()
{
  return MEMORY[0x24BE1FC98]();
}

uint64_t CPGProcessingCallbackBundleRelease()
{
  return MEMORY[0x24BE1FCA0]();
}

uint64_t CPGProcessingCallbackBundleSetCompleteOutputCallback()
{
  return MEMORY[0x24BE1FCA8]();
}

uint64_t CPGProcessingCallbackBundleSetProgressCallback()
{
  return MEMORY[0x24BE1FCB0]();
}

uint64_t CPGProcessingCallbackBundleSetWarningCallback()
{
  return MEMORY[0x24BE1FCB8]();
}

uint64_t CPGProcessingFailureGetCode()
{
  return MEMORY[0x24BE1FCC0]();
}

uint64_t CPGProcessingLimitsForCurrentDevice()
{
  return MEMORY[0x24BE1FCC8]();
}

uint64_t CPGProcessingLimitsGetMaxBakedOutputTriangleCount()
{
  return MEMORY[0x24BE1FCD0]();
}

uint64_t CPGProcessingLimitsGetMaxImageDimension()
{
  return MEMORY[0x24BE1FCD8]();
}

uint64_t CPGProcessingLimitsGetMaxNumberOfSamples()
{
  return MEMORY[0x24BE1FCE0]();
}

uint64_t CPGProcessingLimitsGetMaxTotalPixelCount()
{
  return MEMORY[0x24BE1FCE8]();
}

uint64_t CPGProcessingLimitsGetMinBakedOutputTriangleCount()
{
  return MEMORY[0x24BE1FCF0]();
}

uint64_t CPGProcessingLimitsRelease()
{
  return MEMORY[0x24BE1FCF8]();
}

uint64_t CPGProgressGetEstimatedRemainingTime()
{
  return MEMORY[0x24BE1FD00]();
}

uint64_t CPGProgressGetFractionCompleted()
{
  return MEMORY[0x24BE1FD08]();
}

uint64_t CPGProgressGetMessage()
{
  return MEMORY[0x24BE1FD10]();
}

uint64_t CPGProgressGetProcessingStep()
{
  return MEMORY[0x24BE1FD18]();
}

uint64_t CPGProgressRelease()
{
  return MEMORY[0x24BE1FD20]();
}

uint64_t CPGRequestCreateWithDetail()
{
  return MEMORY[0x24BE1FD30]();
}

uint64_t CPGRequestCreateWithDetailAndSfmMap()
{
  return MEMORY[0x24BE1FD38]();
}

uint64_t CPGRequestRelease()
{
  return MEMORY[0x24BE1FD40]();
}

uint64_t CPGRequestRetain()
{
  return MEMORY[0x24BE1FD48]();
}

uint64_t CPGRequestSetCustomOutputModelOptions()
{
  return MEMORY[0x24BE1FD50]();
}

uint64_t CPGRequestSetOutputQuadMeshEnabled()
{
  return MEMORY[0x24BE1FD58]();
}

uint64_t CPGSampleCameraTransformMapAddBySampleID()
{
  return MEMORY[0x24BE1FD60]();
}

uint64_t CPGSampleCameraTransformMapCreate()
{
  return MEMORY[0x24BE1FD68]();
}

uint64_t CPGSampleCameraTransformMapRelease()
{
  return MEMORY[0x24BE1FD70]();
}

uint64_t CPGSampleCreateWithCVPixelBuffer()
{
  return MEMORY[0x24BE1FD78]();
}

uint64_t CPGSampleMetadataCreate()
{
  return MEMORY[0x24BE1FD80]();
}

uint64_t CPGSampleMetadataRelease()
{
  return MEMORY[0x24BE1FD88]();
}

uint64_t CPGSampleMetadataSetCameraID()
{
  return MEMORY[0x24BE1FD90]();
}

uint64_t CPGSampleMetadataSetCameraTransform()
{
  return MEMORY[0x24BE1FD98]();
}

uint64_t CPGSampleMetadataSetDepthMapWithConfidence()
{
  return MEMORY[0x24BE1FDA0]();
}

uint64_t CPGSampleMetadataSetDepthPointCloudWithExtrinsics()
{
  return MEMORY[0x24BE1FDA8]();
}

uint64_t CPGSampleMetadataSetFocalLengthInPixel()
{
  return MEMORY[0x24BE1FDB0]();
}

uint64_t CPGSampleMetadataSetFromCGImageProperties()
{
  return MEMORY[0x24BE1FDB8]();
}

uint64_t CPGSampleMetadataSetGravity()
{
  return MEMORY[0x24BE1FDC0]();
}

uint64_t CPGSampleMetadataSetMaskWithCVPixelBuffer()
{
  return MEMORY[0x24BE1FDC8]();
}

uint64_t CPGSampleMetadataSetObjectBoundingBox()
{
  return MEMORY[0x24BE1FDD0]();
}

uint64_t CPGSampleMetadataSetPrincipalPoint()
{
  return MEMORY[0x24BE1FDD8]();
}

uint64_t CPGSampleMetadataSetSegmentID()
{
  return MEMORY[0x24BE1FDE0]();
}

uint64_t CPGSampleMetadataSetTimestamp()
{
  return MEMORY[0x24BE1FDE8]();
}

uint64_t CPGSampleRelease()
{
  return MEMORY[0x24BE1FDF0]();
}

uint64_t CPGSessionAddSample()
{
  return MEMORY[0x24BE1FDF8]();
}

uint64_t CPGSessionAddSampleWithCallbacks()
{
  return MEMORY[0x24BE1FE00]();
}

uint64_t CPGSessionAddTemporalDepthPointFrame()
{
  return MEMORY[0x24BE1FE08]();
}

uint64_t CPGSessionCancelProcessing()
{
  return MEMORY[0x24BE1FE10]();
}

uint64_t CPGSessionCreate()
{
  return MEMORY[0x24BE1FE18]();
}

uint64_t CPGSessionCreateWithSnapshotURL()
{
  return MEMORY[0x24BE1FE20]();
}

uint64_t CPGSessionFinalizeInput()
{
  return MEMORY[0x24BE1FE28]();
}

uint64_t CPGSessionGetEstimatedProcessingTime()
{
  return MEMORY[0x24BE1FE30]();
}

uint64_t CPGSessionGetEstimatedProcessingTimeByNumberOfPixels()
{
  return MEMORY[0x24BE1FE38]();
}

uint64_t CPGSessionLocalizeSample()
{
  return MEMORY[0x24BE1FE40]();
}

uint64_t CPGSessionOptionsCreate()
{
  return MEMORY[0x24BE1FE48]();
}

uint64_t CPGSessionOptionsRelease()
{
  return MEMORY[0x24BE1FE50]();
}

uint64_t CPGSessionOptionsSetAutoMaskingEnabled()
{
  return MEMORY[0x24BE1FE58]();
}

uint64_t CPGSessionOptionsSetMaskingOptions()
{
  return MEMORY[0x24BE1FE60]();
}

uint64_t CPGSessionOptionsSetReconstructionPowerSetting()
{
  return MEMORY[0x24BE1FE68]();
}

uint64_t CPGSessionOptionsSetSfmOptions()
{
  return MEMORY[0x24BE1FE70]();
}

uint64_t CPGSessionOptionsSetSnapshotEnabled()
{
  return MEMORY[0x24BE1FE78]();
}

uint64_t CPGSessionOptionsSetWorkingDirectory()
{
  return MEMORY[0x24BE1FE80]();
}

uint64_t CPGSessionProcessRequestWithCallbacks()
{
  return MEMORY[0x24BE1FE88]();
}

uint64_t CPGSessionRelease()
{
  return MEMORY[0x24BE1FE90]();
}

uint64_t CPGSessionResumeOptionsCreate()
{
  return MEMORY[0x24BE1FE98]();
}

uint64_t CPGSessionResumeOptionsRelease()
{
  return MEMORY[0x24BE1FEA0]();
}

uint64_t CPGSessionResumeProcessingWithCallbacks()
{
  return MEMORY[0x24BE1FEA8]();
}

uint64_t CPGSessionUpdateBoundingBoxBySegmentID()
{
  return MEMORY[0x24BE1FEB0]();
}

uint64_t CPGSessionUpdateSampleCameraTransforms()
{
  return MEMORY[0x24BE1FEB8]();
}

uint64_t CPGSfmMapCopyAllSampleIDs()
{
  return MEMORY[0x24BE1FEC0]();
}

uint64_t CPGSfmMapCopyBoundingBox()
{
  return MEMORY[0x24BE1FEC8]();
}

uint64_t CPGSfmMapCopyTracksInsideBoundingBoxInWorldCoordinate()
{
  return MEMORY[0x24BE1FED0]();
}

uint64_t CPGSfmMapCreateMutableCopy()
{
  return MEMORY[0x24BE1FED8]();
}

uint64_t CPGSfmMapGetCameraBySampleID()
{
  return MEMORY[0x24BE1FEE0]();
}

uint64_t CPGSfmMapIsSampleRegistered()
{
  return MEMORY[0x24BE1FEE8]();
}

uint64_t CPGSfmMapRelease()
{
  return MEMORY[0x24BE1FEF0]();
}

uint64_t CPGSfmMapRetain()
{
  return MEMORY[0x24BE1FEF8]();
}

uint64_t CPGSfmMapSetBoundingBox()
{
  return MEMORY[0x24BE1FF00]();
}

uint64_t CPGSfmMapTransformBy()
{
  return MEMORY[0x24BE1FF08]();
}

uint64_t CPGSfmOptionsCreate()
{
  return MEMORY[0x24BE1FF10]();
}

uint64_t CPGSfmOptionsRelease()
{
  return MEMORY[0x24BE1FF18]();
}

uint64_t CPGSfmOptionsSetFeatureSensitivity()
{
  return MEMORY[0x24BE1FF20]();
}

uint64_t CPGSfmOptionsSetPoseUpdateCallback()
{
  return MEMORY[0x24BE1FF28]();
}

uint64_t CPGSfmOptionsSetPowerSetting()
{
  return MEMORY[0x24BE1FF30]();
}

uint64_t CPGSfmOptionsSetProcessingMode()
{
  return MEMORY[0x24BE1FF38]();
}

uint64_t CPGSfmOptionsSetSampleOrdering()
{
  return MEMORY[0x24BE1FF40]();
}

uint64_t CPGSfmOptionsSetTrackUpdateCallback()
{
  return MEMORY[0x24BE1FF48]();
}

uint64_t CPGSfmOptionsSetUsePriors()
{
  return MEMORY[0x24BE1FF50]();
}

uint64_t CPGSfmWorldTracksGetColors()
{
  return MEMORY[0x24BE1FF58]();
}

uint64_t CPGSfmWorldTracksGetCount()
{
  return MEMORY[0x24BE1FF60]();
}

uint64_t CPGSfmWorldTracksGetNormals()
{
  return MEMORY[0x24BE1FF68]();
}

uint64_t CPGSfmWorldTracksGetPositions()
{
  return MEMORY[0x24BE1FF70]();
}

uint64_t CPGSfmWorldTracksRelease()
{
  return MEMORY[0x24BE1FF78]();
}

uint64_t CPGSnapshotInfoCheckDeviceCompatibility()
{
  return MEMORY[0x24BE1FF88]();
}

uint64_t CPGSnapshotInfoCheckSessionOptionsCompatibility()
{
  return MEMORY[0x24BE1FF90]();
}

uint64_t CPGSnapshotInfoGetNumberOfSamples()
{
  return MEMORY[0x24BE1FF98]();
}

uint64_t CPGSnapshotInfoLoadFromURL()
{
  return MEMORY[0x24BE1FFA0]();
}

uint64_t CPGSnapshotInfoRelease()
{
  return MEMORY[0x24BE1FFA8]();
}

uint64_t CPGTemporalDepthPointFrameCreateWithTimeCameraAndPointCloud()
{
  return MEMORY[0x24BE1FFB0]();
}

uint64_t CPGTemporalDepthPointFrameRelease()
{
  return MEMORY[0x24BE1FFB8]();
}

uint64_t CPGUpdatedPosesCopyCameraBySampleID()
{
  return MEMORY[0x24BE1FFC0]();
}

uint64_t CPGUpdatedPosesCopyObjectTransformBySampleID()
{
  return MEMORY[0x24BE1FFC8]();
}

uint64_t CPGUpdatedPosesCopySampleIDs()
{
  return MEMORY[0x24BE1FFD0]();
}

uint64_t CPGUpdatedPosesGetStateBySampleID()
{
  return MEMORY[0x24BE1FFD8]();
}

uint64_t CPGUpdatedPosesRelease()
{
  return MEMORY[0x24BE1FFE0]();
}

CFTypeRef CVBufferCopyAttachment(CVBufferRef buffer, CFStringRef key, CVAttachmentMode *attachmentMode)
{
  return (CFTypeRef)MEMORY[0x24BDC5138](buffer, key, attachmentMode);
}

Boolean CVBufferHasAttachment(CVBufferRef buffer, CFStringRef key)
{
  return MEMORY[0x24BDC5158](buffer, key);
}

void CVBufferSetAttachment(CVBufferRef buffer, CFStringRef key, CFTypeRef value, CVAttachmentMode attachmentMode)
{
  MEMORY[0x24BDC5180](buffer, key, value, *(_QWORD *)&attachmentMode);
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5248](allocator, width, height, *(_QWORD *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x24BDC5278](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC5290](pixelBuffer);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52B0](pixelBuffer);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52D0](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52E8](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x24BDC5308](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferPoolCreate(CFAllocatorRef allocator, CFDictionaryRef poolAttributes, CFDictionaryRef pixelBufferAttributes, CVPixelBufferPoolRef *poolOut)
{
  return MEMORY[0x24BDC5318](allocator, poolAttributes, pixelBufferAttributes, poolOut);
}

CVReturn CVPixelBufferPoolCreatePixelBuffer(CFAllocatorRef allocator, CVPixelBufferPoolRef pixelBufferPool, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5320](allocator, pixelBufferPool, pixelBufferOut);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x24BDC53B0](pixelBuffer, unlockFlags);
}

uint64_t GESSAlgSplitLongEdges()
{
  return MEMORY[0x24BE38540]();
}

uint64_t GESSAlgVertexClusterDownsample()
{
  return MEMORY[0x24BE38548]();
}

uint64_t GESSVersionNumberMajor()
{
  return MEMORY[0x24BE38550]();
}

uint64_t GESSVersionNumberMinor()
{
  return MEMORY[0x24BE38558]();
}

uint64_t GESSVersionNumberPatch()
{
  return MEMORY[0x24BE38560]();
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x24BDD86F8](*(_QWORD *)&object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x24BDD88B0](*(_QWORD *)&entry, key, allocator, *(_QWORD *)&options);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x24BDD8988](*(_QWORD *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x24BDD89A8](name);
}

void *__cdecl IOSurfaceGetBaseAddress(IOSurfaceRef buffer)
{
  return (void *)MEMORY[0x24BDD8B80](buffer);
}

uint64_t OCDataBufferCreateWithIOSurface()
{
  return MEMORY[0x24BE1EE20]();
}

uint64_t OCDataBufferGetBytesPerData()
{
  return MEMORY[0x24BE1EE28]();
}

uint64_t OCDataBufferGetDataAt()
{
  return MEMORY[0x24BE1EE30]();
}

uint64_t OCDataBufferGetDataFormatType()
{
  return MEMORY[0x24BE1EE38]();
}

uint64_t OCDataBufferGetDataSize()
{
  return MEMORY[0x24BE1EE40]();
}

uint64_t OCDataBufferGetIOSurface()
{
  return MEMORY[0x24BE1EE48]();
}

uint64_t OCDataBufferGetSize()
{
  return MEMORY[0x24BE1EE50]();
}

uint64_t OCExplicitFeedbackCreate()
{
  return MEMORY[0x24BE1EE58]();
}

uint64_t OCExplicitFeedbackDestroy()
{
  return MEMORY[0x24BE1EE60]();
}

uint64_t OCExplicitFeedbackProcess()
{
  return MEMORY[0x24BE1EE68]();
}

uint64_t OCExplicitFeedbackStart()
{
  return MEMORY[0x24BE1EE70]();
}

uint64_t OCExplicitFeedbackStop()
{
  return MEMORY[0x24BE1EE78]();
}

uint64_t OCImageFilterApplyCrossBilateralFilter()
{
  return MEMORY[0x24BE1EE80]();
}

uint64_t OCImageFilterApplyFilter()
{
  return MEMORY[0x24BE1EE88]();
}

uint64_t OCImageFilterBilateralCreate()
{
  return MEMORY[0x24BE1EE90]();
}

uint64_t OCImageFilterDestroy()
{
  return MEMORY[0x24BE1EE98]();
}

uint64_t OCImageFilterStart()
{
  return MEMORY[0x24BE1EEA0]();
}

uint64_t OCImageFilterStop()
{
  return MEMORY[0x24BE1EEA8]();
}

uint64_t OCImageScalerCreate()
{
  return MEMORY[0x24BE1EEB0]();
}

uint64_t OCImageScalerDestroy()
{
  return MEMORY[0x24BE1EEB8]();
}

uint64_t OCImageScalerResizeImage()
{
  return MEMORY[0x24BE1EEC0]();
}

uint64_t OCImageScalerStart()
{
  return MEMORY[0x24BE1EEC8]();
}

uint64_t OCImageScalerStop()
{
  return MEMORY[0x24BE1EED0]();
}

uint64_t OCMaskingCreate()
{
  return MEMORY[0x24BE1EED8]();
}

uint64_t OCMaskingCreateObjectVoxelsAndComputeBBox()
{
  return MEMORY[0x24BE1EEE0]();
}

uint64_t OCMaskingDestroy()
{
  return MEMORY[0x24BE1EEE8]();
}

uint64_t OCMaskingGetDebugInfo()
{
  return MEMORY[0x24BE1EEF0]();
}

uint64_t OCMaskingStart()
{
  return MEMORY[0x24BE1EEF8]();
}

uint64_t OCMaskingStop()
{
  return MEMORY[0x24BE1EF00]();
}

uint64_t OCMetalDevice()
{
  return MEMORY[0x24BE1EF08]();
}

uint64_t OCMetalInitWithDevice()
{
  return MEMORY[0x24BE1EF10]();
}

uint64_t OCModulesGitHash()
{
  return MEMORY[0x24BE1EF18]();
}

uint64_t OCNonModularSPI_ADJasperPointCloud_CreateDataBuffer()
{
  return MEMORY[0x24BE1EF20]();
}

uint64_t OCNonModularSPI_ADJasperPointCloud_CreatePointCloud()
{
  return MEMORY[0x24BE1EF28]();
}

uint64_t OCNonModularSPI_AVCameraCalibrationData_CreateDictionaryFrom()
{
  return MEMORY[0x24BE1EF30]();
}

uint64_t OCNonModularSPI_AVCameraCalibrationData_InitFrom()
{
  return MEMORY[0x24BE1EF38]();
}

uint64_t OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightOCMacroModeSupported()
{
  return MEMORY[0x24BE1EF40]();
}

uint64_t OCNonModularSPI_AVCaptureDevice_IsTimeOfFlightSensorType80()
{
  return MEMORY[0x24BE1EF48]();
}

uint64_t OCNonModularSPI_AppleMakerNote_BackWideAngleCamera()
{
  return MEMORY[0x24BE1EF50]();
}

uint64_t OCNonModularSPI_AppleMakerNote_Camera()
{
  return MEMORY[0x24BE1EF58]();
}

uint64_t OCNonModularSPI_AppleMakerNote_FocusAccelerometerVector()
{
  return MEMORY[0x24BE1EF60]();
}

uint64_t OCNonModularSPI_AppleMakerNote_Timestamp()
{
  return MEMORY[0x24BE1EF68]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadCreate()
{
  return MEMORY[0x24BE1EF70]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadDestroy()
{
  return MEMORY[0x24BE1EF78]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadStart()
{
  return MEMORY[0x24BE1EF80]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicReadStop()
{
  return MEMORY[0x24BE1EF88]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteCreate()
{
  return MEMORY[0x24BE1EF90]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteDestroy()
{
  return MEMORY[0x24BE1EF98]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteStart()
{
  return MEMORY[0x24BE1EFA0]();
}

uint64_t OCNonModularSPI_CMPhoto_HeicWriteStop()
{
  return MEMORY[0x24BE1EFA8]();
}

uint64_t OCNonModularSPI_CMPhoto_read()
{
  return MEMORY[0x24BE1EFB0]();
}

uint64_t OCNonModularSPI_CMPhoto_readResolution()
{
  return MEMORY[0x24BE1EFB8]();
}

uint64_t OCNonModularSPI_CMPhoto_readThumbnail()
{
  return MEMORY[0x24BE1EFC0]();
}

uint64_t OCNonModularSPI_CMPhoto_readVersion()
{
  return MEMORY[0x24BE1EFC8]();
}

uint64_t OCNonModularSPI_CMPhoto_updateInplace()
{
  return MEMORY[0x24BE1EFD0]();
}

uint64_t OCNonModularSPI_CMPhoto_write()
{
  return MEMORY[0x24BE1EFD8]();
}

uint64_t OCNonModularSPI_CapturePhotoSettings()
{
  return MEMORY[0x24BE1EFE0]();
}

uint64_t OCNonModularSPI_GetWideToDepthTransform()
{
  return MEMORY[0x24BE1EFE8]();
}

uint64_t OCNonModularSPI_NSData_CreateDepthPointCloudDataBuffer()
{
  return MEMORY[0x24BE1EFF0]();
}

uint64_t OCNonModularSPI_Serialization_CVBufferToData()
{
  return MEMORY[0x24BE1EFF8]();
}

uint64_t OCNonModularSPI_Serialization_InvalidBoundingBoxTransform()
{
  return MEMORY[0x24BE1F000]();
}

uint64_t OCNonModularSPI_Serialization_InvalidCameraIntrinsics()
{
  return MEMORY[0x24BE1F008]();
}

uint64_t OCNonModularSPI_Serialization_InvalidCameraTransform()
{
  return MEMORY[0x24BE1F010]();
}

uint64_t OCNonModularSPI_Serialization_InvalidObjectTransform()
{
  return MEMORY[0x24BE1F018]();
}

uint64_t OCObjectContourGetCenterOfMass()
{
  return MEMORY[0x24BE1F020]();
}

uint64_t OCObjectContourGetNearestPoints()
{
  return MEMORY[0x24BE1F028]();
}

uint64_t OCObjectContourIsPointInsideObjectContour()
{
  return MEMORY[0x24BE1F030]();
}

uint64_t OCPointCloudCreateFromDenseDepth()
{
  return MEMORY[0x24BE1F038]();
}

uint64_t OCPointCloudCreateFromDenseDepthWithBoundingBox()
{
  return MEMORY[0x24BE1F040]();
}

uint64_t OCPointCloudCreateFromDenseDepthWithPlaneClassification()
{
  return MEMORY[0x24BE1F048]();
}

uint64_t OCPointCloudCreateFromDenseDepthWithPlaneClassificationAndBoundingBox()
{
  return MEMORY[0x24BE1F050]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepth()
{
  return MEMORY[0x24BE1F058]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepthWithBoundingBox()
{
  return MEMORY[0x24BE1F060]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassification()
{
  return MEMORY[0x24BE1F068]();
}

uint64_t OCPointCloudCreateFromSparseAndDenseDepthWithPlaneClassificationAndBoundingBox()
{
  return MEMORY[0x24BE1F070]();
}

uint64_t OCPointCloudCreateWithRGB()
{
  return MEMORY[0x24BE1F078]();
}

uint64_t OCPointCloudCreateWithRGBAndPlaneClassification()
{
  return MEMORY[0x24BE1F080]();
}

uint64_t OCPointCloudRelease()
{
  return MEMORY[0x24BE1F088]();
}

uint64_t OCProxySurfaceCoverageGuideAddCameraShot()
{
  return MEMORY[0x24BE1F090]();
}

uint64_t OCProxySurfaceCreate()
{
  return MEMORY[0x24BE1F098]();
}

uint64_t OCProxySurfaceCreateDepthImage()
{
  return MEMORY[0x24BE1F0A0]();
}

uint64_t OCProxySurfaceCreateResults()
{
  return MEMORY[0x24BE1F0A8]();
}

uint64_t OCProxySurfaceDestroy()
{
  return MEMORY[0x24BE1F0B0]();
}

uint64_t OCProxySurfaceExecutePipeline()
{
  return MEMORY[0x24BE1F0B8]();
}

uint64_t OCProxySurfaceGetDebugVoxelCloud()
{
  return MEMORY[0x24BE1F0C0]();
}

uint64_t OCProxySurfaceNumVoxelsAlongAxisInVoxelBlock()
{
  return MEMORY[0x24BE1F0C8]();
}

uint64_t OCSignPostsAriadneDbgCode()
{
  return MEMORY[0x24BE1F0D0]();
}

uint64_t OCVoxelCloudSize()
{
  return MEMORY[0x24BE1F0D8]();
}

uint64_t OCVoxelCloudTransformMatrix()
{
  return MEMORY[0x24BE1F0E0]();
}

uint64_t OCVoxelCloudVoxels()
{
  return MEMORY[0x24BE1F0E8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

simd_float4x4 __invert_f4(simd_float4x4 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  simd_float4x4 result;

  MEMORY[0x24BDAC828]((__n128)a1.columns[0], (__n128)a1.columns[1], (__n128)a1.columns[2], (__n128)a1.columns[3]);
  result.columns[3].i64[1] = v8;
  result.columns[3].i64[0] = v7;
  result.columns[2].i64[1] = v6;
  result.columns[2].i64[0] = v5;
  result.columns[1].i64[1] = v4;
  result.columns[1].i64[0] = v3;
  result.columns[0].i64[1] = v2;
  result.columns[0].i64[0] = v1;
  return result;
}

__float2 __sincosf_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x24BDAC898](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x24BEE4B50]();
}

float acosf(float a1)
{
  float result;

  MEMORY[0x24BDAD110](a1);
  return result;
}

float atan2f(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAD228](a1, a2);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

float cosf(float a1)
{
  float result;

  MEMORY[0x24BDADBE8](a1);
  return result;
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

float exp2f(float a1)
{
  float result;

  MEMORY[0x24BDAE280](a1);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int getpagesize(void)
{
  return MEMORY[0x24BDAE6B8]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x24BDAE958]();
}

uint64_t kdebug_trace_string()
{
  return MEMORY[0x24BDAE960]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAF690](a1, a2);
  return result;
}

uint64_t savePixelBufferFloat32ToTiff()
{
  return MEMORY[0x24BE1F0F0]();
}

uint64_t savePixelBufferOneComponent8ToPng()
{
  return MEMORY[0x24BE1F0F8]();
}

uint64_t savePixelBufferToJpeg()
{
  return MEMORY[0x24BE1F100]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x24BEE4DA8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x24BDB0180](*(_QWORD *)&target_task, *(_QWORD *)&flavor, task_info_out, task_info_outCnt);
}

vImage_Error vImagePermuteChannels_ARGB8888(const vImage_Buffer *src, const vImage_Buffer *dest, const uint8_t permuteMap[4], vImage_Flags flags)
{
  return MEMORY[0x24BDB3948](src, dest, permuteMap, *(_QWORD *)&flags);
}

