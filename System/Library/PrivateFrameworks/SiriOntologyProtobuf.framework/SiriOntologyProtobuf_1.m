uint64_t sub_1C211D32C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  unsigned __int8 *v56;
  int64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t *v61;
  int64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  int64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  __int16 v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;
  char v90;
  uint64_t v91;

  v74 = a6;
  v81 = a1;
  v82 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v78 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(v10 + 8);
  v79 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v91 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v15 = (char *)&v62 - v14;
  v80 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_1C2175690();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x1E0C80A78](v17, v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23);
  v25 = (char *)&v62 - v24;
  v26 = v83;
  result = sub_1C21197B4(a2);
  if (v26)
    return result;
  v70 = v22;
  v71 = v18;
  v72 = v17;
  v73 = AssociatedTypeWitness;
  v69 = v15;
  sub_1C20AA79C(123, 0xE100000000000000);
  v28 = *v6;
  v29 = *((_BYTE *)v6 + 8);
  v30 = *((_BYTE *)v6 + 9);
  v31 = *((_BYTE *)v6 + 48);
  v32 = *((_BYTE *)v6 + 49);
  v84[0] = 0;
  v84[1] = 0;
  v85 = 256;
  v86 = v28;
  v87 = v29;
  v88 = v30;
  v89 = v31;
  v90 = v32;
  if ((v81 & 0xC000000000000001) != 0)
  {
    v33 = sub_1C217575C();
    v65 = 0;
    v34 = 0;
    v35 = 0;
    v36 = v33 | 0x8000000000000000;
  }
  else
  {
    v37 = -1 << *(_BYTE *)(v81 + 32);
    v34 = ~v37;
    v38 = *(_QWORD *)(v81 + 64);
    v65 = v81 + 64;
    v39 = -v37;
    if (v39 < 64)
      v40 = ~(-1 << v39);
    else
      v40 = -1;
    v35 = v40 & v38;
    v36 = v81;
  }
  v41 = v73;
  v42 = v80;
  v75 = v36;
  v67 = v36 & 0x7FFFFFFFFFFFFFFFLL;
  v64 = v34;
  v66 = (unint64_t)(v34 + 64) >> 6;
  v62 = v66 - 1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v43 = 0;
  v63 = v6;
  v44 = v82;
  v68 = v25;
  while (1)
  {
    v81 = v35;
    v76 = v43;
    if ((v75 & 0x8000000000000000) == 0)
      break;
    if (sub_1C2175768())
    {
      v46 = v70;
      sub_1C21757BC();
      swift_unknownObjectRelease();
      sub_1C21757BC();
      swift_unknownObjectRelease();
      v48 = 0;
      v44 = v82;
      v83 = v81;
      goto LABEL_22;
    }
    v48 = 1;
    v44 = v82;
    v83 = v81;
LABEL_21:
    v46 = v70;
LABEL_22:
    v51 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v46, v48, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v25, v46, v72);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v25, 1, TupleTypeMetadata2) == 1)
    {
      sub_1C2110118();
      v58 = v86;
      v59 = v87;
      v60 = v88;
      v61 = v63;
      swift_bridgeObjectRelease();
      *v61 = v58;
      *((_BYTE *)v61 + 8) = v59;
      *((_BYTE *)v61 + 9) = v60;
      return sub_1C20AA79C(125, 0xE100000000000000);
    }
    v52 = &v25[*(int *)(TupleTypeMetadata2 + 48)];
    v53 = v69;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v69, v25, v41);
    v54 = v78;
    v55 = v52;
    v42 = v80;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v78, v55, v80);
    (*(void (**)(char *, uint64_t, _QWORD *, ValueMetadata *, _UNKNOWN **))(v77 + 48))(v53, 1, v84, &type metadata for JSONMapEncodingVisitor, &off_1E7BD9C00);
    sub_1C20CC20C(v56);
    v44 = v82;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v42);
    v41 = v73;
    result = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v53, v73);
    v35 = v83;
  }
  if (v35)
  {
    v83 = (v35 - 1) & v35;
    v45 = __clz(__rbit64(v35)) | (v43 << 6);
    goto LABEL_12;
  }
  if (__OFADD__(v43++, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v43 >= v66)
  {
    v83 = 0;
    v48 = 1;
    v43 = v76;
    goto LABEL_21;
  }
  v50 = *(_QWORD *)(v65 + 8 * v43);
  if (v50)
    goto LABEL_18;
  if (v43 + 1 >= v66)
  {
    v83 = 0;
    v48 = 1;
    goto LABEL_21;
  }
  v50 = *(_QWORD *)(v65 + 8 * (v43 + 1));
  if (v50)
  {
    ++v43;
    goto LABEL_18;
  }
  v57 = v43 + 2;
  if (v43 + 2 >= v66)
  {
    v83 = 0;
    v48 = 1;
    ++v43;
    goto LABEL_21;
  }
  v50 = *(_QWORD *)(v65 + 8 * v57);
  if (v50)
  {
    v43 += 2;
LABEL_18:
    v83 = (v50 - 1) & v50;
    v45 = __clz(__rbit64(v50)) + (v43 << 6);
LABEL_12:
    v46 = v70;
    v47 = v75;
    (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v70, *(_QWORD *)(v75 + 48) + *(_QWORD *)(v91 + 72) * v45, v41);
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(&v46[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v47 + 56) + *(_QWORD *)(v44 + 72) * v45, v42);
    v48 = 0;
    v25 = v68;
    goto LABEL_22;
  }
  while (1)
  {
    v43 = v57 + 1;
    if (__OFADD__(v57, 1))
      break;
    if (v43 >= v66)
    {
      v83 = 0;
      v48 = 1;
      v43 = v62;
      goto LABEL_21;
    }
    v50 = *(_QWORD *)(v65 + 8 * v43);
    ++v57;
    if (v50)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C211D974(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C21197B4(a1);
  if (!v2)
    return sub_1C211E0B4(a2);
  return result;
}

uint64_t sub_1C211D9B0(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C21197B4(a1);
  if (!v2)
    return sub_1C211E124(a2);
  return result;
}

uint64_t sub_1C211D9EC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C21197B4(a2);
  if (!v2)
    return sub_1C211E310(a1);
  return result;
}

uint64_t sub_1C211DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C211DA70(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1C211E3C4);
}

uint64_t sub_1C211DA40(unsigned int a1, uint64_t a2)
{
  return sub_1C211DAB4(a1, a2);
}

uint64_t sub_1C211DA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C211DA70(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1C211E53C);
}

uint64_t sub_1C211DA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t result;

  result = sub_1C21197B4(a2);
  if (!v5)
    return a5(a1);
  return result;
}

uint64_t sub_1C211DAB4(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C21197B4(a2);
  if (!v2)
    return sub_1C211F414(a1);
  return result;
}

uint64_t sub_1C211DAEC(int a1, uint64_t a2)
{
  return sub_1C21198D0(a1, a2);
}

uint64_t sub_1C211DB00(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v5;
  const char *v6;
  uint64_t v7;

  result = sub_1C21197B4(a2);
  if (!v2)
  {
    if ((a1 & 1) != 0)
    {
      v6 = "true";
      v7 = 4;
    }
    else
    {
      v6 = "false";
      v7 = 5;
    }
    return sub_1C20A9EB4((uint64_t)v6, v7, v5);
  }
  return result;
}

uint64_t sub_1C211DB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C211DB8C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C211E7B0);
}

uint64_t sub_1C211DB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C211DB8C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C211EFB8);
}

uint64_t sub_1C211DB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t result;

  result = sub_1C21197B4(a3);
  if (!v6)
    return a6(a1, a2);
  return result;
}

uint64_t sub_1C211DBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C211B060(a1, a2, a3, a4);
}

void sub_1C211DBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C211B2B8(a1, a2, a3, a4);
}

uint64_t sub_1C211DC00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C211A76C(a1, a2, v2);
}

uint64_t sub_1C211DC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C211A470(a1, a2, v2);
}

uint64_t sub_1C211DC30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C2119BD0(a1, a2, v2);
}

uint64_t sub_1C211DC48(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C21199A8(a1, a2, v2);
}

uint64_t sub_1C211DC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C211A248(a1, a2, v2);
}

uint64_t sub_1C211DC78(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C2119F00(a1, a2, v2);
}

uint64_t sub_1C211DC90(uint64_t a1, uint64_t a2)
{
  return sub_1C211B8A4(a1, a2);
}

uint64_t sub_1C211DCA4(uint64_t a1, uint64_t a2)
{
  return sub_1C211BBD0(a1, a2);
}

uint64_t sub_1C211DCB8(uint64_t a1, uint64_t a2)
{
  return sub_1C211B344(a1, a2);
}

uint64_t sub_1C211DCCC(_QWORD *a1, uint64_t a2)
{
  return sub_1C211B568(a1, a2);
}

uint64_t sub_1C211DCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C211AA68(a1, a2, v2);
}

uint64_t sub_1C211DCF8(_QWORD *a1, uint64_t a2)
{
  return sub_1C211BE94(a1, a2);
}

uint64_t sub_1C211DD0C(_QWORD *a1, uint64_t a2)
{
  return sub_1C211C0E8(a1, a2);
}

uint64_t sub_1C211DD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C211C34C(a1, a2, a3, a4);
}

uint64_t sub_1C211DD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C211C5D4(a1, a2, a3, a4);
}

uint64_t sub_1C211DD48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C211C670(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C211DD5C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C211CCE8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C211DD70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C211D32C(a1, a2, a3, a4, a5, a6);
}

void sub_1C211DD84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int16 v3;

  if (*(_BYTE *)(v2 + 33))
    v3 = 256;
  else
    v3 = 0;
  sub_1C211C614(a1, a2, v3 | *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C211DDB4(char **a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C211C384(a1, a2, *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C211DDD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75FB10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static AnyUnpackError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AnyUnpackError.hash(into:)()
{
  return sub_1C2175834();
}

uint64_t AnyUnpackError.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

unint64_t sub_1C211DE94()
{
  unint64_t result;

  result = qword_1EF75FB18;
  if (!qword_1EF75FB18)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for AnyUnpackError, &type metadata for AnyUnpackError);
    atomic_store(result, (unint64_t *)&qword_1EF75FB18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyUnpackError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C211DF24 + 4 * byte_1C217A8A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C211DF58 + 4 * byte_1C217A8A0[v4]))();
}

uint64_t sub_1C211DF58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C211DF60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C211DF68);
  return result;
}

uint64_t sub_1C211DF74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C211DF7CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C211DF80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C211DF88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyUnpackError()
{
  return &type metadata for AnyUnpackError;
}

uint64_t UnknownStorage.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1C20A8008(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

void static UnknownStorage.== infix(_:_:)(uint64_t *a1)
{
  sub_1C20FD650(*a1, a1[1]);
}

void sub_1C211DFE8(uint64_t *a1)
{
  sub_1C20FD650(*a1, a1[1]);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnknownStorage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1C20A8008(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for UnknownStorage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1C20A8008(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t *assignWithTake for UnknownStorage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C20A8058(v3, v4);
  return a1;
}

uint64_t sub_1C211E0B4(float a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if ((~LODWORD(a1) & 0x7F800000) != 0)
  {
    v3 = sub_1C2175624();
    return sub_1C20AA79C(v3, v4);
  }
  else
  {
    if ((LODWORD(a1) & 0x7FFFFF) != 0)
    {
      v1 = "\"NaN\"";
      v2 = 5;
    }
    else if (a1 >= 0.0)
    {
      v1 = "\"Infinity\"";
      v2 = 10;
    }
    else
    {
      v1 = "\"-Infinity\"";
      v2 = 11;
    }
    return sub_1C20A9EB4((uint64_t)v1, v2, (unsigned __int8 *)LODWORD(a1));
  }
}

uint64_t sub_1C211E124(double a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0)
  {
    v3 = sub_1C2175618();
    return sub_1C20AA79C(v3, v4);
  }
  else
  {
    if ((*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      v1 = "\"NaN\"";
      v2 = 5;
    }
    else if (a1 >= 0.0)
    {
      v1 = "\"Infinity\"";
      v2 = 10;
    }
    else
    {
      v1 = "\"-Infinity\"";
      v2 = 11;
    }
    return sub_1C20A9EB4((uint64_t)v1, v2, *(unsigned __int8 **)&a1);
  }
}

uint64_t sub_1C211E194(int a1)
{
  char **v1;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    *v1 = v3;
  }
  v6 = *((_QWORD *)v3 + 2);
  v5 = *((_QWORD *)v3 + 3);
  v7 = v6 + 1;
  if (v6 >= v5 >> 1)
    v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v7;
  v3[v6 + 32] = 34;
  *v1 = v3;
  v8 = a1;
  if (a1 < 0)
  {
    v9 = *((_QWORD *)v3 + 3);
    if ((uint64_t)(v6 + 2) > (uint64_t)(v9 >> 1))
      v3 = sub_1C214E1A4((char *)(v9 > 1), v6 + 2, 1, v3);
    *((_QWORD *)v3 + 2) = v6 + 2;
    v3[v7 + 32] = 45;
    *v1 = v3;
    v8 = -(uint64_t)a1;
  }
  sub_1C211F414(v8);
  v10 = (uint64_t)*v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (char *)v10;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
    v10 = result;
    *v1 = (char *)result;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    v10 = result;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  *(_BYTE *)(v10 + v13 + 32) = 34;
  *v1 = (char *)v10;
  return result;
}

uint64_t sub_1C211E310(int a1)
{
  char **v1;
  unint64_t v2;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;

  v2 = a1;
  if (a1 < 0)
  {
    v3 = *v1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v1 = v3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      *v1 = v3;
    }
    v6 = *((_QWORD *)v3 + 2);
    v5 = *((_QWORD *)v3 + 3);
    if (v6 >= v5 >> 1)
      v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
    *((_QWORD *)v3 + 2) = v6 + 1;
    v3[v6 + 32] = 45;
    *v1 = v3;
    v2 = -(uint64_t)v2;
  }
  return sub_1C211F414(v2);
}

uint64_t sub_1C211E3C4(unint64_t a1)
{
  char **v1;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    *v1 = v3;
  }
  v6 = *((_QWORD *)v3 + 2);
  v5 = *((_QWORD *)v3 + 3);
  v7 = v6 + 1;
  if (v6 >= v5 >> 1)
    v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v7;
  v3[v6 + 32] = 34;
  *v1 = v3;
  if ((a1 & 0x8000000000000000) != 0)
  {
    v8 = *((_QWORD *)v3 + 3);
    v9 = v6 + 2;
    if (v9 > (uint64_t)(v8 >> 1))
      v3 = sub_1C214E1A4((char *)(v8 > 1), v9, 1, v3);
    *((_QWORD *)v3 + 2) = v9;
    v3[v7 + 32] = 45;
    *v1 = v3;
    a1 = -(uint64_t)a1;
  }
  sub_1C211F414(a1);
  v10 = (uint64_t)*v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (char *)v10;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
    v10 = result;
    *v1 = (char *)result;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    v10 = result;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  *(_BYTE *)(v10 + v13 + 32) = 34;
  *v1 = (char *)v10;
  return result;
}

uint64_t sub_1C211E53C(unint64_t a1)
{
  char **v1;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    *v1 = v3;
  }
  v6 = *((_QWORD *)v3 + 2);
  v5 = *((_QWORD *)v3 + 3);
  if (v6 >= v5 >> 1)
    v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v6 + 1;
  v3[v6 + 32] = 34;
  *v1 = v3;
  sub_1C211F414(a1);
  v7 = (uint64_t)*v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (char *)v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
    v7 = result;
    *v1 = (char *)result;
  }
  v10 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
    v7 = result;
  }
  *(_QWORD *)(v7 + 16) = v10 + 1;
  *(_BYTE *)(v7 + v10 + 32) = 34;
  *v1 = (char *)v7;
  return result;
}

uint64_t sub_1C211E668(char a1)
{
  char **v1;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    *v1 = v3;
  }
  v6 = *((_QWORD *)v3 + 2);
  v5 = *((_QWORD *)v3 + 3);
  if (v6 >= v5 >> 1)
    v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v6 + 1;
  v3[v6 + 32] = 34;
  *v1 = v3;
  if ((a1 & 1) != 0)
  {
    v7 = "true";
    v8 = 4;
  }
  else
  {
    v7 = "false";
    v8 = 5;
  }
  sub_1C20A9EB4((uint64_t)v7, v8, (unsigned __int8 *)&v3[v6]);
  v9 = (uint64_t)*v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (char *)v9;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
    v9 = result;
    *v1 = (char *)result;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    v9 = result;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  *(_BYTE *)(v9 + v12 + 32) = 34;
  *v1 = (char *)v9;
  return result;
}

uint64_t sub_1C211E7B0(uint64_t a1, unint64_t a2)
{
  char **v2;
  char *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  char **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  char v17;
  char *v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  char *v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t result;
  unint64_t v55;
  unint64_t v56;
  uint64_t v58;
  char **v59;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  v59 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_84;
  while (2)
  {
    v2 = (char **)*((_QWORD *)v4 + 2);
    v6 = *((_QWORD *)v4 + 3);
    if ((unint64_t)v2 >= v6 >> 1)
      v4 = sub_1C214E1A4((char *)(v6 > 1), (int64_t)v2 + 1, 1, v4);
    *((_QWORD *)v4 + 2) = (char *)v2 + 1;
    *((_BYTE *)v2 + (_QWORD)v4 + 32) = 34;
    v7 = v59;
    *v59 = v4;
    v8 = HIBYTE(a2) & 0xF;
    v9 = a1;
    if ((a2 & 0x2000000000000000) != 0)
      v10 = HIBYTE(a2) & 0xF;
    else
      v10 = a1 & 0xFFFFFFFFFFFFLL;
    if (!v10)
      goto LABEL_76;
    swift_bridgeObjectRetain();
    v4 = 0;
    v58 = v10;
LABEL_12:
    if ((a2 & 0x1000000000000000) != 0)
    {
      v12 = sub_1C21756CC();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (v9 & 0x1000000000000000) == 0)
        sub_1C2175708();
      v12 = sub_1C2175714();
    }
    v14 = v12;
    v15 = v13;
    v16 = (unsigned __int8 *)(v12 - 8);
    switch(v12)
    {
      case 8u:
        v11 = "\\b";
        goto LABEL_10;
      case 9u:
        v11 = "\\t";
        goto LABEL_10;
      case 0xAu:
        v11 = "\\n";
        goto LABEL_10;
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
        goto LABEL_22;
      case 0xCu:
        v11 = "\\f";
        goto LABEL_10;
      case 0xDu:
        v11 = "\\r";
        goto LABEL_10;
      case 0x22u:
        v11 = "\\\"";
        goto LABEL_10;
      default:
        if (v12 == 92)
        {
          v11 = "\\\\";
LABEL_10:
          v2 = v7;
          sub_1C20A9EB4((uint64_t)v11, 2, v16);
          goto LABEL_11;
        }
LABEL_22:
        if (v12 >= 0x20)
        {
          v16 = (unsigned __int8 *)(v12 - 160);
          if (v16 < 0xFFFFFFDF)
          {
            if (v12 <= 0x7E)
            {
              v38 = *v7;
              v39 = swift_isUniquelyReferenced_nonNull_native();
              *v7 = v38;
              v2 = (char **)v8;
              if ((v39 & 1) == 0)
              {
                v38 = sub_1C214E1A4(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
                *v7 = v38;
              }
              v41 = *((_QWORD *)v38 + 2);
              v40 = *((_QWORD *)v38 + 3);
              if (v41 >= v40 >> 1)
                v38 = sub_1C214E1A4((char *)(v40 > 1), v41 + 1, 1, v38);
              *((_QWORD *)v38 + 2) = v41 + 1;
              v38[v41 + 32] = v14;
              *v7 = v38;
              v10 = v58;
            }
            else
            {
              if (v12 <= 0x7FF)
              {
                v18 = *v7;
                v42 = swift_isUniquelyReferenced_nonNull_native();
                *v7 = v18;
                if ((v42 & 1) == 0)
                {
                  v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
                  *v7 = v18;
                }
                v44 = *((_QWORD *)v18 + 2);
                v43 = *((_QWORD *)v18 + 3);
                v45 = v44 + 1;
                if (v44 >= v43 >> 1)
                  v18 = sub_1C214E1A4((char *)(v43 > 1), v44 + 1, 1, v18);
                *((_QWORD *)v18 + 2) = v45;
                v18[v44 + 32] = (v14 >> 6) - 64;
                *v7 = v18;
                v46 = *((_QWORD *)v18 + 3);
                v2 = (char **)(v44 + 2);
                if ((uint64_t)(v44 + 2) > (uint64_t)(v46 >> 1))
                  v18 = sub_1C214E1A4((char *)(v46 > 1), v44 + 2, 1, v18);
                v47 = v14 & 0x3F | 0x80;
                *((_QWORD *)v18 + 2) = v2;
                v48 = &v18[v45];
              }
              else
              {
                if (v12 - 0x10000 >= 0xFFFF0800)
                {
                  v18 = *v7;
                  v49 = swift_isUniquelyReferenced_nonNull_native();
                  *v7 = v18;
                  if ((v49 & 1) == 0)
                  {
                    v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
                    *v7 = v18;
                  }
                  v51 = *((_QWORD *)v18 + 2);
                  v50 = *((_QWORD *)v18 + 3);
                  v52 = v51 + 1;
                  if (v51 >= v50 >> 1)
                    v18 = sub_1C214E1A4((char *)(v50 > 1), v51 + 1, 1, v18);
                  *((_QWORD *)v18 + 2) = v52;
                  v18[v51 + 32] = (v14 >> 12) - 32;
                  *v7 = v18;
                  v53 = *((_QWORD *)v18 + 3);
                  v2 = (char **)(v51 + 2);
                  if ((uint64_t)(v51 + 2) > (uint64_t)(v53 >> 1))
                    v18 = sub_1C214E1A4((char *)(v53 > 1), v51 + 2, 1, v18);
                  *((_QWORD *)v18 + 2) = v2;
                  v18[v52 + 32] = (v14 >> 6) & 0x3F | 0x80;
                  *v7 = v18;
                  v26 = *((_QWORD *)v18 + 3);
                  v27 = v51 + 3;
                }
                else
                {
                  v17 = (v12 >> 18) - 16;
                  if ((((v12 >> 18) + 240) & 0x100) != 0)
                    goto LABEL_83;
                  v18 = *v7;
                  v19 = swift_isUniquelyReferenced_nonNull_native();
                  *v7 = v18;
                  if ((v19 & 1) == 0)
                  {
                    v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
                    *v7 = v18;
                  }
                  v21 = *((_QWORD *)v18 + 2);
                  v20 = *((_QWORD *)v18 + 3);
                  v22 = v21 + 1;
                  if (v21 >= v20 >> 1)
                    v18 = sub_1C214E1A4((char *)(v20 > 1), v21 + 1, 1, v18);
                  *((_QWORD *)v18 + 2) = v22;
                  v18[v21 + 32] = v17;
                  *v7 = v18;
                  v23 = *((_QWORD *)v18 + 3);
                  v24 = v21 + 2;
                  if ((uint64_t)(v21 + 2) > (uint64_t)(v23 >> 1))
                    v18 = sub_1C214E1A4((char *)(v23 > 1), v21 + 2, 1, v18);
                  *((_QWORD *)v18 + 2) = v24;
                  v18[v22 + 32] = (v14 >> 12) & 0x3F | 0x80;
                  *v7 = v18;
                  v25 = *((_QWORD *)v18 + 3);
                  v2 = (char **)(v21 + 3);
                  if ((uint64_t)(v21 + 3) > (uint64_t)(v25 >> 1))
                    v18 = sub_1C214E1A4((char *)(v25 > 1), v21 + 3, 1, v18);
                  *((_QWORD *)v18 + 2) = v2;
                  v18[v24 + 32] = (v14 >> 6) & 0x3F | 0x80;
                  *v7 = v18;
                  v26 = *((_QWORD *)v18 + 3);
                  v27 = v21 + 4;
                }
                if (v27 > (uint64_t)(v26 >> 1))
                  v18 = sub_1C214E1A4((char *)(v26 > 1), v27, 1, v18);
                v47 = v14 & 0x3F | 0x80;
                *((_QWORD *)v18 + 2) = v27;
                v48 = (char *)v2 + (_QWORD)v18;
              }
              v48[32] = v47;
              *v7 = v18;
              v8 = HIBYTE(a2) & 0xF;
              v10 = v58;
            }
            goto LABEL_11;
          }
        }
        v2 = v7;
        sub_1C20A9EB4((uint64_t)"\\u00", 4, v16);
        if (qword_1EF75CCD0 != -1)
          swift_once();
        v28 = off_1EF75FB28;
        v29 = (unint64_t)v14 >> 4;
        if (*((_QWORD *)off_1EF75FB28 + 2) <= v29)
        {
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          v4 = sub_1C214E1A4(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
          *v2 = v4;
          continue;
        }
        v2 = (char **)*((unsigned __int8 *)off_1EF75FB28 + v29 + 32);
        v30 = *v7;
        v31 = swift_isUniquelyReferenced_nonNull_native();
        *v7 = v30;
        if ((v31 & 1) == 0)
        {
          v30 = sub_1C214E1A4(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
          *v7 = v30;
        }
        v33 = *((_QWORD *)v30 + 2);
        v32 = *((_QWORD *)v30 + 3);
        v34 = v33 + 1;
        if (v33 >= v32 >> 1)
          v30 = sub_1C214E1A4((char *)(v32 > 1), v33 + 1, 1, v30);
        *((_QWORD *)v30 + 2) = v34;
        v30[v33 + 32] = (char)v2;
        *v59 = v30;
        if (v28[2] <= (unint64_t)(v14 & 0xF))
          goto LABEL_82;
        v35 = *((_BYTE *)v28 + (v14 & 0xF) + 32);
        v36 = *((_QWORD *)v30 + 3);
        v37 = v33 + 2;
        if ((uint64_t)(v33 + 2) > (uint64_t)(v36 >> 1))
          v30 = sub_1C214E1A4((char *)(v36 > 1), v33 + 2, 1, v30);
        v7 = v59;
        v9 = a1;
        *((_QWORD *)v30 + 2) = v37;
        v30[v34 + 32] = v35;
        *v59 = v30;
        v10 = v58;
        v8 = HIBYTE(a2) & 0xF;
LABEL_11:
        v4 += v15;
        if ((uint64_t)v4 < v10)
          goto LABEL_12;
        swift_bridgeObjectRelease();
        v4 = *v7;
LABEL_76:
        result = swift_isUniquelyReferenced_nonNull_native();
        *v7 = v4;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
          v4 = (char *)result;
          *v7 = (char *)result;
        }
        v56 = *((_QWORD *)v4 + 2);
        v55 = *((_QWORD *)v4 + 3);
        if (v56 >= v55 >> 1)
        {
          result = (uint64_t)sub_1C214E1A4((char *)(v55 > 1), v56 + 1, 1, v4);
          v4 = (char *)result;
        }
        *((_QWORD *)v4 + 2) = v56 + 1;
        v4[v56 + 32] = 34;
        *v7 = v4;
        return result;
    }
  }
}

void sub_1C211EFB8(uint64_t a1, uint64_t a2)
{
  char **v2;
  char *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_1C214E1A4(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
    *v2 = v4;
  }
  v7 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 3);
  if (v7 >= v6 >> 1)
    v4 = sub_1C214E1A4((char *)(v6 > 1), v7 + 1, 1, v4);
  *((_QWORD *)v4 + 2) = v7 + 1;
  v4[v7 + 32] = 34;
  *v2 = v4;
  __asm { BR              X10 }
}

char *sub_1C211F294()
{
  char *result;

  result = sub_1C211F2B0();
  off_1EF75FB20 = result;
  return result;
}

char *sub_1C211F2B0()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x1E0DEE9D8];
  sub_1C20AA370(23105);
  sub_1C20AA370(31329);
  sub_1C20AA370(14640);
  v0 = (char *)v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v0 = sub_1C214E1A4(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
  v2 = *((_QWORD *)v0 + 2);
  v1 = *((_QWORD *)v0 + 3);
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    v0 = sub_1C214E1A4((char *)(v1 > 1), v2 + 1, 1, v0);
    v1 = *((_QWORD *)v0 + 3);
    v3 = v1 >> 1;
  }
  *((_QWORD *)v0 + 2) = v4;
  v0[v2 + 32] = 43;
  v5 = v2 + 2;
  if (v3 < v5)
    v0 = sub_1C214E1A4((char *)(v1 > 1), v5, 1, v0);
  *((_QWORD *)v0 + 2) = v5;
  v0[v4 + 32] = 47;
  return v0;
}

uint64_t sub_1C211F3C4()
{
  uint64_t result;
  void *v1;

  v1 = (void *)MEMORY[0x1E0DEE9D8];
  sub_1C20AA370(14640);
  result = sub_1C20AA370(17985);
  off_1EF75FB28 = v1;
  return result;
}

uint64_t sub_1C211F414(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  if (a1 >= 0xA)
    sub_1C211F414(a1 / 0xA);
  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v3 + 16) + 1, 1, (char *)v3);
    v3 = result;
    *v1 = result;
  }
  v6 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, (char *)v3);
    v3 = result;
  }
  *(_QWORD *)(v3 + 16) = v6 + 1;
  *(_BYTE *)(v3 + v6 + 32) = (a1 % 0xA) | 0x30;
  *v1 = v3;
  return result;
}

uint64_t sub_1C211F4F0(uint64_t result, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  unsigned int v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char **v53;
  char **v54;
  uint64_t *v55;
  char *v56;

  if (!result)
    return result;
  v8 = (unsigned __int8 *)result;
  v9 = a2 - result;
  if (a2 - result < 1)
    return result;
  v55 = a3;
  v10 = 0;
  v11 = 0;
  do
  {
    if (v10 == 3)
    {
      if (qword_1EF75CCC8 != -1)
      {
        v3 = (unint64_t)a3;
        swift_once();
        a3 = (uint64_t *)v3;
      }
      v12 = off_1EF75FB20;
      v13 = ((unint64_t)v11 >> 18) & 0x3F;
      if (v13 >= *((_QWORD *)off_1EF75FB20 + 2))
        goto LABEL_70;
      v56 = (char *)off_1EF75FB20 + 32;
      v14 = *((_BYTE *)off_1EF75FB20 + v13 + 32);
      v5 = *a3;
      result = swift_isUniquelyReferenced_nonNull_native();
      a3 = v55;
      *v55 = v5;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
        a3 = v55;
        v5 = result;
        *v55 = result;
      }
      v3 = *(_QWORD *)(v5 + 16);
      v15 = *(_QWORD *)(v5 + 24);
      v6 = (char *)(v3 + 1);
      v16 = v56;
      if (v3 >= v15 >> 1)
      {
        result = (uint64_t)sub_1C214E1A4((char *)(v15 > 1), v3 + 1, 1, (char *)v5);
        v16 = v56;
        a3 = v55;
        v5 = result;
      }
      *(_QWORD *)(v5 + 16) = v6;
      *(_BYTE *)(v5 + v3 + 32) = v14;
      *a3 = v5;
      v17 = ((unint64_t)v11 >> 12) & 0x3F;
      if (v17 >= v12[2])
        goto LABEL_71;
      v4 = v16[v17];
      v18 = *(_QWORD *)(v5 + 24);
      v19 = (char *)(v3 + 2);
      if ((uint64_t)(v3 + 2) > (uint64_t)(v18 >> 1))
      {
        result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v3 + 2, 1, (char *)v5);
        v16 = v56;
        a3 = v55;
        v5 = result;
      }
      *(_QWORD *)(v5 + 16) = v19;
      v6[v5 + 32] = v4;
      *a3 = v5;
      v20 = ((unint64_t)v11 >> 6) & 0x3F;
      if (v20 >= v12[2])
        goto LABEL_72;
      v4 = v16[v20];
      v21 = *(_QWORD *)(v5 + 24);
      v6 = (char *)(v3 + 3);
      if ((uint64_t)(v3 + 3) > (uint64_t)(v21 >> 1))
      {
        result = (uint64_t)sub_1C214E1A4((char *)(v21 > 1), v3 + 3, 1, (char *)v5);
        v16 = v56;
        a3 = v55;
        v5 = result;
      }
      *(_QWORD *)(v5 + 16) = v6;
      v19[v5 + 32] = v4;
      *a3 = v5;
      if ((unint64_t)(v11 & 0x3F) >= v12[2])
        goto LABEL_73;
      v22 = v16[v11 & 0x3F];
      v23 = *(_QWORD *)(v5 + 24);
      v7 = (uint64_t *)(v3 + 4);
      if ((uint64_t)(v3 + 4) > (uint64_t)(v23 >> 1))
      {
        result = (uint64_t)sub_1C214E1A4((char *)(v23 > 1), v3 + 4, 1, (char *)v5);
        a3 = v55;
        v5 = result;
      }
      v10 = 0;
      v24 = 0;
      *(_QWORD *)(v5 + 16) = v7;
      v6[v5 + 32] = v22;
      *a3 = v5;
    }
    else
    {
      v24 = v11;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v26 = *v8++;
    v5 = v26;
    v11 = (uint64_t *)(v26 | ((_QWORD)v24 << 8));
    --v9;
  }
  while (v9);
  if (v10 == 1)
  {
    v3 = (_QWORD)v11 << 16;
    if (qword_1EF75CCC8 != -1)
      goto LABEL_82;
    goto LABEL_41;
  }
  if (v10 == 2)
  {
    v45 = (_QWORD)v11 << 8;
    if (qword_1EF75CCC8 != -1)
    {
      v3 = (unint64_t)a3;
      swift_once();
      a3 = (uint64_t *)v3;
    }
    v46 = off_1EF75FB20;
    v47 = (v45 >> 18) & 0x3F;
    if (v47 >= *((_QWORD *)off_1EF75FB20 + 2))
    {
      __break(1u);
    }
    else
    {
      v3 = (unint64_t)off_1EF75FB20 + 32;
      v4 = *((unsigned __int8 *)off_1EF75FB20 + v47 + 32);
      v8 = (unsigned __int8 *)*a3;
      v11 = a3;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v11 = (uint64_t)v8;
      if ((result & 1) != 0)
      {
        v29 = v11;
        goto LABEL_58;
      }
    }
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, (char *)v8);
    v29 = v11;
    v8 = (unsigned __int8 *)result;
    *v11 = result;
LABEL_58:
    v49 = *((_QWORD *)v8 + 2);
    v48 = *((_QWORD *)v8 + 3);
    v31 = v49 + 1;
    if (v49 >= v48 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v48 > 1), v49 + 1, 1, (char *)v8);
      v29 = v11;
      v8 = (unsigned __int8 *)result;
    }
    *((_QWORD *)v8 + 2) = v31;
    v8[v49 + 32] = v4;
    *v29 = (uint64_t)v8;
    v50 = (v45 >> 12) & 0x3F;
    if (v50 >= v46[2])
    {
      __break(1u);
    }
    else
    {
      LOBYTE(v7) = *(_BYTE *)(v3 + v50);
      v50 = *((_QWORD *)v8 + 3);
      v4 = v49 + 2;
      if ((uint64_t)(v49 + 2) <= (uint64_t)(v50 >> 1))
        goto LABEL_62;
    }
    result = (uint64_t)sub_1C214E1A4((char *)(v50 > 1), v4, 1, (char *)v8);
    v29 = v11;
    v8 = (unsigned __int8 *)result;
LABEL_62:
    *((_QWORD *)v8 + 2) = v4;
    v8[v31 + 32] = v7;
    *v29 = (uint64_t)v8;
    v51 = (v45 >> 6) & 0x3C;
    if (v51 >= v46[2])
    {
      __break(1u);
    }
    else
    {
      LOBYTE(v45) = *(_BYTE *)(v3 + v51);
      v51 = *((_QWORD *)v8 + 3);
      v31 = v49 + 3;
      if ((uint64_t)(v49 + 3) <= (uint64_t)(v51 >> 1))
      {
LABEL_64:
        *((_QWORD *)v8 + 2) = v31;
        v8[v4 + 32] = v45;
        *v29 = (uint64_t)v8;
        v52 = *((_QWORD *)v8 + 3);
        v36 = (char *)(v49 + 4);
        if ((uint64_t)(v49 + 4) > (uint64_t)(v52 >> 1))
        {
          result = (uint64_t)sub_1C214E1A4((char *)(v52 > 1), v49 + 4, 1, (char *)v8);
          v29 = v11;
          v8 = (unsigned __int8 *)result;
        }
        v34 = 61;
        goto LABEL_67;
      }
    }
    result = (uint64_t)sub_1C214E1A4((char *)(v51 > 1), v31, 1, (char *)v8);
    v29 = v11;
    v8 = (unsigned __int8 *)result;
    goto LABEL_64;
  }
  if (v10 != 3)
    return result;
  v3 = (_QWORD)v24 << 8;
  if (qword_1EF75CCC8 != -1)
  {
LABEL_74:
    v53 = (char **)a3;
    swift_once();
    a3 = (uint64_t *)v53;
  }
  v27 = off_1EF75FB20;
  v28 = (v3 >> 18) & 0x3F;
  if (v28 >= *((_QWORD *)off_1EF75FB20 + 2))
  {
    __break(1u);
  }
  else
  {
    v6 = (char *)off_1EF75FB20 + 32;
    v4 = *((unsigned __int8 *)off_1EF75FB20 + v28 + 32);
    v8 = (unsigned __int8 *)*a3;
    result = swift_isUniquelyReferenced_nonNull_native();
    v29 = v55;
    *v55 = (uint64_t)v8;
    if ((result & 1) != 0)
      goto LABEL_31;
  }
  result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, (char *)v8);
  v29 = v55;
  v8 = (unsigned __int8 *)result;
  *v55 = result;
LABEL_31:
  v7 = (uint64_t *)*((_QWORD *)v8 + 2);
  v30 = *((_QWORD *)v8 + 3);
  v31 = (int64_t)v7 + 1;
  if ((unint64_t)v7 >= v30 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v30 > 1), (int64_t)v7 + 1, 1, (char *)v8);
    v29 = v55;
    v8 = (unsigned __int8 *)result;
  }
  *((_QWORD *)v8 + 2) = v31;
  *((_BYTE *)v7 + (_QWORD)v8 + 32) = v4;
  *v29 = (uint64_t)v8;
  v32 = (v3 >> 12) & 0x3F;
  if (v32 >= v27[2])
  {
    __break(1u);
  }
  else
  {
    v3 = v6[v32];
    v32 = *((_QWORD *)v8 + 3);
    v4 = (int64_t)v7 + 2;
    if ((uint64_t)v7 + 2 <= (uint64_t)(v32 >> 1))
      goto LABEL_35;
  }
  result = (uint64_t)sub_1C214E1A4((char *)(v32 > 1), v4, 1, (char *)v8);
  v29 = v55;
  v8 = (unsigned __int8 *)result;
LABEL_35:
  *((_QWORD *)v8 + 2) = v4;
  v8[v31 + 32] = v3;
  *v29 = (uint64_t)v8;
  v33 = ((unint64_t)v11 >> 6) & 0x3F;
  if (v33 >= v27[2])
  {
    __break(1u);
  }
  else
  {
    v3 = v6[v33];
    v33 = *((_QWORD *)v8 + 3);
    v31 = (int64_t)v7 + 3;
    if ((uint64_t)v7 + 3 <= (uint64_t)(v33 >> 1))
      goto LABEL_37;
  }
  result = (uint64_t)sub_1C214E1A4((char *)(v33 > 1), v31, 1, (char *)v8);
  v29 = v55;
  v8 = (unsigned __int8 *)result;
LABEL_37:
  *((_QWORD *)v8 + 2) = v31;
  v8[v4 + 32] = v3;
  *v29 = (uint64_t)v8;
  if ((unint64_t)(v5 & 0x3F) < v27[2])
  {
    v34 = v6[v5 & 0x3F];
    v35 = *((_QWORD *)v8 + 3);
    v36 = (char *)v7 + 4;
    if ((uint64_t)v7 + 4 <= (uint64_t)(v35 >> 1))
      goto LABEL_67;
    result = (uint64_t)sub_1C214E1A4((char *)(v35 > 1), (int64_t)v7 + 4, 1, (char *)v8);
    v29 = v55;
    goto LABEL_52;
  }
  __break(1u);
LABEL_82:
  v54 = (char **)a3;
  swift_once();
  a3 = (uint64_t *)v54;
LABEL_41:
  v37 = off_1EF75FB20;
  v38 = (v3 >> 18) & 0x3F;
  if (v38 >= *((_QWORD *)off_1EF75FB20 + 2))
  {
    __break(1u);
  }
  else
  {
    v5 = (uint64_t)off_1EF75FB20 + 32;
    LOBYTE(v6) = *((_BYTE *)off_1EF75FB20 + v38 + 32);
    v8 = (unsigned __int8 *)*a3;
    v7 = a3;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v7 = (uint64_t)v8;
    if ((result & 1) != 0)
    {
      v29 = v7;
      goto LABEL_44;
    }
  }
  result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, (char *)v8);
  v29 = v7;
  v8 = (unsigned __int8 *)result;
  *v7 = result;
LABEL_44:
  v40 = *((_QWORD *)v8 + 2);
  v39 = *((_QWORD *)v8 + 3);
  v41 = v40 + 1;
  if (v40 >= v39 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v39 > 1), v40 + 1, 1, (char *)v8);
    v29 = v7;
    v8 = (unsigned __int8 *)result;
  }
  *((_QWORD *)v8 + 2) = v41;
  v8[v40 + 32] = v6;
  *v29 = (uint64_t)v8;
  v42 = (v3 >> 12) & 0x30;
  if (v42 >= v37[2])
  {
    __break(1u);
    goto LABEL_86;
  }
  LOBYTE(v3) = *(_BYTE *)(v5 + v42);
  v42 = *((_QWORD *)v8 + 3);
  v37 = (_QWORD *)(v40 + 2);
  if ((uint64_t)(v40 + 2) > (uint64_t)(v42 >> 1))
  {
LABEL_86:
    result = (uint64_t)sub_1C214E1A4((char *)(v42 > 1), (int64_t)v37, 1, (char *)v8);
    v29 = v7;
    v8 = (unsigned __int8 *)result;
  }
  *((_QWORD *)v8 + 2) = v37;
  v8[v41 + 32] = v3;
  *v29 = (uint64_t)v8;
  v43 = *((_QWORD *)v8 + 3);
  v31 = v40 + 3;
  if ((uint64_t)(v40 + 3) > (uint64_t)(v43 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v43 > 1), v40 + 3, 1, (char *)v8);
    v29 = v7;
    v8 = (unsigned __int8 *)result;
  }
  *((_QWORD *)v8 + 2) = v31;
  v34 = 61;
  *((_BYTE *)v37 + (_QWORD)v8 + 32) = 61;
  *v29 = (uint64_t)v8;
  v44 = *((_QWORD *)v8 + 3);
  v36 = (char *)(v40 + 4);
  if ((uint64_t)(v40 + 4) > (uint64_t)(v44 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v44 > 1), v40 + 4, 1, (char *)v8);
    v29 = v7;
LABEL_52:
    v8 = (unsigned __int8 *)result;
  }
LABEL_67:
  *((_QWORD *)v8 + 2) = v36;
  v8[v31 + 32] = v34;
  *v29 = (uint64_t)v8;
  return result;
}

uint64_t sub_1C211FD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1C21752C4();
  v8 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_1C21752DC();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  return sub_1C211F4F0(v8, v14, a4);
}

uint64_t sub_1C211FDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = *(char **)v2;
  if ((*(_BYTE *)(v2 + 9) & 1) == 0)
  {
    v6 = *(_BYTE *)(v2 + 8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      *(_QWORD *)v2 = v5;
    }
    v9 = *((_QWORD *)v5 + 2);
    v8 = *((_QWORD *)v5 + 3);
    if (v9 >= v8 >> 1)
      v5 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v9 + 1;
    v5[v9 + 32] = v6;
    *(_QWORD *)v2 = v5;
  }
  v10 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v5;
  if ((v10 & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *(_QWORD *)v2 = v5;
  }
  v12 = *((_QWORD *)v5 + 2);
  v11 = *((_QWORD *)v5 + 3);
  if (v12 >= v11 >> 1)
    v5 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v12 + 1;
  v5[v12 + 32] = 34;
  *(_QWORD *)v2 = v5;
  sub_1C20A9EB4(a1, a2, (unsigned __int8 *)&v5[v12]);
  v13 = *(_QWORD *)v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v13;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v13 + 16) + 1, 1, (char *)v13);
    v13 = result;
    *(_QWORD *)v2 = result;
  }
  v16 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 24);
  v17 = v16 + 1;
  if (v16 >= v15 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, (char *)v13);
    v13 = result;
  }
  *(_QWORD *)(v13 + 16) = v17;
  *(_BYTE *)(v13 + v16 + 32) = 34;
  *(_QWORD *)v2 = v13;
  v18 = *(_QWORD *)(v13 + 24);
  v19 = v16 + 2;
  if (v19 > (uint64_t)(v18 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v19, 1, (char *)v13);
    v13 = result;
  }
  *(_QWORD *)(v13 + 16) = v19;
  *(_BYTE *)(v13 + v17 + 32) = 58;
  *(_QWORD *)v2 = v13;
  *(_WORD *)(v2 + 8) = 44;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONEncoder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for JSONEncoder()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for JSONEncoder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for JSONEncoder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONEncoder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONEncoder()
{
  return &type metadata for JSONEncoder;
}

ValueMetadata *type metadata accessor for BinaryEncodingVisitor()
{
  return &type metadata for BinaryEncodingVisitor;
}

void sub_1C212015C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2120198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = BYTE6(a4);
  v6 = *v4;
  result = sub_1C2175378();
  *v4 = v6 + v5;
  return result;
}

uint64_t sub_1C2120204(uint64_t a1, float a2)
{
  float **v2;
  uint64_t result;
  float *v5;

  result = sub_1C20ABFC8(a1, 5u);
  v5 = *v2;
  *v5 = a2;
  *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C2120278(uint64_t a1, double a2)
{
  double **v2;
  uint64_t result;
  double *v5;

  result = sub_1C20ABFC8(a1, 1u);
  v5 = *v2;
  *v5 = a2;
  *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C21202EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  sub_1C20ABFC8(a2, 3u);
  result = (*(uint64_t (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v4, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58, a3, a4);
  if (!v5)
    return sub_1C20ABFC8(a2, 4u);
  return result;
}

unint64_t sub_1C2120388(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  unint64_t v9;
  int *v10;
  int v11;
  __int128 *v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 61)
    __break(1u);
  result = sub_1C20AE75C(4 * v4);
  if (v4)
  {
    v6 = *v2;
    swift_bridgeObjectRetain();
    if (v4 >= 8 && (unint64_t)(v6 - a1 - 32) >= 0x20)
    {
      v7 = v4 & 0x7FFFFFFFFFFFFFF8;
      v8 = (_DWORD *)(v6 + 4 * (v4 & 0x7FFFFFFFFFFFFFF8));
      v12 = (__int128 *)(a1 + 48);
      v13 = (_OWORD *)(v6 + 16);
      v14 = v4 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 8;
      }
      while (v14);
      if (v4 == v7)
        goto LABEL_8;
    }
    else
    {
      v7 = 0;
      v8 = (_DWORD *)v6;
    }
    v9 = v4 - v7;
    v10 = (int *)(a1 + 4 * v7 + 32);
    do
    {
      v11 = *v10++;
      *v8++ = v11;
      --v9;
    }
    while (v9);
LABEL_8:
    result = swift_bridgeObjectRelease();
    *v2 = (uint64_t)v8;
  }
  return result;
}

unint64_t sub_1C212049C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4 >> 60)
    __break(1u);
  result = sub_1C20AE75C(8 * v4);
  if (v4)
  {
    v6 = *v2;
    swift_bridgeObjectRetain();
    if (v4 >= 6 && (unint64_t)(v6 - a1 - 32) >= 0x20)
    {
      v7 = v4 & 0x7FFFFFFFFFFFFFFCLL;
      v8 = (_QWORD *)(v6 + 8 * (v4 & 0x7FFFFFFFFFFFFFFCLL));
      v12 = (__int128 *)(a1 + 48);
      v13 = (_OWORD *)(v6 + 16);
      v14 = v4 & 0x7FFFFFFFFFFFFFFCLL;
      do
      {
        v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      if (v4 == v7)
        goto LABEL_8;
    }
    else
    {
      v7 = 0;
      v8 = (_QWORD *)v6;
    }
    v9 = v4 - v7;
    v10 = (uint64_t *)(a1 + 8 * v7 + 32);
    do
    {
      v11 = *v10++;
      *v8++ = v11;
      --v9;
    }
    while (v9);
LABEL_8:
    result = swift_bridgeObjectRelease();
    *v2 = (uint64_t)v8;
  }
  return result;
}

unint64_t sub_1C21205B0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return sub_1C20AE75C(0);
  result = 0;
  v6 = 0;
  v7 = a1 + 32;
  do
  {
    v8 = *(_DWORD *)(v7 + 4 * v6);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 10;
    }
    else if (v8 > 0x7F)
    {
      if (v8 >= 0x4000)
      {
        if (v8 >> 28)
          v10 = 5;
        else
          v10 = 4;
        if (v8 >= 0x200000)
          v9 = v10;
        else
          v9 = 3;
      }
      else
      {
        v9 = 2;
      }
    }
    else
    {
      v9 = 1;
    }
    v11 = __OFADD__(result, v9);
    result += v9;
    if (v11)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  result = sub_1C20AE75C(result);
  v12 = 0;
  v13 = (_BYTE *)*v2;
  do
  {
    v15 = *(int *)(v7 + 4 * v12);
    if (v15 < 0x80)
    {
      LODWORD(v14) = *(_DWORD *)(v7 + 4 * v12);
    }
    else
    {
      do
      {
        *v13++ = v15 | 0x80;
        v14 = v15 >> 7;
        v16 = v15 >> 14;
        v15 >>= 7;
      }
      while (v16);
    }
    ++v12;
    *v13++ = v14;
  }
  while (v12 != v4);
  *v2 = v13;
  return result;
}

unint64_t sub_1C21206BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return sub_1C20AE75C(0);
  result = 0;
  v6 = 0;
  v7 = a1 + 32;
  do
  {
    v8 = *(_QWORD *)(v7 + 8 * v6);
    if (v8 < 0x80)
    {
      v9 = 1;
      goto LABEL_18;
    }
    if ((v8 & 0x8000000000000000) != 0)
    {
      v9 = 10;
      goto LABEL_18;
    }
    if (!(v8 >> 35))
    {
      if (v8 < 0x200000)
      {
        v9 = 2;
        if (v8 >= 0x4000)
          goto LABEL_17;
        goto LABEL_18;
      }
      v9 = 4;
LABEL_16:
      if (!(v8 >> 28))
        goto LABEL_18;
LABEL_17:
      ++v9;
      goto LABEL_18;
    }
    if (v8 >> 49)
    {
      v8 >>= 28;
      v9 = 8;
      goto LABEL_16;
    }
    v9 = 6;
    if (v8 >> 42)
      goto LABEL_17;
LABEL_18:
    v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  result = sub_1C20AE75C(result);
  v11 = 0;
  v12 = (_BYTE *)*v2;
  do
  {
    v14 = *(_QWORD *)(v7 + 8 * v11);
    if (v14 < 0x80)
    {
      v13 = *(_QWORD *)(v7 + 8 * v11);
    }
    else
    {
      do
      {
        *v12++ = v14 | 0x80;
        v13 = v14 >> 7;
        v15 = v14 >> 14;
        v14 >>= 7;
      }
      while (v15);
    }
    ++v11;
    *v12++ = v13;
  }
  while (v11 != v4);
  *v2 = v12;
  return result;
}

unint64_t sub_1C21207F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return sub_1C20AE75C(0);
  result = 0;
  v6 = 0;
  v7 = a1 + 32;
  do
  {
    v8 = (2 * *(_DWORD *)(v7 + 4 * v6)) ^ (*(int *)(v7 + 4 * v6) >> 31);
    if (v8 >= 0x80)
    {
      if (v8 >> 14)
      {
        if (v8 >= 0x200000)
        {
          if (v8 >> 28)
            v9 = 5;
          else
            v9 = 4;
        }
        else
        {
          v9 = 3;
        }
      }
      else
      {
        v9 = 2;
      }
    }
    else
    {
      v9 = 1;
    }
    v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  result = sub_1C20AE75C(result);
  v11 = 0;
  v12 = (_BYTE *)*v2;
  do
  {
    v14 = (2 * *(int *)(v7 + 4 * v11)) ^ ((uint64_t)*(int *)(v7 + 4 * v11) >> 63);
    if (v14 < 0x80)
    {
      LOBYTE(v13) = (2 * *(_DWORD *)(v7 + 4 * v11)) ^ ((uint64_t)*(int *)(v7 + 4 * v11) >> 63);
    }
    else
    {
      do
      {
        *v12++ = v14 | 0x80;
        v13 = v14 >> 7;
        v15 = v14 >> 14;
        v14 >>= 7;
      }
      while (v15);
    }
    ++v11;
    *v12++ = v13;
  }
  while (v11 != v4);
  *v2 = v12;
  return result;
}

unint64_t sub_1C2120904(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return sub_1C20AE75C(0);
  result = 0;
  v6 = 0;
  v7 = a1 + 32;
  do
  {
    v8 = (2 * *(_QWORD *)(v7 + 8 * v6)) ^ (*(uint64_t *)(v7 + 8 * v6) >> 63);
    if (v8 < 0x80)
    {
      v9 = 1;
      goto LABEL_18;
    }
    if ((v8 & 0x8000000000000000) != 0)
    {
      v9 = 10;
      goto LABEL_18;
    }
    if (!(v8 >> 35))
    {
      if (v8 < 0x200000)
      {
        v9 = 2;
        if (v8 >= 0x4000)
          goto LABEL_17;
        goto LABEL_18;
      }
      v9 = 4;
LABEL_16:
      if (!(v8 >> 28))
        goto LABEL_18;
LABEL_17:
      ++v9;
      goto LABEL_18;
    }
    if (v8 >> 49)
    {
      v8 >>= 28;
      v9 = 8;
      goto LABEL_16;
    }
    v9 = 6;
    if (v8 >> 42)
      goto LABEL_17;
LABEL_18:
    v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  result = sub_1C20AE75C(result);
  v11 = 0;
  v12 = (_BYTE *)*v2;
  do
  {
    v14 = (2 * *(_QWORD *)(v7 + 8 * v11)) ^ (*(uint64_t *)(v7 + 8 * v11) >> 63);
    if (v14 < 0x80)
    {
      LOBYTE(v13) = (2 * *(_BYTE *)(v7 + 8 * v11)) ^ (*(uint64_t *)(v7 + 8 * v11) >> 63);
    }
    else
    {
      do
      {
        *v12++ = v14 | 0x80;
        v13 = v14 >> 7;
        v15 = v14 >> 14;
        v14 >>= 7;
      }
      while (v15);
    }
    ++v11;
    *v12++ = v13;
  }
  while (v11 != v4);
  *v2 = v12;
  return result;
}

unint64_t sub_1C2120A48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return sub_1C20AE75C(0);
  result = 0;
  v6 = 0;
  v7 = a1 + 32;
  do
  {
    v8 = *(_DWORD *)(v7 + 4 * v6);
    if (v8 >= 0x80)
    {
      if (v8 >> 14)
      {
        if (v8 >> 28)
          v10 = 5;
        else
          v10 = 4;
        if (v8 >= 0x200000)
          v9 = v10;
        else
          v9 = 3;
      }
      else
      {
        v9 = 2;
      }
    }
    else
    {
      v9 = 1;
    }
    v11 = __OFADD__(result, v9);
    result += v9;
    if (v11)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  result = sub_1C20AE75C(result);
  v12 = 0;
  v13 = (_BYTE *)*v2;
  do
  {
    v15 = *(unsigned int *)(v7 + 4 * v12);
    if (v15 < 0x80)
    {
      LODWORD(v14) = *(_DWORD *)(v7 + 4 * v12);
    }
    else
    {
      do
      {
        *v13++ = v15 | 0x80;
        v14 = v15 >> 7;
        v16 = v15 >> 14;
        v15 >>= 7;
      }
      while (v16);
    }
    ++v12;
    *v13++ = v14;
  }
  while (v12 != v4);
  *v2 = v13;
  return result;
}

unint64_t sub_1C2120B48(uint64_t a1, uint64_t a2)
{
  int8x16_t **v2;
  unint64_t v4;
  unint64_t result;
  int8x16_t *v6;
  uint64_t v7;
  int8x16_t *v8;
  unint64_t v9;
  __int8 *v10;
  __int8 v11;
  uint64_t v12;
  int8x16_t v13;
  uint64_t v14;
  int8x16_t v15;

  sub_1C20ABFC8(a2, 2u);
  v4 = *(_QWORD *)(a1 + 16);
  result = sub_1C20AE75C(v4);
  if (v4)
  {
    v6 = *v2;
    if (v4 >= 0x40 && (unint64_t)&v6[-2] - a1 >= 0x20)
    {
      v7 = v4 & 0x7FFFFFFFFFFFFFE0;
      v8 = (int8x16_t *)((char *)v6 + (v4 & 0x7FFFFFFFFFFFFFE0));
      v12 = a1 + 63;
      v13.i64[0] = 0x101010101010101;
      v13.i64[1] = 0x101010101010101;
      v14 = v4 & 0x7FFFFFFFFFFFFFE0;
      do
      {
        v15 = *(int8x16_t *)(v12 - 15);
        *v6 = vandq_s8(*(int8x16_t *)(v12 - 31), v13);
        v6[1] = vandq_s8(v15, v13);
        v6 += 2;
        v12 += 32;
        v14 -= 32;
      }
      while (v14);
      if (v4 == v7)
        goto LABEL_7;
    }
    else
    {
      v7 = 0;
      v8 = *v2;
    }
    v9 = v4 - v7;
    v10 = (__int8 *)(v7 + a1 + 32);
    do
    {
      v11 = *v10++;
      v8->i8[0] = v11;
      v8 = (int8x16_t *)((char *)v8 + 1);
      --v9;
    }
    while (v9);
LABEL_7:
    *v2 = v8;
  }
  return result;
}

uint64_t sub_1C2120D0C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  _BYTE **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(uint64_t, char *);
  char v24;
  unsigned int v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  unint64_t v30;
  _BYTE **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, char *);
  unint64_t v35;
  char v36;
  unint64_t v37;
  _BYTE *v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE **v41;
  char *v42;
  uint64_t (*v43)(uint64_t, char *);
  char *v44;
  uint64_t v45;

  v8 = *(_QWORD *)(a3 - 8);
  v9 = MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v44 = (char *)&v40 - v14;
  v40 = v15;
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v40 - v17;
  v41 = v4;
  sub_1C20ABFC8(v19, 2u);
  v20 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v20, a3))
  {
    swift_bridgeObjectRelease();
    v22 = 0;
    goto LABEL_25;
  }
  v21 = 0;
  v22 = 0;
  v23 = (uint64_t (*)(uint64_t, char *))*((_QWORD *)a4 + 5);
  v42 = v11;
  v43 = v23;
  while (1)
  {
    v24 = sub_1C21755C4();
    sub_1C2175594();
    if ((v24 & 1) != 0)
    {
      v11 = a4;
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v18, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v21, a3);
      a4 = (char *)(v21 + 1);
      if (__OFADD__(v21, 1))
        break;
      goto LABEL_5;
    }
    result = sub_1C21756FC();
    if (v40 != 8)
      goto LABEL_40;
    v11 = a4;
    v45 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v18, &v45, a3);
    swift_unknownObjectRelease();
    a4 = (char *)(v21 + 1);
    if (__OFADD__(v21, 1))
      break;
LABEL_5:
    v25 = v43(a3, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v18, a3);
    if ((v25 & 0x80000000) != 0)
    {
      v27 = 10;
    }
    else if (v25 > 0x7F)
    {
      if (v25 >= 0x4000)
      {
        if (v25 >= 0x200000)
        {
          v27 = 4;
          if (v25 >> 28)
            v27 = 5;
        }
        else
        {
          v27 = 3;
        }
      }
      else
      {
        v27 = 2;
      }
    }
    else
    {
      v27 = 1;
    }
    v28 = __OFADD__(v22, v27);
    v22 += v27;
    if (v28)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    ++v21;
    v29 = a4 == (char *)MEMORY[0x1C3BB7A60](a1, a3);
    a4 = v11;
    v11 = v42;
    if (v29)
      goto LABEL_23;
  }
  __break(1u);
LABEL_23:
  swift_bridgeObjectRelease();
LABEL_25:
  v30 = v22;
  v31 = v41;
  sub_1C20AE75C(v30);
  v32 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v32, a3))
    return swift_bridgeObjectRelease();
  v33 = 0;
  v34 = (uint64_t (*)(uint64_t, char *))*((_QWORD *)a4 + 5);
  while (2)
  {
    v36 = sub_1C21755C4();
    sub_1C2175594();
    if ((v36 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v44, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v33, a3);
      v28 = __OFADD__(v33++, 1);
      if (v28)
        break;
      goto LABEL_31;
    }
    result = sub_1C21756FC();
    if (v40 != 8)
      goto LABEL_41;
    v45 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v44, &v45, a3);
    swift_unknownObjectRelease();
    v28 = __OFADD__(v33++, 1);
    if (!v28)
    {
LABEL_31:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v44, a3);
      v37 = v34(a3, a4);
      v38 = *v31;
      if (v37 < 0x80)
      {
        LOBYTE(v35) = v37;
      }
      else
      {
        do
        {
          *v38++ = v37 | 0x80;
          v35 = v37 >> 7;
          v39 = v37 >> 14;
          v37 >>= 7;
        }
        while (v39);
      }
      *v38 = v35;
      *v31 = v38 + 1;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a3);
      if (v33 == MEMORY[0x1C3BB7A60](a1, a3))
        return swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C21210C8(unint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  int64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t *v53;
  _BYTE *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _BYTE *v58;
  unint64_t *v59;
  void (*v60)(char *, uint64_t, unint64_t *, ValueMetadata *);
  uint64_t v61;
  void (*v62)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **);
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  int64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t TupleTypeMetadata2;
  char *v94;
  unint64_t v95;

  v8 = v7;
  v87 = a2;
  v88 = *(_QWORD *)(a6 + 8);
  v89 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v92 = (char *)&v68 - v14;
  v77 = *(_QWORD *)(a5 + 8);
  v90 = a3;
  v15 = swift_getAssociatedTypeWitness();
  v91 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v16);
  v94 = (char *)&v68 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = sub_1C2175690();
  v79 = *(_QWORD *)(v18 - 8);
  v80 = v18;
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23);
  v25 = (char *)&v68 - v24;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v26 = sub_1C217575C();
    v72 = 0;
    v27 = 0;
    v28 = 0;
    v29 = v26 | 0x8000000000000000;
  }
  else
  {
    v30 = -1 << *(_BYTE *)(a1 + 32);
    v27 = ~v30;
    v31 = *(_QWORD *)(a1 + 64);
    v72 = a1 + 64;
    v32 = -v30;
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v28 = v33 & v31;
    v29 = a1;
  }
  v73 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  v70 = v27;
  v76 = (8 * v87) | 2;
  v71 = (unint64_t)(v27 + 64) >> 6;
  v69 = v71 - 1;
  result = swift_bridgeObjectRetain();
  v35 = 0;
  v36 = v92;
  v74 = v15;
  v75 = v6;
  v83 = v22;
  v81 = v25;
  v78 = v29;
  v37 = v28;
  v38 = v82;
  v84 = 0;
  v85 = v37;
  if ((v29 & 0x8000000000000000) == 0)
    goto LABEL_12;
LABEL_8:
  if (sub_1C2175768())
  {
    v39 = v83;
    v40 = v15;
    sub_1C21757BC();
    v22 = v39;
    v25 = v81;
    swift_unknownObjectRelease();
    sub_1C21757BC();
    swift_unknownObjectRelease();
    v41 = 0;
  }
  else
  {
    v40 = v15;
    v41 = 1;
    v22 = v83;
  }
  v86 = v85;
  v87 = v84;
  while (1)
  {
    while (1)
    {
LABEL_28:
      v49 = TupleTypeMetadata2;
      v50 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v22, v41, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v25, v22, v80);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v25, 1, v49) == 1)
        return sub_1C2110118();
      v51 = &v25[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v94, v25, v40);
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v36, v51, AssociatedTypeWitness);
      v53 = v75;
      v52 = v76;
      v54 = (_BYTE *)*v75;
      if (v76 < 0x80)
      {
        LOBYTE(v56) = v76;
        v55 = v77;
      }
      else
      {
        v55 = v77;
        do
        {
          *v54++ = v52 | 0x80;
          v56 = v52 >> 7;
          v57 = v52 >> 14;
          v52 >>= 7;
        }
        while (v57);
      }
      *v54 = v56;
      v58 = v54 + 1;
      v59 = v53;
      *v53 = (unint64_t)v58;
      v95 = 0;
      v60 = *(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *))(v55 + 48);
      v60(v94, 1, &v95, &type metadata for BinaryEncodingSizeVisitor);
      if (v8)
      {
        v67 = v74;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v92, AssociatedTypeWitness);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v94, v67);
        return sub_1C2110118();
      }
      v61 = AssociatedTypeWitness;
      v62 = *(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v88 + 48);
      v62(v92, 2, &v95, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      v63 = v95;
      if (v95 < 0x80)
      {
        LOBYTE(v64) = v95;
      }
      else
      {
        do
        {
          *v58++ = v63 | 0x80;
          v64 = v63 >> 7;
          v65 = v63 >> 14;
          v63 >>= 7;
        }
        while (v65);
      }
      *v58 = v64;
      *v59 = (unint64_t)(v58 + 1);
      ((void (*)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))v60)(v94, 1, v59, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58);
      v66 = v92;
      v62(v92, 2, v59, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58);
      v8 = 0;
      v38 = v82;
      AssociatedTypeWitness = v61;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v66, v61);
      v15 = v74;
      result = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v94, v74);
      v37 = v86;
      v35 = v87;
      v36 = v66;
      v22 = v83;
      v25 = v81;
      v29 = v78;
      v84 = v87;
      v85 = v86;
      if ((v78 & 0x8000000000000000) != 0)
        goto LABEL_8;
LABEL_12:
      if (v37)
      {
        v42 = AssociatedTypeWitness;
        v43 = TupleTypeMetadata2;
        v86 = (v37 - 1) & v37;
        v87 = v35;
        v44 = __clz(__rbit64(v37)) | (v35 << 6);
        goto LABEL_14;
      }
      v46 = v35 + 1;
      if (__OFADD__(v35, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v46 >= v71)
        goto LABEL_26;
      v47 = *(_QWORD *)(v72 + 8 * v46);
      if (!v47)
        break;
LABEL_18:
      v42 = AssociatedTypeWitness;
      v43 = TupleTypeMetadata2;
      v86 = (v47 - 1) & v47;
      v87 = v46;
      v44 = __clz(__rbit64(v47)) + (v46 << 6);
LABEL_14:
      v40 = v15;
      (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v22, *(_QWORD *)(v29 + 48) + *(_QWORD *)(v91 + 72) * v44, v15);
      v45 = &v22[*(int *)(v43 + 48)];
      AssociatedTypeWitness = v42;
      (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v45, *(_QWORD *)(v29 + 56) + *(_QWORD *)(v38 + 72) * v44, v42);
      v41 = 0;
      v36 = v92;
    }
    v35 += 2;
    if (v46 + 1 >= v71)
    {
      v86 = 0;
      v87 = v46;
      v40 = v15;
      goto LABEL_27;
    }
    v47 = *(_QWORD *)(v72 + 8 * v35);
    if (v47)
    {
      ++v46;
      goto LABEL_18;
    }
    v48 = v46 + 2;
    if (v46 + 2 < v71)
      break;
LABEL_26:
    v40 = v15;
    v86 = 0;
    v87 = v35;
LABEL_27:
    v41 = 1;
  }
  v47 = *(_QWORD *)(v72 + 8 * v48);
  if (v47)
  {
    v46 += 2;
    goto LABEL_18;
  }
  while (1)
  {
    v46 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v46 >= v71)
    {
      v40 = v15;
      v86 = 0;
      v41 = 1;
      v87 = v69;
      goto LABEL_28;
    }
    v47 = *(_QWORD *)(v72 + 8 * v46);
    ++v48;
    if (v47)
      goto LABEL_18;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C21217D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  int64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  _BYTE *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  void (*v51)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **);
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[2];
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;

  v8 = v7;
  v9 = v6;
  v76 = a6;
  v11 = a2;
  v79 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v82 = (uint64_t)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(v14 + 8);
  v78 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v80 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, AssociatedTypeWitness);
  v83 = a4;
  v84 = (char *)v63 - v17;
  v81 = v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = sub_1C2175690();
  v70 = *(_QWORD *)(v20 - 8);
  v71 = v20;
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v25);
  v27 = (char *)v63 - v26;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v28 = sub_1C217575C();
    v64 = 0;
    v29 = 0;
    v30 = 0;
    v31 = v28 | 0x8000000000000000;
  }
  else
  {
    v32 = -1 << *(_BYTE *)(a1 + 32);
    v29 = ~v32;
    v33 = *(_QWORD *)(a1 + 64);
    v64 = a1 + 64;
    v34 = -v32;
    if (v34 < 64)
      v35 = ~(-1 << v34);
    else
      v35 = -1;
    v30 = v35 & v33;
    v31 = a1;
  }
  v66 = v31 & 0x7FFFFFFFFFFFFFFFLL;
  v63[1] = v29;
  v68 = (8 * v11) | 2;
  v65 = (unint64_t)(v29 + 64) >> 6;
  v63[0] = v65 - 1;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  v67 = TupleTypeMetadata2;
  v72 = v27;
  v73 = v24;
  v69 = v31;
  if ((v31 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (sub_1C2175768())
  {
    v38 = v73;
    sub_1C21757BC();
    v24 = v38;
    v27 = v72;
    swift_unknownObjectRelease();
    sub_1C21757BC();
    swift_unknownObjectRelease();
    v39 = 0;
    v74 = v30;
    v75 = v37;
  }
  else
  {
    v39 = 1;
    v74 = v30;
    v75 = v37;
    v24 = v73;
  }
  while (1)
  {
    while (1)
    {
LABEL_20:
      v44 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v24, v39, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v27, v24, v71);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v27, 1, TupleTypeMetadata2) == 1)
        return sub_1C2110118();
      v45 = &v27[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v84, v27, v81);
      (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v82, v45, v83);
      v46 = (_BYTE *)*v9;
      v47 = v68;
      if (v68 < 0x80)
      {
        LOBYTE(v48) = v68;
      }
      else
      {
        do
        {
          *v46++ = v47 | 0x80;
          v48 = v47 >> 7;
          v49 = v47 >> 14;
          v47 >>= 7;
        }
        while (v49);
      }
      *v46 = v48;
      v50 = v46 + 1;
      *v9 = (unint64_t)v50;
      v85 = 0;
      v51 = *(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v77 + 48);
      v51(v84, 1, &v85, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      if (v8)
      {
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v82, v83);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v84, v81);
        return sub_1C2110118();
      }
      sub_1C20AE610(v82, 2, v83, v76);
      v8 = 0;
      v52 = v85;
      if (v85 < 0x80)
      {
        LOBYTE(v53) = v85;
      }
      else
      {
        do
        {
          *v50++ = v52 | 0x80;
          v53 = v52 >> 7;
          v54 = v52 >> 14;
          v52 >>= 7;
        }
        while (v54);
      }
      *v50 = v53;
      *v9 = (unint64_t)(v50 + 1);
      v51(v84, 1, v9, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58);
      v56 = v82;
      v55 = v83;
      v57 = (*(uint64_t (**)(uint64_t))(v76 + 40))(v83);
      sub_1C20ABFC8(2, 0);
      sub_1C20AE75C(v57);
      v58 = v80;
      v59 = v56;
      v60 = v81;
      v27 = v72;
      v61 = v84;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v59, v55);
      result = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v61, v60);
      v30 = v74;
      v37 = v75;
      TupleTypeMetadata2 = v67;
      v24 = v73;
      v31 = v69;
      if ((v69 & 0x8000000000000000) != 0)
        goto LABEL_8;
LABEL_11:
      if (v30)
      {
        v40 = v9;
        v74 = (v30 - 1) & v30;
        v75 = v37;
        v41 = __clz(__rbit64(v30)) | (v37 << 6);
        goto LABEL_13;
      }
      v42 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v42 >= v65)
      {
        v74 = 0;
        v75 = v37;
        goto LABEL_19;
      }
      v43 = *(_QWORD *)(v64 + 8 * v42);
      if (!v43)
        break;
LABEL_17:
      v40 = v9;
      v74 = (v43 - 1) & v43;
      v75 = v42;
      v41 = __clz(__rbit64(v43)) + (v42 << 6);
LABEL_13:
      (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v24, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v80 + 72) * v41, v81);
      (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(&v24[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v31 + 56) + *(_QWORD *)(v79 + 72) * v41, v83);
      v39 = 0;
      v9 = v40;
    }
    if (v37 + 2 >= v65)
    {
      v74 = 0;
      v75 = v37 + 1;
      goto LABEL_19;
    }
    v43 = *(_QWORD *)(v64 + 8 * (v37 + 2));
    if (v43)
    {
      v42 = v37 + 2;
      goto LABEL_17;
    }
    v62 = v37 + 3;
    if (v37 + 3 < v65)
      break;
    v74 = 0;
    v75 = v37 + 2;
LABEL_19:
    v39 = 1;
  }
  v43 = *(_QWORD *)(v64 + 8 * v62);
  if (v43)
  {
    v42 = v37 + 3;
    goto LABEL_17;
  }
  while (1)
  {
    v42 = v62 + 1;
    if (__OFADD__(v62, 1))
      break;
    if (v42 >= v65)
    {
      v74 = 0;
      v39 = 1;
      v75 = v63[0];
      goto LABEL_20;
    }
    v43 = *(_QWORD *)(v64 + 8 * v42);
    ++v62;
    if (v43)
      goto LABEL_17;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C2121DE4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _BYTE *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  void (*v53)(char *, uint64_t);
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  _BYTE **v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;

  v7 = v6;
  v74 = a6;
  v78 = a2;
  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(_QWORD *)(v13 + 8);
  v77 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v79 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v16);
  v80 = a4;
  v81 = (char *)&v59 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_1C2175690();
  v67 = *(_QWORD *)(v19 - 8);
  v68 = v19;
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21, v24);
  v26 = (char *)&v59 - v25;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v27 = sub_1C217575C();
    v63 = 0;
    v28 = 0;
    v29 = 0;
    v30 = v27 | 0x8000000000000000;
  }
  else
  {
    v31 = -1 << *(_BYTE *)(a1 + 32);
    v28 = ~v31;
    v32 = *(_QWORD *)(a1 + 64);
    v63 = a1 + 64;
    v33 = -v31;
    if (v33 < 64)
      v34 = ~(-1 << v33);
    else
      v34 = -1;
    v29 = v34 & v32;
    v30 = a1;
  }
  v64 = v30 & 0x7FFFFFFFFFFFFFFFLL;
  v65 = (8 * v78) | 2;
  v61 = v28;
  v62 = (unint64_t)(v28 + 64) >> 6;
  v60 = v62 - 1;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  v78 = (uint64_t)v12;
  v69 = v26;
  v66 = v30;
  v70 = 0;
  v71 = v29;
  if ((v30 & 0x8000000000000000) == 0)
    goto LABEL_12;
LABEL_8:
  if (sub_1C2175768())
  {
    sub_1C21757BC();
    swift_unknownObjectRelease();
    sub_1C21757BC();
    swift_unknownObjectRelease();
    v37 = 0;
  }
  else
  {
    v37 = 1;
  }
  v26 = v69;
  v72 = v71;
  v73 = v70;
  while (1)
  {
    while (1)
    {
LABEL_28:
      v42 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v23, v37, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v26, v23, v68);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v26, 1, TupleTypeMetadata2) == 1)
        return sub_1C2110118();
      v43 = v23;
      v44 = &v26[*(int *)(TupleTypeMetadata2 + 48)];
      v45 = AssociatedTypeWitness;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v81, v26, AssociatedTypeWitness);
      v46 = v10;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v44, v80);
      v47 = v75;
      v48 = *v75;
      v49 = v65;
      if (v65 < 0x80)
      {
        LOBYTE(v50) = v65;
      }
      else
      {
        do
        {
          *v48++ = v49 | 0x80;
          v50 = v49 >> 7;
          v51 = v49 >> 14;
          v49 >>= 7;
        }
        while (v51);
      }
      *v48 = v50;
      v52 = v48 + 1;
      *v47 = v52;
      v82 = 0;
      v53 = *(void (**)(char *, uint64_t))(v76 + 48);
      ((void (*)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))v53)(v81, 1, &v82, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      if (v7)
      {
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v78, v80);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v45);
        return sub_1C2110118();
      }
      sub_1C20AE31C(v78, 2, v80, v74);
      v54 = v82;
      if (v82 < 0x80)
      {
        LOBYTE(v56) = v82;
        v55 = v75;
      }
      else
      {
        v55 = v75;
        do
        {
          *v52++ = v54 | 0x80;
          v56 = v54 >> 7;
          v57 = v54 >> 14;
          v54 >>= 7;
        }
        while (v57);
      }
      *v52 = v56;
      *v55 = v52 + 1;
      v53(v81, 1);
      v12 = (char *)v78;
      v58 = v80;
      sub_1C20ABF28(v78, 2, v80, v74);
      v7 = 0;
      v10 = v46;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v58);
      AssociatedTypeWitness = v45;
      result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v81, v45);
      v29 = v72;
      v36 = v73;
      v23 = v43;
      v26 = v69;
      v30 = v66;
      v70 = v73;
      v71 = v72;
      if ((v66 & 0x8000000000000000) != 0)
        goto LABEL_8;
LABEL_12:
      if (v29)
      {
        v72 = (v29 - 1) & v29;
        v73 = v36;
        v38 = __clz(__rbit64(v29)) | (v36 << 6);
        goto LABEL_14;
      }
      v39 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v39 >= v62)
        goto LABEL_26;
      v40 = *(_QWORD *)(v63 + 8 * v39);
      if (!v40)
        break;
LABEL_18:
      v72 = (v40 - 1) & v40;
      v73 = v39;
      v38 = __clz(__rbit64(v40)) + (v39 << 6);
LABEL_14:
      (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v23, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v79 + 72) * v38, AssociatedTypeWitness);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(&v23[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v30 + 56) + *(_QWORD *)(v10 + 72) * v38, v80);
      v37 = 0;
    }
    v36 += 2;
    if (v39 + 1 >= v62)
    {
      v72 = 0;
      v73 = v39;
      goto LABEL_27;
    }
    v40 = *(_QWORD *)(v63 + 8 * v36);
    if (v40)
    {
      ++v39;
      goto LABEL_18;
    }
    v41 = v39 + 2;
    if (v39 + 2 < v62)
      break;
LABEL_26:
    v72 = 0;
    v73 = v36;
LABEL_27:
    v37 = 1;
  }
  v40 = *(_QWORD *)(v63 + 8 * v41);
  if (v40)
  {
    v39 += 2;
    goto LABEL_18;
  }
  while (1)
  {
    v39 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v39 >= v62)
    {
      v72 = 0;
      v37 = 1;
      v73 = v60;
      goto LABEL_28;
    }
    v40 = *(_QWORD *)(v63 + 8 * v39);
    ++v41;
    if (v40)
      goto LABEL_18;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C21223E0(uint64_t a1, float a2)
{
  return sub_1C2120204(a1, a2);
}

unint64_t sub_1C21223F4(int a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (2 * a1) ^ ((uint64_t)a1 >> 63);
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(v2);
}

unint64_t sub_1C2122434(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = (2 * a1) ^ (a1 >> 63);
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(v2);
}

uint64_t sub_1C2122470(int a1, uint64_t a2)
{
  _DWORD **v2;
  uint64_t result;
  _DWORD *v5;

  result = sub_1C20ABFC8(a2, 5u);
  v5 = *v2;
  *v5 = a1;
  *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C21224E0(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t result;
  _QWORD *v5;

  result = sub_1C20ABFC8(a2, 1u);
  v5 = *v2;
  *v5 = a1;
  *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C2122550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20AC028(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C5144);
}

uint64_t sub_1C212256C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C21202EC(a1, a2, a3, a4);
}

unint64_t sub_1C2122580(uint64_t a1, uint64_t a2)
{
  return sub_1C2120388(a1, a2);
}

unint64_t sub_1C2122594(uint64_t a1, uint64_t a2)
{
  return sub_1C212049C(a1, a2);
}

unint64_t sub_1C21225A8(uint64_t a1, uint64_t a2)
{
  return sub_1C21205B0(a1, a2);
}

unint64_t sub_1C21225BC(uint64_t a1, uint64_t a2)
{
  return sub_1C21206BC(a1, a2);
}

unint64_t sub_1C21225D0(uint64_t a1, uint64_t a2)
{
  return sub_1C2120A48(a1, a2);
}

unint64_t sub_1C21225E4(uint64_t a1, uint64_t a2)
{
  return sub_1C21207F0(a1, a2);
}

unint64_t sub_1C21225F8(uint64_t a1, uint64_t a2)
{
  return sub_1C2120904(a1, a2);
}

unint64_t sub_1C212260C(uint64_t a1, uint64_t a2)
{
  return sub_1C2120B48(a1, a2);
}

uint64_t sub_1C2122620(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  return sub_1C2120D0C(a1, a2, a3, a4);
}

uint64_t sub_1C2122634(unint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C21210C8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C2122648(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C21217D0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C212265C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C2121DE4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C2122670(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a1;
  v7 = *v3;
  result = sub_1C21314D0((uint64_t)&v7, a2, a3, v5);
  if (!v4)
    *v3 = v7;
  return result;
}

void sub_1C21226A8(uint64_t a1, uint64_t a2)
{
  sub_1C212015C(a1, a2);
}

unint64_t sub_1C21226BC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  _WORD **v4;
  uint64_t v5;
  _WORD *v8;
  _BYTE *v9;
  unint64_t result;
  _BYTE *v11;
  _BYTE *v12;

  v8 = *v4;
  *v8 = 4107;
  *v4 = v8 + 1;
  sub_1C20AE75C(a2);
  v9 = *v4;
  *v9 = 26;
  *v4 = v9 + 1;
  result = sub_1C20AB704(a3, a4);
  if (!v5)
  {
    sub_1C20AE75C(result);
    v12 = *v4;
    result = (*(uint64_t (**)(_BYTE **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(&v12, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58, a3, a4);
    v11 = v12;
    *v12 = 12;
    *v4 = v11 + 1;
  }
  return result;
}

unint64_t sub_1C212279C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C21226BC(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for BinaryEncodingVisitor.BinaryEncodingMessageSetVisitor()
{
  return &type metadata for BinaryEncodingVisitor.BinaryEncodingMessageSetVisitor;
}

unint64_t sub_1C21227C0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  if (a1 % 86400 >= 0)
    v1 = a1 % 86400;
  else
    v1 = (a1 % 86400) + 86400;
  v2 = (int)sub_1C2136390(v1, 60) % 60;
  if (v2 >= 0)
    v3 = v2;
  else
    v3 = (v2 + 60);
  return sub_1C2136390(v1, 3600) | (unint64_t)(v3 << 32);
}

int64_t sub_1C2122878(int64_t result)
{
  int64_t v1;
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;

  v1 = result + 0x3118A41200;
  if (__OFADD__(result, 0x3118A41200))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v2 = v1 / 0x15180uLL;
  v3 = v1 >= 0;
  v4 = ~v1 / 0x15180uLL;
  if (v3)
    v5 = v2;
  else
    v5 = ~v4;
  v6 = sub_1C21363BC(4 * v5 + 274277, 146097);
  v7 = (unsigned __int128)(v6 * (__int128)3) >> 64;
  result = 3 * v6;
  if (v7 != result >> 63)
    goto LABEL_31;
  v8 = v5 + 1401;
  result = sub_1C21363BC(result, 4);
  v9 = v8 + result;
  if (__OFADD__(v8, result))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v10 = __OFSUB__(v9, 38);
  v11 = v9 - 38;
  if (v10)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v11 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v12 = (4 * v11) | 3;
  if (v12 % 1461 >= 0)
    v13 = v12 % 1461;
  else
    v13 = v12 % 1461 + 1461;
  result = sub_1C21363BC(v13, 4);
  v14 = 5 * result;
  if ((unsigned __int128)(result * (__int128)5) >> 64 != (5 * result) >> 63)
    goto LABEL_35;
  v15 = v14 + 2;
  v16 = (unsigned __int128)((v14 + 2) * (__int128)0x358AE0358AE0358BLL) >> 64;
  v17 = v15 - 153 * ((v16 >> 5) + ((unint64_t)v16 >> 63));
  if (v17 >= 0)
    v18 = v17;
  else
    v18 = v17 + 153;
  result = sub_1C21363BC(v18, 5);
  v19 = result + 1;
  if (__OFADD__(result, 1))
    goto LABEL_36;
  result = sub_1C21363BC(v15, 153);
  if (__OFADD__(result, 2))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v20 = (result + 2) % 12;
  if (v20 >= 0)
    v21 = (result + 2) % 12;
  else
    v21 = v20 + 12;
  result = sub_1C21363BC(v12, 1461);
  v22 = result - 4716;
  if (__OFADD__(result, -4716))
    goto LABEL_38;
  result = sub_1C21363BC(13 - v21, 12);
  v23 = v22 + result;
  if (__OFADD__(v22, result))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v23 > 0x7FFFFFFF)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v19 < (uint64_t)0xFFFFFFFF80000000 || v23 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_41;
  if (v19 <= 0x7FFFFFFF)
    return ((v22 + result) | ((unint64_t)v21 << 32)) + 0x100000000;
LABEL_42:
  __break(1u);
  return result;
}

uint64_t destroy for TextFormatEncodingVisitor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextFormatEncodingVisitor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    v9 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = v6[1];
    *(_OWORD *)(a1 + 16) = *v6;
    *(_OWORD *)(a1 + 32) = v10;
  }
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextFormatEncodingVisitor(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v6 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = v5;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2122D14(a1 + 16);
      v7 = *(_OWORD *)(a2 + 32);
      *v4 = *v6;
      *(_OWORD *)(a1 + 32) = v7;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 32);
    *v4 = *v6;
    *(_OWORD *)(a1 + 32) = v8;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t sub_1C2122D14(uint64_t a1)
{
  destroy for _NameMap();
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TextFormatEncodingVisitor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  if (!v4)
  {
    sub_1C2122D14(a1 + 16);
LABEL_5:
    v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatEncodingVisitor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatEncodingVisitor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatEncodingVisitor()
{
  return &type metadata for TextFormatEncodingVisitor;
}

void sub_1C2122EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

unint64_t sub_1C21230EC()
{
  unint64_t result;

  result = sub_1C21713E4((uint64_t)&unk_1E7BD7F60);
  qword_1EF75FB30 = result;
  return result;
}

void sub_1C2123110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_BYTE *)(v2 + 64) == 1)
    __asm { BR              X10 }
}

uint64_t sub_1C212335C(uint64_t result, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _BYTE v4[64];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;
  _OWORD v11[10];

  if (result)
  {
    if (a2 - result >= 1)
    {
      v10 = 0;
      memset(v9, 0, sizeof(v9));
      *(_WORD *)v4 = 1;
      memset(&v4[8], 0, 56);
      LOBYTE(v5) = 1;
      v7 = xmmword_1C2177160;
      v8 = xmmword_1C2177160;
      *(_QWORD *)&v2 = result;
      *((_QWORD *)&v2 + 1) = a2 - result;
      v3 = (unint64_t)result;
      sub_1C20AC40C((uint64_t)v9, (uint64_t)&v4[16]);
      *((_QWORD *)&v5 + 1) = 100;
      LOBYTE(v6) = 0;
      *((_QWORD *)&v6 + 1) = 100;
      v11[8] = v7;
      v11[9] = v8;
      v11[2] = *(_OWORD *)v4;
      v11[3] = *(_OWORD *)&v4[16];
      v11[4] = *(_OWORD *)&v4[32];
      v11[5] = *(_OWORD *)&v4[48];
      v11[0] = v2;
      v11[1] = v3;
      v11[6] = v5;
      v11[7] = v6;
      sub_1C21278DC((unint64_t)v11);
      return sub_1C20ACEE8((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_1C212343C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char **a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  unsigned __int8 *v14;
  char **v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[64];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[48];
  _QWORD v31[8];
  char v32;
  uint64_t v33;
  _OWORD v34[7];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char **v38;

  if (result)
  {
    v6 = result;
    v7 = a2 - result;
    if (a2 - result >= 1)
    {
      v38 = a5;
      sub_1C20ACD54(a3, (uint64_t)v30);
      v9 = v31[7];
      v10 = v32;
      sub_1C20AC3C4((uint64_t)v31, (uint64_t)&v22);
      *(_WORD *)v25 = 1;
      memset(&v25[8], 0, 56);
      LOBYTE(v26) = 1;
      v28 = xmmword_1C2177160;
      v29 = xmmword_1C2177160;
      *(_QWORD *)&v23 = v6;
      *((_QWORD *)&v23 + 1) = v7;
      v24 = (unint64_t)v6;
      sub_1C20AC40C((uint64_t)&v22, (uint64_t)&v25[16]);
      *((_QWORD *)&v26 + 1) = v9;
      LOBYTE(v27) = v10;
      *((_QWORD *)&v27 + 1) = v9;
      v11 = a4;
      v36 = v28;
      v37 = v29;
      v34[2] = *(_OWORD *)v25;
      v34[3] = *(_OWORD *)&v25[16];
      v34[4] = *(_OWORD *)&v25[32];
      v34[5] = *(_OWORD *)&v25[48];
      v34[0] = v23;
      v34[1] = v24;
      v34[6] = v26;
      v35 = v27;
      v12 = v33;
      sub_1C20ACEE8((uint64_t)v30);
      *((_QWORD *)&v35 + 1) = v12;
      while (1)
      {
        sub_1C20AC67C();
        if (v5)
          break;
        if ((v13 & 1) != 0)
          __asm { BR              X12 }
      }
      v15 = v38;
      sub_1C20A9EB4((uint64_t)": ", 2, v14);
      v17 = *v11;
      v16 = v11[1];
      sub_1C20A8008(*v11, v16);
      sub_1C214BE80(v17, v16);
      sub_1C20A8058(v17, v16);
      v18 = *v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v15 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
        *v15 = v18;
      }
      v21 = *((_QWORD *)v18 + 2);
      v20 = *((_QWORD *)v18 + 3);
      if (v21 >= v20 >> 1)
        v18 = sub_1C214E1A4((char *)(v20 > 1), v21 + 1, 1, v18);
      *((_QWORD *)v18 + 2) = v21 + 1;
      v18[v21 + 32] = 10;
      *v15 = v18;
      MEMORY[0x1C3BB7EEC](v5);
      return sub_1C20ACEE8((uint64_t)v34);
    }
  }
  return result;
}

uint64_t sub_1C21237EC(unint64_t a1, float a2)
{
  uint64_t *v2;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  sub_1C20A988C(a1);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  sub_1C214C12C(a2);
  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
    v5 = result;
    *v2 = result;
  }
  v8 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v8 + 1;
  *(_BYTE *)(v5 + v8 + 32) = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C21238B8(unint64_t a1, double a2)
{
  uint64_t *v2;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  sub_1C20A988C(a1);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  sub_1C214C194(a2);
  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
    v5 = result;
    *v2 = result;
  }
  v8 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v8 + 1;
  *(_BYTE *)(v5 + v8 + 32) = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C2123984(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v8);
  sub_1C214C31C(a1, a3, a4);
  v9 = *v4;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v9;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
    v9 = result;
    *v4 = result;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    v9 = result;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  *(_BYTE *)(v9 + v12 + 32) = 10;
  *v4 = v9;
  return result;
}

uint64_t sub_1C2123A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t *boxed_opaque_existential_1;
  void (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  char *v26;
  uint64_t result;
  uint64_t v28[5];
  char *v29[3];
  char v30;

  v6 = v5;
  v7 = v4;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20A988C(v14);
  sub_1C20AA8D4(v15);
  v28[3] = a3;
  v28[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16);
  v17(boxed_opaque_existential_1, a1, a3);
  v18 = *v4;
  v19 = v4[1];
  v30 = *((_BYTE *)v7 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v28, v18, v19, &v30, (uint64_t)v29);
  v17((uint64_t *)v13, a1, a3);
  if (swift_dynamicCast())
  {
    v20 = v28[0];
    v21 = v28[1];
    sub_1C215283C(v29);
    sub_1C20A8008(v20, v21);
    sub_1C2122EF0((uint64_t)v29, v20, v21);
    if (!v6)
    {
      sub_1C20A8058(v20, v21);
      sub_1C20A8058(v20, v21);
      swift_release();
LABEL_5:
      v22 = v29[0];
      v23 = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v7 = (uint64_t)v22;
      v7[1] = (uint64_t)v23;
      sub_1C20AB238(*((_QWORD *)v23 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v7[1] + 16) - 1);
      v24 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v24);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v25);
      v26 = v29[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v26);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1C20A8058(v20, v21);
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v29, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, a3, a4);
    if (!v6)
      goto LABEL_5;
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C2123CFC(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  float v7;
  unsigned __int8 *v8;
  const char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = *(float *)(v5 + 4 * v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      if ((~LODWORD(v7) & 0x7F800000) == 0)
        break;
      v10 = sub_1C2175624();
      sub_1C20AA79C(v10, v11);
LABEL_12:
      v13 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        *v2 = v13;
      }
      v16 = *((_QWORD *)v13 + 2);
      v15 = *((_QWORD *)v13 + 3);
      if (v16 >= v15 >> 1)
        v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
      ++v6;
      *((_QWORD *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      *v2 = v13;
      if (v3 == v6)
        return swift_bridgeObjectRelease();
    }
    if ((LODWORD(v7) & 0x7FFFFF) != 0)
    {
      v9 = "nan";
    }
    else
    {
      if (v7 < 0.0)
      {
        v9 = "-inf";
        v12 = 4;
LABEL_11:
        sub_1C20A9EB4((uint64_t)v9, v12, (unsigned __int8 *)LODWORD(v7));
        goto LABEL_12;
      }
      v9 = "inf";
    }
    v12 = 3;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1C2123E64(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unsigned __int8 *v8;
  const char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = *(double *)(v5 + 8 * v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
        break;
      v10 = sub_1C2175618();
      sub_1C20AA79C(v10, v11);
LABEL_12:
      v13 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        *v2 = v13;
      }
      v16 = *((_QWORD *)v13 + 2);
      v15 = *((_QWORD *)v13 + 3);
      if (v16 >= v15 >> 1)
        v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
      ++v6;
      *((_QWORD *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      *v2 = v13;
      if (v3 == v6)
        return swift_bridgeObjectRelease();
    }
    if ((*(_QWORD *)&v7 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      v9 = "nan";
    }
    else
    {
      if (v7 < 0.0)
      {
        v9 = "-inf";
        v12 = 4;
LABEL_11:
        sub_1C20A9EB4((uint64_t)v9, v12, *(unsigned __int8 **)&v7);
        goto LABEL_12;
      }
      v9 = "inf";
    }
    v12 = 3;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1C2123FCC(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    do
    {
      v7 = *(int *)(v5 + 4 * v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      if ((v7 & 0x80000000) != 0)
      {
        v9 = *v2;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v2 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          *v2 = v9;
        }
        v12 = *((_QWORD *)v9 + 2);
        v11 = *((_QWORD *)v9 + 3);
        if (v12 >= v11 >> 1)
          v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
        *((_QWORD *)v9 + 2) = v12 + 1;
        v9[v12 + 32] = 45;
        *v2 = v9;
        v7 = -(uint64_t)v7;
      }
      sub_1C214C444(v7);
      v13 = *v2;
      v14 = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v13;
      if ((v14 & 1) == 0)
      {
        v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        *v2 = v13;
      }
      v16 = *((_QWORD *)v13 + 2);
      v15 = *((_QWORD *)v13 + 3);
      if (v16 >= v15 >> 1)
        v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
      ++v6;
      *((_QWORD *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      *v2 = v13;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2124168(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(v5 + 8 * v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      if ((v7 & 0x8000000000000000) != 0)
      {
        v9 = *v2;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v2 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          *v2 = v9;
        }
        v12 = *((_QWORD *)v9 + 2);
        v11 = *((_QWORD *)v9 + 3);
        if (v12 >= v11 >> 1)
          v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
        *((_QWORD *)v9 + 2) = v12 + 1;
        v9[v12 + 32] = 45;
        *v2 = v9;
        v7 = -(uint64_t)v7;
      }
      sub_1C214C444(v7);
      v13 = *v2;
      v14 = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v13;
      if ((v14 & 1) == 0)
      {
        v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        *v2 = v13;
      }
      v16 = *((_QWORD *)v13 + 2);
      v15 = *((_QWORD *)v13 + 3);
      if (v16 >= v15 >> 1)
        v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
      ++v6;
      *((_QWORD *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      *v2 = v13;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2124304(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    do
    {
      v7 = *(unsigned int *)(v5 + 4 * v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      sub_1C214C444(v7);
      v9 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        *v2 = v9;
      }
      v12 = *((_QWORD *)v9 + 2);
      v11 = *((_QWORD *)v9 + 3);
      if (v12 >= v11 >> 1)
        v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
      ++v6;
      *((_QWORD *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      *v2 = v9;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2124418(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(v5 + 8 * v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      sub_1C214C444(v7);
      v9 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        *v2 = v9;
      }
      v12 = *((_QWORD *)v9 + 2);
      v11 = *((_QWORD *)v9 + 3);
      if (v12 >= v11 >> 1)
        v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
      ++v6;
      *((_QWORD *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      *v2 = v9;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C212452C(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  const char *v9;
  uint64_t v10;
  char *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = result;
    swift_bridgeObjectRetain();
    v6 = 0;
    do
    {
      v7 = *(unsigned __int8 *)(v5 + v6 + 32);
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      if (v7)
        v9 = "true";
      else
        v9 = "false";
      if (v7)
        v10 = 4;
      else
        v10 = 5;
      sub_1C20A9EB4((uint64_t)v9, v10, (unsigned __int8 *)4);
      v11 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        *v2 = v11;
      }
      v14 = *((_QWORD *)v11 + 2);
      v13 = *((_QWORD *)v11 + 3);
      if (v14 >= v13 >> 1)
        v11 = sub_1C214E1A4((char *)(v13 > 1), v14 + 1, 1, v11);
      ++v6;
      *((_QWORD *)v11 + 2) = v14 + 1;
      v11[v14 + 32] = 10;
      *v2 = v11;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C212465C(uint64_t result, unint64_t a2)
{
  char **v2;
  char **v3;
  unint64_t v4;
  unsigned __int8 *v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(result + 16))
  {
    v3 = v2;
    v10 = swift_bridgeObjectRetain();
    v4 = *(_QWORD *)(v10 + 40);
    sub_1C20A8008(*(_QWORD *)(v10 + 32), v4);
    sub_1C20A988C(a2);
    sub_1C20A9EB4((uint64_t)": ", 2, v5);
    v6 = *v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *v3 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 34;
    *v3 = v6;
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C2124A8C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a2;
  v23 = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v10, a3))
    return swift_bridgeObjectRelease();
  v20 = v8;
  v11 = 0;
  v21 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  while (1)
  {
    v12 = sub_1C21755C4();
    sub_1C2175594();
    if ((v12 & 1) == 0)
      break;
    result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v11, a3);
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_16;
LABEL_5:
    sub_1C20A988C(v22);
    sub_1C20A9EB4((uint64_t)": ", 2, v15);
    sub_1C214C31C((uint64_t)v9, a3, v23);
    v16 = *v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v4 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      *v4 = v16;
    }
    v19 = *((_QWORD *)v16 + 2);
    v18 = *((_QWORD *)v16 + 3);
    if (v19 >= v18 >> 1)
      v16 = sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *v4 = v16;
    v9 = v21;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, a3);
    ++v11;
    if (v14 == MEMORY[0x1C3BB7A60](a1, a3))
      return swift_bridgeObjectRelease();
  }
  result = sub_1C21756FC();
  if (v20 != 8)
    goto LABEL_17;
  v24 = result;
  (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v9, &v24, a3);
  result = swift_unknownObjectRelease();
  v14 = v11 + 1;
  if (!__OFADD__(v11, 1))
    goto LABEL_5;
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1C2124CB8(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t *), uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, uint64_t *);
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;

  v42 = a3;
  v43 = a4;
  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v11;
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)&v37 - v14;
  sub_1C20A988C(v16);
  sub_1C20A9EB4((uint64_t)": ", 2, v17);
  v18 = *v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = v5;
  *v5 = v18;
  v20 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_24:
    v18 = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v18 + 16) + 1, 1, (char *)v18);
    *v44 = v18;
  }
  v22 = *(_QWORD *)(v18 + 16);
  v21 = *(_QWORD *)(v18 + 24);
  if (v22 >= v21 >> 1)
    v18 = (uint64_t)sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, (char *)v18);
  *(_QWORD *)(v18 + 16) = v22 + 1;
  *(_BYTE *)(v18 + v22 + 32) = 91;
  *v44 = v18;
  v23 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C3BB7A60](v23, a5))
  {
    v39 = v20;
    v24 = sub_1C21755C4();
    sub_1C2175594();
    if ((v24 & 1) != 0)
    {
      v25 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v41(v15, v25, a5);
    }
    else
    {
      result = sub_1C21756FC();
      if (v38 != 8)
      {
LABEL_27:
        __break(1u);
        return result;
      }
      v45 = result;
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v41(v15, (uint64_t)&v45, a5);
      swift_unknownObjectRelease();
    }
    v40 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v40(v12, v15, a5);
    v42(v12, v44);
    v26 = *(void (**)(char *, uint64_t))(v9 + 8);
    v26(v12, a5);
    if (MEMORY[0x1C3BB7A60](a1, a5) != 1)
    {
      v18 = 1;
      do
      {
        v20 = sub_1C21755C4();
        sub_1C2175594();
        if ((v20 & 1) != 0)
        {
          v41(v15, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, a5);
          v34 = v18 + 1;
          if (__OFADD__(v18, 1))
            goto LABEL_23;
        }
        else
        {
          result = sub_1C21756FC();
          if (v38 != 8)
            goto LABEL_27;
          v20 = result;
          v45 = result;
          v41(v15, (uint64_t)&v45, a5);
          swift_unknownObjectRelease();
          v34 = v18 + 1;
          if (__OFADD__(v18, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        v40(v12, v15, a5);
        v35 = v44;
        sub_1C20A9EB4((uint64_t)", ", 2, v36);
        v42(v12, v35);
        v26(v12, a5);
        ++v18;
      }
      while (v34 != MEMORY[0x1C3BB7A60](a1, a5));
    }
  }
  swift_bridgeObjectRelease();
  v27 = v44;
  v28 = *v44;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v27 = v28;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v28 + 16) + 1, 1, (char *)v28);
    v28 = result;
    *v44 = result;
  }
  v31 = *(_QWORD *)(v28 + 16);
  v30 = *(_QWORD *)(v28 + 24);
  v32 = v31 + 1;
  if (v31 >= v30 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v30 > 1), v31 + 1, 1, (char *)v28);
    v28 = result;
  }
  *(_QWORD *)(v28 + 16) = v32;
  *(_BYTE *)(v28 + v31 + 32) = 93;
  *v44 = v28;
  v33 = *(_QWORD *)(v28 + 24);
  if ((uint64_t)(v31 + 2) > (uint64_t)(v33 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v33 > 1), v31 + 2, 1, (char *)v28);
    v28 = result;
  }
  *(_QWORD *)(v28 + 16) = v31 + 2;
  *(_BYTE *)(v28 + v32 + 32) = 10;
  *v44 = v28;
  return result;
}

uint64_t sub_1C21250EC(uint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  float v10;
  unsigned __int8 *v11;
  const char *v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  float *v23;
  uint64_t v24;
  unint64_t v25;
  float v26;
  const char *v27;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = *(float *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~LODWORD(v10) & 0x7F800000) != 0)
    {
      v13 = sub_1C2175624();
      sub_1C20AA79C(v13, v14);
      v16 = v9 - 1;
      if (v9 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        v5 = *v2;
        goto LABEL_17;
      }
      goto LABEL_24;
    }
    if ((LODWORD(v10) & 0x7FFFFF) != 0)
    {
      v12 = "nan";
    }
    else
    {
      if (v10 < 0.0)
      {
        v12 = "-inf";
        v17 = 4;
        goto LABEL_15;
      }
      v12 = "inf";
    }
    v17 = 3;
LABEL_15:
    sub_1C20A9EB4((uint64_t)v12, v17, v11);
    v16 = v9 - 1;
    if (v9 == 1)
      goto LABEL_16;
LABEL_24:
    v23 = (float *)(a1 + 36);
    while (1)
    {
      v26 = *v23;
      sub_1C20A9EB4((uint64_t)", ", 2, v15);
      if ((~LODWORD(v26) & 0x7F800000) != 0)
      {
        v24 = sub_1C2175624();
        sub_1C20AA79C(v24, v25);
      }
      else
      {
        if ((LODWORD(v26) & 0x7FFFFF) != 0)
        {
          v27 = "nan";
LABEL_33:
          sub_1C20A9EB4((uint64_t)v27, 3, (unsigned __int8 *)LODWORD(v26));
          goto LABEL_26;
        }
        if (v26 >= 0.0)
        {
          v27 = "inf";
          goto LABEL_33;
        }
        sub_1C20A9EB4((uint64_t)"-inf", 4, (unsigned __int8 *)LODWORD(v26));
      }
LABEL_26:
      ++v23;
      if (!--v16)
        goto LABEL_16;
    }
  }
LABEL_17:
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v20 = *((_QWORD *)v5 + 2);
  v19 = *((_QWORD *)v5 + 3);
  v21 = v20 + 1;
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v21;
  v5[v20 + 32] = 93;
  *v2 = v5;
  v22 = *((_QWORD *)v5 + 3);
  if ((uint64_t)(v20 + 2) > (uint64_t)(v22 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v22 > 1), v20 + 2, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v20 + 2;
  v5[v21 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C21253A0(uint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double v10;
  unsigned __int8 *v11;
  const char *v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double *v23;
  uint64_t v24;
  unint64_t v25;
  double v26;
  const char *v27;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = *(double *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) != 0)
    {
      v13 = sub_1C2175618();
      sub_1C20AA79C(v13, v14);
      v16 = v9 - 1;
      if (v9 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        v5 = *v2;
        goto LABEL_17;
      }
      goto LABEL_24;
    }
    if ((*(_QWORD *)&v10 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      v12 = "nan";
    }
    else
    {
      if (v10 < 0.0)
      {
        v12 = "-inf";
        v17 = 4;
        goto LABEL_15;
      }
      v12 = "inf";
    }
    v17 = 3;
LABEL_15:
    sub_1C20A9EB4((uint64_t)v12, v17, v11);
    v16 = v9 - 1;
    if (v9 == 1)
      goto LABEL_16;
LABEL_24:
    v23 = (double *)(a1 + 40);
    while (1)
    {
      v26 = *v23;
      sub_1C20A9EB4((uint64_t)", ", 2, v15);
      if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) != 0)
      {
        v24 = sub_1C2175618();
        sub_1C20AA79C(v24, v25);
      }
      else
      {
        if ((*(_QWORD *)&v26 & 0xFFFFFFFFFFFFFLL) != 0)
        {
          v27 = "nan";
LABEL_33:
          sub_1C20A9EB4((uint64_t)v27, 3, *(unsigned __int8 **)&v26);
          goto LABEL_26;
        }
        if (v26 >= 0.0)
        {
          v27 = "inf";
          goto LABEL_33;
        }
        sub_1C20A9EB4((uint64_t)"-inf", 4, *(unsigned __int8 **)&v26);
      }
LABEL_26:
      ++v23;
      if (!--v16)
        goto LABEL_16;
    }
  }
LABEL_17:
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v20 = *((_QWORD *)v5 + 2);
  v19 = *((_QWORD *)v5 + 3);
  v21 = v20 + 1;
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v21;
  v5[v20 + 32] = 93;
  *v2 = v5;
  v22 = *((_QWORD *)v5 + 3);
  if ((uint64_t)(v20 + 2) > (uint64_t)(v22 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v22 > 1), v20 + 2, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v20 + 2;
  v5[v21 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C2125654(uint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;
  int *v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = *(int *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((v10 & 0x80000000) != 0)
    {
      v11 = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v5;
      if ((v11 & 1) == 0)
      {
        v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        *v2 = v5;
      }
      v13 = *((_QWORD *)v5 + 2);
      v12 = *((_QWORD *)v5 + 3);
      if (v13 >= v12 >> 1)
        v5 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v13 + 1;
      v5[v13 + 32] = 45;
      *v2 = v5;
      v10 = -(uint64_t)v10;
    }
    sub_1C214C444(v10);
    v14 = v9 - 1;
    if (v9 != 1)
    {
      v20 = (unsigned __int8 *)a1;
      v21 = (int *)(a1 + 36);
      do
      {
        v23 = *v21++;
        v22 = v23;
        sub_1C20A9EB4((uint64_t)", ", 2, v20);
        if ((v23 & 0x80000000) != 0)
        {
          v24 = *v2;
          v25 = swift_isUniquelyReferenced_nonNull_native();
          *v2 = v24;
          if ((v25 & 1) == 0)
          {
            v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
            *v2 = v24;
          }
          v27 = *((_QWORD *)v24 + 2);
          v26 = *((_QWORD *)v24 + 3);
          if (v27 >= v26 >> 1)
            v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
          *((_QWORD *)v24 + 2) = v27 + 1;
          v24[v27 + 32] = 45;
          *v2 = v24;
          v22 = -(uint64_t)v22;
        }
        sub_1C214C444(v22);
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    v5 = *v2;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v17 = *((_QWORD *)v5 + 2);
  v16 = *((_QWORD *)v5 + 3);
  v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v16 > 1), v17 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  *v2 = v5;
  v19 = *((_QWORD *)v5 + 3);
  if ((uint64_t)(v17 + 2) > (uint64_t)(v19 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v17 + 2, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v17 + 2;
  v5[v18 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C2125958(uint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((v10 & 0x8000000000000000) != 0)
    {
      v11 = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v5;
      if ((v11 & 1) == 0)
      {
        v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        *v2 = v5;
      }
      v13 = *((_QWORD *)v5 + 2);
      v12 = *((_QWORD *)v5 + 3);
      if (v13 >= v12 >> 1)
        v5 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v5);
      *((_QWORD *)v5 + 2) = v13 + 1;
      v5[v13 + 32] = 45;
      *v2 = v5;
      v10 = -(uint64_t)v10;
    }
    sub_1C214C444(v10);
    v14 = v9 - 1;
    if (v9 != 1)
    {
      v20 = (unsigned __int8 *)a1;
      v21 = (unint64_t *)(a1 + 40);
      do
      {
        v23 = *v21++;
        v22 = v23;
        sub_1C20A9EB4((uint64_t)", ", 2, v20);
        if ((v23 & 0x8000000000000000) != 0)
        {
          v24 = *v2;
          v25 = swift_isUniquelyReferenced_nonNull_native();
          *v2 = v24;
          if ((v25 & 1) == 0)
          {
            v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
            *v2 = v24;
          }
          v27 = *((_QWORD *)v24 + 2);
          v26 = *((_QWORD *)v24 + 3);
          if (v27 >= v26 >> 1)
            v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
          *((_QWORD *)v24 + 2) = v27 + 1;
          v24[v27 + 32] = 45;
          *v2 = v24;
          v22 = -(uint64_t)v22;
        }
        sub_1C214C444(v22);
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    v5 = *v2;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v17 = *((_QWORD *)v5 + 2);
  v16 = *((_QWORD *)v5 + 3);
  v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v16 > 1), v17 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  *v2 = v5;
  v19 = *((_QWORD *)v5 + 3);
  if ((uint64_t)(v17 + 2) > (uint64_t)(v19 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v17 + 2, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v17 + 2;
  v5[v18 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C2125C5C(uint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = *(unsigned int *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1C214C444(v10);
    v12 = v9 - 1;
    if (v9 != 1)
    {
      v13 = (unsigned int *)(a1 + 36);
      do
      {
        v14 = *v13++;
        sub_1C20A9EB4((uint64_t)", ", 2, v11);
        sub_1C214C444(v14);
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    v5 = *v2;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v17 = *((_QWORD *)v5 + 2);
  v16 = *((_QWORD *)v5 + 3);
  v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v16 > 1), v17 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  *v2 = v5;
  v19 = *((_QWORD *)v5 + 3);
  v20 = v17 + 2;
  if (v20 > (uint64_t)(v19 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v20;
  v5[v18 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C2125E3C(_QWORD *a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = a1[2];
  if (v9)
  {
    v10 = a1[4];
    swift_bridgeObjectRetain();
    sub_1C214C444(v10);
    v12 = v9 - 1;
    if (v9 != 1)
    {
      v13 = a1 + 5;
      do
      {
        v14 = *v13++;
        sub_1C20A9EB4((uint64_t)", ", 2, v11);
        sub_1C214C444(v14);
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    v5 = *v2;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v17 = *((_QWORD *)v5 + 2);
  v16 = *((_QWORD *)v5 + 3);
  v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v16 > 1), v17 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  *v2 = v5;
  v19 = *((_QWORD *)v5 + 3);
  v20 = v17 + 2;
  if (v20 > (uint64_t)(v19 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v20;
  v5[v18 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C212601C(uint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  unsigned __int8 *v18;
  const char *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  *v2 = v5;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    if (*(_BYTE *)(a1 + 32))
      v10 = "true";
    else
      v10 = "false";
    if (*(_BYTE *)(a1 + 32))
      v11 = 4;
    else
      v11 = 5;
    swift_bridgeObjectRetain();
    sub_1C20A9EB4((uint64_t)v10, v11, v12);
    v14 = v9 - 1;
    if (v14)
    {
      v15 = (unsigned __int8 *)(a1 + 33);
      do
      {
        v17 = *v15++;
        v16 = v17;
        sub_1C20A9EB4((uint64_t)", ", 2, v13);
        if (v17)
          v19 = "true";
        else
          v19 = "false";
        if (v16)
          v20 = 4;
        else
          v20 = 5;
        sub_1C20A9EB4((uint64_t)v19, v20, v18);
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    v5 = *v2;
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v23 = *((_QWORD *)v5 + 2);
  v22 = *((_QWORD *)v5 + 3);
  v24 = v23 + 1;
  if (v23 >= v22 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v22 > 1), v23 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v24;
  v5[v23 + 32] = 93;
  *v2 = v5;
  v25 = *((_QWORD *)v5 + 3);
  v26 = v23 + 2;
  if (v26 > (uint64_t)(v25 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v25 > 1), v26, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v26;
  v5[v24 + 32] = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C2126244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[4];

  v5[2] = a3;
  v5[3] = a4;
  return sub_1C2124CB8(a1, a2, (void (*)(char *, uint64_t *))sub_1C212812C, (uint64_t)v5, a3);
}

uint64_t sub_1C2126274(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v36;
  int64_t v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v4 = v3;
  v33 = a1 + 64;
  v6 = -1;
  v7 = -1 << *(_BYTE *)(a1 + 32);
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(63 - v7) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v36 = (v8 - 1) & v8;
  v37 = v10;
  for (i = __clz(__rbit64(v8)) | (v10 << 6); ; i = __clz(__rbit64(v13)) + (v12 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 24 * i);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    swift_bridgeObjectRetain();
    v45 = v19;
    sub_1C20A8008(v19, v20);
    swift_retain();
    sub_1C20A988C(a2);
    sub_1C20AA8D4(v22);
    if (qword_1EF75CCD8 != -1)
      swift_once();
    v23 = *(_QWORD *)(a3 + 8);
    v24 = *(_BYTE *)(a3 + 64);
    v38 = *(char **)a3;
    v39 = v23;
    v40 = 0u;
    v41 = 0u;
    v42 = qword_1EF75FB30;
    v43 = 0;
    v44 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v4;
    sub_1C21270DC(&v38, v16, v17, v45, v20, v21);
    v26 = v38;
    v27 = v39;
    if (v25)
    {
      v31 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v45, v20);
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1C2110118();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v26;
    *(_QWORD *)(a3 + 8) = v27;
    sub_1C20AB238(*(_QWORD *)(v27 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(a3 + 8) + 16) - 1);
    v28 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v28);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v45, v20);
    swift_bridgeObjectRelease();
    result = swift_release();
    v8 = v36;
    v10 = v37;
    v4 = 0;
    if (v36)
      goto LABEL_4;
LABEL_5:
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v32)
      return sub_1C2110118();
    v13 = *(_QWORD *)(v33 + 8 * v12);
    if (!v13)
    {
      v14 = v10 + 2;
      if (v10 + 2 >= v32)
        return sub_1C2110118();
      v13 = *(_QWORD *)(v33 + 8 * v14);
      if (v13)
        goto LABEL_12;
      v14 = v10 + 3;
      if (v10 + 3 >= v32)
        return sub_1C2110118();
      v13 = *(_QWORD *)(v33 + 8 * v14);
      if (v13)
      {
LABEL_12:
        v12 = v14;
        goto LABEL_13;
      }
      v30 = v10 + 4;
      if (v10 + 4 >= v32)
        return sub_1C2110118();
      v13 = *(_QWORD *)(v33 + 8 * v30);
      v12 = v10 + 4;
      if (!v13)
        break;
    }
LABEL_13:
    v36 = (v13 - 1) & v13;
    v37 = v12;
  }
  while (1)
  {
    v12 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v12 >= v32)
      return sub_1C2110118();
    v13 = *(_QWORD *)(v33 + 8 * v12);
    ++v30;
    if (v13)
      goto LABEL_13;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C2126650(unint64_t a1, unint64_t a2, void (*a3)(uint64_t *, char *, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  int64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  int64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  unint64_t v70;
  void (*v71)(uint64_t *, char *, char *);
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  int64_t v80;
  char *v81;
  uint64_t v82;
  int64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[6];
  char v88;
  uint64_t v89;

  v6 = a6;
  v72 = a4;
  v71 = a3;
  v70 = a2;
  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v10, v15);
  v17 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v19 = sub_1C2175690();
  v76 = *(_QWORD *)(v19 - 8);
  v77 = v19;
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v81 = (char *)v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21, v23);
  v75 = (char *)v60 - v24;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v25 = sub_1C217575C();
    v61 = 0;
    v26 = 0;
    v27 = 0;
    v28 = v25 | 0x8000000000000000;
  }
  else
  {
    v29 = -1 << *(_BYTE *)(a1 + 32);
    v26 = ~v29;
    v30 = *(_QWORD *)(a1 + 64);
    v61 = a1 + 64;
    v31 = -v29;
    if (v31 < 64)
      v32 = ~(-1 << v31);
    else
      v32 = -1;
    v27 = v32 & v30;
    v28 = a1;
  }
  v63 = v28 & 0x7FFFFFFFFFFFFFFFLL;
  v60[1] = v26;
  v64 = v78 + 1;
  v69 = v87;
  v62 = (unint64_t)(v26 + 64) >> 6;
  v60[0] = v62 - 1;
  result = swift_bridgeObjectRetain();
  v34 = 0;
  v84 = v12;
  v79 = TupleTypeMetadata2;
  v73 = v28;
  v68 = a5;
  v67 = v6;
  v66 = v9;
  v65 = v14;
  while (1)
  {
    v35 = v81;
    v74 = v27;
    v80 = v34;
    if ((v28 & 0x8000000000000000) == 0)
      break;
    if (sub_1C2175768())
    {
      v38 = v81;
      sub_1C21757BC();
      swift_unknownObjectRelease();
      TupleTypeMetadata2 = v79;
      sub_1C21757BC();
      v35 = v38;
      swift_unknownObjectRelease();
      v37 = 0;
      v82 = v27;
      v83 = v80;
    }
    else
    {
      v37 = 1;
      TupleTypeMetadata2 = v79;
      v82 = v27;
      v83 = v80;
      v35 = v81;
    }
LABEL_21:
    v41 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v35, v37, 1, TupleTypeMetadata2);
    v42 = v75;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v35, v77);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v42, 1, TupleTypeMetadata2) == 1)
      return sub_1C2110118();
    v43 = &v42[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v42, a5);
    v44 = v17;
    v45 = v84;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v84, v43, v6);
    v46 = v78;
    sub_1C20A988C(v70);
    sub_1C20AA8D4(v47);
    if (qword_1EF75CCD8 != -1)
      swift_once();
    v48 = qword_1EF75FB30;
    v49 = v46[1];
    v50 = *((_BYTE *)v46 + 64);
    v85 = *v46;
    v86 = v49;
    v51 = v69;
    *v69 = 0u;
    v51[1] = 0u;
    v87[4] = v48;
    v87[5] = 0;
    v88 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52 = v89;
    v71(&v85, v44, v45);
    v54 = v85;
    v53 = v86;
    v89 = v52;
    v17 = v44;
    if (v52)
    {
      v59 = v87[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840(v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v84, v67);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v68);
      return sub_1C2110118();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v46 = v54;
    v46[1] = v53;
    sub_1C20AB238(*(_QWORD *)(v53 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(v46[1] + 16) - 1);
    v55 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v55);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v56);
    v57 = v87[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v66;
    v6 = v67;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v84, v67);
    v14 = v65;
    a5 = v68;
    result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v44, v68);
    v27 = v82;
    v34 = v83;
    TupleTypeMetadata2 = v79;
    v28 = v73;
  }
  if (v27)
  {
    v82 = (v27 - 1) & v27;
    v83 = v34;
    v36 = __clz(__rbit64(v27)) | (v34 << 6);
    goto LABEL_11;
  }
  v39 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v39 >= v62)
  {
    v82 = 0;
    v83 = v34;
LABEL_20:
    v37 = 1;
    goto LABEL_21;
  }
  v40 = *(_QWORD *)(v61 + 8 * v39);
  if (v40)
    goto LABEL_17;
  if (v34 + 2 >= v62)
  {
    v82 = 0;
    v83 = v34 + 1;
    goto LABEL_20;
  }
  v40 = *(_QWORD *)(v61 + 8 * (v34 + 2));
  if (v40)
  {
    v39 = v34 + 2;
    goto LABEL_17;
  }
  v58 = v34 + 3;
  if (v34 + 3 >= v62)
  {
    v82 = 0;
    v83 = v34 + 2;
    goto LABEL_20;
  }
  v40 = *(_QWORD *)(v61 + 8 * v58);
  if (v40)
  {
    v39 = v34 + 3;
LABEL_17:
    v82 = (v40 - 1) & v40;
    v83 = v39;
    v36 = __clz(__rbit64(v40)) + (v39 << 6);
LABEL_11:
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v81, *(_QWORD *)(v28 + 48) + *(_QWORD *)(v14 + 72) * v36, a5);
    v35 = v81;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(&v81[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v28 + 56) + *(_QWORD *)(v9 + 72) * v36, v6);
    v37 = 0;
    goto LABEL_21;
  }
  while (1)
  {
    v39 = v58 + 1;
    if (__OFADD__(v58, 1))
      break;
    if (v39 >= v62)
    {
      v82 = 0;
      v37 = 1;
      v83 = v60[0];
      goto LABEL_21;
    }
    v40 = *(_QWORD *)(v61 + 8 * v39);
    ++v58;
    if (v40)
      goto LABEL_17;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C2126D48(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C2126650(a1, a2, (void (*)(uint64_t *, char *, char *))sub_1C2128110, (uint64_t)v11, AssociatedTypeWitness, v9);
}

uint64_t sub_1C2126E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(_QWORD *)(a6 + 8) + 48))(a2, 1, a1, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, a4);
  if (!v7)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(_QWORD *)(a7 + 8) + 48))(a3, 2, a1, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, a5);
  return result;
}

uint64_t sub_1C2126ED4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  _QWORD v11[6];

  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C2126650(a1, a2, (void (*)(uint64_t *, char *, char *))sub_1C21280F4, (uint64_t)v11, AssociatedTypeWitness, a4);
}

uint64_t sub_1C2126F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(_QWORD *)(a6 + 8) + 48))(a2, 1, a1, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, a4);
  if (!v7)
    return sub_1C2123984(a3, 2uLL, a5, a7);
  return result;
}

uint64_t sub_1C2127018(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  _QWORD v12[8];

  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v12[6] = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C2126650(a1, a2, (void (*)(uint64_t *, char *, char *))sub_1C21280D4, (uint64_t)v12, AssociatedTypeWitness, a4);
}

uint64_t sub_1C21270DC(char **a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  unsigned __int8 *v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;

  sub_1C20A988C(1uLL);
  sub_1C20A9EB4((uint64_t)": ", 2, v12);
  sub_1C20AAAD0(a2, a3);
  v13 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    *a1 = v13;
  }
  v16 = *((_QWORD *)v13 + 2);
  v15 = *((_QWORD *)v13 + 3);
  if (v16 >= v15 >> 1)
    v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
  *((_QWORD *)v13 + 2) = v16 + 1;
  v13[v16 + 32] = 10;
  *a1 = v13;
  return sub_1C2161324(a4, a5, a6, 2uLL);
}

uint64_t sub_1C21271E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(_QWORD *)(a6 + 8) + 48))(a2, 1, a1, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, a4);
  if (!v7)
    return sub_1C2123A5C(a3, 2, a5, a7);
  return result;
}

uint64_t sub_1C2127264(unint64_t a1, float a2)
{
  return sub_1C21237EC(a1, a2);
}

uint64_t sub_1C2127278(unint64_t a1, double a2)
{
  return sub_1C21238B8(a1, a2);
}

uint64_t sub_1C212728C(unint64_t a1, unint64_t a2)
{
  unsigned __int8 *v3;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v3);
  sub_1C214C1FC(a1);
  return sub_1C214BDE4();
}

uint64_t sub_1C21272D4(unint64_t a1, unint64_t a2)
{
  unsigned __int8 *v3;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v3);
  sub_1C214C444(a1);
  return sub_1C214BDE4();
}

uint64_t sub_1C212731C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C20AA9FC(a1, a2, a3, sub_1C214BE80);
}

uint64_t sub_1C2127338(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2123984(a1, a2, a3, a4);
}

uint64_t sub_1C212734C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2123A5C(a1, a2, a3, a4);
}

uint64_t sub_1C2127360(uint64_t a1, unint64_t a2)
{
  return sub_1C2123CFC(a1, a2);
}

uint64_t sub_1C2127374(uint64_t a1, unint64_t a2)
{
  return sub_1C2123E64(a1, a2);
}

uint64_t sub_1C2127388(uint64_t a1, unint64_t a2)
{
  return sub_1C2123FCC(a1, a2);
}

uint64_t sub_1C212739C(uint64_t a1, unint64_t a2)
{
  return sub_1C2124168(a1, a2);
}

uint64_t sub_1C21273B0(uint64_t a1, unint64_t a2)
{
  return sub_1C2124304(a1, a2);
}

uint64_t sub_1C21273C4(uint64_t a1, unint64_t a2)
{
  return sub_1C2124418(a1, a2);
}

uint64_t sub_1C21273D8(uint64_t a1, unint64_t a2)
{
  return sub_1C212452C(a1, a2);
}

uint64_t sub_1C21273EC(uint64_t a1, unint64_t a2)
{
  return sub_1C212465C(a1, a2);
}

uint64_t sub_1C2127400(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2124A8C(a1, a2, a3, a4);
}

uint64_t sub_1C2127414(uint64_t a1, unint64_t a2)
{
  return sub_1C21250EC(a1, a2);
}

uint64_t sub_1C2127428(uint64_t a1, unint64_t a2)
{
  return sub_1C21253A0(a1, a2);
}

uint64_t sub_1C212743C(uint64_t a1, unint64_t a2)
{
  return sub_1C2125654(a1, a2);
}

uint64_t sub_1C2127450(uint64_t a1, unint64_t a2)
{
  return sub_1C2125958(a1, a2);
}

uint64_t sub_1C2127464(uint64_t a1, unint64_t a2)
{
  return sub_1C2125C5C(a1, a2);
}

uint64_t sub_1C2127478(_QWORD *a1, unint64_t a2)
{
  return sub_1C2125E3C(a1, a2);
}

uint64_t sub_1C212748C(uint64_t a1, unint64_t a2)
{
  return sub_1C212601C(a1, a2);
}

uint64_t sub_1C21274A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2126244(a1, a2, a3, a4);
}

uint64_t sub_1C21274B4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C2126D48(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C21274C8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C2126ED4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C21274DC(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C2127018(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1C21274F0(uint64_t a1, uint64_t a2)
{
  sub_1C2123110(a1, a2);
}

uint64_t sub_1C2127504(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1C21752C4();
  v5 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1C21752DC();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v5 + v9;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  return sub_1C212335C(v5, v11);
}

uint64_t sub_1C21275A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  _QWORD v24[2];
  _BYTE v25[40];
  _QWORD v26[3];
  uint64_t v27[5];

  v27[3] = a5;
  v27[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  sub_1C214BC9C(a2, a3);
  sub_1C20AA8D4(v13);
  sub_1C20A84A8((uint64_t)v27, (uint64_t)v25);
  v14 = *(_QWORD *)a4;
  v15 = *(_QWORD *)(a4 + 8);
  LOBYTE(v24[0]) = *(_BYTE *)(a4 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v25, v14, v15, (char *)v24, (uint64_t)v26);
  sub_1C20A84A8((uint64_t)v27, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast())
  {
    v16 = v24[0];
    v17 = v24[1];
    sub_1C215283C(v26);
    sub_1C20A8008(v16, v17);
    sub_1C2122EF0((uint64_t)v26, v16, v17);
    sub_1C20A8058(v16, v17);
    sub_1C20A8058(v16, v17);
    swift_release();
  }
  else
  {
    (*(void (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a6 + 72))(v26, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, a5, a6);
  }
  v18 = v26[0];
  v19 = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v18;
  *(_QWORD *)(a4 + 8) = v19;
  sub_1C20AB238(*(_QWORD *)(v19 + 16) - 1);
  sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(a4 + 8) + 16) - 1);
  v20 = swift_bridgeObjectRetain();
  sub_1C20AA5B0(v20);
  sub_1C20A9EB4((uint64_t)"}\n", 2, v21);
  v22 = v26[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8840(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C2127830(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_1C20AE108(__src, &__src[a2]);
  sub_1C21752F4();
  swift_allocObject();
  sub_1C21752B8();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_1C2175324();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

unint64_t sub_1C21278DC(unint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unsigned int **v6;
  char **v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned int *v18;
  unint64_t *v19;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unint64_t v25;
  unsigned __int8 *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  char *v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  _BYTE *v51;

  v4 = *(_QWORD *)(result + 8);
  *(_QWORD *)(result + 16) = *(_QWORD *)result;
  *(_QWORD *)(result + 24) = 0;
  if (v4 < 1)
    return result;
  v5 = v1;
  v6 = (unsigned int **)result;
  v7 = (char **)(v1 + 1);
  while (2)
  {
    result = sub_1C20ACC78();
    if (v2)
      return result;
    if (result > 0xFFFFFFFE || (result & 0xFFFFFFF8) == 0 || (result & 7) >= 6)
    {
      sub_1C2108014();
      swift_allocError();
      v50 = 3;
      goto LABEL_34;
    }
    switch(result & 7)
    {
      case 0uLL:
        *((_BYTE *)v6 + 33) = 0;
        v8 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        v9 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v9);
        sub_1C214C444(v8);
        sub_1C20A9EB4((uint64_t)": ", 2, v10);
        v11 = sub_1C20ACC78();
        *((_BYTE *)v6 + 32) = 1;
        sub_1C214C444(v11);
        goto LABEL_25;
      case 1uLL:
        *((_BYTE *)v6 + 33) = 1;
        v21 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        v22 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v22);
        sub_1C214C444(v21);
        sub_1C20A9EB4((uint64_t)": ", 2, v23);
        v24 = (uint64_t)v6[1];
        if (v24 <= 7)
          goto LABEL_36;
        v25 = *(_QWORD *)*v6;
        v26 = (unsigned __int8 *)(v24 - 8);
        *v6 += 2;
        v6[1] = (unsigned int *)v26;
        *((_BYTE *)v6 + 32) = 1;
        v27 = 16;
        goto LABEL_24;
      case 2uLL:
        *((_BYTE *)v6 + 33) = 2;
        v12 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        v13 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v13);
        sub_1C214C444(v12);
        v14 = sub_1C20ACC78();
        v15 = (unint64_t)v6[1];
        if ((v15 & 0x8000000000000000) != 0)
          goto LABEL_38;
        v16 = v14;
        v17 = v15 >= v14;
        v18 = (unsigned int *)(v15 - v14);
        if (v17)
        {
          v19 = (unint64_t *)*v6;
          *v6 = (unsigned int *)((char *)*v6 + v16);
          v6[1] = v18;
          sub_1C2127830(v19, v16);
          *((_BYTE *)v6 + 32) = 1;
          __asm { BR              X9 }
        }
        sub_1C2108014();
        swift_allocError();
        *v51 = 1;
        swift_willThrow();
        return sub_1C20A8058(0, 0xC000000000000000);
      case 3uLL:
        *((_BYTE *)v6 + 33) = 3;
        v28 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        v29 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v29);
        sub_1C214C444(v28);
        sub_1C20A9EB4((uint64_t)" {\n", 3, v30);
        v31 = (char *)v5[1];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v5[1] = (unint64_t)v31;
        v33 = v3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v31 = sub_1C214E1A4(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
          *v7 = v31;
        }
        v35 = *((_QWORD *)v31 + 2);
        v34 = *((_QWORD *)v31 + 3);
        v36 = v35 + 1;
        if (v35 >= v34 >> 1)
          v31 = sub_1C214E1A4((char *)(v34 > 1), v35 + 1, 1, v31);
        *((_QWORD *)v31 + 2) = v36;
        v31[v35 + 32] = 32;
        *v7 = v31;
        v37 = *((_QWORD *)v31 + 3);
        v38 = v35 + 2;
        if ((uint64_t)(v35 + 2) > (uint64_t)(v37 >> 1))
          v31 = sub_1C214E1A4((char *)(v37 > 1), v35 + 2, 1, v31);
        v3 = v33;
        *((_QWORD *)v31 + 2) = v38;
        v31[v36 + 32] = 32;
        v5[1] = (unint64_t)v31;
        sub_1C21278DC(v6);
        sub_1C20AB238(*(_QWORD *)(v5[1] + 16) - 1);
        sub_1C20AB238(*(_QWORD *)(v5[1] + 16) - 1);
        v39 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v39);
        result = sub_1C20A9EB4((uint64_t)"}\n", 2, v40);
        goto LABEL_30;
      case 4uLL:
        *((_BYTE *)v6 + 33) = 4;
        v6[5] = (unsigned int *)(result >> 3);
        return result;
      case 5uLL:
        *((_BYTE *)v6 + 33) = 5;
        v41 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        v42 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v42);
        sub_1C214C444(v41);
        sub_1C20A9EB4((uint64_t)": ", 2, v43);
        v44 = (uint64_t)v6[1];
        if (v44 > 3)
        {
          v25 = **v6;
          v26 = (unsigned __int8 *)(v44 - 4);
          ++*v6;
          v6[1] = (unsigned int *)v26;
          *((_BYTE *)v6 + 32) = 1;
          v27 = 8;
LABEL_24:
          sub_1C214C690(v25, v27, v26);
LABEL_25:
          v45 = *v5;
          result = swift_isUniquelyReferenced_nonNull_native();
          *v5 = v45;
          if ((result & 1) == 0)
          {
            result = (unint64_t)sub_1C214E1A4(0, *(_QWORD *)(v45 + 16) + 1, 1, (char *)v45);
            v45 = result;
            *v5 = result;
          }
          v47 = *(_QWORD *)(v45 + 16);
          v46 = *(_QWORD *)(v45 + 24);
          if (v47 >= v46 >> 1)
          {
            result = (unint64_t)sub_1C214E1A4((char *)(v46 > 1), v47 + 1, 1, (char *)v45);
            v45 = result;
          }
          *(_QWORD *)(v45 + 16) = v47 + 1;
          *(_BYTE *)(v45 + v47 + 32) = 10;
          *v5 = v45;
LABEL_30:
          v48 = (uint64_t)v6[1];
          v6[2] = *v6;
          v6[3] = 0;
          if (v48 < 1)
            return result;
          continue;
        }
LABEL_36:
        sub_1C2108014();
        swift_allocError();
        v50 = 1;
LABEL_34:
        *v49 = v50;
        return swift_willThrow();
      default:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C2128074);
    }
  }
}

uint64_t sub_1C21280D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1C21271E0(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1C21280F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1C2126F94(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1C2128110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1C2126E38(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1C212812C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C214C31C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C2128154(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2128190(uint64_t a1, unint64_t a2)
{
  return sub_1C2127388(a1, a2);
}

uint64_t sub_1C21281A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(a5 + 64) = 0;
  *(_WORD *)(a5 + 72) = 256;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  sub_1C21284DC(a3, a5);
  *(_BYTE *)(a5 + 72) = a4;
  *(_BYTE *)(a5 + 73) = HIBYTE(a4) & 1;
  v10 = swift_conformsToProtocol2();
  if (v10)
    v11 = v10;
  else
    v11 = 0;
  if (v10)
    v12 = a1;
  else
    v12 = 0;
  if (v12)
  {
    (*(void (**)(__int128 *__return_ptr))(v11 + 8))(&v18);
    sub_1C2128518(a3);
    v17 = v18;
    v13 = v19;
    v14 = v20;
    result = sub_1C20A8840(*(_QWORD *)(a5 + 80));
    *(_OWORD *)(a5 + 80) = v17;
    *(_QWORD *)(a5 + 96) = v13;
    *(_QWORD *)(a5 + 104) = v14;
    *(_QWORD *)(a5 + 112) = a1;
    *(_QWORD *)(a5 + 120) = a2;
  }
  else
  {
    sub_1C20B727C();
    swift_allocError();
    *v16 = 6;
    swift_willThrow();
    sub_1C2128518(a3);
    return sub_1C212854C(a5);
  }
  return result;
}

uint64_t sub_1C21282C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char *v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v0;
  v3 = *(_BYTE *)(v0 + 73);
  if ((v3 & 1) == 0)
  {
    v4 = *(unsigned __int8 **)(v0 + 40);
    if (v4 != *(unsigned __int8 **)(v0 + 48) && *v4 == *(unsigned __int8 *)(v0 + 72))
    {
      *(_QWORD *)(v0 + 40) = v4 + 1;
      sub_1C20B5184();
      return 0;
    }
  }
  v5 = *(_QWORD *)(v0 + 64);
  if (v5 >= 1)
  {
    v6 = *(unsigned __int8 **)(v0 + 40);
    if (v6 != *(unsigned __int8 **)(v0 + 48))
    {
      v7 = *v6;
      if (v7 == 59 || v7 == 44)
      {
        *(_QWORD *)(v0 + 40) = v6 + 1;
        sub_1C20B5184();
      }
    }
  }
  result = (uint64_t)sub_1C20B6D64();
  if (v1)
    return v0;
  v10 = v9;
  if (!v9)
    goto LABEL_19;
  if (!*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
LABEL_25:
    sub_1C20B727C();
    swift_allocError();
    v20 = 7;
    goto LABEL_26;
  }
  v11 = result;
  sub_1C20A84A8(v2, (uint64_t)&v21);
  v12 = v23;
  v5 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  result = *(_QWORD *)(v2 + 112);
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v0 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(result, *(_QWORD *)(v2 + 120), v11, v10, v12, v5);
  v3 = v13;
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  if ((v3 & 1) != 0)
    goto LABEL_25;
  v14 = *(_QWORD *)(v2 + 64);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (!v15)
    goto LABEL_23;
  __break(1u);
LABEL_19:
  if (*(_QWORD *)(v2 + 80))
  {
    v17 = *(_QWORD *)(v2 + 104);
    v21 = *(_QWORD *)(v2 + 80);
    v22 = *(_OWORD *)(v2 + 88);
    v23 = v17;
    v0 = v2;
    result = sub_1C20B6E30((uint64_t)&v21);
    if ((v18 & 1) == 0)
    {
      v16 = v5 + 1;
      if (!__OFADD__(v5, 1))
      {
        v0 = result;
LABEL_23:
        *(_QWORD *)(v2 + 64) = v16;
        return v0;
      }
      __break(1u);
      goto LABEL_31;
    }
    if ((v3 & 1) != 0)
      return 0;
    sub_1C20B727C();
    swift_allocError();
    v20 = 3;
LABEL_26:
    *v19 = v20;
    swift_willThrow();
    return v0;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C21284DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TextFormatScanner(a2, a1);
  return a2;
}

uint64_t sub_1C2128518(uint64_t a1)
{
  destroy for TextFormatScanner(a1);
  return a1;
}

uint64_t sub_1C212854C(uint64_t a1)
{
  destroy for TextFormatDecoder(a1);
  return a1;
}

uint64_t sub_1C2128578(_DWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t result;
  int v6;
  _BYTE *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    result = sub_1C20B69FC();
    if (!v2)
      *a1 = v6;
  }
  return result;
}

uint64_t sub_1C2128610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t result;
  int v6;
  _BYTE *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    result = sub_1C20B69FC();
    if (!v2)
    {
      *(_DWORD *)a1 = v6;
      *(_BYTE *)(a1 + 4) = 0;
    }
  }
  return result;
}

void sub_1C21286AC(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  double v16;
  char v17;
  float v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 *v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v30;
  char *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  char *v44;
  _BYTE *v45;
  int v46;
  int v47;
  char *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  _BYTE *v52;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
    goto LABEL_97;
  *(_QWORD *)(v1 + 40) = v4 + 1;
  sub_1C20B5184();
  v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 == v5 || *v6 != 91)
  {
    sub_1C20B69FC();
    if (!v2)
    {
      v47 = v46;
      v48 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v48;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v48 = sub_1C214E884(0, *((_QWORD *)v48 + 2) + 1, 1, v48);
        *a1 = v48;
      }
      v51 = *((_QWORD *)v48 + 2);
      v50 = *((_QWORD *)v48 + 3);
      if (v51 >= v50 >> 1)
        v48 = sub_1C214E884((char *)(v50 > 1), v51 + 1, 1, v48);
      *((_QWORD *)v48 + 2) = v51 + 1;
      *(_DWORD *)&v48[4 * v51 + 32] = v47;
      *a1 = v48;
    }
    return;
  }
  *(_QWORD *)(v1 + 40) = v6 + 1;
  sub_1C20B5184();
  v7 = 1;
  while (1)
  {
    v8 = *(unsigned __int8 **)(v1 + 40);
    if (v8 != v5)
      break;
    if ((v7 & 1) == 0)
      goto LABEL_97;
LABEL_30:
    v16 = COERCE_DOUBLE(sub_1C20B66E4());
    if ((v17 & 1) == 0)
    {
      v18 = v16;
      goto LABEL_69;
    }
    v20 = *(unsigned __int8 **)(v1 + 40);
    v19 = *(unsigned __int8 **)(v1 + 48);
    if (v20 == v19)
      goto LABEL_107;
    v21 = *v20;
    if ((*v20 - 91) >= 0xE6u)
      v21 = *v20 + 32;
    if (v21 != 110)
      goto LABEL_62;
    *(_QWORD *)(v1 + 40) = v20 + 1;
    if (v20 + 1 == v19)
      goto LABEL_62;
    v22 = v20[1];
    if ((v22 - 91) >= 0xE6u)
      v22 += 32;
    if (v22 != 97)
      goto LABEL_62;
    *(_QWORD *)(v1 + 40) = v20 + 2;
    if (v20 + 2 == v19)
      goto LABEL_62;
    v23 = v20[2];
    if ((v23 - 91) >= 0xE6u)
      v23 += 32;
    if (v23 != 110)
      goto LABEL_62;
    v24 = v20 + 3;
    *(_QWORD *)(v1 + 40) = v20 + 3;
    if (v20 + 3 == v19)
    {
LABEL_96:
      v18 = NAN;
      goto LABEL_69;
    }
    v25 = *v24;
    if ((v25 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5)
    {
      while (1)
      {
        v18 = NAN;
        if (v25 > 0x23)
          break;
        if (((1 << v25) & 0x100002600) != 0)
        {
          *(_QWORD *)(v1 + 40) = ++v24;
        }
        else
        {
          if (v25 != 35)
            break;
          *(_QWORD *)(v1 + 40) = v24 + 1;
          if (v24 + 1 == v19)
            goto LABEL_96;
          v26 = v24[1];
          v24 += 2;
          *(_QWORD *)(v1 + 40) = v24;
          if (v26 != 10 && v26 != 13)
          {
            while (v24 != v19)
            {
              v28 = *v24++;
              v27 = v28;
              *(_QWORD *)(v1 + 40) = v24;
              if (v28 == 10 || v27 == 13)
                goto LABEL_49;
            }
            goto LABEL_96;
          }
        }
LABEL_49:
        if (v24 == v19)
          goto LABEL_96;
        v25 = *v24;
      }
    }
    else
    {
LABEL_62:
      *(_QWORD *)(v1 + 40) = v20;
      v30 = *v20;
      if (v30 == 45)
        *(_QWORD *)(v1 + 40) = v20 + 1;
      if ((sub_1C20B68B4((uint64_t)&unk_1E7BD8088) & 1) == 0 && (sub_1C20B68B4((uint64_t)&unk_1E7BD80B0) & 1) == 0)
      {
LABEL_107:
        sub_1C20B727C();
        swift_allocError();
        *v52 = 1;
        goto LABEL_98;
      }
      if (v30 == 45)
        v18 = -INFINITY;
      else
        v18 = INFINITY;
    }
LABEL_69:
    v31 = *a1;
    v32 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v31;
    if ((v32 & 1) == 0)
    {
      v31 = sub_1C214E884(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
      *a1 = v31;
    }
    v34 = *((_QWORD *)v31 + 2);
    v33 = *((_QWORD *)v31 + 3);
    v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      v44 = sub_1C214E884((char *)(v33 > 1), v34 + 1, 1, v31);
      v35 = v34 + 1;
      v31 = v44;
    }
    v7 = 0;
    *((_QWORD *)v31 + 2) = v35;
    *(float *)&v31[4 * v34 + 32] = v18;
    *a1 = v31;
  }
  v9 = *v8;
  if (v9 == 93)
  {
    *(_QWORD *)(v1 + 40) = v8 + 1;
    sub_1C20B5184();
    return;
  }
  if ((v7 & 1) != 0)
    goto LABEL_30;
  if (v9 > 0x23)
  {
LABEL_74:
    if (v8 == v5 || *v8 != 44)
      goto LABEL_97;
    v36 = v8 + 1;
    *(_QWORD *)(v1 + 40) = v8 + 1;
    if (v8 + 1 != v5)
    {
      while (1)
      {
        v38 = *v36;
        if (v38 > 0x23)
          break;
        if (((1 << v38) & 0x100002600) != 0)
        {
          v37 = v36 + 1;
          *(_QWORD *)(v1 + 40) = v36 + 1;
        }
        else
        {
          if (v38 != 35)
            goto LABEL_30;
          *(_QWORD *)(v1 + 40) = v36 + 1;
          if (v36 + 1 == v5)
            goto LABEL_30;
          v39 = v36[1];
          v37 = v36 + 2;
          *(_QWORD *)(v1 + 40) = v36 + 2;
          if (v39 != 10 && v39 != 13)
          {
            if (v37 == v5)
              goto LABEL_30;
            v40 = v36[2];
            v37 = v36 + 3;
            *(_QWORD *)(v1 + 40) = v36 + 3;
            if (v40 != 10 && v40 != 13)
            {
              while (v37 != v5)
              {
                v42 = *v37++;
                v41 = v42;
                *(_QWORD *)(v1 + 40) = v37;
                if (v42 == 10 || v41 == 13)
                  goto LABEL_79;
              }
              goto LABEL_30;
            }
          }
        }
LABEL_79:
        v36 = v37;
        if (v37 == v5)
          goto LABEL_30;
      }
    }
    goto LABEL_30;
  }
  while (1)
  {
    if (((1 << v9) & 0x100002600) != 0)
    {
      v10 = v8 + 1;
      *(_QWORD *)(v1 + 40) = v8 + 1;
      goto LABEL_12;
    }
    if (v9 != 35)
      goto LABEL_74;
    *(_QWORD *)(v1 + 40) = v8 + 1;
    if (v8 + 1 == v5)
      goto LABEL_97;
    v11 = v8[1];
    v10 = v8 + 2;
    *(_QWORD *)(v1 + 40) = v8 + 2;
    if (v11 != 10 && v11 != 13)
    {
      if (v10 == v5)
        goto LABEL_97;
      v12 = v8[2];
      v10 = v8 + 3;
      *(_QWORD *)(v1 + 40) = v8 + 3;
      if (v12 != 10 && v12 != 13)
        break;
    }
LABEL_12:
    if (v10 == v5)
      goto LABEL_97;
    v9 = *v10;
    v8 = v10;
    if (v9 > 0x23)
      goto LABEL_74;
  }
  while (v10 != v5)
  {
    v14 = *v10++;
    v13 = v14;
    *(_QWORD *)(v1 + 40) = v10;
    if (v14 == 10 || v13 == 13)
      goto LABEL_12;
  }
LABEL_97:
  sub_1C20B727C();
  swift_allocError();
  *v45 = 0;
LABEL_98:
  swift_willThrow();
}

uint64_t sub_1C2128C44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    result = sub_1C20B6A8C();
    if (!v2)
      *a1 = v6;
  }
  return result;
}

uint64_t sub_1C2128CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    result = sub_1C20B6A8C();
    if (!v2)
    {
      *(_QWORD *)a1 = v6;
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  return result;
}

void sub_1C2128D78(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  char *v16;
  char v17;
  double v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 *v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v30;
  char *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  char *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  _BYTE *v52;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
    goto LABEL_97;
  *(_QWORD *)(v1 + 40) = v4 + 1;
  sub_1C20B5184();
  v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 == v5 || *v6 != 91)
  {
    sub_1C20B6A8C();
    if (!v2)
    {
      v47 = v46;
      v48 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v48;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v48 = sub_1C214E994(0, *((_QWORD *)v48 + 2) + 1, 1, v48);
        *a1 = v48;
      }
      v51 = *((_QWORD *)v48 + 2);
      v50 = *((_QWORD *)v48 + 3);
      if (v51 >= v50 >> 1)
        v48 = sub_1C214E994((char *)(v50 > 1), v51 + 1, 1, v48);
      *((_QWORD *)v48 + 2) = v51 + 1;
      *(_QWORD *)&v48[8 * v51 + 32] = v47;
      *a1 = v48;
    }
    return;
  }
  *(_QWORD *)(v1 + 40) = v6 + 1;
  sub_1C20B5184();
  v7 = 1;
  while (1)
  {
    v8 = *(unsigned __int8 **)(v1 + 40);
    if (v8 != v5)
      break;
    if ((v7 & 1) == 0)
      goto LABEL_97;
LABEL_30:
    v16 = sub_1C20B66E4();
    if ((v17 & 1) == 0)
    {
      v18 = *(double *)&v16;
      goto LABEL_69;
    }
    v20 = *(unsigned __int8 **)(v1 + 40);
    v19 = *(unsigned __int8 **)(v1 + 48);
    if (v20 == v19)
      goto LABEL_107;
    v21 = *v20;
    if ((*v20 - 91) >= 0xE6u)
      v21 = *v20 + 32;
    if (v21 != 110)
      goto LABEL_62;
    *(_QWORD *)(v1 + 40) = v20 + 1;
    if (v20 + 1 == v19)
      goto LABEL_62;
    v22 = v20[1];
    if ((v22 - 91) >= 0xE6u)
      v22 += 32;
    if (v22 != 97)
      goto LABEL_62;
    *(_QWORD *)(v1 + 40) = v20 + 2;
    if (v20 + 2 == v19)
      goto LABEL_62;
    v23 = v20[2];
    if ((v23 - 91) >= 0xE6u)
      v23 += 32;
    if (v23 != 110)
      goto LABEL_62;
    v24 = v20 + 3;
    *(_QWORD *)(v1 + 40) = v20 + 3;
    if (v20 + 3 == v19)
    {
LABEL_96:
      v18 = NAN;
      goto LABEL_69;
    }
    v25 = *v24;
    if ((v25 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5)
    {
      while (1)
      {
        v18 = NAN;
        if (v25 > 0x23)
          break;
        if (((1 << v25) & 0x100002600) != 0)
        {
          *(_QWORD *)(v1 + 40) = ++v24;
        }
        else
        {
          if (v25 != 35)
            break;
          *(_QWORD *)(v1 + 40) = v24 + 1;
          if (v24 + 1 == v19)
            goto LABEL_96;
          v26 = v24[1];
          v24 += 2;
          *(_QWORD *)(v1 + 40) = v24;
          if (v26 != 10 && v26 != 13)
          {
            while (v24 != v19)
            {
              v28 = *v24++;
              v27 = v28;
              *(_QWORD *)(v1 + 40) = v24;
              if (v28 == 10 || v27 == 13)
                goto LABEL_49;
            }
            goto LABEL_96;
          }
        }
LABEL_49:
        if (v24 == v19)
          goto LABEL_96;
        v25 = *v24;
      }
    }
    else
    {
LABEL_62:
      *(_QWORD *)(v1 + 40) = v20;
      v30 = *v20;
      if (v30 == 45)
        *(_QWORD *)(v1 + 40) = v20 + 1;
      if ((sub_1C20B68B4((uint64_t)&unk_1E7BD8100) & 1) == 0 && (sub_1C20B68B4((uint64_t)&unk_1E7BD8128) & 1) == 0)
      {
LABEL_107:
        sub_1C20B727C();
        swift_allocError();
        *v52 = 1;
        goto LABEL_98;
      }
      if (v30 == 45)
        v18 = -INFINITY;
      else
        v18 = INFINITY;
    }
LABEL_69:
    v31 = *a1;
    v32 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v31;
    if ((v32 & 1) == 0)
    {
      v31 = sub_1C214E994(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
      *a1 = v31;
    }
    v34 = *((_QWORD *)v31 + 2);
    v33 = *((_QWORD *)v31 + 3);
    v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      v44 = sub_1C214E994((char *)(v33 > 1), v34 + 1, 1, v31);
      v35 = v34 + 1;
      v31 = v44;
    }
    v7 = 0;
    *((_QWORD *)v31 + 2) = v35;
    *(double *)&v31[8 * v34 + 32] = v18;
    *a1 = v31;
  }
  v9 = *v8;
  if (v9 == 93)
  {
    *(_QWORD *)(v1 + 40) = v8 + 1;
    sub_1C20B5184();
    return;
  }
  if ((v7 & 1) != 0)
    goto LABEL_30;
  if (v9 > 0x23)
  {
LABEL_74:
    if (v8 == v5 || *v8 != 44)
      goto LABEL_97;
    v36 = v8 + 1;
    *(_QWORD *)(v1 + 40) = v8 + 1;
    if (v8 + 1 != v5)
    {
      while (1)
      {
        v38 = *v36;
        if (v38 > 0x23)
          break;
        if (((1 << v38) & 0x100002600) != 0)
        {
          v37 = v36 + 1;
          *(_QWORD *)(v1 + 40) = v36 + 1;
        }
        else
        {
          if (v38 != 35)
            goto LABEL_30;
          *(_QWORD *)(v1 + 40) = v36 + 1;
          if (v36 + 1 == v5)
            goto LABEL_30;
          v39 = v36[1];
          v37 = v36 + 2;
          *(_QWORD *)(v1 + 40) = v36 + 2;
          if (v39 != 10 && v39 != 13)
          {
            if (v37 == v5)
              goto LABEL_30;
            v40 = v36[2];
            v37 = v36 + 3;
            *(_QWORD *)(v1 + 40) = v36 + 3;
            if (v40 != 10 && v40 != 13)
            {
              while (v37 != v5)
              {
                v42 = *v37++;
                v41 = v42;
                *(_QWORD *)(v1 + 40) = v37;
                if (v42 == 10 || v41 == 13)
                  goto LABEL_79;
              }
              goto LABEL_30;
            }
          }
        }
LABEL_79:
        v36 = v37;
        if (v37 == v5)
          goto LABEL_30;
      }
    }
    goto LABEL_30;
  }
  while (1)
  {
    if (((1 << v9) & 0x100002600) != 0)
    {
      v10 = v8 + 1;
      *(_QWORD *)(v1 + 40) = v8 + 1;
      goto LABEL_12;
    }
    if (v9 != 35)
      goto LABEL_74;
    *(_QWORD *)(v1 + 40) = v8 + 1;
    if (v8 + 1 == v5)
      goto LABEL_97;
    v11 = v8[1];
    v10 = v8 + 2;
    *(_QWORD *)(v1 + 40) = v8 + 2;
    if (v11 != 10 && v11 != 13)
    {
      if (v10 == v5)
        goto LABEL_97;
      v12 = v8[2];
      v10 = v8 + 3;
      *(_QWORD *)(v1 + 40) = v8 + 3;
      if (v12 != 10 && v12 != 13)
        break;
    }
LABEL_12:
    if (v10 == v5)
      goto LABEL_97;
    v9 = *v10;
    v8 = v10;
    if (v9 > 0x23)
      goto LABEL_74;
  }
  while (v10 != v5)
  {
    v14 = *v10++;
    v13 = v14;
    *(_QWORD *)(v1 + 40) = v10;
    if (v14 == 10 || v13 == 13)
      goto LABEL_12;
  }
LABEL_97:
  sub_1C20B727C();
  swift_allocError();
  *v45 = 0;
LABEL_98:
  swift_willThrow();
}

void sub_1C212930C(_DWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  char *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    v6 = 0;
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    sub_1C20B5CB4();
    if (v2)
      return;
    if (v5 == (int)v5)
    {
      *a1 = v5;
      return;
    }
    v6 = 1;
  }
  sub_1C20B727C();
  swift_allocError();
  *v7 = v6;
  swift_willThrow();
}

void sub_1C21293B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  char *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    v6 = 0;
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    sub_1C20B5CB4();
    if (v2)
      return;
    if (v5 == (int)v5)
    {
      *(_DWORD *)a1 = v5;
      *(_BYTE *)(a1 + 4) = 0;
      return;
    }
    v6 = 1;
  }
  sub_1C20B727C();
  swift_allocError();
  *v7 = v6;
  swift_willThrow();
}

void sub_1C2129468(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unint64_t v28;
  char *v29;
  _BYTE *v30;
  uint64_t v31;
  int v32;
  _BYTE *v33;
  char *v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_60:
    sub_1C20B727C();
    swift_allocError();
    *v30 = 0;
LABEL_61:
    swift_willThrow();
    return;
  }
  *(_QWORD *)(v1 + 40) = v4 + 1;
  sub_1C20B5184();
  v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 != v5 && *v6 == 91)
  {
    *(_QWORD *)(v1 + 40) = v6 + 1;
    sub_1C20B5184();
    v7 = 1;
    while (1)
    {
      v8 = *(unsigned __int8 **)(v1 + 40);
      if (v8 == v5)
      {
        if ((v7 & 1) == 0)
          goto LABEL_60;
      }
      else
      {
        v9 = *v8;
        if (v9 == 93)
        {
          *(_QWORD *)(v1 + 40) = v8 + 1;
          sub_1C20B5184();
          return;
        }
        if ((v7 & 1) == 0)
        {
          for (; v9 <= 0x23; v9 = *v8)
          {
            if (((1 << v9) & 0x100002600) != 0)
            {
              *(_QWORD *)(v1 + 40) = ++v8;
            }
            else
            {
              if (v9 != 35)
                break;
              *(_QWORD *)(v1 + 40) = v8 + 1;
              if (v8 + 1 == v5)
                goto LABEL_60;
              v10 = v8[1];
              *(_QWORD *)(v1 + 40) = v8 + 2;
              if (v10 == 10 || v10 == 13)
              {
                v8 += 2;
              }
              else
              {
                if (v8 + 2 == v5)
                  goto LABEL_60;
                v11 = v8[2];
                for (v8 += 3; ; ++v8)
                {
                  *(_QWORD *)(v1 + 40) = v8;
                  if (v11 == 10 || v11 == 13)
                    break;
                  if (v8 == v5)
                    goto LABEL_60;
                  v12 = *v8;
                  v11 = v12;
                }
              }
            }
            if (v8 == v5)
              goto LABEL_60;
          }
          if (v8 == v5 || *v8 != 44)
            goto LABEL_60;
          *(_QWORD *)(v1 + 40) = ++v8;
          if (v8 == v5)
            goto LABEL_65;
          while (1)
          {
            v22 = *v8;
            if (v22 > 0x23)
              break;
            if (((1 << v22) & 0x100002600) != 0)
            {
              v21 = v8 + 1;
              *(_QWORD *)(v1 + 40) = v8 + 1;
            }
            else
            {
              if (v22 != 35)
                break;
              *(_QWORD *)(v1 + 40) = v8 + 1;
              if (v8 + 1 == v5)
                goto LABEL_65;
              v23 = v8[1];
              v21 = v8 + 2;
              *(_QWORD *)(v1 + 40) = v8 + 2;
              if (v23 != 10 && v23 != 13)
              {
                if (v21 == v5)
                  goto LABEL_65;
                v24 = v8[2];
                v21 = v8 + 3;
                *(_QWORD *)(v1 + 40) = v8 + 3;
                if (v24 != 10 && v24 != 13)
                {
                  while (v21 != v5)
                  {
                    v26 = *v21++;
                    v25 = v26;
                    *(_QWORD *)(v1 + 40) = v21;
                    if (v26 == 10 || v25 == 13)
                      goto LABEL_46;
                  }
                  goto LABEL_65;
                }
              }
            }
LABEL_46:
            v8 = v21;
            if (v21 == v5)
              goto LABEL_65;
          }
        }
      }
      if (v8 == v5)
        goto LABEL_65;
      if (*v8 == 45)
      {
        *(_QWORD *)(v1 + 40) = v8 + 1;
        if (v8[1] - 58 < 0xFFFFFFF6)
          goto LABEL_65;
        sub_1C20B5A40();
        if (v2)
          return;
        if (v13 < 0)
          goto LABEL_65;
        v14 = -v13;
      }
      else
      {
        sub_1C20B5A40();
        if (v2)
          return;
        v14 = v15;
        if (v15 < 0)
          goto LABEL_65;
      }
      if (v14 != (int)v14)
        goto LABEL_65;
      v16 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v16 = sub_1C214E97C(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
        *a1 = v16;
      }
      v18 = *((_QWORD *)v16 + 2);
      v19 = *((_QWORD *)v16 + 3);
      v20 = v18 + 1;
      if (v18 >= v19 >> 1)
      {
        v38 = v18 + 1;
        v27 = v16;
        v28 = *((_QWORD *)v16 + 2);
        v29 = sub_1C214E97C((char *)(v19 > 1), v18 + 1, 1, v27);
        v18 = v28;
        v20 = v38;
        v16 = v29;
      }
      v7 = 0;
      *((_QWORD *)v16 + 2) = v20;
      *(_DWORD *)&v16[4 * v18 + 32] = v14;
      *a1 = v16;
    }
  }
  sub_1C20B5CB4();
  if (!v2)
  {
    v32 = v31;
    if (v31 != (int)v31)
    {
LABEL_65:
      sub_1C20B727C();
      swift_allocError();
      *v33 = 1;
      goto LABEL_61;
    }
    v34 = *a1;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v34;
    if ((v35 & 1) == 0)
    {
      v34 = sub_1C214E97C(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
      *a1 = v34;
    }
    v37 = *((_QWORD *)v34 + 2);
    v36 = *((_QWORD *)v34 + 3);
    if (v37 >= v36 >> 1)
      v34 = sub_1C214E97C((char *)(v36 > 1), v37 + 1, 1, v34);
    *((_QWORD *)v34 + 2) = v37 + 1;
    *(_DWORD *)&v34[4 * v37 + 32] = v32;
    *a1 = v34;
  }
}

void sub_1C21298A4(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unint64_t v28;
  char *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  unint64_t v38;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_61:
    sub_1C20B727C();
    swift_allocError();
    *v30 = 0;
LABEL_62:
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(_QWORD *)(v1 + 40) = v6 + 1;
      sub_1C20B5184();
      v7 = 1;
      while (1)
      {
        v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0)
            goto LABEL_61;
        }
        else
        {
          v9 = *v8;
          if (v9 == 93)
          {
            *(_QWORD *)(v1 + 40) = v8 + 1;
            sub_1C20B5184();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(_QWORD *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35)
                  break;
                *(_QWORD *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5)
                  goto LABEL_61;
                v10 = v8[1];
                *(_QWORD *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5)
                    goto LABEL_61;
                  v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(_QWORD *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13)
                      break;
                    if (v8 == v5)
                      goto LABEL_61;
                    v12 = *v8;
                    v11 = v12;
                  }
                }
              }
              if (v8 == v5)
                goto LABEL_61;
            }
            if (v8 == v5 || *v8 != 44)
              goto LABEL_61;
            *(_QWORD *)(v1 + 40) = ++v8;
            if (v8 == v5)
            {
LABEL_70:
              sub_1C20B727C();
              swift_allocError();
              *v37 = 1;
              goto LABEL_62;
            }
            while (1)
            {
              v22 = *v8;
              if (v22 > 0x23)
                break;
              if (((1 << v22) & 0x100002600) != 0)
              {
                v21 = v8 + 1;
                *(_QWORD *)(v1 + 40) = v8 + 1;
              }
              else
              {
                if (v22 != 35)
                  break;
                *(_QWORD *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5)
                  goto LABEL_70;
                v23 = v8[1];
                v21 = v8 + 2;
                *(_QWORD *)(v1 + 40) = v8 + 2;
                if (v23 != 10 && v23 != 13)
                {
                  if (v21 == v5)
                    goto LABEL_70;
                  v24 = v8[2];
                  v21 = v8 + 3;
                  *(_QWORD *)(v1 + 40) = v8 + 3;
                  if (v24 != 10 && v24 != 13)
                  {
                    while (v21 != v5)
                    {
                      v26 = *v21++;
                      v25 = v26;
                      *(_QWORD *)(v1 + 40) = v21;
                      if (v26 == 10 || v25 == 13)
                        goto LABEL_47;
                    }
                    goto LABEL_70;
                  }
                }
              }
LABEL_47:
              v8 = v21;
              if (v21 == v5)
                goto LABEL_70;
            }
          }
        }
        if (v8 == v5)
          goto LABEL_70;
        if (*v8 == 45)
        {
          *(_QWORD *)(v1 + 40) = v8 + 1;
          if (v8[1] - 58 < 0xFFFFFFF6)
            goto LABEL_70;
          sub_1C20B5A40();
          if (v2)
            return;
          if (v13 < 0)
          {
            v14 = 0x8000000000000000;
            if (v13 != 0x8000000000000000)
              goto LABEL_70;
          }
          else
          {
            v14 = -v13;
          }
        }
        else
        {
          sub_1C20B5A40();
          if (v2)
            return;
          v14 = v15;
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_70;
        }
        v16 = *a1;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v16 = sub_1C214E988(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
          *a1 = v16;
        }
        v18 = *((_QWORD *)v16 + 2);
        v19 = *((_QWORD *)v16 + 3);
        v20 = v18 + 1;
        if (v18 >= v19 >> 1)
        {
          v38 = v18 + 1;
          v27 = v16;
          v28 = *((_QWORD *)v16 + 2);
          v29 = sub_1C214E988((char *)(v19 > 1), v18 + 1, 1, v27);
          v18 = v28;
          v20 = v38;
          v16 = v29;
        }
        v7 = 0;
        *((_QWORD *)v16 + 2) = v20;
        *(_QWORD *)&v16[8 * v18 + 32] = v14;
        *a1 = v16;
      }
    }
    sub_1C20B5CB4();
    if (!v2)
    {
      v32 = v31;
      v33 = *a1;
      v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        v33 = sub_1C214E988(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      v36 = *((_QWORD *)v33 + 2);
      v35 = *((_QWORD *)v33 + 3);
      if (v36 >= v35 >> 1)
        v33 = sub_1C214E988((char *)(v35 > 1), v36 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v36 + 1;
      *(_QWORD *)&v33[8 * v36 + 32] = v32;
      *a1 = v33;
    }
  }
}

void sub_1C2129CD4(_DWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  unint64_t v5;
  char v6;
  char *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    v6 = 0;
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    sub_1C20B5A40();
    if (v2)
      return;
    if (!HIDWORD(v5))
    {
      *a1 = v5;
      return;
    }
    v6 = 1;
  }
  sub_1C20B727C();
  swift_allocError();
  *v7 = v6;
  swift_willThrow();
}

void sub_1C2129D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  unint64_t v5;
  char v6;
  char *v7;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    v6 = 0;
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    sub_1C20B5A40();
    if (v2)
      return;
    if (!HIDWORD(v5))
    {
      *(_DWORD *)a1 = v5;
      *(_BYTE *)(a1 + 4) = 0;
      return;
    }
    v6 = 1;
  }
  sub_1C20B727C();
  swift_allocError();
  *v7 = v6;
  swift_willThrow();
}

void sub_1C2129E30(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  int v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unint64_t v28;
  char *v29;
  _BYTE *v30;
  unint64_t v31;
  int v32;
  _BYTE *v33;
  char *v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_53:
    sub_1C20B727C();
    swift_allocError();
    *v30 = 0;
LABEL_54:
    swift_willThrow();
    return;
  }
  *(_QWORD *)(v1 + 40) = v4 + 1;
  sub_1C20B5184();
  v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 != v5 && *v6 == 91)
  {
    *(_QWORD *)(v1 + 40) = v6 + 1;
    sub_1C20B5184();
    v7 = 1;
    while (1)
    {
      v8 = *(unsigned __int8 **)(v1 + 40);
      if (v8 == v5)
      {
        if ((v7 & 1) == 0)
          goto LABEL_53;
      }
      else
      {
        v9 = *v8;
        if (v9 == 93)
        {
          *(_QWORD *)(v1 + 40) = v8 + 1;
          sub_1C20B5184();
          return;
        }
        if ((v7 & 1) == 0)
        {
          for (; v9 <= 0x23; v9 = *v8)
          {
            if (((1 << v9) & 0x100002600) != 0)
            {
              *(_QWORD *)(v1 + 40) = ++v8;
            }
            else
            {
              if (v9 != 35)
                break;
              *(_QWORD *)(v1 + 40) = v8 + 1;
              if (v8 + 1 == v5)
                goto LABEL_53;
              v10 = v8[1];
              *(_QWORD *)(v1 + 40) = v8 + 2;
              if (v10 == 10 || v10 == 13)
              {
                v8 += 2;
              }
              else
              {
                if (v8 + 2 == v5)
                  goto LABEL_53;
                v11 = v8[2];
                for (v8 += 3; ; ++v8)
                {
                  *(_QWORD *)(v1 + 40) = v8;
                  if (v11 == 10 || v11 == 13)
                    break;
                  if (v8 == v5)
                    goto LABEL_53;
                  v12 = *v8;
                  v11 = v12;
                }
              }
            }
            if (v8 == v5)
              goto LABEL_53;
          }
          if (v8 == v5 || *v8 != 44)
            goto LABEL_53;
          v20 = v8 + 1;
          *(_QWORD *)(v1 + 40) = v8 + 1;
          if (v8 + 1 != v5)
          {
            do
            {
              v22 = *v20;
              if (v22 > 0x23)
                break;
              if (((1 << v22) & 0x100002600) != 0)
              {
                v21 = v20 + 1;
                *(_QWORD *)(v1 + 40) = v20 + 1;
              }
              else
              {
                if (v22 != 35)
                  break;
                *(_QWORD *)(v1 + 40) = v20 + 1;
                if (v20 + 1 == v5)
                  break;
                v23 = v20[1];
                v21 = v20 + 2;
                *(_QWORD *)(v1 + 40) = v20 + 2;
                if (v23 != 10 && v23 != 13)
                {
                  if (v21 == v5)
                    break;
                  v24 = v20[2];
                  v21 = v20 + 3;
                  *(_QWORD *)(v1 + 40) = v20 + 3;
                  if (v24 != 10 && v24 != 13)
                  {
                    while (v21 != v5)
                    {
                      v26 = *v21++;
                      v25 = v26;
                      *(_QWORD *)(v1 + 40) = v21;
                      if (v26 == 10 || v25 == 13)
                        goto LABEL_39;
                    }
                    break;
                  }
                }
              }
LABEL_39:
              v20 = v21;
            }
            while (v21 != v5);
          }
        }
      }
      sub_1C20B5A40();
      if (v2)
        return;
      v14 = v13;
      if (HIDWORD(v13))
        goto LABEL_58;
      v15 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v15 = sub_1C214EA8C(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        *a1 = v15;
      }
      v17 = *((_QWORD *)v15 + 2);
      v18 = *((_QWORD *)v15 + 3);
      v19 = v17 + 1;
      if (v17 >= v18 >> 1)
      {
        v38 = v17 + 1;
        v27 = v15;
        v28 = *((_QWORD *)v15 + 2);
        v29 = sub_1C214EA8C((char *)(v18 > 1), v17 + 1, 1, v27);
        v17 = v28;
        v19 = v38;
        v15 = v29;
      }
      v7 = 0;
      *((_QWORD *)v15 + 2) = v19;
      *(_DWORD *)&v15[4 * v17 + 32] = v14;
      *a1 = v15;
    }
  }
  sub_1C20B5A40();
  if (!v2)
  {
    v32 = v31;
    if (HIDWORD(v31))
    {
LABEL_58:
      sub_1C20B727C();
      swift_allocError();
      *v33 = 1;
      goto LABEL_54;
    }
    v34 = *a1;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v34;
    if ((v35 & 1) == 0)
    {
      v34 = sub_1C214EA8C(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
      *a1 = v34;
    }
    v37 = *((_QWORD *)v34 + 2);
    v36 = *((_QWORD *)v34 + 3);
    if (v37 >= v36 >> 1)
      v34 = sub_1C214EA8C((char *)(v36 > 1), v37 + 1, 1, v34);
    *((_QWORD *)v34 + 2) = v37 + 1;
    *(_DWORD *)&v34[4 * v37 + 32] = v32;
    *a1 = v34;
  }
}

uint64_t sub_1C212A214(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v6;
  uint64_t result;
  _BYTE *v8;

  sub_1C20B5184();
  v6 = *(_BYTE **)(v2 + 40);
  if (v6 == *(_BYTE **)(v2 + 48) || *v6 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v8 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v2 + 40) = v6 + 1;
    sub_1C20B5184();
    result = a2();
    if (!v3)
      *a1 = result;
  }
  return result;
}

uint64_t sub_1C212A2B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v6;
  uint64_t result;
  _BYTE *v8;

  sub_1C20B5184();
  v6 = *(_BYTE **)(v2 + 40);
  if (v6 == *(_BYTE **)(v2 + 48) || *v6 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v8 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v2 + 40) = v6 + 1;
    sub_1C20B5184();
    result = a2();
    if (!v3)
    {
      *(_QWORD *)a1 = result;
      *(_BYTE *)(a1 + 8) = 0;
    }
  }
  return result;
}

void sub_1C212A350(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unint64_t v28;
  char *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_52:
    sub_1C20B727C();
    swift_allocError();
    *v30 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(_QWORD *)(v1 + 40) = v6 + 1;
      sub_1C20B5184();
      v7 = 1;
      while (1)
      {
        v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0)
            goto LABEL_52;
        }
        else
        {
          v9 = *v8;
          if (v9 == 93)
          {
            *(_QWORD *)(v1 + 40) = v8 + 1;
            sub_1C20B5184();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(_QWORD *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35)
                  break;
                *(_QWORD *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5)
                  goto LABEL_52;
                v10 = v8[1];
                *(_QWORD *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5)
                    goto LABEL_52;
                  v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(_QWORD *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13)
                      break;
                    if (v8 == v5)
                      goto LABEL_52;
                    v12 = *v8;
                    v11 = v12;
                  }
                }
              }
              if (v8 == v5)
                goto LABEL_52;
            }
            if (v8 == v5 || *v8 != 44)
              goto LABEL_52;
            v20 = v8 + 1;
            *(_QWORD *)(v1 + 40) = v8 + 1;
            if (v8 + 1 != v5)
            {
              do
              {
                v22 = *v20;
                if (v22 > 0x23)
                  break;
                if (((1 << v22) & 0x100002600) != 0)
                {
                  v21 = v20 + 1;
                  *(_QWORD *)(v1 + 40) = v20 + 1;
                }
                else
                {
                  if (v22 != 35)
                    break;
                  *(_QWORD *)(v1 + 40) = v20 + 1;
                  if (v20 + 1 == v5)
                    break;
                  v23 = v20[1];
                  v21 = v20 + 2;
                  *(_QWORD *)(v1 + 40) = v20 + 2;
                  if (v23 != 10 && v23 != 13)
                  {
                    if (v21 == v5)
                      break;
                    v24 = v20[2];
                    v21 = v20 + 3;
                    *(_QWORD *)(v1 + 40) = v20 + 3;
                    if (v24 != 10 && v24 != 13)
                    {
                      while (v21 != v5)
                      {
                        v26 = *v21++;
                        v25 = v26;
                        *(_QWORD *)(v1 + 40) = v21;
                        if (v26 == 10 || v25 == 13)
                          goto LABEL_38;
                      }
                      break;
                    }
                  }
                }
LABEL_38:
                v20 = v21;
              }
              while (v21 != v5);
            }
          }
        }
        sub_1C20B5A40();
        if (v2)
          return;
        v14 = v13;
        v15 = *a1;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v15 = sub_1C214EB8C(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
          *a1 = v15;
        }
        v17 = *((_QWORD *)v15 + 2);
        v18 = *((_QWORD *)v15 + 3);
        v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          v37 = v17 + 1;
          v27 = v15;
          v28 = *((_QWORD *)v15 + 2);
          v29 = sub_1C214EB8C((char *)(v18 > 1), v17 + 1, 1, v27);
          v17 = v28;
          v19 = v37;
          v15 = v29;
        }
        v7 = 0;
        *((_QWORD *)v15 + 2) = v19;
        *(_QWORD *)&v15[8 * v17 + 32] = v14;
        *a1 = v15;
      }
    }
    sub_1C20B5A40();
    if (!v2)
    {
      v32 = v31;
      v33 = *a1;
      v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        v33 = sub_1C214EB8C(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      v36 = *((_QWORD *)v33 + 2);
      v35 = *((_QWORD *)v33 + 3);
      if (v36 >= v35 >> 1)
        v33 = sub_1C214EB8C((char *)(v35 > 1), v36 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v36 + 1;
      *(_QWORD *)&v33[8 * v36 + 32] = v32;
      *a1 = v33;
    }
  }
}

uint64_t sub_1C212A6F8(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t result;
  _BYTE *v6;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v6 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    result = sub_1C20B6B1C();
    if (!v2)
      *a1 = result & 1;
  }
  return result;
}

void sub_1C212A794(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  char v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unint64_t v28;
  char *v29;
  _BYTE *v30;
  char v31;
  char v32;
  char *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_52:
    sub_1C20B727C();
    swift_allocError();
    *v30 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(_QWORD *)(v1 + 40) = v6 + 1;
      sub_1C20B5184();
      v7 = 1;
      while (1)
      {
        v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0)
            goto LABEL_52;
        }
        else
        {
          v9 = *v8;
          if (v9 == 93)
          {
            *(_QWORD *)(v1 + 40) = v8 + 1;
            sub_1C20B5184();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(_QWORD *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35)
                  break;
                *(_QWORD *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5)
                  goto LABEL_52;
                v10 = v8[1];
                *(_QWORD *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5)
                    goto LABEL_52;
                  v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(_QWORD *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13)
                      break;
                    if (v8 == v5)
                      goto LABEL_52;
                    v12 = *v8;
                    v11 = v12;
                  }
                }
              }
              if (v8 == v5)
                goto LABEL_52;
            }
            if (v8 == v5 || *v8 != 44)
              goto LABEL_52;
            v20 = v8 + 1;
            *(_QWORD *)(v1 + 40) = v8 + 1;
            if (v8 + 1 != v5)
            {
              do
              {
                v22 = *v20;
                if (v22 > 0x23)
                  break;
                if (((1 << v22) & 0x100002600) != 0)
                {
                  v21 = v20 + 1;
                  *(_QWORD *)(v1 + 40) = v20 + 1;
                }
                else
                {
                  if (v22 != 35)
                    break;
                  *(_QWORD *)(v1 + 40) = v20 + 1;
                  if (v20 + 1 == v5)
                    break;
                  v23 = v20[1];
                  v21 = v20 + 2;
                  *(_QWORD *)(v1 + 40) = v20 + 2;
                  if (v23 != 10 && v23 != 13)
                  {
                    if (v21 == v5)
                      break;
                    v24 = v20[2];
                    v21 = v20 + 3;
                    *(_QWORD *)(v1 + 40) = v20 + 3;
                    if (v24 != 10 && v24 != 13)
                    {
                      while (v21 != v5)
                      {
                        v26 = *v21++;
                        v25 = v26;
                        *(_QWORD *)(v1 + 40) = v21;
                        if (v26 == 10 || v25 == 13)
                          goto LABEL_38;
                      }
                      break;
                    }
                  }
                }
LABEL_38:
                v20 = v21;
              }
              while (v21 != v5);
            }
          }
        }
        v13 = sub_1C20B6B1C();
        if (v2)
          return;
        v14 = v13;
        v15 = *a1;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v15 = sub_1C214E69C(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
          *a1 = v15;
        }
        v17 = *((_QWORD *)v15 + 2);
        v18 = *((_QWORD *)v15 + 3);
        v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          v37 = v17 + 1;
          v27 = v15;
          v28 = *((_QWORD *)v15 + 2);
          v29 = sub_1C214E69C((char *)(v18 > 1), v17 + 1, 1, v27);
          v17 = v28;
          v19 = v37;
          v15 = v29;
        }
        v7 = 0;
        *((_QWORD *)v15 + 2) = v19;
        v15[v17 + 32] = v14 & 1;
        *a1 = v15;
      }
    }
    v31 = sub_1C20B6B1C();
    if (!v2)
    {
      v32 = v31;
      v33 = *a1;
      v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        v33 = sub_1C214E69C(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      v36 = *((_QWORD *)v33 + 2);
      v35 = *((_QWORD *)v33 + 3);
      if (v36 >= v35 >> 1)
        v33 = sub_1C214E69C((char *)(v35 > 1), v36 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v36 + 1;
      v33[v36 + 32] = v32 & 1;
      *a1 = v33;
    }
  }
}

uint64_t sub_1C212AB44(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  if (v4 == *(_BYTE **)(v1 + 48) || *v4 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v9 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    result = sub_1C20B5D6C();
    if (!v2)
    {
      v7 = result;
      v8 = v6;
      result = swift_bridgeObjectRelease();
      *a1 = v7;
      a1[1] = v8;
    }
  }
  return result;
}

void sub_1C212ABEC(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  char *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;

  sub_1C20B5184();
  v4 = *(unsigned __int8 **)(v1 + 40);
  v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_52:
    sub_1C20B727C();
    swift_allocError();
    *v31 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(_QWORD *)(v1 + 40) = v6 + 1;
      sub_1C20B5184();
      v7 = 1;
      while (1)
      {
        v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0)
            goto LABEL_52;
        }
        else
        {
          v9 = *v8;
          if (v9 == 93)
          {
            *(_QWORD *)(v1 + 40) = v8 + 1;
            sub_1C20B5184();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(_QWORD *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35)
                  break;
                *(_QWORD *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5)
                  goto LABEL_52;
                v10 = v8[1];
                *(_QWORD *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5)
                    goto LABEL_52;
                  v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(_QWORD *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13)
                      break;
                    if (v8 == v5)
                      goto LABEL_52;
                    v12 = *v8;
                    v11 = v12;
                  }
                }
              }
              if (v8 == v5)
                goto LABEL_52;
            }
            if (v8 == v5 || *v8 != 44)
              goto LABEL_52;
            v23 = v8 + 1;
            *(_QWORD *)(v1 + 40) = v8 + 1;
            if (v8 + 1 != v5)
            {
              do
              {
                v25 = *v23;
                if (v25 > 0x23)
                  break;
                if (((1 << v25) & 0x100002600) != 0)
                {
                  v24 = v23 + 1;
                  *(_QWORD *)(v1 + 40) = v23 + 1;
                }
                else
                {
                  if (v25 != 35)
                    break;
                  *(_QWORD *)(v1 + 40) = v23 + 1;
                  if (v23 + 1 == v5)
                    break;
                  v26 = v23[1];
                  v24 = v23 + 2;
                  *(_QWORD *)(v1 + 40) = v23 + 2;
                  if (v26 != 10 && v26 != 13)
                  {
                    if (v24 == v5)
                      break;
                    v27 = v23[2];
                    v24 = v23 + 3;
                    *(_QWORD *)(v1 + 40) = v23 + 3;
                    if (v27 != 10 && v27 != 13)
                    {
                      while (v24 != v5)
                      {
                        v29 = *v24++;
                        v28 = v29;
                        *(_QWORD *)(v1 + 40) = v24;
                        if (v29 == 10 || v28 == 13)
                          goto LABEL_38;
                      }
                      break;
                    }
                  }
                }
LABEL_38:
                v23 = v24;
              }
              while (v24 != v5);
            }
          }
        }
        v13 = sub_1C20B5D6C();
        if (v2)
          return;
        v15 = v13;
        v16 = v14;
        v17 = *a1;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v17 = sub_1C214E384(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
          *a1 = v17;
        }
        v20 = *((_QWORD *)v17 + 2);
        v19 = *((_QWORD *)v17 + 3);
        v21 = v20 + 1;
        if (v20 >= v19 >> 1)
        {
          v30 = sub_1C214E384((char *)(v19 > 1), v20 + 1, 1, v17);
          v21 = v20 + 1;
          v17 = v30;
        }
        v7 = 0;
        *((_QWORD *)v17 + 2) = v21;
        v22 = &v17[16 * v20];
        *((_QWORD *)v22 + 4) = v15;
        *((_QWORD *)v22 + 5) = v16;
        *a1 = v17;
      }
    }
    v32 = sub_1C20B5D6C();
    if (!v2)
    {
      v34 = v32;
      v35 = v33;
      v36 = *a1;
      v37 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v36;
      if ((v37 & 1) == 0)
      {
        v36 = sub_1C214E384(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
        *a1 = v36;
      }
      v39 = *((_QWORD *)v36 + 2);
      v38 = *((_QWORD *)v36 + 3);
      if (v39 >= v38 >> 1)
        v36 = sub_1C214E384((char *)(v38 > 1), v39 + 1, 1, v36);
      *((_QWORD *)v36 + 2) = v39 + 1;
      v40 = &v36[16 * v39];
      *((_QWORD *)v40 + 4) = v34;
      *((_QWORD *)v40 + 5) = v35;
      *a1 = v36;
    }
  }
}

uint64_t sub_1C212AF98(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  sub_1C20B5184();
  v6 = *(_BYTE **)(v2 + 40);
  if (v6 == *(_BYTE **)(v2 + 48) || *v6 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v11 = 0;
    return swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v2 + 40) = v6 + 1;
    sub_1C20B5184();
    result = sub_1C20B6020();
    if (!v3)
    {
      v9 = result;
      v10 = v8;
      result = a2(*a1, a1[1]);
      *a1 = v9;
      a1[1] = v10;
    }
  }
  return result;
}

void sub_1C212B04C(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  _BYTE *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  unint64_t v32;

  sub_1C20B5184();
  v4 = *(_BYTE **)(v1 + 40);
  v5 = *(_BYTE **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_18:
    sub_1C20B727C();
    swift_allocError();
    *v22 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v1 + 40) = v4 + 1;
    sub_1C20B5184();
    v6 = *(_BYTE **)(v1 + 40);
    if (v6 == v5 || *v6 != 91)
    {
      v23 = sub_1C20B6020();
      if (!v2)
      {
        v25 = v23;
        v26 = v24;
        v27 = *a1;
        sub_1C20A8008(v23, v24);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v27 = sub_1C214E784(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
          *a1 = v27;
        }
        v30 = *((_QWORD *)v27 + 2);
        v29 = *((_QWORD *)v27 + 3);
        if (v30 >= v29 >> 1)
        {
          v27 = sub_1C214E784((char *)(v29 > 1), v30 + 1, 1, v27);
          *a1 = v27;
        }
        *((_QWORD *)v27 + 2) = v30 + 1;
        v31 = &v27[16 * v30];
        *((_QWORD *)v31 + 4) = v25;
        *((_QWORD *)v31 + 5) = v26;
        sub_1C20A8058(v25, v26);
        *a1 = v27;
      }
    }
    else
    {
      *(_QWORD *)(v1 + 40) = v6 + 1;
      sub_1C20B5184();
      v7 = *(_BYTE **)(v1 + 40);
      if (v7 == v5 || *v7 != 93)
      {
        while (1)
        {
          v8 = sub_1C20B6020();
          if (v2)
            break;
          v10 = v8;
          v11 = v9;
          v12 = *a1;
          sub_1C20A8008(v8, v9);
          v13 = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v12;
          if ((v13 & 1) == 0)
          {
            v12 = sub_1C214E784(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
            *a1 = v12;
          }
          v14 = *((_QWORD *)v12 + 2);
          v15 = *((_QWORD *)v12 + 3);
          v16 = v14 + 1;
          if (v14 >= v15 >> 1)
          {
            v32 = v14 + 1;
            v19 = v12;
            v20 = *((_QWORD *)v12 + 2);
            v21 = sub_1C214E784((char *)(v15 > 1), v14 + 1, 1, v19);
            v14 = v20;
            v16 = v32;
            v12 = v21;
            *a1 = v21;
          }
          *((_QWORD *)v12 + 2) = v16;
          v17 = &v12[16 * v14];
          *((_QWORD *)v17 + 4) = v10;
          *((_QWORD *)v17 + 5) = v11;
          sub_1C20A8058(v10, v11);
          *a1 = v12;
          v7 = *(_BYTE **)(v1 + 40);
          if (v7 != v5 && *v7 == 93)
            goto LABEL_7;
          sub_1C20B5184();
          v18 = *(_BYTE **)(v1 + 40);
          if (v18 == v5 || *v18 != 44)
            goto LABEL_18;
          *(_QWORD *)(v1 + 40) = v18 + 1;
          sub_1C20B5184();
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v1 + 40) = v7 + 1;
        sub_1C20B5184();
      }
    }
  }
}

void sub_1C212B2C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  char v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  _QWORD v23[2];

  v7 = sub_1C2175690();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)v23 - v14;
  v16 = sub_1C20B6CD8();
  if (!v3)
  {
    if ((v18 & 1) != 0)
    {
      sub_1C20B5CB4();
      if (v21 != (int)v21)
      {
        sub_1C20B727C();
        swift_allocError();
        *v22 = 0;
        goto LABEL_8;
      }
      (*(void (**)(void))(a2 + 32))();
      v19 = *(_QWORD *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, a1) == 1)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
        goto LABEL_5;
      }
    }
    else
    {
      sub_1C20B7688(v16, v17, a1, a2, (uint64_t)v15);
      v19 = *(_QWORD *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, a1) == 1)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
LABEL_5:
        sub_1C20B727C();
        swift_allocError();
        *v20 = 8;
LABEL_8:
        swift_willThrow();
        return;
      }
      v12 = v15;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a3, v12, a1);
  }
}

void sub_1C212B49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20B5184();
  v11 = *(_BYTE **)(v3 + 40);
  if (v11 == *(_BYTE **)(v3 + 48) || *v11 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v13 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v3 + 40) = v11 + 1;
    sub_1C20B5184();
    sub_1C212B2C8(a2, a3, (uint64_t)v10);
    if (!v4)
    {
      v12 = sub_1C2175690();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, a2);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, a2);
    }
  }
}

void sub_1C212B5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20B5184();
  v11 = *(_BYTE **)(v3 + 40);
  if (v11 == *(_BYTE **)(v3 + 48) || *v11 != 58)
  {
    sub_1C20B727C();
    swift_allocError();
    *v12 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v3 + 40) = v11 + 1;
    sub_1C20B5184();
    sub_1C212B2C8(a2, a3, (uint64_t)v10);
    if (!v4)
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, a2);
    }
  }
}

void sub_1C212B6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  char i;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  _QWORD v35[2];
  uint64_t v36;

  v36 = a3;
  v35[1] = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v7, v10);
  v13 = (char *)v35 - v12;
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)v35 - v15;
  sub_1C20B5184();
  v17 = *(_BYTE **)(v3 + 40);
  v18 = *(_BYTE **)(v3 + 48);
  if (v17 == v18 || *v17 != 58)
  {
LABEL_47:
    sub_1C20B727C();
    swift_allocError();
    *v34 = 0;
    swift_willThrow();
  }
  else
  {
    *(_QWORD *)(v3 + 40) = v17 + 1;
    sub_1C20B5184();
    v19 = *(_BYTE **)(v3 + 40);
    if (v19 != v18 && *v19 == 91)
    {
      *(_QWORD *)(v3 + 40) = v19 + 1;
      sub_1C20B5184();
      for (i = 1; ; i = 0)
      {
        v22 = *(unsigned __int8 **)(v3 + 40);
        v21 = *(unsigned __int8 **)(v3 + 48);
        if (v22 == v21)
          break;
        v23 = *v22;
        if (v23 == 93)
        {
          *(_QWORD *)(v3 + 40) = v22 + 1;
          sub_1C20B5184();
          return;
        }
        if ((i & 1) == 0)
        {
          for (; v23 <= 0x23; v23 = *v22)
          {
            if (((1 << v23) & 0x100002600) != 0)
            {
              *(_QWORD *)(v3 + 40) = ++v22;
            }
            else
            {
              if (v23 != 35)
                break;
              *(_QWORD *)(v3 + 40) = v22 + 1;
              if (v22 + 1 == v21)
                goto LABEL_47;
              v24 = v22[1];
              *(_QWORD *)(v3 + 40) = v22 + 2;
              if (v24 == 10 || v24 == 13)
              {
                v22 += 2;
              }
              else
              {
                if (v22 + 2 == v21)
                  goto LABEL_47;
                v25 = v22[2];
                for (v22 += 3; ; ++v22)
                {
                  *(_QWORD *)(v3 + 40) = v22;
                  if (v25 == 10 || v25 == 13)
                    break;
                  if (v22 == v21)
                    goto LABEL_47;
                  v26 = *v22;
                  v25 = v26;
                }
              }
            }
            if (v22 == v21)
              goto LABEL_47;
          }
LABEL_27:
          if (v22 == v21 || *v22 != 44)
            goto LABEL_47;
          v27 = v22 + 1;
          *(_QWORD *)(v3 + 40) = v22 + 1;
          if (v22 + 1 != v21)
          {
            do
            {
              v29 = *v27;
              if (v29 > 0x23)
                break;
              if (((1 << v29) & 0x100002600) != 0)
              {
                v28 = v27 + 1;
                *(_QWORD *)(v3 + 40) = v27 + 1;
              }
              else
              {
                if (v29 != 35)
                  break;
                *(_QWORD *)(v3 + 40) = v27 + 1;
                if (v27 + 1 == v21)
                  break;
                v30 = v27[1];
                v28 = v27 + 2;
                *(_QWORD *)(v3 + 40) = v27 + 2;
                if (v30 != 10 && v30 != 13)
                {
                  if (v28 == v21)
                    break;
                  v31 = v27[2];
                  v28 = v27 + 3;
                  *(_QWORD *)(v3 + 40) = v27 + 3;
                  if (v31 != 10 && v31 != 13)
                  {
                    while (v28 != v21)
                    {
                      v33 = *v28++;
                      v32 = v33;
                      *(_QWORD *)(v3 + 40) = v28;
                      if (v33 == 10 || v32 == 13)
                        goto LABEL_33;
                    }
                    break;
                  }
                }
              }
LABEL_33:
              v27 = v28;
            }
            while (v28 != v21);
          }
        }
LABEL_30:
        sub_1C212B2C8(a2, v36, (uint64_t)v16);
        if (v4)
          return;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v16, a2);
        sub_1C21755F4();
        sub_1C21755DC();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v16, a2);
      }
      if ((i & 1) != 0)
        goto LABEL_30;
      goto LABEL_27;
    }
    sub_1C212B2C8(a2, v36, (uint64_t)v9);
    if (!v4)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v9, a2);
      sub_1C21755F4();
      sub_1C21755DC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a2);
    }
  }
}

uint64_t sub_1C212BA9C(char *a1, ValueMetadata *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *Description;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, ValueMetadata *);
  int v27;
  void (*v28)(char *, uint64_t);
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  _BYTE *v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _BYTE v72[64];
  uint64_t v73;
  __int16 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;

  v4 = v3;
  v64 = a3;
  Description = a2[-1].Description;
  MEMORY[0x1E0C80A78](a1, a2);
  v58 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_1C2175690();
  v65 = *(_QWORD *)(v78 - 8);
  v10 = MEMORY[0x1E0C80A78](v78, v9);
  v57 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v60 = (char *)&v56 - v14;
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v18 = (char *)&v56 - v17;
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = (char *)&v56 - v20;
  v22 = *(_BYTE **)(v3 + 40);
  if (v22 != *(_BYTE **)(v3 + 48) && *v22 == 58)
  {
    *(_QWORD *)(v3 + 40) = v22 + 1;
    sub_1C20B5184();
  }
  v23 = v65;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  v63 = a1;
  v25 = v78;
  v59 = v24;
  v24(v21, (uint64_t)a1, v78);
  v62 = Description;
  v26 = (uint64_t (*)(char *, uint64_t, ValueMetadata *))Description[6];
  v27 = v26(v21, 1, a2);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v21, v25);
  if (v27 == 1)
  {
    (*(void (**)(ValueMetadata *))(v64 + 16))(a2);
    ((void (*)(char *, _QWORD, uint64_t, ValueMetadata *))v62[7])(v18, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v63, v18, v78);
  }
  v29 = *(unsigned __int8 **)(v4 + 40);
  if (v29 == *(unsigned __int8 **)(v4 + 48))
    goto LABEL_10;
  v30 = *v29;
  *(_QWORD *)(v4 + 40) = v29 + 1;
  sub_1C20B5184();
  if (v30 != 60)
  {
    if (v30 == 123)
    {
      v31 = 125;
      goto LABEL_12;
    }
LABEL_10:
    sub_1C20B727C();
    swift_allocError();
    *v32 = 0;
    return swift_willThrow();
  }
  v31 = 62;
LABEL_12:
  sub_1C21284DC(v4, (uint64_t)&v69);
  v73 = 0;
  v74 = 256;
  v75 = 0u;
  v76 = 0u;
  v77 = 0u;
  sub_1C21284DC((uint64_t)&v69, (uint64_t)v72);
  v74 = v31;
  v34 = swift_conformsToProtocol2();
  if (v34)
    v35 = v34;
  else
    v35 = 0;
  if (v34)
    v36 = a2;
  else
    v36 = 0;
  if (!v36)
  {
    sub_1C20B727C();
    swift_allocError();
    *v40 = 6;
    swift_willThrow();
    sub_1C2128518((uint64_t)&v69);
    return sub_1C212854C((uint64_t)v72);
  }
  (*(void (**)(__int128 *__return_ptr))(v35 + 8))(&v66);
  sub_1C2128518((uint64_t)&v69);
  v56 = v66;
  v37 = v67;
  v38 = v68;
  sub_1C20A8840(v75);
  v75 = v56;
  *(_QWORD *)&v76 = v37;
  *((_QWORD *)&v76 + 1) = v38;
  *(_QWORD *)&v77 = a2;
  *((_QWORD *)&v77 + 1) = v64;
  if (a2 != &type metadata for Google_Protobuf_Any)
  {
    if (v26(v63, 1, a2) != 1)
    {
      v39 = v61;
      (*(void (**)(_BYTE *, ValueMetadata *, _UNKNOWN **, ValueMetadata *))(v64 + 64))(v72, &type metadata for TextFormatDecoder, &off_1E7BDE678, a2);
      if (!v39)
      {
LABEL_22:
        sub_1C21284DC((uint64_t)v72, (uint64_t)&v69);
        sub_1C212854C((uint64_t)v72);
        return sub_1C212F8D0((uint64_t)&v69, v4);
      }
      return sub_1C212854C((uint64_t)v72);
    }
    __break(1u);
    goto LABEL_40;
  }
  v18 = v60;
  v59(v60, (uint64_t)v63, v78);
  if (v26(v18, 1, &type metadata for Google_Protobuf_Any) == 1)
  {
LABEL_40:
    result = ((uint64_t (*)(char *, uint64_t))v28)(v18, v78);
    __break(1u);
    return result;
  }
  v41 = v62;
  ((void (*)(char *, char *, ValueMetadata *))v62[4])(v58, v18, &type metadata for Google_Protobuf_Any);
  swift_dynamicCast();
  v42 = v69;
  v43 = v70;
  v44 = v71;
  v45 = v61;
  v46 = sub_1C20B6D64();
  if (!v45)
  {
    v48 = v47;
    if (v47)
    {
      v49 = (uint64_t)v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        v50 = (_QWORD *)swift_retain();
        v51 = sub_1C2155710(v50);
        swift_release();
        v44 = v51;
      }
      swift_retain();
      sub_1C21531A8(v49, v48, (uint64_t)v72);
      swift_bridgeObjectRelease();
      v55 = v57;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        v52 = (_QWORD *)swift_retain();
        v53 = sub_1C2155710(v52);
        swift_release();
        v44 = v53;
      }
      v54 = swift_retain();
      sub_1C213EC58(v54, (uint64_t)v72);
      v55 = v57;
    }
    swift_release();
    if (v44)
    {
      v69 = v42;
      v70 = v43;
      v71 = v44;
      sub_1C20A8008(v42, v43);
      swift_retain();
      swift_dynamicCast();
      ((void (*)(char *, _QWORD, uint64_t, ValueMetadata *))v41[7])(v55, 0, 1, &type metadata for Google_Protobuf_Any);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, ValueMetadata *))v41[7])(v55, 1, 1, &type metadata for Google_Protobuf_Any);
    }
    (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v63, v55, v78);
    sub_1C20B8490(v42, v43, v44);
    goto LABEL_22;
  }
  sub_1C212854C((uint64_t)v72);
  return sub_1C20B8490(v42, v43, v44);
}

void sub_1C212C14C(uint64_t a1, ValueMetadata *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**Description)(char *, ValueMetadata *);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  _BYTE *v20;
  int v21;
  ValueMetadata *v22;
  char i;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  int v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 v31;
  unsigned __int8 *v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  __int128 *v38;
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  ValueMetadata *v46;
  char *v47;
  void (**v48)(char *, ValueMetadata *);
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  uint64_t v51;
  unsigned __int8 *j;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  BOOL v58;
  uint64_t (*v59)();
  uint64_t v60;
  unsigned __int8 *v61;
  unsigned __int8 *v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unsigned __int8 *v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;
  _BYTE *v78;
  __int16 v79;
  void (**v80)(char *, ValueMetadata *);
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t (*v88)();
  uint64_t v89;
  __int128 v90;
  char *v91;
  char *v92;
  __int128 *v93;
  __int128 v94;
  uint64_t v95;
  void (**v96)(char *, ValueMetadata *);
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  _OWORD v110[2];
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;

  v5 = v4;
  v6 = v3;
  v117 = a3;
  Description = (void (**)(char *, ValueMetadata *))a2[-1].Description;
  v95 = a1;
  v96 = Description;
  v9 = MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v15 = (char *)&v84 - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v84 - v17;
  v19 = *(_BYTE **)(v3 + 40);
  v20 = *(_BYTE **)(v3 + 48);
  if (v19 != v20 && *v19 == 58)
  {
    *(_QWORD *)(v3 + 40) = v19 + 1;
    sub_1C20B5184();
    v19 = *(_BYTE **)(v3 + 40);
  }
  if (v19 == v20)
    goto LABEL_105;
  v21 = *v19;
  *(_QWORD *)(v3 + 40) = v19 + 1;
  sub_1C20B5184();
  if (v21 == 60)
  {
    v79 = 62;
  }
  else
  {
    if (v21 != 123)
    {
      if (v21 == 91)
      {
        v91 = v15;
        v92 = v18;
        v93 = &v105;
        v22 = &type metadata for Google_Protobuf_Any;
        v90 = xmmword_1C2175DE0;
        for (i = 1; ; i = 0)
        {
          v25 = *(unsigned __int8 **)(v6 + 40);
          v26 = *(unsigned __int8 **)(v6 + 48);
          if (v25 != v26 && *v25 == 93)
          {
            *(_QWORD *)(v6 + 40) = v25 + 1;
            sub_1C20B5184();
            return;
          }
          if ((i & 1) == 0)
          {
            sub_1C20B5184();
            v27 = *(unsigned __int8 **)(v6 + 40);
            if (v27 == v26 || *v27 != 44)
              break;
            *(_QWORD *)(v6 + 40) = v27 + 1;
            sub_1C20B5184();
            v25 = *(unsigned __int8 **)(v6 + 40);
          }
          if (v25 == v26)
            break;
          v30 = *v25;
          v29 = v25 + 1;
          v28 = v30;
          *(_QWORD *)(v6 + 40) = v29;
          if (v29 != v26)
          {
            do
            {
              v33 = *v29;
              if (v33 > 0x23)
                break;
              if (((1 << v33) & 0x100002600) != 0)
              {
                v32 = v29 + 1;
                *(_QWORD *)(v6 + 40) = v29 + 1;
              }
              else
              {
                if (v33 != 35)
                  break;
                *(_QWORD *)(v6 + 40) = v29 + 1;
                if (v29 + 1 == v26)
                  break;
                v34 = v29[1];
                v32 = v29 + 2;
                *(_QWORD *)(v6 + 40) = v29 + 2;
                if (v34 != 10 && v34 != 13)
                {
                  if (v32 == v26)
                    break;
                  v35 = v29[2];
                  v32 = v29 + 3;
                  *(_QWORD *)(v6 + 40) = v29 + 3;
                  if (v35 != 10 && v35 != 13)
                  {
                    while (v32 != v26)
                    {
                      v37 = *v32++;
                      v36 = v37;
                      *(_QWORD *)(v6 + 40) = v32;
                      if (v37 == 10 || v36 == 13)
                        goto LABEL_24;
                    }
                    break;
                  }
                }
              }
LABEL_24:
              v29 = v32;
            }
            while (v32 != v26);
          }
          if (v28 == 60)
          {
            v31 = 62;
          }
          else
          {
            if (v28 != 123)
              break;
            v31 = 125;
          }
          sub_1C21284DC(v6, (uint64_t)&v108);
          *(_QWORD *)&v104 = 0;
          WORD4(v104) = 256;
          v38 = v93;
          *v93 = 0u;
          v38[1] = 0u;
          v38[2] = 0u;
          sub_1C21284DC((uint64_t)&v108, (uint64_t)&v100);
          WORD4(v104) = v31;
          v39 = swift_conformsToProtocol2();
          if (v39)
            v40 = v39;
          else
            v40 = 0;
          if (v39)
            v41 = a2;
          else
            v41 = 0;
          if (!v41)
          {
            sub_1C20B727C();
            swift_allocError();
            *v83 = 6;
            swift_willThrow();
            sub_1C2128518((uint64_t)&v108);
            sub_1C212854C((uint64_t)&v100);
            return;
          }
          (*(void (**)(__int128 *__return_ptr))(v40 + 8))(&v97);
          sub_1C2128518((uint64_t)&v108);
          v94 = v97;
          v42 = v98;
          v43 = v99;
          sub_1C20A8840(v105);
          v105 = v94;
          *(_QWORD *)&v106 = v42;
          *((_QWORD *)&v106 + 1) = v43;
          v44 = v117;
          *(_QWORD *)&v107 = a2;
          *((_QWORD *)&v107 + 1) = v117;
          v110[0] = v100;
          v110[1] = v101;
          v111 = v102;
          v112 = v103;
          v113 = v104;
          v114 = v94;
          v115 = v106;
          v116 = v107;
          if (a2 == v22)
          {
            if (qword_1EF75CD58 != -1)
              swift_once();
            *(_QWORD *)&v94 = qword_1EF76E188;
            v50 = (unsigned __int8 *)*((_QWORD *)&v111 + 1);
            v49 = (unsigned __int8 *)v112;
            if (*((_QWORD *)&v111 + 1) != (_QWORD)v112)
            {
              while (1)
              {
                v53 = *v50;
                if (v53 > 0x23)
                  break;
                if (((1 << v53) & 0x100002600) != 0)
                {
                  j = v50 + 1;
                  *((_QWORD *)&v111 + 1) = v50 + 1;
                }
                else
                {
                  if (v53 != 35)
                    break;
                  *((_QWORD *)&v111 + 1) = v50 + 1;
                  if (v50 + 1 == (unsigned __int8 *)v112)
                    goto LABEL_88;
                  v54 = v50[1];
                  j = v50 + 2;
                  *((_QWORD *)&v111 + 1) = v50 + 2;
                  if (v54 != 10 && v54 != 13)
                  {
                    if (j == (unsigned __int8 *)v112)
                      goto LABEL_88;
                    v55 = v50[2];
                    for (j = v50 + 3; ; ++j)
                    {
                      *((_QWORD *)&v111 + 1) = j;
                      if (v55 == 10 || v55 == 13)
                        break;
                      if (j == (unsigned __int8 *)v112)
                        goto LABEL_88;
                      v56 = *j;
                      v55 = v56;
                    }
                  }
                }
                v50 = j;
                if (j == (unsigned __int8 *)v112)
                  goto LABEL_88;
              }
            }
            if (v50 == (unsigned __int8 *)v112 || *v50 != 91)
            {
LABEL_88:
              v63 = (_QWORD *)v94;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                type metadata accessor for AnyMessageStorage();
                swift_allocObject();
                v70 = (_QWORD *)swift_retain();
                v71 = sub_1C2155710(v70);
                swift_release();
                v63 = (_QWORD *)v71;
              }
              v24 = swift_retain();
              sub_1C213EC58(v24, (uint64_t)v110);
              if (v5)
                goto LABEL_124;
            }
            else
            {
              *((_QWORD *)&v111 + 1) = v50 + 1;
              if (v50 + 1 == (unsigned __int8 *)v112)
                goto LABEL_114;
              if ((v50[1] & 0xDFu) - 91 < 0xFFFFFFE6)
                goto LABEL_114;
              *((_QWORD *)&v111 + 1) = v50 + 2;
              if (v50 + 2 == (unsigned __int8 *)v112)
                goto LABEL_114;
              v51 = 0;
              while (1)
              {
                v57 = v50[v51 + 2];
                v58 = (v57 - 58) > 0xFFFFFFF5 || (v57 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
                if (!v58 && (v57 - 46) >= 2 && v57 != 95)
                  break;
                *((_QWORD *)&v111 + 1) = &v50[v51++ + 3];
                if (&v50[v51 + 2] == (unsigned __int8 *)v112)
                  goto LABEL_114;
              }
              if (v57 != 93)
              {
LABEL_114:
                swift_retain();
                goto LABEL_115;
              }
              v89 = v51 + 1;
              swift_retain();
              v59 = sub_1C20AD098((char *)v50 + 1, v89);
              if (!v60)
                goto LABEL_115;
              v61 = &v50[v51 + 2];
              if (v61 == v49 || *v61 != 93)
              {
                swift_bridgeObjectRelease();
LABEL_115:
                sub_1C20B727C();
                swift_allocError();
                *v82 = 0;
                swift_willThrow();
LABEL_116:
                sub_1C20A8058(0, 0xC000000000000000);
                swift_release();
                sub_1C212854C((uint64_t)v110);
                return;
              }
              v62 = &v50[v51 + 3];
              *((_QWORD *)&v111 + 1) = v62;
              v22 = &type metadata for Google_Protobuf_Any;
              v63 = (_QWORD *)v94;
              if (v62 != v49)
              {
                do
                {
                  v73 = *v62;
                  if (v73 > 0x23)
                    break;
                  if (((1 << v73) & 0x100002600) != 0)
                  {
                    v72 = v62 + 1;
                    *((_QWORD *)&v111 + 1) = v62 + 1;
                  }
                  else
                  {
                    if (v73 != 35)
                      break;
                    *((_QWORD *)&v111 + 1) = v62 + 1;
                    if (v62 + 1 == v49)
                      break;
                    v74 = v62[1];
                    v72 = v62 + 2;
                    *((_QWORD *)&v111 + 1) = v62 + 2;
                    if (v74 != 10 && v74 != 13)
                    {
                      if (v72 == v49)
                        break;
                      v75 = v62[2];
                      v72 = v62 + 3;
                      *((_QWORD *)&v111 + 1) = v62 + 3;
                      if (v75 != 10 && v75 != 13)
                      {
                        while (v72 != v49)
                        {
                          v77 = *v72++;
                          v76 = v77;
                          *((_QWORD *)&v111 + 1) = v72;
                          if (v77 == 10 || v76 == 13)
                            goto LABEL_91;
                        }
                        break;
                      }
                    }
                  }
LABEL_91:
                  v62 = v72;
                }
                while (v72 != v49);
              }
              v88 = v59;
              v89 = v60;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                type metadata accessor for AnyMessageStorage();
                v64 = swift_allocObject();
                *(_QWORD *)(v64 + 16) = 0;
                v65 = (_QWORD *)(v64 + 16);
                *(_QWORD *)(v64 + 24) = 0xE000000000000000;
                *(_OWORD *)(v64 + 32) = v90;
                v86 = v64 + 32;
                v87 = (_QWORD *)v64;
                *(_BYTE *)(v64 + 72) = 0;
                swift_beginAccess();
                v66 = v63[2];
                v84 = v63[3];
                v85 = v66;
                swift_beginAccess();
                v67 = v87;
                *v65 = v85;
                v67[3] = v84;
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_beginAccess();
                sub_1C212F90C(v63 + 4, (uint64_t)&v100);
                swift_release();
                v68 = v86;
                swift_beginAccess();
                sub_1C212F948((uint64_t)&v100, v68);
                swift_endAccess();
                swift_release();
                v63 = v87;
              }
              v69 = v89;
              swift_retain();
              sub_1C21531A8((uint64_t)v88, v69, (uint64_t)v110);
              if (v5)
              {
                swift_bridgeObjectRelease();
LABEL_124:
                swift_release();
                goto LABEL_116;
              }
              swift_bridgeObjectRelease();
            }
            swift_release();
            v100 = v90;
            *(_QWORD *)&v101 = v63;
            sub_1C20A8008(0, 0xC000000000000000);
            swift_retain();
            swift_dynamicCast();
            sub_1C21755F4();
            sub_1C21755DC();
            sub_1C20A8058(0, 0xC000000000000000);
            swift_release();
          }
          else
          {
            v45 = v5;
            v46 = v22;
            v47 = v91;
            (*(void (**)(ValueMetadata *, uint64_t))(v117 + 16))(a2, v117);
            (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, ValueMetadata *, uint64_t))(v44 + 64))(v110, &type metadata for TextFormatDecoder, &off_1E7BDE678, a2, v44);
            if (v45)
            {
              v96[1](v47, a2);
              sub_1C212854C((uint64_t)v110);
              return;
            }
            v48 = v96;
            ((void (*)(char *, char *, ValueMetadata *))v96[2])(v92, v47, a2);
            sub_1C21755F4();
            sub_1C21755DC();
            v48[1](v47, a2);
            v22 = v46;
            v5 = 0;
          }
          sub_1C21284DC((uint64_t)v110, (uint64_t)&v100);
          sub_1C212854C((uint64_t)v110);
          sub_1C212F8D0((uint64_t)&v100, v6);
        }
      }
LABEL_105:
      sub_1C20B727C();
      swift_allocError();
      *v78 = 0;
      swift_willThrow();
      return;
    }
    v79 = 125;
  }
  sub_1C21284DC(v6, (uint64_t)&v100);
  sub_1C21281A4((uint64_t)a2, v117, (uint64_t)&v100, v79, (uint64_t)v110);
  v80 = v96;
  if (!v4)
  {
    if (a2 == &type metadata for Google_Protobuf_Any)
    {
      v100 = xmmword_1C2175DE0;
      if (qword_1EF75CD58 != -1)
        swift_once();
      *(_QWORD *)&v101 = qword_1EF76E188;
      swift_retain();
      sub_1C213EB24((uint64_t)v110);
      v108 = v100;
      v109 = v101;
      sub_1C20A8008(v100, *((unint64_t *)&v100 + 1));
      swift_retain();
      swift_dynamicCast();
      sub_1C21755F4();
      sub_1C21755DC();
      sub_1C20A8058(v100, *((unint64_t *)&v100 + 1));
      swift_release();
    }
    else
    {
      v81 = v117;
      (*(void (**)(ValueMetadata *, uint64_t))(v117 + 16))(a2, v117);
      (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, ValueMetadata *, uint64_t))(v81 + 64))(v110, &type metadata for TextFormatDecoder, &off_1E7BDE678, a2, v81);
      ((void (*)(char *, char *, ValueMetadata *))v80[2])(v18, v11, a2);
      sub_1C21755F4();
      sub_1C21755DC();
      v80[1](v11, a2);
    }
    sub_1C21284DC((uint64_t)v110, (uint64_t)&v100);
    sub_1C212854C((uint64_t)v110);
    sub_1C212F8D0((uint64_t)&v100, v6);
  }
}

uint64_t sub_1C212CD28(char *a1, ValueMetadata *a2, uint64_t a3)
{
  return sub_1C212BA9C(a1, a2, a3);
}

void sub_1C212CD3C(uint64_t a1, ValueMetadata *a2, uint64_t a3)
{
  sub_1C212C14C(a1, a2, a3);
}

uint64_t (*sub_1C212CD50(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5))()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  int v42;
  int v43;
  _BYTE *v44;
  char *v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  char *i;
  int v52;
  int v53;
  int v54;
  int v55;
  BOOL v56;
  uint64_t v57;
  int v58;
  unsigned __int8 *v60;
  unsigned __int8 *v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t (*result)();
  uint64_t v68;
  uint64_t (*v69)();
  uint64_t v70;
  int v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  BOOL v79;
  char v80;
  BOOL v81;
  char v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t, uint64_t);
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;

  v6 = v5;
  v104 = a1;
  v101 = *(_QWORD *)(a5 + 8);
  v102 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v109 = (char *)&v99 - v12;
  v13 = *(_QWORD *)(a4 + 8);
  v115 = a2;
  v116 = v13;
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v106 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17, v19);
  v112 = (char *)&v99 - v20;
  v21 = sub_1C2175690();
  v22 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x1E0C80A78](v21, v23);
  v103 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24, v26);
  v105 = (char *)&v99 - v28;
  MEMORY[0x1E0C80A78](v27, v29);
  v31 = (char *)&v99 - v30;
  v32 = sub_1C2175690();
  v118 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x1E0C80A78](v32, v33);
  v110 = (char *)&v99 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34, v36);
  v113 = v15;
  v37 = *(void (**)(void))(v15 + 56);
  v120 = (char *)&v99 - v38;
  v111 = v14;
  v37();
  v107 = v10;
  v108 = AssociatedTypeWitness;
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v119 = v31;
  v39(v31, 1, 1, AssociatedTypeWitness);
  v40 = *(unsigned __int8 **)(v6 + 40);
  v41 = *(unsigned __int8 **)(v6 + 48);
  if (v40 == v41)
    goto LABEL_6;
  v114 = v32;
  v42 = *v40;
  *(_QWORD *)(v6 + 40) = v40 + 1;
  sub_1C20B5184();
  if (v42 == 60)
  {
    v99 = v22;
    v100 = v21;
    v43 = 62;
  }
  else
  {
    v79 = v42 == 123;
    v32 = v114;
    if (!v79)
    {
LABEL_6:
      sub_1C20B727C();
      swift_allocError();
      *v44 = 0;
      swift_willThrow();
      goto LABEL_7;
    }
    v99 = v22;
    v100 = v21;
    v43 = 125;
  }
  v47 = *(unsigned __int8 **)(v6 + 40);
  v48 = v115;
  v49 = v117;
  while (1)
  {
    do
    {
LABEL_11:
      if (v47 == v41)
      {
LABEL_30:
        i = (char *)v41;
      }
      else
      {
        v50 = *v47;
        if (v50 == v43)
        {
          *(_QWORD *)(v6 + 40) = v47 + 1;
          sub_1C20B5184();
          v46 = v118;
          v84 = v110;
          v32 = v114;
          (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v110, v120, v114);
          v85 = v113;
          v86 = v111;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v84, 1, v111) == 1)
          {
            (*(void (**)(char *, uint64_t))(v46 + 8))(v84, v32);
            v22 = v99;
            v21 = v100;
            v45 = v119;
          }
          else
          {
            v117 = v49;
            v102 = v39;
            (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v112, v84, v86);
            v22 = v99;
            v21 = v100;
            v87 = v105;
            v45 = v119;
            (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v105, v119, v100);
            v88 = v86;
            v89 = v87;
            v90 = v85;
            v91 = v107;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v89, 1, v108) != 1)
            {
              v93 = v89;
              v94 = v90;
              v95 = v108;
              (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v109, v93, v108);
              (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v106, v112, v88);
              v96 = v103;
              (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v103, v109, v95);
              v102(v96, 0, 1, v95);
              swift_getAssociatedConformanceWitness();
              sub_1C21753E4();
              sub_1C21753FC();
              (*(void (**)(char *, uint64_t))(v91 + 8))(v109, v95);
              (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v88);
              (*(void (**)(char *, uint64_t))(v22 + 8))(v45, v21);
              return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v120, v32);
            }
            (*(void (**)(char *, uint64_t))(v90 + 8))(v112, v88);
            (*(void (**)(char *, uint64_t))(v22 + 8))(v89, v21);
          }
          sub_1C20B727C();
          swift_allocError();
          *v92 = 0;
          swift_willThrow();
          goto LABEL_118;
        }
        for (i = (char *)v47; v50 <= 0x23; v50 = *i)
        {
          if (((1 << v50) & 0x100002600) != 0)
          {
            *(_QWORD *)(v6 + 40) = ++i;
          }
          else
          {
            if (v50 != 35)
              break;
            *(_QWORD *)(v6 + 40) = i + 1;
            if (i + 1 == (char *)v41)
              goto LABEL_30;
            v52 = i[1];
            *(_QWORD *)(v6 + 40) = i + 2;
            if (v52 == 10 || v52 == 13)
            {
              i += 2;
            }
            else
            {
              if (i + 2 == (char *)v41)
                goto LABEL_30;
              v53 = i[2];
              for (i += 3; ; ++i)
              {
                *(_QWORD *)(v6 + 40) = i;
                if (v53 == 10 || v53 == 13)
                  break;
                if (i == (char *)v41)
                  goto LABEL_30;
                v54 = *i;
                v53 = v54;
              }
            }
          }
          if (i == (char *)v41)
            goto LABEL_30;
        }
      }
      v47 = v41;
    }
    while (i == (char *)v41);
    v55 = *i;
    if (v55 == 91
      || ((v55 - 58) <= 0xFFFFFFF6 ? (v56 = (v55 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6) : (v56 = 1), !v56))
    {
      sub_1C20B727C();
      swift_allocError();
      *v97 = 0;
      goto LABEL_121;
    }
    v57 = 0;
    while (1)
    {
      v58 = i[v57];
      if ((v58 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v58 != 95 && (v58 - 48) > 9)
        break;
      *(_QWORD *)(v6 + 40) = &i[++v57];
      if (&i[v57] == (char *)v41)
      {
        v57 = v41 - (unsigned __int8 *)i;
        goto LABEL_64;
      }
    }
    v60 = (unsigned __int8 *)&i[v57];
    if (&i[v57] != (char *)v41)
    {
      do
      {
        v62 = *v60;
        if (v62 > 0x23)
          break;
        if (((1 << v62) & 0x100002600) != 0)
        {
          v61 = v60 + 1;
          *(_QWORD *)(v6 + 40) = v60 + 1;
        }
        else
        {
          if (v62 != 35)
            break;
          *(_QWORD *)(v6 + 40) = v60 + 1;
          if (v60 + 1 == v41)
            break;
          v63 = v60[1];
          v61 = v60 + 2;
          *(_QWORD *)(v6 + 40) = v60 + 2;
          if (v63 != 10 && v63 != 13)
          {
            if (v61 == v41)
              break;
            v64 = v60[2];
            v61 = v60 + 3;
            *(_QWORD *)(v6 + 40) = v60 + 3;
            if (v64 != 10 && v64 != 13)
            {
              while (v61 != v41)
              {
                v66 = *v61++;
                v65 = v66;
                *(_QWORD *)(v6 + 40) = v61;
                if (v66 == 10 || v65 == 13)
                  goto LABEL_49;
              }
              break;
            }
          }
        }
LABEL_49:
        v60 = v61;
      }
      while (v61 != v41);
    }
LABEL_64:
    result = sub_1C20AD098(i, v57);
    if (!v68)
    {
      __break(1u);
      return result;
    }
    v69 = result;
    v70 = v68;
    if ((result != (uint64_t (*)())7955819 || v68 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v69 != (uint64_t (*)())49 || v70 != 0xE100000000000000)
      && (sub_1C21757C8() & 1) == 0)
    {
      break;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(v116 + 32))(v120, v6, &type metadata for TextFormatDecoder, &off_1E7BDE678, v48);
    if (v49)
      goto LABEL_122;
LABEL_72:
    v47 = *(unsigned __int8 **)(v6 + 40);
    v41 = *(unsigned __int8 **)(v6 + 48);
    if (v47 != v41)
    {
      v71 = *v47;
      if (v71 == 59 || v71 == 44)
      {
        v72 = v47 + 1;
        *(_QWORD *)(v6 + 40) = v47 + 1;
        v47 = v41;
        if (v72 != v41)
        {
          v47 = v72;
          while (1)
          {
            v74 = *v47;
            if (v74 > 0x23)
              break;
            if (((1 << v74) & 0x100002600) != 0)
            {
              v73 = v47 + 1;
              *(_QWORD *)(v6 + 40) = v47 + 1;
            }
            else
            {
              if (v74 != 35)
                goto LABEL_11;
              *(_QWORD *)(v6 + 40) = v47 + 1;
              if (v47 + 1 == v41)
              {
                v47 = v41;
                goto LABEL_11;
              }
              v75 = v47[1];
              v73 = v47 + 2;
              *(_QWORD *)(v6 + 40) = v47 + 2;
              if (v75 != 10 && v75 != 13)
              {
                if (v73 == v41)
                {
                  v47 = v41;
                  goto LABEL_11;
                }
                v76 = v47[2];
                v73 = v47 + 3;
                *(_QWORD *)(v6 + 40) = v47 + 3;
                if (v76 != 10 && v76 != 13)
                {
                  while (v73 != v41)
                  {
                    v78 = *v73++;
                    v77 = v78;
                    *(_QWORD *)(v6 + 40) = v73;
                    v79 = v78 == 10 || v77 == 13;
                    if (v79)
                      goto LABEL_78;
                  }
                  v47 = v41;
                  goto LABEL_11;
                }
              }
            }
LABEL_78:
            v47 = v73;
            if (v73 == v41)
            {
              v47 = v41;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  if (v69 == (uint64_t (*)())0x65756C6176 && v70 == 0xE500000000000000
    || ((v80 = sub_1C21757C8(), v69 == (uint64_t (*)())50) ? (v81 = v70 == 0xE100000000000000) : (v81 = 0),
        !v81 ? (v82 = 0) : (v82 = 1),
        (v80 & 1) != 0 || (v82 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
  v83 = sub_1C21757C8();
  swift_bridgeObjectRelease();
  if ((v83 & 1) != 0)
  {
LABEL_109:
    v45 = v119;
    (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v101 + 32))(v119, v6, &type metadata for TextFormatDecoder, &off_1E7BDE678);
    if (v49)
    {
      v22 = v99;
      v21 = v100;
      v32 = v114;
      goto LABEL_8;
    }
    goto LABEL_72;
  }
  sub_1C20B727C();
  swift_allocError();
  *v98 = 7;
LABEL_121:
  swift_willThrow();
LABEL_122:
  v22 = v99;
  v21 = v100;
  v32 = v114;
LABEL_7:
  v45 = v119;
LABEL_8:
  v46 = v118;
LABEL_118:
  (*(void (**)(char *, uint64_t))(v22 + 8))(v45, v21);
  return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v120, v32);
}

uint64_t (*sub_1C212D744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  int v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  char *i;
  int v49;
  int v50;
  int v51;
  int v52;
  BOOL v53;
  uint64_t v54;
  int v55;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t (*result)();
  uint64_t v65;
  uint64_t (*v66)();
  uint64_t v67;
  int v68;
  unsigned __int8 *v69;
  unsigned __int8 *v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  BOOL v76;
  char v77;
  BOOL v78;
  char v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _BYTE *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  _BYTE *v91;
  _BYTE *v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;

  v6 = v5;
  v96 = a5;
  v98 = a1;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v104 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = *(_QWORD *)(v10 + 8);
  v109 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v14);
  v100 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v17);
  v105 = (char *)&v93 - v18;
  v19 = sub_1C2175690();
  v20 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x1E0C80A78](v19, v21);
  v97 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  v99 = (char *)&v93 - v26;
  MEMORY[0x1E0C80A78](v25, v27);
  v29 = (char *)&v93 - v28;
  v30 = sub_1C2175690();
  v112 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x1E0C80A78](v30, v31);
  v103 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32, v34);
  v106 = v13;
  v35 = *(void (**)(void))(v13 + 56);
  v114 = (char *)&v93 - v36;
  v110 = AssociatedTypeWitness;
  v35();
  v101 = v8;
  v102 = a3;
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v113 = v29;
  v37(v29, 1, 1, a3);
  v38 = *(unsigned __int8 **)(v6 + 40);
  v39 = *(unsigned __int8 **)(v6 + 48);
  if (v38 == v39)
    goto LABEL_6;
  v107 = v30;
  v40 = *v38;
  *(_QWORD *)(v6 + 40) = v38 + 1;
  sub_1C20B5184();
  if (v40 == 60)
  {
    v93 = v37;
    v94 = v20;
    v95 = v19;
    v41 = 62;
  }
  else
  {
    v76 = v40 == 123;
    v30 = v107;
    if (!v76)
    {
LABEL_6:
      sub_1C20B727C();
      swift_allocError();
      *v42 = 0;
      swift_willThrow();
      goto LABEL_7;
    }
    v93 = v37;
    v94 = v20;
    v95 = v19;
    v41 = 125;
  }
  v45 = *(unsigned __int8 **)(v6 + 40);
  v46 = v111;
  while (1)
  {
    do
    {
LABEL_11:
      if (v45 == v39)
      {
LABEL_30:
        i = (char *)v39;
      }
      else
      {
        v47 = *v45;
        if (v47 == v41)
        {
          *(_QWORD *)(v6 + 40) = v45 + 1;
          sub_1C20B5184();
          v44 = v112;
          v81 = v103;
          v30 = v107;
          (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v103, v114, v107);
          v82 = v106;
          v83 = v110;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v81, 1, v110) == 1)
          {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v81, v30);
            v20 = v94;
            v19 = v95;
            v43 = (uint64_t)v113;
          }
          else
          {
            v111 = v46;
            v84 = v104;
            (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v105, v81, v83);
            v20 = v94;
            v19 = v95;
            v43 = (uint64_t)v113;
            v85 = v99;
            (*(void (**)(void))(v94 + 16))();
            v86 = v101;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v85, 1, v102) != 1)
            {
              v88 = v84;
              v89 = v102;
              (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v88, v85, v102);
              (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v100, v105, v110);
              v90 = v97;
              (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v97, v104, v89);
              v93(v90, 0, 1, v89);
              swift_getAssociatedConformanceWitness();
              sub_1C21753E4();
              sub_1C21753FC();
              (*(void (**)(char *, uint64_t))(v86 + 8))(v104, v89);
              (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v110);
              (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v43, v19);
              return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v114, v30);
            }
            (*(void (**)(char *, uint64_t))(v82 + 8))(v105, v110);
            (*(void (**)(char *, uint64_t))(v20 + 8))(v85, v19);
          }
          sub_1C20B727C();
          swift_allocError();
          *v87 = 0;
          swift_willThrow();
          goto LABEL_118;
        }
        for (i = (char *)v45; v47 <= 0x23; v47 = *i)
        {
          if (((1 << v47) & 0x100002600) != 0)
          {
            *(_QWORD *)(v6 + 40) = ++i;
          }
          else
          {
            if (v47 != 35)
              break;
            *(_QWORD *)(v6 + 40) = i + 1;
            if (i + 1 == (char *)v39)
              goto LABEL_30;
            v49 = i[1];
            *(_QWORD *)(v6 + 40) = i + 2;
            if (v49 == 10 || v49 == 13)
            {
              i += 2;
            }
            else
            {
              if (i + 2 == (char *)v39)
                goto LABEL_30;
              v50 = i[2];
              for (i += 3; ; ++i)
              {
                *(_QWORD *)(v6 + 40) = i;
                if (v50 == 10 || v50 == 13)
                  break;
                if (i == (char *)v39)
                  goto LABEL_30;
                v51 = *i;
                v50 = v51;
              }
            }
          }
          if (i == (char *)v39)
            goto LABEL_30;
        }
      }
      v45 = v39;
    }
    while (i == (char *)v39);
    v52 = *i;
    if (v52 == 91
      || ((v52 - 58) <= 0xFFFFFFF6 ? (v53 = (v52 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6) : (v53 = 1), !v53))
    {
      sub_1C20B727C();
      swift_allocError();
      *v91 = 0;
      goto LABEL_121;
    }
    v54 = 0;
    while (1)
    {
      v55 = i[v54];
      if ((v55 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v55 != 95 && (v55 - 48) > 9)
        break;
      *(_QWORD *)(v6 + 40) = &i[++v54];
      if (&i[v54] == (char *)v39)
      {
        v54 = v39 - (unsigned __int8 *)i;
        goto LABEL_64;
      }
    }
    v57 = (unsigned __int8 *)&i[v54];
    if (&i[v54] != (char *)v39)
    {
      do
      {
        v59 = *v57;
        if (v59 > 0x23)
          break;
        if (((1 << v59) & 0x100002600) != 0)
        {
          v58 = v57 + 1;
          *(_QWORD *)(v6 + 40) = v57 + 1;
        }
        else
        {
          if (v59 != 35)
            break;
          *(_QWORD *)(v6 + 40) = v57 + 1;
          if (v57 + 1 == v39)
            break;
          v60 = v57[1];
          v58 = v57 + 2;
          *(_QWORD *)(v6 + 40) = v57 + 2;
          if (v60 != 10 && v60 != 13)
          {
            if (v58 == v39)
              break;
            v61 = v57[2];
            v58 = v57 + 3;
            *(_QWORD *)(v6 + 40) = v57 + 3;
            if (v61 != 10 && v61 != 13)
            {
              while (v58 != v39)
              {
                v63 = *v58++;
                v62 = v63;
                *(_QWORD *)(v6 + 40) = v58;
                if (v63 == 10 || v62 == 13)
                  goto LABEL_49;
              }
              break;
            }
          }
        }
LABEL_49:
        v57 = v58;
      }
      while (v58 != v39);
    }
LABEL_64:
    result = sub_1C20AD098(i, v54);
    if (!v65)
    {
      __break(1u);
      return result;
    }
    v66 = result;
    v67 = v65;
    if ((result != (uint64_t (*)())7955819 || v65 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v66 != (uint64_t (*)())49 || v67 != 0xE100000000000000)
      && (sub_1C21757C8() & 1) == 0)
    {
      break;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v108 + 32))(v114, v6, &type metadata for TextFormatDecoder, &off_1E7BDE678);
    if (v46)
      goto LABEL_122;
LABEL_72:
    v45 = *(unsigned __int8 **)(v6 + 40);
    v39 = *(unsigned __int8 **)(v6 + 48);
    if (v45 != v39)
    {
      v68 = *v45;
      if (v68 == 59 || v68 == 44)
      {
        v69 = v45 + 1;
        *(_QWORD *)(v6 + 40) = v45 + 1;
        v45 = v39;
        if (v69 != v39)
        {
          v45 = v69;
          while (1)
          {
            v71 = *v45;
            if (v71 > 0x23)
              break;
            if (((1 << v71) & 0x100002600) != 0)
            {
              v70 = v45 + 1;
              *(_QWORD *)(v6 + 40) = v45 + 1;
            }
            else
            {
              if (v71 != 35)
                goto LABEL_11;
              *(_QWORD *)(v6 + 40) = v45 + 1;
              if (v45 + 1 == v39)
              {
                v45 = v39;
                goto LABEL_11;
              }
              v72 = v45[1];
              v70 = v45 + 2;
              *(_QWORD *)(v6 + 40) = v45 + 2;
              if (v72 != 10 && v72 != 13)
              {
                if (v70 == v39)
                {
                  v45 = v39;
                  goto LABEL_11;
                }
                v73 = v45[2];
                v70 = v45 + 3;
                *(_QWORD *)(v6 + 40) = v45 + 3;
                if (v73 != 10 && v73 != 13)
                {
                  while (v70 != v39)
                  {
                    v75 = *v70++;
                    v74 = v75;
                    *(_QWORD *)(v6 + 40) = v70;
                    v76 = v75 == 10 || v74 == 13;
                    if (v76)
                      goto LABEL_78;
                  }
                  v45 = v39;
                  goto LABEL_11;
                }
              }
            }
LABEL_78:
            v45 = v70;
            if (v70 == v39)
            {
              v45 = v39;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  if (v66 == (uint64_t (*)())0x65756C6176 && v67 == 0xE500000000000000
    || ((v77 = sub_1C21757C8(), v66 == (uint64_t (*)())50) ? (v78 = v67 == 0xE100000000000000) : (v78 = 0),
        !v78 ? (v79 = 0) : (v79 = 1),
        (v77 & 1) != 0 || (v79 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
  v80 = sub_1C21757C8();
  swift_bridgeObjectRelease();
  if ((v80 & 1) != 0)
  {
LABEL_109:
    v43 = (uint64_t)v113;
    sub_1C212B49C((uint64_t)v113, v102, v96);
    if (v46)
    {
      v20 = v94;
      v19 = v95;
      v30 = v107;
      goto LABEL_8;
    }
    goto LABEL_72;
  }
  sub_1C20B727C();
  swift_allocError();
  *v92 = 7;
LABEL_121:
  swift_willThrow();
LABEL_122:
  v20 = v94;
  v19 = v95;
  v30 = v107;
LABEL_7:
  v43 = (uint64_t)v113;
LABEL_8:
  v44 = v112;
LABEL_118:
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v43, v19);
  return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v114, v30);
}

void sub_1C212E0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;

  v14 = *(_BYTE **)(v6 + 40);
  v15 = *(_BYTE **)(v6 + 48);
  if (v14 != v15 && *v14 == 58)
  {
    *(_QWORD *)(v6 + 40) = v14 + 1;
    sub_1C20B5184();
    v14 = *(_BYTE **)(v6 + 40);
  }
  if (v14 == v15 || *v14 != 91)
  {
    a6(a1, a2, a3, a4, a5);
  }
  else
  {
    *(_QWORD *)(v6 + 40) = v14 + 1;
    sub_1C20B5184();
    v16 = *(_BYTE **)(v6 + 40);
    if (v16 == *(_BYTE **)(v6 + 48) || *v16 != 93)
    {
      while (1)
      {
        a6(a1, a2, a3, a4, a5);
        if (v7)
          break;
        v16 = *(_BYTE **)(v6 + 40);
        v17 = *(_BYTE **)(v6 + 48);
        if (v16 != v17 && *v16 == 93)
          goto LABEL_8;
        sub_1C20B5184();
        v18 = *(_BYTE **)(v6 + 40);
        if (v18 == v17 || *v18 != 44)
        {
          sub_1C20B727C();
          swift_allocError();
          *v19 = 0;
          swift_willThrow();
          return;
        }
        *(_QWORD *)(v6 + 40) = v18 + 1;
        sub_1C20B5184();
      }
    }
    else
    {
LABEL_8:
      *(_QWORD *)(v6 + 40) = v16 + 1;
      sub_1C20B5184();
    }
  }
}

uint64_t (*sub_1C212E268(uint64_t a1, uint64_t a2, ValueMetadata *a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *Description;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, ValueMetadata *);
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  int v40;
  int v41;
  _BYTE *v42;
  char *v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  char *i;
  int v49;
  int v50;
  int v51;
  int v52;
  BOOL v53;
  uint64_t v54;
  int v55;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t (*result)();
  uint64_t v65;
  uint64_t (*v66)();
  uint64_t v67;
  int v68;
  unsigned __int8 *v69;
  unsigned __int8 *v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  BOOL v76;
  char v77;
  BOOL v78;
  char v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  _QWORD *v86;
  _BYTE *v87;
  char *v88;
  ValueMetadata *v89;
  char *v90;
  _BYTE *v91;
  _BYTE *v92;
  void (*v93)(char *, uint64_t, uint64_t, ValueMetadata *);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  _QWORD *v101;
  ValueMetadata *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;

  v6 = v5;
  v96 = a5;
  v98 = a1;
  Description = a3[-1].Description;
  MEMORY[0x1E0C80A78](a1, a2);
  v104 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = *(_QWORD *)(v10 + 8);
  v109 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v14);
  v100 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v17);
  v105 = (char *)&v93 - v18;
  v19 = sub_1C2175690();
  v20 = *(_QWORD *)(v19 - 8);
  v22 = MEMORY[0x1E0C80A78](v19, v21);
  v97 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  v99 = (char *)&v93 - v26;
  MEMORY[0x1E0C80A78](v25, v27);
  v29 = (char *)&v93 - v28;
  v30 = sub_1C2175690();
  v112 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x1E0C80A78](v30, v31);
  v103 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32, v34);
  v106 = v13;
  v35 = *(void (**)(void))(v13 + 56);
  v114 = (char *)&v93 - v36;
  v110 = AssociatedTypeWitness;
  v35();
  v101 = Description;
  v102 = a3;
  v37 = (void (*)(char *, uint64_t, uint64_t, ValueMetadata *))Description[7];
  v113 = v29;
  v37(v29, 1, 1, a3);
  v38 = *(unsigned __int8 **)(v6 + 40);
  v39 = *(unsigned __int8 **)(v6 + 48);
  if (v38 == v39)
    goto LABEL_6;
  v107 = v30;
  v40 = *v38;
  *(_QWORD *)(v6 + 40) = v38 + 1;
  sub_1C20B5184();
  if (v40 == 60)
  {
    v93 = v37;
    v94 = v20;
    v95 = v19;
    v41 = 62;
  }
  else
  {
    v76 = v40 == 123;
    v30 = v107;
    if (!v76)
    {
LABEL_6:
      sub_1C20B727C();
      swift_allocError();
      *v42 = 0;
      swift_willThrow();
      goto LABEL_7;
    }
    v93 = v37;
    v94 = v20;
    v95 = v19;
    v41 = 125;
  }
  v45 = *(unsigned __int8 **)(v6 + 40);
  v46 = v111;
  while (1)
  {
    do
    {
LABEL_11:
      if (v45 == v39)
      {
LABEL_30:
        i = (char *)v39;
      }
      else
      {
        v47 = *v45;
        if (v47 == v41)
        {
          *(_QWORD *)(v6 + 40) = v45 + 1;
          sub_1C20B5184();
          v44 = v112;
          v81 = v103;
          v30 = v107;
          (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v103, v114, v107);
          v82 = v106;
          v83 = v110;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v81, 1, v110) == 1)
          {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v81, v30);
            v20 = v94;
            v19 = v95;
            v43 = v113;
          }
          else
          {
            v111 = v46;
            v84 = v104;
            (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v105, v81, v83);
            v20 = v94;
            v19 = v95;
            v43 = v113;
            v85 = v99;
            (*(void (**)(void))(v94 + 16))();
            v86 = v101;
            if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))v101[6])(v85, 1, v102) != 1)
            {
              v88 = v84;
              v89 = v102;
              ((void (*)(char *, char *, ValueMetadata *))v86[4])(v88, v85, v102);
              (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v100, v105, v110);
              v90 = v97;
              ((void (*)(char *, char *, ValueMetadata *))v86[2])(v97, v104, v89);
              v93(v90, 0, 1, v89);
              swift_getAssociatedConformanceWitness();
              sub_1C21753E4();
              sub_1C21753FC();
              ((void (*)(char *, ValueMetadata *))v86[1])(v104, v89);
              (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v110);
              (*(void (**)(char *, uint64_t))(v20 + 8))(v43, v19);
              return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v114, v30);
            }
            (*(void (**)(char *, uint64_t))(v82 + 8))(v105, v110);
            (*(void (**)(char *, uint64_t))(v20 + 8))(v85, v19);
          }
          sub_1C20B727C();
          swift_allocError();
          *v87 = 0;
          swift_willThrow();
          goto LABEL_118;
        }
        for (i = (char *)v45; v47 <= 0x23; v47 = *i)
        {
          if (((1 << v47) & 0x100002600) != 0)
          {
            *(_QWORD *)(v6 + 40) = ++i;
          }
          else
          {
            if (v47 != 35)
              break;
            *(_QWORD *)(v6 + 40) = i + 1;
            if (i + 1 == (char *)v39)
              goto LABEL_30;
            v49 = i[1];
            *(_QWORD *)(v6 + 40) = i + 2;
            if (v49 == 10 || v49 == 13)
            {
              i += 2;
            }
            else
            {
              if (i + 2 == (char *)v39)
                goto LABEL_30;
              v50 = i[2];
              for (i += 3; ; ++i)
              {
                *(_QWORD *)(v6 + 40) = i;
                if (v50 == 10 || v50 == 13)
                  break;
                if (i == (char *)v39)
                  goto LABEL_30;
                v51 = *i;
                v50 = v51;
              }
            }
          }
          if (i == (char *)v39)
            goto LABEL_30;
        }
      }
      v45 = v39;
    }
    while (i == (char *)v39);
    v52 = *i;
    if (v52 == 91
      || ((v52 - 58) <= 0xFFFFFFF6 ? (v53 = (v52 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6) : (v53 = 1), !v53))
    {
      sub_1C20B727C();
      swift_allocError();
      *v91 = 0;
      goto LABEL_121;
    }
    v54 = 0;
    while (1)
    {
      v55 = i[v54];
      if ((v55 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v55 != 95 && (v55 - 48) > 9)
        break;
      *(_QWORD *)(v6 + 40) = &i[++v54];
      if (&i[v54] == (char *)v39)
      {
        v54 = v39 - (unsigned __int8 *)i;
        goto LABEL_64;
      }
    }
    v57 = (unsigned __int8 *)&i[v54];
    if (&i[v54] != (char *)v39)
    {
      do
      {
        v59 = *v57;
        if (v59 > 0x23)
          break;
        if (((1 << v59) & 0x100002600) != 0)
        {
          v58 = v57 + 1;
          *(_QWORD *)(v6 + 40) = v57 + 1;
        }
        else
        {
          if (v59 != 35)
            break;
          *(_QWORD *)(v6 + 40) = v57 + 1;
          if (v57 + 1 == v39)
            break;
          v60 = v57[1];
          v58 = v57 + 2;
          *(_QWORD *)(v6 + 40) = v57 + 2;
          if (v60 != 10 && v60 != 13)
          {
            if (v58 == v39)
              break;
            v61 = v57[2];
            v58 = v57 + 3;
            *(_QWORD *)(v6 + 40) = v57 + 3;
            if (v61 != 10 && v61 != 13)
            {
              while (v58 != v39)
              {
                v63 = *v58++;
                v62 = v63;
                *(_QWORD *)(v6 + 40) = v58;
                if (v63 == 10 || v62 == 13)
                  goto LABEL_49;
              }
              break;
            }
          }
        }
LABEL_49:
        v57 = v58;
      }
      while (v58 != v39);
    }
LABEL_64:
    result = sub_1C20AD098(i, v54);
    if (!v65)
    {
      __break(1u);
      return result;
    }
    v66 = result;
    v67 = v65;
    if ((result != (uint64_t (*)())7955819 || v65 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v66 != (uint64_t (*)())49 || v67 != 0xE100000000000000)
      && (sub_1C21757C8() & 1) == 0)
    {
      break;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v108 + 32))(v114, v6, &type metadata for TextFormatDecoder, &off_1E7BDE678);
    if (v46)
      goto LABEL_122;
LABEL_72:
    v45 = *(unsigned __int8 **)(v6 + 40);
    v39 = *(unsigned __int8 **)(v6 + 48);
    if (v45 != v39)
    {
      v68 = *v45;
      if (v68 == 59 || v68 == 44)
      {
        v69 = v45 + 1;
        *(_QWORD *)(v6 + 40) = v45 + 1;
        v45 = v39;
        if (v69 != v39)
        {
          v45 = v69;
          while (1)
          {
            v71 = *v45;
            if (v71 > 0x23)
              break;
            if (((1 << v71) & 0x100002600) != 0)
            {
              v70 = v45 + 1;
              *(_QWORD *)(v6 + 40) = v45 + 1;
            }
            else
            {
              if (v71 != 35)
                goto LABEL_11;
              *(_QWORD *)(v6 + 40) = v45 + 1;
              if (v45 + 1 == v39)
              {
                v45 = v39;
                goto LABEL_11;
              }
              v72 = v45[1];
              v70 = v45 + 2;
              *(_QWORD *)(v6 + 40) = v45 + 2;
              if (v72 != 10 && v72 != 13)
              {
                if (v70 == v39)
                {
                  v45 = v39;
                  goto LABEL_11;
                }
                v73 = v45[2];
                v70 = v45 + 3;
                *(_QWORD *)(v6 + 40) = v45 + 3;
                if (v73 != 10 && v73 != 13)
                {
                  while (v70 != v39)
                  {
                    v75 = *v70++;
                    v74 = v75;
                    *(_QWORD *)(v6 + 40) = v70;
                    v76 = v75 == 10 || v74 == 13;
                    if (v76)
                      goto LABEL_78;
                  }
                  v45 = v39;
                  goto LABEL_11;
                }
              }
            }
LABEL_78:
            v45 = v70;
            if (v70 == v39)
            {
              v45 = v39;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  if (v66 == (uint64_t (*)())0x65756C6176 && v67 == 0xE500000000000000
    || ((v77 = sub_1C21757C8(), v66 == (uint64_t (*)())50) ? (v78 = v67 == 0xE100000000000000) : (v78 = 0),
        !v78 ? (v79 = 0) : (v79 = 1),
        (v77 & 1) != 0 || (v79 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_109;
  }
  v80 = sub_1C21757C8();
  swift_bridgeObjectRelease();
  if ((v80 & 1) != 0)
  {
LABEL_109:
    v43 = v113;
    sub_1C212BA9C(v113, v102, v96);
    if (v46)
    {
      v20 = v94;
      v19 = v95;
      v30 = v107;
      goto LABEL_8;
    }
    goto LABEL_72;
  }
  sub_1C20B727C();
  swift_allocError();
  *v92 = 7;
LABEL_121:
  swift_willThrow();
LABEL_122:
  v20 = v94;
  v19 = v95;
  v30 = v107;
LABEL_7:
  v43 = v113;
LABEL_8:
  v44 = v112;
LABEL_118:
  (*(void (**)(char *, uint64_t))(v20 + 8))(v43, v19);
  return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v114, v30);
}

void sub_1C212EC14(uint64_t a1, uint64_t a2, ValueMetadata *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;

  v12 = *(_BYTE **)(v5 + 40);
  v13 = *(_BYTE **)(v5 + 48);
  if (v12 != v13 && *v12 == 58)
  {
    *(_QWORD *)(v5 + 40) = v12 + 1;
    sub_1C20B5184();
    v12 = *(_BYTE **)(v5 + 40);
  }
  if (v12 == v13 || *v12 != 91)
  {
    sub_1C212E268(a1, a2, a3, a4, a5);
  }
  else
  {
    *(_QWORD *)(v5 + 40) = v12 + 1;
    sub_1C20B5184();
    v14 = *(_BYTE **)(v5 + 40);
    if (v14 == *(_BYTE **)(v5 + 48) || *v14 != 93)
    {
      while (1)
      {
        sub_1C212E268(a1, a2, a3, a4, a5);
        if (v6)
          break;
        v14 = *(_BYTE **)(v5 + 40);
        v15 = *(_BYTE **)(v5 + 48);
        if (v14 != v15 && *v14 == 93)
          goto LABEL_8;
        sub_1C20B5184();
        v16 = *(_BYTE **)(v5 + 40);
        if (v16 == v15 || *v16 != 44)
        {
          sub_1C20B727C();
          swift_allocError();
          *v17 = 0;
          swift_willThrow();
          return;
        }
        *(_QWORD *)(v5 + 40) = v16 + 1;
        sub_1C20B5184();
      }
    }
    else
    {
LABEL_8:
      *(_QWORD *)(v5 + 40) = v14 + 1;
      sub_1C20B5184();
    }
  }
}

uint64_t sub_1C212ED94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v29[40];
  _QWORD v30[3];
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = v4[3];
  if (!v6)
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
    return sub_1C2128154((uint64_t)&v32, &qword_1EF75FB38);
  }
  v28 = a1;
  v10 = v4[4];
  v11 = __swift_project_boxed_opaque_existential_1(v4, v6);
  v38 = v5;
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v11, v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v14);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v32, a2, a3, a4, v6, v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
  v15 = v38;
  if (!*((_QWORD *)&v33 + 1))
    return sub_1C2128154((uint64_t)&v32, &qword_1EF75FB38);
  sub_1C20A8734(&v32, (uint64_t)v35);
  v16 = *v28;
  if (*(_QWORD *)(*v28 + 16) && (v17 = sub_1C20A9B94(a4), (v18 & 1) != 0))
  {
    sub_1C20A84A8(*(_QWORD *)(v16 + 56) + 40 * v17, (uint64_t)&v32);
  }
  else
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
  }
  sub_1C20B7E1C((uint64_t)&v32, (uint64_t)v30);
  v20 = v31;
  result = sub_1C2128154((uint64_t)v30, &qword_1EF75CF70);
  if (!v20)
  {
    v23 = v36;
    v24 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v24 + 32))(v30, v27, &type metadata for TextFormatDecoder, &off_1E7BDE678, v23, v24);
    if (!v15)
    {
      sub_1C212F860((uint64_t)v30, (uint64_t)&v32);
      goto LABEL_15;
    }
LABEL_18:
    sub_1C2128154((uint64_t)&v32, &qword_1EF75CF70);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  v21 = *((_QWORD *)&v33 + 1);
  if (*((_QWORD *)&v33 + 1))
  {
    v22 = v34;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v32, *((uint64_t *)&v33 + 1));
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v22 + 40))(v27, &type metadata for TextFormatDecoder, &off_1E7BDE678, v21, v22);
    if (!v15)
    {
LABEL_15:
      sub_1C20B7E1C((uint64_t)&v32, (uint64_t)v30);
      v25 = v31;
      sub_1C2128154((uint64_t)v30, &qword_1EF75CF70);
      if (v25)
      {
        sub_1C20B7E1C((uint64_t)&v32, (uint64_t)v30);
        sub_1C20B7E1C((uint64_t)v30, (uint64_t)v29);
        sub_1C20B825C((uint64_t)v29, a4);
        sub_1C2128154((uint64_t)v30, &qword_1EF75CF70);
      }
      else
      {
        sub_1C20B727C();
        swift_allocError();
        *v26 = 10;
        swift_willThrow();
      }
      goto LABEL_18;
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C212F098()
{
  _BYTE *v0;

  sub_1C20B727C();
  swift_allocError();
  *v0 = 9;
  return swift_willThrow();
}

uint64_t sub_1C212F0E4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1C21282C4();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1C212F104(_DWORD *a1)
{
  return sub_1C2128578(a1);
}

uint64_t sub_1C212F118(uint64_t a1)
{
  return sub_1C2128610(a1);
}

void sub_1C212F12C(char **a1)
{
  sub_1C21286AC(a1);
}

uint64_t sub_1C212F140(_QWORD *a1)
{
  return sub_1C2128C44(a1);
}

uint64_t sub_1C212F154(uint64_t a1)
{
  return sub_1C2128CDC(a1);
}

void sub_1C212F168(char **a1)
{
  sub_1C2128D78(a1);
}

void sub_1C212F17C(_DWORD *a1)
{
  sub_1C212930C(a1);
}

void sub_1C212F190(uint64_t a1)
{
  sub_1C21293B8(a1);
}

void sub_1C212F1A4(char **a1)
{
  sub_1C2129468(a1);
}

uint64_t sub_1C212F1B8(uint64_t *a1)
{
  return sub_1C212A214(a1, (uint64_t (*)(void))sub_1C20B5CB4);
}

uint64_t sub_1C212F1D4(uint64_t a1)
{
  return sub_1C212A2B0(a1, (uint64_t (*)(void))sub_1C20B5CB4);
}

void sub_1C212F1F0(char **a1)
{
  sub_1C21298A4(a1);
}

void sub_1C212F204(_DWORD *a1)
{
  sub_1C2129CD4(a1);
}

void sub_1C212F218(uint64_t a1)
{
  sub_1C2129D80(a1);
}

void sub_1C212F22C(char **a1)
{
  sub_1C2129E30(a1);
}

uint64_t sub_1C212F240(uint64_t *a1)
{
  return sub_1C212A214(a1, (uint64_t (*)(void))sub_1C20B5A40);
}

uint64_t sub_1C212F25C(uint64_t a1)
{
  return sub_1C212A2B0(a1, (uint64_t (*)(void))sub_1C20B5A40);
}

void sub_1C212F278(char **a1)
{
  sub_1C212A350(a1);
}

uint64_t sub_1C212F28C(_BYTE *a1)
{
  return sub_1C212A6F8(a1);
}

void sub_1C212F2A0(char **a1)
{
  sub_1C212A794(a1);
}

uint64_t sub_1C212F2B4(uint64_t *a1)
{
  return sub_1C212AB44(a1);
}

void sub_1C212F2C8(char **a1)
{
  sub_1C212ABEC(a1);
}

uint64_t sub_1C212F2DC(uint64_t *a1)
{
  return sub_1C212AF98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C20A8058);
}

uint64_t destroy for TextFormatDecoder(uint64_t a1)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  result = *(_QWORD *)(a1 + 80);
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TextFormatDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  swift_retain();
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 88);
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = v9;
    v11 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for TextFormatDecoder(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_retain();
  swift_release();
  v7 = (_OWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
  v10 = a2 + 5;
  v9 = *((_QWORD *)a2 + 10);
  if (v8)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 80) = v9;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2122D14(a1 + 80);
      v11 = a2[6];
      *v7 = *v10;
      *(_OWORD *)(a1 + 96) = v11;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = a2[6];
    *v7 = *v10;
    *(_OWORD *)(a1 + 96) = v12;
  }
  *(_OWORD *)(a1 + 112) = a2[7];
  return a1;
}

uint64_t assignWithTake for TextFormatDecoder(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v5 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  v6 = (_OWORD *)(a2 + 80);
  if (!v5)
    goto LABEL_7;
  if (!*(_QWORD *)v6)
  {
    sub_1C2122D14(a1 + 80);
LABEL_7:
    v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *v6;
    *(_OWORD *)(a1 + 96) = v7;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)v6;
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
LABEL_8:
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatDecoder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatDecoder()
{
  return &type metadata for TextFormatDecoder;
}

uint64_t sub_1C212F76C(uint64_t *a1)
{
  return sub_1C212AF98(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C20AE1C8);
}

void sub_1C212F788(char **a1)
{
  sub_1C212B04C(a1);
}

void sub_1C212F79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C212B5D0(a1, a2, a3);
}

void sub_1C212F7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C212B49C(a1, a2, a3);
}

void sub_1C212F7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C212B6DC(a1, a2, a3);
}

uint64_t sub_1C212F7D8(char *a1, ValueMetadata *a2, uint64_t a3)
{
  return sub_1C212CD28(a1, a2, a3);
}

void sub_1C212F7EC(uint64_t a1, ValueMetadata *a2, uint64_t a3)
{
  sub_1C212CD3C(a1, a2, a3);
}

void sub_1C212F800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C212E0F0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C212CD50);
}

void sub_1C212F81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C212E0F0(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C212D744);
}

void sub_1C212F838(uint64_t a1, uint64_t a2, ValueMetadata *a3, uint64_t a4, uint64_t a5)
{
  sub_1C212EC14(a1, a2, a3, a4, a5);
}

uint64_t sub_1C212F84C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C212ED94(a1, a2, a3, a4);
}

uint64_t sub_1C212F860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1C212F8D0(uint64_t a1, uint64_t a2)
{
  assignWithTake for TextFormatScanner(a2, a1);
  return a2;
}

uint64_t sub_1C212F90C(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for AnyMessageStorage.InternalState(a2, a1);
  return a2;
}

uint64_t sub_1C212F948(uint64_t a1, uint64_t a2)
{
  assignWithTake for AnyMessageStorage.InternalState(a2, a1);
  return a2;
}

void sub_1C212F984(_DWORD *a1)
{
  sub_1C212F17C(a1);
}

void sub_1C212F998(uint64_t a1)
{
  sub_1C212F190(a1);
}

void sub_1C212F9AC(char **a1)
{
  sub_1C212F1A4(a1);
}

void sub_1C212F9C0(char **a1)
{
  sub_1C212F1F0(a1);
}

uint64_t sub_1C212F9D4()
{
  sub_1C2175834();
  return sub_1C2175858();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularFloatField(value:fieldNumber:)(Swift::Float value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(Swift::Int, double))(v2 + 16))(fieldNumber, value);
}

uint64_t sub_1C212FA30()
{
  sub_1C2175834();
  return sub_1C2175858();
}

uint64_t sub_1C212FA64(int a1, unint64_t a2)
{
  char **v2;
  unint64_t v4;
  unsigned __int8 *v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;

  v4 = a1;
  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v5);
  if (a1 < 0)
  {
    v6 = *v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 45;
    *v2 = v6;
    v4 = -(uint64_t)v4;
  }
  sub_1C214C444(v4);
  v10 = (uint64_t)*v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = (char *)v10;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
    v10 = result;
    *v2 = (char *)result;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    v10 = result;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  *(_BYTE *)(v10 + v13 + 32) = 10;
  *v2 = (char *)v10;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularInt32Field(value:fieldNumber:)(Swift::Int32 value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(_QWORD, Swift::Int))(v2 + 32))(value, fieldNumber);
}

uint64_t sub_1C212FBD8()
{
  sub_1C2175834();
  return sub_1C2175858();
}

uint64_t sub_1C212FC0C(unsigned int a1, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  v3 = a1;
  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  sub_1C214C444(v3);
  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
    v5 = result;
    *v2 = result;
  }
  v8 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v8 + 1;
  *(_BYTE *)(v5 + v8 + 32) = 10;
  *v2 = v5;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularUInt32Field(value:fieldNumber:)(Swift::UInt32 value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(_QWORD, Swift::Int))(v2 + 48))(value, fieldNumber);
}

uint64_t sub_1C212FCF0()
{
  return sub_1C212FA30();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSInt32Field(value:fieldNumber:)(Swift::Int32 value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(_QWORD, Swift::Int))(v2 + 24))(*(_QWORD *)&value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSInt64Field(value:fieldNumber:)(Swift::Int64 value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(Swift::Int64, Swift::Int))(v2 + 32))(value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularFixed32Field(value:fieldNumber:)(Swift::UInt32 value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(_QWORD, Swift::Int))(v2 + 40))(*(_QWORD *)&value, fieldNumber);
}

uint64_t sub_1C212FD4C(unint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  sub_1C214C444(a1);
  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
    v5 = result;
    *v2 = result;
  }
  v8 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v8 + 1;
  *(_BYTE *)(v5 + v8 + 32) = 10;
  *v2 = v5;
  return result;
}

uint64_t sub_1C212FE14(unint64_t a1, uint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 34;
    *v2 = v6;
    sub_1C211F414(a1);
    v10 = (uint64_t)*v2;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v2 = (char *)v10;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = result;
      *v2 = (char *)result;
    }
    v12 = *(_QWORD *)(v10 + 16);
    v11 = *(_QWORD *)(v10 + 24);
    if (v12 >= v11 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, (char *)v10);
      v10 = result;
    }
    *(_QWORD *)(v10 + 16) = v12 + 1;
    *(_BYTE *)(v10 + v12 + 32) = 34;
    *v2 = (char *)v10;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularFixed64Field(value:fieldNumber:)(Swift::UInt64 value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(Swift::UInt64, Swift::Int))(v2 + 48))(value, fieldNumber);
}

uint64_t sub_1C212FF6C(unint64_t a1, unint64_t a2)
{
  char **v2;
  unsigned __int8 *v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  if ((a1 & 0x8000000000000000) != 0)
  {
    v5 = *v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      *v2 = v5;
    }
    v8 = *((_QWORD *)v5 + 2);
    v7 = *((_QWORD *)v5 + 3);
    if (v8 >= v7 >> 1)
      v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
    *((_QWORD *)v5 + 2) = v8 + 1;
    v5[v8 + 32] = 45;
    *v2 = v5;
    a1 = -(uint64_t)a1;
  }
  sub_1C214C444(a1);
  v9 = (uint64_t)*v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = (char *)v9;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
    v9 = result;
    *v2 = (char *)result;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    v9 = result;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  *(_BYTE *)(v9 + v12 + 32) = 10;
  *v2 = (char *)v9;
  return result;
}

uint64_t sub_1C21300C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitSingularGroupField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitSingularGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 136))(a1, a2, a4, a6, a3, a5);
}

uint64_t sub_1C2130114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C213044C(a1, a2, a3, a4, sub_1C2133D8C);
}

uint64_t sub_1C2130130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  float v11;
  unsigned __int8 *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  float *v20;
  uint64_t v21;
  unint64_t v22;
  float v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;

  result = sub_1C21197B4(a2);
  if (v3)
    return result;
  v6 = *(char **)v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    *(_QWORD *)v2 = v6;
  }
  v9 = *((_QWORD *)v6 + 2);
  v8 = *((_QWORD *)v6 + 3);
  if (v9 >= v8 >> 1)
    v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v9 + 1;
  v6[v9 + 32] = 91;
  *(_QWORD *)v2 = v6;
  *(_WORD *)(v2 + 8) = 256;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(float *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~LODWORD(v11) & 0x7F800000) != 0)
    {
      v15 = sub_1C2175624();
      sub_1C20AA79C(v15, v16);
      v17 = v10 - 1;
      if (v10 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        v6 = *(char **)v2;
        goto LABEL_17;
      }
    }
    else
    {
      if ((LODWORD(v11) & 0x7FFFFF) != 0)
      {
        v13 = "\"NaN\"";
        v14 = 5;
      }
      else if (v11 >= 0.0)
      {
        v13 = "\"Infinity\"";
        v14 = 10;
      }
      else
      {
        v13 = "\"-Infinity\"";
        v14 = 11;
      }
      sub_1C20A9EB4((uint64_t)v13, v14, v12);
      v17 = v10 - 1;
      if (v10 == 1)
        goto LABEL_16;
    }
    v20 = (float *)(a1 + 36);
    do
    {
      v23 = *v20;
      v24 = *(char **)v2;
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v2 = v24;
      if ((v25 & 1) == 0)
      {
        v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        *(_QWORD *)v2 = v24;
      }
      v27 = *((_QWORD *)v24 + 2);
      v26 = *((_QWORD *)v24 + 3);
      if (v27 >= v26 >> 1)
        v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
      *((_QWORD *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 44;
      *(_QWORD *)v2 = v24;
      if ((~LODWORD(v23) & 0x7F800000) != 0)
      {
        v21 = sub_1C2175624();
        sub_1C20AA79C(v21, v22);
      }
      else if ((LODWORD(v23) & 0x7FFFFF) != 0)
      {
        sub_1C20A9EB4((uint64_t)"\"NaN\"", 5, (unsigned __int8 *)LODWORD(v23));
      }
      else if (v23 >= 0.0)
      {
        sub_1C20A9EB4((uint64_t)"\"Infinity\"", 10, (unsigned __int8 *)LODWORD(v23));
      }
      else
      {
        sub_1C20A9EB4((uint64_t)"\"-Infinity\"", 11, (unsigned __int8 *)LODWORD(v23));
      }
      ++v20;
      --v17;
    }
    while (v17);
    goto LABEL_16;
  }
LABEL_17:
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v6;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    v6 = (char *)result;
    *(_QWORD *)v2 = result;
  }
  v19 = *((_QWORD *)v6 + 2);
  v18 = *((_QWORD *)v6 + 3);
  if (v19 >= v18 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v6);
    v6 = (char *)result;
  }
  *((_QWORD *)v6 + 2) = v19 + 1;
  v6[v19 + 32] = 93;
  *(_QWORD *)v2 = v6;
  *(_WORD *)(v2 + 8) = 44;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedFloatField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 152))(value._rawValue, fieldNumber);
}

uint64_t sub_1C2130430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C213044C(a1, a2, a3, a4, sub_1C2133D38);
}

uint64_t sub_1C213044C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1C2175834();
  return a5(v5, a1);
}

uint64_t sub_1C2130490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;

  result = sub_1C21197B4(a2);
  if (v3)
    return result;
  v6 = *(char **)v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    *(_QWORD *)v2 = v6;
  }
  v9 = *((_QWORD *)v6 + 2);
  v8 = *((_QWORD *)v6 + 3);
  if (v9 >= v8 >> 1)
    v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v9 + 1;
  v6[v9 + 32] = 91;
  *(_QWORD *)v2 = v6;
  *(_WORD *)(v2 + 8) = 256;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(double *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) != 0)
    {
      v15 = sub_1C2175618();
      sub_1C20AA79C(v15, v16);
      v17 = v10 - 1;
      if (v10 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        v6 = *(char **)v2;
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(_QWORD *)&v11 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        v13 = "\"NaN\"";
        v14 = 5;
      }
      else if (v11 >= 0.0)
      {
        v13 = "\"Infinity\"";
        v14 = 10;
      }
      else
      {
        v13 = "\"-Infinity\"";
        v14 = 11;
      }
      sub_1C20A9EB4((uint64_t)v13, v14, v12);
      v17 = v10 - 1;
      if (v10 == 1)
        goto LABEL_16;
    }
    v20 = (double *)(a1 + 40);
    do
    {
      v23 = *v20;
      v24 = *(char **)v2;
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v2 = v24;
      if ((v25 & 1) == 0)
      {
        v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        *(_QWORD *)v2 = v24;
      }
      v27 = *((_QWORD *)v24 + 2);
      v26 = *((_QWORD *)v24 + 3);
      if (v27 >= v26 >> 1)
        v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
      *((_QWORD *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 44;
      *(_QWORD *)v2 = v24;
      if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) != 0)
      {
        v21 = sub_1C2175618();
        sub_1C20AA79C(v21, v22);
      }
      else if ((*(_QWORD *)&v23 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        sub_1C20A9EB4((uint64_t)"\"NaN\"", 5, *(unsigned __int8 **)&v23);
      }
      else if (v23 >= 0.0)
      {
        sub_1C20A9EB4((uint64_t)"\"Infinity\"", 10, *(unsigned __int8 **)&v23);
      }
      else
      {
        sub_1C20A9EB4((uint64_t)"\"-Infinity\"", 11, *(unsigned __int8 **)&v23);
      }
      ++v20;
      --v17;
    }
    while (v17);
    goto LABEL_16;
  }
LABEL_17:
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v2 = v6;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    v6 = (char *)result;
    *(_QWORD *)v2 = result;
  }
  v19 = *((_QWORD *)v6 + 2);
  v18 = *((_QWORD *)v6 + 3);
  if (v19 >= v18 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v6);
    v6 = (char *)result;
  }
  *((_QWORD *)v6 + 2) = v19 + 1;
  v6[v19 + 32] = 93;
  *(_QWORD *)v2 = v6;
  *(_WORD *)(v2 + 8) = 44;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedDoubleField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 160))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 168))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 176))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedUInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 184))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedUInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 192))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 312))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 320))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 328))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 336))(value._rawValue, fieldNumber);
}

uint64_t sub_1C2130850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned __int8 *v17;
  const char *v18;
  uint64_t v19;
  int v20;
  char *v21;
  char v22;
  unint64_t v23;
  unint64_t v24;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *(_QWORD *)v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = (unsigned __int8 *)*(unsigned __int8 *)(a1 + 32);
      if ((v11 & 1) != 0)
      {
        v12 = "true";
        v13 = 4;
      }
      else
      {
        v12 = "false";
        v13 = 5;
      }
      sub_1C20A9EB4((uint64_t)v12, v13, v11);
      v14 = v10 - 1;
      if (v10 != 1)
      {
        v17 = (unsigned __int8 *)(a1 + 33);
        do
        {
          v20 = *v17;
          v21 = *(char **)v2;
          v22 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v2 = v21;
          if ((v22 & 1) == 0)
          {
            v21 = sub_1C214E1A4(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
            *(_QWORD *)v2 = v21;
          }
          v24 = *((_QWORD *)v21 + 2);
          v23 = *((_QWORD *)v21 + 3);
          if (v24 >= v23 >> 1)
            v21 = sub_1C214E1A4((char *)(v23 > 1), v24 + 1, 1, v21);
          *((_QWORD *)v21 + 2) = v24 + 1;
          v21[v24 + 32] = 44;
          *(_QWORD *)v2 = v21;
          if (v20)
          {
            v18 = "true";
            v19 = 4;
          }
          else
          {
            v18 = "false";
            v19 = 5;
          }
          sub_1C20A9EB4((uint64_t)v18, v19, (unsigned __int8 *)&v21[v24]);
          ++v17;
          --v14;
        }
        while (v14);
      }
      swift_bridgeObjectRelease();
      v6 = *(char **)v2;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v16 = *((_QWORD *)v6 + 2);
    v15 = *((_QWORD *)v6 + 3);
    if (v16 >= v15 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v16 + 1;
    v6[v16 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedBoolField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;

  (*(void (**)(void *, Swift::Int))(v2 + 248))(value._rawValue, fieldNumber);
}

uint64_t sub_1C2130AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitPackedEnumField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitPackedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 272))(a1, a2, a4, a6, a3, a5);
}

uint64_t sub_1C2130B1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C2131194(v3, a2, a3, *a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitExtensionFields(fields:start:end:)(SiriOntologyProtobuf::ExtensionFieldValueSet fields, Swift::Int start, Swift::Int end)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  ExtensionFieldValueSet.traverse<A>(visitor:start:end:)(v5, start, end, v3, v4);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitExtensionFieldsAsMessageSet(fields:start:end:)(SiriOntologyProtobuf::ExtensionFieldValueSet fields, Swift::Int start, Swift::Int end)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)fields.values._rawValue;
  (*(void (**)(uint64_t *, Swift::Int, Swift::Int))(v3 + 432))(&v4, start, end);
}

uint64_t sub_1C2130B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v32 = a3;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v12 >= v11)
      goto LABEL_32;
    v17 = *(_QWORD *)(v7 + 8 * v12);
    if (v17)
      goto LABEL_20;
    v18 = v12 + 1;
    if (v12 + 1 >= v11)
      goto LABEL_32;
    v17 = *(_QWORD *)(v7 + 8 * v18);
    if (!v17)
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v11)
        goto LABEL_32;
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (!v17)
      {
        v18 = v12 + 3;
        if (v12 + 3 >= v11)
          goto LABEL_32;
        v17 = *(_QWORD *)(v7 + 8 * v18);
        if (!v17)
        {
          v18 = v12 + 4;
          if (v12 + 4 >= v11)
            goto LABEL_32;
          v17 = *(_QWORD *)(v7 + 8 * v18);
          if (!v17)
            break;
        }
      }
    }
LABEL_19:
    v12 = v18;
LABEL_20:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    v19 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v15);
    if (v19 >= a2 && v19 < a3)
    {
      v33[0] = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C20B9958(0, *((_QWORD *)v13 + 2) + 1, 1);
        v13 = v33[0];
      }
      v21 = *((_QWORD *)v13 + 2);
      v20 = *((_QWORD *)v13 + 3);
      v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        sub_1C20B9958((char *)(v20 > 1), v21 + 1, 1);
        v22 = v21 + 1;
        v13 = v33[0];
      }
      *((_QWORD *)v13 + 2) = v22;
      *(_QWORD *)&v13[8 * v21 + 32] = v19;
      a3 = v32;
    }
  }
  v18 = v12 + 5;
  if (v12 + 5 >= v11)
  {
LABEL_32:
    swift_release();
    v33[0] = v13;
    swift_bridgeObjectRetain();
    sub_1C20B8F6C(v33);
    if (v31)
      goto LABEL_43;
    swift_release();
    v23 = v33[0];
    v24 = *((_QWORD *)v33[0] + 2);
    if (!v24)
      return swift_release();
    v25 = 0;
    while (*(_QWORD *)(a4 + 16))
    {
      v26 = sub_1C20A9B94(*(_QWORD *)&v23[8 * v25 + 32]);
      if ((v27 & 1) == 0)
        goto LABEL_41;
      sub_1C20A84A8(*(_QWORD *)(a4 + 56) + 40 * v26, (uint64_t)v33);
      v28 = v34;
      v29 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 48))(v36, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, v28, v29);
      ++v25;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      if (v24 == v25)
        return swift_release();
    }
    goto LABEL_40;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_19;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_32;
    v17 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C2130E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a6;
  v9 = a4 + 64;
  v10 = 1 << *(_BYTE *)(a4 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a4 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = a3;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v13)
      goto LABEL_32;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    if (v19)
      goto LABEL_20;
    v20 = v14 + 1;
    if (v14 + 1 >= v13)
      goto LABEL_32;
    v19 = *(_QWORD *)(v9 + 8 * v20);
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v13)
        goto LABEL_32;
      v19 = *(_QWORD *)(v9 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v13)
          goto LABEL_32;
        v19 = *(_QWORD *)(v9 + 8 * v20);
        if (!v19)
        {
          v20 = v14 + 4;
          if (v14 + 4 >= v13)
            goto LABEL_32;
          v19 = *(_QWORD *)(v9 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_19:
    v14 = v20;
LABEL_20:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_21:
    v21 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v17);
    if (v21 >= a2 && v21 < a3)
    {
      v37[0] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C20B9958(0, *((_QWORD *)v15 + 2) + 1, 1);
        v15 = v37[0];
      }
      v23 = *((_QWORD *)v15 + 2);
      v22 = *((_QWORD *)v15 + 3);
      v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1C20B9958((char *)(v22 > 1), v23 + 1, 1);
        v24 = v23 + 1;
        v15 = v37[0];
      }
      *((_QWORD *)v15 + 2) = v24;
      *(_QWORD *)&v15[8 * v23 + 32] = v21;
      a3 = v34;
    }
  }
  v20 = v14 + 5;
  if (v14 + 5 >= v13)
  {
LABEL_32:
    swift_release();
    v37[0] = v15;
    swift_bridgeObjectRetain();
    sub_1C20B8F6C(v37);
    if (v33)
      goto LABEL_43;
    swift_release();
    v25 = v37[0];
    v26 = *((_QWORD *)v37[0] + 2);
    if (!v26)
      return swift_release();
    v27 = 0;
    while (*(_QWORD *)(a4 + 16))
    {
      v28 = sub_1C20A9B94(*(_QWORD *)&v25[8 * v27 + 32]);
      if ((v29 & 1) == 0)
        goto LABEL_41;
      sub_1C20A84A8(*(_QWORD *)(a4 + 56) + 40 * v28, (uint64_t)v37);
      v30 = v38;
      v31 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 48))(a1, a5, v40, v30, v31);
      ++v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if (v26 == v27)
        return swift_release();
    }
    goto LABEL_40;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
    goto LABEL_19;
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_32;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C2131194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v32 = a3;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v12 >= v11)
      goto LABEL_34;
    v17 = *(_QWORD *)(v7 + 8 * v12);
    if (v17)
      goto LABEL_22;
    v18 = v12 + 1;
    if (v12 + 1 >= v11)
      goto LABEL_34;
    v17 = *(_QWORD *)(v7 + 8 * v18);
    if (!v17)
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v11)
        goto LABEL_34;
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (!v17)
      {
        v18 = v12 + 3;
        if (v12 + 3 >= v11)
          goto LABEL_34;
        v17 = *(_QWORD *)(v7 + 8 * v18);
        if (!v17)
        {
          v18 = v12 + 4;
          if (v12 + 4 >= v11)
            goto LABEL_34;
          v17 = *(_QWORD *)(v7 + 8 * v18);
          if (!v17)
          {
            v18 = v12 + 5;
            if (v12 + 5 >= v11)
              goto LABEL_34;
            v17 = *(_QWORD *)(v7 + 8 * v18);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_21:
    v12 = v18;
LABEL_22:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_23:
    v19 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v15);
    if (v19 >= a2 && v19 < a3)
    {
      v33[0] = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C20B9958(0, *((_QWORD *)v13 + 2) + 1, 1);
        v13 = v33[0];
      }
      v21 = *((_QWORD *)v13 + 2);
      v20 = *((_QWORD *)v13 + 3);
      v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        sub_1C20B9958((char *)(v20 > 1), v21 + 1, 1);
        v22 = v21 + 1;
        v13 = v33[0];
      }
      *((_QWORD *)v13 + 2) = v22;
      *(_QWORD *)&v13[8 * v21 + 32] = v19;
      a3 = v32;
    }
  }
  v18 = v12 + 6;
  if (v12 + 6 >= v11)
  {
LABEL_34:
    swift_release();
    v33[0] = v13;
    swift_bridgeObjectRetain();
    sub_1C20B8F6C(v33);
    if (v31)
      goto LABEL_45;
    swift_release();
    v23 = v33[0];
    v24 = *((_QWORD *)v33[0] + 2);
    if (!v24)
      return swift_release();
    v25 = 0;
    while (*(_QWORD *)(a4 + 16))
    {
      v26 = sub_1C20A9B94(*(_QWORD *)&v23[8 * v25 + 32]);
      if ((v27 & 1) == 0)
        goto LABEL_43;
      sub_1C20A84A8(*(_QWORD *)(a4 + 56) + 40 * v26, (uint64_t)v33);
      v28 = v34;
      v29 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 48))(v36, &type metadata for HashVisitor, &off_1E7BD87B8, v28, v29);
      ++v25;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      if (v24 == v25)
        return swift_release();
    }
    goto LABEL_42;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_21;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_34;
    v17 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C21314AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C21314F4(a1, a2, a3, a4, (uint64_t)&type metadata for BinaryEncodingSizeVisitor.BinaryEncodingMessageSetSizeVisitor, (uint64_t)&off_1E7BDD498);
}

uint64_t sub_1C21314D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C21314F4(a1, a2, a3, a4, (uint64_t)&type metadata for BinaryEncodingVisitor.BinaryEncodingMessageSetVisitor, (uint64_t)&off_1E7BDE1B0);
}

uint64_t sub_1C21314F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a6;
  v9 = a4 + 64;
  v10 = 1 << *(_BYTE *)(a4 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a4 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = a3;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v14 >= v13)
      goto LABEL_34;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    if (v19)
      goto LABEL_22;
    v20 = v14 + 1;
    if (v14 + 1 >= v13)
      goto LABEL_34;
    v19 = *(_QWORD *)(v9 + 8 * v20);
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v13)
        goto LABEL_34;
      v19 = *(_QWORD *)(v9 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v13)
          goto LABEL_34;
        v19 = *(_QWORD *)(v9 + 8 * v20);
        if (!v19)
        {
          v20 = v14 + 4;
          if (v14 + 4 >= v13)
            goto LABEL_34;
          v19 = *(_QWORD *)(v9 + 8 * v20);
          if (!v19)
          {
            v20 = v14 + 5;
            if (v14 + 5 >= v13)
              goto LABEL_34;
            v19 = *(_QWORD *)(v9 + 8 * v20);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_21:
    v14 = v20;
LABEL_22:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_23:
    v21 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v17);
    if (v21 >= a2 && v21 < a3)
    {
      v37[0] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C20B9958(0, *((_QWORD *)v15 + 2) + 1, 1);
        v15 = v37[0];
      }
      v23 = *((_QWORD *)v15 + 2);
      v22 = *((_QWORD *)v15 + 3);
      v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1C20B9958((char *)(v22 > 1), v23 + 1, 1);
        v24 = v23 + 1;
        v15 = v37[0];
      }
      *((_QWORD *)v15 + 2) = v24;
      *(_QWORD *)&v15[8 * v23 + 32] = v21;
      a3 = v34;
    }
  }
  v20 = v14 + 6;
  if (v14 + 6 >= v13)
  {
LABEL_34:
    swift_release();
    v37[0] = v15;
    swift_bridgeObjectRetain();
    sub_1C20B8F6C(v37);
    if (v33)
      goto LABEL_45;
    swift_release();
    v25 = v37[0];
    v26 = *((_QWORD *)v37[0] + 2);
    if (!v26)
      return swift_release();
    v27 = 0;
    while (*(_QWORD *)(a4 + 16))
    {
      v28 = sub_1C20A9B94(*(_QWORD *)&v25[8 * v27 + 32]);
      if ((v29 & 1) == 0)
        goto LABEL_43;
      sub_1C20A84A8(*(_QWORD *)(a4 + 56) + 40 * v28, (uint64_t)v37);
      v30 = v38;
      v31 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 48))(a1, a5, v40, v30, v31);
      ++v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if (v26 == v27)
        return swift_release();
    }
    goto LABEL_42;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
    goto LABEL_21;
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_34;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C2131804(uint64_t a1, unsigned int a2)
{
  return sub_1C213258C(a1, a2);
}

uint64_t sub_1C2131818(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *v2;
    v5 = (8 * a2) | 5;
    v6 = result + 32;
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      v9 = *(_DWORD *)(v6 + 4 * v7);
      if (v5 < 0x80)
      {
        LOBYTE(v8) = v5;
      }
      else
      {
        v10 = v5;
        do
        {
          *v4++ = v10 | 0x80;
          v8 = v10 >> 7;
          v11 = v10 >> 14;
          v10 >>= 7;
        }
        while (v11);
      }
      ++v7;
      *v4 = v8;
      *(_DWORD *)(v4 + 1) = v9;
      v4 += 5;
    }
    while (v7 != v3);
    result = swift_bridgeObjectRelease();
    *v2 = v4;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedFloatField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(Swift::Int, uint64_t, uint64_t, float);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(Swift::Int, uint64_t, uint64_t, float))(v3 + 8);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(fieldNumber, v8, v7, *((float *)value._rawValue + v12 + 8));
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2131988(uint64_t a1, unsigned int a2)
{
  return sub_1C213268C(a1, a2);
}

uint64_t sub_1C213199C(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *v2;
    v5 = (8 * a2) | 1;
    v6 = result + 32;
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      v9 = *(_QWORD *)(v6 + 8 * v7);
      if (v5 < 0x80)
      {
        LOBYTE(v8) = v5;
      }
      else
      {
        v10 = v5;
        do
        {
          *v4++ = v10 | 0x80;
          v8 = v10 >> 7;
          v11 = v10 >> 14;
          v10 >>= 7;
        }
        while (v11);
      }
      ++v7;
      *v4 = v8;
      *(_QWORD *)(v4 + 1) = v9;
      v4 += 9;
    }
    while (v7 != v3);
    result = swift_bridgeObjectRelease();
    *v2 = v4;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedDoubleField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(Swift::Int, uint64_t, uint64_t, double);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(Swift::Int, uint64_t, uint64_t, double))(v3 + 16);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(fieldNumber, v8, v7, *((double *)value._rawValue + v12 + 4));
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C2131B08(unint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = (int *)(result + 32);
    v6 = v3 - 1;
    do
    {
      v7 = v6;
      v8 = *v5++;
      result = sub_1C20AE408(v8, a2);
      if (v2)
        break;
      v6 = v7 - 1;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1C2131B58(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *v2;
    do
    {
      v7 = *(int *)(result + 32 + 4 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          v9 = v8 >> 7;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      *v5 = v9;
      v11 = v5 + 1;
      if (v7 < 0x80)
      {
        LOBYTE(v6) = v7;
      }
      else
      {
        do
        {
          *v11++ = v7 | 0x80;
          v6 = v7 >> 7;
          v12 = v7 >> 14;
          v7 >>= 7;
        }
        while (v12);
      }
      ++v4;
      *v11 = v6;
      v5 = v11 + 1;
    }
    while (v4 != v3);
    *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 24);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((unsigned int *)value._rawValue + v12 + 8), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2131C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2131F48(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C20AE408);
}

uint64_t sub_1C2131CA0(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *v2;
    do
    {
      v7 = *(_QWORD *)(result + 32 + 8 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          v9 = v8 >> 7;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      *v5 = v9;
      v11 = v5 + 1;
      if (v7 < 0x80)
      {
        LOBYTE(v6) = v7;
      }
      else
      {
        do
        {
          *v11++ = v7 | 0x80;
          v6 = v7 >> 7;
          v12 = v7 >> 14;
          v7 >>= 7;
        }
        while (v12);
      }
      ++v4;
      *v11 = v6;
      v5 = v11 + 1;
    }
    while (v4 != v3);
    *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 32);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((_QWORD *)value._rawValue + v12 + 4), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C2131DCC(unint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = (unsigned int *)(result + 32);
    v6 = v3 - 1;
    do
    {
      v7 = v6;
      v8 = *v5++;
      result = sub_1C20AE408(v8, a2);
      if (v2)
        break;
      v6 = v7 - 1;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1C2131E1C(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *v2;
    do
    {
      v7 = *(unsigned int *)(result + 32 + 4 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          v9 = v8 >> 7;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      *v5 = v9;
      v11 = v5 + 1;
      if (v7 < 0x80)
      {
        LOBYTE(v6) = v7;
      }
      else
      {
        do
        {
          *v11++ = v7 | 0x80;
          v6 = v7 >> 7;
          v12 = v7 >> 14;
          v7 >>= 7;
        }
        while (v12);
      }
      ++v4;
      *v11 = v6;
      v5 = v11 + 1;
    }
    while (v4 != v3);
    *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 40);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((unsigned int *)value._rawValue + v12 + 8), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2131F48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(result + 16);
  if (v6)
  {
    v9 = (uint64_t *)(result + 32);
    v10 = v6 - 1;
    do
    {
      v11 = v10;
      v12 = *v9++;
      result = a5(v12, a2);
      if (v5)
        break;
      v10 = v11 - 1;
    }
    while (v11);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedUInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 48);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((_QWORD *)value._rawValue + v12 + 4), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2132038(uint64_t a1, unsigned int a2)
{
  return sub_1C213204C(a1, a2);
}

uint64_t sub_1C213204C(uint64_t result, unsigned int a2)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 8 * a2;
    v5 = *v2;
    v6 = (int *)(result + 32);
    if (((a2 >> 25) & 0xF) != 0)
      v7 = 5;
    else
      v7 = 4;
    v8 = 1;
    if (v4 >= 0x80)
      v8 = 2;
    if (v4 < 0x200000)
      v7 = 3;
    if (v4 >= 0x4000)
      v9 = v7;
    else
      v9 = v8;
    while (1)
    {
      v10 = *v6++;
      v11 = (2 * v10) ^ (v10 >> 31);
      if (v11 >= 0x80)
      {
        if (v11 >> 14)
        {
          if (v11 >= 0x200000)
            v12 = v11 >> 28 ? 5 : 4;
          else
            v12 = 3;
        }
        else
        {
          v12 = 2;
        }
      }
      else
      {
        v12 = 1;
      }
      v13 = v12 + v9;
      v14 = __OFADD__(v5, v13);
      v5 += v13;
      if (v14)
        break;
      if (!--v3)
      {
        *v2 = v5;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21320F8(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  unint64_t v13;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *v2;
    do
    {
      v7 = *(int *)(result + 32 + 4 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          v9 = v8 >> 7;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      v11 = (2 * v7) ^ (v7 >> 63);
      *v5 = v9;
      v12 = v5 + 1;
      if (v11 < 0x80)
      {
        LOBYTE(v6) = v11;
      }
      else
      {
        do
        {
          *v12++ = v11 | 0x80;
          v6 = v11 >> 7;
          v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
      }
      ++v4;
      *v12 = v6;
      v5 = v12 + 1;
    }
    while (v4 != v3);
    *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((unsigned int *)value._rawValue + v12 + 8), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C213222C(uint64_t a1, unsigned int a2)
{
  return sub_1C2132240(a1, a2);
}

uint64_t sub_1C2132240(uint64_t result, unsigned int a2)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 8 * a2;
    v5 = *v2;
    v6 = (uint64_t *)(result + 32);
    v7 = 4;
    if (((a2 >> 25) & 0xF) != 0)
      v7 = 5;
    v8 = 1;
    if (v4 >= 0x80)
      v8 = 2;
    if (v4 < 0x200000)
      v7 = 3;
    if (v4 >= 0x4000)
      v9 = v7;
    else
      v9 = v8;
    while (1)
    {
      v10 = *v6++;
      v11 = (2 * v10) ^ (v10 >> 63);
      if (v11 < 0x80)
      {
        v12 = 1;
        goto LABEL_26;
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        v12 = 10;
        goto LABEL_26;
      }
      if (v11 >> 35)
      {
        if (v11 >> 49)
        {
          v11 >>= 28;
          v12 = 8;
LABEL_24:
          if (!(v11 >> 28))
            goto LABEL_26;
LABEL_25:
          ++v12;
          goto LABEL_26;
        }
        v12 = 6;
        if (v11 >> 42)
          goto LABEL_25;
      }
      else
      {
        if (v11 >= 0x200000)
        {
          v12 = 4;
          goto LABEL_24;
        }
        v12 = 2;
        if (v11 >= 0x4000)
          goto LABEL_25;
      }
LABEL_26:
      v13 = __OFADD__(v5, v12 + v9);
      v5 += v12 + v9;
      if (v13)
      {
        __break(1u);
        return result;
      }
      if (!--v3)
      {
        *v2 = v5;
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_1C2132320(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  unint64_t v13;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *v2;
    do
    {
      v7 = *(_QWORD *)(result + 32 + 8 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          v9 = v8 >> 7;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      v11 = (2 * v7) ^ (v7 >> 63);
      *v5 = v9;
      v12 = v5 + 1;
      if (v11 < 0x80)
      {
        LOBYTE(v6) = v11;
      }
      else
      {
        do
        {
          *v12++ = v11 | 0x80;
          v6 = v11 >> 7;
          v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
      }
      ++v4;
      *v12 = v6;
      v5 = v12 + 1;
    }
    while (v4 != v3);
    *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 64);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((_QWORD *)value._rawValue + v12 + 4), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 72);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((unsigned int *)value._rawValue + v12 + 8), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 80);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((_QWORD *)value._rawValue + v12 + 4), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C213258C(uint64_t result, unsigned int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *v2;
    v5 = 8 * a2;
    v6 = 4;
    if (((a2 >> 25) & 0xF) != 0)
      v6 = 5;
    v7 = 1;
    if (v5 >= 0x80)
      v7 = 2;
    if (v5 < 0x200000)
      v6 = 3;
    if (v5 >= 0x4000)
      v8 = v6;
    else
      v8 = v7;
    v9 = v8 + 4;
    while (1)
    {
      v10 = v4 + v9;
      if (__OFADD__(v4, v9))
        break;
      v4 += v9;
      if (!--v3)
      {
        *v2 = v10;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 88);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((unsigned int *)value._rawValue + v12 + 8), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C213268C(uint64_t result, unsigned int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *v2;
    v5 = 8 * a2;
    v6 = 4;
    if (((a2 >> 25) & 0xF) != 0)
      v6 = 5;
    v7 = 1;
    if (v5 >= 0x80)
      v7 = 2;
    if (v5 < 0x200000)
      v6 = 3;
    if (v5 >= 0x4000)
      v8 = v6;
    else
      v8 = v7;
    v9 = v8 | 8;
    while (1)
    {
      v10 = v4 + v9;
      if (__OFADD__(v4, v9))
        break;
      v4 += v9;
      if (!--v3)
      {
        *v2 = v10;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 96);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((_QWORD *)value._rawValue + v12 + 4), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C213278C(uint64_t a1, unsigned int a2)
{
  return sub_1C21327A0(a1, a2);
}

uint64_t sub_1C21327A0(uint64_t result, unsigned int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = *v2;
    v5 = 8 * a2;
    v6 = 4;
    if (((a2 >> 25) & 0xF) != 0)
      v6 = 5;
    v7 = 1;
    if (v5 >= 0x80)
      v7 = 2;
    if (v5 < 0x200000)
      v6 = 3;
    if (v5 >= 0x4000)
      v8 = v6;
    else
      v8 = v7;
    v9 = v8 + 1;
    while (1)
    {
      v10 = v4 + v9;
      if (__OFADD__(v4, v9))
        break;
      v4 += v9;
      if (!--v3)
      {
        *v2 = v10;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2132804(uint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *v2;
    do
    {
      v7 = *(_BYTE *)(result + 32 + v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v6) = 8 * a2;
      }
      else
      {
        v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          v6 = v8 >> 7;
          v9 = v8 >> 14;
          v8 >>= 7;
        }
        while (v9);
      }
      ++v4;
      *v5 = v6;
      v5[1] = v7;
      v5 += 2;
    }
    while (v4 != v3);
    *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedBoolField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v11)(_QWORD, Swift::Int, uint64_t, uint64_t);
  uint64_t v12;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v11 = *(void (**)(_QWORD, Swift::Int, uint64_t, uint64_t))(v3 + 104);
    swift_bridgeObjectRetain();
    v12 = 0;
    do
    {
      v11(*((unsigned __int8 *)value._rawValue + v12 + 32), fieldNumber, v8, v7);
      if (v5)
        break;
    }
    while (v6 - 1 != v12++);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedStringField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t, Swift::Int, uint64_t, uint64_t);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = v4;
  v6 = *((_QWORD *)value._rawValue + 2);
  if (v6)
  {
    v7 = v3;
    v8 = v2;
    v10 = *(void (**)(uint64_t, uint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 112);
    v11 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      swift_bridgeObjectRetain();
      v10(v12, v13, fieldNumber, v8, v7);
      if (v5)
        break;
      v11 += 2;
      swift_bridgeObjectRelease();
      if (!--v6)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C21329C8(uint64_t a1)
{
  return sub_1C21329DC(a1);
}

uint64_t sub_1C21329DC(uint64_t result)
{
  if (*(_QWORD *)(result + 16))
    return ((uint64_t (*)(void))((char *)&loc_1C2132A3C + dword_1C2132B24[*(_QWORD *)(result + 40) >> 62]))();
  return result;
}

uint64_t sub_1C2132B34(uint64_t result, int a2)
{
  _BYTE **v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  if (*(_QWORD *)(result + 16))
  {
    v3 = *v2;
    v4 = (8 * a2) | 2;
    v5 = result + 32;
    swift_bridgeObjectRetain();
    v6 = *(_QWORD *)(v5 + 8);
    if (v4 < 0x80)
    {
      LOBYTE(v8) = v4;
    }
    else
    {
      v7 = v4;
      do
      {
        *v3++ = v7 | 0x80;
        v8 = v7 >> 7;
        v9 = v7 >> 14;
        v7 >>= 7;
      }
      while (v9);
    }
    *v3 = v8;
    __asm { BR              X9 }
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedBytesField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, unint64_t, Swift::Int, uint64_t, uint64_t);
  unint64_t *i;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v12 = v2;
  v5 = *((_QWORD *)value._rawValue + 2);
  if (v5)
  {
    v6 = v3;
    v8 = *(void (**)(uint64_t, unint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 120);
    for (i = (unint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      v10 = *(i - 1);
      v11 = *i;
      sub_1C20A8008(v10, *i);
      v8(v10, v11, fieldNumber, v12, v6);
      if (v4)
        break;
      sub_1C20A8058(v10, v11);
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C20A8058(v10, v11);
  }
}

uint64_t sub_1C2133018(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C2130E98(v3, a2, a3, *a1, (uint64_t)&type metadata for BinaryEncodingSizeVisitor, (uint64_t)&off_1E7BDD298);
}

uint64_t sub_1C2133044(unint64_t a1, uint64_t a2)
{
  return sub_1C213306C(a1, a2);
}

uint64_t sub_1C2133058(unint64_t a1, uint64_t a2)
{
  return sub_1C212FE14(a1, a2);
}

uint64_t sub_1C213306C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C21197B4(a2);
  if (!v2)
    return sub_1C211E3C4(a1);
  return result;
}

uint64_t sub_1C21330A4(uint64_t a1, uint64_t a2)
{
  return sub_1C2130130(a1, a2);
}

uint64_t sub_1C21330B8(uint64_t a1, uint64_t a2)
{
  return sub_1C2130490(a1, a2);
}

uint64_t sub_1C21330CC(uint64_t a1, uint64_t a2)
{
  return sub_1C2130850(a1, a2);
}

uint64_t sub_1C21330E0(uint64_t a1, int a2)
{
  return sub_1C2131818(a1, a2);
}

uint64_t sub_1C21330F4(uint64_t a1, int a2)
{
  return sub_1C213199C(a1, a2);
}

uint64_t sub_1C2133108(uint64_t a1, int a2)
{
  return sub_1C2131B58(a1, a2);
}

uint64_t sub_1C213311C(uint64_t a1, int a2)
{
  return sub_1C2131CA0(a1, a2);
}

uint64_t sub_1C2133130(uint64_t a1, int a2)
{
  return sub_1C2131E1C(a1, a2);
}

uint64_t sub_1C2133144(uint64_t a1, int a2)
{
  return sub_1C21320F8(a1, a2);
}

uint64_t sub_1C2133158(uint64_t a1, int a2)
{
  return sub_1C2132320(a1, a2);
}

uint64_t sub_1C213316C(uint64_t a1, int a2)
{
  return sub_1C2132804(a1, a2);
}

uint64_t sub_1C2133180(uint64_t a1, int a2)
{
  return sub_1C2132B34(a1, a2);
}

uint64_t sub_1C2133194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v28 = a6;
  v26 = a2;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v22 - v15;
  v17 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v17, a4))
    return swift_bridgeObjectRelease();
  v23 = v11;
  v18 = 0;
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 128);
  v25 = a5;
  while (1)
  {
    v19 = sub_1C21755C4();
    sub_1C2175594();
    if ((v19 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v16, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18, a4);
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_11;
      goto LABEL_5;
    }
    result = sub_1C21756FC();
    if (v23 != 8)
      break;
    v29 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v16, &v29, a4);
    swift_unknownObjectRelease();
    v20 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v16, a4);
    v24(v13, v26, a4, v28, v27, v25);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    if (!v6)
    {
      ++v18;
      if (v20 != MEMORY[0x1C3BB7A60](a1, a4))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C213338C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitRepeatedGroupField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitRepeatedGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v28 = a6;
  v26 = a2;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v22 - v15;
  v17 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v17, a4))
    return swift_bridgeObjectRelease();
  v23 = v11;
  v18 = 0;
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 144);
  v25 = a5;
  while (1)
  {
    v19 = sub_1C21755C4();
    sub_1C2175594();
    if ((v19 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v16, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18, a4);
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_11;
      goto LABEL_5;
    }
    result = sub_1C21756FC();
    if (v23 != 8)
      break;
    v29 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v16, &v29, a4);
    swift_unknownObjectRelease();
    v20 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v16, a4);
    v24(v13, v26, a4, v28, v27, v25);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    if (!v6)
    {
      ++v18;
      if (v20 != MEMORY[0x1C3BB7A60](a1, a4))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2133584(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C2130E98(v3, a2, a3, *a1, (uint64_t)&type metadata for BinaryEncodingVisitor, (uint64_t)&off_1E7BDDF58);
}

uint64_t sub_1C21335B0(int a1, unint64_t a2)
{
  return sub_1C212FA64(a1, a2);
}

uint64_t sub_1C21335C4(unsigned int a1, unint64_t a2)
{
  return sub_1C212FC0C(a1, a2);
}

uint64_t sub_1C21335D8(unint64_t a1, unint64_t a2)
{
  return sub_1C212FF6C(a1, a2);
}

uint64_t sub_1C21335EC(unint64_t a1, unint64_t a2)
{
  return sub_1C212FD4C(a1, a2);
}

uint64_t sub_1C2133600(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C2130B94(v3, a2, a3, *a1);
}

void sub_1C213361C(Swift::Int a1, Swift::Float a2)
{
  Visitor.visitSingularFloatField(value:fieldNumber:)(a2, a1);
}

void sub_1C2133630(Swift::Int32 a1, Swift::Int a2)
{
  Visitor.visitSingularInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133644(Swift::UInt32 a1, Swift::Int a2)
{
  Visitor.visitSingularUInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133658(Swift::Int32 a1, Swift::Int a2)
{
  Visitor.visitSingularSInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C213366C(Swift::Int64 a1, Swift::Int a2)
{
  Visitor.visitSingularSInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133680(Swift::UInt32 a1, Swift::Int a2)
{
  Visitor.visitSingularFixed32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133694(Swift::UInt64 a1, Swift::Int a2)
{
  Visitor.visitSingularFixed64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C21336A8(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedFloatField(value:fieldNumber:)(a1, a2);
}

void sub_1C21336BC(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedDoubleField(value:fieldNumber:)(a1, a2);
}

void sub_1C21336D0(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C21336E4(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C21336F8(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C213370C(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedUInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133720(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedSInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133734(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedSInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133748(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedFixed32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C213375C(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedFixed64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133770(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedSFixed32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133784(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedSFixed64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133798(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedBoolField(value:fieldNumber:)(a1, a2);
}

void sub_1C21337AC(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedStringField(value:fieldNumber:)(a1, a2);
}

void sub_1C21337C0(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitRepeatedBytesField(value:fieldNumber:)(a1, a2);
}

void sub_1C21337D4(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedFloatField(value:fieldNumber:)(a1, a2);
}

void sub_1C21337E8(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedDoubleField(value:fieldNumber:)(a1, a2);
}

void sub_1C21337FC(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133810(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133824(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedUInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133838(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedUInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C213384C(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedSInt32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133860(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedSInt64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133874(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedFixed32Field(value:fieldNumber:)(a1, a2);
}

void sub_1C2133888(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedFixed64Field(value:fieldNumber:)(a1, a2);
}

void sub_1C213389C(Swift::OpaquePointer a1, Swift::Int a2)
{
  Visitor.visitPackedBoolField(value:fieldNumber:)(a1, a2);
}

void sub_1C21338B0(SiriOntologyProtobuf::ExtensionFieldValueSet a1, Swift::Int a2, Swift::Int a3)
{
  Visitor.visitExtensionFields(fields:start:end:)(a1, a2, a3);
}

void sub_1C21338C4(SiriOntologyProtobuf::ExtensionFieldValueSet a1, Swift::Int a2, Swift::Int a3)
{
  Visitor.visitExtensionFieldsAsMessageSet(fields:start:end:)(a1, a2, a3);
}

uint64_t dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of Visitor.visitSingularSInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of Visitor.visitSingularFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of Visitor.visitSingularFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of Visitor.visitSingularSFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of Visitor.visitSingularSFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 120))();
}

uint64_t dispatch thunk of Visitor.visitSingularGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 144))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedFloatField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedDoubleField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedUInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 224))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 232))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 240))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedBoolField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 248))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 272))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 288))();
}

uint64_t dispatch thunk of Visitor.visitPackedFloatField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 296))();
}

uint64_t dispatch thunk of Visitor.visitPackedDoubleField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 304))();
}

uint64_t dispatch thunk of Visitor.visitPackedInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 312))();
}

uint64_t dispatch thunk of Visitor.visitPackedInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 320))();
}

uint64_t dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 328))();
}

uint64_t dispatch thunk of Visitor.visitPackedUInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 336))();
}

uint64_t dispatch thunk of Visitor.visitPackedSInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 344))();
}

uint64_t dispatch thunk of Visitor.visitPackedSInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 352))();
}

uint64_t dispatch thunk of Visitor.visitPackedFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 360))();
}

uint64_t dispatch thunk of Visitor.visitPackedFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 368))();
}

uint64_t dispatch thunk of Visitor.visitPackedSFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 376))();
}

uint64_t dispatch thunk of Visitor.visitPackedSFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 384))();
}

uint64_t dispatch thunk of Visitor.visitPackedBoolField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 392))();
}

uint64_t dispatch thunk of Visitor.visitPackedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 400))();
}

uint64_t dispatch thunk of Visitor.visitMapField<A, B>(fieldType:value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 408))();
}

{
  return (*(uint64_t (**)(void))(a8 + 416))();
}

uint64_t dispatch thunk of Visitor.visitMapField<A, B>(fieldType:value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 424))(a1);
}

uint64_t dispatch thunk of Visitor.visitExtensionFields(fields:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 432))();
}

uint64_t dispatch thunk of Visitor.visitExtensionFieldsAsMessageSet(fields:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 440))();
}

uint64_t dispatch thunk of Visitor.visitUnknown(bytes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 448))();
}

uint64_t sub_1C2133D38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C2175834();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 8;
      result = sub_1C2175858();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C2133D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1C2175834();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 4;
      result = sub_1C217584C();
      --v3;
    }
    while (v3);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSFixed32Field(value:fieldNumber:)(Swift::Int32 value, Swift::Int fieldNumber)
{
  Visitor.visitSingularSInt32Field(value:fieldNumber:)(value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSFixed64Field(value:fieldNumber:)(Swift::Int64 value, Swift::Int fieldNumber)
{
  Visitor.visitSingularSInt64Field(value:fieldNumber:)(value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  Visitor.visitPackedSInt32Field(value:fieldNumber:)(value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  Visitor.visitPackedSInt64Field(value:fieldNumber:)(value, fieldNumber);
}

uint64_t sub_1C2133E30(uint64_t a1, uint64_t a2)
{
  return sub_1C211DC90(a1, a2);
}

uint64_t sub_1C2133E44(uint64_t a1, uint64_t a2)
{
  return sub_1C211DCA4(a1, a2);
}

uint64_t sub_1C2133E58(int a1, unint64_t a2)
{
  return sub_1C21335B0(a1, a2);
}

uint64_t static Message.jsonString<A>(from:options:)(void (*a1)(char *, char *, uint64_t), char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v25[2];

  v13 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v17 = a2[1];
  v25[0] = *a2;
  v25[1] = v17;
  v18 = static Message.jsonUTF8Data<A>(from:options:)(a1, v25, a3, a4, a5, a6);
  if (v6)
    return (uint64_t)v16;
  v20 = v18;
  v21 = v19;
  sub_1C217545C();
  result = sub_1C2175438();
  if (v23)
  {
    v16 = (char *)result;
    sub_1C20A8058(v20, v21);
    return (uint64_t)v16;
  }
  __break(1u);
  return result;
}

uint64_t static Message.jsonUTF8Data<A>(from:options:)(void (*a1)(char *, char *, uint64_t), char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t AssociatedConformanceWitness;
  uint64_t v58;
  char *v59;
  _OWORD v60[2];
  char *v61;
  __int16 v62;
  __int128 v63;
  __int128 v64;
  char v65;
  char v66;
  uint64_t AssociatedTypeWitness;

  v10 = a3;
  v55 = a1;
  v58 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C2175690();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v52 - v17;
  v53 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v16, v19);
  v56 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedConformanceWitness = *(_QWORD *)(a6 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v21);
  v59 = (char *)&v52 - v22;
  v23 = *a2;
  v24 = a2[1];
  v25 = swift_conformsToProtocol2();
  if (v25)
    v26 = v25;
  else
    v26 = 0;
  if (v25)
    v27 = v10;
  else
    v27 = 0;
  if (!v27)
  {
    sub_1C20C6080();
    swift_allocError();
    *v38 = 4;
    swift_willThrow();
LABEL_36:
    swift_bridgeObjectRelease();
    return v10;
  }
  (*(void (**)(_OWORD *__return_ptr))(v26 + 8))(v60);
  v63 = v60[0];
  v64 = v60[1];
  v65 = v23;
  v66 = v24;
  v28 = sub_1C214E1A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v30 = *((_QWORD *)v28 + 2);
  v29 = *((_QWORD *)v28 + 3);
  if (v30 >= v29 >> 1)
    v28 = sub_1C214E1A4((char *)(v29 > 1), v30 + 1, 1, v28);
  v31 = v53;
  *((_QWORD *)v28 + 2) = v30 + 1;
  v28[v30 + 32] = 91;
  v61 = v28;
  v62 = 256;
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 16))(v56, v55, a4);
  sub_1C2175588();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1C217569C();
  v32 = v58;
  v56 = *(char **)(v58 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v56)(v18, 1, v10) != 1)
  {
    v55 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    while (1)
    {
      v55(v13, v18, v10);
      v39 = v61;
      if ((v62 & 0x100) == 0)
      {
        v40 = v62;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v61 = v39;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v39 = sub_1C214E1A4(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
          v61 = v39;
        }
        v43 = *((_QWORD *)v39 + 2);
        v42 = *((_QWORD *)v39 + 3);
        if (v43 >= v42 >> 1)
          v39 = sub_1C214E1A4((char *)(v42 > 1), v43 + 1, 1, v39);
        *((_QWORD *)v39 + 2) = v43 + 1;
        v39[v43 + 32] = v40;
        v61 = v39;
      }
      v44 = swift_isUniquelyReferenced_nonNull_native();
      v61 = v39;
      if ((v44 & 1) == 0)
      {
        v39 = sub_1C214E1A4(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
        v61 = v39;
      }
      v46 = *((_QWORD *)v39 + 2);
      v45 = *((_QWORD *)v39 + 3);
      if (v46 >= v45 >> 1)
        v39 = sub_1C214E1A4((char *)(v45 > 1), v46 + 1, 1, v39);
      *((_QWORD *)v39 + 2) = v46 + 1;
      v39[v46 + 32] = 123;
      v61 = v39;
      v62 = 256;
      (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a5 + 72))(&v61, &type metadata for JSONEncodingVisitor, &off_1E7BDDB08, v10, a5);
      if (v6)
        break;
      v47 = v61;
      v48 = swift_isUniquelyReferenced_nonNull_native();
      v61 = v47;
      if ((v48 & 1) == 0)
      {
        v47 = sub_1C214E1A4(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
        v61 = v47;
      }
      v50 = *((_QWORD *)v47 + 2);
      v49 = *((_QWORD *)v47 + 3);
      if (v50 >= v49 >> 1)
        v47 = sub_1C214E1A4((char *)(v49 > 1), v50 + 1, 1, v47);
      *((_QWORD *)v47 + 2) = v50 + 1;
      v47[v50 + 32] = 125;
      v61 = v47;
      v62 = 44;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v10);
      sub_1C217569C();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v56)(v18, 1, v10) == 1)
        goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v59, AssociatedTypeWitness);
    v10 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_36;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v54 + 8))(v59, AssociatedTypeWitness);
  v33 = v61;
  v34 = swift_isUniquelyReferenced_nonNull_native();
  v61 = v33;
  if ((v34 & 1) == 0)
  {
    v33 = sub_1C214E1A4(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
    v61 = v33;
  }
  v36 = *((_QWORD *)v33 + 2);
  v35 = *((_QWORD *)v33 + 3);
  if (v36 >= v35 >> 1)
    v33 = sub_1C214E1A4((char *)(v35 > 1), v36 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v36 + 1;
  v33[v36 + 32] = 93;
  v61 = v33;
  v62 = 44;
  v37 = swift_bridgeObjectRetain();
  v10 = sub_1C214EF2C(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t static Message.array(fromJSONString:options:)(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v10 = sub_1C2175468();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v15 = a1 & 0xFFFFFFFFFFFFLL;
  if (v15
    && (v25 = v5,
        v16 = *a3,
        v17 = *((_BYTE *)a3 + 8),
        sub_1C217545C(),
        v18 = sub_1C217542C(),
        v20 = v19,
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10),
        v20 >> 60 != 15))
  {
    v23 = v16;
    v24 = v17;
    a5 = static Message.array(fromJSONUTF8Data:options:)();
    sub_1C20AE1C8(v18, v20);
  }
  else
  {
    sub_1C20AFA84();
    swift_allocError();
    *v21 = xmmword_1C2175D80;
    swift_willThrow();
  }
  return a5;
}

uint64_t static Message.array(fromJSONUTF8Data:options:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1C21755F4();
  result = sub_1C2175348();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1C2134798@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  _OWORD *v20;
  uint64_t v21;

  result = sub_1C21753CC();
  v21 = result;
  if (!a1)
    goto LABEL_13;
  v12 = a2 - (_QWORD)a1;
  if (a2 - (uint64_t)a1 < 1)
    goto LABEL_13;
  type metadata accessor for DoubleParser();
  v13 = swift_allocObject();
  v14 = swift_slowAlloc();
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 24) = v14 + 128;
  sub_1C2147520((uint64_t)&v21, a3, a4);
  if (v5)
  {
    swift_release();
    sub_1C20A8840(0);
    return swift_bridgeObjectRelease();
  }
  v15 = v12;
  if (!v12)
    goto LABEL_12;
  v16 = a1;
  while (1)
  {
    v17 = *v16++;
    v18 = (1 << v17) & 0x100002600;
    if (v17 > 0x20 || v18 == 0)
      break;
    if (!--v15)
      goto LABEL_12;
  }
  if (!v15)
  {
LABEL_12:
    swift_release();
    sub_1C20A8840(0);
    result = v21;
LABEL_13:
    *a5 = result;
    return result;
  }
  swift_bridgeObjectRelease();
  sub_1C20AFA84();
  swift_allocError();
  *v20 = xmmword_1C217AAF0;
  swift_willThrow();
  swift_release();
  return sub_1C20A8840(0);
}

uint64_t sub_1C213498C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1C2134798(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t Google_Protobuf_Empty.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Empty.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Empty.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Empty.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1C2175DE0;
  return result;
}

unint64_t static Google_Protobuf_Empty.protoMessageName.getter()
{
  return 0xD000000000000015;
}

unint64_t sub_1C2134A24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t result;

  type metadata accessor for InternPool();
  v0 = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  v2 = sub_1C2171510(v1);
  v3 = sub_1C217172C(v1);
  result = sub_1C217172C(v1);
  qword_1EF75FB40 = v0;
  *(_QWORD *)algn_1EF75FB48 = v2;
  qword_1EF75FB50 = v3;
  unk_1EF75FB58 = result;
  return result;
}

uint64_t static Google_Protobuf_Empty._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCE0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FB48;
  v3 = qword_1EF75FB50;
  v4 = unk_1EF75FB58;
  *a1 = qword_1EF75FB40;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Empty.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t result;
  char v8;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  do
    result = v6(a2, a3);
  while (!v3 && (v8 & 1) == 0);
  return result;
}

void Google_Protobuf_Empty.traverse<A>(visitor:)()
{
  UnknownStorage.traverse<A>(visitor:)();
}

uint64_t static Google_Protobuf_Empty.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a1, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v7 = v6;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v7 & 1;
}

void Google_Protobuf_Empty.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C2175828();
  __asm { BR              X10 }
}

uint64_t sub_1C2134C78()
{
  unint64_t v0;
  uint64_t v1;

  if ((v0 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v1, v0);
  return sub_1C2175870();
}

double sub_1C2134D30@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C2134D40()
{
  return 0xD000000000000015;
}

uint64_t sub_1C2134D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Empty.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C2134D70()
{
  Google_Protobuf_Empty.traverse<A>(visitor:)();
}

uint64_t sub_1C2134D84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCE0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FB48;
  v3 = qword_1EF75FB50;
  v4 = unk_1EF75FB58;
  *a1 = qword_1EF75FB40;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2134E00()
{
  uint64_t v0;

  return sub_1C215A0D0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_1C2134E0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1C2175828();
  __asm { BR              X10 }
}

uint64_t sub_1C2134E7C()
{
  unint64_t v0;
  uint64_t v1;

  if ((v0 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v1, v0);
  return sub_1C2175870();
}

uint64_t sub_1C2134F34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a1, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v7 = v6;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v7 & 1;
}

unint64_t sub_1C2134FB0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2134FD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2134FD4()
{
  unint64_t result;

  result = qword_1EF75FB60;
  if (!qword_1EF75FB60)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Empty, &type metadata for Google_Protobuf_Empty);
    atomic_store(result, (unint64_t *)&qword_1EF75FB60);
  }
  return result;
}

unint64_t sub_1C2135018(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C2135044();
  result = sub_1C2135088();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2135044()
{
  unint64_t result;

  result = qword_1EF75FB68;
  if (!qword_1EF75FB68)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Empty, &type metadata for Google_Protobuf_Empty);
    atomic_store(result, (unint64_t *)&qword_1EF75FB68);
  }
  return result;
}

unint64_t sub_1C2135088()
{
  unint64_t result;

  result = qword_1EF75FB70;
  if (!qword_1EF75FB70)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Empty, &type metadata for Google_Protobuf_Empty);
    atomic_store(result, (unint64_t *)&qword_1EF75FB70);
  }
  return result;
}

unint64_t sub_1C21350D0()
{
  unint64_t result;

  result = qword_1EF75FB78;
  if (!qword_1EF75FB78)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Empty, &type metadata for Google_Protobuf_Empty);
    atomic_store(result, (unint64_t *)&qword_1EF75FB78);
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Empty()
{
  return &type metadata for Google_Protobuf_Empty;
}

uint64_t Google_Protobuf_Any.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  if (qword_1EF75CD58 != -1)
    swift_once();
  *(_QWORD *)(a1 + 16) = qword_1EF76E188;
  return swift_retain();
}

uint64_t Google_Protobuf_Any.typeURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C21351CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C2155710(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Any.typeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C2155710(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Any.typeURL.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v3[9] = *(_QWORD *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C213538C;
}

void sub_1C213538C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for AnyMessageStorage();
      swift_allocObject();
      v6 = (_QWORD *)swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C2155710(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for AnyMessageStorage();
      swift_allocObject();
      v9 = (_QWORD *)swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C2155710(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 16) = v3;
    *(_QWORD *)(v10 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Any.value.getter()
{
  return sub_1C21553BC();
}

uint64_t sub_1C21354F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  sub_1C20A8008(*a1, v4);
  swift_retain();
  v5 = sub_1C21553BC();
  v7 = v6;
  sub_1C20A8058(v3, v4);
  result = swift_release();
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t Google_Protobuf_Any.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[48];
  _QWORD v9[5];
  char v10;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C2155710(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  v9[0] = a1;
  v9[1] = a2;
  v10 = 0;
  sub_1C2135F08((uint64_t)v9, (uint64_t)v8);
  swift_beginAccess();
  swift_retain();
  sub_1C212F948((uint64_t)v8, v6 + 32);
  swift_endAccess();
  return swift_release();
}

uint64_t (*Google_Protobuf_Any.value.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1C21553BC();
  a1[1] = v3;
  return sub_1C2135670;
}

uint64_t sub_1C2135670(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return Google_Protobuf_Any.value.setter(*a1, v3);
  sub_1C20A8008(*a1, v3);
  Google_Protobuf_Any.value.setter(v2, v3);
  return sub_1C20A8058(v2, v3);
}

uint64_t Google_Protobuf_Any.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Any.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Any.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static Google_Protobuf_Any.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1C2135740()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6358, &qword_1EF75FB80);
}

uint64_t static Google_Protobuf_Any._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FB88;
  v3 = qword_1EF75FB90;
  v4 = unk_1EF75FB98;
  *a1 = qword_1EF75FB80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Any.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    v7 = (_QWORD *)swift_retain();
    *(_QWORD *)(v3 + 16) = sub_1C2155710(v7);
    swift_release();
  }
  v8 = swift_retain();
  sub_1C2135884(v8, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C2135884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  _BYTE v12[48];
  __int128 v13;
  char v14;
  __int128 v15;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        *(_QWORD *)&v15 = sub_1C21553BC();
        *((_QWORD *)&v15 + 1) = v11;
        (*(void (**)(__int128 *, uint64_t, uint64_t))(a4 + 360))(&v15, a3, a4);
        v13 = v15;
        v14 = 0;
        sub_1C2135F08((uint64_t)&v13, (uint64_t)v12);
        swift_beginAccess();
        sub_1C212F948((uint64_t)v12, a1 + 32);
        swift_endAccess();
      }
      else if (result == 1)
      {
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(a1 + 16, a3, a4);
        swift_endAccess();
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_Any.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_retain();
  sub_1C2135AC4(v7, a1, a2, a3);
  swift_release();
  if (!v3)
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t sub_1C2135AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);

  result = sub_1C2155D5C();
  if (!v4)
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 24);
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v9 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
      swift_bridgeObjectRetain();
      v12(v9, v10, 1, a3, a4);
      swift_bridgeObjectRelease();
    }
    sub_1C21553BC();
    __asm { BR              X10 }
  }
  return result;
}

void sub_1C2135BBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1C20A8058(v0, v2);
  if ((v2 & 0xFF000000000000) != 0)
  {
    v3 = sub_1C21553BC();
    v5 = v4;
    (*(void (**)(void))(v1 + 120))();
    sub_1C20A8058(v3, v5);
  }
  JUMPOUT(0x1C2135B04);
}

uint64_t Google_Protobuf_Any.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1C2175828();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v4 = v3 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  return sub_1C2175870();
}

uint64_t sub_1C2135CDC@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  if (qword_1EF75CD58 != -1)
    swift_once();
  *(_QWORD *)(a1 + 16) = qword_1EF76E188;
  return swift_retain();
}

unint64_t sub_1C2135D38()
{
  return 0xD000000000000013;
}

uint64_t sub_1C2135D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Any.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C2135D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Any.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C2135D7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FB88;
  v3 = qword_1EF75FB90;
  v4 = unk_1EF75FB98;
  *a1 = qword_1EF75FB80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

ValueMetadata *sub_1C2135DF8()
{
  uint64_t v0;

  return sub_1C2159DD8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C2135E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2135E84()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1C2175828();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v4 = v3 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  return sub_1C2175870();
}

uint64_t sub_1C2135F08(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t _s20SiriOntologyProtobuf07Google_C4_AnyV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  char v8;
  char v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = (_QWORD *)a2[2];
  if (v4 != v7 && (sub_1C2152554(v7) & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v5, v6);
  sub_1C20FD650(v2, v3);
  v9 = v8;
  sub_1C20A8058(v5, v6);
  sub_1C20A8058(v2, v3);
  return v9 & 1;
}

unint64_t sub_1C2135FE0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2136004();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2136004()
{
  unint64_t result;

  result = qword_1EF75FBA0;
  if (!qword_1EF75FBA0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Any, &type metadata for Google_Protobuf_Any);
    atomic_store(result, (unint64_t *)&qword_1EF75FBA0);
  }
  return result;
}

unint64_t sub_1C2136048(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C20C4DCC();
  result = sub_1C2136074();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2136074()
{
  unint64_t result;

  result = qword_1EF75FBA8;
  if (!qword_1EF75FBA8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Any, &type metadata for Google_Protobuf_Any);
    atomic_store(result, (unint64_t *)&qword_1EF75FBA8);
  }
  return result;
}

unint64_t sub_1C21360BC()
{
  unint64_t result;

  result = qword_1EF75FBB0[0];
  if (!qword_1EF75FBB0[0])
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Any, &type metadata for Google_Protobuf_Any);
    atomic_store(result, qword_1EF75FBB0);
  }
  return result;
}

uint64_t sub_1C2136100@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2136150(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1C20A8008(*a1, v2);
  return Google_Protobuf_Any.value.setter(v1, v2);
}

ValueMetadata *type metadata accessor for Google_Protobuf_Any()
{
  return &type metadata for Google_Protobuf_Any;
}

void type metadata accessor for _ProtobufMap()
{
  JUMPOUT(0x1C3BB7F1CLL);
}

uint64_t sub_1C21361AC()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for _ProtobufMessageMap()
{
  JUMPOUT(0x1C3BB7F1CLL);
}

void type metadata accessor for _ProtobufEnumMap()
{
  JUMPOUT(0x1C3BB7F1CLL);
}

SiriOntologyProtobuf::JSONEncodingOptions __swiftcall JSONEncodingOptions.init()()
{
  _WORD *v0;
  SiriOntologyProtobuf::JSONEncodingOptions result;

  *v0 = 0;
  return result;
}

uint64_t JSONEncodingOptions.alwaysPrintEnumsAsInts.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t JSONEncodingOptions.alwaysPrintEnumsAsInts.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*JSONEncodingOptions.alwaysPrintEnumsAsInts.modify())()
{
  return nullsub_1;
}

uint64_t JSONEncodingOptions.preserveProtoFieldNames.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t JSONEncodingOptions.preserveProtoFieldNames.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*JSONEncodingOptions.preserveProtoFieldNames.modify())()
{
  return nullsub_1;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for JSONEncodingOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncodingOptions(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2136310 + 4 * byte_1C217ADA5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1C2136344 + 4 * byte_1C217ADA0[v4]))();
}

uint64_t sub_1C2136344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C213634C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1C2136354);
  return result;
}

uint64_t sub_1C2136360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1C2136368);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C213636C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C2136374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JSONEncodingOptions()
{
  return &type metadata for JSONEncodingOptions;
}

uint64_t sub_1C2136390(uint64_t result, int a2)
{
  if ((result & 0x80000000) != 0)
  {
    if (a2)
      return (((int)result + 1) / a2 - 1);
  }
  else
  {
    if (a2)
      return ((int)result / a2);
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C21363BC(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    if (a2)
      return (result + 1) / a2 - 1;
  }
  else
  {
    if (a2)
    {
      result /= a2;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1C21363E8(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;

  v3 = a1;
  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_37;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a2) & 0xF;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
LABEL_5:
  v6 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return (char *)v6;
  v20 = MEMORY[0x1E0DEE9D8];
  result = sub_1C20B9958(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v8 = (v3 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0)
      LOBYTE(v8) = 1;
    v9 = 4 << v8;
    v10 = v3 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0)
      v10 = v4;
    v17 = v3;
    v18 = v10;
    v11 = 15;
    while (1)
    {
      v12 = v11;
      if ((v11 & 0xC) == v9)
        v12 = sub_1C2152200(v11, v3, a2);
      v13 = v12 >> 16;
      if (v12 >> 16 >= v18)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        v5 = sub_1C2175510();
        goto LABEL_5;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v15 = sub_1C2175540();
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v19[0] = v3;
        v19[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v15 = *((_BYTE *)v19 + v13);
      }
      else
      {
        v14 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v3 & 0x1000000000000000) == 0)
          v14 = sub_1C2175708();
        v15 = *(_BYTE *)(v14 + v13);
      }
      v6 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C20B9958(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v20;
      }
      v4 = *(_QWORD *)(v6 + 16);
      v16 = *(_QWORD *)(v6 + 24);
      if (v4 >= v16 >> 1)
      {
        sub_1C20B9958((char *)(v16 > 1), v4 + 1, 1);
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v4 + 1;
      *(_QWORD *)(v6 + 8 * v4 + 32) = v15;
      if ((v11 & 0xC) == v9)
      {
        v3 = v17;
        v11 = sub_1C2152200(v11, v17, a2);
        if ((a2 & 0x1000000000000000) == 0)
          goto LABEL_12;
LABEL_29:
        if (v18 <= v11 >> 16)
          goto LABEL_36;
        v11 = sub_1C217551C();
        if (!--v5)
          return (char *)v6;
      }
      else
      {
        v3 = v17;
        if ((a2 & 0x1000000000000000) != 0)
          goto LABEL_29;
LABEL_12:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        if (!--v5)
          return (char *)v6;
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C2136644(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  char *v7;
  unint64_t v8;
  _OWORD *v9;
  char *v10;
  unint64_t result;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int16 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _OWORD *v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  swift_bridgeObjectRetain();
  v7 = sub_1C21363E8(a1, a2);
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)v7 + 2);
  if (v8 <= 0x13)
    goto LABEL_2;
  v10 = v7 + 32;
  result = sub_1C2136D2C(*((_QWORD *)v7 + 4), *((_QWORD *)v7 + 5), *((_QWORD *)v7 + 6), *((_QWORD *)v7 + 7), 48, 57);
  if (v2)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return a2;
  }
  v19 = *((_QWORD *)v7 + 2);
  if (v19 < 5)
  {
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (*((_QWORD *)v7 + 8) != 45 || (uint64_t)result < 1)
    goto LABEL_2;
  v12 = result >> 4;
  if (result >> 4 >= 0x271)
    goto LABEL_2;
  if (v19 < 6)
    goto LABEL_59;
  if (v19 == 6)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v12 = *((_QWORD *)v7 + 9);
  if (v12 - 58 < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v21 = *((_QWORD *)v7 + 10);
  if (v21 < 48 || v21 >= 58)
    goto LABEL_100;
  if (v19 < 8)
  {
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  if (*((_QWORD *)v7 + 11) != 45)
    goto LABEL_2;
  v22 = v21 + 10 * v12;
  v12 = v22 - 528;
  if (v22 == 528 || v12 >= 0xD)
    goto LABEL_2;
  if (v19 < 9)
    goto LABEL_106;
  if (v19 == 9)
  {
LABEL_107:
    __break(1u);
LABEL_108:
    v57 = 0;
    v58 = 0;
    v59 = 100000000;
    while (1)
    {
      v60 = v59 * (v18 - 48);
      if (v60 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_130;
      if (v60 > 0x7FFFFFFF)
        goto LABEL_131;
      v32 = __OFADD__(v58, (_DWORD)v60);
      v58 += v60;
      if (v32)
        goto LABEL_132;
      if (v12 == v57)
        goto LABEL_117;
      if (v21 == v57)
        goto LABEL_133;
      v59 /= 10;
      v18 = *(_QWORD *)&v7[8 * v57++ + 200];
      if ((unint64_t)(v18 - 58) <= 0xFFFFFFFFFFFFFFF5)
      {
        v44 = v57 + 20;
        goto LABEL_77;
      }
    }
  }
  v23 = *((_QWORD *)v7 + 12);
  if ((unint64_t)(v23 - 58) < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v24 = *((_QWORD *)v7 + 13);
  if (v24 < 48 || v24 >= 58)
    goto LABEL_100;
  if (v19 < 0xB)
  {
    __break(1u);
LABEL_117:
    v44 = v8;
    goto LABEL_77;
  }
  if (*((_QWORD *)v7 + 14) != 84)
    goto LABEL_2;
  v14 = v24 + 10 * v23;
  if (v14 == 528 || (unint64_t)(v14 - 528) >= 0x20)
    goto LABEL_2;
  if (v19 < 0xC)
  {
    __break(1u);
    goto LABEL_119;
  }
  if (v19 == 12)
  {
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  v25 = *((_QWORD *)v7 + 15);
  if ((unint64_t)(v25 - 58) < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v26 = *((_QWORD *)v7 + 16);
  if (v26 < 48 || v26 >= 58)
    goto LABEL_100;
  if (v19 < 0xE)
    goto LABEL_120;
  if (*((_QWORD *)v7 + 17) != 58)
    goto LABEL_2;
  v13 = v26 + 10 * v25 - 528;
  if (v13 >= 0x18)
    goto LABEL_2;
  if (v19 < 0xF)
  {
    __break(1u);
    goto LABEL_126;
  }
  if (v19 == 15)
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  v27 = *((_QWORD *)v7 + 18);
  if ((unint64_t)(v27 - 58) < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v28 = *((_QWORD *)v7 + 19);
  if (v28 < 48 || v28 >= 58)
    goto LABEL_100;
  if (v19 < 0x11)
    goto LABEL_127;
  if (*((_QWORD *)v7 + 20) != 58)
    goto LABEL_2;
  v16 = v28 + 10 * v27 - 528;
  if (v16 >= 0x3C)
    goto LABEL_2;
  if (v19 < 0x12)
    goto LABEL_128;
  if (v19 == 18)
  {
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  v29 = *((_QWORD *)v7 + 21);
  if ((unint64_t)(v29 - 58) < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v30 = *((_QWORD *)v7 + 22);
  if (v30 < 48 || v30 >= 58)
    goto LABEL_100;
  v17 = v30 + 10 * v29 - 528;
  if (v17 >= 0x3E)
    goto LABEL_2;
  v15 = qword_1E7BD76C0[v22 - 525];
  HIDWORD(v31) = -1030792151 * (unsigned __int16)result;
  LODWORD(v31) = HIDWORD(v31);
  if ((v31 >> 4) >= 0xA3D70B)
  {
    if ((result & 3) != 0 || !((unsigned __int16)result % 0x64u) || v12 <= 2)
      goto LABEL_63;
LABEL_62:
    v32 = __OFADD__(v15++, 1);
    if (v32)
    {
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    goto LABEL_63;
  }
LABEL_61:
  if (v12 >= 3)
    goto LABEL_62;
LABEL_63:
  v33 = v15 + v14 - 529;
  if (__OFADD__(v15, v14 - 529))
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  v34 = 365 * result - 719527;
  v32 = __OFADD__(v33, v34);
  v35 = v33 + v34;
  if (v32)
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  v36 = result - 1;
  v32 = __OFADD__(v35, (result - 1) >> 2);
  v37 = v35 + ((result - 1) >> 2);
  if (v32)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  v38 = v36 / 0x64u;
  v32 = __OFSUB__(v37, v38);
  v39 = v37 - v38;
  if (v32)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  v40 = v36 / 0x190u;
  v32 = __OFADD__(v39, v40);
  v41 = v39 + v40;
  if (v32)
  {
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  v42 = 86400 * v41;
  if ((unsigned __int128)(v41 * (__int128)86400) >> 64 != (86400 * v41) >> 63)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  v43 = v17 + 60 * (v16 + 60 * v13);
  a2 = v42 + v43;
  if (__OFADD__(v42, v43))
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v19 < 0x14)
  {
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  if (*((_QWORD *)v7 + 23) == 46)
  {
    v12 = v8 - 21;
    if (v8 < 0x15)
      goto LABEL_75;
    v21 = v19 - 21;
    if (v19 < 0x15)
    {
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    v18 = *((_QWORD *)v7 + 24);
    if ((unint64_t)(v18 - 58) < 0xFFFFFFFFFFFFFFF6)
    {
LABEL_75:
      v44 = 20;
      goto LABEL_77;
    }
    goto LABEL_108;
  }
  v44 = 19;
LABEL_77:
  if (v44 >= v19)
  {
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  v45 = *(_QWORD *)&v10[8 * v44];
  if (v45 != 45 && v45 != 43)
  {
    v56 = v44;
    swift_bridgeObjectRelease();
    if (v45 != 90)
      goto LABEL_3;
    v3 = v56 + 1;
LABEL_103:
    if (v3 == v8)
      return a2;
    goto LABEL_3;
  }
  v62 = *(_QWORD *)&v10[8 * v44];
  v3 = v44 + 6;
  if (__OFADD__(v44, 6))
    goto LABEL_143;
  if ((uint64_t)v8 < v3)
    goto LABEL_2;
  v46 = v44;
  v47 = v44 + 1;
  if (v47 >= v19)
    goto LABEL_145;
  if (v46 + 2 >= v19)
  {
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  v48 = *(_QWORD *)&v10[8 * v47];
  if ((unint64_t)(v48 - 58) < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v49 = *(_QWORD *)&v10[8 * v46 + 16];
  if (v49 < 48 || v49 >= 58)
    goto LABEL_100;
  if (v46 + 4 >= v19)
    goto LABEL_148;
  if (v46 + 5 >= v19)
  {
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  v50 = *(_QWORD *)&v10[8 * v46 + 32];
  if ((unint64_t)(v50 - 58) < 0xFFFFFFFFFFFFFFF6)
    goto LABEL_100;
  v51 = *(_QWORD *)&v10[8 * v46 + 40];
  if (v51 < 48 || v51 >= 58)
    goto LABEL_100;
  v52 = v49 + 10 * v48 - 528;
  if (v52 > 0xD || (v4 = v51 + 10 * v50 - 528, v4 > 0x3B))
  {
LABEL_2:
    swift_bridgeObjectRelease();
LABEL_3:
    sub_1C20AFA84();
    swift_allocError();
    *v9 = xmmword_1C217ADE0;
    swift_willThrow();
    return a2;
  }
  v53 = *(_QWORD *)&v10[8 * v46 + 24];
  result = swift_bridgeObjectRelease();
  if (v53 != 58)
    goto LABEL_3;
  v19 = 3600 * v52;
  if (v62 == 43)
  {
    v32 = __OFSUB__(a2, v19);
    v54 = a2 - v19;
    if (!v32)
    {
      a2 = v54 - 60 * v4;
      if (!__OFSUB__(v54, 60 * v4))
      {
LABEL_123:
        if (a2 - 0x3AFFF44180 <= 0xFFFFFFB68879C77FLL)
          goto LABEL_3;
        goto LABEL_103;
      }
      __break(1u);
LABEL_100:
      sub_1C20AFA84();
      swift_allocError();
      *v55 = xmmword_1C217ADE0;
      swift_willThrow();
      goto LABEL_5;
    }
    goto LABEL_150;
  }
LABEL_121:
  v32 = __OFADD__(a2, v19);
  v61 = a2 + v19;
  if (v32)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  a2 = v61 + 60 * v4;
  if (!__OFADD__(v61, 60 * v4))
    goto LABEL_123;
LABEL_152:
  __break(1u);
  return result;
}

uint64_t sub_1C2136D2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;

  if (result < a5 || a6 < result || a2 < a5 || a6 < a2 || a3 < a5 || a6 < a3 || a4 < a5 || a6 < a4)
  {
    sub_1C20AFA84();
    swift_allocError();
    *v13 = xmmword_1C217ADE0;
    return swift_willThrow();
  }
  v6 = 1000 * result;
  if ((unsigned __int128)(result * (__int128)1000) >> 64 != (1000 * result) >> 63)
  {
    __break(1u);
    goto LABEL_19;
  }
  v7 = 100 * a2;
  if ((unsigned __int128)(a2 * (__int128)100) >> 64 != (100 * a2) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = __OFADD__(v6, v7);
  v9 = v6 + v7;
  if (v8)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = 10 * a3;
  if ((unsigned __int128)(a3 * (__int128)10) >> 64 != (10 * a3) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = __OFADD__(v9, v10);
  v11 = v9 + v10;
  if (v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = __OFADD__(v11, a4);
  v12 = v11 + a4;
  if (v8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  result = v12 - 53328;
  if (__OFADD__(v12, -53328))
LABEL_24:
    __break(1u);
  return result;
}

uint64_t sub_1C2136E44(uint64_t result, int a2)
{
  signed int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = a2 / 0x3B9ACA00u;
  if (a2 < 0)
    v2 = ~(~a2 / 0x3B9ACA00u);
  v3 = result + v2;
  if (__OFADD__(result, v2))
  {
    __break(1u);
  }
  else
  {
    if (a2 % 1000000000 >= 0)
      v4 = a2 % 1000000000;
    else
      v4 = a2 % 1000000000 + 1000000000;
    if ((unint64_t)(v3 - 0x3AFFF44180) >= 0xFFFFFFB68879C780)
    {
      v5 = sub_1C21227C0(v3);
      v6 = v5;
      v8 = v7;
      v9 = HIDWORD(v5);
      v10 = sub_1C2122878(v3);
      v11 = v10;
      v13 = v12;
      v14 = HIDWORD(v10);
      if (v4)
      {
        if (v4 % 1000000)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F210);
          v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_1C217ADF0;
          v16 = MEMORY[0x1E0DEDBC8];
          v17 = MEMORY[0x1E0DEDC38];
          *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEDBC8];
          *(_QWORD *)(v15 + 64) = v17;
          *(_DWORD *)(v15 + 32) = v11;
          *(_QWORD *)(v15 + 96) = v16;
          *(_QWORD *)(v15 + 104) = v17;
          *(_DWORD *)(v15 + 72) = v14;
          *(_QWORD *)(v15 + 136) = v16;
          *(_QWORD *)(v15 + 144) = v17;
          *(_DWORD *)(v15 + 112) = v13;
          *(_QWORD *)(v15 + 176) = v16;
          *(_QWORD *)(v15 + 184) = v17;
          *(_DWORD *)(v15 + 152) = v6;
          *(_QWORD *)(v15 + 216) = v16;
          *(_QWORD *)(v15 + 224) = v17;
          *(_DWORD *)(v15 + 192) = v9;
          *(_QWORD *)(v15 + 256) = v16;
          *(_QWORD *)(v15 + 264) = v17;
          *(_DWORD *)(v15 + 232) = v8;
          *(_QWORD *)(v15 + 296) = v16;
          *(_QWORD *)(v15 + 304) = v17;
          if (v4 % 1000)
            *(_DWORD *)(v15 + 272) = v4;
          else
            *(_DWORD *)(v15 + 272) = v4 / 1000;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F210);
          v21 = swift_allocObject();
          v22 = MEMORY[0x1E0DEDBC8];
          *(_OWORD *)(v21 + 16) = xmmword_1C217ADF0;
          v23 = MEMORY[0x1E0DEDC38];
          *(_QWORD *)(v21 + 56) = v22;
          *(_QWORD *)(v21 + 64) = v23;
          *(_DWORD *)(v21 + 32) = v11;
          *(_QWORD *)(v21 + 96) = v22;
          *(_QWORD *)(v21 + 104) = v23;
          *(_DWORD *)(v21 + 72) = v14;
          *(_QWORD *)(v21 + 136) = v22;
          *(_QWORD *)(v21 + 144) = v23;
          *(_DWORD *)(v21 + 112) = v13;
          *(_QWORD *)(v21 + 176) = v22;
          *(_QWORD *)(v21 + 184) = v23;
          *(_DWORD *)(v21 + 152) = v6;
          *(_QWORD *)(v21 + 216) = v22;
          *(_QWORD *)(v21 + 224) = v23;
          *(_DWORD *)(v21 + 192) = v9;
          *(_QWORD *)(v21 + 256) = v22;
          *(_QWORD *)(v21 + 264) = v23;
          *(_DWORD *)(v21 + 232) = v8;
          *(_QWORD *)(v21 + 296) = v22;
          *(_QWORD *)(v21 + 304) = v23;
          *(_DWORD *)(v21 + 272) = v4 / 1000000;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F210);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C217AE00;
        v19 = MEMORY[0x1E0DEDBC8];
        v20 = MEMORY[0x1E0DEDC38];
        *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEDBC8];
        *(_QWORD *)(v18 + 64) = v20;
        *(_DWORD *)(v18 + 32) = v11;
        *(_QWORD *)(v18 + 96) = v19;
        *(_QWORD *)(v18 + 104) = v20;
        *(_DWORD *)(v18 + 72) = v14;
        *(_QWORD *)(v18 + 136) = v19;
        *(_QWORD *)(v18 + 144) = v20;
        *(_DWORD *)(v18 + 112) = v13;
        *(_QWORD *)(v18 + 176) = v19;
        *(_QWORD *)(v18 + 184) = v20;
        *(_DWORD *)(v18 + 152) = v6;
        *(_QWORD *)(v18 + 216) = v19;
        *(_QWORD *)(v18 + 224) = v20;
        *(_DWORD *)(v18 + 192) = v9;
        *(_QWORD *)(v18 + 256) = v19;
        *(_QWORD *)(v18 + 264) = v20;
        *(_DWORD *)(v18 + 232) = v8;
      }
      return sub_1C2175450();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2137100(uint64_t a1, int a2)
{
  signed int v2;
  BOOL v3;
  uint64_t result;

  v2 = a2 / 0x3B9ACA00u;
  if (a2 < 0)
    v2 = ~(~a2 / 0x3B9ACA00u);
  v3 = __OFADD__(a1, v2);
  result = a1 + v2;
  if (v3)
    __break(1u);
  return result;
}

double Google_Protobuf_Timestamp.init(seconds:nanos:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_DWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C2137158()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v3;

  sub_1C2136E44(*(_QWORD *)v0, *(_DWORD *)(v0 + 8));
  if (v1)
  {
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    sub_1C21754F8();
    return 34;
  }
  else
  {
    sub_1C20C6080();
    swift_allocError();
    *v3 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1C2137200()
{
  return sub_1C2137158();
}

unint64_t sub_1C2137214()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  unint64_t v3;
  unint64_t v4;
  int v5;
  int v6;

  result = (unint64_t)sub_1C20B0FD4();
  if (!v1)
  {
    v4 = sub_1C2136644(result, v3);
    v6 = v5;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v0 = v4;
    *(_DWORD *)(v0 + 8) = v6;
  }
  return result;
}

void Google_Protobuf_Timestamp.init(timeIntervalSince1970:)(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3;
  double v4;
  int v5;

  v3 = floor(a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = round((a2 - v3) * 1000000000.0);
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 2147483650.0)
  {
    *(_QWORD *)a1 = sub_1C2137100((uint64_t)v3, (int)v4);
    *(_DWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
    return;
  }
LABEL_13:
  __break(1u);
}

void Google_Protobuf_Timestamp.init(timeIntervalSinceReferenceDate:)(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3;
  double v5;
  uint64_t v6;
  double v7;
  int v8;

  v3 = floor(a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C217539C();
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v6 = (uint64_t)v3 + (uint64_t)v5;
  if (__OFADD__((uint64_t)v3, (uint64_t)v5))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = round((a2 - v3) * 1000000000.0);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v7 < 2147483650.0)
  {
    *(_QWORD *)a1 = sub_1C2137100(v6, (int)v7);
    *(_DWORD *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
    return;
  }
LABEL_21:
  __break(1u);
}

__n128 Google_Protobuf_Timestamp.init(date:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  double v4;
  uint64_t v5;
  unsigned __int32 v6;
  __n128 result;
  unint64_t v8;
  unsigned __int32 v9;
  __n128 v10;

  sub_1C2175390();
  Google_Protobuf_Timestamp.init(timeIntervalSinceReferenceDate:)((uint64_t)&v8, v4);
  v5 = sub_1C21753A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  v6 = v9;
  result = v10;
  a2->n128_u64[0] = v8;
  a2->n128_u32[2] = v6;
  a2[1] = result;
  return result;
}

double Google_Protobuf_Timestamp.timeIntervalSince1970.getter()
{
  uint64_t v0;

  return (double)*(int *)(v0 + 8) / 1000000000.0 + (double)*(uint64_t *)v0;
}

uint64_t Google_Protobuf_Timestamp.timeIntervalSinceReferenceDate.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  double v3;

  v1 = *v0;
  result = sub_1C217539C();
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(v1, (uint64_t)v3))
LABEL_9:
    __break(1u);
  return result;
}

uint64_t Google_Protobuf_Timestamp.date.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  double v3;

  v1 = *v0;
  result = sub_1C217539C();
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (!__OFSUB__(v1, (uint64_t)v3))
    return sub_1C2175384();
LABEL_9:
  __break(1u);
  return result;
}

uint64_t _s20SiriOntologyProtobuf1poiyAA07Google_C10_TimestampVAD_AA0d1_C9_DurationVtF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v5 = __OFADD__(*(_QWORD *)a1, *(_QWORD *)a2);
  result = *(_QWORD *)a1 + *(_QWORD *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_DWORD *)(a2 + 8);
    v8 = *(_DWORD *)(a1 + 8);
    if (!__OFADD__(v8, v7))
    {
      result = sub_1C2137100(result, v8 + v7);
      *(_QWORD *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t - infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v5 = __OFSUB__(*(_QWORD *)a1, *(_QWORD *)a2);
  result = *(_QWORD *)a1 - *(_QWORD *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_DWORD *)(a2 + 8);
    v8 = *(_DWORD *)(a1 + 8);
    if (!__OFSUB__(v8, v7))
    {
      result = sub_1C2137100(result, v8 - v7);
      *(_QWORD *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
      return result;
    }
  }
  __break(1u);
  return result;
}

float static ProtobufFloat.proto3DefaultValue.getter()
{
  return 0.0;
}

uint64_t static ProtobufFloat.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, a3, a4);
}

uint64_t static ProtobufFloat.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 40))(a1, a3, a4);
}

uint64_t static ProtobufFloat.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, a3, a4);
}

uint64_t static ProtobufFloat.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 152))(a1, a2, a4, a5);
}

uint64_t static ProtobufFloat.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 296))(a1, a2, a4, a5);
}

void sub_1C2137810(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C2137818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFloat.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C213782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFloat.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFloat.visitSingular<A>(value:fieldNumber:with:)(a2, a3, a4, a5);
}

uint64_t sub_1C2137868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFloat.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C213787C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFloat.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

double static ProtobufDouble.proto3DefaultValue.getter()
{
  return 0.0;
}

uint64_t static ProtobufDouble.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 56))(a1, a3, a4);
}

uint64_t static ProtobufDouble.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, a3, a4);
}

uint64_t static ProtobufDouble.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a3, a4);
}

uint64_t static ProtobufDouble.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 160))(a1, a2, a4, a5);
}

uint64_t static ProtobufDouble.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 304))(a1, a2, a4, a5);
}

void sub_1C2137974(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C213797C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufDouble.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufDouble.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21379A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufDouble.visitSingular<A>(value:fieldNumber:with:)(a2, a3, a4, a5);
}

uint64_t sub_1C21379CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufDouble.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C21379E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufDouble.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufInt32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufInt32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(a1, a3, a4);
}

uint64_t static ProtobufInt32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 88))(a1, a3, a4);
}

uint64_t static ProtobufInt32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 168))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 312))(a1, a2, a4, a5);
}

uint64_t sub_1C2137AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137B00(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufInt64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufInt64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 104))(a1, a3, a4);
}

uint64_t static ProtobufInt64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 112))(a1, a3, a4);
}

uint64_t static ProtobufInt64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 32))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 176))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 320))(a1, a2, a4, a5);
}

uint64_t sub_1C2137C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137C4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufUInt32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufUInt32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 128))(a1, a3, a4);
}

uint64_t static ProtobufUInt32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 136))(a1, a3, a4);
}

uint64_t static ProtobufUInt32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 184))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 328))(a1, a2, a4, a5);
}

uint64_t sub_1C2137D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137D98(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufUInt64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufUInt64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 152))(a1, a3, a4);
}

uint64_t static ProtobufUInt64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 160))(a1, a3, a4);
}

uint64_t static ProtobufUInt64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 48))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 192))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 336))(a1, a2, a4, a5);
}

uint64_t sub_1C2137EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2137EE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2137F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSInt32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSInt32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 176))(a1, a3, a4);
}

uint64_t static ProtobufSInt32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 184))(a1, a3, a4);
}

uint64_t static ProtobufSInt32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 56))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 200))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 344))(a1, a2, a4, a5);
}

uint64_t sub_1C2138008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C213801C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138030(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C213805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSInt64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSInt64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 200))(a1, a3, a4);
}

uint64_t static ProtobufSInt64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 208))(a1, a3, a4);
}

uint64_t static ProtobufSInt64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 64))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 208))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 352))(a1, a2, a4, a5);
}

uint64_t sub_1C2138154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C213817C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C21381A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufFixed32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufFixed32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 224))(a1, a3, a4);
}

uint64_t static ProtobufFixed32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 232))(a1, a3, a4);
}

uint64_t static ProtobufFixed32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 72))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 216))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 360))(a1, a2, a4, a5);
}

uint64_t sub_1C21382A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21382B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21382C8(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C21382E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C21382F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufFixed64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufFixed64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 248))(a1, a3, a4);
}

uint64_t static ProtobufFixed64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 256))(a1, a3, a4);
}

uint64_t static ProtobufFixed64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 80))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 224))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 368))(a1, a2, a4, a5);
}

uint64_t sub_1C21383EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C213842C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSFixed32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSFixed32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 272))(a1, a3, a4);
}

uint64_t static ProtobufSFixed32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 280))(a1, a3, a4);
}

uint64_t static ProtobufSFixed32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 88))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 232))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 376))(a1, a2, a4, a5);
}

uint64_t sub_1C2138538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C213854C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138560(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C213858C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSFixed64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSFixed64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 296))(a1, a3, a4);
}

uint64_t static ProtobufSFixed64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 304))(a1, a3, a4);
}

uint64_t static ProtobufSFixed64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 96))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 240))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 384))(a1, a2, a4, a5);
}

uint64_t sub_1C2138684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21386AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C21386C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C21386D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufBool.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufBool.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 320))(a1, a3, a4);
}

uint64_t static ProtobufBool.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 328))(a1, a3, a4);
}

uint64_t static ProtobufBool.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 104))(a1, a2, a4, a5);
}

uint64_t static ProtobufBool.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 248))(a1, a2, a4, a5);
}

uint64_t static ProtobufBool.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 392))(a1, a2, a4, a5);
}

uint64_t sub_1C21387D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBool.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21387E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBool.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21387F8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBool.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBool.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBool.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufString.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufString.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(a1, a3, a4);
}

uint64_t static ProtobufString.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 112))(a1, a2, a3, a5, a6);
}

uint64_t static ProtobufString.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 256))(a1, a2, a4, a5);
}

void sub_1C21388C8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1C21388D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufString.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C21388E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufString.visitSingular<A>(value:fieldNumber:with:)(*a1, a1[1], a2, a3, a4, a5);
}

uint64_t sub_1C2138914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufString.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a3, a4, a5);
}

uint64_t static ProtobufBytes.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufBytes.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 368))(a1, a3, a4);
}

uint64_t static ProtobufBytes.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 376))(a1, a3, a4);
}

uint64_t static ProtobufBytes.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 120))(a1, a2, a3, a5, a6);
}

uint64_t static ProtobufBytes.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 264))(a1, a2, a4, a5);
}

uint64_t static ProtobufBytes.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a3, a4, a5);
}

uint64_t sub_1C2138A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBytes.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBytes.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C2138A4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBytes.visitSingular<A>(value:fieldNumber:with:)(*a1, a1[1], a2, a3, a4, a5);
}

uint64_t sub_1C2138A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBytes.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2138A8C()
{
  return MEMORY[0x1E0DEB1A8];
}

uint64_t sub_1C2138A98()
{
  return MEMORY[0x1E0DEB090];
}

uint64_t sub_1C2138AA4()
{
  return MEMORY[0x1E0DEDBD8];
}

uint64_t sub_1C2138AB0()
{
  return MEMORY[0x1E0DEDC70];
}

uint64_t sub_1C2138ABC()
{
  return MEMORY[0x1E0DEE108];
}

uint64_t sub_1C2138AC8()
{
  return MEMORY[0x1E0DEE1A0];
}

uint64_t sub_1C2138AD4()
{
  return MEMORY[0x1E0DEAFB0];
}

uint64_t sub_1C2138AE0()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_1C2138AF0()
{
  unint64_t result;

  result = qword_1EF7600E0;
  if (!qword_1EF7600E0)
  {
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0CB0358], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF7600E0);
  }
  return result;
}

unint64_t sub_1C2138B34(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2138B58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2138B58()
{
  unint64_t result;

  result = qword_1EF760130;
  if (!qword_1EF760130)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for ProtobufBytes, &type metadata for ProtobufBytes);
    atomic_store(result, (unint64_t *)&qword_1EF760130);
  }
  return result;
}

uint64_t dispatch thunk of static FieldType.proto3DefaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static FieldType.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of static FieldType.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of static FieldType.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of static FieldType.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of static FieldType.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

ValueMetadata *type metadata accessor for ProtobufFloat()
{
  return &type metadata for ProtobufFloat;
}

ValueMetadata *type metadata accessor for ProtobufDouble()
{
  return &type metadata for ProtobufDouble;
}

ValueMetadata *type metadata accessor for ProtobufInt32()
{
  return &type metadata for ProtobufInt32;
}

ValueMetadata *type metadata accessor for ProtobufInt64()
{
  return &type metadata for ProtobufInt64;
}

ValueMetadata *type metadata accessor for ProtobufUInt32()
{
  return &type metadata for ProtobufUInt32;
}

ValueMetadata *type metadata accessor for ProtobufUInt64()
{
  return &type metadata for ProtobufUInt64;
}

ValueMetadata *type metadata accessor for ProtobufSInt32()
{
  return &type metadata for ProtobufSInt32;
}

ValueMetadata *type metadata accessor for ProtobufSInt64()
{
  return &type metadata for ProtobufSInt64;
}

ValueMetadata *type metadata accessor for ProtobufFixed32()
{
  return &type metadata for ProtobufFixed32;
}

ValueMetadata *type metadata accessor for ProtobufFixed64()
{
  return &type metadata for ProtobufFixed64;
}

ValueMetadata *type metadata accessor for ProtobufSFixed32()
{
  return &type metadata for ProtobufSFixed32;
}

ValueMetadata *type metadata accessor for ProtobufSFixed64()
{
  return &type metadata for ProtobufSFixed64;
}

ValueMetadata *type metadata accessor for ProtobufBool()
{
  return &type metadata for ProtobufBool;
}

ValueMetadata *type metadata accessor for ProtobufBytes()
{
  return &type metadata for ProtobufBytes;
}

uint64_t static ProtobufString.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBytes.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t Message.init(textFormatString:extensions:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a3;
  v30 = *MEMORY[0x1E0C80C00];
  v11 = sub_1C2175468();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(uint64_t, uint64_t))(a5 + 16);
  v27 = a6;
  v28 = a4;
  v16(a4, a5);
  v17 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v17 = a1 & 0xFFFFFFFFFFFFLL;
  if (v17)
  {
    v18 = v29;
    sub_1C217545C();
    sub_1C217542C();
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if (v20 >> 60 != 15)
    {
      MEMORY[0x1E0C80A78](v21, v22);
      *(&v26 - 4) = v28;
      *(&v26 - 3) = a5;
      v25 = v27;
      *(&v26 - 2) = v18;
      *(&v26 - 1) = v25;
      __asm { BR              X10 }
    }
    v23 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = v29;
  }
  return sub_1C20A8FA0(v23);
}

uint64_t sub_1C213904C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];
  _OWORD v33[2];
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  if (result)
  {
    v7 = result;
    v8 = a2 - result;
    if (a2 - result >= 1)
    {
      sub_1C20AC3C4(a3, (uint64_t)v32);
      v38 = 0;
      v39 = 256;
      v40 = 0u;
      v41 = 0u;
      v42 = 0u;
      sub_1C20AC3C4((uint64_t)v32, (uint64_t)&v29);
      type metadata accessor for DoubleParser();
      memset(v33, 0, sizeof(v33));
      v34 = 0;
      v11 = swift_allocObject();
      v12 = swift_slowAlloc();
      *(_QWORD *)(v11 + 16) = v12;
      *(_QWORD *)(v11 + 24) = v12 + 128;
      v35 = (unsigned __int8 *)v7;
      v36 = (unsigned __int8 *)(v7 + v8);
      v37 = v11;
      sub_1C2139324((uint64_t)&v29, (uint64_t)v33);
      v13 = v35;
      if (v35 != v36)
      {
        do
        {
          v15 = *v13;
          if (v15 > 0x23)
            break;
          if (((1 << v15) & 0x100002600) != 0)
          {
            v14 = v13 + 1;
            v35 = v13 + 1;
          }
          else
          {
            if (v15 != 35)
              break;
            v35 = v13 + 1;
            if (v13 + 1 == v36)
              break;
            v16 = v13[1];
            v14 = v13 + 2;
            v35 = v13 + 2;
            if (v16 != 10 && v16 != 13)
            {
              if (v14 == v36)
                break;
              v17 = v13[2];
              v14 = v13 + 3;
              v35 = v13 + 3;
              if (v17 != 10 && v17 != 13)
              {
                while (v14 != v36)
                {
                  v19 = *v14++;
                  v18 = v19;
                  v35 = v14;
                  if (v19 == 10 || v18 == 13)
                    goto LABEL_6;
                }
                break;
              }
            }
          }
LABEL_6:
          v13 = v14;
        }
        while (v14 != v36);
      }
      sub_1C20A8FA0((uint64_t)&v29);
      v21 = swift_conformsToProtocol2();
      if (v21)
        v22 = v21;
      else
        v22 = 0;
      if (v21)
        v23 = a5;
      else
        v23 = 0;
      if (v23)
      {
        (*(void (**)(__int128 *__return_ptr))(v22 + 8))(&v29);
        sub_1C20A8FA0((uint64_t)v32);
        v28 = v29;
        v24 = v30;
        v25 = v31;
        sub_1C20A8840(v40);
        v40 = v28;
        *(_QWORD *)&v41 = v24;
        *((_QWORD *)&v41 + 1) = v25;
        *(_QWORD *)&v42 = a5;
        *((_QWORD *)&v42 + 1) = a6;
        (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a6 + 64))(v33, &type metadata for TextFormatDecoder, &off_1E7BDE678, a5, a6);
        if (!v6 && v35 != v36)
        {
          sub_1C20B727C();
          swift_allocError();
          *v26 = 2;
          swift_willThrow();
        }
      }
      else
      {
        sub_1C20B727C();
        swift_allocError();
        *v27 = 6;
        swift_willThrow();
        sub_1C20A8FA0((uint64_t)v32);
      }
      return sub_1C212854C((uint64_t)v33);
    }
  }
  return result;
}

uint64_t sub_1C2139308(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C213904C(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t sub_1C2139324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7DFE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double Google_Protobuf_DoubleValue.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void Google_Protobuf_DoubleValue.value.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*Google_Protobuf_DoubleValue.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_DoubleValue.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Google_Protobuf_DoubleValue.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xC000000000000000;
}

float Google_Protobuf_FloatValue.value.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void Google_Protobuf_FloatValue.value.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*Google_Protobuf_FloatValue.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_FloatValue.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

double Google_Protobuf_FloatValue.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_Int64Value.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Google_Protobuf_Int64Value.value.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_Int64Value.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Int64Value.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Google_Protobuf_Int64Value.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xC000000000000000;
}

uint64_t Google_Protobuf_UInt64Value.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t (*Google_Protobuf_UInt64Value.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_UInt64Value.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Int32Value.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Int32Value.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_UInt32Value.value.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t (*Google_Protobuf_UInt32Value.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_UInt32Value.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BoolValue.value.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Google_Protobuf_BoolValue.value.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_BoolValue.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BoolValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_BoolValue.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

double Google_Protobuf_BoolValue.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t (*Google_Protobuf_StringValue.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_StringValue.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BytesValue.value.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1C20A8008(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Google_Protobuf_BytesValue.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C20A8058(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*Google_Protobuf_BytesValue.value.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BytesValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_BytesValue.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

double Google_Protobuf_BytesValue.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1C2175DE0;
  a1[1] = xmmword_1C2175DE0;
  return result;
}

unint64_t static Google_Protobuf_DoubleValue.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C21395F0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3B28, &qword_1EF760138);
}

uint64_t static Google_Protobuf_DoubleValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCF0 != -1)
    swift_once();
  v2 = unk_1EF760140;
  v3 = qword_1EF760148;
  v4 = unk_1EF760150;
  *a1 = qword_1EF760138;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_DoubleValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_DoubleValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;

  if (*v3 == 0.0 || ((*(void (**)(uint64_t, uint64_t, uint64_t, double))(a3 + 16))(1, a2, a3, *v3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t static Google_Protobuf_DoubleValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v3 = *(_QWORD *)(a2 + 8);
  v2 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v3, v2);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v3, v2);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

uint64_t Google_Protobuf_DoubleValue.hashValue.getter()
{
  double *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  sub_1C20BF05C(v1, (uint64_t)v5, v2, v3);
  return sub_1C2175870();
}

void sub_1C2139868(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xC000000000000000;
}

unint64_t sub_1C2139878()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C2139894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DoubleValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C21398A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_DoubleValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C21398BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCF0 != -1)
    swift_once();
  v2 = unk_1EF760140;
  v3 = qword_1EF760148;
  v4 = unk_1EF760150;
  *a1 = qword_1EF760138;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2139938()
{
  uint64_t v0;

  return sub_1C2159AF0(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(double *)v0);
}

uint64_t sub_1C2139944()
{
  double *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  sub_1C20BF05C(v1, (uint64_t)v5, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C213999C()
{
  double *v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 1);
  v3 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  sub_1C20BF05C(v1, (uint64_t)v5, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C21399F0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  v3 = *(_QWORD *)(a2 + 8);
  v2 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v3, v2);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v3, v2);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

unint64_t static Google_Protobuf_FloatValue.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C2139AA0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3A20, &qword_1EF760158);
}

uint64_t static Google_Protobuf_FloatValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCF8 != -1)
    swift_once();
  v2 = unk_1EF760160;
  v3 = qword_1EF760168;
  v4 = unk_1EF760170;
  *a1 = qword_1EF760158;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FloatValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_FloatValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float *v3;
  uint64_t v4;

  if (*v3 == 0.0 || ((*(void (**)(uint64_t, uint64_t, uint64_t, float))(a3 + 8))(1, a2, a3, *v3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t static Google_Protobuf_FloatValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (*(float *)a1 != *(float *)a2)
    return 0;
  v3 = *(_QWORD *)(a2 + 8);
  v2 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v3, v2);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v3, v2);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

uint64_t Google_Protobuf_FloatValue.hashValue.getter()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(float *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  sub_1C2175828();
  sub_1C20BF35C(v1, (uint64_t)v5, v2, v3);
  return sub_1C2175870();
}

double sub_1C2139D18@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C2139D2C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C2139D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FloatValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C2139D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FloatValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C2139D70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCF8 != -1)
    swift_once();
  v2 = unk_1EF760160;
  v3 = qword_1EF760168;
  v4 = unk_1EF760170;
  *a1 = qword_1EF760158;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2139DEC()
{
  uint64_t v0;

  return sub_1C21599F4(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(float *)v0);
}

uint64_t sub_1C2139DF8()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(float *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  sub_1C2175828();
  sub_1C20BF35C(v1, (uint64_t)v5, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C2139E50()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *(float *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  sub_1C2175828();
  sub_1C20BF35C(v1, (uint64_t)v5, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C2139EA4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (*(float *)a1 != *(float *)a2)
    return 0;
  v3 = *(_QWORD *)(a2 + 8);
  v2 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v3, v2);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v3, v2);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

unint64_t static Google_Protobuf_Int64Value.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C2139F54()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3AD0, &qword_1EF760178);
}

uint64_t static Google_Protobuf_Int64Value._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD00 != -1)
    swift_once();
  v2 = unk_1EF760180;
  v3 = qword_1EF760188;
  v4 = unk_1EF760190;
  *a1 = qword_1EF760178;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Int64Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_Int64Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  if (!*v3 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 32))(*v3, 1, a2, a3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

unint64_t sub_1C213A0E4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C213A100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Int64Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213A114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Int64Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213A128@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD00 != -1)
    swift_once();
  v2 = unk_1EF760180;
  v3 = qword_1EF760188;
  v4 = unk_1EF760190;
  *a1 = qword_1EF760178;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213A1A4()
{
  uint64_t *v0;

  return sub_1C2159AD4(*v0, v0[1], v0[2]);
}

unint64_t static Google_Protobuf_UInt64Value.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C213A1D8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4278, &qword_1EF760198);
}

uint64_t static Google_Protobuf_UInt64Value._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD08 != -1)
    swift_once();
  v2 = unk_1EF7601A0;
  v3 = qword_1EF7601A8;
  v4 = unk_1EF7601B0;
  *a1 = qword_1EF760198;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UInt64Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 144))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_UInt64Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  if (!*v3 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 48))(*v3, 1, a2, a3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t _s20SiriOntologyProtobuf07Google_C11_Int64ValueV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (*a1 != *a2)
    return 0;
  v3 = a2[1];
  v2 = a2[2];
  v5 = a1[1];
  v4 = a1[2];
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v3, v2);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v3, v2);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

void _s20SiriOntologyProtobuf07Google_C11_Int64ValueV04hashF0Sivg_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[2];
  sub_1C2175828();
  if (v1)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213A494()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

unint64_t sub_1C213A520()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C213A53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UInt64Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213A550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_UInt64Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213A564@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD08 != -1)
    swift_once();
  v2 = unk_1EF7601A0;
  v3 = qword_1EF7601A8;
  v4 = unk_1EF7601B0;
  *a1 = qword_1EF760198;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213A5E0()
{
  uint64_t *v0;

  return sub_1C2159D98(*v0, v0[1], v0[2]);
}

void sub_1C213A5EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[2];
  sub_1C2175828();
  if (v1)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213A680()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_Int32Value.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C213A728()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3A78, &qword_1EF7601B8);
}

uint64_t static Google_Protobuf_Int32Value._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD10 != -1)
    swift_once();
  v2 = unk_1EF7601C0;
  v3 = qword_1EF7601C8;
  v4 = unk_1EF7601D0;
  *a1 = qword_1EF7601B8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Int32Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_Int32Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v3;
  if (!(_DWORD)v5 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v5, 1, a2, a3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

void Google_Protobuf_Int32Value.hashValue.getter()
{
  int *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  if (v1)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213A948()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

unint64_t sub_1C213A9D4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C213A9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Int32Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213AA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Int32Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213AA18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD10 != -1)
    swift_once();
  v2 = unk_1EF7601C0;
  v3 = qword_1EF7601C8;
  v4 = unk_1EF7601D0;
  *a1 = qword_1EF7601B8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213AA94()
{
  unsigned int *v0;

  return sub_1C2159AB8(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2));
}

void sub_1C213AAA4()
{
  int *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  if (v1)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213AB38()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_UInt32Value.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C213ABE4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4220, &qword_1EF7601D8);
}

uint64_t static Google_Protobuf_UInt32Value._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD18 != -1)
    swift_once();
  v2 = unk_1EF7601E0;
  v3 = qword_1EF7601E8;
  v4 = unk_1EF7601F0;
  *a1 = qword_1EF7601D8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UInt32Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 120))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_UInt32Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *v3;
  if (!(_DWORD)v5 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(v5, 1, a2, a3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

void Google_Protobuf_UInt32Value.hashValue.getter()
{
  int *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  if (v1)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213AE08()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

unint64_t sub_1C213AE94()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C213AEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UInt32Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213AEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_UInt32Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213AED8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD18 != -1)
    swift_once();
  v2 = unk_1EF7601E0;
  v3 = qword_1EF7601E8;
  v4 = unk_1EF7601F0;
  *a1 = qword_1EF7601D8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213AF54()
{
  unsigned int *v0;

  return sub_1C2159CC0(*v0, *((_QWORD *)v0 + 1), *((_QWORD *)v0 + 2));
}

void sub_1C213AF64()
{
  int *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  if (v1)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213AFF8()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_BoolValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C213B0A0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3710, &qword_1EF7601F8);
}

uint64_t static Google_Protobuf_BoolValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD20 != -1)
    swift_once();
  v2 = unk_1EF760200;
  v3 = qword_1EF760208;
  v4 = unk_1EF760210;
  *a1 = qword_1EF7601F8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_BoolValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_BoolValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;

  if (*v3 != 1 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 1, a2, a3), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t static Google_Protobuf_BoolValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*a1 != *a2)
    return 0;
  v4 = *((_QWORD *)a2 + 1);
  v3 = *((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  sub_1C20A8008(v6, v5);
  sub_1C20A8008(v4, v3);
  sub_1C20FD650(v6, v5);
  v8 = v7;
  sub_1C20A8058(v4, v3);
  sub_1C20A8058(v6, v5);
  return v8 & 1;
}

void Google_Protobuf_BoolValue.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  if (v1 == 1)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213B360()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

double sub_1C213B3EC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C213B400()
{
  return 0xD000000000000019;
}

uint64_t sub_1C213B41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_BoolValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213B430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_BoolValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213B444@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD20 != -1)
    swift_once();
  v2 = unk_1EF760200;
  v3 = qword_1EF760208;
  v4 = unk_1EF760210;
  *a1 = qword_1EF7601F8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213B4C0()
{
  uint64_t v0;

  return sub_1C2159808(*(_BYTE *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

void sub_1C213B4D0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *((_QWORD *)v0 + 2);
  sub_1C2175828();
  if (v1 == 1)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C213B568()
{
  uint64_t v0;
  unint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v0, v1);
  return sub_1C2175870();
}

uint64_t sub_1C213B5F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*a1 != *a2)
    return 0;
  v4 = *((_QWORD *)a2 + 1);
  v3 = *((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  sub_1C20A8008(v6, v5);
  sub_1C20A8008(v4, v3);
  sub_1C20FD650(v6, v5);
  v8 = v7;
  sub_1C20A8058(v4, v3);
  sub_1C20A8058(v6, v5);
  return v8 & 1;
}

unint64_t static Google_Protobuf_StringValue.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C213B6A4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD41C8, &qword_1EF760218);
}

uint64_t static Google_Protobuf_StringValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD28 != -1)
    swift_once();
  v2 = unk_1EF760220;
  v3 = qword_1EF760228;
  v4 = unk_1EF760230;
  *a1 = qword_1EF760218;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_StringValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_StringValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v5 = v3[1];
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v6 || ((*(void (**)(void))(a3 + 112))(), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t Google_Protobuf_StringValue.hashValue.getter()
{
  return sub_1C213BBC4((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BE454);
}

unint64_t sub_1C213B84C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C213B86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_StringValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213B880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_StringValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213B894@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD28 != -1)
    swift_once();
  v2 = unk_1EF760220;
  v3 = qword_1EF760228;
  v4 = unk_1EF760230;
  *a1 = qword_1EF760218;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213B910()
{
  uint64_t v0;

  return sub_1C2159BB4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C213B91C(uint64_t a1, uint64_t a2)
{
  return sub_1C213BD14(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BE454);
}

uint64_t sub_1C213B928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C213BD88(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BE454);
}

unint64_t static Google_Protobuf_BytesValue.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C213B950()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD39C8, &qword_1EF760238);
}

uint64_t static Google_Protobuf_BytesValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD30 != -1)
    swift_once();
  v2 = unk_1EF760240;
  v3 = qword_1EF760248;
  v4 = unk_1EF760250;
  *a1 = qword_1EF760238;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_BytesValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 360))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_BytesValue.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

void sub_1C213BAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if ((a2 & 0xFF000000000000) == 0 || ((*(void (**)(void))(v2 + 120))(), !v3))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t static Google_Protobuf_BytesValue.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  char v8;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  sub_1C20FD650(*a1, a1[1]);
  if ((v6 & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v8 = v7;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v8 & 1;
}

uint64_t Google_Protobuf_BytesValue.hashValue.getter()
{
  return sub_1C213BBC4((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BF464);
}

uint64_t sub_1C213BBC4(void (*a1)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[72];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  sub_1C2175828();
  a1(v8, v3, v4, v6, v5);
  return sub_1C2175870();
}

double sub_1C213BC2C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1C2175DE0;
  a1[1] = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C213BC3C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C213BC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_BytesValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213BC6C()
{
  Google_Protobuf_BytesValue.traverse<A>(visitor:)();
}

uint64_t sub_1C213BC80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD30 != -1)
    swift_once();
  v2 = unk_1EF760240;
  v3 = qword_1EF760248;
  v4 = unk_1EF760250;
  *a1 = qword_1EF760238;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213BCFC()
{
  uint64_t *v0;

  return sub_1C215990C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C213BD08(uint64_t a1, uint64_t a2)
{
  return sub_1C213BD14(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BF464);
}

uint64_t sub_1C213BD14(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[72];

  v5 = *v3;
  v6 = v3[1];
  v8 = v3[2];
  v7 = v3[3];
  sub_1C2175828();
  a3(v10, v5, v6, v8, v7);
  return sub_1C2175870();
}

uint64_t sub_1C213BD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C213BD88(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BF464);
}

uint64_t sub_1C213BD88(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[72];

  v6 = *v4;
  v7 = v4[1];
  v9 = v4[2];
  v8 = v4[3];
  sub_1C2175828();
  a4(v11, v6, v7, v9, v8);
  return sub_1C2175870();
}

uint64_t sub_1C213BDEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  char v8;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  sub_1C20FD650(*a1, a1[1]);
  if ((v6 & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v8 = v7;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v8 & 1;
}

unint64_t sub_1C213BE88(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213BEAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213BEAC()
{
  unint64_t result;

  result = qword_1EF760258;
  if (!qword_1EF760258)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DoubleValue, &type metadata for Google_Protobuf_DoubleValue);
    atomic_store(result, (unint64_t *)&qword_1EF760258);
  }
  return result;
}

uint64_t sub_1C213BEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213BF04, (uint64_t (*)(void))sub_1C213BF48);
}

unint64_t sub_1C213BF04()
{
  unint64_t result;

  result = qword_1EF760260;
  if (!qword_1EF760260)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DoubleValue, &type metadata for Google_Protobuf_DoubleValue);
    atomic_store(result, (unint64_t *)&qword_1EF760260);
  }
  return result;
}

unint64_t sub_1C213BF48()
{
  unint64_t result;

  result = qword_1EF760268;
  if (!qword_1EF760268)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DoubleValue, &type metadata for Google_Protobuf_DoubleValue);
    atomic_store(result, (unint64_t *)&qword_1EF760268);
  }
  return result;
}

unint64_t sub_1C213BF90()
{
  unint64_t result;

  result = qword_1EF760270;
  if (!qword_1EF760270)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DoubleValue, &type metadata for Google_Protobuf_DoubleValue);
    atomic_store(result, (unint64_t *)&qword_1EF760270);
  }
  return result;
}

unint64_t sub_1C213BFD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213BFF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213BFF8()
{
  unint64_t result;

  result = qword_1EF760278;
  if (!qword_1EF760278)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FloatValue, &type metadata for Google_Protobuf_FloatValue);
    atomic_store(result, (unint64_t *)&qword_1EF760278);
  }
  return result;
}

uint64_t sub_1C213C03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C050, (uint64_t (*)(void))sub_1C213C094);
}

unint64_t sub_1C213C050()
{
  unint64_t result;

  result = qword_1EF760280;
  if (!qword_1EF760280)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FloatValue, &type metadata for Google_Protobuf_FloatValue);
    atomic_store(result, (unint64_t *)&qword_1EF760280);
  }
  return result;
}

unint64_t sub_1C213C094()
{
  unint64_t result;

  result = qword_1EF760288;
  if (!qword_1EF760288)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FloatValue, &type metadata for Google_Protobuf_FloatValue);
    atomic_store(result, (unint64_t *)&qword_1EF760288);
  }
  return result;
}

unint64_t sub_1C213C0DC()
{
  unint64_t result;

  result = qword_1EF760290;
  if (!qword_1EF760290)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FloatValue, &type metadata for Google_Protobuf_FloatValue);
    atomic_store(result, (unint64_t *)&qword_1EF760290);
  }
  return result;
}

unint64_t sub_1C213C120(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C144();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C144()
{
  unint64_t result;

  result = qword_1EF760298;
  if (!qword_1EF760298)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int64Value, &type metadata for Google_Protobuf_Int64Value);
    atomic_store(result, (unint64_t *)&qword_1EF760298);
  }
  return result;
}

uint64_t sub_1C213C188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C19C, (uint64_t (*)(void))sub_1C213C1E0);
}

unint64_t sub_1C213C19C()
{
  unint64_t result;

  result = qword_1EF7602A0;
  if (!qword_1EF7602A0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int64Value, &type metadata for Google_Protobuf_Int64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602A0);
  }
  return result;
}

unint64_t sub_1C213C1E0()
{
  unint64_t result;

  result = qword_1EF7602A8;
  if (!qword_1EF7602A8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int64Value, &type metadata for Google_Protobuf_Int64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602A8);
  }
  return result;
}

unint64_t sub_1C213C228()
{
  unint64_t result;

  result = qword_1EF7602B0;
  if (!qword_1EF7602B0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int64Value, &type metadata for Google_Protobuf_Int64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602B0);
  }
  return result;
}

unint64_t sub_1C213C26C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C290();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C290()
{
  unint64_t result;

  result = qword_1EF7602B8;
  if (!qword_1EF7602B8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt64Value, &type metadata for Google_Protobuf_UInt64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602B8);
  }
  return result;
}

uint64_t sub_1C213C2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C2E8, (uint64_t (*)(void))sub_1C213C32C);
}

unint64_t sub_1C213C2E8()
{
  unint64_t result;

  result = qword_1EF7602C0;
  if (!qword_1EF7602C0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt64Value, &type metadata for Google_Protobuf_UInt64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602C0);
  }
  return result;
}

unint64_t sub_1C213C32C()
{
  unint64_t result;

  result = qword_1EF7602C8;
  if (!qword_1EF7602C8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt64Value, &type metadata for Google_Protobuf_UInt64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602C8);
  }
  return result;
}

unint64_t sub_1C213C374()
{
  unint64_t result;

  result = qword_1EF7602D0;
  if (!qword_1EF7602D0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt64Value, &type metadata for Google_Protobuf_UInt64Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602D0);
  }
  return result;
}

unint64_t sub_1C213C3B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C3DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C3DC()
{
  unint64_t result;

  result = qword_1EF7602D8;
  if (!qword_1EF7602D8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int32Value, &type metadata for Google_Protobuf_Int32Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602D8);
  }
  return result;
}

uint64_t sub_1C213C420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C434, (uint64_t (*)(void))sub_1C213C478);
}

unint64_t sub_1C213C434()
{
  unint64_t result;

  result = qword_1EF7602E0;
  if (!qword_1EF7602E0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int32Value, &type metadata for Google_Protobuf_Int32Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602E0);
  }
  return result;
}

unint64_t sub_1C213C478()
{
  unint64_t result;

  result = qword_1EF7602E8;
  if (!qword_1EF7602E8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int32Value, &type metadata for Google_Protobuf_Int32Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602E8);
  }
  return result;
}

unint64_t sub_1C213C4C0()
{
  unint64_t result;

  result = qword_1EF7602F0;
  if (!qword_1EF7602F0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Int32Value, &type metadata for Google_Protobuf_Int32Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602F0);
  }
  return result;
}

unint64_t sub_1C213C504(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C528();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C528()
{
  unint64_t result;

  result = qword_1EF7602F8;
  if (!qword_1EF7602F8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt32Value, &type metadata for Google_Protobuf_UInt32Value);
    atomic_store(result, (unint64_t *)&qword_1EF7602F8);
  }
  return result;
}

uint64_t sub_1C213C56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C580, (uint64_t (*)(void))sub_1C213C5C4);
}

unint64_t sub_1C213C580()
{
  unint64_t result;

  result = qword_1EF760300;
  if (!qword_1EF760300)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt32Value, &type metadata for Google_Protobuf_UInt32Value);
    atomic_store(result, (unint64_t *)&qword_1EF760300);
  }
  return result;
}

unint64_t sub_1C213C5C4()
{
  unint64_t result;

  result = qword_1EF760308;
  if (!qword_1EF760308)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt32Value, &type metadata for Google_Protobuf_UInt32Value);
    atomic_store(result, (unint64_t *)&qword_1EF760308);
  }
  return result;
}

unint64_t sub_1C213C60C()
{
  unint64_t result;

  result = qword_1EF760310;
  if (!qword_1EF760310)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UInt32Value, &type metadata for Google_Protobuf_UInt32Value);
    atomic_store(result, (unint64_t *)&qword_1EF760310);
  }
  return result;
}

unint64_t sub_1C213C650(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C674();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C674()
{
  unint64_t result;

  result = qword_1EF760318;
  if (!qword_1EF760318)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BoolValue, &type metadata for Google_Protobuf_BoolValue);
    atomic_store(result, (unint64_t *)&qword_1EF760318);
  }
  return result;
}

uint64_t sub_1C213C6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C6CC, (uint64_t (*)(void))sub_1C213C710);
}

unint64_t sub_1C213C6CC()
{
  unint64_t result;

  result = qword_1EF760320;
  if (!qword_1EF760320)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BoolValue, &type metadata for Google_Protobuf_BoolValue);
    atomic_store(result, (unint64_t *)&qword_1EF760320);
  }
  return result;
}

unint64_t sub_1C213C710()
{
  unint64_t result;

  result = qword_1EF760328;
  if (!qword_1EF760328)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BoolValue, &type metadata for Google_Protobuf_BoolValue);
    atomic_store(result, (unint64_t *)&qword_1EF760328);
  }
  return result;
}

unint64_t sub_1C213C758()
{
  unint64_t result;

  result = qword_1EF760330;
  if (!qword_1EF760330)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BoolValue, &type metadata for Google_Protobuf_BoolValue);
    atomic_store(result, (unint64_t *)&qword_1EF760330);
  }
  return result;
}

unint64_t sub_1C213C79C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C7C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C7C0()
{
  unint64_t result;

  result = qword_1EF760338;
  if (!qword_1EF760338)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_StringValue, &type metadata for Google_Protobuf_StringValue);
    atomic_store(result, (unint64_t *)&qword_1EF760338);
  }
  return result;
}

uint64_t sub_1C213C804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C818, (uint64_t (*)(void))sub_1C213C85C);
}

unint64_t sub_1C213C818()
{
  unint64_t result;

  result = qword_1EF760340;
  if (!qword_1EF760340)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_StringValue, &type metadata for Google_Protobuf_StringValue);
    atomic_store(result, (unint64_t *)&qword_1EF760340);
  }
  return result;
}

unint64_t sub_1C213C85C()
{
  unint64_t result;

  result = qword_1EF760348;
  if (!qword_1EF760348)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_StringValue, &type metadata for Google_Protobuf_StringValue);
    atomic_store(result, (unint64_t *)&qword_1EF760348);
  }
  return result;
}

unint64_t sub_1C213C8A4()
{
  unint64_t result;

  result = qword_1EF760350;
  if (!qword_1EF760350)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_StringValue, &type metadata for Google_Protobuf_StringValue);
    atomic_store(result, (unint64_t *)&qword_1EF760350);
  }
  return result;
}

unint64_t sub_1C213C8E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213C90C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213C90C()
{
  unint64_t result;

  result = qword_1EF760358;
  if (!qword_1EF760358)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BytesValue, &type metadata for Google_Protobuf_BytesValue);
    atomic_store(result, (unint64_t *)&qword_1EF760358);
  }
  return result;
}

uint64_t sub_1C213C950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213C964, (uint64_t (*)(void))sub_1C213C9A8);
}

unint64_t sub_1C213C964()
{
  unint64_t result;

  result = qword_1EF760360;
  if (!qword_1EF760360)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BytesValue, &type metadata for Google_Protobuf_BytesValue);
    atomic_store(result, (unint64_t *)&qword_1EF760360);
  }
  return result;
}

unint64_t sub_1C213C9A8()
{
  unint64_t result;

  result = qword_1EF760368;
  if (!qword_1EF760368)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BytesValue, &type metadata for Google_Protobuf_BytesValue);
    atomic_store(result, (unint64_t *)&qword_1EF760368);
  }
  return result;
}

unint64_t sub_1C213C9F0()
{
  unint64_t result;

  result = qword_1EF760370;
  if (!qword_1EF760370)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_BytesValue, &type metadata for Google_Protobuf_BytesValue);
    atomic_store(result, (unint64_t *)&qword_1EF760370);
  }
  return result;
}

_QWORD *assignWithCopy for Google_Protobuf_DoubleValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  sub_1C20A8008(v3, v4);
  v5 = a1[1];
  v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

_QWORD *assignWithTake for Google_Protobuf_DoubleValue(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *a1 = *(_QWORD *)a2;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v3, v4);
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_FloatValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_FloatValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v3, v4);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FloatValue()
{
  return &type metadata for Google_Protobuf_FloatValue;
}

_QWORD *_s20SiriOntologyProtobuf27Google_Protobuf_DoubleValueVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  sub_1C20A8008(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *_s20SiriOntologyProtobuf26Google_Protobuf_Int64ValueVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  sub_1C20A8008(v3, v4);
  v5 = a1[1];
  v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_Int64ValueVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_1C20A8058(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UInt64Value()
{
  return &type metadata for Google_Protobuf_UInt64Value;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_FloatValueVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_Int32ValueVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_Int32ValueVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v3, v4);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UInt32Value()
{
  return &type metadata for Google_Protobuf_UInt32Value;
}

uint64_t sub_1C213CD34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_BoolValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_BoolValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_BoolValue(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[24])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_BoolValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_BoolValue()
{
  return &type metadata for Google_Protobuf_BoolValue;
}

uint64_t destroy for Google_Protobuf_BytesValue(uint64_t a1)
{
  sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return sub_1C20A8058(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t *initializeWithCopy for Google_Protobuf_BytesValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v7 = a2[2];
  v6 = a2[3];
  sub_1C20A8008(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for Google_Protobuf_BytesValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C20A8058(v6, v7);
  v9 = a2[2];
  v8 = a2[3];
  sub_1C20A8008(v9, v8);
  v10 = a1[2];
  v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_1C20A8058(v10, v11);
  return a1;
}

uint64_t *assignWithTake for Google_Protobuf_BytesValue(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C20A8058(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_1C20A8058(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_BytesValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_BytesValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_BytesValue()
{
  return &type metadata for Google_Protobuf_BytesValue;
}

uint64_t Google_Protobuf_FieldMask.paths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldMask.paths.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_FieldMask.paths.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FieldMask.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_FieldMask.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_FieldMask.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

double Google_Protobuf_FieldMask.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

unint64_t static Google_Protobuf_FieldMask.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C213D188()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3830, &qword_1EF760378);
}

uint64_t static Google_Protobuf_FieldMask._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD38 != -1)
    swift_once();
  v2 = unk_1EF760380;
  v3 = qword_1EF760388;
  v4 = unk_1EF760390;
  *a1 = qword_1EF760378;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldMask.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 352))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_FieldMask.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16) || ((*(void (**)(void))(a3 + 256))(), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t static Google_Protobuf_FieldMask.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_1C20F76E4(*(_QWORD **)a1, *(_QWORD **)a2) & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v7 = v6;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v7 & 1;
}

uint64_t Google_Protobuf_FieldMask.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  sub_1C20BF6B4((uint64_t)v5, v1, v2, v3);
  return sub_1C2175870();
}

unint64_t sub_1C213D408()
{
  return 0xD000000000000019;
}

uint64_t sub_1C213D424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldMask.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C213D438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FieldMask.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C213D44C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD38 != -1)
    swift_once();
  v2 = unk_1EF760380;
  v3 = qword_1EF760388;
  v4 = unk_1EF760390;
  *a1 = qword_1EF760378;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C213D4C8()
{
  uint64_t *v0;

  return sub_1C21598CC(*v0, v0[1], v0[2]);
}

uint64_t sub_1C213D4D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  sub_1C20BF6B4((uint64_t)v5, v1, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C213D52C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  sub_1C20BF6B4((uint64_t)v5, v1, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C213D580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_1C20F76E4(*(_QWORD **)a1, *(_QWORD **)a2) & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v7 = v6;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v7 & 1;
}

unint64_t sub_1C213D61C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C213D640();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C213D640()
{
  unint64_t result;

  result = qword_1EF760398;
  if (!qword_1EF760398)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldMask, &type metadata for Google_Protobuf_FieldMask);
    atomic_store(result, (unint64_t *)&qword_1EF760398);
  }
  return result;
}

unint64_t sub_1C213D684(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C213D6B0();
  result = sub_1C213D6F4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C213D6B0()
{
  unint64_t result;

  result = qword_1EF7603A0;
  if (!qword_1EF7603A0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldMask, &type metadata for Google_Protobuf_FieldMask);
    atomic_store(result, (unint64_t *)&qword_1EF7603A0);
  }
  return result;
}

unint64_t sub_1C213D6F4()
{
  unint64_t result;

  result = qword_1EF7603A8;
  if (!qword_1EF7603A8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldMask, &type metadata for Google_Protobuf_FieldMask);
    atomic_store(result, (unint64_t *)&qword_1EF7603A8);
  }
  return result;
}

unint64_t sub_1C213D73C()
{
  unint64_t result;

  result = qword_1EF7603B0;
  if (!qword_1EF7603B0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldMask, &type metadata for Google_Protobuf_FieldMask);
    atomic_store(result, (unint64_t *)&qword_1EF7603B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldMask()
{
  return &type metadata for Google_Protobuf_FieldMask;
}

uint64_t sub_1C213D790(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_1C21754E0();
  return sub_1C2175558();
}

uint64_t sub_1C213D808(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = result & 0xFFFFFFFFFFFFLL;
  v3 = 4 * v2;
  v4 = 15;
  if (v2)
  {
    do
    {
      while (1)
      {
        v6 = sub_1C2175558();
        v8 = v7;
        v9 = sub_1C21754D4();
        if (v6 != 47 || v8 != 0xE100000000000000)
          break;
        result = swift_bridgeObjectRelease();
        v4 = v9;
        if (v3 <= v9 >> 14)
          goto LABEL_12;
      }
      v5 = sub_1C21757C8();
      result = swift_bridgeObjectRelease();
      if ((v5 & 1) != 0)
        v4 = v9;
    }
    while (v3 > v9 >> 14);
  }
LABEL_12:
  if (v3 < v4 >> 14)
  {
    __break(1u);
  }
  else
  {
    v10 = sub_1C217557C();
    v11 = MEMORY[0x1C3BB7910](v10);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1C213D950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1C2175678();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C217566C();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = sub_1C21753C0();
  MEMORY[0x1E0C80A78](v7, v8);
  sub_1C213E80C();
  sub_1C21753B4();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1C213E848();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760400);
  sub_1C213E890();
  sub_1C21756A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1C2175684();
  qword_1EF7603B8 = result;
  return result;
}

void *sub_1C213DAE0()
{
  uint64_t inited;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7603C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C217BC60;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x80000001C217E800;
  v1 = sub_1C20C4DCC();
  *(_QWORD *)(inited + 48) = &type metadata for Google_Protobuf_Any;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = 0xD000000000000019;
  *(_QWORD *)(inited + 72) = 0x80000001C217E9D0;
  v2 = sub_1C213C6CC();
  *(_QWORD *)(inited + 80) = &type metadata for Google_Protobuf_BoolValue;
  *(_QWORD *)(inited + 88) = v2;
  *(_QWORD *)(inited + 96) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 104) = 0x80000001C217EA10;
  v3 = sub_1C213C964();
  *(_QWORD *)(inited + 112) = &type metadata for Google_Protobuf_BytesValue;
  *(_QWORD *)(inited + 120) = v3;
  *(_QWORD *)(inited + 128) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 136) = 0x80000001C217E910;
  v4 = sub_1C213BF04();
  *(_QWORD *)(inited + 144) = &type metadata for Google_Protobuf_DoubleValue;
  *(_QWORD *)(inited + 152) = v4;
  *(_QWORD *)(inited + 160) = 0xD000000000000018;
  *(_QWORD *)(inited + 168) = 0x80000001C217EA60;
  v5 = sub_1C213E6FC();
  *(_QWORD *)(inited + 176) = &type metadata for Google_Protobuf_Duration;
  *(_QWORD *)(inited + 184) = v5;
  *(_QWORD *)(inited + 192) = 0xD000000000000015;
  *(_QWORD *)(inited + 200) = 0x80000001C217E7E0;
  v6 = sub_1C2135044();
  *(_QWORD *)(inited + 208) = &type metadata for Google_Protobuf_Empty;
  *(_QWORD *)(inited + 216) = v6;
  *(_QWORD *)(inited + 224) = 0xD000000000000019;
  *(_QWORD *)(inited + 232) = 0x80000001C217EA30;
  v7 = sub_1C213D6B0();
  *(_QWORD *)(inited + 240) = &type metadata for Google_Protobuf_FieldMask;
  *(_QWORD *)(inited + 248) = v7;
  *(_QWORD *)(inited + 256) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 264) = 0x80000001C217E930;
  v8 = sub_1C213C050();
  *(_QWORD *)(inited + 272) = &type metadata for Google_Protobuf_FloatValue;
  *(_QWORD *)(inited + 280) = v8;
  *(_QWORD *)(inited + 288) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 296) = 0x80000001C217E990;
  v9 = sub_1C213C434();
  *(_QWORD *)(inited + 304) = &type metadata for Google_Protobuf_Int32Value;
  *(_QWORD *)(inited + 312) = v9;
  *(_QWORD *)(inited + 320) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 328) = 0x80000001C217E950;
  v10 = sub_1C213C19C();
  *(_QWORD *)(inited + 336) = &type metadata for Google_Protobuf_Int64Value;
  *(_QWORD *)(inited + 344) = v10;
  *(_QWORD *)(inited + 352) = 0xD000000000000019;
  *(_QWORD *)(inited + 360) = 0x80000001C217EA80;
  v11 = sub_1C213E740();
  *(_QWORD *)(inited + 368) = &type metadata for Google_Protobuf_ListValue;
  *(_QWORD *)(inited + 376) = v11;
  *(_QWORD *)(inited + 384) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 392) = 0x80000001C217E9F0;
  v12 = sub_1C213C818();
  *(_QWORD *)(inited + 400) = &type metadata for Google_Protobuf_StringValue;
  *(_QWORD *)(inited + 408) = v12;
  *(_QWORD *)(inited + 416) = 0xD000000000000016;
  *(_QWORD *)(inited + 424) = 0x80000001C217EAA0;
  v13 = sub_1C213E784();
  *(_QWORD *)(inited + 432) = &type metadata for Google_Protobuf_Struct;
  *(_QWORD *)(inited + 440) = v13;
  *(_QWORD *)(inited + 448) = 0xD000000000000019;
  *(_QWORD *)(inited + 456) = 0x80000001C217E6E0;
  v14 = sub_1C2119130();
  *(_QWORD *)(inited + 464) = &type metadata for Google_Protobuf_Timestamp;
  *(_QWORD *)(inited + 472) = v14;
  *(_QWORD *)(inited + 480) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 488) = 0x80000001C217E9B0;
  v15 = sub_1C213C580();
  *(_QWORD *)(inited + 496) = &type metadata for Google_Protobuf_UInt32Value;
  *(_QWORD *)(inited + 504) = v15;
  *(_QWORD *)(inited + 512) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 520) = 0x80000001C217E970;
  v16 = sub_1C213C2E8();
  *(_QWORD *)(inited + 528) = &type metadata for Google_Protobuf_UInt64Value;
  *(_QWORD *)(inited + 536) = v16;
  *(_QWORD *)(inited + 544) = 0xD000000000000015;
  *(_QWORD *)(inited + 552) = 0x80000001C217EAC0;
  v17 = sub_1C213E7C8();
  *(_QWORD *)(inited + 560) = &type metadata for Google_Protobuf_Value;
  *(_QWORD *)(inited + 568) = v17;
  result = (void *)sub_1C2171A0C(inited);
  off_1EF7603C0 = result;
  return result;
}

uint64_t static Google_Protobuf_Any.register(messageType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  uint64_t result;
  uint64_t v13;
  _QWORD aBlock[6];
  unsigned __int8 v15;

  v4 = (*(uint64_t (**)(void))(a2 + 24))();
  v6 = v5;
  v15 = 0;
  if (qword_1EF75CD40 != -1)
    swift_once();
  v7 = (void *)qword_1EF7603B8;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v4;
  v8[3] = v6;
  v8[4] = &v15;
  v8[5] = a1;
  v8[6] = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1C213E0E8;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1C213E128;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C213E148;
  aBlock[3] = &block_descriptor;
  v10 = _Block_copy(aBlock);
  v11 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v11, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v10 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = v15;
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_1C213DF5C(uint64_t a1, uint64_t a2, BOOL *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  BOOL v15;
  char isUniquelyReferenced_nonNull_native;
  void *v17;

  if (qword_1EF75CD48 != -1)
    swift_once();
  swift_beginAccess();
  v10 = off_1EF7603C0;
  if (!*((_QWORD *)off_1EF7603C0 + 2))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v11 = sub_1C20A9B30(a1, a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = off_1EF7603C0;
    off_1EF7603C0 = (_UNKNOWN *)0x8000000000000000;
    sub_1C2173750(a4, a5, a1, a2, isUniquelyReferenced_nonNull_native);
    off_1EF7603C0 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_endAccess();
    v15 = 1;
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(v10[7] + 16 * v11);
  swift_endAccess();
  result = swift_bridgeObjectRelease();
  v15 = v13 == a4;
LABEL_8:
  *a3 = v15;
  return result;
}

uint64_t sub_1C213E0C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C213E0E8()
{
  uint64_t v0;

  return sub_1C213DF5C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(BOOL **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1C213E0F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C213E118()
{
  return swift_deallocObject();
}

uint64_t sub_1C213E128()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C213E148(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t static Google_Protobuf_Any.messageType(forTypeURL:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[6];
  _QWORD v13[2];

  v2 = sub_1C213D808(a1, a2);
  v4 = v3;
  v13[0] = 0;
  v13[1] = 0;
  if (qword_1EF75CD40 != -1)
    swift_once();
  v5 = (void *)qword_1EF7603B8;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v13;
  v6[3] = v2;
  v6[4] = v4;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1C213E54C;
  *(_QWORD *)(v7 + 24) = v6;
  v12[4] = sub_1C213E8DC;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1C213E148;
  v12[3] = &block_descriptor_13;
  v8 = _Block_copy(v12);
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = v13[0];
    swift_bridgeObjectRelease();
    swift_release();
    return v11;
  }
  return result;
}

uint64_t static Google_Protobuf_Any.messageType(forMessageName:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[6];
  _QWORD v13[2];

  v13[0] = 0;
  v13[1] = 0;
  if (qword_1EF75CD40 != -1)
    swift_once();
  v4 = (void *)qword_1EF7603B8;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v13;
  v5[3] = a1;
  v5[4] = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1C213E8F4;
  *(_QWORD *)(v6 + 24) = v5;
  v12[4] = sub_1C213E8DC;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1C213E148;
  v12[3] = &block_descriptor_24;
  v7 = _Block_copy(v12);
  v8 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v7);

  _Block_release(v7);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = v13[0];
    swift_release();
    return v11;
  }
  return result;
}

__n128 sub_1C213E484(__n128 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  unint64_t v7;
  char v8;
  __n128 result;
  __n128 v10;

  if (qword_1EF75CD48 != -1)
    swift_once();
  swift_beginAccess();
  v6 = off_1EF7603C0;
  v10 = 0u;
  if (*((_QWORD *)off_1EF7603C0 + 2))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1C20A9B30(a2, a3);
    if ((v8 & 1) != 0)
      v10 = *(__n128 *)(v6[7] + 16 * v7);
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  result = v10;
  *a1 = v10;
  return result;
}

double sub_1C213E54C()
{
  _QWORD *v0;
  double result;

  *(_QWORD *)&result = sub_1C213E484((__n128 *)v0[2], v0[3], v0[4]).n128_u64[0];
  return result;
}

uint64_t sub_1C213E558()
{
  return swift_deallocObject();
}

uint64_t sub_1C213E568()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C213E58C()
{
  return swift_deallocObject();
}

uint64_t sub_1C213E59C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15[3];
  uint64_t v16;
  uint64_t v17;

  v16 = a4;
  v17 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if ((a3 & 0x2000000000000000) != 0)
    v10 = HIBYTE(a3) & 0xF;
  else
    v10 = a2 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_10;
  v11 = sub_1C213D790(a2, a3);
  if (!v12)
    goto LABEL_10;
  if (v11 != 47 || v12 != 0xE100000000000000)
  {
    v13 = sub_1C21757C8();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      goto LABEL_11;
LABEL_10:
    sub_1C21754F8();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  __swift_project_boxed_opaque_existential_1(v15, v16);
  swift_getDynamicType();
  (*(void (**)(void))(v17 + 24))();
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return a2;
}

unint64_t sub_1C213E6FC()
{
  unint64_t result;

  result = qword_1EF7603D0;
  if (!qword_1EF7603D0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Duration, &type metadata for Google_Protobuf_Duration);
    atomic_store(result, (unint64_t *)&qword_1EF7603D0);
  }
  return result;
}

unint64_t sub_1C213E740()
{
  unint64_t result;

  result = qword_1EF7603D8;
  if (!qword_1EF7603D8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ListValue, &type metadata for Google_Protobuf_ListValue);
    atomic_store(result, (unint64_t *)&qword_1EF7603D8);
  }
  return result;
}

unint64_t sub_1C213E784()
{
  unint64_t result;

  result = qword_1EF7603E0;
  if (!qword_1EF7603E0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Struct, &type metadata for Google_Protobuf_Struct);
    atomic_store(result, (unint64_t *)&qword_1EF7603E0);
  }
  return result;
}

unint64_t sub_1C213E7C8()
{
  unint64_t result;

  result = qword_1EF7603E8;
  if (!qword_1EF7603E8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Value, &type metadata for Google_Protobuf_Value);
    atomic_store(result, (unint64_t *)&qword_1EF7603E8);
  }
  return result;
}

unint64_t sub_1C213E80C()
{
  unint64_t result;

  result = qword_1EF7603F0;
  if (!qword_1EF7603F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF7603F0);
  }
  return result;
}

unint64_t sub_1C213E848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF7603F8;
  if (!qword_1EF7603F8)
  {
    v1 = sub_1C217566C();
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EF7603F8);
  }
  return result;
}

unint64_t sub_1C213E890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF760408;
  if (!qword_1EF760408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF760400);
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF760408);
  }
  return result;
}

BOOL static TextFormatDecodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TextFormatDecodingError.hash(into:)()
{
  return sub_1C2175834();
}

uint64_t TextFormatDecodingError.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

unint64_t sub_1C213E97C()
{
  unint64_t result;

  result = qword_1EF760410;
  if (!qword_1EF760410)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for TextFormatDecodingError, &type metadata for TextFormatDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EF760410);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TextFormatDecodingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatDecodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1C213EA9C + 4 * byte_1C217BC85[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1C213EAD0 + 4 * byte_1C217BC80[v4]))();
}

uint64_t sub_1C213EAD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C213EAD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C213EAE0);
  return result;
}

uint64_t sub_1C213EAEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C213EAF4);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1C213EAF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C213EB00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextFormatDecodingError()
{
  return &type metadata for TextFormatDecodingError;
}

uint64_t dispatch thunk of static _ProtoNameProviding._protobuf_nameMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t (*sub_1C213EB24(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*result)();
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  result = sub_1C20B6D64();
  if (!v2)
  {
    v6 = v5;
    if (v5)
    {
      v7 = (uint64_t)result;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        v8 = (_QWORD *)swift_retain();
        *(_QWORD *)(v1 + 16) = sub_1C2155710(v8);
        swift_release();
      }
      swift_retain();
      sub_1C21531A8(v7, v6, a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        v9 = (_QWORD *)swift_retain();
        *(_QWORD *)(v1 + 16) = sub_1C2155710(v9);
        swift_release();
      }
      v10 = swift_retain();
      sub_1C213EC58(v10, a1);
    }
    return (uint64_t (*)())swift_release();
  }
  return result;
}

void sub_1C213EC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  char v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  void *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unsigned __int8 *v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  unint64_t v51;
  __int128 v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  NSObject *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  int v66;
  BOOL v67;
  uint64_t (*v68)();
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t (*v72)();
  unsigned __int8 *v73;
  unsigned __int8 *v74;
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  BOOL v81;
  unsigned __int8 *v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _BYTE *v96;
  char *v97;
  char v98;
  _BYTE *v99;
  _BYTE *v100;
  char v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t aBlock;
  __int128 v108;
  void *v109;
  uint64_t (*v110)();
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char v114;
  char v115;

  v3 = v2;
  v5 = (uint64_t *)(a1 + 32);
  swift_beginAccess();
  swift_beginAccess();
LABEL_2:
  v6 = *(_BYTE *)(a2 + 73);
  v7 = *(unsigned __int8 **)(a2 + 40);
  v8 = *(unsigned __int8 **)(a2 + 48);
  if ((v6 & 1) == 0 && v7 != v8 && *v7 == *(unsigned __int8 *)(a2 + 72))
  {
    *(_QWORD *)(a2 + 40) = v7 + 1;
    sub_1C20B5184();
    return;
  }
  v9 = *(_QWORD *)(a2 + 64);
  if (v9 >= 1 && v7 != v8)
  {
    v11 = *v7;
    if (v11 == 44 || v11 == 59)
    {
      *(_QWORD *)(a2 + 40) = ++v7;
      if (v7 == v8)
        goto LABEL_29;
      while (1)
      {
        v13 = *v7;
        if (v13 > 0x23)
          break;
        if (((1 << v13) & 0x100002600) != 0)
        {
          v12 = v7 + 1;
          *(_QWORD *)(a2 + 40) = v7 + 1;
        }
        else
        {
          if (v13 != 35)
            break;
          *(_QWORD *)(a2 + 40) = v7 + 1;
          if (v7 + 1 == v8)
            goto LABEL_29;
          v14 = v7[1];
          v12 = v7 + 2;
          *(_QWORD *)(a2 + 40) = v7 + 2;
          if (v14 != 10 && v14 != 13)
          {
            if (v12 == v8)
              goto LABEL_29;
            v15 = v7[2];
            v12 = v7 + 3;
            *(_QWORD *)(a2 + 40) = v7 + 3;
            if (v15 != 10 && v15 != 13)
            {
              while (v12 != v8)
              {
                v17 = *v12++;
                v16 = v17;
                *(_QWORD *)(a2 + 40) = v12;
                if (v17 == 10 || v16 == 13)
                  goto LABEL_14;
              }
              goto LABEL_29;
            }
          }
        }
LABEL_14:
        v7 = v12;
        if (v12 == v8)
          goto LABEL_29;
      }
    }
  }
  if (v7 == v8)
    goto LABEL_29;
  while (1)
  {
    v29 = *v7;
    if (v29 > 0x23)
    {
LABEL_98:
      if (v7 == v8 || (_DWORD)v29 != 91)
        goto LABEL_29;
      v64 = (char *)(v7 + 1);
      *(_QWORD *)(a2 + 40) = v7 + 1;
      if (v7 + 1 == v8)
        goto LABEL_158;
      if ((*v64 & 0xDFu) - 91 < 0xFFFFFFE6)
        goto LABEL_158;
      *(_QWORD *)(a2 + 40) = v7 + 2;
      if (v7 + 2 == v8)
        goto LABEL_158;
      v65 = 0;
      while (1)
      {
        v66 = v7[v65 + 2];
        v67 = (v66 - 58) > 0xFFFFFFF5 || (v66 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
        if (!v67 && (v66 - 46) >= 2 && v66 != 95)
          break;
        *(_QWORD *)(a2 + 40) = &v7[v65++ + 3];
        if (&v7[v65 + 2] == v8)
          goto LABEL_158;
      }
      if (v66 != 93)
        goto LABEL_158;
      v68 = sub_1C20AD098(v64, v65 + 1);
      if (!v69)
        goto LABEL_158;
      v70 = v69;
      v71 = *(unsigned __int8 **)(a2 + 40);
      if (v71 == v8 || *v71 != 93)
        goto LABEL_157;
      v72 = v68;
      v73 = v71 + 1;
      *(_QWORD *)(a2 + 40) = v71 + 1;
      v74 = *(unsigned __int8 **)(a2 + 48);
      if (v73 != v74)
      {
        do
        {
          v83 = *v73;
          if (v83 > 0x23)
            break;
          if (((1 << v83) & 0x100002600) != 0)
          {
            v82 = v73 + 1;
            *(_QWORD *)(a2 + 40) = v73 + 1;
          }
          else
          {
            if (v83 != 35)
              break;
            *(_QWORD *)(a2 + 40) = v73 + 1;
            if (v73 + 1 == v74)
              break;
            v84 = v73[1];
            v82 = v73 + 2;
            *(_QWORD *)(a2 + 40) = v73 + 2;
            if (v84 != 10 && v84 != 13)
            {
              if (v82 == v74)
                break;
              v85 = v73[2];
              v82 = v73 + 3;
              *(_QWORD *)(a2 + 40) = v73 + 3;
              if (v85 != 10 && v85 != 13)
              {
                while (v82 != v74)
                {
                  v87 = *v82++;
                  v86 = v87;
                  *(_QWORD *)(a2 + 40) = v82;
                  if (v87 == 10 || v86 == 13)
                    goto LABEL_126;
                }
                break;
              }
            }
          }
LABEL_126:
          v73 = v82;
        }
        while (v82 != v74);
      }
      if (!*(_QWORD *)(a2 + 24))
      {
        swift_bridgeObjectRelease();
LABEL_161:
        sub_1C20B727C();
        swift_allocError();
        v98 = 7;
        goto LABEL_152;
      }
      sub_1C20A84A8(a2, (uint64_t)&aBlock);
      v75 = v109;
      v76 = v110;
      __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v109);
      v77 = *(_QWORD *)(a2 + 112);
      if (!v77)
        goto LABEL_165;
      v22 = (*((uint64_t (**)(uint64_t, _QWORD, uint64_t (*)(), uint64_t, void *, uint64_t (*)()))v76
             + 2))(v77, *(_QWORD *)(a2 + 120), v72, v70, v75, v76);
      v79 = v78;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      if ((v79 & 1) != 0)
        goto LABEL_161;
      v80 = *(_QWORD *)(a2 + 64);
      v81 = __OFADD__(v80, 1);
      v21 = v80 + 1;
      if (v81)
        goto LABEL_163;
LABEL_34:
      *(_QWORD *)(a2 + 64) = v21;
      if (v22 != 1)
      {
        if (v22 != 2)
          goto LABEL_2;
        sub_1C212F90C(v5, (uint64_t)&v112);
        v104 = (uint64_t)v5;
        if (!v115)
        {
          v51 = *((_QWORD *)&v112 + 1);
          v27 = v112;
          goto LABEL_143;
        }
        if (v115 == 1)
        {
          sub_1C20A8734(&v112, (uint64_t)&aBlock);
          v23 = (uint64_t)v109;
          v24 = (uint64_t)v110;
          __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v109);
          v25 = Message.serializedData(partial:)(1, v23, v24);
          if (v3)
          {
            MEMORY[0x1C3BB7EEC](v3);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
            v27 = 0;
            v3 = 0;
LABEL_142:
            v51 = 0xC000000000000000;
LABEL_143:
            sub_1C20B5184();
            v90 = *(_BYTE **)(a2 + 40);
            if (v90 == *(_BYTE **)(a2 + 48) || *v90 != 58)
            {
              sub_1C20B727C();
              swift_allocError();
              *v99 = 0;
              swift_willThrow();
LABEL_154:
              aBlock = v27;
              *(_QWORD *)&v108 = v51;
              LOBYTE(v111) = 0;
              sub_1C2135F08((uint64_t)&aBlock, (uint64_t)&v112);
              swift_beginAccess();
              sub_1C212F948((uint64_t)&v112, v104);
LABEL_148:
              swift_endAccess();
              return;
            }
            *(_QWORD *)(a2 + 40) = v90 + 1;
            sub_1C20B5184();
            v91 = sub_1C20B6020();
            if (v3)
              goto LABEL_154;
            v93 = v91;
            v94 = v92;
            sub_1C20A8058(v27, v51);
            aBlock = v93;
            *(_QWORD *)&v108 = v94;
            LOBYTE(v111) = 0;
            sub_1C2135F08((uint64_t)&aBlock, (uint64_t)&v112);
            v5 = (uint64_t *)v104;
            swift_beginAccess();
            sub_1C212F948((uint64_t)&v112, v104);
            swift_endAccess();
            goto LABEL_2;
          }
          v27 = v25;
          v51 = v26;
LABEL_123:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
          goto LABEL_143;
        }
        v52 = v112;
        v102 = v113;
        v101 = v114;
        v54 = *(_QWORD *)(a1 + 16);
        v53 = *(_QWORD *)(a1 + 24);
        swift_bridgeObjectRetain();
        v55 = sub_1C213D808(v54, v53);
        v57 = v56;
        v105 = 0;
        v106 = 0;
        if (qword_1EF75CD40 != -1)
          swift_once();
        v58 = (void *)qword_1EF7603B8;
        v59 = (_QWORD *)swift_allocObject();
        v59[2] = &v105;
        v59[3] = v55;
        v59[4] = v57;
        v60 = swift_allocObject();
        *(_QWORD *)(v60 + 16) = sub_1C213E54C;
        *(_QWORD *)(v60 + 24) = v59;
        v110 = sub_1C2140178;
        v111 = v60;
        aBlock = MEMORY[0x1E0C809B0];
        *(_QWORD *)&v108 = 1107296256;
        *((_QWORD *)&v108 + 1) = sub_1C213E148;
        v109 = &block_descriptor_0;
        v61 = _Block_copy(&aBlock);
        v62 = v58;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        dispatch_sync(v62, v61);

        _Block_release(v61);
        LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v61 & 1) != 0)
        {
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
          return;
        }
        v63 = v105;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v63)
        {
          v105 = v102;
          LOBYTE(v106) = v101;
          sub_1C2154CE0(v52, *((uint64_t *)&v52 + 1), (uint64_t)&v105, v63);
          if (!v3)
          {
            v88 = (uint64_t)v109;
            v89 = (uint64_t)v110;
            __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v109);
            v27 = Message.serializedData(partial:)(1, v88, v89);
            v51 = v95;
            sub_1C20A8058(v52, *((unint64_t *)&v52 + 1));
            goto LABEL_123;
          }
          MEMORY[0x1C3BB7EEC](v3);
          sub_1C20A8058(v52, *((unint64_t *)&v52 + 1));
          v3 = 0;
        }
        else
        {
          sub_1C20A8058(v52, *((unint64_t *)&v52 + 1));
        }
        v27 = 0;
        goto LABEL_142;
      }
      swift_beginAccess();
      v35 = *(unsigned __int8 **)(a2 + 40);
      v34 = *(unsigned __int8 **)(a2 + 48);
      if (v35 != v34)
      {
        while (1)
        {
          v40 = *v35;
          if (v40 > 0x23)
            break;
          if (((1 << v40) & 0x100002600) != 0)
          {
            v39 = v35 + 1;
            *(_QWORD *)(a2 + 40) = v35 + 1;
          }
          else
          {
            if (v40 != 35)
              break;
            *(_QWORD *)(a2 + 40) = v35 + 1;
            if (v35 + 1 == v34)
              goto LABEL_147;
            v41 = v35[1];
            v39 = v35 + 2;
            *(_QWORD *)(a2 + 40) = v35 + 2;
            if (v41 != 10 && v41 != 13)
            {
              if (v39 == v34)
                goto LABEL_147;
              v42 = v35[2];
              v39 = v35 + 3;
              *(_QWORD *)(a2 + 40) = v35 + 3;
              if (v42 != 10 && v42 != 13)
              {
                while (v39 != v34)
                {
                  v44 = *v39++;
                  v43 = v44;
                  *(_QWORD *)(a2 + 40) = v39;
                  if (v44 == 10 || v43 == 13)
                    goto LABEL_62;
                }
                goto LABEL_147;
              }
            }
          }
LABEL_62:
          v35 = v39;
          if (v39 == v34)
            goto LABEL_147;
        }
      }
      if (v35 == v34 || *v35 != 58)
      {
LABEL_147:
        sub_1C20B727C();
        swift_allocError();
        *v96 = 0;
        swift_willThrow();
        goto LABEL_148;
      }
      v36 = v35 + 1;
      *(_QWORD *)(a2 + 40) = v36;
      if (v36 != v34)
      {
        do
        {
          v46 = *v36;
          if (v46 > 0x23)
            break;
          if (((1 << v46) & 0x100002600) != 0)
          {
            v45 = v36 + 1;
            *(_QWORD *)(a2 + 40) = v36 + 1;
          }
          else
          {
            if (v46 != 35)
              break;
            *(_QWORD *)(a2 + 40) = v36 + 1;
            if (v36 + 1 == v34)
              break;
            v47 = v36[1];
            v45 = v36 + 2;
            *(_QWORD *)(a2 + 40) = v36 + 2;
            if (v47 != 10 && v47 != 13)
            {
              if (v45 == v34)
                break;
              v48 = v36[2];
              v45 = v36 + 3;
              *(_QWORD *)(a2 + 40) = v36 + 3;
              if (v48 != 10 && v48 != 13)
              {
                while (v45 != v34)
                {
                  v50 = *v45++;
                  v49 = v50;
                  *(_QWORD *)(a2 + 40) = v45;
                  if (v50 == 10 || v49 == 13)
                    goto LABEL_77;
                }
                break;
              }
            }
          }
LABEL_77:
          v36 = v45;
        }
        while (v45 != v34);
      }
      v37 = sub_1C20B5D6C();
      if (v3)
        goto LABEL_148;
      *(_QWORD *)(a1 + 16) = v37;
      *(_QWORD *)(a1 + 24) = v38;
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    if (((1 << v29) & 0x100002600) != 0)
    {
      v28 = v7 + 1;
      *(_QWORD *)(a2 + 40) = v7 + 1;
      goto LABEL_41;
    }
    if (v29 != 35)
      goto LABEL_98;
    *(_QWORD *)(a2 + 40) = v7 + 1;
    if (v7 + 1 == v8)
      goto LABEL_29;
    v30 = v7[1];
    v28 = v7 + 2;
    *(_QWORD *)(a2 + 40) = v7 + 2;
    if (v30 != 10 && v30 != 13)
    {
      if (v28 == v8)
        goto LABEL_29;
      v31 = v7[2];
      v28 = v7 + 3;
      *(_QWORD *)(a2 + 40) = v7 + 3;
      if (v31 != 10 && v31 != 13)
        break;
    }
LABEL_41:
    v7 = v28;
    if (v28 == v8)
      goto LABEL_29;
  }
  while (v28 != v8)
  {
    v33 = *v28++;
    v32 = v33;
    *(_QWORD *)(a2 + 40) = v28;
    if (v33 == 10 || v32 == 13)
      goto LABEL_41;
  }
LABEL_29:
  if (!*(_QWORD *)(a2 + 80))
    goto LABEL_164;
  v18 = *(void **)(a2 + 104);
  aBlock = *(_QWORD *)(a2 + 80);
  v108 = *(_OWORD *)(a2 + 88);
  v109 = v18;
  v19 = sub_1C20B6E30((uint64_t)&aBlock);
  if (!v3)
  {
    if ((v20 & 1) != 0)
    {
      if ((v6 & 1) == 0)
      {
        sub_1C20B727C();
        swift_allocError();
        v98 = 3;
LABEL_152:
        *v97 = v98;
        goto LABEL_159;
      }
    }
    else
    {
      v21 = v9 + 1;
      if (!__OFADD__(v9, 1))
      {
        v22 = v19;
        goto LABEL_34;
      }
      __break(1u);
LABEL_157:
      swift_bridgeObjectRelease();
LABEL_158:
      sub_1C20B727C();
      swift_allocError();
      *v100 = 0;
LABEL_159:
      swift_willThrow();
    }
  }
}

uint64_t Google_Protobuf_Any.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t defaultAnyTypeURLPrefix.getter()
{
  return 0xD000000000000013;
}

uint64_t Google_Protobuf_Any.init(message:partial:typePrefix:)@<X0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  _BYTE *v23;
  _BYTE v24[48];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  char v28;

  sub_1C20A84A8((uint64_t)a1, (uint64_t)v25);
  if ((a2 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    v10 = v26;
    v11 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C2107C2C();
      swift_allocError();
      *v23 = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
  }
  if (qword_1EF75CD58 != -1)
    swift_once();
  v13 = qword_1EF76E188;
  v14 = *((_QWORD *)a1 + 3);
  v15 = *((_QWORD *)a1 + 4);
  v16 = __swift_project_boxed_opaque_existential_1(a1, v14);
  swift_retain();
  v17 = sub_1C213E59C((uint64_t)v16, a3, a4, v14, v15);
  v19 = v18;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    v20 = (_QWORD *)swift_retain();
    v21 = sub_1C2155710(v20);
    swift_release();
    v13 = v21;
  }
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = v17;
  *(_QWORD *)(v13 + 24) = v19;
  swift_bridgeObjectRelease();
  sub_1C20A8734(a1, (uint64_t)v25);
  v28 = 1;
  sub_1C2135F08((uint64_t)v25, (uint64_t)v24);
  swift_beginAccess();
  swift_retain();
  sub_1C212F948((uint64_t)v24, v13 + 32);
  swift_endAccess();
  result = swift_release();
  *(_OWORD *)a5 = xmmword_1C2175DE0;
  *(_QWORD *)(a5 + 16) = v13;
  return result;
}

uint64_t Google_Protobuf_Any.init(textFormatString:extensions:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v8 = sub_1C2175468();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF75CD58 != -1)
    swift_once();
  v21 = xmmword_1C2175DE0;
  v22 = qword_1EF76E188;
  if ((a2 & 0x2000000000000000) != 0)
    v13 = HIBYTE(a2) & 0xF;
  else
    v13 = a1 & 0xFFFFFFFFFFFFLL;
  swift_retain();
  if (v13)
  {
    sub_1C217545C();
    sub_1C217542C();
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v15 >> 60 != 15)
    {
      MEMORY[0x1E0C80A78](v16, v17);
      v20[-2] = a3;
      v20[-1] = &v21;
      __asm { BR              X10 }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  result = sub_1C20A8FA0(a3);
  v19 = v22;
  *(_OWORD *)a4 = v21;
  *(_QWORD *)(a4 + 16) = v19;
  return result;
}

uint64_t sub_1C213FDCC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[40];
  _OWORD v26[2];
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  if (result)
  {
    v4 = result;
    v5 = a2 - result;
    if (a2 - result >= 1)
    {
      v7 = sub_1C20C4DCC();
      sub_1C20AC3C4(a3, (uint64_t)v25);
      v31 = 0;
      v32 = 256;
      v33 = 0u;
      v34 = 0u;
      v35 = 0u;
      sub_1C20AC3C4((uint64_t)v25, (uint64_t)&v22);
      type metadata accessor for DoubleParser();
      memset(v26, 0, sizeof(v26));
      v27 = 0;
      v8 = swift_allocObject();
      v9 = swift_slowAlloc();
      *(_QWORD *)(v8 + 16) = v9;
      *(_QWORD *)(v8 + 24) = v9 + 128;
      v28 = (unsigned __int8 *)v4;
      v29 = (unsigned __int8 *)(v4 + v5);
      v30 = v8;
      sub_1C2139324((uint64_t)&v22, (uint64_t)v26);
      v10 = v28;
      if (v28 != v29)
      {
        do
        {
          v12 = *v10;
          if (v12 > 0x23)
            break;
          if (((1 << v12) & 0x100002600) != 0)
          {
            v11 = v10 + 1;
            v28 = v10 + 1;
          }
          else
          {
            if (v12 != 35)
              break;
            v28 = v10 + 1;
            if (v10 + 1 == v29)
              break;
            v13 = v10[1];
            v11 = v10 + 2;
            v28 = v10 + 2;
            if (v13 != 10 && v13 != 13)
            {
              if (v11 == v29)
                break;
              v14 = v10[2];
              v11 = v10 + 3;
              v28 = v10 + 3;
              if (v14 != 10 && v14 != 13)
              {
                while (v11 != v29)
                {
                  v16 = *v11++;
                  v15 = v16;
                  v28 = v11;
                  if (v16 == 10 || v15 == 13)
                    goto LABEL_6;
                }
                break;
              }
            }
          }
LABEL_6:
          v10 = v11;
        }
        while (v11 != v29);
      }
      sub_1C20A8FA0((uint64_t)&v22);
      result = swift_conformsToProtocol2();
      if (result)
      {
        (*(void (**)(__int128 *__return_ptr, ValueMetadata *, uint64_t))(result + 8))(&v22, &type metadata for Google_Protobuf_Any, result);
        sub_1C20A8FA0((uint64_t)v25);
        v21 = v22;
        v18 = v23;
        v19 = v24;
        sub_1C20A8840(v33);
        v33 = v21;
        *(_QWORD *)&v34 = v18;
        *((_QWORD *)&v34 + 1) = v19;
        *(_QWORD *)&v35 = &type metadata for Google_Protobuf_Any;
        *((_QWORD *)&v35 + 1) = v7;
        sub_1C213EB24((uint64_t)v26);
        if (!v3 && v28 != v29)
        {
          sub_1C20B727C();
          swift_allocError();
          *v20 = 2;
          swift_willThrow();
        }
        return sub_1C212854C((uint64_t)v26);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_Any.isA<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2155810(a1, a2, a3) & 1;
}

uint64_t sub_1C214005C(char *a1)
{
  char v1;
  char v3[2];

  v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  return sub_1C21537A4(v3);
}

uint64_t sub_1C2140090(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    v3 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C2155710(v3);
    swift_release();
  }
  swift_retain();
  sub_1C2153F08(a1);
  return swift_release();
}

uint64_t sub_1C214012C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C213FDCC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C2140144()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2140168()
{
  return swift_deallocObject();
}

uint64_t sub_1C2140178()
{
  uint64_t v0;

  return sub_1C213E0F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

_DWORD *sub_1C2140198(_DWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  if (*(_BYTE *)(v1 + 33) == 5)
  {
    v2 = *(_QWORD *)(v1 + 8);
    v3 = v2 < 4;
    v4 = v2 - 4;
    if (v3)
    {
      sub_1C2108014();
      swift_allocError();
      *v5 = 1;
      return (_DWORD *)swift_willThrow();
    }
    else
    {
      v6 = *(_QWORD *)v1 + 4;
      *result = **(_DWORD **)v1;
      *(_QWORD *)v1 = v6;
      *(_QWORD *)(v1 + 8) = v4;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

void sub_1C214021C()
{
  _QWORD *v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = v0[1];
  v2 = v1 < 4;
  v3 = v1 - 4;
  if (v2)
  {
    sub_1C2108014();
    swift_allocError();
    *v4 = 1;
    swift_willThrow();
  }
  else
  {
    *v0 += 4;
    v0[1] = v3;
  }
}

void sub_1C21402BC(char **a1)
{
  int **v1;
  uint64_t v2;
  int v4;
  int v5;
  int v6;
  char *v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  _BYTE *v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;

  v4 = *((unsigned __int8 *)v1 + 33);
  if (v4 == 2)
  {
    v11 = sub_1C20ACC78();
    if (v2)
      return;
    v12 = v11;
    if (!v11)
      goto LABEL_29;
    if ((v11 & 3) != 0)
      goto LABEL_23;
    v13 = v11 >> 2;
    v7 = *a1;
    v14 = *((_QWORD *)*a1 + 2);
    v15 = v14 + (v11 >> 2);
    if (__OFADD__(v14, v11 >> 2))
    {
      __break(1u);
    }
    else
    {
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || v15 > *((_QWORD *)v7 + 3) >> 1)
      {
        if (v14 <= v15)
          v17 = v14 + (v12 >> 2);
        else
          v17 = v14;
        v7 = sub_1C214E884(isUniquelyReferenced_nonNull_native, v17, 0, v7);
      }
      *a1 = v7;
      if (v12 >= 4)
      {
        v18 = (uint64_t)v1[1];
        if (v18 >= 4)
        {
          do
          {
            v20 = *(*v1)++;
            v1[1] = (int *)(v18 - 4);
            v21 = *((_QWORD *)v7 + 2);
            v22 = *((_QWORD *)v7 + 3);
            v23 = v21 + 1;
            if (v21 >= v22 >> 1)
            {
              v24 = v7;
              v25 = *((_QWORD *)v7 + 2);
              v26 = sub_1C214E884((char *)(v22 > 1), v21 + 1, 1, v24);
              v21 = v25;
              v7 = v26;
            }
            *((_QWORD *)v7 + 2) = v23;
            *(_DWORD *)&v7[4 * v21 + 32] = v20;
            if (!--v13)
              goto LABEL_9;
            v18 = (uint64_t)v1[1];
          }
          while (v18 > 3);
        }
        *a1 = v7;
LABEL_23:
        sub_1C2108014();
        swift_allocError();
        *v19 = 1;
        swift_willThrow();
        return;
      }
    }
    __break(1u);
  }
  if (v4 == 5)
  {
    sub_1C214021C();
    if (!v2)
    {
      v6 = v5;
      v7 = *a1;
      v8 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if ((v8 & 1) == 0)
      {
        v7 = sub_1C214E884(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        *a1 = v7;
      }
      v10 = *((_QWORD *)v7 + 2);
      v9 = *((_QWORD *)v7 + 3);
      if (v10 >= v9 >> 1)
        v7 = sub_1C214E884((char *)(v9 > 1), v10 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v10 + 1;
      *(_DWORD *)&v7[4 * v10 + 32] = v6;
LABEL_9:
      *a1 = v7;
LABEL_29:
      *((_BYTE *)v1 + 32) = 1;
    }
  }
}

void sub_1C214050C(char **a1)
{
  uint64_t **v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;

  v4 = *((unsigned __int8 *)v1 + 33);
  if (v4 == 2)
  {
    v11 = sub_1C20ACC78();
    if (v2)
      return;
    v12 = v11;
    if (!v11)
      goto LABEL_29;
    if ((v11 & 7) != 0)
      goto LABEL_23;
    v13 = v11 >> 3;
    v7 = *a1;
    v14 = *((_QWORD *)*a1 + 2);
    v15 = v14 + (v11 >> 3);
    if (__OFADD__(v14, v11 >> 3))
    {
      __break(1u);
    }
    else
    {
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || v15 > *((_QWORD *)v7 + 3) >> 1)
      {
        if (v14 <= v15)
          v17 = v14 + (v12 >> 3);
        else
          v17 = v14;
        v7 = sub_1C214E994(isUniquelyReferenced_nonNull_native, v17, 0, v7);
      }
      *a1 = v7;
      if (v12 >= 8)
      {
        v18 = (uint64_t)v1[1];
        if (v18 >= 8)
        {
          do
          {
            v20 = *(*v1)++;
            v1[1] = (uint64_t *)(v18 - 8);
            v21 = *((_QWORD *)v7 + 2);
            v22 = *((_QWORD *)v7 + 3);
            v23 = v21 + 1;
            if (v21 >= v22 >> 1)
            {
              v24 = v7;
              v25 = *((_QWORD *)v7 + 2);
              v26 = sub_1C214E994((char *)(v22 > 1), v21 + 1, 1, v24);
              v21 = v25;
              v7 = v26;
            }
            *((_QWORD *)v7 + 2) = v23;
            *(_QWORD *)&v7[8 * v21 + 32] = v20;
            if (!--v13)
              goto LABEL_9;
            v18 = (uint64_t)v1[1];
          }
          while (v18 > 7);
        }
        *a1 = v7;
LABEL_23:
        sub_1C2108014();
        swift_allocError();
        *v19 = 1;
        swift_willThrow();
        return;
      }
    }
    __break(1u);
  }
  if (v4 == 1)
  {
    sub_1C20AD5E4();
    if (!v2)
    {
      v6 = v5;
      v7 = *a1;
      v8 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if ((v8 & 1) == 0)
      {
        v7 = sub_1C214E994(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        *a1 = v7;
      }
      v10 = *((_QWORD *)v7 + 2);
      v9 = *((_QWORD *)v7 + 3);
      if (v10 >= v9 >> 1)
        v7 = sub_1C214E994((char *)(v9 > 1), v10 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v10 + 1;
      *(_QWORD *)&v7[8 * v10 + 32] = v6;
LABEL_9:
      *a1 = v7;
LABEL_29:
      *((_BYTE *)v1 + 32) = 1;
    }
  }
}

uint64_t sub_1C214075C(uint64_t result, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[64];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[40];
  _BYTE v47[48];
  _QWORD v48[8];
  char v49;
  uint64_t v50;
  _OWORD v51[7];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char *v55;

  v5 = (uint64_t *)result;
  if (*(_BYTE *)(v2 + 33) != 2)
  {
    if (*(_BYTE *)(v2 + 33))
      return result;
    result = sub_1C20ACC78();
    if (v3)
      return result;
    v6 = result;
    v7 = *v5;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v7;
    if ((result & 1) == 0)
    {
      result = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))a2)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
      v7 = result;
      *v5 = result;
    }
    v9 = *(_QWORD *)(v7 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v8 > 1, v9 + 1, 1, v7);
      v10 = v9 + 1;
      v7 = result;
    }
    *(_QWORD *)(v7 + 16) = v10;
    *(_DWORD *)(v7 + 4 * v9 + 32) = v6;
    *v5 = v7;
LABEL_9:
    *(_BYTE *)(v2 + 32) = 1;
    return result;
  }
  result = sub_1C20ACC78();
  if (v3)
    return result;
  v11 = *(_QWORD *)(v2 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  v12 = result;
  v13 = v11 >= result;
  v14 = v11 - result;
  if (!v13)
  {
    sub_1C2108014();
    swift_allocError();
    *v15 = 1;
    return swift_willThrow();
  }
  v16 = *(char **)v2;
  *(_QWORD *)v2 += result;
  *(_QWORD *)(v2 + 8) = v14;
  if (result >= 1)
  {
    v17 = 0;
    v18 = v16;
    v19 = result;
    while (1)
    {
      v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1))
        break;
      if (!--v19)
        goto LABEL_22;
    }
    __break(1u);
  }
  v17 = 0;
LABEL_22:
  v55 = v16;
  v22 = *v5;
  v23 = *(_QWORD *)(*v5 + 16);
  v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_47:
    __break(1u);
    return result;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v22;
  if (!isUniquelyReferenced_nonNull_native || v24 > *(_QWORD *)(v22 + 24) >> 1)
    v22 = a2();
  *v5 = v22;
  sub_1C20ACD54(v2, (uint64_t)v47);
  v26 = v48[7];
  v27 = v49;
  sub_1C20ACEA4((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1ED7DFE00);
  *(_WORD *)v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  v44 = xmmword_1C2177160;
  v45 = xmmword_1C2177160;
  *(_QWORD *)&v39 = v55;
  *((_QWORD *)&v39 + 1) = v12;
  v40 = (unint64_t)v55;
  sub_1C20AC454((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v42 + 1) = v26;
  LOBYTE(v43) = v27;
  *((_QWORD *)&v43 + 1) = v26;
  v53 = v44;
  v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v39;
  v51[1] = v40;
  v51[6] = v42;
  v52 = v43;
  v28 = v50;
  sub_1C20ACEE8((uint64_t)v47);
  *((_QWORD *)&v52 + 1) = v28;
  v29 = *((_QWORD *)&v51[0] + 1);
  if (!*((_QWORD *)&v51[0] + 1))
  {
LABEL_41:
    result = sub_1C20ACEE8((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    v34 = 1;
    goto LABEL_43;
  }
  while (1)
  {
    v30 = (char)**(_BYTE **)&v51[0];
    LODWORD(v31) = v30;
    --v29;
    if (v30 < 0)
      break;
    ++*(_QWORD *)&v51[0];
LABEL_38:
    *((_QWORD *)&v51[0] + 1) = v29;
    *v5 = v22;
    v37 = *(_QWORD *)(v22 + 16);
    v36 = *(_QWORD *)(v22 + 24);
    if (v37 >= v36 >> 1)
      v22 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v36 > 1, v37 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v37 + 1;
    *(_DWORD *)(v22 + 4 * v37 + 32) = v31;
    *v5 = v22;
    if (!v29)
      goto LABEL_41;
  }
  if (v29 >= 1)
  {
    v31 &= 0x7Fu;
    v32 = *(_QWORD *)&v51[0] + 2;
    v33 = 7;
    while (1)
    {
      v31 |= (unint64_t)(*(_BYTE *)(v32 - 1) & 0x7F) << v33;
      if ((*(_BYTE *)(v32 - 1) & 0x80) == 0)
        break;
      v34 = 3;
      if ((unint64_t)v29 >= 2)
      {
        ++v32;
        --v29;
        v35 = v33 > 0x38;
        v33 += 7;
        if (!v35)
          continue;
      }
      goto LABEL_43;
    }
    --v29;
    *(_QWORD *)&v51[0] = v32;
    goto LABEL_38;
  }
  v34 = 3;
LABEL_43:
  sub_1C2108014();
  swift_allocError();
  *v38 = v34;
  swift_willThrow();
  return sub_1C20ACEE8((uint64_t)v51);
}

uint64_t sub_1C2140B48(uint64_t result, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[64];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[40];
  _BYTE v47[48];
  _QWORD v48[8];
  char v49;
  uint64_t v50;
  _OWORD v51[7];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char *v55;

  v5 = (uint64_t *)result;
  if (*(_BYTE *)(v2 + 33) != 2)
  {
    if (*(_BYTE *)(v2 + 33))
      return result;
    result = sub_1C20ACC78();
    if (v3)
      return result;
    v6 = result;
    v7 = *v5;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v7;
    if ((result & 1) == 0)
    {
      result = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))a2)(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
      v7 = result;
      *v5 = result;
    }
    v9 = *(_QWORD *)(v7 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v8 > 1, v9 + 1, 1, v7);
      v10 = v9 + 1;
      v7 = result;
    }
    *(_QWORD *)(v7 + 16) = v10;
    *(_QWORD *)(v7 + 8 * v9 + 32) = v6;
    *v5 = v7;
LABEL_9:
    *(_BYTE *)(v2 + 32) = 1;
    return result;
  }
  result = sub_1C20ACC78();
  if (v3)
    return result;
  v11 = *(_QWORD *)(v2 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  v12 = result;
  v13 = v11 >= result;
  v14 = v11 - result;
  if (!v13)
  {
    sub_1C2108014();
    swift_allocError();
    *v15 = 1;
    return swift_willThrow();
  }
  v16 = *(char **)v2;
  *(_QWORD *)v2 += result;
  *(_QWORD *)(v2 + 8) = v14;
  if (result >= 1)
  {
    v17 = 0;
    v18 = v16;
    v19 = result;
    while (1)
    {
      v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1))
        break;
      if (!--v19)
        goto LABEL_22;
    }
    __break(1u);
  }
  v17 = 0;
LABEL_22:
  v55 = v16;
  v22 = *v5;
  v23 = *(_QWORD *)(*v5 + 16);
  v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_47:
    __break(1u);
    return result;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v22;
  if (!isUniquelyReferenced_nonNull_native || v24 > *(_QWORD *)(v22 + 24) >> 1)
    v22 = a2();
  *v5 = v22;
  sub_1C20ACD54(v2, (uint64_t)v47);
  v26 = v48[7];
  v27 = v49;
  sub_1C20ACEA4((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1ED7DFE00);
  *(_WORD *)v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  v44 = xmmword_1C2177160;
  v45 = xmmword_1C2177160;
  *(_QWORD *)&v39 = v55;
  *((_QWORD *)&v39 + 1) = v12;
  v40 = (unint64_t)v55;
  sub_1C20AC454((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v42 + 1) = v26;
  LOBYTE(v43) = v27;
  *((_QWORD *)&v43 + 1) = v26;
  v53 = v44;
  v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v39;
  v51[1] = v40;
  v51[6] = v42;
  v52 = v43;
  v28 = v50;
  sub_1C20ACEE8((uint64_t)v47);
  *((_QWORD *)&v52 + 1) = v28;
  v29 = *((_QWORD *)&v51[0] + 1);
  if (!*((_QWORD *)&v51[0] + 1))
  {
LABEL_41:
    result = sub_1C20ACEE8((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    v34 = 1;
    goto LABEL_43;
  }
  while (1)
  {
    v30 = (char)**(_BYTE **)&v51[0];
    v31 = v30;
    --v29;
    if (v30 < 0)
      break;
    ++*(_QWORD *)&v51[0];
LABEL_38:
    *((_QWORD *)&v51[0] + 1) = v29;
    *v5 = v22;
    v37 = *(_QWORD *)(v22 + 16);
    v36 = *(_QWORD *)(v22 + 24);
    if (v37 >= v36 >> 1)
      v22 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v36 > 1, v37 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v37 + 1;
    *(_QWORD *)(v22 + 8 * v37 + 32) = v31;
    *v5 = v22;
    if (!v29)
      goto LABEL_41;
  }
  if (v29 >= 1)
  {
    v31 &= 0x7Fu;
    v32 = *(_QWORD *)&v51[0] + 2;
    v33 = 7;
    while (1)
    {
      v31 |= (unint64_t)(*(_BYTE *)(v32 - 1) & 0x7F) << v33;
      if ((*(_BYTE *)(v32 - 1) & 0x80) == 0)
        break;
      v34 = 3;
      if ((unint64_t)v29 >= 2)
      {
        ++v32;
        --v29;
        v35 = v33 > 0x38;
        v33 += 7;
        if (!v35)
          continue;
      }
      goto LABEL_43;
    }
    --v29;
    *(_QWORD *)&v51[0] = v32;
    goto LABEL_38;
  }
  v34 = 3;
LABEL_43:
  sub_1C2108014();
  swift_allocError();
  *v38 = v34;
  swift_willThrow();
  return sub_1C20ACEE8((uint64_t)v51);
}

uint64_t sub_1C2140F34(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char **v3;
  unsigned int v4;
  int v5;
  char *v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  char *v22;
  int64_t v23;
  int64_t v24;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  __int128 v40;
  _BYTE v41[64];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[40];
  _BYTE v47[48];
  _QWORD v48[8];
  char v49;
  uint64_t v50;
  _OWORD v51[7];
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v3 = (char **)result;
  if (*(_BYTE *)(v1 + 33) != 2)
  {
    if (*(_BYTE *)(v1 + 33))
      return result;
    result = sub_1C20ACC78();
    if (v2)
      return result;
    v4 = result;
    v5 = result & 1;
    v6 = *v3;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E97C(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *v3 = (char *)result;
    }
    v7 = -v5;
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      result = (uint64_t)sub_1C214E97C((char *)(v8 > 1), v9 + 1, 1, v6);
      v10 = v9 + 1;
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v10;
    *(_DWORD *)&v6[4 * v9 + 32] = v7 ^ (v4 >> 1);
    *v3 = v6;
LABEL_9:
    *(_BYTE *)(v1 + 32) = 1;
    return result;
  }
  result = sub_1C20ACC78();
  if (v2)
    return result;
  v11 = *(_QWORD *)(v1 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  v12 = result;
  v13 = v11 >= result;
  v14 = v11 - result;
  if (!v13)
  {
    sub_1C2108014();
    swift_allocError();
    *v15 = 1;
    return swift_willThrow();
  }
  v16 = *(char **)v1;
  *(_QWORD *)v1 += result;
  *(_QWORD *)(v1 + 8) = v14;
  if (result >= 1)
  {
    v17 = 0;
    v18 = v16;
    v19 = result;
    while (1)
    {
      v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1))
        break;
      if (!--v19)
        goto LABEL_22;
    }
    __break(1u);
  }
  v17 = 0;
LABEL_22:
  v22 = *v3;
  v23 = *((_QWORD *)*v3 + 2);
  v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_50:
    __break(1u);
    return result;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v3 = v22;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v24 > *((_QWORD *)v22 + 3) >> 1)
  {
    if (v23 <= v24)
      v26 = v24;
    else
      v26 = v23;
    v22 = sub_1C214E97C(isUniquelyReferenced_nonNull_native, v26, 0, v22);
  }
  *v3 = v22;
  sub_1C20ACD54(v1, (uint64_t)v47);
  v27 = v48[7];
  v28 = v49;
  sub_1C20ACEA4((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1ED7DFE00);
  *(_WORD *)v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  v44 = xmmword_1C2177160;
  v45 = xmmword_1C2177160;
  *(_QWORD *)&v40 = v16;
  *((_QWORD *)&v40 + 1) = v12;
  sub_1C20AC454((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v42 + 1) = v27;
  LOBYTE(v43) = v28;
  *((_QWORD *)&v43 + 1) = v27;
  v53 = v44;
  v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v40;
  v51[1] = (unint64_t)v16;
  v51[6] = v42;
  v52 = v43;
  v29 = v50;
  sub_1C20ACEE8((uint64_t)v47);
  *((_QWORD *)&v52 + 1) = v29;
  v30 = *((_QWORD *)&v51[0] + 1);
  if (!*((_QWORD *)&v51[0] + 1))
  {
LABEL_44:
    result = sub_1C20ACEE8((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    v35 = 1;
    goto LABEL_46;
  }
  while (1)
  {
    v31 = (char)**(_BYTE **)&v51[0];
    LODWORD(v32) = v31;
    --v30;
    if (v31 < 0)
      break;
    ++*(_QWORD *)&v51[0];
LABEL_41:
    *((_QWORD *)&v51[0] + 1) = v30;
    *v3 = v22;
    v38 = *((_QWORD *)v22 + 2);
    v37 = *((_QWORD *)v22 + 3);
    if (v38 >= v37 >> 1)
      v22 = sub_1C214E97C((char *)(v37 > 1), v38 + 1, 1, v22);
    *((_QWORD *)v22 + 2) = v38 + 1;
    *(_DWORD *)&v22[4 * v38 + 32] = -(v32 & 1) ^ (v32 >> 1);
    *v3 = v22;
    if (!v30)
      goto LABEL_44;
  }
  if (v30 >= 1)
  {
    v32 &= 0x7Fu;
    v33 = *(_QWORD *)&v51[0] + 2;
    v34 = 7;
    while (1)
    {
      v32 |= (unint64_t)(*(_BYTE *)(v33 - 1) & 0x7F) << v34;
      if ((*(_BYTE *)(v33 - 1) & 0x80) == 0)
        break;
      v35 = 3;
      if ((unint64_t)v30 >= 2)
      {
        ++v33;
        --v30;
        v36 = v34 > 0x38;
        v34 += 7;
        if (!v36)
          continue;
      }
      goto LABEL_46;
    }
    --v30;
    *(_QWORD *)&v51[0] = v33;
    goto LABEL_41;
  }
  v35 = 3;
LABEL_46:
  sub_1C2108014();
  swift_allocError();
  *v39 = v35;
  swift_willThrow();
  return sub_1C20ACEE8((uint64_t)v51);
}

uint64_t sub_1C214132C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char **v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int v20;
  char *v22;
  int64_t v23;
  int64_t v24;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  __int128 v40;
  _BYTE v41[64];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[40];
  _BYTE v47[48];
  _QWORD v48[8];
  char v49;
  uint64_t v50;
  _OWORD v51[7];
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v3 = (char **)result;
  if (*(_BYTE *)(v1 + 33) != 2)
  {
    if (*(_BYTE *)(v1 + 33))
      return result;
    result = sub_1C20ACC78();
    if (v2)
      return result;
    v4 = result;
    v5 = result & 1;
    v6 = *v3;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E988(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *v3 = (char *)result;
    }
    v7 = -v5;
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      result = (uint64_t)sub_1C214E988((char *)(v8 > 1), v9 + 1, 1, v6);
      v10 = v9 + 1;
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v10;
    *(_QWORD *)&v6[8 * v9 + 32] = v7 ^ (v4 >> 1);
    *v3 = v6;
LABEL_9:
    *(_BYTE *)(v1 + 32) = 1;
    return result;
  }
  result = sub_1C20ACC78();
  if (v2)
    return result;
  v11 = *(_QWORD *)(v1 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  v12 = result;
  v13 = v11 >= result;
  v14 = v11 - result;
  if (!v13)
  {
    sub_1C2108014();
    swift_allocError();
    *v15 = 1;
    return swift_willThrow();
  }
  v16 = *(char **)v1;
  *(_QWORD *)v1 += result;
  *(_QWORD *)(v1 + 8) = v14;
  if (result >= 1)
  {
    v17 = 0;
    v18 = v16;
    v19 = result;
    while (1)
    {
      v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1))
        break;
      if (!--v19)
        goto LABEL_22;
    }
    __break(1u);
  }
  v17 = 0;
LABEL_22:
  v22 = *v3;
  v23 = *((_QWORD *)*v3 + 2);
  v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_50:
    __break(1u);
    return result;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v3 = v22;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v24 > *((_QWORD *)v22 + 3) >> 1)
  {
    if (v23 <= v24)
      v26 = v24;
    else
      v26 = v23;
    v22 = sub_1C214E988(isUniquelyReferenced_nonNull_native, v26, 0, v22);
  }
  *v3 = v22;
  sub_1C20ACD54(v1, (uint64_t)v47);
  v27 = v48[7];
  v28 = v49;
  sub_1C20ACEA4((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1ED7DFE00);
  *(_WORD *)v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  v44 = xmmword_1C2177160;
  v45 = xmmword_1C2177160;
  *(_QWORD *)&v40 = v16;
  *((_QWORD *)&v40 + 1) = v12;
  sub_1C20AC454((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v42 + 1) = v27;
  LOBYTE(v43) = v28;
  *((_QWORD *)&v43 + 1) = v27;
  v53 = v44;
  v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v40;
  v51[1] = (unint64_t)v16;
  v51[6] = v42;
  v52 = v43;
  v29 = v50;
  sub_1C20ACEE8((uint64_t)v47);
  *((_QWORD *)&v52 + 1) = v29;
  v30 = *((_QWORD *)&v51[0] + 1);
  if (!*((_QWORD *)&v51[0] + 1))
  {
LABEL_44:
    result = sub_1C20ACEE8((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    v35 = 1;
    goto LABEL_46;
  }
  while (1)
  {
    v31 = (char)**(_BYTE **)&v51[0];
    v32 = v31;
    --v30;
    if (v31 < 0)
      break;
    ++*(_QWORD *)&v51[0];
LABEL_41:
    *((_QWORD *)&v51[0] + 1) = v30;
    *v3 = v22;
    v38 = *((_QWORD *)v22 + 2);
    v37 = *((_QWORD *)v22 + 3);
    if (v38 >= v37 >> 1)
      v22 = sub_1C214E988((char *)(v37 > 1), v38 + 1, 1, v22);
    *((_QWORD *)v22 + 2) = v38 + 1;
    *(_QWORD *)&v22[8 * v38 + 32] = -(uint64_t)(v32 & 1) ^ (v32 >> 1);
    *v3 = v22;
    if (!v30)
      goto LABEL_44;
  }
  if (v30 >= 1)
  {
    v32 &= 0x7Fu;
    v33 = *(_QWORD *)&v51[0] + 2;
    v34 = 7;
    while (1)
    {
      v32 |= (unint64_t)(*(_BYTE *)(v33 - 1) & 0x7F) << v34;
      if ((*(_BYTE *)(v33 - 1) & 0x80) == 0)
        break;
      v35 = 3;
      if ((unint64_t)v30 >= 2)
      {
        ++v33;
        --v30;
        v36 = v34 > 0x38;
        v34 += 7;
        if (!v36)
          continue;
      }
      goto LABEL_46;
    }
    --v30;
    *(_QWORD *)&v51[0] = v33;
    goto LABEL_41;
  }
  v35 = 3;
LABEL_46:
  sub_1C2108014();
  swift_allocError();
  *v39 = v35;
  swift_willThrow();
  return sub_1C20ACEE8((uint64_t)v51);
}

_DWORD *sub_1C2141724(_DWORD *result)
{
  int **v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;

  if (*((_BYTE *)v1 + 33) == 5)
  {
    v2 = (uint64_t)v1[1];
    v3 = v2 < 4;
    v4 = v2 - 4;
    if (v3)
    {
      sub_1C2108014();
      swift_allocError();
      *v5 = 1;
      return (_DWORD *)swift_willThrow();
    }
    else
    {
      v6 = *(*v1)++;
      v1[1] = (int *)v4;
      *result = v6;
      *((_BYTE *)v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C21417DC(uint64_t result)
{
  int **v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;

  if (*((_BYTE *)v1 + 33) == 5)
  {
    v2 = (uint64_t)v1[1];
    v3 = v2 < 4;
    v4 = v2 - 4;
    if (v3)
    {
      sub_1C2108014();
      swift_allocError();
      *v5 = 1;
      return swift_willThrow();
    }
    else
    {
      v6 = *(*v1)++;
      v1[1] = (int *)v4;
      *(_DWORD *)result = v6;
      *(_BYTE *)(result + 4) = 0;
      *((_BYTE *)v1 + 32) = 1;
    }
  }
  return result;
}

unint64_t sub_1C2141898(unint64_t result, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  _BYTE *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  __int128 v42;
  _BYTE v43[64];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[40];
  _BYTE v49[48];
  _QWORD v50[8];
  char v51;
  uint64_t v52;
  _OWORD v53[7];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v5 = (uint64_t *)result;
  v57 = *MEMORY[0x1E0C80C00];
  v6 = *(unsigned __int8 *)(v2 + 33);
  if (v6 != 2)
  {
    if (v6 != 5)
      return result;
    v7 = *(_QWORD *)(v2 + 8);
    if (v7 > 3)
    {
      v8 = **(_DWORD **)v2;
      *(_QWORD *)v2 += 4;
      *(_QWORD *)(v2 + 8) = v7 - 4;
      v9 = *(_QWORD *)result;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v5 = v9;
      if ((result & 1) == 0)
      {
        result = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, unint64_t))a2)(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
        v9 = result;
        *v5 = result;
      }
      v11 = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, unint64_t))a2)(v10 > 1, v11 + 1, 1, v9);
        v9 = result;
      }
      *(_QWORD *)(v9 + 16) = v11 + 1;
      *(_DWORD *)(v9 + 4 * v11 + 32) = v8;
      *v5 = v9;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  result = sub_1C20ACC78();
  if (v3)
    return result;
  v12 = *(_QWORD *)(v2 + 8);
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v13 = result;
  v14 = v12 >= result;
  v15 = v12 - result;
  if (v14)
  {
    v41 = a2;
    v17 = *(int **)v2;
    *(_QWORD *)v2 += result;
    *(_QWORD *)(v2 + 8) = v15;
    v18 = *v5;
    v19 = *(_QWORD *)(*v5 + 16);
    v20 = v19 + (result >> 2);
    if (!__OFADD__(v19, result >> 2))
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v5 = v18;
      if (!isUniquelyReferenced_nonNull_native || v20 > *(_QWORD *)(v18 + 24) >> 1)
        v18 = v41();
      *v5 = v18;
      sub_1C20ACD54(v2, (uint64_t)v49);
      v22 = v50[7];
      v23 = v51;
      sub_1C20ACEA4((uint64_t)v50, (uint64_t)v48, (uint64_t *)&unk_1ED7DFE00);
      *(_WORD *)v43 = 1;
      memset(&v43[8], 0, 56);
      LOBYTE(v44) = 1;
      v46 = xmmword_1C2177160;
      v47 = xmmword_1C2177160;
      *(_QWORD *)&v42 = v17;
      *((_QWORD *)&v42 + 1) = v13;
      sub_1C20AC454((uint64_t)v48, (uint64_t)&v43[16], (uint64_t *)&unk_1ED7DFE00);
      *((_QWORD *)&v44 + 1) = v22;
      LOBYTE(v45) = v23;
      *((_QWORD *)&v45 + 1) = v22;
      v55 = v46;
      v56 = v47;
      v53[2] = *(_OWORD *)v43;
      v53[3] = *(_OWORD *)&v43[16];
      v53[4] = *(_OWORD *)&v43[32];
      v53[5] = *(_OWORD *)&v43[48];
      v53[0] = v42;
      v53[1] = (unint64_t)v17;
      v53[6] = v44;
      v54 = v45;
      v24 = v52;
      sub_1C20ACEE8((uint64_t)v49);
      *((_QWORD *)&v54 + 1) = v24;
      v25 = *((_QWORD *)&v53[0] + 1);
      if (*((_QWORD *)&v53[0] + 1))
      {
        v26 = *((_QWORD *)&v53[0] + 1) - 4;
        if (*((uint64_t *)&v53[0] + 1) < 4)
        {
LABEL_29:
          sub_1C2108014();
          swift_allocError();
          *v37 = 1;
          swift_willThrow();
          return sub_1C20ACEE8((uint64_t)v53);
        }
        v27 = 0;
        v28 = *(_QWORD *)&v53[0];
        v29 = *(_QWORD *)(v18 + 16);
        v30 = 4 * v29 + 32;
        v31 = *((_QWORD *)&v53[0] + 1) + 4;
        while (1)
        {
          v32 = *(_DWORD *)(v28 + v27);
          v33 = *(_QWORD *)(v18 + 24);
          if (v29 >= v33 >> 1)
          {
            v34 = v18;
            v39 = v25;
            v40 = v28;
            v35 = v26;
            v38 = v30;
            v36 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v41)(v33 > 1, v29 + 1, 1, v34);
            v30 = v38;
            v25 = v39;
            v26 = v35;
            v28 = v40;
            v18 = v36;
          }
          *(_QWORD *)(v18 + 16) = v29 + 1;
          *(_DWORD *)(v18 + v30 + v27) = v32;
          if (v26 == v27)
            break;
          v27 += 4;
          v31 -= 4;
          ++v29;
          if (v31 <= 7)
          {
            *v5 = v18;
            *(_QWORD *)&v53[0] = v28 + v27;
            *((_QWORD *)&v53[0] + 1) = v25 - v27;
            goto LABEL_29;
          }
        }
        *v5 = v18;
        v53[0] = (unint64_t)(v28 + v27 + 4);
      }
      result = sub_1C20ACEE8((uint64_t)v53);
LABEL_9:
      *(_BYTE *)(v2 + 32) = 1;
      return result;
    }
LABEL_31:
    __break(1u);
  }
LABEL_13:
  sub_1C2108014();
  swift_allocError();
  *v16 = 1;
  return swift_willThrow();
}

_QWORD *sub_1C2141C60(_QWORD *result)
{
  uint64_t **v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  if (*((_BYTE *)v1 + 33) == 1)
  {
    v2 = (uint64_t)v1[1];
    v3 = v2 < 8;
    v4 = v2 - 8;
    if (v3)
    {
      sub_1C2108014();
      swift_allocError();
      *v5 = 1;
      return (_QWORD *)swift_willThrow();
    }
    else
    {
      v6 = *(*v1)++;
      v1[1] = (uint64_t *)v4;
      *result = v6;
      *((_BYTE *)v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C2141D18(uint64_t result)
{
  uint64_t **v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  if (*((_BYTE *)v1 + 33) == 1)
  {
    v2 = (uint64_t)v1[1];
    v3 = v2 < 8;
    v4 = v2 - 8;
    if (v3)
    {
      sub_1C2108014();
      swift_allocError();
      *v5 = 1;
      return swift_willThrow();
    }
    else
    {
      v6 = *(*v1)++;
      v1[1] = (uint64_t *)v4;
      *(_QWORD *)result = v6;
      *(_BYTE *)(result + 8) = 0;
      *((_BYTE *)v1 + 32) = 1;
    }
  }
  return result;
}

unint64_t sub_1C2141DD4(unint64_t result, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  _BYTE *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  __int128 v42;
  _BYTE v43[64];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[40];
  _BYTE v49[48];
  _QWORD v50[8];
  char v51;
  uint64_t v52;
  _OWORD v53[7];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v5 = (uint64_t *)result;
  v57 = *MEMORY[0x1E0C80C00];
  v6 = *(unsigned __int8 *)(v2 + 33);
  if (v6 != 2)
  {
    if (v6 != 1)
      return result;
    v7 = *(_QWORD *)(v2 + 8);
    if (v7 > 7)
    {
      v8 = **(_QWORD **)v2;
      *(_QWORD *)v2 += 8;
      *(_QWORD *)(v2 + 8) = v7 - 8;
      v9 = *(_QWORD *)result;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v5 = v9;
      if ((result & 1) == 0)
      {
        result = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, unint64_t))a2)(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
        v9 = result;
        *v5 = result;
      }
      v11 = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, unint64_t))a2)(v10 > 1, v11 + 1, 1, v9);
        v9 = result;
      }
      *(_QWORD *)(v9 + 16) = v11 + 1;
      *(_QWORD *)(v9 + 8 * v11 + 32) = v8;
      *v5 = v9;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  result = sub_1C20ACC78();
  if (v3)
    return result;
  v12 = *(_QWORD *)(v2 + 8);
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v13 = result;
  v14 = v12 >= result;
  v15 = v12 - result;
  if (v14)
  {
    v41 = a2;
    v17 = *(uint64_t **)v2;
    *(_QWORD *)v2 += result;
    *(_QWORD *)(v2 + 8) = v15;
    v18 = *v5;
    v19 = *(_QWORD *)(*v5 + 16);
    v20 = v19 + (result >> 3);
    if (!__OFADD__(v19, result >> 3))
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v5 = v18;
      if (!isUniquelyReferenced_nonNull_native || v20 > *(_QWORD *)(v18 + 24) >> 1)
        v18 = v41();
      *v5 = v18;
      sub_1C20ACD54(v2, (uint64_t)v49);
      v22 = v50[7];
      v23 = v51;
      sub_1C20ACEA4((uint64_t)v50, (uint64_t)v48, (uint64_t *)&unk_1ED7DFE00);
      *(_WORD *)v43 = 1;
      memset(&v43[8], 0, 56);
      LOBYTE(v44) = 1;
      v46 = xmmword_1C2177160;
      v47 = xmmword_1C2177160;
      *(_QWORD *)&v42 = v17;
      *((_QWORD *)&v42 + 1) = v13;
      sub_1C20AC454((uint64_t)v48, (uint64_t)&v43[16], (uint64_t *)&unk_1ED7DFE00);
      *((_QWORD *)&v44 + 1) = v22;
      LOBYTE(v45) = v23;
      *((_QWORD *)&v45 + 1) = v22;
      v55 = v46;
      v56 = v47;
      v53[2] = *(_OWORD *)v43;
      v53[3] = *(_OWORD *)&v43[16];
      v53[4] = *(_OWORD *)&v43[32];
      v53[5] = *(_OWORD *)&v43[48];
      v53[0] = v42;
      v53[1] = (unint64_t)v17;
      v53[6] = v44;
      v54 = v45;
      v24 = v52;
      sub_1C20ACEE8((uint64_t)v49);
      *((_QWORD *)&v54 + 1) = v24;
      v25 = *((_QWORD *)&v53[0] + 1);
      if (*((_QWORD *)&v53[0] + 1))
      {
        v26 = *((_QWORD *)&v53[0] + 1) - 8;
        if (*((uint64_t *)&v53[0] + 1) < 8)
        {
LABEL_29:
          sub_1C2108014();
          swift_allocError();
          *v37 = 1;
          swift_willThrow();
          return sub_1C20ACEE8((uint64_t)v53);
        }
        v27 = 0;
        v28 = *(_QWORD *)&v53[0];
        v29 = *(_QWORD *)(v18 + 16);
        v30 = 8 * v29 + 32;
        v31 = *((_QWORD *)&v53[0] + 1) + 8;
        while (1)
        {
          v32 = *(_QWORD *)(v28 + v27);
          v33 = *(_QWORD *)(v18 + 24);
          if (v29 >= v33 >> 1)
          {
            v34 = v18;
            v39 = v25;
            v40 = v28;
            v35 = v26;
            v38 = v30;
            v36 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v41)(v33 > 1, v29 + 1, 1, v34);
            v30 = v38;
            v25 = v39;
            v26 = v35;
            v28 = v40;
            v18 = v36;
          }
          *(_QWORD *)(v18 + 16) = v29 + 1;
          *(_QWORD *)(v18 + v30 + v27) = v32;
          if (v26 == v27)
            break;
          v27 += 8;
          v31 -= 8;
          ++v29;
          if (v31 <= 0xF)
          {
            *v5 = v18;
            *(_QWORD *)&v53[0] = v28 + v27;
            *((_QWORD *)&v53[0] + 1) = v25 - v27;
            goto LABEL_29;
          }
        }
        *v5 = v18;
        v53[0] = (unint64_t)(v28 + v27 + 8);
      }
      result = sub_1C20ACEE8((uint64_t)v53);
LABEL_9:
      *(_BYTE *)(v2 + 32) = 1;
      return result;
    }
LABEL_31:
    __break(1u);
  }
LABEL_13:
  sub_1C2108014();
  swift_allocError();
  *v16 = 1;
  return swift_willThrow();
}

uint64_t sub_1C214219C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char **v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  char *v20;
  int64_t v21;
  int64_t v22;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  __int128 v38;
  _BYTE v39[64];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[40];
  _BYTE v45[48];
  _QWORD v46[8];
  char v47;
  uint64_t v48;
  _OWORD v49[7];
  __int128 v50;
  __int128 v51;
  __int128 v52;

  v3 = (char **)result;
  if (*(_BYTE *)(v1 + 33) != 2)
  {
    if (*(_BYTE *)(v1 + 33))
      return result;
    result = sub_1C20ACC78();
    if (v2)
      return result;
    v4 = result;
    v5 = *v3;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v5;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E69C(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      v5 = (char *)result;
      *v3 = (char *)result;
    }
    v7 = *((_QWORD *)v5 + 2);
    v6 = *((_QWORD *)v5 + 3);
    v8 = v7 + 1;
    if (v7 >= v6 >> 1)
    {
      result = (uint64_t)sub_1C214E69C((char *)(v6 > 1), v7 + 1, 1, v5);
      v8 = v7 + 1;
      v5 = (char *)result;
    }
    *((_QWORD *)v5 + 2) = v8;
    v5[v7 + 32] = v4 != 0;
    *v3 = v5;
LABEL_9:
    *(_BYTE *)(v1 + 32) = 1;
    return result;
  }
  result = sub_1C20ACC78();
  if (v2)
    return result;
  v9 = *(_QWORD *)(v1 + 8);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  v10 = result;
  v11 = v9 >= result;
  v12 = v9 - result;
  if (!v11)
  {
    sub_1C2108014();
    swift_allocError();
    *v13 = 1;
    return swift_willThrow();
  }
  v14 = *(char **)v1;
  *(_QWORD *)v1 += result;
  *(_QWORD *)(v1 + 8) = v12;
  if (result >= 1)
  {
    v15 = 0;
    v16 = v14;
    v17 = result;
    while (1)
    {
      v18 = *v16++;
      if ((v18 & 0x80000000) == 0 && __OFADD__(v15++, 1))
        break;
      if (!--v17)
        goto LABEL_22;
    }
    __break(1u);
  }
  v15 = 0;
LABEL_22:
  v20 = *v3;
  v21 = *((_QWORD *)*v3 + 2);
  v22 = v21 + v15;
  if (__OFADD__(v21, v15))
  {
LABEL_50:
    __break(1u);
    return result;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v3 = v20;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v22 > *((_QWORD *)v20 + 3) >> 1)
  {
    if (v21 <= v22)
      v24 = v22;
    else
      v24 = v21;
    v20 = sub_1C214E69C(isUniquelyReferenced_nonNull_native, v24, 0, v20);
  }
  *v3 = v20;
  sub_1C20ACD54(v1, (uint64_t)v45);
  v25 = v46[7];
  v26 = v47;
  sub_1C20ACEA4((uint64_t)v46, (uint64_t)v44, (uint64_t *)&unk_1ED7DFE00);
  *(_WORD *)v39 = 1;
  memset(&v39[8], 0, 56);
  LOBYTE(v40) = 1;
  v42 = xmmword_1C2177160;
  v43 = xmmword_1C2177160;
  *(_QWORD *)&v38 = v14;
  *((_QWORD *)&v38 + 1) = v10;
  sub_1C20AC454((uint64_t)v44, (uint64_t)&v39[16], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v40 + 1) = v25;
  LOBYTE(v41) = v26;
  *((_QWORD *)&v41 + 1) = v25;
  v51 = v42;
  v52 = v43;
  v49[2] = *(_OWORD *)v39;
  v49[3] = *(_OWORD *)&v39[16];
  v49[4] = *(_OWORD *)&v39[32];
  v49[5] = *(_OWORD *)&v39[48];
  v49[0] = v38;
  v49[1] = (unint64_t)v14;
  v49[6] = v40;
  v50 = v41;
  v27 = v48;
  sub_1C20ACEE8((uint64_t)v45);
  *((_QWORD *)&v50 + 1) = v27;
  v28 = *((_QWORD *)&v49[0] + 1);
  if (!*((_QWORD *)&v49[0] + 1))
  {
LABEL_44:
    result = sub_1C20ACEE8((uint64_t)v49);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v49[0] + 1) < 1)
  {
    v33 = 1;
    goto LABEL_46;
  }
  while (1)
  {
    v29 = (char)**(_BYTE **)&v49[0];
    v30 = v29;
    --v28;
    if (v29 < 0)
      break;
    ++*(_QWORD *)&v49[0];
LABEL_41:
    *((_QWORD *)&v49[0] + 1) = v28;
    *v3 = v20;
    v36 = *((_QWORD *)v20 + 2);
    v35 = *((_QWORD *)v20 + 3);
    if (v36 >= v35 >> 1)
      v20 = sub_1C214E69C((char *)(v35 > 1), v36 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v36 + 1;
    v20[v36 + 32] = v30 != 0;
    *v3 = v20;
    if (!v28)
      goto LABEL_44;
  }
  if (v28 >= 1)
  {
    v30 &= 0x7Fu;
    v31 = *(_QWORD *)&v49[0] + 2;
    v32 = 7;
    while (1)
    {
      v30 |= (unint64_t)(*(_BYTE *)(v31 - 1) & 0x7F) << v32;
      if ((*(_BYTE *)(v31 - 1) & 0x80) == 0)
        break;
      v33 = 3;
      if ((unint64_t)v28 >= 2)
      {
        ++v31;
        --v28;
        v34 = v32 > 0x38;
        v32 += 7;
        if (!v34)
          continue;
      }
      goto LABEL_46;
    }
    --v28;
    *(_QWORD *)&v49[0] = v31;
    goto LABEL_41;
  }
  v33 = 3;
LABEL_46:
  sub_1C2108014();
  swift_allocError();
  *v37 = v33;
  swift_willThrow();
  return sub_1C20ACEE8((uint64_t)v49);
}

unint64_t sub_1C214258C(unint64_t result, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;

  if (*(_BYTE *)(v2 + 33) == 2)
  {
    v5 = (_QWORD *)result;
    result = sub_1C20ACC78();
    if (!v3)
    {
      v6 = *(_QWORD *)(v2 + 8);
      if ((v6 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v7 = result;
        v8 = v6 >= result;
        v9 = v6 - result;
        if (v8)
        {
          v11 = *(_BYTE **)v2;
          *(_QWORD *)v2 += result;
          *(_QWORD *)(v2 + 8) = v9;
          a2(*v5, v5[1]);
          result = sub_1C2127830(v11, v7);
          *v5 = result;
          v5[1] = v12;
          *(_BYTE *)(v2 + 32) = 1;
        }
        else
        {
          sub_1C2108014();
          swift_allocError();
          *v10 = 1;
          return swift_willThrow();
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C2142658(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;

  if (*(_BYTE *)(v1 + 33) != 2)
    return result;
  v6 = (unint64_t *)result;
  result = sub_1C20ACC78();
  if (v2)
    return result;
  v7 = *(_QWORD *)(v1 + 8);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = v7 >= result;
    v10 = v7 - result;
    if (!v9)
    {
      sub_1C2108014();
      swift_allocError();
      *v11 = 1;
      return swift_willThrow();
    }
    v12 = *(_BYTE **)v1;
    *(_QWORD *)v1 += v8;
    *(_QWORD *)(v1 + 8) = v10;
    v3 = sub_1C2127830(v12, v8);
    v4 = v13;
    v5 = *v6;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v6 = v5;
    if ((result & 1) != 0)
      goto LABEL_7;
  }
  result = (unint64_t)sub_1C214E784(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
  v5 = result;
  *v6 = result;
LABEL_7:
  v14 = *(_QWORD *)(v5 + 16);
  v15 = *(_QWORD *)(v5 + 24);
  v16 = v14 + 1;
  if (v14 >= v15 >> 1)
  {
    v20 = v14 + 1;
    v18 = (char *)v5;
    v19 = *(_QWORD *)(v5 + 16);
    result = (unint64_t)sub_1C214E784((char *)(v15 > 1), v14 + 1, 1, v18);
    v14 = v19;
    v16 = v20;
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v16;
  v17 = v5 + 16 * v14;
  *(_QWORD *)(v17 + 32) = v3;
  *(_QWORD *)(v17 + 40) = v4;
  *v6 = v5;
  *(_BYTE *)(v1 + 32) = 1;
  return result;
}

uint64_t sub_1C214279C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t (*v20)(char *, uint64_t);
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v8 = sub_1C2175690();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v23 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  result = MEMORY[0x1E0C80A78](v11, v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)(v3 + 33))
  {
    v25 = result;
    v24 = a1;
    result = sub_1C20ACC78();
    if (!v4)
    {
      v23 = 0;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(a3 + 32))((int)result, a2, a3);
      v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a2);
      v20 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      if (v19 == 1)
      {
        return v20(v13, v25);
      }
      else
      {
        v21 = v24;
        v20(v24, v25);
        v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v22(v18, v13, a2);
        v22(v21, v18, a2);
        result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, a2);
        *(_BYTE *)(v3 + 32) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C2142914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_1C2175690();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v15 - v12;
  if (!*(_BYTE *)(v3 + 33))
  {
    result = sub_1C20ACC78();
    if (!v4)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t))(a3 + 32))((int)result, a2, a3);
      v14 = *(_QWORD *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a2) == 1)
      {
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a2);
        result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v13, a2);
        *(_BYTE *)(v3 + 32) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C2142A34(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  BOOL v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  __int128 v86;
  __int128 v87;
  _OWORD v88[4];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _BYTE v93[40];
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[8];
  char v97;
  uint64_t v98;
  _OWORD v99[7];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v84 = a3;
  v85 = a1;
  v5 = sub_1C2175690();
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v7, v10);
  v13 = (char *)&v79 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  v16 = MEMORY[0x1E0C80A78](v11, v15);
  v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v16, v19);
  v22 = (char *)&v79 - v21;
  result = MEMORY[0x1E0C80A78](v20, v23);
  v27 = (char *)&v79 - v26;
  if (*(_BYTE *)(v3 + 33) != 2)
  {
    if (!*(_BYTE *)(v3 + 33))
    {
      v28 = v25;
      v29 = result;
      v30 = v103;
      result = sub_1C20ACC78();
      if (!v30)
      {
        v103 = 0;
        v83 = v3;
        (*(void (**)(_QWORD, uint64_t))(v84 + 32))((int)result, a2);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a2) == 1)
        {
          return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v29);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v27, v13, a2);
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v27, a2);
          sub_1C21755F4();
          sub_1C21755DC();
          result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v27, a2);
          *(_BYTE *)(v83 + 32) = 1;
        }
      }
    }
    return result;
  }
  v80 = v22;
  v81 = v25;
  v82 = result;
  v31 = v103;
  result = sub_1C20ACC78();
  v103 = v31;
  if (v31)
    return swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v3 + 8);
  if ((v32 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v33 = result;
  v34 = v32 >= result;
  v35 = v32 - result;
  v36 = v85;
  if (!v34)
  {
    sub_1C2108014();
    v37 = swift_allocError();
    *v38 = 1;
    v103 = v37;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  v39 = *(char **)v3;
  *(_QWORD *)v3 += result;
  *(_QWORD *)(v3 + 8) = v35;
  v83 = v3;
  if (result >= 1)
  {
    v40 = 0;
    v41 = v39;
    v42 = result;
    while (1)
    {
      v43 = *v41++;
      if ((v43 & 0x80000000) == 0)
      {
        v44 = __OFADD__(v40++, 1);
        if (v44)
          break;
      }
      if (!--v42)
        goto LABEL_21;
    }
    __break(1u);
  }
  v40 = 0;
LABEL_21:
  result = MEMORY[0x1C3BB7A48](*v36, a2);
  if (__OFADD__(result, v40))
    goto LABEL_88;
  v79 = sub_1C21755F4();
  sub_1C21755A0();
  sub_1C20ACD54(v83, (uint64_t)&v94);
  v45 = v96[7];
  v46 = v97;
  sub_1C20ACEA4((uint64_t)v96, (uint64_t)v93, (uint64_t *)&unk_1ED7DFE00);
  LOWORD(v88[0]) = 1;
  *(_OWORD *)((char *)v88 + 8) = 0u;
  *(_OWORD *)((char *)&v88[1] + 8) = 0u;
  *(_OWORD *)((char *)&v88[2] + 8) = 0u;
  *((_QWORD *)&v88[3] + 1) = 0;
  LOBYTE(v89) = 1;
  v91 = xmmword_1C2177160;
  v92 = xmmword_1C2177160;
  *(_QWORD *)&v86 = v39;
  *((_QWORD *)&v86 + 1) = v33;
  v87 = (unint64_t)v39;
  sub_1C20AC454((uint64_t)v93, (uint64_t)&v88[1], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v89 + 1) = v45;
  LOBYTE(v90) = v46;
  *((_QWORD *)&v90 + 1) = v45;
  v101 = v91;
  v102 = v92;
  v99[2] = v88[0];
  v99[3] = v88[1];
  v99[4] = v88[2];
  v99[5] = v88[3];
  v99[0] = v86;
  v99[1] = v87;
  v99[6] = v89;
  v100 = v90;
  v47 = v98;
  sub_1C20ACEE8((uint64_t)&v94);
  *((_QWORD *)&v100 + 1) = v47;
  v48 = *((_QWORD *)&v99[0] + 1);
  if (!*((_QWORD *)&v99[0] + 1))
  {
LABEL_67:
    sub_1C20ACEE8((uint64_t)v99);
    v71 = v83;
    goto LABEL_68;
  }
  if (*((uint64_t *)&v99[0] + 1) >= 1)
  {
    v49 = 0;
    while (1)
    {
      v50 = (char)**(_BYTE **)&v99[0];
      LODWORD(v51) = v50;
      v52 = v48 - 1;
      if (v50 < 0)
      {
        if (!v52)
        {
          v55 = 3;
          goto LABEL_48;
        }
        v51 &= 0x7Fu;
        v53 = *(_QWORD *)&v99[0] + 2;
        v54 = 7;
        while (1)
        {
          v51 |= (unint64_t)(*(_BYTE *)(v53 - 1) & 0x7F) << v54;
          if ((*(_BYTE *)(v53 - 1) & 0x80) == 0)
            break;
          v55 = 3;
          if (v52 >= 2)
          {
            ++v53;
            --v52;
            v56 = v54 > 0x38;
            v54 += 7;
            if (!v56)
              continue;
          }
          goto LABEL_48;
        }
        --v52;
        *(_QWORD *)&v99[0] = v53;
      }
      else
      {
        ++*(_QWORD *)&v99[0];
      }
      *((_QWORD *)&v99[0] + 1) = v52;
      (*(void (**)(_QWORD, uint64_t))(v84 + 32))((int)v51, a2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, a2) == 1)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v9, v82);
        if ((*(_BYTE *)(v83 + 112) & 1) == 0)
        {
          if (!v49)
            v49 = MEMORY[0x1E0DEE9D8];
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C214E97C(0, *(_QWORD *)(v49 + 16) + 1, 1, (char *)v49);
            v49 = result;
          }
          v57 = v49;
          v58 = *(_QWORD *)(v49 + 16);
          v59 = v57;
          v60 = *(_QWORD *)(v57 + 24);
          if (v58 >= v60 >> 1)
          {
            result = (uint64_t)sub_1C214E97C((char *)(v60 > 1), v58 + 1, 1, (char *)v59);
            v59 = result;
          }
          *(_QWORD *)(v59 + 16) = v58 + 1;
          v61 = v59 + 4 * v58;
          v49 = v59;
          *(_DWORD *)(v61 + 32) = v51;
        }
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v9, a2);
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v80, v18, a2);
        sub_1C21755DC();
        result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, a2);
      }
      v48 = *((_QWORD *)&v99[0] + 1);
      if (!*((_QWORD *)&v99[0] + 1))
        break;
      if (*((uint64_t *)&v99[0] + 1) < 1)
        goto LABEL_47;
    }
    if (!v49)
      goto LABEL_67;
    v63 = 8 * *(_DWORD *)(v83 + 40);
    *(_QWORD *)&v86 = 0;
    v64 = *(_QWORD *)(v49 + 16);
    if (v64)
    {
      v65 = 0;
      v66 = (unsigned int *)(v49 + 32);
      while (1)
      {
        v68 = *v66++;
        v67 = v68;
        if (v68 >= 0x80)
        {
          if ((v67 & 0x80000000) != 0)
          {
            v69 = 10;
          }
          else if (v67 >> 21)
          {
            v69 = v67 >> 28 ? 5 : 4;
          }
          else
          {
            v69 = v67 >= 0x4000 ? 3 : 2;
          }
        }
        else
        {
          v69 = 1;
        }
        v44 = __OFADD__(v65, v69);
        v65 += v69;
        if (v44)
          goto LABEL_89;
        if (!--v64)
        {
          *(_QWORD *)&v86 = v65;
          if (v63 < 0x80)
          {
            v70 = 1;
            goto LABEL_84;
          }
          if (!(v63 >> 14))
            goto LABEL_77;
          if (v63 < 0x200000)
          {
            v70 = 3;
            goto LABEL_84;
          }
          if (v63 >> 28)
            goto LABEL_83;
          goto LABEL_81;
        }
      }
    }
    if (v63 >= 0x80)
    {
      if (v63 >= 0x4000)
      {
        if (v63 >= 0x200000)
        {
          v65 = 0;
          if (v63 >> 28)
LABEL_83:
            v70 = 5;
          else
LABEL_81:
            v70 = 4;
        }
        else
        {
          v65 = 0;
          v70 = 3;
        }
      }
      else
      {
        v65 = 0;
LABEL_77:
        v70 = 2;
      }
    }
    else
    {
      v65 = 0;
      v70 = 1;
    }
LABEL_84:
    result = sub_1C20AB8F0(v65);
    v72 = v70 + result;
    if (__OFADD__(v70, result))
      goto LABEL_90;
    v73 = v72 + v65;
    if (__OFADD__(v72, v65))
    {
LABEL_91:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v94 = sub_1C20A8B0C(v73);
    v95 = v74;
    v75 = v103;
    sub_1C21467D8((uint64_t)&v94);
    v103 = v75;
    sub_1C20ACEE8((uint64_t)v99);
    v76 = v94;
    v77 = v95;
    v78 = v83;
    sub_1C20AE1C8(*(_QWORD *)(v83 + 144), *(_QWORD *)(v83 + 152));
    *(_QWORD *)(v78 + 144) = v76;
    *(_QWORD *)(v78 + 152) = v77;
    v71 = v78;
LABEL_68:
    *(_BYTE *)(v71 + 32) = 1;
    return swift_bridgeObjectRelease();
  }
LABEL_47:
  v55 = 1;
LABEL_48:
  sub_1C2108014();
  swift_allocError();
  *v62 = v55;
  swift_willThrow();
  sub_1C20ACEE8((uint64_t)v99);
  return swift_bridgeObjectRelease();
}

_BYTE *sub_1C21431B4(_BYTE *result, uint64_t a2, unsigned int a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if (result && a2 - (uint64_t)result >= 1)
  {
    v5 = a3;
    if (a3 < 0x80)
    {
      LOBYTE(v6) = a3;
    }
    else
    {
      do
      {
        *result++ = v5 | 0x80;
        v6 = v5 >> 7;
        v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
    }
    *result++ = v6;
    v8 = *a4;
    if (*a4 < 0x80)
    {
      v9 = *a4;
    }
    else
    {
      do
      {
        *result++ = v8 | 0x80;
        v9 = v8 >> 7;
        v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
    }
    *result = v9;
    v11 = *(_QWORD *)(a5 + 16);
    if (v11)
    {
      for (i = 0; i != v11; ++i)
      {
        ++result;
        v14 = *(int *)(a5 + 32 + 4 * i);
        if (v14 < 0x80)
        {
          LODWORD(v13) = *(_DWORD *)(a5 + 32 + 4 * i);
        }
        else
        {
          do
          {
            *result++ = v14 | 0x80;
            v13 = v14 >> 7;
            v15 = v14 >> 14;
            v14 >>= 7;
          }
          while (v15);
        }
        *result = v13;
      }
    }
  }
  return result;
}

uint64_t sub_1C214327C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v8 = sub_1C2175690();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v23 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v11, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v24 = a1;
  v18(v13, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a2) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, a2);
  }
  v19 = v25;
  v20 = sub_1C214342C((uint64_t)v17, *(_QWORD *)(v4 + 40), a2, a3);
  if (v19 || (v20 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, a2);
  v21 = v24;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v21, v17, a2);
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, a2);
  *(_BYTE *)(v4 + 32) = 1;
  return result;
}

uint64_t sub_1C214342C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, uint64_t, uint64_t);
  void (*v14)(_BYTE *, _QWORD);
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  _BYTE v24[32];
  _BYTE v25[8];
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;

  if (*(_BYTE *)(v4 + 33) != 3)
  {
    v20 = 0;
    return v20 & 1;
  }
  v6 = *(_QWORD *)(v4 + 120);
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v4 + 120) = v7;
  if (v7 < 0)
  {
    sub_1C2108014();
    swift_allocError();
    *v21 = 6;
    swift_willThrow();
    return v20 & 1;
  }
  sub_1C20ACD54(v4, (uint64_t)v25);
  v30 = a2;
  v31 = 0;
  v27 = 1;
  (*(void (**)(_BYTE *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 64))(v25, &type metadata for BinaryDecoder, &off_1E7BDFED8, a3, a4);
  if (v5)
  {
LABEL_17:
    sub_1C20ACEE8((uint64_t)v25);
    return v20 & 1;
  }
  if (v29 != a2 || v28 != 4)
  {
    sub_1C2108014();
    swift_allocError();
    *v22 = 1;
    swift_willThrow();
    goto LABEL_17;
  }
  v11 = v33;
  if (v33 >> 60 != 15)
  {
    v12 = v32;
    v13 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 56);
    sub_1C20A8008(v32, v33);
    v14 = (void (*)(_BYTE *, _QWORD))v13(v24, a3, a4);
    sub_1C2175360();
    v14(v24, 0);
    sub_1C20AE1C8(v12, v11);
  }
  v15 = *(_QWORD *)(v4 + 8);
  v16 = v15 - v26;
  if (__OFSUB__(v15, v26))
    goto LABEL_20;
  v17 = __OFSUB__(v15, v16);
  v18 = v26;
  if (v17)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(_QWORD *)v4 += v16;
  *(_QWORD *)(v4 + 8) = v18;
  v19 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_QWORD *)(v4 + 120) = v19;
  if (*(_QWORD *)(v4 + 104) >= v19)
  {
    sub_1C20ACEE8((uint64_t)v25);
    v20 = 1;
    return v20 & 1;
  }
LABEL_23:
  result = sub_1C2175774();
  __break(1u);
  return result;
}

uint64_t sub_1C214368C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  _QWORD v18[2];

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)v18 - v12;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
  v16 = sub_1C214342C((uint64_t)v13, *(_QWORD *)(v3 + 40), a2, a3);
  if (v4 || (v16 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a2);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, a2);
  sub_1C21755F4();
  sub_1C21755DC();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a2);
  *(_BYTE *)(v3 + 32) = 1;
  return result;
}

unint64_t sub_1C21437C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t result;
  void (*v32)(void);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  BOOL v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unint64_t v53;
  unint64_t v54;
  unsigned int v55;
  BOOL v56;
  unint64_t v57;
  char *v58;
  void (*v59)(char *, __int128 *, ValueMetadata *, _UNKNOWN **);
  uint64_t v60;
  int64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  unint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  char *v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  _OWORD v99[4];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _BYTE v104[40];
  _BYTE v105[48];
  _QWORD v106[8];
  char v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;

  v87 = a1;
  v93 = *(_QWORD *)(a4 + 8);
  v94 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v96 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v9);
  v10 = *(_QWORD *)(a5 + 8);
  v89 = (char *)&v78 - v11;
  v90 = v10;
  v91 = a3;
  v12 = swift_getAssociatedTypeWitness();
  v95 = sub_1C2175690();
  v13 = *(_QWORD *)(v95 - 8);
  v15 = MEMORY[0x1E0C80A78](v95, v14);
  v88 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)&v78 - v19;
  MEMORY[0x1E0C80A78](v18, v21);
  v23 = (char *)&v78 - v22;
  v24 = sub_1C2175690();
  v25 = *(_QWORD *)(v24 - 8);
  v27 = MEMORY[0x1E0C80A78](v24, v26);
  MEMORY[0x1E0C80A78](v27, v28);
  result = (unint64_t)&v78 - v29;
  if (*(_BYTE *)(v5 + 33) != 2)
    return result;
  v83 = v20;
  v84 = v30;
  v85 = v13;
  v86 = v25;
  v32 = *(void (**)(void))(v96 + 56);
  v92 = (char *)&v78 - v29;
  v32();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  v34(v23, 1, 1, v12);
  v35 = v119;
  result = sub_1C20ACC78();
  v119 = v35;
  if (v35)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v85 + 8))(v23, v95);
    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v92, v24);
  }
  v80 = v33;
  v81 = v34;
  v82 = v23;
  v36 = *(_QWORD *)(v5 + 8);
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_61:
    __break(1u);
    return result;
  }
  v37 = result;
  v38 = v36 >= result;
  v39 = v36 - result;
  if (!v38)
  {
    sub_1C2108014();
    v40 = swift_allocError();
    *v41 = 1;
    v119 = v40;
    swift_willThrow();
    v23 = v82;
    goto LABEL_6;
  }
  v78 = v5;
  v79 = v24;
  v42 = *(_QWORD *)v5;
  *(_QWORD *)v5 += result;
  *(_QWORD *)(v5 + 8) = v39;
  sub_1C20ACD54(v5, (uint64_t)v105);
  v43 = v106[7];
  v44 = v107;
  sub_1C20ACEA4((uint64_t)v106, (uint64_t)v104, (uint64_t *)&unk_1ED7DFE00);
  LOWORD(v99[0]) = 1;
  *(_OWORD *)((char *)v99 + 8) = 0u;
  *(_OWORD *)((char *)&v99[1] + 8) = 0u;
  *(_OWORD *)((char *)&v99[2] + 8) = 0u;
  *((_QWORD *)&v99[3] + 1) = 0;
  LOBYTE(v100) = 1;
  v102 = xmmword_1C2177160;
  v103 = xmmword_1C2177160;
  *(_QWORD *)&v97 = v42;
  *((_QWORD *)&v97 + 1) = v37;
  v98 = v42;
  sub_1C20AC454((uint64_t)v104, (uint64_t)&v99[1], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v100 + 1) = v43;
  LOBYTE(v101) = v44;
  *((_QWORD *)&v101 + 1) = v43;
  v117 = v102;
  v118 = v103;
  v111 = v99[0];
  v112 = v99[1];
  v113 = v99[2];
  v114 = v99[3];
  v109 = v97;
  v110 = v98;
  v115 = v100;
  v116 = v101;
  v45 = v108;
  result = sub_1C20ACEE8((uint64_t)v105);
  *((_QWORD *)&v116 + 1) = v45;
  v47 = *((_QWORD *)&v109 + 1);
  v46 = (char *)v109;
  v110 = (unint64_t)v109;
  v48 = v86;
  if (*((uint64_t *)&v109 + 1) < 1)
  {
LABEL_43:
    v49 = v79;
    v51 = v95;
    v50 = v96;
    result = v84;
LABEL_44:
    if (v47)
    {
      sub_1C2108014();
      swift_allocError();
      *v67 = 0;
LABEL_50:
      swift_willThrow();
      sub_1C20ACEE8((uint64_t)&v109);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v92, v49);
    }
    else
    {
      v68 = result;
      (*(void (**)(void))(v48 + 16))();
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v50 + 48))(v68, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(void))(v93 + 24))();
        (*(void (**)(unint64_t, uint64_t))(v48 + 8))(v68, v49);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v50 + 32))(v89, v68, AssociatedTypeWitness);
      }
      v70 = v12;
      v71 = v85;
      v72 = v88;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v88, v82, v51);
      v73 = v80;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v72, 1, v70) == 1)
      {
        v74 = v83;
        (*(void (**)(void))(v90 + 24))();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v51);
      }
      else
      {
        v74 = v83;
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v83, v72, v70);
      }
      v81(v74, 0, 1, v70);
      swift_getAssociatedConformanceWitness();
      sub_1C21753E4();
      sub_1C21753FC();
      sub_1C20ACEE8((uint64_t)&v109);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v82, v51);
      result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v92, v79);
      *(_BYTE *)(v78 + 32) = 1;
    }
    return result;
  }
  v49 = v79;
  v51 = v95;
  v50 = v96;
  while (1)
  {
    v52 = (unsigned __int8 *)(v46 + 1);
    v53 = *v46;
    --v47;
    if (*v46 < 0)
    {
      if (!v47)
        goto LABEL_49;
      v53 &= 0x7Fu;
      v52 = (unsigned __int8 *)(v46 + 2);
      v54 = 7;
      while (1)
      {
        v53 |= (unint64_t)(*(v52 - 1) & 0x7F) << v54;
        if ((*(v52 - 1) & 0x80) == 0)
          break;
        if (v47 >= 2)
        {
          ++v52;
          --v47;
          v56 = v54 > 0x38;
          v54 += 7;
          if (!v56)
            continue;
        }
        goto LABEL_49;
      }
      --v47;
      *(_QWORD *)&v109 = v52;
      *((_QWORD *)&v109 + 1) = v47;
      if (v53 >= 0xFFFFFFFF)
        goto LABEL_49;
    }
    else
    {
      *(_QWORD *)&v109 = v46 + 1;
      *((_QWORD *)&v109 + 1) = v47;
    }
    v55 = v53 & 7;
    v56 = v53 < 8 || v55 > 5;
    if (v56)
      goto LABEL_49;
    if (v55 >= 4)
    {
      if (v55 == 4)
      {
        BYTE1(v111) = 4;
        *((_QWORD *)&v111 + 1) = v53 >> 3;
LABEL_49:
        sub_1C2108014();
        swift_allocError();
        *v69 = 3;
        goto LABEL_50;
      }
      if (v55 != 5)
      {
        __break(1u);
        goto LABEL_43;
      }
    }
    BYTE1(v111) = v53 & 7;
    v57 = v53 >> 3;
    *((_QWORD *)&v111 + 1) = v57;
    if (v57 == 2)
    {
      v59 = *(void (**)(char *, __int128 *, ValueMetadata *, _UNKNOWN **))(v90 + 32);
      v58 = v82;
LABEL_29:
      v60 = v119;
      v59(v58, &v109, &type metadata for BinaryDecoder, &off_1E7BDFED8);
      v119 = v60;
      if (v60)
        goto LABEL_59;
      goto LABEL_38;
    }
    if (v57 == 1)
    {
      v58 = v92;
      v59 = *(void (**)(char *, __int128 *, ValueMetadata *, _UNKNOWN **))(v93 + 32);
      goto LABEL_29;
    }
    v61 = v52 - (unsigned __int8 *)v46;
    v62 = __OFADD__(v47, v61);
    v63 = v47 + v61;
    if (v62)
      goto LABEL_61;
    *(_QWORD *)&v109 = v46;
    *((_QWORD *)&v109 + 1) = v63;
    if (v63 < 1)
      break;
    v64 = v119;
    v65 = sub_1C20ACC78();
    v119 = v64;
    if (v64)
      goto LABEL_59;
    if (v65 > 0xFFFFFFFE || v65 < 8 || (v65 & 7) >= 6)
    {
      sub_1C2108014();
      v75 = swift_allocError();
      v77 = 3;
      goto LABEL_58;
    }
    BYTE1(v111) = v65 & 7;
    *((_QWORD *)&v111 + 1) = v65 >> 3;
    v66 = v119;
    sub_1C20ADDE4(v65);
    v119 = v66;
LABEL_38:
    v47 = *((_QWORD *)&v109 + 1);
    v46 = (char *)v109;
    v110 = (unint64_t)v109;
    result = v84;
    if (*((uint64_t *)&v109 + 1) < 1)
      goto LABEL_44;
  }
  sub_1C2108014();
  v75 = swift_allocError();
  v77 = 1;
LABEL_58:
  *v76 = v77;
  v119 = v75;
  swift_willThrow();
LABEL_59:
  sub_1C20ACEE8((uint64_t)&v109);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v82, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v92, v49);
}

unint64_t sub_1C2143FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t result;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unsigned int v58;
  BOOL v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int v69;
  void (*v70)(char *, uint64_t);
  int64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  unint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  _OWORD v110[4];
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _BYTE v115[40];
  _BYTE v116[48];
  _QWORD v117[8];
  char v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;

  v102 = a5;
  v98 = a1;
  v105 = *(_QWORD *)(a4 + 8);
  v106 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v9);
  v99 = (char *)&v87 - v10;
  v107 = sub_1C2175690();
  v11 = *(_QWORD *)(v107 - 8);
  v13 = MEMORY[0x1E0C80A78](v107, v12);
  v96 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v97 = (char *)&v87 - v17;
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v21 = (char *)&v87 - v20;
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v87 - v23;
  v25 = sub_1C2175690();
  v26 = *(_QWORD *)(v25 - 8);
  v28 = MEMORY[0x1E0C80A78](v25, v27);
  MEMORY[0x1E0C80A78](v28, v29);
  result = (unint64_t)&v87 - v30;
  if (*(_BYTE *)(v5 + 33) != 2)
    return result;
  v103 = v32;
  v104 = (char *)&v87 - v30;
  v94 = v21;
  v95 = v31;
  v100 = v11;
  v101 = v26;
  (*(void (**)(void))(v8 + 56))();
  v34 = *(_QWORD *)(a3 - 8);
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
  v35(v24, 1, 1, a3);
  v36 = v130;
  result = sub_1C20ACC78();
  v130 = v36;
  if (v36)
    goto LABEL_6;
  v89 = v35;
  v90 = v34;
  v91 = AssociatedTypeWitness;
  v92 = v8;
  v93 = v24;
  v37 = *(_QWORD *)(v5 + 8);
  if ((v37 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    return result;
  }
  v38 = result;
  v39 = v37 >= result;
  v40 = v37 - result;
  if (!v39)
  {
    sub_1C2108014();
    v41 = swift_allocError();
    *v42 = 1;
    v130 = v41;
    swift_willThrow();
    v24 = v93;
LABEL_6:
    (*(void (**)(char *, uint64_t))(v100 + 8))(v24, v107);
    return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v104, v103);
  }
  v43 = *(_QWORD *)v5;
  *(_QWORD *)v5 += result;
  *(_QWORD *)(v5 + 8) = v40;
  v88 = v5;
  sub_1C20ACD54(v5, (uint64_t)v116);
  v44 = v117[7];
  v45 = v118;
  sub_1C20ACEA4((uint64_t)v117, (uint64_t)v115, (uint64_t *)&unk_1ED7DFE00);
  LOWORD(v110[0]) = 1;
  *(_OWORD *)((char *)v110 + 8) = 0u;
  *(_OWORD *)((char *)&v110[1] + 8) = 0u;
  *(_OWORD *)((char *)&v110[2] + 8) = 0u;
  *((_QWORD *)&v110[3] + 1) = 0;
  LOBYTE(v111) = 1;
  v113 = xmmword_1C2177160;
  v114 = xmmword_1C2177160;
  *(_QWORD *)&v108 = v43;
  *((_QWORD *)&v108 + 1) = v38;
  v109 = v43;
  sub_1C20AC454((uint64_t)v115, (uint64_t)&v110[1], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v111 + 1) = v44;
  LOBYTE(v112) = v45;
  *((_QWORD *)&v112 + 1) = v44;
  v128 = v113;
  v129 = v114;
  v122 = v110[0];
  v123 = v110[1];
  v124 = v110[2];
  v125 = v110[3];
  v120 = v108;
  v121 = v109;
  v126 = v111;
  v127 = v112;
  v46 = v119;
  result = sub_1C20ACEE8((uint64_t)v116);
  *((_QWORD *)&v127 + 1) = v46;
  v48 = *((_QWORD *)&v120 + 1);
  v47 = (char *)v120;
  v121 = (unint64_t)v120;
  v49 = v101;
  if (*((uint64_t *)&v120 + 1) >= 1)
  {
    v50 = v103;
    v51 = a3;
    v52 = v91;
    v53 = v92;
    while (1)
    {
      v54 = (unsigned __int8 *)(v47 + 1);
      v55 = *v47;
      v56 = v48 - 1;
      if (*v47 < 0)
      {
        if (!v56)
          goto LABEL_53;
        v55 &= 0x7Fu;
        v54 = (unsigned __int8 *)(v47 + 2);
        v57 = 7;
        while (1)
        {
          v55 |= (unint64_t)(*(v54 - 1) & 0x7F) << v57;
          if ((*(v54 - 1) & 0x80) == 0)
            break;
          if (v56 >= 2)
          {
            ++v54;
            --v56;
            v59 = v57 > 0x38;
            v57 += 7;
            if (!v59)
              continue;
          }
          goto LABEL_53;
        }
        --v56;
        *(_QWORD *)&v120 = v54;
        *((_QWORD *)&v120 + 1) = v56;
        if (v55 >= 0xFFFFFFFF)
          goto LABEL_53;
      }
      else
      {
        *(_QWORD *)&v120 = v47 + 1;
        *((_QWORD *)&v120 + 1) = v56;
      }
      v58 = v55 & 7;
      v59 = v55 < 8 || v58 > 5;
      if (v59)
        goto LABEL_53;
      if ((v55 & 7) != 0 && v58 - 1 >= 3)
      {
        if (v58 == 4)
        {
          BYTE1(v122) = 4;
          *((_QWORD *)&v122 + 1) = v55 >> 3;
LABEL_53:
          sub_1C2108014();
          swift_allocError();
          *v78 = 3;
          swift_willThrow();
          sub_1C20ACEE8((uint64_t)&v120);
          (*(void (**)(char *, uint64_t))(v100 + 8))(v93, v107);
          return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v104, v50);
        }
        if (v58 != 5)
          goto LABEL_70;
      }
      BYTE1(v122) = v55 & 7;
      v60 = v55 >> 3;
      *((_QWORD *)&v122 + 1) = v60;
      if (v60 == 2)
      {
        v63 = v93;
        v64 = v130;
        sub_1C214279C(v93, v51, v102);
        v130 = v64;
        if (v64)
        {
          sub_1C20ACEE8((uint64_t)&v120);
          (*(void (**)(char *, uint64_t))(v100 + 8))(v63, v107);
          return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v104, v50);
        }
        v65 = v100;
        v66 = v94;
        v67 = v63;
        v68 = v107;
        (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v94, v67, v107);
        v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48))(v66, 1, v51);
        v70 = *(void (**)(char *, uint64_t))(v65 + 8);
        v70(v66, v68);
        if (v69 == 1)
        {
          v53 = v92;
          result = v95;
          if (!v58)
          {
            sub_1C20ACEE8((uint64_t)&v120);
            v70(v93, v107);
            return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v104, v103);
          }
          v62 = v107;
          v50 = v103;
        }
        else
        {
          v62 = v107;
          v50 = v103;
          v53 = v92;
          result = v95;
        }
        v49 = v101;
      }
      else
      {
        if (v60 == 1)
        {
          v61 = v130;
          (*(void (**)(char *, __int128 *, ValueMetadata *, _UNKNOWN **))(v105 + 32))(v104, &v120, &type metadata for BinaryDecoder, &off_1E7BDFED8);
          v62 = v107;
          v130 = v61;
          if (v61)
            goto LABEL_66;
        }
        else
        {
          v71 = v54 - (unsigned __int8 *)v47;
          v72 = __OFADD__(v56, v71);
          v73 = v56 + v71;
          v62 = v107;
          if (v72)
            goto LABEL_69;
          *(_QWORD *)&v120 = v47;
          *((_QWORD *)&v120 + 1) = v73;
          if (v73 < 1)
          {
            sub_1C2108014();
            v84 = swift_allocError();
            v86 = 1;
LABEL_65:
            *v85 = v86;
            v130 = v84;
            swift_willThrow();
LABEL_66:
            sub_1C20ACEE8((uint64_t)&v120);
            (*(void (**)(char *, uint64_t))(v100 + 8))(v93, v62);
            return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v104, v50);
          }
          v74 = v130;
          v75 = sub_1C20ACC78();
          v130 = v74;
          if (v74)
            goto LABEL_66;
          if (v75 > 0xFFFFFFFE || v75 < 8 || (v75 & 7) >= 6)
          {
            sub_1C2108014();
            v84 = swift_allocError();
            v86 = 3;
            goto LABEL_65;
          }
          BYTE1(v122) = v75 & 7;
          *((_QWORD *)&v122 + 1) = v75 >> 3;
          v76 = v130;
          sub_1C20ADDE4(v75);
          v130 = v76;
        }
        result = v95;
      }
      v48 = *((_QWORD *)&v120 + 1);
      v47 = (char *)v120;
      v121 = (unint64_t)v120;
      if (*((uint64_t *)&v120 + 1) < 1)
        goto LABEL_50;
    }
  }
  v50 = v103;
  v62 = v107;
  v51 = a3;
  v52 = v91;
  v53 = v92;
  result = v95;
LABEL_50:
  if (v48)
  {
    sub_1C2108014();
    swift_allocError();
    *v77 = 0;
    swift_willThrow();
    sub_1C20ACEE8((uint64_t)&v120);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v93, v62);
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v104, v50);
  }
  v79 = result;
  (*(void (**)(void))(v49 + 16))();
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v53 + 48))(v79, 1, v52) == 1)
  {
    (*(void (**)(void))(v105 + 24))();
    (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v79, v50);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 32))(v99, v79, v52);
  }
  v80 = v96;
  v81 = v97;
  v82 = v100;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v96, v93, v62);
  v83 = v90;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v80, 1, v51) == 1)
  {
    (*(void (**)(uint64_t))(v102 + 24))(v51);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v62);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v81, v80, v51);
  }
  v89(v81, 0, 1, v51);
  swift_getAssociatedConformanceWitness();
  sub_1C21753E4();
  sub_1C21753FC();
  sub_1C20ACEE8((uint64_t)&v120);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v93, v62);
  result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v104, v103);
  *(_BYTE *)(v88 + 32) = 1;
  return result;
}

unint64_t sub_1C2144878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t result;
  void (*v31)(void);
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v34;
  unint64_t v35;
  BOOL v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int v53;
  BOOL v54;
  unint64_t v55;
  uint64_t v56;
  int64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _BYTE *v62;
  unint64_t v63;
  _BYTE *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  _OWORD v94[4];
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[40];
  _BYTE v100[48];
  _QWORD v101[8];
  char v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;

  v87 = a5;
  v85 = a1;
  v89 = *(_QWORD *)(a4 + 8);
  v90 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v10);
  v86 = (char *)&v73 - v11;
  v114 = sub_1C2175690();
  v12 = *(_QWORD *)(v114 - 8);
  v14 = MEMORY[0x1E0C80A78](v114, v13);
  v83 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v84 = (char *)&v73 - v18;
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v73 - v20;
  v22 = sub_1C2175690();
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x1E0C80A78](v22, v24);
  MEMORY[0x1E0C80A78](v25, v26);
  result = (unint64_t)&v73 - v27;
  if (*(_BYTE *)(v5 + 33) != 2)
    return result;
  v81 = v23;
  v82 = v29;
  v79 = v28;
  v80 = v12;
  v31 = *(void (**)(void))(v9 + 56);
  v88 = (char *)&v73 - v27;
  v31();
  v32 = *(_QWORD *)(a3 - 8);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v33(v21, 1, 1, a3);
  result = sub_1C20ACC78();
  v91 = v6;
  if (v6)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v80 + 8))(v21, v114);
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v88, v82);
  }
  v74 = v33;
  v75 = v32;
  v76 = v9;
  v77 = AssociatedTypeWitness;
  v78 = v21;
  v34 = *(_QWORD *)(v5 + 8);
  if ((v34 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_60:
    __break(1u);
    return result;
  }
  v35 = result;
  v36 = v34 >= result;
  v37 = v34 - result;
  if (!v36)
  {
    sub_1C2108014();
    v38 = swift_allocError();
    *v39 = 1;
    v91 = v38;
    swift_willThrow();
    v21 = v78;
    goto LABEL_6;
  }
  v40 = *(_QWORD *)v5;
  *(_QWORD *)v5 += result;
  *(_QWORD *)(v5 + 8) = v37;
  v73 = v5;
  sub_1C20ACD54(v5, (uint64_t)v100);
  v41 = v101[7];
  v42 = v102;
  sub_1C20ACEA4((uint64_t)v101, (uint64_t)v99, (uint64_t *)&unk_1ED7DFE00);
  LOWORD(v94[0]) = 1;
  *(_OWORD *)((char *)v94 + 8) = 0u;
  *(_OWORD *)((char *)&v94[1] + 8) = 0u;
  *(_OWORD *)((char *)&v94[2] + 8) = 0u;
  *((_QWORD *)&v94[3] + 1) = 0;
  LOBYTE(v95) = 1;
  v97 = xmmword_1C2177160;
  v98 = xmmword_1C2177160;
  *(_QWORD *)&v92 = v40;
  *((_QWORD *)&v92 + 1) = v35;
  v93 = v40;
  sub_1C20AC454((uint64_t)v99, (uint64_t)&v94[1], (uint64_t *)&unk_1ED7DFE00);
  *((_QWORD *)&v95 + 1) = v41;
  LOBYTE(v96) = v42;
  *((_QWORD *)&v96 + 1) = v41;
  v112 = v97;
  v113 = v98;
  v106 = v94[0];
  v107 = v94[1];
  v108 = v94[2];
  v109 = v94[3];
  v104 = v92;
  v105 = v93;
  v110 = v95;
  v111 = v96;
  v43 = v103;
  result = sub_1C20ACEE8((uint64_t)v100);
  *((_QWORD *)&v111 + 1) = v43;
  v45 = *((_QWORD *)&v104 + 1);
  v44 = (char *)v104;
  v105 = (unint64_t)v104;
  v46 = v81;
  if (*((uint64_t *)&v104 + 1) < 1)
  {
LABEL_42:
    v47 = v82;
    v48 = a3;
    a3 = v76;
    v49 = v77;
    result = v79;
LABEL_43:
    if (v45)
    {
      sub_1C2108014();
      swift_allocError();
      *v62 = 0;
LABEL_49:
      swift_willThrow();
      sub_1C20ACEE8((uint64_t)&v104);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v114);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v88, v47);
    }
    else
    {
      v63 = result;
      (*(void (**)(void))(v46 + 16))();
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(a3 + 48))(v63, 1, v49) == 1)
      {
        (*(void (**)(void))(v89 + 24))();
        (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v63, v47);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(a3 + 32))(v86, v63, v49);
      }
      v65 = v83;
      v66 = v84;
      v67 = v80;
      v68 = v114;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v83, v78, v114);
      v69 = v75;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v65, 1, v48) == 1)
      {
        (*(void (**)(uint64_t))(v87 + 16))(v48);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v65, v68);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v65, v48);
      }
      v74(v66, 0, 1, v48);
      swift_getAssociatedConformanceWitness();
      sub_1C21753E4();
      sub_1C21753FC();
      sub_1C20ACEE8((uint64_t)&v104);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v78, v68);
      result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v88, v47);
      *(_BYTE *)(v73 + 32) = 1;
    }
    return result;
  }
  v47 = v82;
  v48 = a3;
  a3 = v76;
  v49 = v77;
  while (1)
  {
    v50 = (unsigned __int8 *)(v44 + 1);
    v51 = *v44;
    --v45;
    if (*v44 < 0)
    {
      if (!v45)
        goto LABEL_48;
      v51 &= 0x7Fu;
      v50 = (unsigned __int8 *)(v44 + 2);
      v52 = 7;
      while (1)
      {
        v51 |= (unint64_t)(*(v50 - 1) & 0x7F) << v52;
        if ((*(v50 - 1) & 0x80) == 0)
          break;
        if (v45 >= 2)
        {
          ++v50;
          --v45;
          v54 = v52 > 0x38;
          v52 += 7;
          if (!v54)
            continue;
        }
        goto LABEL_48;
      }
      --v45;
      *(_QWORD *)&v104 = v50;
      *((_QWORD *)&v104 + 1) = v45;
      if (v51 >= 0xFFFFFFFF)
        goto LABEL_48;
    }
    else
    {
      *(_QWORD *)&v104 = v44 + 1;
      *((_QWORD *)&v104 + 1) = v45;
    }
    v53 = v51 & 7;
    v54 = v51 < 8 || v53 > 5;
    if (v54)
      goto LABEL_48;
    if (v53 >= 4)
    {
      if (v53 == 4)
      {
        BYTE1(v106) = 4;
        *((_QWORD *)&v106 + 1) = v51 >> 3;
LABEL_48:
        sub_1C2108014();
        swift_allocError();
        *v64 = 3;
        goto LABEL_49;
      }
      if (v53 != 5)
      {
        __break(1u);
        goto LABEL_42;
      }
    }
    BYTE1(v106) = v51 & 7;
    v55 = v51 >> 3;
    *((_QWORD *)&v106 + 1) = v55;
    if (v55 == 2)
    {
      v56 = v91;
      sub_1C20AD6F4((uint64_t)v78, v48, v87);
      goto LABEL_36;
    }
    if (v55 == 1)
    {
      v56 = v91;
      (*(void (**)(char *, __int128 *, ValueMetadata *, _UNKNOWN **))(v89 + 32))(v88, &v104, &type metadata for BinaryDecoder, &off_1E7BDFED8);
      goto LABEL_36;
    }
    v57 = v50 - (unsigned __int8 *)v44;
    v58 = __OFADD__(v45, v57);
    v59 = v45 + v57;
    if (v58)
      goto LABEL_60;
    *(_QWORD *)&v104 = v44;
    *((_QWORD *)&v104 + 1) = v59;
    if (v59 < 1)
      break;
    v60 = v91;
    v61 = sub_1C20ACC78();
    v91 = v60;
    if (v60)
      goto LABEL_58;
    if (v61 > 0xFFFFFFFE || v61 < 8 || (v61 & 7) >= 6)
    {
      sub_1C2108014();
      v70 = swift_allocError();
      v72 = 3;
      goto LABEL_57;
    }
    BYTE1(v106) = v61 & 7;
    *((_QWORD *)&v106 + 1) = v61 >> 3;
    v56 = v91;
    sub_1C20ADDE4(v61);
LABEL_36:
    v91 = v56;
    if (v56)
      goto LABEL_58;
    v45 = *((_QWORD *)&v104 + 1);
    v44 = (char *)v104;
    v105 = (unint64_t)v104;
    result = v79;
    if (*((uint64_t *)&v104 + 1) < 1)
      goto LABEL_43;
  }
  sub_1C2108014();
  v70 = swift_allocError();
  v72 = 1;
LABEL_57:
  *v71 = v72;
  v91 = v70;
  swift_willThrow();
LABEL_58:
  sub_1C20ACEE8((uint64_t)&v104);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v114);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v88, v47);
}

uint64_t sub_1C214503C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[7];

  v5 = v4;
  v6 = *(_QWORD *)(v4 + 72);
  if (v6)
  {
    v17 = a1;
    v10 = *(_QWORD *)(v5 + 80);
    v11 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 48), v6);
    v21[6] = &v16;
    v12 = *(_QWORD *)(v6 - 8);
    MEMORY[0x1E0C80A78](v11, v11);
    v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v18, a2, a3, a4, v6, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
    if (*((_QWORD *)&v19 + 1))
    {
      sub_1C20A8734(&v18, (uint64_t)v21);
      sub_1C21472F8(v17, a4, v21);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
  }
  else
  {
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
  }
  return sub_1C2128154((uint64_t)&v18, &qword_1EF75FB38);
}

void sub_1C214518C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE v20[8];
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  sub_1C20AC67C();
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (v8 == 1 && *(_BYTE *)(v3 + 33) == 3)
      {
        v10 = *(_QWORD *)(v3 + 120);
        v11 = v10 - 1;
        if (__OFSUB__(v10, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          sub_1C2175774();
          __break(1u);
          return;
        }
        *(_QWORD *)(v3 + 120) = v11;
        if (v11 < 0)
        {
          sub_1C2108014();
          swift_allocError();
          *v18 = 6;
          swift_willThrow();
          return;
        }
        sub_1C20ACD54(v3, (uint64_t)v20);
        v23 = 1;
        v24 = 0;
        v22 = 1;
        v12 = sub_1C2145390(a1, a2, a3);
        if (v12)
        {
          if (v12 != 1)
          {
            sub_1C2108014();
            swift_allocError();
            *v19 = 3;
            swift_willThrow();
            sub_1C20ACEE8((uint64_t)v20);
            return;
          }
        }
        else
        {
          v13 = *(_QWORD *)(v3 + 8);
          v14 = v13 - v21;
          if (__OFSUB__(v13, v21))
            goto LABEL_22;
          v15 = __OFSUB__(v13, v14);
          v16 = v21;
          if (v15)
            goto LABEL_23;
          *(_QWORD *)v3 += v14;
          *(_QWORD *)(v3 + 8) = v16;
          *(_BYTE *)(v3 + 32) = 1;
        }
        v17 = v11 + 1;
        if (__OFADD__(v11, 1))
          goto LABEL_21;
        *(_QWORD *)(v3 + 120) = v17;
        if (*(_QWORD *)(v3 + 104) < v17)
          goto LABEL_24;
        sub_1C20ACEE8((uint64_t)v20);
      }
      sub_1C20AC67C();
    }
  }
}

uint64_t sub_1C2145390(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  unint64_t v39;
  BOOL v40;
  unsigned __int8 *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unsigned __int8 *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  char *v59;
  _BYTE *v60;
  _BYTE v61[16];
  uint64_t *v62;
  _BYTE *v63;
  __int128 v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[40];
  _BYTE v85[32];
  uint64_t v86;
  uint64_t v87;

  v5 = v3;
  v87 = *MEMORY[0x1E0C80C00];
  v86 = 0;
  memset(v85, 0, sizeof(v85));
  sub_1C20AC67C();
  if (v4)
  {
    v11 = 0xF000000000000000;
    v12 = 0;
    goto LABEL_3;
  }
  v71 = a2;
  v72 = a3;
  v14 = 0;
  v69 = &v79;
  v70 = v3 + 6;
  v67 = &v75;
  v68 = &v74;
  v65 = &v83;
  v66 = &v76;
  v11 = 0xF000000000000000;
  v15 = &qword_1EF75FB38;
  v64 = xmmword_1C2177160;
LABEL_6:
  v73 = v14;
  while (1)
  {
    if ((v10 & 1) != 0)
    {
      sub_1C20AE1C8(v73, v11);
      sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
      return 0;
    }
    if (v9 != 3)
    {
      if (v9 != 2)
      {
        v16 = (unsigned __int8 *)v5[3];
        if (!v16)
        {
          v18 = (unsigned __int8 *)v5[1];
          v17 = (unsigned __int8 *)v5[2];
          v19 = (unsigned __int8 *)(*v5 - (_QWORD)v17);
          v20 = __OFADD__(v18, v19);
          v21 = (uint64_t)&v19[(_QWORD)v18];
          if (v20)
          {
            __break(1u);
            JUMPOUT(0x1C21462B8);
          }
          goto LABEL_24;
        }
        goto LABEL_7;
      }
      if (*((_BYTE *)v5 + 33))
        goto LABEL_67;
      v33 = v5[1];
      v34 = v33 < 1;
      v35 = v33 - 1;
      if (v34)
      {
        v48 = 1;
LABEL_73:
        sub_1C2108014();
        swift_allocError();
        *v59 = v48;
        goto LABEL_66;
      }
      LODWORD(v36) = *(unsigned __int8 *)*v5;
      if (*(char *)*v5 < 0)
      {
        if (!v35)
        {
          v48 = 3;
          goto LABEL_73;
        }
        v36 &= 0x7Fu;
        v46 = *v5 + 2;
        v47 = 7;
        while (1)
        {
          v36 |= (unint64_t)(*(_BYTE *)(v46 - 1) & 0x7F) << v47;
          if ((*(_BYTE *)(v46 - 1) & 0x80) == 0)
            break;
          v48 = 3;
          if (v35 >= 2)
          {
            ++v46;
            --v35;
            v34 = v47 > 0x38;
            v47 += 7;
            if (!v34)
              continue;
          }
          goto LABEL_73;
        }
        --v35;
        *v5 = v46;
      }
      else
      {
        ++*v5;
      }
      v5[1] = v35;
      *((_BYTE *)v5 + 32) = 1;
      if (!(_DWORD)v36)
      {
LABEL_67:
        sub_1C20AE1C8(v73, v11);
LABEL_68:
        sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
        return 2;
      }
      v49 = v5[9];
      if (!v49)
      {
        sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
        v80 = 0u;
        v81 = 0u;
        v82 = 0;
LABEL_71:
        sub_1C20AE1C8(v73, v11);
        sub_1C2128154((uint64_t)&v80, &qword_1EF75FB38);
        return 1;
      }
      v62 = a1;
      v50 = (unsigned __int8 *)v5[10];
      v51 = __swift_project_boxed_opaque_existential_1(v70, v49);
      v63 = v61;
      v52 = *(_QWORD *)(v49 - 8);
      MEMORY[0x1E0C80A78](v51, v51);
      v54 = &v61[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *))(v52 + 16))(v54);
      (*((void (**)(__int128 *__return_ptr, uint64_t, uint64_t, _QWORD, uint64_t, unsigned __int8 *))v50 + 1))(&v80, v71, v72, (int)v36, v49, v50);
      (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v54, v49);
      v15 = &qword_1EF75FB38;
      sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
      if (!*((_QWORD *)&v81 + 1))
        goto LABEL_71;
      sub_1C20A8734(&v80, (uint64_t)v84);
      sub_1C20A84A8((uint64_t)v84, (uint64_t)v85);
      if (v11 >> 60 != 15)
        __asm { BR              X9 }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
      a1 = v62;
LABEL_60:
      sub_1C20AC67C();
      v14 = v73;
      goto LABEL_6;
    }
    sub_1C20ACEA4((uint64_t)v85, (uint64_t)&v77, v15);
    if (!v78)
      break;
    v22 = v15;
    sub_1C20A8734(&v77, (uint64_t)&v80);
    v23 = *((_QWORD *)&v81 + 1);
    v24 = a1;
    v25 = v82;
    __swift_project_boxed_opaque_existential_1(&v80, *((uint64_t *)&v81 + 1));
    v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    v27 = v25;
    a1 = v24;
    v28 = v26(v23, v27);
    sub_1C21472F8(v24, v28, &v80);
    if ((v5[4] & 1) == 0)
    {
      sub_1C20AE1C8(v73, v11);
      sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      return 2;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
    v15 = v22;
LABEL_9:
    sub_1C20AC67C();
  }
  sub_1C2128154((uint64_t)&v77, v15);
  v29 = *((unsigned __int8 *)v5 + 33);
  if (v11 >> 60 == 15)
  {
    if (v29 != 2)
      goto LABEL_68;
    v37 = sub_1C20ACC78();
    v38 = v5[1];
    if ((v38 & 0x8000000000000000) != 0)
      goto LABEL_75;
    v39 = v37;
    v40 = v38 >= v37;
    v41 = (unsigned __int8 *)(v38 - v37);
    if (!v40)
    {
      sub_1C2108014();
      swift_allocError();
      *v60 = 1;
      swift_willThrow();
      return sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
    }
    v42 = (const void *)*v5;
    *v5 += v37;
    v5[1] = (uint64_t)v41;
    if (v37)
    {
      if (v37 <= 14)
      {
        *(_QWORD *)((char *)&v80 + 6) = 0;
        *(_QWORD *)&v80 = 0;
        BYTE14(v80) = v37;
        memcpy(&v80, v42, v37);
        v45 = DWORD2(v80) | ((unint64_t)BYTE12(v80) << 32) | ((unint64_t)BYTE13(v80) << 40) | ((unint64_t)BYTE14(v80) << 48);
        *((_BYTE *)v5 + 32) = 1;
LABEL_57:
        v55 = v45;
      }
      else
      {
        sub_1C21752F4();
        swift_allocObject();
        v43 = sub_1C21752B8();
        v44 = v43;
        if (v39 < 0x7FFFFFFF)
        {
          v45 = v43 | 0x4000000000000000;
          *((_BYTE *)v5 + 32) = 1;
          swift_retain();
          goto LABEL_57;
        }
        sub_1C2175324();
        v56 = swift_allocObject();
        *(_QWORD *)(v56 + 16) = 0;
        *(_QWORD *)(v56 + 24) = v39;
        *((_BYTE *)v5 + 32) = 1;
        swift_retain();
        swift_retain();
        v55 = v44 | 0x8000000000000000;
      }
      __asm { BR              X11 }
    }
    *((_BYTE *)v5 + 32) = 1;
    *(_QWORD *)&v80 = 0;
    *((_QWORD *)&v80 + 1) = 0x1000000000000;
    sub_1C2146A84((uint64_t)&v80);
    sub_1C20A8058(0, 0xC000000000000000);
    v11 = *((_QWORD *)&v80 + 1);
    v73 = v80;
    v15 = &qword_1EF75FB38;
    goto LABEL_60;
  }
  if (v29 != 2)
    goto LABEL_67;
  v16 = (unsigned __int8 *)v5[3];
  if (v16)
  {
LABEL_7:
    *v5 = (uint64_t)v16;
LABEL_8:
    *((_BYTE *)v5 + 32) = 1;
    goto LABEL_9;
  }
  v30 = (unsigned __int8 *)v5[1];
  v17 = (unsigned __int8 *)v5[2];
  v31 = (unsigned __int8 *)(*v5 - (_QWORD)v17);
  v20 = __OFADD__(v30, v31);
  v21 = (uint64_t)&v31[(_QWORD)v30];
  if (v20)
  {
    __break(1u);
LABEL_75:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1C2146354);
  }
LABEL_24:
  *v5 = (uint64_t)v17;
  v5[1] = v21;
  if (v21 >= 1)
  {
    v32 = sub_1C20ACC78();
    if (v32 > 0xFFFFFFFE || v32 < 8 || (v32 & 7) >= 6)
    {
      sub_1C2108014();
      swift_allocError();
      v58 = 3;
      goto LABEL_65;
    }
    *((_BYTE *)v5 + 33) = v32 & 7;
    v5[5] = v32 >> 3;
    sub_1C20ADDE4(v32);
    v5[3] = *v5;
    goto LABEL_8;
  }
  sub_1C2108014();
  swift_allocError();
  v58 = 1;
LABEL_65:
  *v57 = v58;
LABEL_66:
  swift_willThrow();
  v12 = v73;
LABEL_3:
  sub_1C20AE1C8(v12, v11);
  return sub_1C2128154((uint64_t)v85, &qword_1EF75FB38);
}

_DWORD *sub_1C21463AC(_DWORD *a1)
{
  return sub_1C2140198(a1);
}

void sub_1C21463C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;

  if (*(_BYTE *)(v1 + 33) == 5)
  {
    sub_1C214021C();
    if (!v2)
    {
      *(_DWORD *)a1 = v4;
      *(_BYTE *)(a1 + 4) = 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
}

void sub_1C2146400(char **a1)
{
  sub_1C21402BC(a1);
}

void sub_1C2146414(char **a1)
{
  sub_1C214050C(a1);
}

uint64_t sub_1C2146428(uint64_t a1)
{
  return sub_1C214075C(a1, (uint64_t (*)(void))sub_1C214E97C);
}

uint64_t sub_1C2146444(uint64_t a1)
{
  return sub_1C2140B48(a1, (uint64_t (*)(void))sub_1C214E988);
}

uint64_t sub_1C2146460(uint64_t a1)
{
  return sub_1C214075C(a1, (uint64_t (*)(void))sub_1C214EA8C);
}

uint64_t sub_1C214647C(uint64_t a1)
{
  return sub_1C2140B48(a1, (uint64_t (*)(void))sub_1C214EB8C);
}

uint64_t sub_1C2146498(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = (_DWORD *)result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *v3 = -(result & 1) ^ (result >> 1);
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C21464DC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *(_DWORD *)v3 = -(result & 1) ^ (result >> 1);
      *(_BYTE *)(v3 + 4) = 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C2146524(uint64_t a1)
{
  return sub_1C2140F34(a1);
}

unint64_t sub_1C2146538(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = (_QWORD *)result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *v3 = -(uint64_t)(result & 1) ^ (result >> 1);
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

unint64_t sub_1C214657C(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *(_QWORD *)v3 = -(uint64_t)(result & 1) ^ (result >> 1);
      *(_BYTE *)(v3 + 8) = 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C21465C4(uint64_t a1)
{
  return sub_1C214132C(a1);
}

_DWORD *sub_1C21465D8(_DWORD *a1)
{
  return sub_1C2141724(a1);
}

uint64_t sub_1C21465EC(uint64_t a1)
{
  return sub_1C21417DC(a1);
}

unint64_t sub_1C2146600(unint64_t a1)
{
  return sub_1C2141898(a1, (uint64_t (*)(void))sub_1C214EA8C);
}

_QWORD *sub_1C214661C(_QWORD *a1)
{
  return sub_1C2141C60(a1);
}

uint64_t sub_1C2146630(uint64_t a1)
{
  return sub_1C2141D18(a1);
}

unint64_t sub_1C2146644(unint64_t a1)
{
  return sub_1C2141DD4(a1, (uint64_t (*)(void))sub_1C214EB8C);
}

unint64_t sub_1C2146660(unint64_t a1)
{
  return sub_1C2141898(a1, (uint64_t (*)(void))sub_1C214E97C);
}

unint64_t sub_1C214667C(unint64_t a1)
{
  return sub_1C2141DD4(a1, (uint64_t (*)(void))sub_1C214E988);
}

uint64_t sub_1C2146698(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = (_BYTE *)result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *v3 = result != 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C21466D8(uint64_t a1)
{
  return sub_1C214219C(a1);
}

unint64_t sub_1C21466EC(unint64_t a1)
{
  return sub_1C214258C(a1, (void (*)(_QWORD, _QWORD))sub_1C20A8058);
}

unint64_t sub_1C2146708(unint64_t a1)
{
  return sub_1C214258C(a1, (void (*)(_QWORD, _QWORD))sub_1C20AE1C8);
}

unint64_t sub_1C2146724(unint64_t a1)
{
  return sub_1C2142658(a1);
}

uint64_t sub_1C2146738(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2142A34(a1, a2, a3);
}

uint64_t sub_1C214674C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214327C(a1, a2, a3);
}

uint64_t sub_1C2146760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214368C(a1, a2, a3);
}

unint64_t sub_1C2146774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C21437C4(a1, a2, a3, a4, a5);
}

unint64_t sub_1C2146788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2143FAC(a1, a2, a3, a4, a5);
}

unint64_t sub_1C214679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2144878(a1, a2, a3, a4, a5);
}

uint64_t sub_1C21467B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C214503C(a1, a2, a3, a4);
}

void sub_1C21467C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C214518C(a1, a2, a3);
}

void sub_1C21467D8(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C214683C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unsigned int v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned __int8 v16;

  v12 = v1;
  LOWORD(v13) = a1;
  BYTE2(v13) = BYTE2(a1);
  HIBYTE(v13) = BYTE3(a1);
  v14 = BYTE4(a1);
  v15 = BYTE5(a1);
  v16 = BYTE6(a1);
  sub_1C21431B4(&v12, (uint64_t)&v12 + BYTE6(a1), v5, v3, v2);
  v6 = v12;
  v7 = v13;
  v8 = v14;
  v9 = v15;
  v10 = v16;
  result = swift_bridgeObjectRelease();
  *v4 = v6;
  v4[1] = v7 | (v8 << 32) | (v9 << 40) | (v10 << 48);
  return result;
}

void sub_1C2146A84(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C2146AE8@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unsigned int v10;
  char v11;
  char v12;
  char v13;

  v9 = v1;
  LOWORD(v10) = a1;
  BYTE2(v10) = BYTE2(a1);
  v5 = HIDWORD(a1);
  HIBYTE(v10) = BYTE3(a1);
  v6 = a1 >> 40;
  v11 = BYTE4(a1);
  v7 = HIWORD(a1);
  v12 = BYTE5(a1);
  v13 = BYTE6(a1);
  if ((a1 & 0xFF000000000000) != 0)
  {
    sub_1C20C5144(v4, v3);
    LOBYTE(v5) = v11;
    LOBYTE(v6) = v12;
    LOBYTE(v7) = v13;
  }
  result = sub_1C20A8058(v4, v3);
  *v2 = v9;
  v2[1] = v10 | ((unint64_t)v5 << 32) | ((unint64_t)v6 << 40) | ((unint64_t)v7 << 48);
  return result;
}

uint64_t sub_1C2146D20(int *a1, unsigned int a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_1C217530C();
  v9 = *a1;
  v10 = a1[1];
  if ((int)v10 < (int)v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_1C21752C4();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v11 = result;
  result = sub_1C21752E8();
  v12 = v9 - result;
  if (__OFSUB__(v9, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = v10 - v9;
  v14 = sub_1C21752DC();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  sub_1C21431B4((_BYTE *)(v11 + v12), v11 + v12 + v15, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2146DEC(int *a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1C217530C();
  v7 = *a1;
  v8 = a1[1];
  if ((int)v8 < (int)v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  result = sub_1C21752C4();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  result = sub_1C21752E8();
  if (__OFSUB__(v7, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v9 = v8 - v7;
  v10 = sub_1C21752DC();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  if (v11 >= 1)
    sub_1C20C5144(a2, a3);
  return sub_1C20A8058(a2, a3);
}

uint64_t assignWithCopy for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = a1 + 48;
  v5 = (__int128 *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 72) = v6;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  v7 = *v5;
  v8 = v5[1];
  *(_QWORD *)(v4 + 32) = *((_QWORD *)v5 + 4);
  *(_OWORD *)v4 = v7;
  *(_OWORD *)(v4 + 16) = v8;
LABEL_8:
  v9 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v10 = (uint64_t *)(a2 + 128);
  v11 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136) >> 60 == 15)
  {
    if (v11 >> 60 != 15)
    {
      v12 = *v10;
      sub_1C20A8008(*v10, *(_QWORD *)(a2 + 136));
      *(_QWORD *)(a1 + 128) = v12;
      *(_QWORD *)(a1 + 136) = v11;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
    sub_1C210416C(a1 + 128);
LABEL_13:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v10;
    goto LABEL_15;
  }
  v13 = *v10;
  sub_1C20A8008(*v10, *(_QWORD *)(a2 + 136));
  v14 = *(_QWORD *)(a1 + 128);
  v15 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = v13;
  *(_QWORD *)(a1 + 136) = v11;
  sub_1C20A8058(v14, v15);
LABEL_15:
  v16 = (uint64_t *)(a2 + 144);
  v17 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152) >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      v19 = *v16;
      sub_1C20A8008(*v16, v17);
      v20 = *(_QWORD *)(a1 + 144);
      v21 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 144) = v19;
      *(_QWORD *)(a1 + 152) = v17;
      sub_1C20A8058(v20, v21);
      return a1;
    }
    sub_1C210416C(a1 + 144);
    goto LABEL_20;
  }
  if (v17 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v16;
    return a1;
  }
  v18 = *v16;
  sub_1C20A8008(*v16, v17);
  *(_QWORD *)(a1 + 144) = v18;
  *(_QWORD *)(a1 + 152) = v17;
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = a1 + 48;
  v5 = a2 + 48;
  if (*(_QWORD *)(a1 + 72))
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v6 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)v4 = *(_OWORD *)v5;
  *(_OWORD *)(v4 + 16) = v6;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v5 + 32);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v7 = (_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v8 = *(_QWORD *)(a1 + 136);
  if (v8 >> 60 == 15)
    goto LABEL_6;
  v9 = *(_QWORD *)(a2 + 136);
  if (v9 >> 60 == 15)
  {
    sub_1C210416C(a1 + 128);
LABEL_6:
    *(_OWORD *)(a1 + 128) = *v7;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 136) = v9;
  sub_1C20A8058(v10, v8);
LABEL_8:
  v11 = (_QWORD *)(a2 + 144);
  v12 = *(_QWORD *)(a1 + 152);
  if (v12 >> 60 != 15)
  {
    v13 = *(_QWORD *)(a2 + 152);
    if (v13 >> 60 != 15)
    {
      v14 = *(_QWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 144) = *v11;
      *(_QWORD *)(a1 + 152) = v13;
      sub_1C20A8058(v14, v12);
      return a1;
    }
    sub_1C210416C(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for BinaryDecoder(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryDecoder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)(result + 72) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecoder()
{
  return &type metadata for BinaryDecoder;
}

uint64_t sub_1C21472F8(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE v19[40];
  _QWORD v20[3];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v5 = v3;
  v8 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v9 = sub_1C20A9B94(a2), (v10 & 1) != 0))
  {
    sub_1C20A84A8(*(_QWORD *)(v8 + 56) + 40 * v9, (uint64_t)&v22);
  }
  else
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
  }
  sub_1C20ACEA4((uint64_t)&v22, (uint64_t)v20, &qword_1EF75CF70);
  v11 = v21;
  result = sub_1C2128154((uint64_t)v20, &qword_1EF75CF70);
  if (!v11)
  {
    v15 = a3[3];
    v16 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v15);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v16 + 32))(v20, v5, &type metadata for BinaryDecoder, &off_1E7BDFED8, v15, v16);
    if (!v4)
    {
      sub_1C20AC454((uint64_t)v20, (uint64_t)&v22, &qword_1EF75CF70);
      goto LABEL_11;
    }
    return sub_1C2128154((uint64_t)&v22, &qword_1EF75CF70);
  }
  v13 = *((_QWORD *)&v23 + 1);
  if (*((_QWORD *)&v23 + 1))
  {
    v14 = v24;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v22, *((uint64_t *)&v23 + 1));
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 40))(v5, &type metadata for BinaryDecoder, &off_1E7BDFED8, v13, v14);
    if (!v4)
    {
LABEL_11:
      if (*(_BYTE *)(v5 + 32) == 1)
      {
        sub_1C20ACEA4((uint64_t)&v22, (uint64_t)v20, &qword_1EF75CF70);
        v17 = v21;
        sub_1C2128154((uint64_t)v20, &qword_1EF75CF70);
        if (v17)
        {
          sub_1C20ACEA4((uint64_t)&v22, (uint64_t)v20, &qword_1EF75CF70);
          sub_1C20ACEA4((uint64_t)v20, (uint64_t)v19, &qword_1EF75CF70);
          sub_1C20B825C((uint64_t)v19, a2);
          sub_1C2128154((uint64_t)v20, &qword_1EF75CF70);
        }
        else
        {
          sub_1C2108014();
          swift_allocError();
          *v18 = 5;
          swift_willThrow();
        }
      }
      return sub_1C2128154((uint64_t)&v22, &qword_1EF75CF70);
    }
    return sub_1C2128154((uint64_t)&v22, &qword_1EF75CF70);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2147520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t **v3;
  uint64_t v4;
  uint64_t **v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t *v26;
  unsigned int v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t *v36;
  unsigned __int8 v37;
  uint64_t *v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t *boxed_opaque_existential_1;
  char *v48;
  char v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v52;
  unsigned int v53;
  uint64_t v54;
  _OWORD *v56;
  _QWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t *v64;
  __int128 v65;
  uint64_t *v66;
  uint64_t *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _BYTE v72[48];
  unsigned __int8 v73;
  uint64_t *v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;

  v5 = v3;
  v71 = a1;
  v8 = sub_1C2175690();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v68 = (char *)&v59 - v13;
  v79 = *(_QWORD *)(a2 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v15, v18);
  v70 = (char *)&v59 - v20;
  MEMORY[0x1E0C80A78](v19, v21);
  v69 = (char *)&v59 - v22;
  result = sub_1C20B260C();
  if ((result & 1) != 0)
    return result;
  result = sub_1C20B301C(91);
  if (v4)
    return result;
  result = sub_1C20B35D0();
  if ((result & 1) != 0)
    return result;
  v60 = v9;
  v61 = v8;
  v67 = &v78;
  v25 = v3[1];
  v24 = v5[2];
  v62 = a3;
  if (v24 == v25)
    goto LABEL_12;
LABEL_5:
  v26 = *v5;
  do
  {
    v27 = *((unsigned __int8 *)v24 + (_QWORD)v26);
    v28 = v27 > 0x20;
    v29 = (1 << v27) & 0x100002600;
    if (v28 || v29 == 0)
      goto LABEL_12;
    v24 = (uint64_t *)((char *)v24 + 1);
    v5[2] = v24;
  }
  while (v25 != v24);
LABEL_22:
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v36 = v5[2];
  v35 = v5[3];
  v37 = *((_BYTE *)v5 + 48);
  v38 = v5[7];
  v39 = *((_BYTE *)v5 + 64);
  *(_OWORD *)v72 = *(_OWORD *)v5;
  *(_QWORD *)&v72[16] = v36;
  *(_QWORD *)&v72[24] = v35;
  *(_OWORD *)&v72[32] = *((_OWORD *)v5 + 2);
  v73 = v37;
  v74 = v38;
  v75 = v39;
  v76 = 0;
  v77 = 0;
  v40 = v67;
  *(_OWORD *)v67 = 0u;
  *((_OWORD *)v40 + 1) = 0u;
  swift_retain();
  sub_1C21496A8((uint64_t)v17, a2, a3);
  v41 = v79;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v70, v17, a2);
  sub_1C21755F4();
  sub_1C21755DC();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, a2);
  v25 = *(uint64_t **)&v72[8];
  v66 = *(uint64_t **)v72;
  v42 = *(uint64_t **)&v72[16];
  v65 = *(_OWORD *)&v72[24];
  v64 = *(uint64_t **)&v72[40];
  v63 = v73;
  sub_1C20A8840(v78);
  result = swift_release();
  *v5 = v66;
  v5[1] = v25;
  v5[2] = v42;
  *(_OWORD *)(v5 + 3) = v65;
  v5[5] = v64;
  *((_BYTE *)v5 + 48) = v63;
  if (v42 != v25)
    goto LABEL_38;
  while (1)
  {
    if (v42 == v25)
    {
LABEL_44:
      sub_1C20AFA84();
      swift_allocError();
      *v56 = xmmword_1C2175D80;
      return swift_willThrow();
    }
    v43 = *v5;
    if (*((_BYTE *)v42 + (_QWORD)*v5) == 93)
    {
      v5[2] = (uint64_t *)((char *)v42 + 1);
      return result;
    }
    while (1)
    {
      v44 = *((unsigned __int8 *)v42 + (_QWORD)v43);
      v28 = v44 > 0x20;
      v45 = (1 << v44) & 0x100002600;
      if (v28 || v45 == 0)
        break;
      v42 = (uint64_t *)((char *)v42 + 1);
      v5[2] = v42;
      if (v25 == v42)
        goto LABEL_44;
    }
    if (v25 == v42)
      goto LABEL_44;
    if (*((_BYTE *)v42 + (_QWORD)*v5) != 44)
    {
      sub_1C20AFA84();
      swift_allocError();
      *v57 = 0;
      v57[1] = 0;
      return swift_willThrow();
    }
    v24 = (uint64_t *)((char *)v42 + 1);
    v5[2] = (uint64_t *)((char *)v42 + 1);
    a3 = v62;
    if (v24 != v25)
      goto LABEL_5;
LABEL_12:
    if (v24 == v25 || *((_BYTE *)v24 + (_QWORD)*v5) != 110 || (sub_1C20B2554((uint64_t)&unk_1E7BD81C8) & 1) == 0)
      goto LABEL_22;
    result = swift_conformsToProtocol2();
    if (result)
      v32 = a2;
    else
      v32 = 0;
    if (!v32)
      goto LABEL_50;
    if (!result)
    {
      __break(1u);
      return result;
    }
    v66 = &v59;
    MEMORY[0x1E0C80A78](result, v31);
    *(_QWORD *)&v65 = v33;
    v34(a2, v33);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v61);
      memset(v72, 0, 40);
    }
    else
    {
      *(_QWORD *)&v72[24] = a2;
      *(_QWORD *)&v72[32] = v65;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v72);
      (*(void (**)(uint64_t *, char *, uint64_t))(v79 + 32))(boxed_opaque_existential_1, (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760420);
    v48 = v68;
    v49 = swift_dynamicCast();
    v50 = v79;
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
    if ((v49 & 1) == 0)
      break;
    v51(v48, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v69, v48, a2);
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v70, v69, a2);
    sub_1C21755F4();
    sub_1C21755DC();
    result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v69, a2);
    v25 = v5[1];
    v42 = v5[2];
    if (v42 != v25)
    {
LABEL_38:
      v52 = *v5;
      while (1)
      {
        v53 = *((unsigned __int8 *)v42 + (_QWORD)v52);
        v28 = v53 > 0x20;
        v54 = (1 << v53) & 0x100002600;
        if (v28 || v54 == 0)
          break;
        v42 = (uint64_t *)((char *)v42 + 1);
        v5[2] = v42;
        if (v25 == v42)
          goto LABEL_44;
      }
    }
  }
  v51(v48, 1, 1, a2);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v48, v61);
LABEL_50:
  sub_1C20AFA84();
  swift_allocError();
  *v58 = xmmword_1C217BDE0;
  return swift_willThrow();
}

uint64_t sub_1C2147B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  result = sub_1C20B3234();
  if ((result & 1) != 0)
    return 0;
  v3 = *(_QWORD *)(v0 + 72);
  if (v3 < 1 || (result = sub_1C20B301C(44), !v1))
  {
    if (!*(_QWORD *)(v0 + 88))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v4 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_OWORD *)(v0 + 96);
    v8 = v4;
    result = sub_1C20B2A80((uint64_t)&v6);
    if (!v1 && (v5 & 1) == 0)
    {
      if (!__OFADD__(v3, 1))
      {
        *(_QWORD *)(v0 + 72) = v3 + 1;
        return result;
      }
      __break(1u);
      goto LABEL_13;
    }
  }
  return result;
}

uint64_t sub_1C2147C40(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  int i;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v22;
  char *v23;
  unint64_t v24;
  _OWORD *v25;
  _QWORD *v26;
  unint64_t v27;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        sub_1C20B15EC();
        for (i = v5; ; i = v22)
        {
          v7 = *a1;
          result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v7;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C214E884(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
            v7 = result;
            *a1 = result;
          }
          v8 = *(_QWORD *)(v7 + 16);
          v9 = *(_QWORD *)(v7 + 24);
          v10 = v8 + 1;
          if (v8 >= v9 >> 1)
          {
            v27 = v8 + 1;
            v23 = (char *)v7;
            v24 = *(_QWORD *)(v7 + 16);
            result = (uint64_t)sub_1C214E884((char *)(v9 > 1), v8 + 1, 1, v23);
            v8 = v24;
            v10 = v27;
            v7 = result;
          }
          *(_QWORD *)(v7 + 16) = v10;
          *(_DWORD *)(v7 + 4 * v8 + 32) = i;
          *a1 = v7;
          v12 = v1[1];
          v11 = v1[2];
          if (v11 == v12)
            goto LABEL_28;
          v13 = *v1;
          while (1)
          {
            v14 = *(unsigned __int8 *)(v13 + v11);
            v15 = v14 > 0x20;
            v16 = (1 << v14) & 0x100002600;
            if (v15 || v16 == 0)
              break;
            v1[2] = ++v11;
            if (v12 == v11)
              goto LABEL_28;
          }
          if (v12 == v11)
          {
LABEL_28:
            sub_1C20AFA84();
            swift_allocError();
            *v25 = xmmword_1C2175D80;
            return swift_willThrow();
          }
          v18 = *v1;
          if (*(_BYTE *)(*v1 + v11) == 93)
            break;
          while (1)
          {
            v19 = *(unsigned __int8 *)(v18 + v11);
            v15 = v19 > 0x20;
            v20 = (1 << v19) & 0x100002600;
            if (v15 || v20 == 0)
              break;
            v1[2] = ++v11;
            if (v12 == v11)
              goto LABEL_28;
          }
          if (v12 == v11)
            goto LABEL_28;
          if (*(_BYTE *)(*v1 + v11) != 44)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v26 = 0;
            v26[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v11 + 1;
          sub_1C20B15EC();
        }
        v1[2] = v11 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C2147E70(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  _OWORD *v25;
  _QWORD *v26;
  unint64_t v27;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        sub_1C20B1DA8();
        for (i = v5; ; i = v22)
        {
          v7 = *a1;
          result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v7;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C214E994(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
            v7 = result;
            *a1 = result;
          }
          v8 = *(_QWORD *)(v7 + 16);
          v9 = *(_QWORD *)(v7 + 24);
          v10 = v8 + 1;
          if (v8 >= v9 >> 1)
          {
            v27 = v8 + 1;
            v23 = (char *)v7;
            v24 = *(_QWORD *)(v7 + 16);
            result = (uint64_t)sub_1C214E994((char *)(v9 > 1), v8 + 1, 1, v23);
            v8 = v24;
            v10 = v27;
            v7 = result;
          }
          *(_QWORD *)(v7 + 16) = v10;
          *(_QWORD *)(v7 + 8 * v8 + 32) = i;
          *a1 = v7;
          v12 = v1[1];
          v11 = v1[2];
          if (v11 == v12)
            goto LABEL_28;
          v13 = *v1;
          while (1)
          {
            v14 = *(unsigned __int8 *)(v13 + v11);
            v15 = v14 > 0x20;
            v16 = (1 << v14) & 0x100002600;
            if (v15 || v16 == 0)
              break;
            v1[2] = ++v11;
            if (v12 == v11)
              goto LABEL_28;
          }
          if (v12 == v11)
          {
LABEL_28:
            sub_1C20AFA84();
            swift_allocError();
            *v25 = xmmword_1C2175D80;
            return swift_willThrow();
          }
          v18 = *v1;
          if (*(_BYTE *)(*v1 + v11) == 93)
            break;
          while (1)
          {
            v19 = *(unsigned __int8 *)(v18 + v11);
            v15 = v19 > 0x20;
            v20 = (1 << v19) & 0x100002600;
            if (v15 || v20 == 0)
              break;
            v1[2] = ++v11;
            if (v12 == v11)
              goto LABEL_28;
          }
          if (v12 == v11)
            goto LABEL_28;
          if (*(_BYTE *)(*v1 + v11) != 44)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v26 = 0;
            v26[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v11 + 1;
          sub_1C20B1DA8();
        }
        v1[2] = v11 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C21480A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _OWORD *v4;

  result = sub_1C20B260C();
  if ((result & 1) != 0)
  {
    *(_DWORD *)a1 = 0;
    *(_BYTE *)(a1 + 4) = 1;
  }
  else
  {
    result = (uint64_t)sub_1C20B1098();
    if (!v1)
    {
      if (result == (int)result)
      {
        *(_DWORD *)a1 = result;
        *(_BYTE *)(a1 + 4) = 0;
      }
      else
      {
        sub_1C20AFA84();
        swift_allocError();
        *v4 = xmmword_1C2175D90;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C2148134(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  char *v21;
  unint64_t v22;
  __int128 *v23;
  __int128 v24;
  _QWORD *v25;
  unint64_t v26;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        for (i = sub_1C20B1098(); ; i = sub_1C20B1098())
        {
          if (i != (_QWORD *)(int)i)
          {
            sub_1C20AFA84();
            swift_allocError();
            v24 = xmmword_1C2175D90;
            goto LABEL_30;
          }
          v6 = *a1;
          result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v6;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C214E97C(0, *(_QWORD *)(v6 + 16) + 1, 1, (char *)v6);
            v6 = result;
            *a1 = result;
          }
          v7 = *(_QWORD *)(v6 + 16);
          v8 = *(_QWORD *)(v6 + 24);
          v9 = v7 + 1;
          if (v7 >= v8 >> 1)
          {
            v26 = v7 + 1;
            v21 = (char *)v6;
            v22 = *(_QWORD *)(v6 + 16);
            result = (uint64_t)sub_1C214E97C((char *)(v8 > 1), v7 + 1, 1, v21);
            v7 = v22;
            v9 = v26;
            v6 = result;
          }
          *(_QWORD *)(v6 + 16) = v9;
          *(_DWORD *)(v6 + 4 * v7 + 32) = (_DWORD)i;
          *a1 = v6;
          v11 = v1[1];
          v10 = v1[2];
          if (v10 == v11)
            goto LABEL_29;
          v12 = *v1;
          while (1)
          {
            v13 = *(unsigned __int8 *)(v12 + v10);
            v14 = v13 > 0x20;
            v15 = (1 << v13) & 0x100002600;
            if (v14 || v15 == 0)
              break;
            v1[2] = ++v10;
            if (v11 == v10)
              goto LABEL_29;
          }
          if (v11 == v10)
          {
LABEL_29:
            sub_1C20AFA84();
            swift_allocError();
            v24 = xmmword_1C2175D80;
LABEL_30:
            *v23 = v24;
            return swift_willThrow();
          }
          v17 = *v1;
          if (*(_BYTE *)(*v1 + v10) == 93)
            break;
          while (1)
          {
            v18 = *(unsigned __int8 *)(v17 + v10);
            v14 = v18 > 0x20;
            v19 = (1 << v18) & 0x100002600;
            if (v14 || v19 == 0)
              break;
            v1[2] = ++v10;
            if (v11 == v10)
              goto LABEL_29;
          }
          if (v11 == v10)
            goto LABEL_29;
          if (*(_BYTE *)(*v1 + v10) != 44)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v25 = 0;
            v25[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v10 + 1;
        }
        v1[2] = v10 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C2148390(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  unint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  char *v21;
  unint64_t v22;
  __int128 *v23;
  __int128 v24;
  _QWORD *v25;
  unint64_t v26;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        for (i = (unint64_t)sub_1C20B0F84(); ; i = (unint64_t)sub_1C20B0F84())
        {
          if (HIDWORD(i))
          {
            sub_1C20AFA84();
            swift_allocError();
            v24 = xmmword_1C2175D90;
            goto LABEL_30;
          }
          v6 = *a1;
          result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v6;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C214EA8C(0, *(_QWORD *)(v6 + 16) + 1, 1, (char *)v6);
            v6 = result;
            *a1 = result;
          }
          v7 = *(_QWORD *)(v6 + 16);
          v8 = *(_QWORD *)(v6 + 24);
          v9 = v7 + 1;
          if (v7 >= v8 >> 1)
          {
            v26 = v7 + 1;
            v21 = (char *)v6;
            v22 = *(_QWORD *)(v6 + 16);
            result = (uint64_t)sub_1C214EA8C((char *)(v8 > 1), v7 + 1, 1, v21);
            v7 = v22;
            v9 = v26;
            v6 = result;
          }
          *(_QWORD *)(v6 + 16) = v9;
          *(_DWORD *)(v6 + 4 * v7 + 32) = i;
          *a1 = v6;
          v11 = v1[1];
          v10 = v1[2];
          if (v10 == v11)
            goto LABEL_29;
          v12 = *v1;
          while (1)
          {
            v13 = *(unsigned __int8 *)(v12 + v10);
            v14 = v13 > 0x20;
            v15 = (1 << v13) & 0x100002600;
            if (v14 || v15 == 0)
              break;
            v1[2] = ++v10;
            if (v11 == v10)
              goto LABEL_29;
          }
          if (v11 == v10)
          {
LABEL_29:
            sub_1C20AFA84();
            swift_allocError();
            v24 = xmmword_1C2175D80;
LABEL_30:
            *v23 = v24;
            return swift_willThrow();
          }
          v17 = *v1;
          if (*(_BYTE *)(*v1 + v10) == 93)
            break;
          while (1)
          {
            v18 = *(unsigned __int8 *)(v17 + v10);
            v14 = v18 > 0x20;
            v19 = (1 << v18) & 0x100002600;
            if (v14 || v19 == 0)
              break;
            v1[2] = ++v10;
            if (v11 == v10)
              goto LABEL_29;
          }
          if (v11 == v10)
            goto LABEL_29;
          if (*(_BYTE *)(*v1 + v10) != 44)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v25 = 0;
            v25[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v10 + 1;
        }
        v1[2] = v10 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C21485EC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  _OWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v4)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        for (i = a2(); ; i = a2())
        {
          v27 = i;
          v10 = *a1;
          result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v10;
          if ((result & 1) == 0)
          {
            result = a3(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
            v10 = result;
            *a1 = result;
          }
          v12 = *(_QWORD *)(v10 + 16);
          v11 = *(_QWORD *)(v10 + 24);
          v13 = v12 + 1;
          if (v12 >= v11 >> 1)
          {
            result = a3(v11 > 1, v12 + 1, 1, v10);
            v13 = v12 + 1;
            v10 = result;
          }
          *(_QWORD *)(v10 + 16) = v13;
          *(_QWORD *)(v10 + 8 * v12 + 32) = v27;
          *a1 = v10;
          v15 = v3[1];
          v14 = v3[2];
          if (v14 == v15)
            goto LABEL_28;
          v16 = *v3;
          while (1)
          {
            v17 = *(unsigned __int8 *)(v16 + v14);
            v18 = v17 > 0x20;
            v19 = (1 << v17) & 0x100002600;
            if (v18 || v19 == 0)
              break;
            v3[2] = ++v14;
            if (v15 == v14)
              goto LABEL_28;
          }
          if (v15 == v14)
          {
LABEL_28:
            sub_1C20AFA84();
            swift_allocError();
            *v25 = xmmword_1C2175D80;
            return swift_willThrow();
          }
          v21 = *v3;
          if (*(_BYTE *)(*v3 + v14) == 93)
            break;
          while (1)
          {
            v22 = *(unsigned __int8 *)(v21 + v14);
            v18 = v22 > 0x20;
            v23 = (1 << v22) & 0x100002600;
            if (v18 || v23 == 0)
              break;
            v3[2] = ++v14;
            if (v15 == v14)
              goto LABEL_28;
          }
          if (v15 == v14)
            goto LABEL_28;
          if (*(_BYTE *)(*v3 + v14) != 44)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v26 = 0;
            v26[1] = 0;
            return swift_willThrow();
          }
          v3[2] = v14 + 1;
        }
        v3[2] = v14 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C214881C(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  char *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v25;
  char *v27;
  _OWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        v6 = v1[1];
        v5 = v1[2];
        if (v5 == v6)
        {
          v7 = 13;
        }
        else
        {
          v9 = v6 - 1;
          v7 = 13;
          do
          {
            v10 = *v1;
            while (1)
            {
              v11 = *(unsigned __int8 *)(v10 + v5);
              v12 = v11 > 0x20;
              v13 = (1 << v11) & 0x100002600;
              if (v12 || v13 == 0)
                break;
              v1[2] = ++v5;
              if (v6 == v5)
                goto LABEL_6;
            }
            if (v6 == v5)
              break;
            v30 = v9;
            v15 = *v1;
            v16 = *(unsigned __int8 *)(*v1 + v5);
            if (v16 == 102)
            {
              if ((sub_1C20B2554((uint64_t)&unk_1E7BD7620) & 1) == 0)
                goto LABEL_48;
              v31 = 0;
            }
            else
            {
              if (v16 != 116 || (sub_1C20B2554((uint64_t)&unk_1E7BD7648) & 1) == 0)
              {
LABEL_48:
                v7 = 4;
                break;
              }
              v31 = 1;
            }
            v17 = *a1;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v17;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v17 = sub_1C214E69C(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
              *a1 = v17;
            }
            v20 = *((_QWORD *)v17 + 2);
            v19 = *((_QWORD *)v17 + 3);
            v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              v27 = sub_1C214E69C((char *)(v19 > 1), v20 + 1, 1, v17);
              v21 = v20 + 1;
              v17 = v27;
            }
            *((_QWORD *)v17 + 2) = v21;
            v17[v20 + 32] = v31;
            *a1 = v17;
            v22 = v1[2];
            result = (uint64_t)&unk_1E7BD7620;
            if (v22 == v6)
              goto LABEL_47;
            while (1)
            {
              v23 = *(unsigned __int8 *)(v15 + v22);
              if (v23 > 0x20 || ((1 << v23) & 0x100002600) == 0)
                break;
              v1[2] = ++v22;
              if (v6 == v22)
                goto LABEL_47;
            }
            if (v6 == v22)
            {
LABEL_47:
              sub_1C20AFA84();
              swift_allocError();
              *v28 = xmmword_1C2175D80;
              return swift_willThrow();
            }
            if (v23 == 93)
            {
              v1[2] = v22 + 1;
              return result;
            }
            while (1)
            {
              v25 = *(unsigned __int8 *)(v15 + v22);
              if (v25 > 0x20 || ((1 << v25) & 0x100002600) == 0)
                break;
              v1[2] = ++v22;
              if (v6 == v22)
                goto LABEL_47;
            }
            if (v6 == v22)
              goto LABEL_47;
            if (v25 != 44)
            {
              sub_1C20AFA84();
              swift_allocError();
              *v29 = 0;
              v29[1] = 0;
              return swift_willThrow();
            }
            v5 = v22 + 1;
            v1[2] = v22 + 1;
            v9 = v30;
            v7 = 13;
          }
          while (v30 != v22);
        }
LABEL_6:
        sub_1C20AFA84();
        swift_allocError();
        *v8 = 0;
        v8[1] = v7;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C2148AFC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v33;
  _OWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        v6 = v1[1];
        v5 = v1[2];
        if (v5 == v6)
        {
          v7 = 13;
        }
        else
        {
          v9 = v6 - 1;
          v10 = v6 - 2;
          v7 = 13;
          do
          {
            v11 = *v1;
            while (1)
            {
              v12 = *(unsigned __int8 *)(v11 + v5);
              v13 = v12 > 0x20;
              v14 = (1 << v12) & 0x100002600;
              v15 = v13 || v14 == 0;
              if (v15)
                break;
              v1[2] = ++v5;
              if (v6 == v5)
                goto LABEL_6;
            }
            if (v6 == v5)
              break;
            v16 = *v1;
            if (*(_BYTE *)(*v1 + v5) != 34 || (v17 = v5 + 1, v1[2] = v5 + 1, v9 == v5))
            {
LABEL_63:
              v7 = 5;
              break;
            }
            result = v16 + v5 + 1;
            v18 = *(unsigned __int8 *)result;
            if (v18 != 34)
            {
              v19 = 0;
              v20 = v17;
              while (1)
              {
                v21 = v20 + 1;
                if (v18 == 92)
                {
                  if (v21 == v6 || (v20 += 2, v20 == v6))
                  {
LABEL_62:
                    v1[2] = v6;
                    goto LABEL_63;
                  }
                  v19 = 1;
                }
                else
                {
                  ++v20;
                  if (v21 == v6)
                    goto LABEL_62;
                }
                v18 = *(unsigned __int8 *)(v16 + v20);
                if (v18 == 34)
                {
                  v1[2] = v20;
                  goto LABEL_30;
                }
              }
            }
            v19 = 0;
            v20 = v17;
LABEL_30:
            if (!v16)
              goto LABEL_67;
            v43 = v19;
            v38 = v10;
            v42 = v9;
            if (__OFSUB__(v20, v17))
            {
              __break(1u);
LABEL_67:
              __break(1u);
              return result;
            }
            v22 = sub_1C20AD098((char *)result, v20 - v17);
            v24 = v20 + 1;
            v1[2] = v20 + 1;
            if (!v23)
              goto LABEL_63;
            v45 = v23;
            if ((v43 & 1) != 0)
            {
              v44 = sub_1C20AFD1C((uint64_t)v22, v23);
              v39 = v25;
              swift_bridgeObjectRelease();
              if (!v39)
                goto LABEL_63;
              v45 = v39;
            }
            else
            {
              v44 = (uint64_t)v22;
            }
            v40 = *a1;
            result = swift_isUniquelyReferenced_nonNull_native();
            v26 = v40;
            *a1 = v40;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_1C214E384(0, *(_QWORD *)(v40 + 16) + 1, 1, (char *)v40);
              v26 = result;
              *a1 = result;
            }
            v9 = v42;
            v28 = *(_QWORD *)(v26 + 16);
            v27 = *(_QWORD *)(v26 + 24);
            v29 = v28 + 1;
            if (v28 >= v27 >> 1)
            {
              v41 = v28 + 1;
              v37 = *(_QWORD *)(v26 + 16);
              result = (uint64_t)sub_1C214E384((char *)(v27 > 1), v28 + 1, 1, (char *)v26);
              v28 = v37;
              v29 = v41;
              v9 = v42;
              v26 = result;
            }
            *(_QWORD *)(v26 + 16) = v29;
            v30 = v26 + 16 * v28;
            *(_QWORD *)(v30 + 32) = v44;
            *(_QWORD *)(v30 + 40) = v45;
            *a1 = v26;
            if (v24 == v6)
              goto LABEL_61;
            while (1)
            {
              v31 = *(unsigned __int8 *)(v16 + v24);
              if (v31 > 0x20 || ((1 << v31) & 0x100002600) == 0)
                break;
              v1[2] = ++v24;
              ++v20;
              if (v6 == v24)
                goto LABEL_61;
            }
            if (v6 == v24)
            {
LABEL_61:
              sub_1C20AFA84();
              swift_allocError();
              *v35 = xmmword_1C2175D80;
              return swift_willThrow();
            }
            if (v31 == 93)
            {
              v1[2] = v24 + 1;
              return result;
            }
            while (1)
            {
              v33 = *(unsigned __int8 *)(v16 + 1 + v20);
              if (v33 > 0x20 || ((1 << v33) & 0x100002600) == 0)
                break;
              v1[2] = v20 + 2;
              if (v9 == ++v20)
                goto LABEL_61;
            }
            if (v9 == v20)
              goto LABEL_61;
            if (v33 != 44)
            {
              sub_1C20AFA84();
              swift_allocError();
              *v36 = 0;
              v36[1] = 0;
              return swift_willThrow();
            }
            v5 = v20 + 2;
            v1[2] = v20 + 2;
            v10 = v38;
            v15 = v38 == v20;
            v7 = 13;
          }
          while (!v15);
        }
LABEL_6:
        sub_1C20AFA84();
        swift_allocError();
        *v8 = 0;
        v8[1] = v7;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C2148E88(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t), __n128 a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = a2(*a1, a1[1]);
    *(__n128 *)a1 = a3;
  }
  else
  {
    sub_1C20B061C();
    v8 = v3[1];
    if (v3[2] == v8)
    {
      sub_1C20AFA84();
      swift_allocError();
      *v9 = xmmword_1C2175D80;
      return swift_willThrow();
    }
    else
    {
      result = sub_1C20AF834(*v3, v8, v3 + 2, v3[1]);
      if (!v4)
      {
        v11 = result;
        v12 = v10;
        result = a2(*a1, a1[1]);
        *a1 = v11;
        a1[1] = v12;
      }
    }
  }
  return result;
}

uint64_t sub_1C2148F64(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v28;
  char *v30;
  unint64_t v31;
  char *v32;
  _OWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        v6 = v1 + 2;
        v5 = v1[2];
        v7 = v1[1];
        if (v5 == v7)
        {
LABEL_5:
          sub_1C20AFA84();
          swift_allocError();
          *v8 = xmmword_1C2175D80;
          return swift_willThrow();
        }
        else
        {
          v9 = v7 - 1;
          while (1)
          {
            v10 = *v1;
            while (1)
            {
              v11 = *(unsigned __int8 *)(v10 + v5);
              v12 = v11 > 0x20;
              v13 = (1 << v11) & 0x100002600;
              v14 = v12 || v13 == 0;
              if (v14)
                break;
              *v6 = ++v5;
              if (v7 == v5)
                goto LABEL_5;
            }
            if (v7 == v5)
              goto LABEL_5;
            v15 = *v1;
            v36 = v9;
            v37 = sub_1C20AF834(*v1, v7, v1 + 2, v7);
            v16 = *a1;
            v38 = v17;
            sub_1C20A8008(v37, v17);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v16;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v16 = sub_1C214E784(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
              *a1 = v16;
            }
            v20 = *((_QWORD *)v16 + 2);
            v19 = *((_QWORD *)v16 + 3);
            v21 = v20 + 1;
            v22 = v37;
            v23 = v38;
            if (v20 >= v19 >> 1)
            {
              v30 = v16;
              v31 = *((_QWORD *)v16 + 2);
              v35 = v20 + 1;
              v32 = sub_1C214E784((char *)(v19 > 1), v20 + 1, 1, v30);
              v21 = v35;
              v20 = v31;
              v16 = v32;
              v22 = v37;
              v23 = v38;
            }
            *((_QWORD *)v16 + 2) = v21;
            v24 = &v16[16 * v20];
            *((_QWORD *)v24 + 4) = v22;
            *((_QWORD *)v24 + 5) = v23;
            *a1 = v16;
            v25 = *v6;
            if (*v6 == v7)
              goto LABEL_40;
            while (1)
            {
              v26 = *(unsigned __int8 *)(v15 + v25);
              if (v26 > 0x20 || ((1 << v26) & 0x100002600) == 0)
                break;
              *v6 = ++v25;
              if (v7 == v25)
                goto LABEL_40;
            }
            if (v7 == v25)
            {
LABEL_40:
              sub_1C20AFA84();
              swift_allocError();
              *v33 = xmmword_1C2175D80;
LABEL_41:
              swift_willThrow();
              return sub_1C20A8058(v37, v38);
            }
            if (v26 == 93)
              break;
            while (1)
            {
              v28 = *(unsigned __int8 *)(v15 + v25);
              if (v28 > 0x20 || ((1 << v28) & 0x100002600) == 0)
                break;
              *v6 = ++v25;
              if (v7 == v25)
                goto LABEL_40;
            }
            if (v7 == v25)
              goto LABEL_40;
            if (v28 != 44)
            {
              sub_1C20AFA84();
              swift_allocError();
              *v34 = 0;
              v34[1] = 0;
              goto LABEL_41;
            }
            sub_1C20A8058(v22, v23);
            v5 = v25 + 1;
            *v6 = v25 + 1;
            v14 = v36 == v25;
            v9 = v36;
            if (v14)
              goto LABEL_5;
          }
          result = sub_1C20A8058(v22, v23);
          *v6 = v25 + 1;
        }
      }
    }
  }
  return result;
}

void sub_1C2149238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v7 = sub_1C2175690();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v12 - v10;
  if ((sub_1C20B260C() & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a1, 1, 1, a2);
  }
  else
  {
    sub_1C20B3328(a2, a3, (uint64_t)v11);
    if (!v3)
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v11, 0, 1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v11, v7);
    }
  }
}

void sub_1C2149348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1C20B260C() & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  }
  else
  {
    sub_1C20B3328(a2, a3, (uint64_t)v9);
    if (!v3)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v9, a2);
    }
  }
}

void sub_1C2149430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(_QWORD, _QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  _OWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*i)(_QWORD, _QWORD, _QWORD);

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)&v28 - v12;
  if ((sub_1C20B260C() & 1) == 0)
  {
    sub_1C20B301C(91);
    if (!v4 && (sub_1C20B35D0() & 1) == 0)
    {
      sub_1C20B3328(a2, a3, (uint64_t)v13);
      v14 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
      for (i = v14; ; v14 = i)
      {
        v14(v10, v13, a2);
        sub_1C21755F4();
        sub_1C21755DC();
        v16 = v3[1];
        v15 = v3[2];
        if (v15 == v16)
          goto LABEL_24;
        v17 = *v3;
        while (1)
        {
          v18 = *(unsigned __int8 *)(v17 + v15);
          v19 = v18 > 0x20;
          v20 = (1 << v18) & 0x100002600;
          if (v19 || v20 == 0)
            break;
          v3[2] = ++v15;
          if (v16 == v15)
            goto LABEL_24;
        }
        if (v16 == v15)
        {
LABEL_24:
          sub_1C20AFA84();
          swift_allocError();
          *v26 = xmmword_1C2175D80;
LABEL_25:
          swift_willThrow();
          goto LABEL_26;
        }
        v22 = *v3;
        if (*(_BYTE *)(*v3 + v15) == 93)
          break;
        while (1)
        {
          v23 = *(unsigned __int8 *)(v22 + v15);
          v19 = v23 > 0x20;
          v24 = (1 << v23) & 0x100002600;
          if (v19 || v24 == 0)
            break;
          v3[2] = ++v15;
          if (v16 == v15)
            goto LABEL_24;
        }
        if (v16 == v15)
          goto LABEL_24;
        if (*(_BYTE *)(*v3 + v15) != 44)
        {
          sub_1C20AFA84();
          swift_allocError();
          *v27 = 0;
          v27[1] = 0;
          goto LABEL_25;
        }
        v3[2] = v15 + 1;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, a2);
        sub_1C20B3328(a2, a3, (uint64_t)v13);
      }
      v3[2] = v15 + 1;
LABEL_26:
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, a2);
    }
  }
}

uint64_t sub_1C21496A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  uint64_t result;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _BYTE v34[40];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = v3;
  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = &v34[-v14 - 8];
  v16 = swift_conformsToProtocol2();
  if (v16)
    v17 = v16;
  else
    v17 = 0;
  if (v16)
    v18 = a2;
  else
    v18 = 0;
  if (!v18)
  {
    sub_1C20AFA84();
    swift_allocError();
    v26 = xmmword_1C217BDF0;
LABEL_12:
    *v25 = v26;
    return swift_willThrow();
  }
  v41 = a3;
  v19 = a1;
  (*(void (**)(__int128 *__return_ptr))(v17 + 8))(&v38);
  v33 = v38;
  v20 = v39;
  v21 = v40;
  sub_1C20A8840(v5[11]);
  *(_OWORD *)(v5 + 11) = v33;
  v5[13] = v20;
  v5[14] = v21;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  *(_QWORD *)&v33 = v19;
  v22(v15, v19, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760418);
  if (swift_dynamicCast())
  {
    sub_1C20A8734(&v35, (uint64_t)&v38);
    sub_1C20A84A8((uint64_t)&v38, (uint64_t)&v35);
    v23 = *((_QWORD *)&v36 + 1);
    v24 = v37;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, *((uint64_t *)&v36 + 1));
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v24 + 16))(v5, v23, v24);
    if (v4)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    }
    else
    {
      v32 = v33;
      (*(void (**)(_QWORD, uint64_t))(v9 + 8))(v33, a2);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
      sub_1C20A84A8((uint64_t)&v35, (uint64_t)v34);
      swift_dynamicCast();
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v32, v12, a2);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  v37 = 0;
  v35 = 0u;
  v36 = 0u;
  sub_1C214B760((uint64_t)&v35);
  result = sub_1C20B301C(123);
  if (v4)
    return result;
  v28 = v5[5];
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
    return result;
  }
  v5[5] = v30;
  v31 = v41;
  if (v30 < 0)
  {
    sub_1C20AFA84();
    swift_allocError();
    v26 = xmmword_1C2175DD0;
    goto LABEL_12;
  }
  result = sub_1C20B3234();
  if ((result & 1) == 0)
    return (*(uint64_t (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v31 + 64))(v5, &type metadata for JSONDecoder, &off_1E7BE0150, a2, v31);
  return result;
}

uint64_t sub_1C2149988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 *v3;
  __int128 *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t *boxed_opaque_existential_1;
  char *v42;
  int v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);

  v4 = v3;
  *(_QWORD *)&v44 = a3;
  v7 = sub_1C2175690();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v11 = MEMORY[0x1E0C80A78](v7, v10);
  v12 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)&v44 - v15;
  MEMORY[0x1E0C80A78](v14, v17);
  v56 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v44 - v18);
  if ((sub_1C20B260C() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v16, a1, v7);
    v26 = *(_QWORD *)(a2 - 8);
    v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v27 = v56(v16, 1, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    v28 = a1;
    if (v27 == 1)
    {
      (*(void (**)(uint64_t))(v44 + 16))(a2);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v12, 0, 1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(a1, v12, v7);
    }
    v29 = *((_QWORD *)v4 + 2);
    v30 = *((_QWORD *)v4 + 3);
    v31 = *((_BYTE *)v4 + 48);
    v32 = *((_QWORD *)v4 + 7);
    v33 = *((_BYTE *)v4 + 64);
    v46 = *v4;
    *(_QWORD *)&v47 = v29;
    *((_QWORD *)&v47 + 1) = v30;
    v48 = v4[2];
    v49 = v31;
    v50 = v32;
    v51 = v33;
    v52 = 0;
    v53 = 0;
    v54 = 0u;
    v55 = 0u;
    result = v56((char *)v28, 1, a2);
    if ((_DWORD)result != 1)
    {
      swift_retain();
      v34 = v45;
      sub_1C21496A8(v28, a2, v44);
      if (v34)
      {
        v35 = v54;
        swift_release();
        return sub_1C20A8840(v35);
      }
      else
      {
        v44 = v47;
        v45 = v46;
        v37 = v48;
        v38 = v49;
        sub_1C20A8840(v54);
        result = swift_release();
        v39 = v44;
        *v4 = v45;
        v4[1] = v39;
        v4[2] = v37;
        *((_BYTE *)v4 + 48) = v38;
      }
      return result;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  *(_QWORD *)&v44 = a1;
  result = swift_conformsToProtocol2();
  if (result)
    v21 = a2;
  else
    v21 = 0;
  if (!v21)
  {
    v36 = v44;
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(v44, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v36, 1, 1, a2);
  }
  v22 = result;
  v23 = v45;
  if (!result)
    goto LABEL_22;
  MEMORY[0x1E0C80A78](result, v20);
  v24 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v25(a2, v22);
  if (!v23)
  {
    v40 = *(_QWORD *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v24, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v7);
      *(_QWORD *)&v48 = 0;
      v46 = 0u;
      v47 = 0u;
    }
    else
    {
      *((_QWORD *)&v47 + 1) = a2;
      *(_QWORD *)&v48 = v22;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
      (*(void (**)(uint64_t *, char *, uint64_t))(v40 + 32))(boxed_opaque_existential_1, v24, a2);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760420);
    v42 = (char *)v56;
    v43 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v42, v43 ^ 1u, 1, a2);
    return (*(uint64_t (**)(_QWORD, char *, uint64_t))(v8 + 40))(v44, v42, v7);
  }
  return result;
}

uint64_t sub_1C2149D54()
{
  _OWORD *v0;

  sub_1C20AFA84();
  swift_allocError();
  *v0 = xmmword_1C2179800;
  return swift_willThrow();
}

uint64_t sub_1C2149DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int128 *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;

  v7 = v5;
  v63 = a1;
  v64 = *(_QWORD *)(a5 + 8);
  v65 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v68 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v62 = (char *)&v57 - v12;
  v69 = *(_QWORD *)(a4 + 8);
  v70 = a2;
  v13 = swift_getAssociatedTypeWitness();
  v74 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v61 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v17);
  v73 = (char *)&v57 - v18;
  v19 = sub_1C2175690();
  v66 = *(_QWORD *)(v19 - 8);
  v67 = v19;
  v21 = MEMORY[0x1E0C80A78](v19, v20);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v21, v24);
  v27 = (char *)&v57 - v26;
  MEMORY[0x1E0C80A78](v25, v28);
  v30 = (char *)&v57 - v29;
  v31 = sub_1C2175690();
  v71 = *(_QWORD *)(v31 - 8);
  v72 = v31;
  v33 = MEMORY[0x1E0C80A78](v31, v32);
  v35 = (char *)&v57 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33, v36);
  v75 = (char *)&v57 - v37;
  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(123);
    if (!v6)
    {
      v39 = *(_QWORD *)(v7 + 40);
      v40 = __OFSUB__(v39, 1);
      v41 = v39 - 1;
      if (v40)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v7 + 40) = v41;
        if (v41 < 0)
        {
          sub_1C20AFA84();
          swift_allocError();
          v51 = xmmword_1C2175DD0;
LABEL_17:
          *v50 = v51;
          return swift_willThrow();
        }
        result = sub_1C20B3234();
        if ((result & 1) == 0)
        {
          v42 = sub_1C20B0664();
          v44 = v43;
          v58 = v27;
          v59 = v30;
          while (1)
          {
            if (v42 == 34 && v44 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              LODWORD(v60) = sub_1C21757C8();
              swift_bridgeObjectRelease();
              if ((v60 & 1) == 0)
              {
                sub_1C20AFA84();
                swift_allocError();
                v51 = xmmword_1C217BE00;
                goto LABEL_17;
              }
            }
            *(_BYTE *)(v7 + 80) = 1;
            v45 = v75;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v75, 1, 1, v13);
            (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v69 + 32))(v45, v7, &type metadata for JSONDecoder, &off_1E7BE0150);
            *(_BYTE *)(v7 + 80) = 0;
            sub_1C20B301C(58);
            v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
            v60(v30, 1, 1, AssociatedTypeWitness);
            (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v64 + 32))(v30, v7, &type metadata for JSONDecoder, &off_1E7BE0150);
            (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v35, v75, v72);
            v46 = v74;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v35, 1, v13) == 1)
            {
              v53 = v71;
              v52 = v72;
              (*(void (**)(char *, uint64_t))(v71 + 8))(v35, v72);
              v55 = v66;
              v54 = v67;
LABEL_20:
              sub_1C20AFA84();
              swift_allocError();
              *v56 = xmmword_1C217BE10;
              swift_willThrow();
              (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v54);
              return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v75, v52);
            }
            (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v73, v35, v13);
            (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v27, v30, v67);
            v47 = v68;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v27, 1, AssociatedTypeWitness) == 1)
            {
              (*(void (**)(char *, uint64_t))(v46 + 8))(v73, v13);
              v55 = v66;
              v54 = v67;
              (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v67);
              v53 = v71;
              v52 = v72;
              v30 = v59;
              goto LABEL_20;
            }
            v48 = v62;
            (*(void (**)(void))(v47 + 32))();
            (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v61, v73, v13);
            (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v23, v48, AssociatedTypeWitness);
            v60(v23, 0, 1, AssociatedTypeWitness);
            swift_getAssociatedConformanceWitness();
            sub_1C21753E4();
            sub_1C21753FC();
            (*(void (**)(char *, uint64_t))(v47 + 8))(v48, AssociatedTypeWitness);
            (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v13);
            if ((sub_1C20B3234() & 1) != 0)
            {
              (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v67);
              return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v75, v72);
            }
            sub_1C20B301C(44);
            v30 = v59;
            (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v67);
            (*(void (**)(char *, uint64_t))(v71 + 8))(v75, v72);
            v42 = sub_1C20B0664();
            v44 = v49;
            v27 = v58;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C214A3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __int128 *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;

  v7 = v5;
  v64 = a1;
  v65 = a5;
  v68 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v63 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(v10 + 8);
  v70 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v75 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v62 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v16);
  v73 = (char *)&v59 - v17;
  v18 = sub_1C2175690();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v20, v23);
  v26 = (char *)&v59 - v25;
  MEMORY[0x1E0C80A78](v24, v27);
  v74 = (char *)&v59 - v28;
  v29 = sub_1C2175690();
  v71 = *(_QWORD *)(v29 - 8);
  v72 = v29;
  v31 = MEMORY[0x1E0C80A78](v29, v30);
  v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31, v34);
  v36 = (char *)&v59 - v35;
  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(123);
    if (!v6)
    {
      v38 = *(_QWORD *)(v5 + 40);
      v39 = __OFSUB__(v38, 1);
      v40 = v38 - 1;
      if (v39)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v5 + 40) = v40;
      if (v40 < 0)
      {
        sub_1C20AFA84();
        swift_allocError();
        v50 = xmmword_1C2175DD0;
        goto LABEL_17;
      }
      result = sub_1C20B3234();
      if ((result & 1) == 0)
      {
        v41 = sub_1C20B0664();
        v43 = v42;
        v59 = v26;
        v60 = v36;
        while (1)
        {
          if (v41 == 34 && v43 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            LODWORD(v61) = sub_1C21757C8();
            swift_bridgeObjectRelease();
            if ((v61 & 1) == 0)
            {
              sub_1C20AFA84();
              swift_allocError();
              v50 = xmmword_1C217BE00;
LABEL_17:
              *v49 = v50;
              return swift_willThrow();
            }
          }
          *(_BYTE *)(v7 + 80) = 1;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v36, 1, 1, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v69 + 32))(v36, v7, &type metadata for JSONDecoder, &off_1E7BE0150);
          *(_BYTE *)(v7 + 80) = 0;
          sub_1C20B301C(58);
          v44 = (uint64_t)v74;
          v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
          v61(v74, 1, 1, a3);
          sub_1C2149238(v44, a3, v65);
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v33, v36, v72);
          v45 = v75;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v33, 1, AssociatedTypeWitness) == 1)
          {
            v52 = v71;
            v51 = v72;
            (*(void (**)(char *, uint64_t))(v71 + 8))(v33, v72);
            v54 = v66;
            v53 = v67;
LABEL_20:
            sub_1C20AFA84();
            swift_allocError();
            *v55 = xmmword_1C217BE10;
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v54 + 8))(v74, v53);
            v56 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
            v57 = v36;
            v58 = v51;
            return v56(v57, v58);
          }
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v73, v33, AssociatedTypeWitness);
          (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v26, v74, v67);
          v46 = v68;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v26, 1, a3) == 1)
          {
            (*(void (**)(char *, uint64_t))(v45 + 8))(v73, AssociatedTypeWitness);
            v54 = v66;
            v53 = v67;
            (*(void (**)(char *, uint64_t))(v66 + 8))(v26, v67);
            v52 = v71;
            v51 = v72;
            v36 = v60;
            goto LABEL_20;
          }
          v47 = v63;
          (*(void (**)(void))(v46 + 32))();
          (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v62, v73, AssociatedTypeWitness);
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v22, v47, a3);
          v61(v22, 0, 1, a3);
          swift_getAssociatedConformanceWitness();
          sub_1C21753E4();
          sub_1C21753FC();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v47, a3);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v73, AssociatedTypeWitness);
          if ((sub_1C20B3234() & 1) != 0)
          {
            (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v67);
            v56 = *(uint64_t (**)(char *, uint64_t))(v71 + 8);
            v57 = v60;
            v58 = v72;
            return v56(v57, v58);
          }
          sub_1C20B301C(44);
          v36 = v60;
          (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v67);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v36, v72);
          v41 = sub_1C20B0664();
          v43 = v48;
          v26 = v59;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C214AA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __int128 *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;

  v7 = v5;
  v64 = a1;
  v65 = a5;
  v68 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v63 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(v10 + 8);
  v70 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v75 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v62 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v16);
  v73 = (char *)&v59 - v17;
  v18 = sub_1C2175690();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  v20 = MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v20, v23);
  v26 = (char *)&v59 - v25;
  MEMORY[0x1E0C80A78](v24, v27);
  v74 = (char *)&v59 - v28;
  v29 = sub_1C2175690();
  v71 = *(_QWORD *)(v29 - 8);
  v72 = v29;
  v31 = MEMORY[0x1E0C80A78](v29, v30);
  v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31, v34);
  v36 = (char *)&v59 - v35;
  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(123);
    if (!v6)
    {
      v38 = *(_QWORD *)(v5 + 40);
      v39 = __OFSUB__(v38, 1);
      v40 = v38 - 1;
      if (v39)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v5 + 40) = v40;
      if (v40 < 0)
      {
        sub_1C20AFA84();
        swift_allocError();
        v50 = xmmword_1C2175DD0;
        goto LABEL_17;
      }
      result = sub_1C20B3234();
      if ((result & 1) == 0)
      {
        v41 = sub_1C20B0664();
        v43 = v42;
        v59 = v26;
        v60 = v36;
        while (1)
        {
          if (v41 == 34 && v43 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            LODWORD(v61) = sub_1C21757C8();
            swift_bridgeObjectRelease();
            if ((v61 & 1) == 0)
            {
              sub_1C20AFA84();
              swift_allocError();
              v50 = xmmword_1C217BE00;
LABEL_17:
              *v49 = v50;
              return swift_willThrow();
            }
          }
          *(_BYTE *)(v7 + 80) = 1;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v36, 1, 1, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v69 + 32))(v36, v7, &type metadata for JSONDecoder, &off_1E7BE0150);
          *(_BYTE *)(v7 + 80) = 0;
          sub_1C20B301C(58);
          v44 = (uint64_t)v74;
          v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
          v61(v74, 1, 1, a3);
          sub_1C2149988(v44, a3, v65);
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v33, v36, v72);
          v45 = v75;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v33, 1, AssociatedTypeWitness) == 1)
          {
            v52 = v71;
            v51 = v72;
            (*(void (**)(char *, uint64_t))(v71 + 8))(v33, v72);
            v54 = v66;
            v53 = v67;
LABEL_20:
            sub_1C20AFA84();
            swift_allocError();
            *v55 = xmmword_1C217BE10;
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v54 + 8))(v74, v53);
            v56 = *(uint64_t (**)(char *, uint64_t))(v52 + 8);
            v57 = v36;
            v58 = v51;
            return v56(v57, v58);
          }
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v73, v33, AssociatedTypeWitness);
          (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v26, v74, v67);
          v46 = v68;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v26, 1, a3) == 1)
          {
            (*(void (**)(char *, uint64_t))(v45 + 8))(v73, AssociatedTypeWitness);
            v54 = v66;
            v53 = v67;
            (*(void (**)(char *, uint64_t))(v66 + 8))(v26, v67);
            v52 = v71;
            v51 = v72;
            v36 = v60;
            goto LABEL_20;
          }
          v47 = v63;
          (*(void (**)(void))(v46 + 32))();
          (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v62, v73, AssociatedTypeWitness);
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v22, v47, a3);
          v61(v22, 0, 1, a3);
          swift_getAssociatedConformanceWitness();
          sub_1C21753E4();
          sub_1C21753FC();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v47, a3);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v73, AssociatedTypeWitness);
          if ((sub_1C20B3234() & 1) != 0)
          {
            (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v67);
            v56 = *(uint64_t (**)(char *, uint64_t))(v71 + 8);
            v57 = v60;
            v58 = v72;
            return v56(v57, v58);
          }
          sub_1C20B301C(44);
          v36 = v60;
          (*(void (**)(char *, uint64_t))(v66 + 8))(v74, v67);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v36, v72);
          v41 = sub_1C20B0664();
          v43 = v48;
          v26 = v59;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C214B044()
{
  _OWORD *v0;

  sub_1C20AFA84();
  swift_allocError();
  *v0 = xmmword_1C217BE20;
  return swift_willThrow();
}

uint64_t sub_1C214B094()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1C2147B8C();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1C214B0B4(_DWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  int v4;

  result = sub_1C20B260C();
  v4 = 0;
  if ((result & 1) != 0 || (result = sub_1C20B15EC(), !v1))
    *a1 = v4;
  return result;
}

uint64_t sub_1C214B0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char v4;
  int v5;

  result = sub_1C20B260C();
  v4 = result;
  v5 = 0;
  if ((result & 1) != 0 || (result = sub_1C20B15EC(), !v1))
  {
    *(_DWORD *)a1 = v5;
    *(_BYTE *)(a1 + 4) = v4 & 1;
  }
  return result;
}

uint64_t sub_1C214B150(uint64_t *a1)
{
  return sub_1C2147C40(a1);
}

uint64_t sub_1C214B164(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C20B260C();
  v4 = 0;
  if ((result & 1) != 0 || (result = sub_1C20B1DA8(), !v1))
    *a1 = v4;
  return result;
}

uint64_t sub_1C214B1A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char v4;
  uint64_t v5;

  result = sub_1C20B260C();
  v4 = result;
  v5 = 0;
  if ((result & 1) != 0 || (result = sub_1C20B1DA8(), !v1))
  {
    *(_QWORD *)a1 = v5;
    *(_BYTE *)(a1 + 8) = v4 & 1;
  }
  return result;
}

uint64_t sub_1C214B200(uint64_t *a1)
{
  return sub_1C2147E70(a1);
}

uint64_t sub_1C214B214(_DWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  _OWORD *v4;

  result = sub_1C20B260C();
  if ((result & 1) != 0)
  {
    *a1 = 0;
  }
  else
  {
    result = (uint64_t)sub_1C20B1098();
    if (!v1)
    {
      if (result == (int)result)
      {
        *a1 = result;
      }
      else
      {
        sub_1C20AFA84();
        swift_allocError();
        *v4 = xmmword_1C2175D90;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C214B29C(uint64_t a1)
{
  return sub_1C21480A0(a1);
}

uint64_t sub_1C214B2B0(uint64_t *a1)
{
  return sub_1C2148134(a1);
}

uint64_t sub_1C214B2C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214B46C(a1, a2, a3, (uint64_t (*)(void))sub_1C20B1098);
}

uint64_t sub_1C214B2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214B4DC(a1, a2, a3, (uint64_t (*)(void))sub_1C20B1098);
}

uint64_t sub_1C214B2FC(uint64_t *a1)
{
  return sub_1C21485EC(a1, (uint64_t (*)(void))sub_1C20B1098, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C214E988);
}

unint64_t sub_1C214B320(_DWORD *a1)
{
  uint64_t v1;
  unint64_t result;
  _OWORD *v4;

  result = sub_1C20B260C();
  if ((result & 1) != 0)
  {
    *a1 = 0;
  }
  else
  {
    result = (unint64_t)sub_1C20B0F84();
    if (!v1)
    {
      if (HIDWORD(result))
      {
        sub_1C20AFA84();
        swift_allocError();
        *v4 = xmmword_1C2175D90;
        return swift_willThrow();
      }
      else
      {
        *a1 = result;
      }
    }
  }
  return result;
}

unint64_t sub_1C214B3A8(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;
  _OWORD *v4;

  result = sub_1C20B260C();
  if ((result & 1) != 0)
  {
    *(_DWORD *)a1 = 0;
    *(_BYTE *)(a1 + 4) = 1;
  }
  else
  {
    result = (unint64_t)sub_1C20B0F84();
    if (!v1)
    {
      if (HIDWORD(result))
      {
        sub_1C20AFA84();
        swift_allocError();
        *v4 = xmmword_1C2175D90;
        return swift_willThrow();
      }
      else
      {
        *(_DWORD *)a1 = result;
        *(_BYTE *)(a1 + 4) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C214B43C(uint64_t *a1)
{
  return sub_1C2148390(a1);
}

uint64_t sub_1C214B450(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214B46C(a1, a2, a3, (uint64_t (*)(void))sub_1C20B0F84);
}

uint64_t sub_1C214B46C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = a4();
    if (v4)
      return result;
  }
  *a1 = result;
  return result;
}

uint64_t sub_1C214B4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214B4DC(a1, a2, a3, (uint64_t (*)(void))sub_1C20B0F84);
}

uint64_t sub_1C214B4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  char v7;
  uint64_t result;

  v7 = sub_1C20B260C();
  if ((v7 & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = a4();
    if (v4)
      return result;
  }
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v7 & 1;
  return result;
}

uint64_t sub_1C214B53C(uint64_t *a1)
{
  return sub_1C21485EC(a1, (uint64_t (*)(void))sub_1C20B0F84, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C214EB8C);
}

uint64_t sub_1C214B560(_DWORD *a1)
{
  return sub_1C214B214(a1);
}

uint64_t sub_1C214B574(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214B5A4(a1, a2, a3, 0);
}

uint64_t sub_1C214B58C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214B5A4(a1, a2, a3, 2);
}

uint64_t sub_1C214B5A4(_BYTE *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = sub_1C20B260C();
  if ((result & 1) != 0)
  {
    *a1 = a4;
    return result;
  }
  if ((*(_BYTE *)(v4 + 80) & 1) != 0)
  {
    result = sub_1C20B2774();
    if (v5)
      return result;
  }
  else
  {
    result = sub_1C20B267C();
    if (v5)
      return result;
  }
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C214B618(char **a1)
{
  return sub_1C214881C(a1);
}

uint64_t sub_1C214B62C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    *a1 = 0;
    a1[1] = 0xE000000000000000;
  }
  else
  {
    result = (uint64_t)sub_1C20B0FD4();
    if (!v1)
    {
      v5 = result;
      v6 = v4;
      result = swift_bridgeObjectRelease();
      *a1 = v5;
      a1[1] = v6;
    }
  }
  return result;
}

uint64_t sub_1C214B698(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    *a1 = 0;
    a1[1] = 0;
  }
  else
  {
    result = (uint64_t)sub_1C20B0FD4();
    if (!v1)
    {
      v5 = result;
      v6 = v4;
      result = swift_bridgeObjectRelease();
      *a1 = v5;
      a1[1] = v6;
    }
  }
  return result;
}

uint64_t sub_1C214B704(uint64_t *a1)
{
  return sub_1C2148AFC(a1);
}

uint64_t sub_1C214B718(uint64_t *a1)
{
  return sub_1C2148E88(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C20A8058, (__n128)xmmword_1C2175DE0);
}

uint64_t sub_1C214B73C(uint64_t *a1)
{
  return sub_1C2148E88(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C20AE1C8, (__n128)xmmword_1C2177160);
}

uint64_t sub_1C214B760(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760420);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for JSONDecoder(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = *(_QWORD *)(a1 + 88);
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for JSONDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = (_OWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 88);
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 96);
    v8 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 88) = v5;
    *(_QWORD *)(a1 + 96) = v7;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v8;
    *(_QWORD *)(a1 + 112) = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = v6[1];
    *(_OWORD *)(a1 + 88) = *v6;
    *(_OWORD *)(a1 + 104) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for JSONDecoder(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = (_OWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 88);
  if (v5)
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 88) = v6;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2122D14(a1 + 88);
      v8 = *(_OWORD *)(a2 + 104);
      *v4 = *v7;
      *(_OWORD *)(a1 + 104) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = v6;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 104);
    *v4 = *v7;
    *(_OWORD *)(a1 + 104) = v9;
  }
  return a1;
}

uint64_t assignWithTake for JSONDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_1C2122D14(a1 + 88);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v7;
    return a1;
  }
  *(_QWORD *)(a1 + 88) = v5;
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONDecoder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONDecoder()
{
  return &type metadata for JSONDecoder;
}

uint64_t sub_1C214BBAC(char **a1)
{
  return sub_1C2148F64(a1);
}

void sub_1C214BBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2149348(a1, a2, a3);
}

void sub_1C214BBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2149238(a1, a2, a3);
}

void sub_1C214BBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2149430(a1, a2, a3);
}

uint64_t sub_1C214BBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2149988(a1, a2, a3);
}

uint64_t sub_1C214BC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2147520(a1, a2, a3);
}

uint64_t sub_1C214BC24()
{
  return sub_1C2149D54();
}

uint64_t sub_1C214BC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2149DA4(a1, a2, a3, a4, a5);
}

uint64_t sub_1C214BC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C214A3F4(a1, a2, a3, a4, a5);
}

uint64_t sub_1C214BC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C214AA1C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C214BC74(uint64_t *a1)
{
  return sub_1C214B2B0(a1);
}

uint64_t sub_1C214BC88(uint64_t *a1)
{
  return sub_1C214B2FC(a1);
}

uint64_t sub_1C214BC9C(uint64_t a1, unint64_t a2)
{
  char **v2;
  uint64_t v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;

  v5 = swift_bridgeObjectRetain();
  sub_1C20AA5B0(v5);
  v6 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    *v2 = v6;
  }
  v9 = *((_QWORD *)v6 + 2);
  v8 = *((_QWORD *)v6 + 3);
  if (v9 >= v8 >> 1)
    v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v9 + 1;
  v6[v9 + 32] = 91;
  *v2 = v6;
  swift_bridgeObjectRetain();
  sub_1C20AA79C(a1, a2);
  v10 = (uint64_t)*v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = (char *)v10;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
    v10 = result;
    *v2 = (char *)result;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    v10 = result;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  *(_BYTE *)(v10 + v13 + 32) = 93;
  *v2 = (char *)v10;
  return result;
}

uint64_t sub_1C214BDE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v1 + 16) + 1, 1, (char *)v1);
    v1 = result;
    *v0 = result;
  }
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  if (v4 >= v3 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v3 > 1), v4 + 1, 1, (char *)v1);
    v1 = result;
  }
  *(_QWORD *)(v1 + 16) = v4 + 1;
  *(_BYTE *)(v1 + v4 + 32) = 10;
  *v0 = v1;
  return result;
}

void sub_1C214BE80(uint64_t a1, uint64_t a2)
{
  char **v2;
  char *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v4 = sub_1C214E1A4(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
    *v2 = v4;
  }
  v7 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 3);
  if (v7 >= v6 >> 1)
    v4 = sub_1C214E1A4((char *)(v6 > 1), v7 + 1, 1, v4);
  *((_QWORD *)v4 + 2) = v7 + 1;
  v4[v7 + 32] = 34;
  *v2 = v4;
  __asm { BR              X10 }
}

uint64_t sub_1C214C12C(float a1)
{
  const char *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  if ((~LODWORD(a1) & 0x7F800000) != 0)
  {
    v2 = sub_1C2175624();
    return sub_1C20AA79C(v2, v3);
  }
  if ((LODWORD(a1) & 0x7FFFFF) != 0)
  {
    v1 = "nan";
LABEL_9:
    v5 = 3;
    return sub_1C20A9EB4((uint64_t)v1, v5, (unsigned __int8 *)LODWORD(a1));
  }
  if (a1 >= 0.0)
  {
    v1 = "inf";
    goto LABEL_9;
  }
  v1 = "-inf";
  v5 = 4;
  return sub_1C20A9EB4((uint64_t)v1, v5, (unsigned __int8 *)LODWORD(a1));
}

uint64_t sub_1C214C194(double a1)
{
  const char *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0)
  {
    v2 = sub_1C2175618();
    return sub_1C20AA79C(v2, v3);
  }
  if ((*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) != 0)
  {
    v1 = "nan";
LABEL_9:
    v5 = 3;
    return sub_1C20A9EB4((uint64_t)v1, v5, *(unsigned __int8 **)&a1);
  }
  if (a1 >= 0.0)
  {
    v1 = "inf";
    goto LABEL_9;
  }
  v1 = "-inf";
  v5 = 4;
  return sub_1C20A9EB4((uint64_t)v1, v5, *(unsigned __int8 **)&a1);
}

uint64_t sub_1C214C1FC(unint64_t a1)
{
  char **v1;
  unint64_t v2;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;

  v2 = a1;
  if ((a1 & 0x8000000000000000) != 0)
  {
    v3 = *v1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v1 = v3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      *v1 = v3;
    }
    v6 = *((_QWORD *)v3 + 2);
    v5 = *((_QWORD *)v3 + 3);
    if (v6 >= v5 >> 1)
      v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
    *((_QWORD *)v3 + 2) = v6 + 1;
    v3[v6 + 32] = 45;
    *v1 = v3;
    v2 = -(uint64_t)v2;
  }
  return sub_1C214C444(v2);
}

uint64_t sub_1C214C31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char **v3;
  char **v4;
  unint64_t v7;
  unint64_t v8;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  _BYTE v18[40];
  uint64_t v19[4];
  unsigned __int8 v20;

  v4 = v3;
  sub_1C20B7A9C(a2, a3, (uint64_t)v18);
  sub_1C20CC5FC((uint64_t)v18, (uint64_t)v19);
  if (v20 == 255)
  {
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
    v8 = v7;
    if ((v7 & 0x8000000000000000) != 0)
    {
      v10 = *v4;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v4 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v10 = sub_1C214E1A4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        *v4 = v10;
      }
      v12 = *((_QWORD *)v10 + 2);
      v13 = *((_QWORD *)v10 + 3);
      v14 = v12 + 1;
      if (v12 >= v13 >> 1)
      {
        v15 = v10;
        v16 = *((_QWORD *)v10 + 2);
        v17 = sub_1C214E1A4((char *)(v13 > 1), v12 + 1, 1, v15);
        v12 = v16;
        v10 = v17;
      }
      *((_QWORD *)v10 + 2) = v14;
      v10[v12 + 32] = 45;
      *v4 = v10;
      v7 = -(uint64_t)v8;
    }
    return sub_1C214C444(v7);
  }
  else
  {
    sub_1C20A9EB4(v19[0], v19[1], (unsigned __int8 *)v20);
    return sub_1C20CC680((uint64_t)v18);
  }
}

uint64_t sub_1C214C444(unint64_t a1)
{
  char **v1;
  char *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;

  if (a1 >= 0x3E8)
  {
    sub_1C214C444(a1 / 0x3E8);
  }
  else if (a1 < 0x64)
  {
    v3 = *v1;
    if (a1 < 0xA)
      goto LABEL_16;
    goto LABEL_11;
  }
  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    *v1 = v3;
  }
  v6 = *((_QWORD *)v3 + 2);
  v5 = *((_QWORD *)v3 + 3);
  if (v6 >= v5 >> 1)
    v3 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v6 + 1;
  v3[v6 + 32] = (a1 / 0x64 - 10 * ((a1 / 0x64 * (unsigned __int128)0x199999999999999AuLL) >> 64)) | 0x30;
  *v1 = v3;
LABEL_11:
  v7 = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((v7 & 1) == 0)
  {
    v3 = sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    *v1 = v3;
  }
  v9 = *((_QWORD *)v3 + 2);
  v8 = *((_QWORD *)v3 + 3);
  if (v9 >= v8 >> 1)
    v3 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v9 + 1;
  v3[v9 + 32] = (a1 / 0xA - 10 * ((a1 / 0xA * (unsigned __int128)0x199999999999999AuLL) >> 64)) | 0x30;
  *v1 = v3;
LABEL_16:
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
    v3 = (char *)result;
    *v1 = (char *)result;
  }
  v12 = *((_QWORD *)v3 + 2);
  v11 = *((_QWORD *)v3 + 3);
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v3);
    v3 = (char *)result;
  }
  *((_QWORD *)v3 + 2) = v12 + 1;
  v3[v12 + 32] = (a1 % 0xA) | 0x30;
  *v1 = v3;
  return result;
}

uint64_t sub_1C214C690@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;

  if (!a2)
    return sub_1C20A9EB4((uint64_t)"0x", 2, a3);
  v6 = __OFSUB__(a2, 1);
  v7 = a2 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v8 = a1;
    sub_1C214C690(a1 >> 4, v7);
    if ((v8 & 0xFu) >= 0xA)
      v5 = (v8 & 0xF) + 55;
    else
      v5 = v8 & 0xF | 0x30;
    v3 = *v4;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v4 = v3;
    if ((result & 1) != 0)
      goto LABEL_7;
  }
  result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v3 + 16) + 1, 1, (char *)v3);
  v3 = result;
  *v4 = result;
LABEL_7:
  v11 = *(_QWORD *)(v3 + 16);
  v10 = *(_QWORD *)(v3 + 24);
  if (v11 >= v10 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v10 > 1), v11 + 1, 1, (char *)v3);
    v3 = result;
  }
  *(_QWORD *)(v3 + 16) = v11 + 1;
  *(_BYTE *)(v3 + v11 + 32) = v5;
  *v4 = v3;
  return result;
}

uint64_t sub_1C214C784(uint64_t result, uint64_t a2, uint64_t *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  const char *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  if (result)
  {
    v3 = (unsigned __int8 *)result;
    v4 = a2 - result;
    if (a2 - result >= 1)
    {
      while (2)
      {
        v8 = *v3++;
        v7 = v8;
        v9 = (unsigned __int8 *)(v8 - 8);
        switch(v8)
        {
          case 8u:
            v6 = "\\b";
            goto LABEL_5;
          case 9u:
            v6 = "\\t";
            goto LABEL_5;
          case 0xAu:
            v6 = "\\n";
            goto LABEL_5;
          case 0xBu:
            v6 = "\\v";
            goto LABEL_5;
          case 0xCu:
            v6 = "\\f";
            goto LABEL_5;
          case 0xDu:
            v6 = "\\r";
            goto LABEL_5;
          case 0xEu:
          case 0xFu:
          case 0x10u:
          case 0x11u:
          case 0x12u:
          case 0x13u:
          case 0x14u:
          case 0x15u:
          case 0x16u:
          case 0x17u:
          case 0x18u:
          case 0x19u:
          case 0x1Au:
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x1Eu:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
            goto LABEL_11;
          case 0x22u:
            v6 = "\\\"";
            goto LABEL_5;
          default:
            if (v7 == 92)
            {
              v6 = "\\\\";
LABEL_5:
              result = sub_1C20A9EB4((uint64_t)v6, 2, v9);
            }
            else
            {
LABEL_11:
              v10 = *a3;
              result = swift_isUniquelyReferenced_nonNull_native();
              *a3 = v10;
              if (v7 - 127 >= 0xFFFFFFA1)
              {
                if ((result & 1) == 0)
                {
                  result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
                  v10 = result;
                  *a3 = result;
                }
                v20 = *(_QWORD *)(v10 + 16);
                v19 = *(_QWORD *)(v10 + 24);
                if (v20 >= v19 >> 1)
                {
                  result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, (char *)v10);
                  v10 = result;
                }
                *(_QWORD *)(v10 + 16) = v20 + 1;
                *(_BYTE *)(v10 + v20 + 32) = v7;
                *a3 = v10;
              }
              else
              {
                if ((result & 1) == 0)
                {
                  result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
                  v10 = result;
                  *a3 = result;
                }
                v12 = *(_QWORD *)(v10 + 16);
                v11 = *(_QWORD *)(v10 + 24);
                v13 = v12 + 1;
                if (v12 >= v11 >> 1)
                {
                  result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, (char *)v10);
                  v10 = result;
                }
                *(_QWORD *)(v10 + 16) = v13;
                *(_BYTE *)(v10 + v12 + 32) = 92;
                *a3 = v10;
                v14 = *(_QWORD *)(v10 + 24);
                v15 = v12 + 2;
                if ((uint64_t)(v12 + 2) > (uint64_t)(v14 >> 1))
                {
                  result = (uint64_t)sub_1C214E1A4((char *)(v14 > 1), v12 + 2, 1, (char *)v10);
                  v10 = result;
                }
                *(_QWORD *)(v10 + 16) = v15;
                *(_BYTE *)(v10 + v13 + 32) = (v7 >> 6) | 0x30;
                *a3 = v10;
                v16 = *(_QWORD *)(v10 + 24);
                v17 = v12 + 3;
                if ((uint64_t)(v12 + 3) > (uint64_t)(v16 >> 1))
                {
                  result = (uint64_t)sub_1C214E1A4((char *)(v16 > 1), v12 + 3, 1, (char *)v10);
                  v10 = result;
                }
                *(_QWORD *)(v10 + 16) = v17;
                *(_BYTE *)(v10 + v15 + 32) = (v7 >> 3) & 7 | 0x30;
                *a3 = v10;
                v18 = *(_QWORD *)(v10 + 24);
                if ((uint64_t)(v12 + 4) > (uint64_t)(v18 >> 1))
                {
                  result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v12 + 4, 1, (char *)v10);
                  v10 = result;
                }
                *(_QWORD *)(v10 + 16) = v12 + 4;
                *(_BYTE *)(v10 + v17 + 32) = v7 & 7 | 0x30;
                *a3 = v10;
              }
            }
            if (--v4)
              continue;
            return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C214CA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1C21752C4();
  v8 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_1C21752DC();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  return sub_1C214C784(v8, v14, a4);
}

uint64_t destroy for TextFormatEncoder()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s20SiriOntologyProtobuf17TextFormatEncoderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TextFormatEncoder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for TextFormatEncoder(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatEncoder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatEncoder()
{
  return &type metadata for TextFormatEncoder;
}

double Google_Protobuf_Duration.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_Duration.seconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Google_Protobuf_Duration.seconds.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_Duration.seconds.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Duration.nanos.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t Google_Protobuf_Duration.nanos.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Google_Protobuf_Duration.nanos.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Duration.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Duration.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Duration.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

unint64_t static Google_Protobuf_Duration.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1C214CD40()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD74F0, &qword_1EF760428);
}

uint64_t static Google_Protobuf_Duration._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD50 != -1)
    swift_once();
  v2 = unk_1EF760430;
  v3 = qword_1EF760438;
  v4 = unk_1EF760440;
  *a1 = qword_1EF760428;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Duration.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 8, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(v3, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

__n128 Google_Protobuf_Duration.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  __n128 result;

  v7 = *(unsigned int *)(v3 + 8);
  if (!*(_QWORD *)v3
    || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 32))(*(_QWORD *)v3, 1, a2, a3), !v4))
  {
    if (!(_DWORD)v7 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v7, 2, a2, a3), !v4))
      UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t Google_Protobuf_Duration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = *((unsigned int *)v0 + 2);
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE21C(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

unint64_t sub_1C214CF7C()
{
  return 0xD000000000000018;
}

uint64_t sub_1C214CF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Duration.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C214CFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = Google_Protobuf_Duration.traverse<A>(visitor:)(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t sub_1C214CFC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD50 != -1)
    swift_once();
  v2 = unk_1EF760430;
  v3 = qword_1EF760438;
  v4 = unk_1EF760440;
  *a1 = qword_1EF760428;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C214D03C()
{
  uint64_t v0;

  return sub_1C215A49C(*(_QWORD *)v0, *(_DWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1C214D04C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C214D070();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C214D070()
{
  unint64_t result;

  result = qword_1EF760448;
  if (!qword_1EF760448)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Duration, &type metadata for Google_Protobuf_Duration);
    atomic_store(result, (unint64_t *)&qword_1EF760448);
  }
  return result;
}

unint64_t sub_1C214D0B4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C213E6FC();
  result = sub_1C214D0E0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C214D0E0()
{
  unint64_t result;

  result = qword_1EF760450;
  if (!qword_1EF760450)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Duration, &type metadata for Google_Protobuf_Duration);
    atomic_store(result, (unint64_t *)&qword_1EF760450);
  }
  return result;
}

unint64_t sub_1C214D128()
{
  unint64_t result;

  result = qword_1EF760458;
  if (!qword_1EF760458)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Duration, &type metadata for Google_Protobuf_Duration);
    atomic_store(result, (unint64_t *)&qword_1EF760458);
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Duration()
{
  return &type metadata for Google_Protobuf_Duration;
}

uint64_t sub_1C214D17C()
{
  sub_1C2175828();
  sub_1C2175840();
  return sub_1C2175870();
}

uint64_t sub_1C214D1C0()
{
  return sub_1C2175840();
}

uint64_t sub_1C214D1E8()
{
  sub_1C2175828();
  sub_1C2175840();
  return sub_1C2175870();
}

uint64_t sub_1C214D228@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1C214D25C(*a1);
  *a2 = result;
  return result;
}

void sub_1C214D250(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1C214D25C(uint64_t result)
{
  if (result >= 6u)
    return 6;
  else
    return result;
}

uint64_t storeEnumTagSinglePayload for WireFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C214D2BC + 4 * byte_1C217BFB5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C214D2F0 + 4 * asc_1C217BFB0[v4]))();
}

uint64_t sub_1C214D2F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C214D2F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C214D300);
  return result;
}

uint64_t sub_1C214D30C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C214D314);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C214D318(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C214D320(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WireFormat()
{
  return &type metadata for WireFormat;
}

unint64_t sub_1C214D340()
{
  unint64_t result;

  result = qword_1EF760460;
  if (!qword_1EF760460)
  {
    result = MEMORY[0x1C3BB7F64](&unk_1C217C048, &type metadata for WireFormat);
    atomic_store(result, (unint64_t *)&qword_1EF760460);
  }
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Message.jsonString(options:)(SiriOntologyProtobuf::JSONEncodingOptions options)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  Swift::String result;
  char v20[2];

  v4 = v2;
  v5 = v1;
  v6 = *(char **)&options.alwaysPrintEnumsAsInts;
  v7 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  v11 = v6[1];
  v20[0] = *v6;
  v20[1] = v11;
  v12 = Message.jsonUTF8Data(options:)(v20, v5, v4);
  if (!v3)
  {
    v14 = v12;
    v15 = v13;
    sub_1C217545C();
    v16 = sub_1C2175438();
    if (!v17)
    {
      __break(1u);
      goto LABEL_6;
    }
    v10 = (char *)v16;
    v5 = (uint64_t)v17;
    sub_1C20A8058(v14, v15);
  }
  v16 = (uint64_t)v10;
  v17 = (void *)v5;
LABEL_6:
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

uint64_t Message.jsonUTF8Data(options:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t result;
  char v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int16 v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48[2];

  v39 = sub_1C2175468();
  v7 = *(_QWORD *)(v39 - 8);
  v9 = MEMORY[0x1E0C80A78](v39, v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = *a1;
  v15 = a1[1];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760418);
  if (!swift_dynamicCast())
  {
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    sub_1C214B760((uint64_t)&v45);
    *((_QWORD *)&v46 + 1) = a2;
    v47 = a3;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
    v17((char *)boxed_opaque_existential_1, v3, a2);
    v48[0] = v14;
    v48[1] = v15;
    v21 = v40;
    sub_1C2119660((uint64_t)&v45, v48, (uint64_t)&v41);
    if (!v21)
    {
      v22 = a3;
      v23 = v41;
      if ((v42 & 0x100) == 0)
      {
        v24 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_1C214E1A4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
        v26 = *((_QWORD *)v23 + 2);
        v25 = *((_QWORD *)v23 + 3);
        if (v26 >= v25 >> 1)
          v23 = sub_1C214E1A4((char *)(v25 > 1), v26 + 1, 1, v23);
        *((_QWORD *)v23 + 2) = v26 + 1;
        v23[v26 + 32] = v24;
        v41 = v23;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v23 = sub_1C214E1A4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
        v41 = v23;
      }
      v29 = *((_QWORD *)v23 + 2);
      v28 = *((_QWORD *)v23 + 3);
      if (v29 >= v28 >> 1)
        v23 = sub_1C214E1A4((char *)(v28 > 1), v29 + 1, 1, v23);
      *((_QWORD *)v23 + 2) = v29 + 1;
      v23[v29 + 32] = 123;
      v41 = v23;
      v42 = 256;
      (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v22 + 72))(&v41, &type metadata for JSONEncodingVisitor, &off_1E7BDDB08, a2, v22);
      v30 = v41;
      v34 = swift_isUniquelyReferenced_nonNull_native();
      v41 = v30;
      if ((v34 & 1) == 0)
      {
        v30 = sub_1C214E1A4(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
        v41 = v30;
      }
      v36 = *((_QWORD *)v30 + 2);
      v35 = *((_QWORD *)v30 + 3);
      if (v36 >= v35 >> 1)
        v30 = sub_1C214E1A4((char *)(v35 > 1), v36 + 1, 1, v30);
      *((_QWORD *)v30 + 2) = v36 + 1;
      v30[v36 + 32] = 125;
      v41 = v30;
      v42 = 44;
      v37 = swift_bridgeObjectRetain();
      v17 = (void (*)(char *, uint64_t, uint64_t))sub_1C214EF2C(v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v17;
  }
  sub_1C20A8734(&v45, (uint64_t)&v41);
  v17 = v43;
  v18 = v44;
  __swift_project_boxed_opaque_existential_1(&v41, (uint64_t)v43);
  LOBYTE(v45) = v14;
  BYTE1(v45) = v15;
  v19 = v40;
  (*(void (**)(__int128 *, _QWORD, uint64_t))(v18 + 8))(&v45, v17, v18);
  if (v19
    || (sub_1C217545C(),
        v17 = (void (*)(char *, uint64_t, uint64_t))sub_1C217542C(),
        v32 = v31,
        swift_bridgeObjectRelease(),
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v39),
        v32 >> 60 != 15))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

void Message.init(jsonString:options:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v27 = a5;
  v24 = a4;
  v12 = sub_1C2175468();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v17 = a1 & 0xFFFFFFFFFFFFLL;
  if (v17)
  {
    v23[1] = v6;
    v23[2] = v7;
    v18 = *a3;
    v19 = *((_BYTE *)a3 + 8);
    sub_1C217545C();
    sub_1C217542C();
    v21 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    if (v21 >> 60 != 15)
    {
      v25 = v18;
      v26 = v19;
      Message.init(jsonUTF8Data:options:)(v21, v24, v27, a6);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C20AFA84();
  swift_allocError();
  *v22 = xmmword_1C2175D80;
  swift_willThrow();
}

void Message.init(jsonUTF8Data:options:)(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 16))(a4, a2, a3);
  __asm { BR              X10 }
}

uint64_t sub_1C214DAA0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  __int16 v10;
  char v11;
  char v12;
  char v13;
  char v14;

  v9 = v3;
  v10 = v2;
  v11 = BYTE2(v2);
  v12 = BYTE3(v2);
  v13 = BYTE4(v2);
  v14 = BYTE5(v2);
  sub_1C214DC64((uint64_t)&v9, (uint64_t)&v9 + BYTE6(v2), v6, v7, v1, v0, v5);
  result = sub_1C20A8058(v3, v2);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
  return result;
}

uint64_t sub_1C214DC64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned int v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  unsigned int v30;
  uint64_t v31;
  __int128 *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55[2];
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  result = MEMORY[0x1E0C80A78](a1, a2);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!result)
    return result;
  v19 = (char *)(v14 - a1);
  if (v14 - a1 < 1)
    return result;
  v50 = (char *)(v14 - a1 - 1);
  v49 = v16;
  v51 = v7;
  v69 = v15;
  type metadata accessor for DoubleParser();
  v20 = swift_allocObject();
  v21 = swift_slowAlloc();
  v22 = v69;
  v23 = 0;
  *(_QWORD *)(v20 + 16) = v21;
  *(_QWORD *)(v20 + 24) = v21 + 128;
  v56 = a1;
  v57 = v19;
  v59 = v20;
  v60 = a3;
  v61 = a3;
  v62 = a4 & 1;
  v63 = a3;
  v64 = a4 & 1;
  v65 = 0;
  v66 = 0;
  v67 = 0u;
  v68 = 0u;
  while (1)
  {
    v24 = v23[a1];
    v25 = v24 > 0x20;
    v26 = (1 << v24) & 0x100002600;
    if (v25 || v26 == 0)
      break;
    if (v19 == ++v23)
    {
      v23 = v19;
      goto LABEL_10;
    }
  }
  v58 = v23;
  if (v19 == v23
    || v23[a1] != 110
    || v50 == v23
    || v23[a1 + 1] != 117
    || v19 - 2 == v23
    || v23[a1 + 2] != 108
    || v19 - 3 == v23
    || v23[a1 + 3] != 108)
  {
LABEL_11:
    v28 = v51;
    sub_1C21496A8(v22, a6, a7);
    if (v28)
      goto LABEL_22;
    v19 = v57;
    v29 = v58;
    if (v58 != v57)
      goto LABEL_13;
LABEL_19:
    if (v29 != v19)
    {
      sub_1C20AFA84();
      swift_allocError();
      v34 = xmmword_1C217AAF0;
LABEL_21:
      *v33 = v34;
      swift_willThrow();
    }
LABEL_22:
    v35 = v67;
    swift_release();
    return sub_1C20A8840(v35);
  }
  v29 = v23 + 4;
  v58 = v23 + 4;
  if (v19 - 4 != v23 && (v23[a1 + 4] & 0xDFu) - 91 > 0xFFFFFFE5)
  {
LABEL_10:
    v58 = v23;
    goto LABEL_11;
  }
  result = swift_conformsToProtocol2();
  if (result)
    v36 = a6;
  else
    v36 = 0;
  if (!v36)
    goto LABEL_43;
  v37 = result;
  if (result)
  {
    v38 = *(void (**)(uint64_t, uint64_t))(result + 24);
    v39 = sub_1C2175690();
    v50 = (char *)&v46;
    v48 = v39;
    v47 = *(_QWORD *)(v39 - 8);
    MEMORY[0x1E0C80A78](v39, v40);
    v42 = (char *)&v46 - v41;
    v43 = v51;
    v38(a6, v37);
    if (v43)
    {
      swift_release();
      return sub_1C20A8840(0);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v42, 1, a6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v48);
LABEL_43:
      sub_1C20AFA84();
      swift_allocError();
      v34 = xmmword_1C217BDE0;
      goto LABEL_21;
    }
    v53 = a6;
    v54 = v37;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v52);
    v45 = v49;
    (*(void (**)(uint64_t *, char *, uint64_t))(v49 + 32))(boxed_opaque_existential_1, v42, a6);
    sub_1C20A8734(&v52, (uint64_t)v55);
    sub_1C20A8734(v55, (uint64_t)&v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760418);
    swift_dynamicCast();
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 40))(v69, v18, a6);
    if (v29 != v19)
    {
LABEL_13:
      while (1)
      {
        v30 = v29[v56];
        v25 = v30 > 0x20;
        v31 = (1 << v30) & 0x100002600;
        if (v25 || v31 == 0)
          break;
        if (v19 == ++v29)
        {
          v29 = v19;
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

char *sub_1C214E104()
{
  char **v0;
  char *v1;
  char *result;

  v1 = *v0;
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!(_DWORD)result)
  {
    result = sub_1C214E1A4(result, *((_QWORD *)v1 + 2) + 1, 1, v1);
    *v0 = result;
  }
  return result;
}

char *sub_1C214E14C(char *result)
{
  char **v1;
  unint64_t v2;

  v2 = *((_QWORD *)*v1 + 3);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1))
  {
    result = sub_1C214E1A4((char *)(v2 > 1), (int64_t)(result + 1), 1, *v1);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1C214E18C(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_BYTE *)(v3 + result + 32) = a2;
  return result;
}

char *sub_1C214E1A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E28C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760480);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E384(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFCE8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E484(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760468);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E59C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760470);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E69C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760490);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E784(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760488);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E884(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7604C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214E97C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C214EA98(a1, a2, a3, a4, &qword_1EF7604A0);
}

char *sub_1C214E988(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C214EB98(a1, a2, a3, a4, &qword_1EF760498);
}

char *sub_1C214E994(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7604B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C214EA8C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C214EA98(a1, a2, a3, a4, &qword_1EF7604B0);
}

char *sub_1C214EA98(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v9])
      memmove(v14, v15, 4 * v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1C214EB8C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C214EB98(a1, a2, a3, a4, &qword_1EF7604A8);
}

char *sub_1C214EB98(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 8 * v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_1C214EC8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF88);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF90);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_BYTE *sub_1C214EDC0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1C20AE108(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1C214EE34((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1C214EEAC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1C214EE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1C21752F4();
  swift_allocObject();
  result = sub_1C21752B8();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C2175324();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1C214EEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1C21752F4();
  swift_allocObject();
  result = sub_1C21752B8();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1C214EF2C(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  v10 = sub_1C214EFE8();
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1C214EDC0(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_1C214EFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C214DC64(a1, a2, *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1C214EFE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF760478;
  if (!qword_1EF760478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7DFDD8);
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0CB1B08], v1);
    atomic_store(result, (unint64_t *)&qword_1EF760478);
  }
  return result;
}

uint64_t sub_1C214F034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRetain();
  v0 = sub_1C2175504();
  v2 = v1;
  if (!v1)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return v2;
  }
  v3 = v0;
  while ((v3 != 95 || v2 != 0xE100000000000000) && (sub_1C21757C8() & 1) == 0)
  {
    result = sub_1C21757C8();
    if ((result & 1) != 0)
      goto LABEL_32;
    if (v3 == 65 && v2 == 0xE100000000000000)
      goto LABEL_20;
    if ((sub_1C21757C8() & 1) == 0)
    {
      if (v3 == 90 && v2 == 0xE100000000000000)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v2 = 0;
        goto LABEL_30;
      }
LABEL_20:
      if ((sub_1C21757C8() & 1) == 0)
        goto LABEL_26;
    }
    MEMORY[0x1C3BB7964](v3, v2);
LABEL_5:
    swift_bridgeObjectRelease();
    v3 = sub_1C2175504();
    v2 = v4;
    if (!v4)
    {
      v2 = 0;
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
  v5 = sub_1C2175504();
  v2 = v6;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  v7 = v5;
  result = sub_1C21757C8();
  if ((result & 1) == 0)
  {
    if (v7 == 97 && v2 == 0xE100000000000000)
      goto LABEL_3;
    if ((sub_1C21757C8() & 1) != 0)
      goto LABEL_26;
    if (v7 != 122 || v2 != 0xE100000000000000)
    {
LABEL_3:
      if ((sub_1C21757C8() & 1) != 0)
        goto LABEL_26;
    }
    sub_1C217548C();
    swift_bridgeObjectRelease();
    sub_1C21754F8();
    goto LABEL_5;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C214F2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRetain();
  v0 = sub_1C2175504();
  v2 = v1;
  if (!v1)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v2;
  }
  v3 = v0;
  while (1)
  {
    if (v3 == 95 && v2 == 0xE100000000000000 || (sub_1C21757C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = 0;
      goto LABEL_19;
    }
    result = sub_1C21757C8();
    if ((result & 1) != 0)
      break;
    if (v3 != 65 || v2 != 0xE100000000000000)
    {
      if ((sub_1C21757C8() & 1) != 0)
        goto LABEL_3;
      if (v3 == 90 && v2 == 0xE100000000000000)
      {
LABEL_16:
        MEMORY[0x1C3BB7964](95, 0xE100000000000000);
        sub_1C2175474();
        swift_bridgeObjectRelease();
        sub_1C21754F8();
        goto LABEL_4;
      }
    }
    if ((sub_1C21757C8() & 1) == 0)
      goto LABEL_16;
LABEL_3:
    MEMORY[0x1C3BB7964](v3, v2);
LABEL_4:
    swift_bridgeObjectRelease();
    v3 = sub_1C2175504();
    v2 = v4;
    if (!v4)
    {
      v2 = 0;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

char *sub_1C214F478(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v22;
  unint64_t v23;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return (char *)MEMORY[0x1E0DEE9D8];
  v22 = 0;
  v23 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v3 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_5:
  v4 = 0;
  while (1)
  {
    v5 = sub_1C2175504();
    if (!v6)
      break;
    v7 = v5;
    v8 = v6;
    if (v5 == 44 && v6 == 0xE100000000000000 || (sub_1C21757C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (!v4)
      {
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      v11 = sub_1C214F2A0();
      v13 = v12;
      swift_bridgeObjectRelease();
      if (!v13)
        goto LABEL_27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1C214E384(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v15 = *((_QWORD *)v3 + 2);
      v14 = *((_QWORD *)v3 + 3);
      if (v15 >= v14 >> 1)
        v3 = sub_1C214E384((char *)(v14 > 1), v15 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v15 + 1;
      v16 = &v3[16 * v15];
      *((_QWORD *)v16 + 4) = v11;
      *((_QWORD *)v16 + 5) = v13;
      v22 = 0;
      v23 = 0xE000000000000000;
      goto LABEL_5;
    }
    v9 = &v22;
    MEMORY[0x1C3BB7964](v7, v8);
    swift_bridgeObjectRelease();
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
LABEL_32:
      v3 = sub_1C214E384(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_27;
  v9 = (uint64_t *)sub_1C214F2A0();
  v8 = v17;
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_32;
LABEL_23:
  v19 = *((_QWORD *)v3 + 2);
  v18 = *((_QWORD *)v3 + 3);
  if (v19 >= v18 >> 1)
    v3 = sub_1C214E384((char *)(v18 > 1), v19 + 1, 1, v3);
  *((_QWORD *)v3 + 2) = v19 + 1;
  v20 = &v3[16 * v19];
  *((_QWORD *)v20 + 4) = v9;
  *((_QWORD *)v20 + 5) = v8;
  return v3;
}

double Google_Protobuf_FieldMask.init(protoPaths:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_FieldMask.init(jsonPaths:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v3;
  double result;

  v3 = sub_1C214F75C(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v3;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

char *sub_1C214F75C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 40;
  v3 = (char *)MEMORY[0x1E0DEE9D8];
  do
  {
    swift_bridgeObjectRetain();
    v5 = sub_1C214F2A0();
    v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1C214E384(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v9 = *((_QWORD *)v3 + 2);
      v8 = *((_QWORD *)v3 + 3);
      if (v9 >= v8 >> 1)
        v3 = sub_1C214E384((char *)(v8 > 1), v9 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v9 + 1;
      v4 = &v3[16 * v9];
      *((_QWORD *)v4 + 4) = v5;
      *((_QWORD *)v4 + 5) = v7;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C214F874()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    v4 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1C214F034();
      v7 = v6;
      swift_bridgeObjectRelease();
      if (!v7)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1C214E384(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
      v9 = *((_QWORD *)v4 + 2);
      v8 = *((_QWORD *)v4 + 3);
      if (v9 >= v8 >> 1)
        v4 = sub_1C214E384((char *)(v8 > 1), v9 + 1, 1, v4);
      v3 += 16;
      *((_QWORD *)v4 + 2) = v9 + 1;
      v10 = &v4[16 * v9];
      *((_QWORD *)v10 + 4) = v5;
      *((_QWORD *)v10 + 5) = v7;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20C6080();
    swift_allocError();
    *v11 = 3;
    return swift_willThrow();
  }
  else
  {
LABEL_12:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F230);
    sub_1C210C10C();
    sub_1C2175414();
    swift_bridgeObjectRelease();
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    return 34;
  }
}

uint64_t sub_1C214FA68()
{
  return sub_1C214F874();
}

uint64_t sub_1C214FA7C()
{
  char **v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  char *v4;
  _OWORD *v5;

  result = (uint64_t)sub_1C20B0FD4();
  if (!v1)
  {
    v4 = sub_1C214F478(result, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
      result = swift_bridgeObjectRelease();
      *v0 = v4;
    }
    else
    {
      sub_1C20AFA84();
      swift_allocError();
      *v5 = xmmword_1C217C070;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1C214FB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _BYTE *v6;

  v1 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(unsigned __int8 *)(v3 + 40);
  if ((~v4 & 0x3000000000000000) != 0 || v5 != 255)
    __asm { BR              X10 }
  sub_1C20C6080();
  swift_allocError();
  *v6 = 5;
  return swift_willThrow();
}

uint64_t sub_1C214FDCC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unsigned __int8 v44;
  __int128 v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  unint64_t v65;

  v3 = v1;
  result = sub_1C20B0664();
  if (v2)
    return result;
  v7 = result;
  v8 = v6;
  if ((result != 110 || v6 != 0xE100000000000000) && (sub_1C21757C8() & 1) == 0)
  {
    if (v7 == 91 && v8 == 0xE100000000000000 || (sub_1C21757C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v64 = MEMORY[0x1E0DEE9D8];
      sub_1C20C5954(a1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v21 = *(_QWORD *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        v22 = swift_allocObject();
        v23 = *(_QWORD *)(v21 + 16);
        v24 = *(_QWORD *)(v21 + 24);
        v25 = *(_QWORD *)(v21 + 32);
        v26 = *(_BYTE *)(v21 + 40);
        *(_QWORD *)(v22 + 16) = v23;
        *(_QWORD *)(v22 + 24) = v24;
        *(_QWORD *)(v22 + 32) = v25;
        *(_BYTE *)(v22 + 40) = v26;
        sub_1C20C60C4(v23, v24, v25, v26);
        sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(_QWORD *)(v3 + 16) = v22;
        swift_release();
      }
      v27 = *(_QWORD *)(v3 + 16);
      v28 = *(_QWORD *)(v27 + 16);
      v29 = *(_QWORD *)(v27 + 24);
      v30 = *(_QWORD *)(v27 + 32);
      *(_QWORD *)(v27 + 16) = v64;
      *(_QWORD *)(v27 + 24) = 0;
      *(_QWORD *)(v27 + 32) = 0xD000000000000000;
LABEL_17:
      v31 = *(_BYTE *)(v27 + 40);
      *(_BYTE *)(v27 + 40) = 1;
      return sub_1C20C6160(v28, v29, v30, v31);
    }
    if (v7 == 123 && v8 == 0xE100000000000000 || (sub_1C21757C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v65 = sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
      sub_1C20CD3E8(a1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v32 = *(_QWORD *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        v33 = swift_allocObject();
        v34 = *(_QWORD *)(v32 + 16);
        v35 = *(_QWORD *)(v32 + 24);
        v36 = *(_QWORD *)(v32 + 32);
        v37 = *(_BYTE *)(v32 + 40);
        *(_QWORD *)(v33 + 16) = v34;
        *(_QWORD *)(v33 + 24) = v35;
        *(_QWORD *)(v33 + 32) = v36;
        *(_BYTE *)(v33 + 40) = v37;
        sub_1C20C60C4(v34, v35, v36, v37);
        sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(_QWORD *)(v3 + 16) = v33;
        swift_release();
      }
      v27 = *(_QWORD *)(v3 + 16);
      v28 = *(_QWORD *)(v27 + 16);
      v29 = *(_QWORD *)(v27 + 24);
      v30 = *(_QWORD *)(v27 + 32);
      *(_QWORD *)(v27 + 16) = v65;
      *(_QWORD *)(v27 + 24) = 0;
      *(_QWORD *)(v27 + 32) = 0xC000000000000000;
      goto LABEL_17;
    }
    if (v7 == 116 && v8 == 0xE100000000000000
      || (sub_1C21757C8() & 1) != 0
      || v7 == 102 && v8 == 0xE100000000000000
      || (sub_1C21757C8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v38 = sub_1C20B267C() & 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v39 = *(_QWORD *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        v40 = swift_allocObject();
        v41 = *(_QWORD *)(v39 + 16);
        v42 = *(_QWORD *)(v39 + 24);
        v43 = *(_QWORD *)(v39 + 32);
        v44 = *(_BYTE *)(v39 + 40);
        *(_QWORD *)(v40 + 16) = v41;
        *(_QWORD *)(v40 + 24) = v42;
        *(_QWORD *)(v40 + 32) = v43;
        *(_BYTE *)(v40 + 40) = v44;
        sub_1C20C60C4(v41, v42, v43, v44);
        sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(_QWORD *)(v3 + 16) = v40;
        swift_release();
      }
      v15 = *(_QWORD *)(v3 + 16);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v18 = *(_QWORD *)(v15 + 32);
      *(_QWORD *)(v15 + 16) = v38;
      v45 = xmmword_1C217C0A0;
    }
    else
    {
      if (v7 == 34 && v8 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_39:
        v47 = sub_1C20B0FD4();
        v49 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v50 = *(_QWORD *)(v3 + 16);
          type metadata accessor for Google_Protobuf_Value._StorageClass();
          v51 = swift_allocObject();
          v52 = *(_QWORD *)(v50 + 16);
          v53 = *(_QWORD *)(v50 + 24);
          v54 = *(_QWORD *)(v50 + 32);
          v55 = *(_BYTE *)(v50 + 40);
          *(_QWORD *)(v51 + 16) = v52;
          *(_QWORD *)(v51 + 24) = v53;
          *(_QWORD *)(v51 + 32) = v54;
          *(_BYTE *)(v51 + 40) = v55;
          sub_1C20C60C4(v52, v53, v54, v55);
          sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
          *(_QWORD *)(v3 + 16) = v51;
          swift_release();
        }
        v15 = *(_QWORD *)(v3 + 16);
        v16 = *(_QWORD *)(v15 + 16);
        v17 = *(_QWORD *)(v15 + 24);
        v18 = *(_QWORD *)(v15 + 32);
        *(_QWORD *)(v15 + 16) = v47;
        *(_QWORD *)(v15 + 24) = v49;
        *(_QWORD *)(v15 + 32) = 0x2000000000000000;
        goto LABEL_9;
      }
      v46 = sub_1C21757C8();
      swift_bridgeObjectRelease();
      if ((v46 & 1) != 0)
        goto LABEL_39;
      sub_1C20B1DA8();
      v57 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v58 = *(_QWORD *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        v59 = swift_allocObject();
        v60 = *(_QWORD *)(v58 + 16);
        v61 = *(_QWORD *)(v58 + 24);
        v62 = *(_QWORD *)(v58 + 32);
        v63 = *(_BYTE *)(v58 + 40);
        *(_QWORD *)(v59 + 16) = v60;
        *(_QWORD *)(v59 + 24) = v61;
        *(_QWORD *)(v59 + 32) = v62;
        *(_BYTE *)(v59 + 40) = v63;
        sub_1C20C60C4(v60, v61, v62, v63);
        sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(_QWORD *)(v3 + 16) = v59;
        swift_release();
      }
      v15 = *(_QWORD *)(v3 + 16);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v18 = *(_QWORD *)(v15 + 32);
      *(_QWORD *)(v15 + 16) = v57;
      v45 = xmmword_1C217C090;
    }
    *(_OWORD *)(v15 + 24) = v45;
LABEL_9:
    v19 = *(_BYTE *)(v15 + 40);
    *(_BYTE *)(v15 + 40) = 0;
    return sub_1C20C6160(v16, v17, v18, v19);
  }
  swift_bridgeObjectRelease();
  if ((sub_1C20B260C() & 1) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(_QWORD *)(v3 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      v10 = swift_allocObject();
      v11 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v9 + 24);
      v13 = *(_QWORD *)(v9 + 32);
      v14 = *(_BYTE *)(v9 + 40);
      *(_QWORD *)(v10 + 16) = v11;
      *(_QWORD *)(v10 + 24) = v12;
      *(_QWORD *)(v10 + 32) = v13;
      *(_BYTE *)(v10 + 40) = v14;
      sub_1C20C60C4(v11, v12, v13, v14);
      sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(_QWORD *)(v3 + 16) = v10;
      swift_release();
    }
    v15 = *(_QWORD *)(v3 + 16);
    v16 = *(_QWORD *)(v15 + 16);
    v17 = *(_QWORD *)(v15 + 24);
    v18 = *(_QWORD *)(v15 + 32);
    *(_OWORD *)(v15 + 16) = xmmword_1C2175DA0;
    *(_QWORD *)(v15 + 32) = 0;
    goto LABEL_9;
  }
  sub_1C20AFA84();
  swift_allocError();
  *v20 = 0;
  v20[1] = 0;
  return swift_willThrow();
}

uint64_t sub_1C21503F0(__int16 a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  _WORD v22[8];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  _QWORD v27[5];

  v5 = v4;
  v10 = sub_1C2175468();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[3] = &type metadata for Google_Protobuf_Value;
  v27[4] = &off_1E7BE0640;
  v27[0] = a2;
  v27[1] = a3;
  v27[2] = a4;
  v15 = __swift_project_boxed_opaque_existential_1(v27, (uint64_t)&type metadata for Google_Protobuf_Value);
  v16 = v15[2];
  v26 = 256;
  v23 = *(_OWORD *)v15;
  v24 = v16;
  v25 = MEMORY[0x1E0DEE9D8];
  v22[7] = a1 & 0x101;
  sub_1C20A8008(a2, a3);
  swift_retain();
  sub_1C214FB10();
  if (v4)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    return v5;
  }
  *(_QWORD *)&v23 = v25;
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  sub_1C2175444();
  v18 = v17;
  result = swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();
    sub_1C217545C();
    v5 = sub_1C217542C();
    v21 = v20;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (v21 >> 60 != 15)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C21505CC(__int16 a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(__int16 *))
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  __int16 v26;

  v15 = sub_1C2175468();
  v23 = *(_QWORD *)(v15 - 8);
  v24 = v15;
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[3] = a5;
  v25[4] = a6;
  v25[0] = a2;
  v25[1] = a3;
  v25[2] = a4;
  __swift_project_boxed_opaque_existential_1(v25, a5);
  v26 = a1 & 0x101;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  a7(&v26);
  if (!v7
    && (sub_1C217545C(),
        a7 = (void (*)(__int16 *))sub_1C217542C(),
        v20 = v19,
        swift_bridgeObjectRelease(),
        result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v24),
        v20 >> 60 == 15))
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return (uint64_t)a7;
  }
  return result;
}

double Google_Protobuf_Value.init(integerLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  double result;

  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v5 = *(_QWORD *)(inited + 16);
    v6 = *(_QWORD *)(inited + 24);
    v7 = *(_QWORD *)(inited + 32);
    v8 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v9 = swift_allocObject();
    v5 = *(_QWORD *)(inited + 16);
    v6 = *(_QWORD *)(inited + 24);
    v7 = *(_QWORD *)(inited + 32);
    v8 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v6;
    *(_QWORD *)(v9 + 32) = v7;
    *(_BYTE *)(v9 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v9;
  }
  *(double *)(inited + 16) = (double)a1;
  *(_OWORD *)(inited + 24) = xmmword_1C217C090;
  *(_BYTE *)(inited + 40) = 0;
  sub_1C20C6160(v5, v6, v7, v8);
  result = 0.0;
  *(_OWORD *)a2 = xmmword_1C2175DE0;
  *(_QWORD *)(a2 + 16) = inited;
  return result;
}

double sub_1C2150834@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Google_Protobuf_Value.init(integerLiteral:)(*a1, a2);
}

uint64_t sub_1C2150840(double *a1)
{
  return Google_Protobuf_Value.init(numberValue:)(*a1);
}

uint64_t sub_1C215084C(unsigned __int8 *a1)
{
  return Google_Protobuf_Value.init(BOOLValue:)(*a1);
}

uint64_t sub_1C2150860(_QWORD *a1)
{
  return Google_Protobuf_Value.init(stringValue:)(*a1, a1[1]);
}

double Google_Protobuf_Value.init(nilLiteral:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  double result;

  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v3 = *(_QWORD *)(inited + 16);
    v4 = *(_QWORD *)(inited + 24);
    v5 = *(_QWORD *)(inited + 32);
    v6 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v7 = swift_allocObject();
    v3 = *(_QWORD *)(inited + 16);
    v4 = *(_QWORD *)(inited + 24);
    v5 = *(_QWORD *)(inited + 32);
    v6 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v4;
    *(_QWORD *)(v7 + 32) = v5;
    *(_BYTE *)(v7 + 40) = v6;
    sub_1C20C60C4(v3, v4, v5, v6);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v7;
  }
  *(_OWORD *)(inited + 16) = xmmword_1C2175DA0;
  *(_QWORD *)(inited + 32) = 0;
  *(_BYTE *)(inited + 40) = 0;
  sub_1C20C6160(v3, v4, v5, v6);
  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = inited;
  return result;
}

uint64_t sub_1C2150970(_BYTE *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[16];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;

  v4 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v6) = *a1;
  v8 = a1[1];
  v9 = *((_QWORD *)v1 + 2);
  v16 = MEMORY[0x1E0DEE9D8];
  v17 = 256;
  v14 = *v1;
  v15 = v9;
  v13[14] = v6;
  v13[15] = v8;
  sub_1C214FB10();
  if (v2)
    goto LABEL_3;
  *(_QWORD *)&v14 = v16;
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v7 = (_BYTE *)sub_1C2175444();
  v11 = v10;
  result = swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C2150A9C@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  double result;

  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v3 = *(_QWORD *)(inited + 16);
    v4 = *(_QWORD *)(inited + 24);
    v5 = *(_QWORD *)(inited + 32);
    v6 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v7 = swift_allocObject();
    v3 = *(_QWORD *)(inited + 16);
    v4 = *(_QWORD *)(inited + 24);
    v5 = *(_QWORD *)(inited + 32);
    v6 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v4;
    *(_QWORD *)(v7 + 32) = v5;
    *(_BYTE *)(v7 + 40) = v6;
    sub_1C20C60C4(v3, v4, v5, v6);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v7;
  }
  *(_OWORD *)(inited + 16) = xmmword_1C2175DA0;
  *(_QWORD *)(inited + 32) = 0;
  *(_BYTE *)(inited + 40) = 0;
  sub_1C20C6160(v3, v4, v5, v6);
  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = inited;
  return result;
}

uint64_t sub_1C2150B9C(_BYTE *a1)
{
  return sub_1C2150970(a1);
}

uint64_t sub_1C2150BB0(uint64_t *a1)
{
  return sub_1C214FDCC(a1);
}

double sub_1C2150BC4@<D0>(uint64_t a1@<X8>)
{
  return sub_1C2150A9C(a1);
}

double _s20SiriOntologyProtobuf07Google_C6_ValueV12floatLiteralACSd_tcfC_0@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  double result;

  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v5 = *(_QWORD *)(inited + 16);
    v6 = *(_QWORD *)(inited + 24);
    v7 = *(_QWORD *)(inited + 32);
    v8 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v9 = swift_allocObject();
    v5 = *(_QWORD *)(inited + 16);
    v6 = *(_QWORD *)(inited + 24);
    v7 = *(_QWORD *)(inited + 32);
    v8 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v6;
    *(_QWORD *)(v9 + 32) = v7;
    *(_BYTE *)(v9 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v9;
  }
  *(double *)(inited + 16) = a2;
  *(_OWORD *)(inited + 24) = xmmword_1C217C090;
  *(_BYTE *)(inited + 40) = 0;
  sub_1C20C6160(v5, v6, v7, v8);
  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = inited;
  return result;
}

double _s20SiriOntologyProtobuf07Google_C6_ValueV13stringLiteralACSS_tcfC_0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  double result;

  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v7 = *(_QWORD *)(inited + 16);
    v8 = *(_QWORD *)(inited + 24);
    v9 = *(_QWORD *)(inited + 32);
    v10 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v11 = swift_allocObject();
    v7 = *(_QWORD *)(inited + 16);
    v8 = *(_QWORD *)(inited + 24);
    v9 = *(_QWORD *)(inited + 32);
    v10 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v8;
    *(_QWORD *)(v11 + 32) = v9;
    *(_BYTE *)(v11 + 40) = v10;
    sub_1C20C60C4(v7, v8, v9, v10);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v11;
  }
  *(_QWORD *)(inited + 16) = a1;
  *(_QWORD *)(inited + 24) = a2;
  *(_QWORD *)(inited + 32) = 0x2000000000000000;
  *(_BYTE *)(inited + 40) = 0;
  sub_1C20C6160(v7, v8, v9, v10);
  result = 0.0;
  *(_OWORD *)a3 = xmmword_1C2175DE0;
  *(_QWORD *)(a3 + 16) = inited;
  return result;
}

double _s20SiriOntologyProtobuf07Google_C6_ValueV14BOOLeanLiteralACSb_tcfC_0@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  double result;

  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v5 = *(_QWORD *)(inited + 16);
    v6 = *(_QWORD *)(inited + 24);
    v7 = *(_QWORD *)(inited + 32);
    v8 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v9 = swift_allocObject();
    v5 = *(_QWORD *)(inited + 16);
    v6 = *(_QWORD *)(inited + 24);
    v7 = *(_QWORD *)(inited + 32);
    v8 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v6;
    *(_QWORD *)(v9 + 32) = v7;
    *(_BYTE *)(v9 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v9;
  }
  *(_QWORD *)(inited + 16) = a1 & 1;
  *(_OWORD *)(inited + 24) = xmmword_1C217C0A0;
  *(_BYTE *)(inited + 40) = 0;
  sub_1C20C6160(v5, v6, v7, v8);
  result = 0.0;
  *(_OWORD *)a2 = xmmword_1C2175DE0;
  *(_QWORD *)(a2 + 16) = inited;
  return result;
}

double Google_Protobuf_Value.init(structValue:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  double result;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v7 = *(_QWORD *)(inited + 16);
    v8 = *(_QWORD *)(inited + 24);
    v9 = *(_QWORD *)(inited + 32);
    v10 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v11 = swift_allocObject();
    v7 = *(_QWORD *)(inited + 16);
    v8 = *(_QWORD *)(inited + 24);
    v9 = *(_QWORD *)(inited + 32);
    v10 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v8;
    *(_QWORD *)(v11 + 32) = v9;
    *(_BYTE *)(v11 + 40) = v10;
    sub_1C20C60C4(v7, v8, v9, v10);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v11;
  }
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v4;
  *(_QWORD *)(inited + 32) = v5;
  *(_BYTE *)(inited + 40) = 1;
  sub_1C20C6160(v7, v8, v9, v10);
  result = 0.0;
  *(_OWORD *)a2 = xmmword_1C2175DE0;
  *(_QWORD *)(a2 + 16) = inited;
  return result;
}

double Google_Protobuf_Value.init(listValue:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  double result;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v7 = *(_QWORD *)(inited + 16);
    v8 = *(_QWORD *)(inited + 24);
    v9 = *(_QWORD *)(inited + 32);
    v10 = *(_BYTE *)(inited + 40);
  }
  else
  {
    v11 = swift_allocObject();
    v7 = *(_QWORD *)(inited + 16);
    v8 = *(_QWORD *)(inited + 24);
    v9 = *(_QWORD *)(inited + 32);
    v10 = *(_BYTE *)(inited + 40);
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v8;
    *(_QWORD *)(v11 + 32) = v9;
    *(_BYTE *)(v11 + 40) = v10;
    sub_1C20C60C4(v7, v8, v9, v10);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    inited = v11;
  }
  *(_QWORD *)(inited + 16) = v3;
  *(_QWORD *)(inited + 24) = v4;
  *(_QWORD *)(inited + 32) = v5 | 0x1000000000000000;
  *(_BYTE *)(inited + 40) = 1;
  sub_1C20C6160(v7, v8, v9, v10);
  result = 0.0;
  *(_OWORD *)a2 = xmmword_1C2175DE0;
  *(_QWORD *)(a2 + 16) = inited;
  return result;
}

uint64_t sub_1C2151130()
{
  return MEMORY[0x1E0DEDCD0];
}

uint64_t sub_1C215113C()
{
  return MEMORY[0x1E0DEAFD0];
}

unint64_t sub_1C215114C()
{
  unint64_t result;

  result = qword_1EF7604C8;
  if (!qword_1EF7604C8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Value, &type metadata for Google_Protobuf_Value);
    atomic_store(result, (unint64_t *)&qword_1EF7604C8);
  }
  return result;
}

uint64_t sub_1C2151190()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_1C21511A0()
{
  unint64_t result;

  result = qword_1EF7604D0;
  if (!qword_1EF7604D0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Value, &type metadata for Google_Protobuf_Value);
    atomic_store(result, (unint64_t *)&qword_1EF7604D0);
  }
  return result;
}

uint64_t sub_1C21511E4()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_1C21511F0()
{
  return MEMORY[0x1E0DEA9F8];
}

void SimpleExtensionMap.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9E0];
}

uint64_t SimpleExtensionMap.init(arrayLiteral:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[5];

  *a2 = MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return swift_bridgeObjectRelease();
  v3 = a1 + 32;
  do
  {
    sub_1C20A84A8(v3, (uint64_t)v5);
    SimpleExtensionMap.insert(_:)(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    v3 += 40;
    --v2;
  }
  while (v2);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall SimpleExtensionMap.insert(contentsOf:)(Swift::OpaquePointer contentsOf)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *((_QWORD *)contentsOf._rawValue + 2);
  if (v1)
  {
    v2 = (char *)contentsOf._rawValue + 32;
    swift_bridgeObjectRetain();
    do
    {
      SimpleExtensionMap.insert(_:)(v2);
      v2 += 5;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
}

uint64_t SimpleExtensionMap.init(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    for (i = 0; i != v4; ++i)
    {
      v6 = *(_QWORD *)(a1 + 8 * i + 32);
      v9 = v6;
      SimpleExtensionMap.formUnion(_:)(&v9);
    }
    result = swift_bridgeObjectRelease();
    v8 = v10;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9E0];
  }
  *a2 = v8;
  return result;
}

uint64_t SimpleExtensionMap.formUnion(_:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  char v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;

  v2 = v1;
  v3 = *a1;
  v44 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v45 = (unint64_t)(v4 + 63) >> 6;
  v46 = v3;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v7 << 6);
LABEL_19:
    v14 = 8 * v10;
    v15 = *(_QWORD *)(*(_QWORD *)(v46 + 48) + v14);
    v16 = *(_QWORD **)(*(_QWORD *)(v46 + 56) + v14);
    if (*(_QWORD *)(*v2 + 16) && (sub_1C20A9B94(v15), (v17 & 1) != 0))
    {
      swift_bridgeObjectRetain_n();
      v18 = swift_bridgeObjectRetain();
      v19 = sub_1C2152340(v18, (uint64_t)v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20AA698(v16);
      v16 = (_QWORD *)v19;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = (_QWORD *)*v2;
      v47 = (_QWORD *)*v2;
      *v2 = 0x8000000000000000;
      v23 = sub_1C20A9B94(v15);
      v24 = v21[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
        goto LABEL_50;
      v27 = v22;
      if (v21[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v30 = v47;
          if ((v22 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1C21744A8();
          v30 = v47;
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1C2172EE4(v26, isUniquelyReferenced_nonNull_native);
        v28 = sub_1C20A9B94(v15);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_52;
        v23 = v28;
        v30 = v47;
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
      sub_1C2173B44(v23, v15, (uint64_t)v16, v30);
    }
    else
    {
      swift_bridgeObjectRetain();
      v31 = swift_isUniquelyReferenced_nonNull_native();
      v32 = (_QWORD *)*v2;
      v48 = (_QWORD *)*v2;
      *v2 = 0x8000000000000000;
      v23 = sub_1C20A9B94(v15);
      v34 = v32[2];
      v35 = (v33 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v37 = v33;
      if (v32[3] >= v36)
      {
        if ((v31 & 1) != 0)
        {
          v30 = v48;
          if ((v33 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1C21744A8();
          v30 = v48;
          if ((v37 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1C2172EE4(v36, v31);
        v38 = sub_1C20A9B94(v15);
        if ((v37 & 1) != (v39 & 1))
          goto LABEL_52;
        v23 = v38;
        v30 = v48;
        if ((v37 & 1) != 0)
        {
LABEL_4:
          v8 = v30[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v8 + 8 * v23) = v16;
          goto LABEL_5;
        }
      }
      v30[(v23 >> 6) + 8] |= 1 << v23;
      v40 = 8 * v23;
      *(_QWORD *)(v30[6] + v40) = v15;
      *(_QWORD *)(v30[7] + v40) = v16;
      v41 = v30[2];
      v11 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v11)
        goto LABEL_49;
      v30[2] = v42;
    }
LABEL_5:
    *v2 = (uint64_t)v30;
    swift_bridgeObjectRelease();
  }
  v11 = __OFADD__(v7++, 1);
  if (v11)
    goto LABEL_48;
  if (v7 >= v45)
    return swift_release();
  v12 = *(_QWORD *)(v44 + 8 * v7);
  if (v12)
  {
LABEL_18:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_19;
  }
  v13 = v7 + 1;
  if (v7 + 1 >= v45)
    return swift_release();
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v7 + 2;
  if (v7 + 2 >= v45)
    return swift_release();
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v7 + 3;
  if (v7 + 3 >= v45)
    return swift_release();
  v12 = *(_QWORD *)(v44 + 8 * v13);
  if (v12)
  {
LABEL_17:
    v7 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v45)
      return swift_release();
    v12 = *(_QWORD *)(v44 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

uint64_t SimpleExtensionMap.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v5 = *v3;
  if (*(_QWORD *)(v5 + 16)
    && (v6 = result, result = sub_1C20A9B94(a2), (v7 & 1) != 0)
    && (v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * result), (v9 = *(_QWORD *)(v8 + 16)) != 0))
  {
    v10 = v8 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C20A84A8(v10, (uint64_t)v13);
      v11 = v14;
      v12 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12) == v6)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      v10 += 40;
      if (!--v9)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C20A84A8((uint64_t)v13, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
LABEL_8:
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t SimpleExtensionMap.fieldNumberForProto(messageType:protoFieldName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v35 = *(_QWORD *)v4 + 64;
  v8 = 1 << *(_BYTE *)(*(_QWORD *)v4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(*(_QWORD *)v4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v33 = v11;
  v34 = result;
LABEL_5:
  while (v10)
  {
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v15 = v14 | (v13 << 6);
LABEL_21:
    v19 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v15);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v36 = v13;
      v21 = v19 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C20A84A8(v21, (uint64_t)v40);
        v22 = v41;
        v23 = v42;
        __swift_project_boxed_opaque_existential_1(v40, v41);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) == a3 && v24 == a4)
        {
          swift_bridgeObjectRelease();
          sub_1C20A84A8((uint64_t)v40, (uint64_t)v37);
        }
        else
        {
          v26 = sub_1C21757C8();
          swift_bridgeObjectRelease();
          sub_1C20A84A8((uint64_t)v40, (uint64_t)v37);
          if ((v26 & 1) == 0)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
            goto LABEL_24;
          }
        }
        v27 = v38;
        v28 = v39;
        __swift_project_boxed_opaque_existential_1(v37, v38);
        v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        if (v29 == a1)
        {
          swift_bridgeObjectRelease();
          v30 = v41;
          v31 = v42;
          __swift_project_boxed_opaque_existential_1(v40, v41);
          v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
          return v32;
        }
LABEL_24:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
        v21 += 40;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          v11 = v33;
          result = v34;
          v13 = v36;
          goto LABEL_5;
        }
      }
    }
  }
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if (v16 >= v11)
    goto LABEL_35;
  v17 = *(_QWORD *)(v35 + 8 * v16);
  ++v13;
  if (v17)
    goto LABEL_20;
  v13 = v16 + 1;
  if (v16 + 1 >= v11)
    goto LABEL_35;
  v17 = *(_QWORD *)(v35 + 8 * v13);
  if (v17)
    goto LABEL_20;
  v13 = v16 + 2;
  if (v16 + 2 >= v11)
    goto LABEL_35;
  v17 = *(_QWORD *)(v35 + 8 * v13);
  if (v17)
  {
LABEL_20:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_21;
  }
  v18 = v16 + 3;
  if (v18 < v11)
  {
    v17 = *(_QWORD *)(v35 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v13 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_37;
        if (v13 >= v11)
          goto LABEL_35;
        v17 = *(_QWORD *)(v35 + 8 * v13);
        ++v18;
        if (v17)
          goto LABEL_20;
      }
    }
    v13 = v18;
    goto LABEL_20;
  }
LABEL_35:
  swift_release();
  return 0;
}

uint64_t SimpleExtensionMap.insert(_:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33[2];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v2 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = v6;
  v8 = *v1;
  if (!*(_QWORD *)(*v2 + 16) || (v9 = sub_1C20A9B94(v6), (v10 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF88);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C21798C0;
    sub_1C20A84A8((uint64_t)a1, v24 + 32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v34 = *v2;
    *v2 = 0x8000000000000000;
    v26 = v24;
    v27 = v7;
    goto LABEL_20;
  }
  v32 = v7;
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
  swift_bridgeObjectRetain();
  v15 = v14(v12, v13);
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(v11 + 16);
  if (v17)
  {
    v18 = v15;
    v31 = v2;
    v19 = 0;
    v16 = (_QWORD *)(v11 + 32);
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v19 < *(_QWORD *)(v11 + 16))
    {
      sub_1C20A84A8((uint64_t)v16, (uint64_t)&v34);
      v20 = v35;
      v21 = v36;
      __swift_project_boxed_opaque_existential_1(&v34, v35);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21) == v18)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      }
      else
      {
        sub_1C20A8734(&v34, (uint64_t)v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C20B9974(0, v2[2] + 1, 1);
        v2 = v37;
        v23 = v37[2];
        v22 = v37[3];
        if (v23 >= v22 >> 1)
        {
          sub_1C20B9974((_QWORD *)(v22 > 1), v23 + 1, 1);
          v2 = v37;
        }
        v2[2] = v23 + 1;
        sub_1C20A8734(v33, (uint64_t)&v2[5 * v23 + 4]);
      }
      ++v19;
      v16 += 5;
      if (v17 == v19)
      {
        v16 = v37;
        v2 = v31;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  sub_1C20A84A8((uint64_t)a1, (uint64_t)&v34);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_22:
    v16 = sub_1C214EC8C(0, v16[2] + 1, 1, v16);
  v29 = v16[2];
  v28 = v16[3];
  if (v29 >= v28 >> 1)
    v16 = sub_1C214EC8C((_QWORD *)(v28 > 1), v29 + 1, 1, v16);
  v16[2] = v29 + 1;
  sub_1C20A8734(&v34, (uint64_t)&v16[5 * v29 + 4]);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v34 = *v2;
  *v2 = 0x8000000000000000;
  v26 = (uint64_t)v16;
  v27 = v32;
LABEL_20:
  sub_1C21738BC(v26, v27, isUniquelyReferenced_nonNull_native);
  *v2 = v34;
  return swift_bridgeObjectRelease();
}

uint64_t SimpleExtensionMap.union(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *a1;
  *a2 = *v2;
  v6 = v4;
  swift_bridgeObjectRetain();
  return SimpleExtensionMap.formUnion(_:)(&v6);
}

uint64_t SimpleExtensionMap.debugDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *v0;
  v24 = *v0 + 64;
  v2 = 1 << *(_BYTE *)(*v0 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(*v0 + 64);
  v25 = (unint64_t)(v2 + 63) >> 6;
  v26 = v1;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (char *)MEMORY[0x1E0DEE9D8];
  while (v4)
  {
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v6 << 6);
LABEL_20:
    v13 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v9);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v27 = v6;
      v15 = v13 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1C20A84A8(v15, (uint64_t)&v30);
        v16 = v32;
        v17 = v33;
        __swift_project_boxed_opaque_existential_1(&v30, v32);
        v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
        v29 = v18;
        sub_1C21754F8();
        v19 = v32;
        v20 = v33;
        __swift_project_boxed_opaque_existential_1(&v30, v32);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
        sub_1C21757B0();
        sub_1C21754F8();
        swift_bridgeObjectRelease();
        sub_1C21754F8();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1C214E384(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v22 = *((_QWORD *)v7 + 2);
        v21 = *((_QWORD *)v7 + 3);
        if (v22 >= v21 >> 1)
          v7 = sub_1C214E384((char *)(v21 > 1), v22 + 1, 1, v7);
        *((_QWORD *)v7 + 2) = v22 + 1;
        v23 = &v7[16 * v22];
        *((_QWORD *)v23 + 4) = v28;
        *((_QWORD *)v23 + 5) = v29;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
        v15 += 40;
        --v14;
      }
      while (v14);
      result = swift_bridgeObjectRelease();
      v6 = v27;
    }
  }
  v10 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v10 >= v25)
    goto LABEL_28;
  v11 = *(_QWORD *)(v24 + 8 * v10);
  ++v6;
  if (v11)
    goto LABEL_19;
  v6 = v10 + 1;
  if (v10 + 1 >= v25)
    goto LABEL_28;
  v11 = *(_QWORD *)(v24 + 8 * v6);
  if (v11)
    goto LABEL_19;
  v6 = v10 + 2;
  if (v10 + 2 >= v25)
    goto LABEL_28;
  v11 = *(_QWORD *)(v24 + 8 * v6);
  if (v11)
  {
LABEL_19:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v6 << 6);
    goto LABEL_20;
  }
  v12 = v10 + 3;
  if (v12 >= v25)
  {
LABEL_28:
    swift_release();
    v30 = (unint64_t)v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F230);
    sub_1C210C10C();
    sub_1C2175414();
    swift_bridgeObjectRelease();
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_1C21756D8();
    swift_bridgeObjectRelease();
    v30 = 0xD000000000000013;
    v31 = 0x80000001C217EBA0;
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    sub_1C21754F8();
    return v30;
  }
  v11 = *(_QWORD *)(v24 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v25)
      goto LABEL_28;
    v11 = *(_QWORD *)(v24 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C21521E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return SimpleExtensionMap.fieldNumberForProto(messageType:protoFieldName:)(a1, a2, a3, a4);
}

uint64_t sub_1C2152200(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1C217554C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1C3BB79A0](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1C2152278(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v4;
  unsigned __int8 v5;
  BOOL v6;
  unsigned __int8 v7;
  BOOL v8;

  if (!a2)
  {
    v6 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    v6 = 0;
LABEL_14:
    v7 = a4;
LABEL_15:
    *(_WORD *)result = a4;
    *(_BYTE *)(result + 2) = v7;
    *(_BYTE *)(result + 3) = v6;
    return a3;
  }
  if (a3 < 0)
    goto LABEL_17;
  v4 = 0;
  v5 = a4;
  while (1)
  {
    v6 = v5 == (unsigned __int16)(a4 & 0xFF00) >> 8;
    if (v5 != (unsigned __int16)(a4 & 0xFF00) >> 8)
      break;
    v7 = 0;
LABEL_8:
    *(_BYTE *)(a2 + v4) = v5;
    if (a3 - 1 == v4)
      goto LABEL_15;
    ++v4;
    v8 = v5 == (unsigned __int16)(a4 & 0xFF00) >> 8;
    v5 = v7;
    if (v8)
    {
      v6 = 1;
      a3 = v4;
      goto LABEL_15;
    }
  }
  v7 = v5 + 1;
  if (((v5 + 1) & 0x100) == 0)
    goto LABEL_8;
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

_BYTE *sub_1C215231C(_BYTE *result, __int16 a2)
{
  if ((a2 & 0x100) != 0)
  {
    __break(1u);
  }
  else
  {
    *result = a2;
    return nullsub_1;
  }
  return result;
}

uint64_t sub_1C2152340(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  result = MEMORY[0x1E0DEE9D8];
  v23 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v5 = 0;
    v17 = a1 + 32;
    v16 = (_QWORD *)(a2 + 32);
    v6 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1C20A84A8(v17 + 40 * v5, (uint64_t)&v20);
      v7 = *(_QWORD *)(a2 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain();
        v8 = v16;
        do
        {
          v9 = v21;
          v10 = v22;
          __swift_project_boxed_opaque_existential_1(&v20, v21);
          v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
          v12 = v8[3];
          v13 = v8[4];
          __swift_project_boxed_opaque_existential_1(v8, v12);
          if (v11 == (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13))
          {
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
            goto LABEL_4;
          }
          v8 += 5;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
      }
      sub_1C20A8734(&v20, (uint64_t)v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1C20B9974(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v6 = v23;
      v15 = *(_QWORD *)(v23 + 16);
      v14 = *(_QWORD *)(v23 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C20B9974((_QWORD *)(v14 > 1), v15 + 1, 1);
        v6 = v23;
      }
      *(_QWORD *)(v6 + 16) = v15 + 1;
      sub_1C20A8734(v19, v6 + 40 * v15 + 32);
LABEL_4:
      ++v5;
    }
    while (v5 != v18);
    return v23;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleExtensionMap()
{
  return &type metadata for SimpleExtensionMap;
}

unint64_t sub_1C215250C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF7604D8;
  if (!qword_1EF7604D8)
  {
    v1 = sub_1C217536C();
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF7604D8);
  }
  return result;
}

uint64_t sub_1C2152554(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  uint64_t *v7;
  uint64_t DynamicType;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  char v13;
  __int128 v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  __int128 v21[2];
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  swift_beginAccess();
  v3 = v1[2];
  v4 = v1[3];
  swift_beginAccess();
  v5 = v3 == a1[2] && v4 == a1[3];
  if (v5 || (v6 = 0, (sub_1C21757C8() & 1) != 0))
  {
    v7 = v1 + 4;
    swift_beginAccess();
    sub_1C212F90C(v7, (uint64_t)v21);
    if (v22 == 1)
    {
      sub_1C20A8734(v21, (uint64_t)v23);
      swift_beginAccess();
      sub_1C212F90C(a1 + 4, (uint64_t)v21);
      if (v22 == 1)
      {
        sub_1C20A8734(v21, (uint64_t)v20);
        __swift_project_boxed_opaque_existential_1(v23, v24);
        DynamicType = swift_getDynamicType();
        __swift_project_boxed_opaque_existential_1(v20, v20[3]);
        if (DynamicType == swift_getDynamicType())
        {
          v18 = v24;
          v19 = v25;
          __swift_project_boxed_opaque_existential_1(v23, v24);
          v6 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 88))(v20, v18, v19);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
          return v6 & 1;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      }
      else
      {
        sub_1C21563E4((uint64_t)v21);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      sub_1C21563E4((uint64_t)v21);
    }
    sub_1C212F90C(v7, (uint64_t)v21);
    if (!v22)
    {
      v9 = v21[0];
      swift_beginAccess();
      sub_1C212F90C(a1 + 4, (uint64_t)v21);
      if (!v22)
      {
        v15 = v21[0];
        sub_1C20FD650(v9, *((uint64_t *)&v9 + 1));
        v17 = v16;
        sub_1C20A8058(v9, *((unint64_t *)&v9 + 1));
        sub_1C20A8058(v15, *((unint64_t *)&v15 + 1));
        if ((v17 & 1) != 0)
        {
LABEL_26:
          v6 = 1;
          return v6 & 1;
        }
LABEL_17:
        sub_1C212F90C(v7, (uint64_t)v21);
        if (v22 == 2)
        {
          v10 = v21[0];
          swift_beginAccess();
          sub_1C212F90C(a1 + 4, (uint64_t)v21);
          if (v22 == 2)
          {
            v11 = v21[0];
            sub_1C20FD650(v10, *((uint64_t *)&v10 + 1));
            v13 = v12;
            sub_1C20A8058(v10, *((unint64_t *)&v10 + 1));
            sub_1C20A8058(v11, *((unint64_t *)&v11 + 1));
            if ((v13 & 1) != 0)
              goto LABEL_26;
            goto LABEL_23;
          }
          sub_1C20A8058(v10, *((unint64_t *)&v10 + 1));
        }
        sub_1C21563E4((uint64_t)v21);
LABEL_23:
        v6 = 0;
        return v6 & 1;
      }
      sub_1C20A8058(v9, *((unint64_t *)&v9 + 1));
    }
    sub_1C21563E4((uint64_t)v21);
    goto LABEL_17;
  }
  return v6 & 1;
}

uint64_t sub_1C215283C(char **a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  uint64_t isEscapingClosureAtFileLocation;
  __int128 v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  NSObject *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  char *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;

  v2 = v1;
  v71 = *MEMORY[0x1E0C80C00];
  swift_beginAccess();
  sub_1C212F90C(v1 + 4, (uint64_t)&v67);
  if (!v70)
  {
    v10 = *((_QWORD *)&v67 + 1);
    v57 = v67;
    swift_beginAccess();
    v12 = v1[2];
    v11 = (char *)v1[3];
    swift_bridgeObjectRetain();
    v13 = sub_1C213D808(v12, (unint64_t)v11);
    v15 = v14;
    v58[0] = 0uLL;
    if (qword_1EF75CD40 != -1)
      swift_once();
    v16 = (void *)qword_1EF7603B8;
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v58;
    v17[3] = v13;
    v17[4] = v15;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1C213E8F4;
    *(_QWORD *)(v18 + 24) = v17;
    *((_QWORD *)&v65 + 1) = sub_1C2156714;
    v66 = v18;
    aBlock = MEMORY[0x1E0C809B0];
    v63 = 1107296256;
    v64 = sub_1C213E148;
    *(_QWORD *)&v65 = &block_descriptor_48;
    v19 = _Block_copy(&aBlock);
    v20 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v20, v19);

    _Block_release(v19);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v22 = v58[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if ((_QWORD)v22)
      {
        v59 = 0;
        memset(v58, 0, sizeof(v58));
        v65 = v22;
        v23 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
        sub_1C20A8008(v57, v10);
        Message.init(serializedData:extensions:partial:options:)(v57, v10, (uint64_t)v58, v22, *((uint64_t *)&v22 + 1), (uint64_t)v23);
        v48 = v2[2];
        v49 = v2[3];
        swift_bridgeObjectRetain();
        sub_1C21564C8((uint64_t)a1, (uint64_t)v23, v48, v49, v22, *((uint64_t *)&v22 + 1));
        sub_1C20A8058(v57, v10);
        goto LABEL_4;
      }
      v25 = v2[2];
      v24 = v2[3];
      v26 = HIBYTE(v24) & 0xF;
      if ((v24 & 0x2000000000000000) == 0)
        v26 = v25 & 0xFFFFFFFFFFFFLL;
      if (!v26)
LABEL_18:
        __asm { BR              X10 }
      swift_bridgeObjectRetain();
      sub_1C20A988C(1uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v27);
      sub_1C20AAAD0(v25, v24);
      v11 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
LABEL_15:
        v30 = *((_QWORD *)v11 + 2);
        v29 = *((_QWORD *)v11 + 3);
        if (v30 >= v29 >> 1)
        {
          v11 = sub_1C214E1A4((char *)(v29 > 1), v30 + 1, 1, v11);
          *a1 = v11;
        }
        *((_QWORD *)v11 + 2) = v30 + 1;
        v11[v30 + 32] = 10;
        swift_bridgeObjectRelease();
        *a1 = v11;
        goto LABEL_18;
      }
LABEL_35:
      v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      *a1 = v11;
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_33;
  }
  if (v70 == 1)
  {
    sub_1C20A8734(&v67, (uint64_t)&aBlock);
    swift_beginAccess();
    v4 = v1[2];
    v5 = v2[3];
    v7 = *((_QWORD *)&v65 + 1);
    v6 = v65;
    v8 = __swift_project_boxed_opaque_existential_1(&aBlock, v65);
    swift_bridgeObjectRetain();
    sub_1C21564C8((uint64_t)a1, (uint64_t)v8, v4, v5, v6, v7);
LABEL_4:
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  }
  isEscapingClosureAtFileLocation = *((_QWORD *)&v67 + 1);
  v56 = v68;
  v57 = v67;
  v55 = v69;
  swift_beginAccess();
  v31 = v1[2];
  v11 = (char *)v1[3];
  swift_bridgeObjectRetain();
  v18 = sub_1C213D808(v31, (unint64_t)v11);
  v15 = v32;
  v60 = 0;
  v61 = 0;
  if (qword_1EF75CD40 != -1)
LABEL_33:
    swift_once();
  v33 = (void *)qword_1EF7603B8;
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = &v60;
  v34[3] = v18;
  v34[4] = v15;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_1C213E8F4;
  *(_QWORD *)(v35 + 24) = v34;
  *((_QWORD *)&v65 + 1) = sub_1C2156714;
  v66 = v35;
  aBlock = MEMORY[0x1E0C809B0];
  v63 = 1107296256;
  v64 = sub_1C213E148;
  *(_QWORD *)&v65 = &block_descriptor_37;
  v36 = _Block_copy(&aBlock);
  v37 = v33;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v37, v36);

  _Block_release(v36);
  v10 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v10 & 1) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  v38 = v60;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v38)
  {
    v40 = v2[2];
    v39 = v2[3];
    v41 = HIBYTE(v39) & 0xF;
    if ((v39 & 0x2000000000000000) == 0)
      v41 = v40 & 0xFFFFFFFFFFFFLL;
    if (v41)
    {
      swift_bridgeObjectRetain();
      sub_1C20A988C(1uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v42);
      sub_1C20AAAD0(v40, v39);
      v43 = *a1;
      v44 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v43;
      if ((v44 & 1) == 0)
      {
        v43 = sub_1C214E1A4(0, *((_QWORD *)v43 + 2) + 1, 1, v43);
        *a1 = v43;
      }
      v46 = *((_QWORD *)v43 + 2);
      v45 = *((_QWORD *)v43 + 3);
      if (v46 >= v45 >> 1)
      {
        v43 = sub_1C214E1A4((char *)(v45 > 1), v46 + 1, 1, v43);
        *a1 = v43;
      }
      *((_QWORD *)v43 + 2) = v46 + 1;
      v43[v46 + 32] = 10;
      swift_bridgeObjectRelease();
      *a1 = v43;
    }
    v60 = sub_1C214EF2C((uint64_t)&unk_1E7BD81A0);
    v61 = v47;
    sub_1C2175360();
    __asm { BR              X12 }
  }
  v60 = v56;
  LOBYTE(v61) = v55;
  sub_1C2154CE0(v57, isEscapingClosureAtFileLocation, (uint64_t)&v60, v38);
  v50 = v2[2];
  v51 = v2[3];
  v53 = *((_QWORD *)&v65 + 1);
  v52 = v65;
  v54 = __swift_project_boxed_opaque_existential_1(&aBlock, v65);
  swift_bridgeObjectRetain();
  sub_1C21564C8((uint64_t)a1, (uint64_t)v54, v50, v51, v52, v53);
  swift_bridgeObjectRelease();
  sub_1C20A8058(v57, isEscapingClosureAtFileLocation);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
}

uint64_t sub_1C21531A8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  ValueMetadata *v16;
  NSObject *v17;
  __int128 v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  _BYTE *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  _QWORD *v39;
  char v40;
  _BYTE *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  ValueMetadata *v54;
  unint64_t v55;
  char v56;
  __int128 aBlock;
  uint64_t (*v58)(uint64_t);
  void *v59;
  uint64_t (*v60)();
  ValueMetadata *v61;
  uint64_t v62;
  __int16 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v5 = v3;
  swift_beginAccess();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = sub_1C213D808(a1, a2);
  v11 = v10;
  v52 = 0uLL;
  if (qword_1EF75CD40 != -1)
    swift_once();
  v12 = (void *)qword_1EF7603B8;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = &v52;
  v13[3] = v9;
  v13[4] = v11;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1C213E8F4;
  *(_QWORD *)(v14 + 24) = v13;
  v60 = sub_1C2156714;
  v61 = (ValueMetadata *)v14;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v58 = sub_1C213E148;
  v59 = &block_descriptor_26;
  v15 = _Block_copy(&aBlock);
  v16 = v61;
  v17 = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v17, v15);

  _Block_release(v15);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v15 & 1) != 0)
  {
    __break(1u);
LABEL_38:
    swift_once();
    goto LABEL_23;
  }
  v18 = v52;
  swift_bridgeObjectRelease();
  swift_release();
  if (!(_QWORD)v18)
    goto LABEL_9;
  v19 = *(unsigned __int8 **)(a3 + 40);
  if (v19 == *(unsigned __int8 **)(a3 + 48))
    goto LABEL_9;
  v20 = *v19;
  *(_QWORD *)(a3 + 40) = v19 + 1;
  sub_1C20B5184();
  if (v20 != 60)
  {
    if (v20 == 123)
    {
      v21 = 125;
      goto LABEL_11;
    }
LABEL_9:
    sub_1C20B727C();
    swift_allocError();
    *v22 = 0;
    return swift_willThrow();
  }
  v21 = 62;
LABEL_11:
  sub_1C21284DC(a3, (uint64_t)&v52);
  v62 = 0;
  v63 = 256;
  v64 = 0u;
  v65 = 0u;
  v66 = 0u;
  sub_1C21284DC((uint64_t)&v52, (uint64_t)&aBlock);
  v63 = v21;
  v24 = swift_conformsToProtocol2();
  if (v24)
    v25 = v24;
  else
    v25 = 0;
  if (v24)
    v26 = v18;
  else
    v26 = 0;
  if (!v26)
  {
    sub_1C20B727C();
    swift_allocError();
    *v32 = 6;
    swift_willThrow();
    sub_1C2128518((uint64_t)&v52);
    return sub_1C212854C((uint64_t)&aBlock);
  }
  (*(void (**)(__int128 *__return_ptr))(v25 + 8))(&v47);
  sub_1C2128518((uint64_t)&v52);
  v46 = v47;
  v27 = v48;
  v28 = v49;
  sub_1C20A8840(v64);
  v64 = v46;
  *(_QWORD *)&v65 = v27;
  *((_QWORD *)&v65 + 1) = v28;
  v66 = v18;
  v16 = &type metadata for Google_Protobuf_Any;
  if ((ValueMetadata *)v18 != &type metadata for Google_Protobuf_Any)
  {
    v29 = *(void (**)(_QWORD, _QWORD))(*((_QWORD *)&v18 + 1) + 16);
    v51 = v18;
    __swift_allocate_boxed_opaque_existential_1(v50);
    v29(v18, *((_QWORD *)&v18 + 1));
    v31 = *((_QWORD *)&v51 + 1);
    v30 = v51;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v50, v51);
    (*(void (**)(__int128 *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*((_QWORD *)&v18 + 1) + 64))(&aBlock, &type metadata for TextFormatDecoder, &off_1E7BDE678, v30, v31);
    if (v4)
    {
      sub_1C212854C((uint64_t)&aBlock);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    }
    sub_1C20A84A8((uint64_t)v50, (uint64_t)&v52);
    v56 = 1;
    sub_1C2135F08((uint64_t)&v52, (uint64_t)&v47);
    swift_beginAccess();
    sub_1C212F948((uint64_t)&v47, v5 + 32);
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    goto LABEL_29;
  }
  if (qword_1EF75CD58 != -1)
    goto LABEL_38;
LABEL_23:
  v33 = qword_1EF76E188;
  swift_retain();
  v34 = sub_1C20B6D64();
  if (!v4)
  {
    v36 = v35;
    if (v35)
    {
      v37 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        v38 = swift_allocObject();
        v39 = (_QWORD *)swift_retain();
        sub_1C2155710(v39);
        swift_release();
        v33 = v38;
      }
      swift_retain();
      sub_1C21531A8(v37, v36, &aBlock);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        v42 = swift_allocObject();
        v43 = (_QWORD *)swift_retain();
        sub_1C2155710(v43);
        swift_release();
        v33 = v42;
      }
      v44 = swift_retain();
      sub_1C213EC58(v44, (uint64_t)&aBlock);
    }
    swift_release();
    v54 = v16;
    v45 = sub_1C20C4DCC();
    v52 = xmmword_1C2175DE0;
    v55 = v45;
    v53 = v33;
    v56 = 1;
    sub_1C2135F08((uint64_t)&v52, (uint64_t)&v47);
    swift_beginAccess();
    sub_1C212F948((uint64_t)&v47, v5 + 32);
    swift_endAccess();
LABEL_29:
    sub_1C2156624(&aBlock, a3);
    sub_1C21282C4();
    if ((v40 & 1) == 0)
    {
      sub_1C20B727C();
      swift_allocError();
      *v41 = 0;
      swift_willThrow();
    }
    return sub_1C212854C((uint64_t)&aBlock);
  }
  sub_1C20A8058(0, 0xC000000000000000);
  swift_release();
  return sub_1C212854C((uint64_t)&aBlock);
}

uint64_t sub_1C21537A4(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  char isEscapingClosureAtFileLocation;
  char *v24;
  unint64_t v25;
  __int128 v26;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  unint64_t v41;
  char v43;
  char v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  uint64_t aBlock[3];
  __int128 v49;
  uint64_t v50;
  char v51[24];
  __int128 v52[2];
  char v53;
  unint64_t v54;

  v3 = v2;
  v4 = v1;
  v6 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = *a1;
  v9 = a1[1];
  v10 = (uint64_t)(v4 + 4);
  swift_beginAccess();
  sub_1C212F90C(v4 + 4, (uint64_t)v52);
  if (!v53)
  {
    v43 = v8;
    v44 = v9;
    v54 = *((_QWORD *)&v52[0] + 1);
    v45 = *(_QWORD *)&v52[0];
    swift_beginAccess();
    v14 = v4[2];
    v10 = v4[3];
    swift_bridgeObjectRetain();
    v15 = sub_1C213D808(v14, v10);
    v17 = v16;
    v46[0] = 0uLL;
    if (qword_1EF75CD40 != -1)
      swift_once();
    v18 = (void *)qword_1EF7603B8;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = v46;
    v19[3] = v15;
    v19[4] = v17;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_1C213E8F4;
    *(_QWORD *)(v20 + 24) = v19;
    *((_QWORD *)&v49 + 1) = sub_1C2156714;
    v50 = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C213E148;
    *(_QWORD *)&v49 = &block_descriptor_15;
    v21 = _Block_copy(aBlock);
    v22 = v18;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v22, v21);

    _Block_release(v21);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v26 = v46[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if ((_QWORD)v26)
      {
        v47 = 0;
        memset(v46, 0, sizeof(v46));
        v49 = v26;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
        v28 = v54;
        sub_1C20A8008(v45, v54);
        v29 = (uint64_t)boxed_opaque_existential_1;
        v10 = v26;
        Message.init(serializedData:extensions:partial:options:)(v45, v28, (uint64_t)v46, v26, *((uint64_t *)&v26 + 1), v29);
        if (v3)
        {
          sub_1C20A8058(v45, v28);
          __swift_deallocate_boxed_opaque_existential_1((uint64_t)aBlock);
        }
        else
        {
          v40 = v4[2];
          v41 = v4[3];
          LOBYTE(v46[0]) = v43;
          BYTE1(v46[0]) = v44;
          swift_bridgeObjectRetain();
          v10 = sub_1C2154680(aBlock, v40, v41, (char *)v46);
          swift_bridgeObjectRelease();
          sub_1C20A8058(v45, v28);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        }
      }
      else
      {
        sub_1C20C6080();
        swift_allocError();
        *v39 = 0;
        swift_willThrow();
        sub_1C20A8058(v45, v54);
      }
      return v10;
    }
    __break(1u);
LABEL_25:
    v24 = sub_1C214E1A4((char *)(v25 > 1), v10, 1, v24);
    v25 = *((_QWORD *)v24 + 3);
    v30 = v25 >> 1;
LABEL_14:
    *((_QWORD *)v24 + 2) = v10;
    *((_BYTE *)v19 + (_QWORD)v24 + 32) = 123;
    WORD4(v46[0]) = 256;
    v31 = (int64_t)v19 + 2;
    if (v30 < v31)
      v24 = sub_1C214E1A4((char *)(v25 > 1), v31, 1, v24);
    *((_QWORD *)v24 + 2) = v31;
    v24[v10 + 32] = 34;
    *(_QWORD *)&v46[0] = v24;
    sub_1C20AA79C(0x6570797440, 0xE500000000000000);
    sub_1C20A9EB4((uint64_t)"\":", 2, v32);
    WORD4(v46[0]) = 44;
    swift_beginAccess();
    v33 = v4[2];
    v34 = v4[3];
    swift_bridgeObjectRetain();
    sub_1C211E7B0(v33, v34);
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  if (v53 != 1)
  {
    v22 = *((_QWORD *)&v52[0] + 1);
    *(_QWORD *)&v46[0] = MEMORY[0x1E0DEE9D8];
    v24 = sub_1C214E1A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v19 = (_QWORD *)*((_QWORD *)v24 + 2);
    v25 = *((_QWORD *)v24 + 3);
    v30 = v25 >> 1;
    v10 = (uint64_t)v19 + 1;
    if (v25 >> 1 > (unint64_t)v19)
      goto LABEL_14;
    goto LABEL_25;
  }
  sub_1C20A8734(v52, (uint64_t)aBlock);
  swift_beginAccess();
  v11 = v4[2];
  v12 = v4[3];
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v11 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v35 = *((_QWORD *)&v49 + 1);
    v10 = v49;
    v36 = __swift_project_boxed_opaque_existential_1(aBlock, v49);
    v11 = sub_1C213E59C((uint64_t)v36, 0xD000000000000013, 0x80000001C217EB00, v10, v35);
    v12 = v37;
  }
  v51[0] = v8;
  v51[1] = v9;
  v38 = sub_1C2154680(aBlock, v11, v12, v51);
  if (!v3)
    v10 = v38;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C2153F08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v27;
  unsigned int v28;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t (*v44)();
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v51;
  char *v53;
  char *v54;
  _OWORD *v55;
  _OWORD *v56;
  _QWORD *v57;
  _OWORD *v58;
  _QWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  char *v75;
  char *v76;
  unint64_t v77;
  _BYTE v78[48];
  __int128 v79;
  uint64_t v80;
  char v81;
  char v82;
  char *v83;

  v3 = v1;
  result = sub_1C20B301C(123);
  if (v2)
    return result;
  v6 = a1[5];
  v7 = __OFSUB__(v6, 1);
  v8 = v6 - 1;
  if (v7)
  {
    __break(1u);
LABEL_90:
    sub_1C20AFA84();
    swift_allocError();
    *v60 = xmmword_1C217C2E0;
    goto LABEL_86;
  }
  a1[5] = v8;
  if (v8 < 0)
  {
    sub_1C20AFA84();
    swift_allocError();
    *v55 = xmmword_1C2175DD0;
    return swift_willThrow();
  }
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v79 = xmmword_1C2175DE0;
  v82 = 0;
  sub_1C2135F08((uint64_t)&v79, (uint64_t)v78);
  v9 = v1 + 32;
  swift_beginAccess();
  sub_1C212F948((uint64_t)v78, v1 + 32);
  swift_endAccess();
  result = sub_1C20B3234();
  if ((result & 1) != 0)
    return result;
  v10 = 0;
  v83 = (char *)MEMORY[0x1E0DEE9D8];
  v12 = a1[1];
  v11 = a1[2];
  v13 = 13;
  v14 = 1;
  if (v11 == v12)
    goto LABEL_14;
LABEL_7:
  v15 = *a1;
  while (1)
  {
    v16 = *(unsigned __int8 *)(v15 + v11);
    v17 = v16 > 0x20;
    v18 = (1 << v16) & 0x100002600;
    if (v17 || v18 == 0)
      break;
    a1[2] = ++v11;
    if (v12 == v11)
      goto LABEL_85;
  }
  while (1)
  {
LABEL_14:
    if (v11 == v12)
      goto LABEL_85;
    v20 = *a1;
    if (*(_BYTE *)(*a1 + v11) != 34 || (v74 = v14, v73 = v10, v21 = sub_1C20B0E58(), !v22))
    {
LABEL_84:
      v13 = 5;
      goto LABEL_85;
    }
    v23 = v22;
    v24 = a1[2];
    if (v24 == v12)
      goto LABEL_81;
    while (1)
    {
      v25 = *(unsigned __int8 *)(v20 + v24);
      if (v25 > 0x20 || ((1 << v25) & 0x100002600) == 0)
        break;
      a1[2] = ++v24;
      if (v12 == v24)
        goto LABEL_81;
    }
    if (v12 == v24)
    {
LABEL_81:
      sub_1C20AFA84();
      swift_allocError();
      *v56 = xmmword_1C2175D80;
LABEL_82:
      swift_willThrow();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v25 != 58)
    {
      sub_1C20AFA84();
      swift_allocError();
      *v59 = 0;
      v59[1] = 0;
      goto LABEL_82;
    }
    v71 = v9;
    v27 = v24 + 1;
    v72 = v12 - 1;
    a1[2] = v24 + 1;
    if (v21 == (char *)0x6570797440 && v22 == 0xE500000000000000
      || (v69 = (uint64_t)v21, (sub_1C21757C8() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      if (v72 != v24)
      {
        while (1)
        {
          v28 = *(unsigned __int8 *)(v20 + v27);
          if (v28 > 0x20 || ((1 << v28) & 0x100002600) == 0)
            break;
          a1[2] = ++v27;
          if (v12 == v27)
            goto LABEL_83;
        }
        if (v12 != v27)
        {
          v9 = v71;
          if (v28 != 34)
            goto LABEL_84;
          v46 = sub_1C20B0E58();
          if (!v47)
            goto LABEL_84;
          *(_QWORD *)(v3 + 16) = v46;
          *(_QWORD *)(v3 + 24) = v47;
          swift_bridgeObjectRelease();
          v10 = v73;
          v14 = v74;
          goto LABEL_61;
        }
      }
LABEL_83:
      v13 = 13;
LABEL_85:
      sub_1C20AFA84();
      swift_allocError();
      *v57 = 0;
      v57[1] = v13;
      goto LABEL_86;
    }
    v30 = (uint64_t)v83;
    if ((v74 & 1) == 0)
    {
      v75 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v75 = sub_1C214E1A4(0, *((_QWORD *)v75 + 2) + 1, 1, v75);
      v31 = v73;
      v30 = (uint64_t)v75;
      v33 = *((_QWORD *)v75 + 2);
      v32 = *((_QWORD *)v75 + 3);
      v34 = v33 + 1;
      if (v33 >= v32 >> 1)
      {
        v68 = v33 + 1;
        v77 = *((_QWORD *)v75 + 2);
        v54 = sub_1C214E1A4((char *)(v32 > 1), v33 + 1, 1, (char *)v30);
        v33 = v77;
        v31 = v73;
        v34 = v68;
        v30 = (uint64_t)v54;
      }
      *(_QWORD *)(v30 + 16) = v34;
      *(_BYTE *)(v30 + v33 + 32) = v31;
      v83 = (char *)v30;
    }
    v76 = (char *)v30;
    v70 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v76 = sub_1C214E1A4(0, *((_QWORD *)v76 + 2) + 1, 1, v76);
      v83 = v76;
    }
    v35 = (uint64_t)v76;
    v37 = *((_QWORD *)v76 + 2);
    v36 = *((_QWORD *)v76 + 3);
    v38 = v37 + 1;
    if (v37 >= v36 >> 1)
    {
      v53 = sub_1C214E1A4((char *)(v36 > 1), v37 + 1, 1, v76);
      v38 = v37 + 1;
      v35 = (uint64_t)v53;
    }
    *(_QWORD *)(v35 + 16) = v38;
    *(_BYTE *)(v35 + v37 + 32) = 34;
    v83 = (char *)v35;
    swift_bridgeObjectRetain();
    sub_1C20AA79C(v69, v70);
    sub_1C20A9EB4((uint64_t)"\":", 2, v39);
    swift_bridgeObjectRelease();
    if (v72 == v24)
    {
LABEL_52:
      v27 = v12;
    }
    else
    {
      while (1)
      {
        v40 = *(unsigned __int8 *)(v20 + v27);
        v17 = v40 > 0x20;
        v41 = (1 << v40) & 0x100002600;
        if (v17 || v41 == 0)
          break;
        a1[2] = ++v27;
        if (v12 == v27)
          goto LABEL_52;
      }
    }
    sub_1C20B3100();
    v20 = *a1;
    if (!*a1)
      goto LABEL_97;
    v43 = a1[2];
    if (__OFSUB__(v43, v27))
    {
      __break(1u);
      goto LABEL_96;
    }
    v44 = sub_1C20AD098((char *)(v20 + v27), v43 - v27);
    if (!v45)
      goto LABEL_90;
    sub_1C20AA79C((uint64_t)v44, v45);
    v14 = 0;
    v10 = 44;
    v9 = v71;
LABEL_61:
    v12 = a1[1];
    v48 = a1[2];
    if (v48 == v12)
      goto LABEL_87;
    while (1)
    {
      v49 = *(unsigned __int8 *)(v20 + v48);
      if (v49 > 0x20 || ((1 << v49) & 0x100002600) == 0)
        break;
      a1[2] = ++v48;
      if (v12 == v48)
        goto LABEL_87;
    }
    if (v12 == v48)
    {
LABEL_87:
      sub_1C20AFA84();
      swift_allocError();
      *v58 = xmmword_1C2175D80;
      goto LABEL_86;
    }
    if (v49 == 125)
      break;
    while (1)
    {
      v51 = *(unsigned __int8 *)(v20 + v48);
      if (v51 > 0x20 || ((1 << v51) & 0x100002600) == 0)
        break;
      a1[2] = ++v48;
      if (v12 == v48)
        goto LABEL_87;
    }
    if (v12 == v48)
      goto LABEL_87;
    if (v51 != 44)
    {
      sub_1C20AFA84();
      swift_allocError();
      *v67 = 0;
      v67[1] = 0;
LABEL_86:
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    v11 = v48 + 1;
    a1[2] = v11;
    v13 = 13;
    if (v11 != v12)
      goto LABEL_7;
  }
  a1[2] = v48 + 1;
  v61 = a1[5];
  v62 = v61 + 1;
  if (__OFADD__(v61, 1))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
  }
  else
  {
    a1[5] = v62;
    if (a1[4] >= v62)
    {
      v63 = *((_BYTE *)a1 + 64);
      v64 = sub_1C214EF2C((uint64_t)v83);
      v66 = v65;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v79 = v64;
      *((_QWORD *)&v79 + 1) = v66;
      v80 = v62;
      v81 = v63;
      v82 = 2;
      sub_1C2135F08((uint64_t)&v79, (uint64_t)v78);
      swift_beginAccess();
      sub_1C212F948((uint64_t)v78, v71);
      return swift_endAccess();
    }
  }
  result = sub_1C2175774();
  __break(1u);
  return result;
}

uint64_t sub_1C2154680(_QWORD *a1, uint64_t a2, unint64_t a3, char *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unsigned __int8 *v40;
  char *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  __int128 v49[2];
  uint64_t v50;
  char v51;
  char v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  __int16 v57;
  char *v58;

  v9 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a4;
  v14 = a4[1];
  sub_1C20A84A8((uint64_t)a1, (uint64_t)v53);
  v51 = v13;
  v52 = v14;
  sub_1C2119660((uint64_t)v53, &v51, (uint64_t)&v56);
  if (v4)
    return v14;
  v16 = v56;
  v58 = v12;
  if ((v57 & 0x100) == 0)
  {
    v48 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v18 = *((_QWORD *)v16 + 2);
    v17 = *((_QWORD *)v16 + 3);
    if (v18 >= v17 >> 1)
      v16 = sub_1C214E1A4((char *)(v17 > 1), v18 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18 + 1;
    v16[v18 + 32] = v48;
    v56 = v16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v56 = v16;
  }
  v21 = *((_QWORD *)v16 + 2);
  v20 = *((_QWORD *)v16 + 3);
  v22 = v20 >> 1;
  v23 = v21 + 1;
  if (v20 >> 1 <= v21)
  {
    v16 = sub_1C214E1A4((char *)(v20 > 1), v21 + 1, 1, v16);
    v20 = *((_QWORD *)v16 + 3);
    v22 = v20 >> 1;
  }
  *((_QWORD *)v16 + 2) = v23;
  v16[v21 + 32] = 123;
  v57 = 256;
  v56 = v16;
  v24 = v21 + 2;
  if (v22 < v24)
    v16 = sub_1C214E1A4((char *)(v20 > 1), v24, 1, v16);
  *((_QWORD *)v16 + 2) = v24;
  v16[v23 + 32] = 34;
  v56 = v16;
  sub_1C20AA79C(0x6570797440, 0xE500000000000000);
  sub_1C20A9EB4((uint64_t)"\":", 2, v25);
  v57 = 44;
  sub_1C211E7B0(a2, a3);
  sub_1C20A84A8((uint64_t)a1, (uint64_t)&v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760418);
  if (swift_dynamicCast())
  {
    sub_1C20A8734(v49, (uint64_t)v53);
    v26 = v54;
    v27 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    v51 = v13;
    v52 = v14;
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 8))(&v51, v26, v27);
    v32 = v31;
    v33 = v56;
    if ((v57 & 0x100) == 0)
    {
      v34 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v33 = sub_1C214E1A4(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
      v36 = *((_QWORD *)v33 + 2);
      v35 = *((_QWORD *)v33 + 3);
      if (v36 >= v35 >> 1)
        v33 = sub_1C214E1A4((char *)(v35 > 1), v36 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v36 + 1;
      v33[v36 + 32] = v34;
      v56 = v33;
    }
    v37 = swift_isUniquelyReferenced_nonNull_native();
    v56 = v33;
    if ((v37 & 1) == 0)
    {
      v33 = sub_1C214E1A4(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
      v56 = v33;
    }
    v39 = *((_QWORD *)v33 + 2);
    v38 = *((_QWORD *)v33 + 3);
    if (v39 >= v38 >> 1)
      v33 = sub_1C214E1A4((char *)(v38 > 1), v39 + 1, 1, v33);
    *((_QWORD *)v33 + 2) = v39 + 1;
    v33[v39 + 32] = 34;
    v56 = v33;
    sub_1C20AA79C(0x65756C6176, 0xE500000000000000);
    sub_1C20A9EB4((uint64_t)"\":", 2, v40);
    v57 = 44;
    sub_1C20AA79C(v30, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {
    v50 = 0;
    memset(v49, 0, sizeof(v49));
    sub_1C214B760((uint64_t)v49);
    v28 = a1[3];
    v29 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v28);
    (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 72))(&v56, &type metadata for JSONEncodingVisitor, &off_1E7BDDB08, v28, v29);
  }
  v41 = v56;
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v56 = v41;
  if ((v42 & 1) == 0)
  {
    v41 = sub_1C214E1A4(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
    v56 = v41;
  }
  v44 = *((_QWORD *)v41 + 2);
  v43 = *((_QWORD *)v41 + 3);
  if (v44 >= v43 >> 1)
    v41 = sub_1C214E1A4((char *)(v43 > 1), v44 + 1, 1, v41);
  *((_QWORD *)v41 + 2) = v44 + 1;
  v41[v44 + 32] = 125;
  v56 = v41;
  v57 = 44;
  v53[0] = v41;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v14 = sub_1C2175444();
  v46 = v45;
  result = swift_bridgeObjectRelease();
  if (v46)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    return v14;
  }
  __break(1u);
  return result;
}

void sub_1C2154CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_conformsToProtocol2())
    v6 = a4;
  else
    v6 = 0;
  if (v6)
    __asm { BR              X10 }
  sub_1C214EF2C((uint64_t)&unk_1E7BD8178);
  v8 = v7;
  sub_1C2175360();
  __asm { BR              X12 }
}

void sub_1C2154E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;

  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7605F0);
  a14 = v22;
  a15 = sub_1C2156660(&qword_1EF7605F8, &qword_1EF7605F0, MEMORY[0x1E0CB25E0]);
  LOBYTE(a11) = 125;
  __swift_project_boxed_opaque_existential_1(&a11, v22);
  sub_1C2175330();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a11);
  v23 = a17;
  a12 = v19;
  v17[3] = v18;
  v17[4] = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  Message.init(jsonUTF8Data:options:)(v23, v18, v21, boxed_opaque_existential_1);
  if (v20)
    __swift_deallocate_boxed_opaque_existential_1((uint64_t)v17);
  JUMPOUT(0x1C215505CLL);
}

uint64_t sub_1C2154E3C(uint64_t a1, uint64_t a2, ...)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  va_list va;

  va_start(va, a2);
  if (v8 >> 32 < (int)v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  swift_retain();
  sub_1C2156410((int)v8, v8 >> 32, v9 & 0x3FFFFFFFFFFFFFFFLL, v6, v5, (uint64_t (**)())va);
  sub_1C20A8058(v8, v9);
  if (v7)
    JUMPOUT(0x1C2154F18);
  v14 = v6;
  v15 = v5;
  v2[3] = v3;
  v2[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2);
  swift_bridgeObjectRetain();
  Message.init(jsonString:options:)(v12, v13, &v14, v3, v4, boxed_opaque_existential_1);
  result = swift_bridgeObjectRelease();
  if (*MEMORY[0x1E0C80C00] != v16)
LABEL_6:
    JUMPOUT(0x1C215509CLL);
  return result;
}

void sub_1C2154E98(uint64_t a1, uint64_t a2, ...)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va;

  va_start(va, a2);
  v7 = v6 & 0x3FFFFFFFFFFFFFFFLL;
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  swift_retain();
  swift_retain();
  sub_1C2156410(v8, v9, v7, v3, v2, (uint64_t (**)())va);
  if (v4)
  {
    swift_release();
    swift_release();
    JUMPOUT(0x1C2154F18);
  }
  swift_release();
  swift_release();
  JUMPOUT(0x1C2154FFCLL);
}

void sub_1C2154EEC()
{
  JUMPOUT(0x1C2154EFCLL);
}

void sub_1C2154F20(uint64_t a1@<X8>, uint64_t a2, int a3, __int16 a4, char a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *boxed_opaque_existential_1;

  v18 = a1 >> 32;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7605F0);
  a10 = v19;
  a11 = sub_1C2156660(&unk_1EF7605F8, &qword_1EF7605F0, MEMORY[0x1E0CB25E0]);
  LOBYTE(a7) = 125;
  a6 = *(_BYTE *)__swift_project_boxed_opaque_existential_1(&a7, v19);
  sub_1C2175330(v18, v18, &a6, 1);
  __swift_destroy_boxed_opaque_existential_1(&a7);
  v20 = a13;
  a8 = v15;
  *(_QWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 32) = v17;
  boxed_opaque_existential_1 = (_QWORD *)__swift_allocate_boxed_opaque_existential_1(v13);
  Message.init(jsonUTF8Data:options:)(v20, v14, v17, boxed_opaque_existential_1);
  if (v16)
    __swift_deallocate_boxed_opaque_existential_1(v13);
  JUMPOUT(0x1C215505CLL);
}

void sub_1C21550C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)())
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  __int128 *v18;
  __int128 v19;
  uint64_t v20;
  unsigned int v21;
  BOOL v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t (*v28)();
  unsigned int v29;
  uint64_t v30;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;

  if (a1)
  {
    v7 = a2 - a1;
    v8 = a2 - a1 - 1;
    if (a2 - a1 >= 1)
    {
      type metadata accessor for DoubleParser();
      v10 = swift_allocObject();
      v11 = swift_slowAlloc();
      *(_QWORD *)(v10 + 16) = v11;
      *(_QWORD *)(v10 + 24) = v11 + 128;
      v33 = v7;
      v12 = sub_1C20B0FD4();
      if (v5)
      {
LABEL_40:
        swift_release();
        return;
      }
      if (v12 == (char *)0x65756C6176 && v13 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = sub_1C21757C8();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
LABEL_38:
          sub_1C21566A0();
          swift_allocError();
          *v32 = 1;
          goto LABEL_39;
        }
      }
      v15 = 0;
      if (!v7)
        goto LABEL_14;
      while (1)
      {
        v16 = *(unsigned __int8 *)(a1 + v15);
        if (v16 > 0x20 || ((1 << v16) & 0x100002600) == 0)
          break;
        if (v7 == ++v15)
          goto LABEL_14;
      }
      if (v7 == v15)
      {
LABEL_14:
        sub_1C20AFA84();
        swift_allocError();
        v19 = xmmword_1C2175D80;
      }
      else
      {
        if (v16 != 58)
        {
          sub_1C20AFA84();
          swift_allocError();
          *v25 = 0;
          v25[1] = 0;
          goto LABEL_39;
        }
        v20 = v15 + 1;
        v34 = v15 + 1;
        if (v8 != v15)
        {
          while (1)
          {
            v21 = *(unsigned __int8 *)(a1 + v20);
            v22 = v21 > 0x20;
            v23 = (1 << v21) & 0x100002600;
            if (v22 || v23 == 0)
              break;
            if (v7 == ++v20)
            {
              v20 = v7;
              goto LABEL_27;
            }
          }
          v7 = v20;
LABEL_27:
          v34 = v20;
        }
        sub_1C20B3100();
        v26 = v34;
        if (__OFSUB__(v34, v7))
        {
          __break(1u);
          __break(1u);
          return;
        }
        v27 = sub_1C20AD098((char *)(a1 + v7), v34 - v7);
        if (v28)
        {
          *a5 = v27;
          a5[1] = v28;
          swift_bridgeObjectRelease();
          if (v34 != v33)
          {
            while (1)
            {
              v29 = *(unsigned __int8 *)(a1 + v26);
              v22 = v29 > 0x20;
              v30 = (1 << v29) & 0x100002600;
              if (v22 || v30 == 0)
                break;
              if (v33 == ++v26)
              {
                v26 = v33;
                break;
              }
            }
          }
          if (v26 == v33)
            goto LABEL_40;
          goto LABEL_38;
        }
        sub_1C20AFA84();
        swift_allocError();
        v19 = xmmword_1C217C2E0;
      }
      *v18 = v19;
LABEL_39:
      swift_willThrow();
      goto LABEL_40;
    }
  }
}

uint64_t sub_1C21553BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD aBlock[3];
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;

  swift_beginAccess();
  sub_1C212F90C(v0 + 4, (uint64_t)&v26);
  if (!v29)
    return v26;
  if (v29 == 1)
  {
    sub_1C20A8734(&v26, (uint64_t)aBlock);
    v1 = (uint64_t)v21;
    v2 = (uint64_t)v22;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v21);
    v17 = Message.serializedData(partial:)(1, v1, v2);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    return v17;
  }
  v3 = v26;
  v19 = v27;
  v4 = v28;
  swift_beginAccess();
  v6 = v0[2];
  v5 = v0[3];
  swift_bridgeObjectRetain();
  v7 = sub_1C213D808(v6, v5);
  v9 = v8;
  v24 = 0;
  v25 = 0;
  if (qword_1EF75CD40 != -1)
    goto LABEL_13;
  while (1)
  {
    v10 = (void *)qword_1EF7603B8;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = &v24;
    v11[3] = v7;
    v11[4] = v9;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1C213E8F4;
    *(_QWORD *)(v7 + 24) = v11;
    v22 = sub_1C2156714;
    v23 = v7;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C213E148;
    v21 = &block_descriptor_59;
    v12 = _Block_copy(aBlock);
    v13 = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v13, v12);

    _Block_release(v12);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v12 & 1) == 0)
      break;
    __break(1u);
LABEL_13:
    swift_once();
  }
  v14 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v14)
  {
    v24 = v19;
    LOBYTE(v25) = v4;
    sub_1C2154CE0(v3, *((uint64_t *)&v3 + 1), (uint64_t)&v24, v14);
    v15 = (uint64_t)v21;
    v16 = (uint64_t)v22;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v21);
    v17 = Message.serializedData(partial:)(1, v15, v16);
    sub_1C20A8058(v3, *((unint64_t *)&v3 + 1));
    goto LABEL_10;
  }
  sub_1C20A8058(v3, *((unint64_t *)&v3 + 1));
  return 0;
}

double sub_1C21556D0()
{
  uint64_t v0;
  double result;

  type metadata accessor for AnyMessageStorage();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(v0 + 32) = xmmword_1C2175DE0;
  *(_BYTE *)(v0 + 72) = 0;
  qword_1EF76E188 = v0;
  return result;
}

uint64_t sub_1C2155710(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[48];

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 32) = xmmword_1C2175DE0;
  *(_BYTE *)(v1 + 72) = 0;
  swift_beginAccess();
  v4 = a1[2];
  v3 = a1[3];
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1C212F90C(a1 + 4, (uint64_t)v6);
  swift_release();
  swift_beginAccess();
  sub_1C212F948((uint64_t)v6, v1 + 32);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C2155810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  swift_beginAccess();
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = v6 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1C213D808(v6, v7);
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v9 == (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3) && v11 == v12)
      v14 = 1;
    else
      v14 = sub_1C21757C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1C2155900(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  int v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  _BYTE *v31;
  uint64_t result;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;

  v52 = a2;
  v53 = a1;
  v51 = sub_1C2175690();
  v9 = *(_QWORD *)(v51 - 8);
  v11 = MEMORY[0x1E0C80A78](v51, v10);
  v13 = (char *)&v50 - v12;
  v54 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x1E0C80A78](v11, v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v15, v18);
  v50 = (uint64_t)&v50 - v20;
  v22 = MEMORY[0x1E0C80A78](v19, v21);
  v24 = (char *)&v50 - v23;
  v25 = *a3;
  v26 = *((_BYTE *)a3 + 8);
  v55 = a5;
  if ((sub_1C2155810(v22, a4, a5) & 1) != 0)
  {
    swift_beginAccess();
    sub_1C212F90C((uint64_t *)(v5 + 32), (uint64_t)&v63);
    if (v66)
    {
      if (v66 == 1)
      {
        sub_1C20A8734(&v63, (uint64_t)v60);
        sub_1C20A84A8((uint64_t)v60, (uint64_t)&v58);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
        v27 = swift_dynamicCast();
        v28 = v54;
        v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        if (v27)
        {
          v29(v13, 0, 1, a4);
          v30 = v53;
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v53, a4);
          (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v13, a4);
        }
        else
        {
          v29(v13, 1, 1, a4);
          (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v51);
          v39 = v61;
          v40 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          v41 = v67;
          v42 = Message.serializedData(partial:)(1, v39, v40);
          if (!v41)
          {
            v44 = v42;
            v45 = v43;
            sub_1C20AC3C4(v52, (uint64_t)&v58);
            v56 = 100;
            v57 = 0;
            v46 = v50;
            Message.init(serializedData:extensions:partial:options:)(v44, v45, (uint64_t)&v58, a4, v55, v50);
            v47 = v53;
            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v53, a4);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v47, v46, a4);
          }
        }
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      }
      else
      {
        v37 = v63;
        v58 = v64;
        v59 = v65;
        v38 = v67;
        sub_1C2154CE0(v63, *((uint64_t *)&v63 + 1), (uint64_t)&v58, a4);
        if (v38)
        {
          return sub_1C20A8058(v37, *((unint64_t *)&v37 + 1));
        }
        else
        {
          v48 = v54;
          v49 = v53;
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, a4);
          sub_1C20A8058(v37, *((unint64_t *)&v37 + 1));
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
          swift_dynamicCast();
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v49, v17, a4);
        }
      }
    }
    else
    {
      v33 = v63;
      sub_1C20AC3C4(v52, (uint64_t)v60);
      v58 = v25;
      v59 = v26;
      v34 = v67;
      result = Message.init(serializedData:extensions:partial:options:)(v33, *((unint64_t *)&v33 + 1), (uint64_t)v60, a4, v55, (uint64_t)v24);
      if (!v34)
      {
        v35 = v54;
        v36 = v53;
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, a4);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v36, v24, a4);
      }
    }
  }
  else
  {
    sub_1C21566A0();
    swift_allocError();
    *v31 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C2155D5C()
{
  _QWORD *v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD v13[6];
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;
  char v17;

  swift_beginAccess();
  sub_1C212F90C(v0 + 4, (uint64_t)&v15);
  if (!v17)
    return sub_1C20A8058(v15, v16);
  if (v17 == 1)
    return sub_1C21563E4((uint64_t)&v15);
  sub_1C20A8058(v15, v16);
  swift_beginAccess();
  v3 = v0[2];
  v2 = v0[3];
  swift_bridgeObjectRetain();
  v4 = sub_1C213D808(v3, v2);
  v6 = v5;
  v14[0] = 0;
  v14[1] = 0;
  if (qword_1EF75CD40 != -1)
    goto LABEL_11;
  while (1)
  {
    v7 = (void *)qword_1EF7603B8;
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v14;
    v8[3] = v4;
    v8[4] = v6;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_1C213E54C;
    *(_QWORD *)(v4 + 24) = v8;
    v13[4] = sub_1C2140178;
    v13[5] = v4;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1C213E148;
    v13[3] = &block_descriptor_1;
    v9 = _Block_copy(v13);
    v10 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v10, v9);

    _Block_release(v9);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v9 & 1) == 0)
      break;
    __break(1u);
LABEL_11:
    swift_once();
  }
  v11 = v14[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v11)
  {
    sub_1C2107C2C();
    swift_allocError();
    *v12 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C2155FA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C21563E4(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyMessageStorage()
{
  return objc_opt_self();
}

uint64_t destroy for AnyMessageStorage.InternalState(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 == 1)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  else
    return sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t initializeWithCopy for AnyMessageStorage.InternalState(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = *((unsigned __int8 *)a2 + 40);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1C20A8008(*a2, v8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = 2;
  }
  else if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
    v6 = 1;
  }
  else
  {
    v10 = *a2;
    v9 = a2[1];
    sub_1C20A8008(*a2, v9);
    v6 = 0;
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v9;
  }
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for AnyMessageStorage.InternalState(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if ((uint64_t *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v8 = *a2;
      v9 = a2[1];
      sub_1C20A8008(*a2, v9);
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v9;
      v10 = a2[2];
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 16) = v10;
      v7 = 2;
    }
    else if (v5 == 1)
    {
      v6 = a2[3];
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
      v7 = 1;
    }
    else
    {
      v12 = *a2;
      v11 = a2[1];
      sub_1C20A8008(v12, v11);
      v7 = 0;
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v11;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyMessageStorage.InternalState(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    }
    else if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      LOBYTE(v5) = 1;
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyMessageStorage.InternalState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnyMessageStorage.InternalState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2156344(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_1C2156360(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyMessageStorage.InternalState()
{
  return &type metadata for AnyMessageStorage.InternalState;
}

uint64_t sub_1C2156398()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C21563BC()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1C21563E4(uint64_t a1)
{
  destroy for AnyMessageStorage.InternalState(a1);
  return a1;
}

void sub_1C2156410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (**a6)())
{
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = sub_1C21752C4();
  if (v11)
  {
    v12 = sub_1C21752E8();
    if (__OFSUB__(a1, v12))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v11 += a1 - v12;
  }
  v13 = __OFSUB__(a2, a1);
  v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = sub_1C21752DC();
  if (v15 >= v14)
    v16 = v14;
  else
    v16 = v15;
  v17 = v11 + v16;
  if (v11)
    v18 = v17;
  else
    v18 = 0;
  sub_1C21550C0(v11, v18, a4, a5 & 1, a6);
}

uint64_t sub_1C21564C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  v14 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v14 = a3 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a3 = sub_1C213E59C((uint64_t)v13, 0xD000000000000013, 0x80000001C217EB00, a5, a6);
    a4 = v15;
  }
  sub_1C21275A4((uint64_t)v13, a3, a4, a1, a5, a6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a5);
}

uint64_t sub_1C21565D0()
{
  return swift_deallocObject();
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1C3BB8018);
  return result;
}

uint64_t sub_1C2156614()
{
  return swift_deallocObject();
}

uint64_t sub_1C2156624(__int128 *a1, uint64_t a2)
{
  assignWithCopy for TextFormatScanner(a2, a1);
  return a2;
}

uint64_t sub_1C2156660(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BB7F64](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C21566A0()
{
  unint64_t result;

  result = qword_1EF760600;
  if (!qword_1EF760600)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for AnyUnpackError, &type metadata for AnyUnpackError);
    atomic_store(result, (unint64_t *)&qword_1EF760600);
  }
  return result;
}

uint64_t sub_1C21566E4()
{
  return swift_deallocObject();
}

uint64_t sub_1C21566F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C2156704()
{
  return swift_deallocObject();
}

uint64_t sub_1C2156754@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v25);
    v7 = v26;
    if (*(_QWORD *)(v26 + 16) && ((a2 & 1) != 0 ? (v8 = 0) : (v8 = a1), v9 = sub_1C20A9B94(v8), (v10 & 1) != 0))
    {
      v11 = *(_QWORD *)(v7 + 56) + 80 * v9;
      v22 = *(_QWORD *)(v11 + 8);
      v23 = *(_QWORD *)v11;
      v20 = *(_QWORD *)(v11 + 24);
      v21 = *(_QWORD *)(v11 + 16);
      v24 = *(_OWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 56);
      v13 = *(_QWORD *)(v11 + 64);
      v14 = *(unsigned __int8 *)(v11 + 72);
      v15 = *(unsigned __int8 *)(v11 + 73);
      v16 = *(unsigned __int16 *)(v11 + 32);
      sub_1C20B7C58(*(_QWORD *)v11, v22, v21, v20, v16);
      sub_1C20A9EA4(v12, v13, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v12, v13, v14, v15);
      sub_1C20B7C80(v23, v22, v21, v20, v16);
      result = sub_1C20AA8C4(v12, v13, v14, v15);
      v17 = v24;
      if (v15)
        v18 = 256;
      else
        v18 = 0;
      v19 = v18 | v14;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v12 = 0;
      v13 = 0;
      v17 = 0uLL;
      v19 = -256;
    }
    *(_OWORD *)a3 = v17;
    *(_QWORD *)(a3 + 16) = v12;
    *(_QWORD *)(a3 + 24) = v13;
    *(_WORD *)(a3 + 32) = v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21568F8@<X0>(_BOOL8 a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  _BOOL8 v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v25);
    v7 = v26;
    if (*(_QWORD *)(v26 + 16) && ((a2 & 1) != 0 ? (v8 = a1) : (v8 = a1), v9 = sub_1C20A9B94(v8), (v10 & 1) != 0))
    {
      v11 = *(_QWORD *)(v7 + 56) + 80 * v9;
      v22 = *(_QWORD *)(v11 + 8);
      v23 = *(_QWORD *)v11;
      v20 = *(_QWORD *)(v11 + 24);
      v21 = *(_QWORD *)(v11 + 16);
      v24 = *(_OWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 56);
      v13 = *(_QWORD *)(v11 + 64);
      v14 = *(unsigned __int8 *)(v11 + 72);
      v15 = *(unsigned __int8 *)(v11 + 73);
      v16 = *(unsigned __int16 *)(v11 + 32);
      sub_1C20B7C58(*(_QWORD *)v11, v22, v21, v20, v16);
      sub_1C20A9EA4(v12, v13, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v12, v13, v14, v15);
      sub_1C20B7C80(v23, v22, v21, v20, v16);
      result = sub_1C20AA8C4(v12, v13, v14, v15);
      v17 = v24;
      if (v15)
        v18 = 256;
      else
        v18 = 0;
      v19 = v18 | v14;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v12 = 0;
      v13 = 0;
      v17 = 0uLL;
      v19 = -256;
    }
    *(_OWORD *)a3 = v17;
    *(_QWORD *)(a3 + 16) = v12;
    *(_QWORD *)(a3 + 24) = v13;
    *(_WORD *)(a3 + 32) = v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2156AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2156C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2156DDC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1 + 1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2156F7C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2157118@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21572B4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1 + 1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2157454@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1 + 1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21575F4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    v5 = v23;
    if (*(_QWORD *)(v23 + 16) && (v6 = sub_1C20A9B94(a1), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(v5 + 56) + 80 * v6;
      v19 = *(_QWORD *)(v8 + 8);
      v20 = *(_QWORD *)v8;
      v17 = *(_QWORD *)(v8 + 24);
      v18 = *(_QWORD *)(v8 + 16);
      v21 = *(_OWORD *)(v8 + 40);
      v9 = *(_QWORD *)(v8 + 56);
      v10 = *(_QWORD *)(v8 + 64);
      v11 = *(unsigned __int8 *)(v8 + 72);
      v12 = *(unsigned __int8 *)(v8 + 73);
      v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C20B7C58(*(_QWORD *)v8, v19, v18, v17, v13);
      sub_1C20A9EA4(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v9, v10, v11, v12);
      sub_1C20B7C80(v20, v19, v18, v17, v13);
      result = sub_1C20AA8C4(v9, v10, v11, v12);
      v14 = v21;
      if (v12)
        v15 = 256;
      else
        v15 = 0;
      v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v9 = 0;
      v10 = 0;
      v14 = 0uLL;
      v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(_QWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2157790(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[9];
  uint64_t v48;

  v3 = v2;
  swift_beginAccess();
  v6 = a1[3];
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = a1[2] & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v8 = a1[4];
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1C2175834();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v41 = a1;
      v48 = v2;
      v10 = a2[8];
      v11 = a2[6];
      v40 = a2[7];
      v12 = a2;
      v13 = a2[5];
      v15 = v12[3];
      v14 = v12[4];
      v17 = v12[1];
      v16 = v12[2];
      v42 = v12;
      v43 = v10;
      v18 = *v12;
      v44 = v8;
      swift_bridgeObjectRetain_n();
      v19 = v43;
      v20 = v40;
      v21 = 32;
      do
      {
        v22 = *(_OWORD *)(v44 + v21);
        v23 = *(_OWORD *)(v44 + v21 + 16);
        v24 = *(_OWORD *)(v44 + v21 + 48);
        v47[2] = *(_OWORD *)(v44 + v21 + 32);
        v47[3] = v24;
        v47[0] = v22;
        v47[1] = v23;
        v25 = *(_OWORD *)(v44 + v21 + 64);
        v26 = *(_OWORD *)(v44 + v21 + 80);
        v27 = *(_OWORD *)(v44 + v21 + 112);
        v47[6] = *(_OWORD *)(v44 + v21 + 96);
        v47[7] = v27;
        v47[4] = v25;
        v47[5] = v26;
        v45 = v20;
        v46 = v19;
        sub_1C216E510((uint64_t)v47);
        v28 = v48;
        sub_1C20BFC14();
        if (v28)
          MEMORY[0x1C3BB7EEC](v28);
        v48 = 0;
        sub_1C216E590((uint64_t)v47);
        v20 = v45;
        v21 += 128;
        v19 = v46;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      *v42 = v18;
      v42[1] = v17;
      v42[2] = v16;
      v42[3] = v15;
      v42[4] = v14;
      v42[5] = v13;
      a2 = v42;
      v42[6] = v11;
      v42[7] = v45;
      v42[8] = v46;
      swift_bridgeObjectRelease();
      v3 = v48;
      a1 = v41;
    }
  }
  swift_beginAccess();
  v29 = a1[5];
  if (*(_QWORD *)(v29 + 16))
  {
    sub_1C2175834();
    sub_1C2175834();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      swift_bridgeObjectRetain();
      v31 = v29 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C21754C8();
        swift_bridgeObjectRelease();
        v31 += 16;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  if (!*(_QWORD *)(a1[6] + 16)
    || (v32 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C2111214(v32), result = swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    v34 = a1[8];
    if (v34)
    {
      v36 = a1[9];
      v35 = a1[10];
      v37 = a1;
      v38 = a1[7];
      sub_1C2175834();
      swift_bridgeObjectRetain();
      sub_1C20A8008(v36, v35);
      sub_1C20BE454(a2, v38, v34, v36, v35);
      v39 = v38;
      a1 = v37;
      sub_1C20C3024(v39, v34, v36, v35);
    }
    result = swift_beginAccess();
    if (a1[11])
    {
      sub_1C2175834();
      return sub_1C2175834();
    }
  }
  return result;
}

uint64_t sub_1C2157B0C(uint64_t a1, char **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v6 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v6, v5);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(), sub_1C2161524(v13, 2uLL), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
      || (v15 = swift_bridgeObjectRetain(), sub_1C20AB2EC(v15, 3uLL), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16)
        || (v16 = swift_bridgeObjectRetain(),
            sub_1C2162D28(v16, 4uLL, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C20C34A0, (void (*)(uint64_t, _QWORD *))sub_1C215AB5C), result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        v17 = *(_QWORD *)(a1 + 64);
        if (!v17
          || (result = sub_1C215F974(*(_QWORD *)(a1 + 56), v17, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), 5uLL), !v2))
        {
          result = swift_beginAccess();
          v18 = *(_QWORD *)(a1 + 88);
          if (v18)
          {
            v19 = *(_BYTE *)(a1 + 96);
            sub_1C20A988C(6uLL);
            sub_1C20A9EB4((uint64_t)": ", 2, v20);
            sub_1C215F51C(v18, v19);
            v21 = (uint64_t)*a2;
            result = swift_isUniquelyReferenced_nonNull_native();
            *a2 = (char *)v21;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v21 + 16) + 1, 1, (char *)v21);
              v21 = result;
              *a2 = (char *)result;
            }
            v23 = *(_QWORD *)(v21 + 16);
            v22 = *(_QWORD *)(v21 + 24);
            if (v23 >= v22 >> 1)
            {
              result = (uint64_t)sub_1C214E1A4((char *)(v22 > 1), v23 + 1, 1, (char *)v21);
              v21 = result;
            }
            *(_QWORD *)(v21 + 16) = v23 + 1;
            *(_BYTE *)(v21 + v23 + 32) = 10;
            *a2 = (char *)v21;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C2157E0C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760960);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Type, (uint64_t (*)(uint64_t))sub_1C20C3B3C, (void (*)(uint64_t, __int128 *))sub_1C2157B0C);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2157EE4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760958);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2162F88(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2157FB4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760950);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Enum, (uint64_t (*)(uint64_t))sub_1C20C3DD4, (void (*)(uint64_t, __int128 *))sub_1C215A770);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C215808C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760948);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C216370C(1, (uint64_t)&type metadata for Google_Protobuf_EnumValue, (uint64_t (*)(uint64_t))sub_1C20C3F20, (uint64_t)&unk_1E7BE1398, (void (*)(__int128 *))sub_1C20C1CF8);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2158168(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760940);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C20C34A0, (void (*)(uint64_t, __int128 *))sub_1C215AB5C);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158240(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760938);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Api, (uint64_t (*)(uint64_t))sub_1C20CAF24, (void (*)(uint64_t, __int128 *))sub_1C215B0DC);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158318()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760930);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163490(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C21583E8()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760928);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C216370C(1, (uint64_t)&type metadata for Google_Protobuf_Mixin, (uint64_t (*)(uint64_t))sub_1C20CB1BC, (uint64_t)&unk_1E7BE1348, (void (*)(__int128 *))sub_1C20CA224);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C21584C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2159CDC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorSet, &qword_1EF760920, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C216397C);
}

uint64_t sub_1C21584E0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760918);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20FE420, (void (*)(uint64_t, __int128 *))sub_1C215B914);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C21585B8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760910);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C20FFB94, (void (*)(uint64_t, __int128 *))sub_1C215C2F0);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158690(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760908);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163C1C(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(uint64_t))sub_1C20FFCE0, (void (*)(__int128 *, uint64_t, unint64_t, uint64_t))sub_1C20E4F48);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158768(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C2158A5C(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ReservedRange, &qword_1EF760900, (uint64_t (*)(uint64_t))sub_1C20FFE2C);
}

uint64_t sub_1C215878C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C2158FA8(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions, &qword_1EF7608F8, (uint64_t (*)(uint64_t))sub_1C20FE46C);
}

uint64_t sub_1C21587B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608F0);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100080, (void (*)(uint64_t, __int128 *))sub_1C215CB50);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158888(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608E8);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163C1C(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(uint64_t))sub_1C21001CC, (void (*)(__int128 *, uint64_t, unint64_t, uint64_t))sub_1C20E790C);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158960(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608E0);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100318, (void (*)(uint64_t, __int128 *))sub_1C215D514);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158A38(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C2158A5C(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, &qword_1EF7608D8, (uint64_t (*)(uint64_t))sub_1C2100464);
}

uint64_t sub_1C2158A5C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v14 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163E90(1, a1, a2, a3 | ((HIDWORD(a3) & 1) << 32), a4 | ((unint64_t)(BYTE4(a4) & 1) << 32), a5, a7);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C2158B60(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608D0);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(uint64_t))sub_1C21005B0, (void (*)(uint64_t, __int128 *))sub_1C215D7B0);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158C38(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608C8);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(uint64_t))sub_1C21006FC, (void (*)(uint64_t, __int128 *))sub_1C215DB4C);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158D10(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608C0);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100848, (void (*)(uint64_t, __int128 *))sub_1C215DFDC);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2158DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2159928(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_FileOptions, &qword_1EF7608B8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C216416C);
}

uint64_t sub_1C2158E04()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608B0);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2164428(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2158EC4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7608A8);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C21647EC(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2158F84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C2158FA8(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_OneofOptions, &qword_1EF7608A0, (uint64_t (*)(uint64_t))sub_1C20FED78);
}

uint64_t sub_1C2158FA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v14 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2164A58(1, a1, a2, a3, a4, a5, a7);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C2159090()
{
  return sub_1C2159278((uint64_t)&type metadata for Google_Protobuf_EnumOptions, &qword_1EF760898, (void (*)(uint64_t))sub_1C2164D1C);
}

uint64_t sub_1C21590AC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760890);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2165050(1, (uint64_t)&type metadata for Google_Protobuf_EnumValueOptions, (uint64_t (*)(uint64_t))sub_1C20FEF30, (uint64_t)&unk_1E7BE11E0, 1uLL);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2159184()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760888);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2165050(1, (uint64_t)&type metadata for Google_Protobuf_ServiceOptions, (uint64_t (*)(uint64_t))sub_1C20FEF74, (uint64_t)&unk_1E7BE11B8, 0x21uLL);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C215925C()
{
  return sub_1C2159278((uint64_t)&type metadata for Google_Protobuf_MethodOptions, &qword_1EF760880, (void (*)(uint64_t))sub_1C2165340);
}

uint64_t sub_1C2159278(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1C2175480();
  sub_1C21754F8();
  a3(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2159330()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760878);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C21655AC(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2159408()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760870);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2165830(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C21594C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760868);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2165BE8(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo, (uint64_t (*)(uint64_t))sub_1C21013E4, (void (*)(uint64_t, uint64_t))sub_1C2161E04);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C21595A0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760860);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2165E74(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2159668(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760858);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2165BE8(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo, (uint64_t (*)(uint64_t))sub_1C2101638, (void (*)(uint64_t, uint64_t))sub_1C2162AF4);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2159740()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760850);
  v1 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C21660E8(1);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2159808(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7607F8);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C216635C(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C21598CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2159CDC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FieldMask, &qword_1EF7607E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C21665F0);
}

uint64_t sub_1C21598E8(unint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return sub_1C215A4C0(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_Timestamp, &qword_1EF760840, (uint64_t (*)(uint64_t))sub_1C2119130);
}

uint64_t sub_1C215990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2159928(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_BytesValue, &qword_1EF7607E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2166BEC);
}

uint64_t sub_1C2159928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v13 = sub_1C2175480();
  sub_1C21754F8();
  a7(1, a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C21599F4(uint64_t a1, unint64_t a2, float a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760820);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2166E80(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2159AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2159CDC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Int32Value, &qword_1EF760808, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C21671A8);
}

uint64_t sub_1C2159AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2159CDC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Int64Value, &qword_1EF760818, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C216743C);
}

uint64_t sub_1C2159AF0(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760828);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C21677D4(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2159BB4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C2159BD8(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_StringValue, &qword_1EF7607F0, (uint64_t (*)(uint64_t))sub_1C213C818);
}

uint64_t sub_1C2159BD8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v14 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2168130(1, a1, a2, a3, a4, a5, a7);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C2159CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2159CDC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_UInt32Value, &qword_1EF760800, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2167AFC);
}

uint64_t sub_1C2159CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  v11 = sub_1C2175480();
  sub_1C21754F8();
  a6(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C2159D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2159CDC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_UInt64Value, &qword_1EF760810, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2167E18);
}

uint64_t sub_1C2159DB4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C2159BD8(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_SourceContext, &qword_1EF760848, (uint64_t (*)(uint64_t))sub_1C20C4E54);
}

ValueMetadata *sub_1C2159DD8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *result;
  _QWORD v16[2];
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  _BYTE v21[40];
  _QWORD v22[5];
  ValueMetadata *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v6 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v6, v7);
  v19 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = &type metadata for Google_Protobuf_Any;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760830);
  v23 = (ValueMetadata *)sub_1C2175480();
  v24 = v9;
  sub_1C21754F8();
  v17 = (char *)v23;
  v18 = v24;
  v22[3] = &type metadata for Google_Protobuf_Any;
  v10 = sub_1C20C4DCC();
  v22[0] = a1;
  v22[1] = a2;
  v22[4] = v10;
  v22[2] = a3;
  sub_1C20A84A8((uint64_t)v22, (uint64_t)v21);
  v20 = 1;
  sub_1C20A8008(a1, a2);
  swift_retain();
  sub_1C20A84EC((uint64_t)v21, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v20, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1C20A8008(a1, a2);
  swift_retain();
  sub_1C215283C((char **)&v23);
  sub_1C20A8058(a1, a2);
  swift_release();
  v11 = v25;
  v12 = v26;
  v22[0] = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v11);
  swift_bridgeObjectRetain();
  v16[1] = v12;
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  sub_1C2175444();
  v14 = v13;
  result = (ValueMetadata *)swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = (ValueMetadata *)v17;
    v24 = v18;
    swift_bridgeObjectRetain();
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C215A0D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11;
  char v12;
  _BYTE v13[40];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v4 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760838);
  *(_QWORD *)&v15 = sub_1C2175480();
  *((_QWORD *)&v15 + 1) = v6;
  sub_1C21754F8();
  v11 = v15;
  v14[3] = &type metadata for Google_Protobuf_Empty;
  v14[4] = sub_1C2135044();
  v14[0] = a1;
  v14[1] = a2;
  sub_1C20A84A8((uint64_t)v14, (uint64_t)v13);
  v12 = 1;
  sub_1C20A8008(a1, a2);
  sub_1C20A84EC((uint64_t)v13, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C20A8008(a1, a2);
  sub_1C2122EF0((uint64_t)&v15, a1, a2);
  sub_1C20A8058(a1, a2);
  v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  sub_1C2175444();
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v11;
    swift_bridgeObjectRetain();
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C215A3C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7607C8);
  v7 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2163204(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C213E7C8, (void (*)(uint64_t, __int128 *))sub_1C216B3AC);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C215A49C(unint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return sub_1C215A4C0(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_Duration, &qword_1EF7607D8, (uint64_t (*)(uint64_t))sub_1C213E6FC);
}

uint64_t sub_1C215A4C0(unint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v14 = sub_1C2175480();
  sub_1C21754F8();
  sub_1C2168648(1, a1, a2, a3, a4, a5, a7);
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C215A5A8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_beginAccess();
  v5 = a1[3];
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = a1[2] & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(a1[4] + 16)
    || (v7 = swift_bridgeObjectRetain(), sub_1C21114CC(v7), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1[5] + 16)
      || (v9 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C2111214(v9), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      v10 = a1[7];
      if (v10)
      {
        v12 = a1[8];
        v11 = a1[9];
        v13 = a1[6];
        sub_1C2175834();
        swift_bridgeObjectRetain();
        sub_1C20A8008(v12, v11);
        sub_1C20BE454(a2, v13, v10, v12, v11);
        sub_1C20C3024(v13, v10, v12, v11);
      }
      result = swift_beginAccess();
      if (a1[10])
      {
        sub_1C2175834();
        return sub_1C2175834();
      }
    }
  }
  return result;
}

uint64_t sub_1C215A770(uint64_t a1, char **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v6 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v6, v5);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(), sub_1C2161770(v13, 2uLL), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
      || (v15 = swift_bridgeObjectRetain(),
          sub_1C2162D28(v15, 3uLL, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C20C34A0, (void (*)(uint64_t, _QWORD *))sub_1C215AB5C), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      v16 = *(_QWORD *)(a1 + 56);
      if (!v16
        || (result = sub_1C215F974(*(_QWORD *)(a1 + 48), v16, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), 4uLL), !v2))
      {
        result = swift_beginAccess();
        v17 = *(_QWORD *)(a1 + 80);
        if (v17)
        {
          v18 = *(_BYTE *)(a1 + 88);
          sub_1C20A988C(5uLL);
          sub_1C20A9EB4((uint64_t)": ", 2, v19);
          sub_1C215F51C(v17, v18);
          v20 = (uint64_t)*a2;
          result = swift_isUniquelyReferenced_nonNull_native();
          *a2 = (char *)v20;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v20 + 16) + 1, 1, (char *)v20);
            v20 = result;
            *a2 = (char *)result;
          }
          v22 = *(_QWORD *)(v20 + 16);
          v21 = *(_QWORD *)(v20 + 24);
          if (v22 >= v21 >> 1)
          {
            result = (uint64_t)sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, (char *)v20);
            v20 = result;
          }
          *(_QWORD *)(v20 + 16) = v22 + 1;
          *(_BYTE *)(v20 + v22 + 32) = 10;
          *a2 = (char *)v20;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215AA2C(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  v2 = a1[3];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = a1[2] & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  result = swift_beginAccess();
  v5 = a1[6];
  if (v5)
  {
    v7 = a1[4];
    v6 = a1[5];
    sub_1C2175834();
    result = swift_beginAccess();
    v8 = *(_QWORD *)(v5 + 24);
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = *(_QWORD *)(v5 + 16) & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      sub_1C20C309C(v7, v6, v5);
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
      return sub_1C20B8490(v7, v6, v5);
    }
  }
  return result;
}

uint64_t sub_1C215AB5C(_QWORD *a1, char **a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  swift_beginAccess();
  v5 = a1[2];
  v4 = a1[3];
  v6 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v6 = v5 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v7);
    sub_1C20AAAD0(v5, v4);
    v8 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      *a2 = v8;
    }
    v11 = *((_QWORD *)v8 + 2);
    v10 = *((_QWORD *)v8 + 3);
    if (v11 >= v10 >> 1)
      v8 = sub_1C214E1A4((char *)(v10 > 1), v11 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11 + 1;
    v8[v11 + 32] = 10;
    *a2 = v8;
    swift_bridgeObjectRelease();
  }
  result = swift_beginAccess();
  v13 = a1[6];
  if (v13)
  {
    v16 = a1 + 4;
    v14 = a1[4];
    v15 = v16[1];
    sub_1C20A8008(v14, v15);
    swift_retain();
    sub_1C215FB44(v14, v15, v13, 2uLL);
    return sub_1C20B8490(v14, v15, v13);
  }
  return result;
}

uint64_t Google_Protobuf_Value.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)a1 = xmmword_1C2175DE0;
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  result = swift_initStaticObject();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_Value._StorageClass()
{
  return objc_opt_self();
}

double Google_Protobuf_ListValue.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C215AD5C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t result;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[6];
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  swift_beginAccess();
  v6 = a1[3];
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = a1[2] & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v8 = a1[4];
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1C2175834();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v36 = a1;
      v45 = v2;
      v37 = a2[7];
      v38 = a2[8];
      v10 = a2[5];
      v35 = a2[6];
      v11 = a2[3];
      v12 = a2[4];
      v13 = a2[1];
      v14 = a2[2];
      v15 = *a2;
      v39 = v8;
      swift_bridgeObjectRetain_n();
      v16 = v35;
      v17 = v37;
      v18 = v38;
      v19 = 32;
      do
      {
        v20 = *(_OWORD *)(v39 + v19);
        v21 = *(_OWORD *)(v39 + v19 + 32);
        v43[1] = *(_OWORD *)(v39 + v19 + 16);
        v43[2] = v21;
        v43[0] = v20;
        v22 = *(_OWORD *)(v39 + v19 + 48);
        v23 = *(_OWORD *)(v39 + v19 + 64);
        v24 = *(_OWORD *)(v39 + v19 + 80);
        v44 = *(_QWORD *)(v39 + v19 + 96);
        v43[4] = v23;
        v43[5] = v24;
        v43[3] = v22;
        v40 = v16;
        v41 = v17;
        v42 = v18;
        sub_1C216E31C((uint64_t)v43);
        v25 = v45;
        sub_1C20C940C();
        if (v25)
          MEMORY[0x1C3BB7EEC](v25);
        v45 = 0;
        sub_1C216E388((uint64_t)v43);
        v16 = v40;
        v17 = v41;
        v19 += 104;
        v18 = v42;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      *a2 = v15;
      a2[1] = v13;
      a2[2] = v14;
      a2[3] = v11;
      a2[4] = v12;
      a2[5] = v10;
      a2[6] = v40;
      a2[7] = v41;
      a2[8] = v42;
      swift_bridgeObjectRelease();
      v3 = v45;
      a1 = v36;
    }
  }
  swift_beginAccess();
  if (!*(_QWORD *)(a1[5] + 16)
    || (v26 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C2111214(v26), result = swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    v28 = a1[7];
    v29 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0)
      v29 = a1[6] & 0xFFFFFFFFFFFFLL;
    if (v29)
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v30 = a1[9];
    if (v30)
    {
      v32 = a1[10];
      v31 = a1[11];
      v33 = a1[8];
      sub_1C2175834();
      swift_bridgeObjectRetain();
      sub_1C20A8008(v32, v31);
      sub_1C20BE454(a2, v33, v30, v32, v31);
      sub_1C20C3024(v33, v30, v32, v31);
    }
    swift_beginAccess();
    if (!*(_QWORD *)(a1[12] + 16)
      || (v34 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C2111964(v34), result = swift_bridgeObjectRelease(), !v3))
    {
      result = swift_beginAccess();
      if (a1[13])
      {
        sub_1C2175834();
        return sub_1C2175834();
      }
    }
  }
  return result;
}

uint64_t sub_1C215B0DC(uint64_t a1, char **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned __int8 *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v7 = v6 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v6, v5);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(), sub_1C2161BB8(v13, 2uLL), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
      || (v15 = swift_bridgeObjectRetain(),
          sub_1C2162D28(v15, 3uLL, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C20C34A0, (void (*)(uint64_t, _QWORD *))sub_1C215AB5C), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      v17 = *(_QWORD *)(a1 + 48);
      v16 = *(_QWORD *)(a1 + 56);
      v18 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0)
        v18 = v17 & 0xFFFFFFFFFFFFLL;
      if (v18)
      {
        swift_bridgeObjectRetain();
        sub_1C20A988C(4uLL);
        sub_1C20A9EB4((uint64_t)": ", 2, v19);
        sub_1C20AAAD0(v17, v16);
        v20 = *a2;
        v21 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v20;
        if ((v21 & 1) == 0)
        {
          v20 = sub_1C214E1A4(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
          *a2 = v20;
        }
        v23 = *((_QWORD *)v20 + 2);
        v22 = *((_QWORD *)v20 + 3);
        if (v23 >= v22 >> 1)
          v20 = sub_1C214E1A4((char *)(v22 > 1), v23 + 1, 1, v20);
        *((_QWORD *)v20 + 2) = v23 + 1;
        v20[v23 + 32] = 10;
        *a2 = v20;
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v24 = *(_QWORD *)(a1 + 72);
      if (!v24
        || (result = sub_1C215F974(*(_QWORD *)(a1 + 64), v24, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), 5uLL), !v2))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 96) + 16)
          || (v25 = swift_bridgeObjectRetain(), sub_1C2161994(v25, 6uLL), result = swift_bridgeObjectRelease(), !v2))
        {
          result = swift_beginAccess();
          v26 = *(_QWORD *)(a1 + 104);
          if (v26)
          {
            v27 = *(_BYTE *)(a1 + 112);
            sub_1C20A988C(7uLL);
            sub_1C20A9EB4((uint64_t)": ", 2, v28);
            sub_1C215F51C(v26, v27);
            v29 = (uint64_t)*a2;
            result = swift_isUniquelyReferenced_nonNull_native();
            *a2 = (char *)v29;
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v29 + 16) + 1, 1, (char *)v29);
              v29 = result;
              *a2 = (char *)result;
            }
            v31 = *(_QWORD *)(v29 + 16);
            v30 = *(_QWORD *)(v29 + 24);
            if (v31 >= v30 >> 1)
            {
              result = (uint64_t)sub_1C214E1A4((char *)(v30 > 1), v31 + 1, 1, (char *)v29);
              v29 = result;
            }
            *(_QWORD *)(v29 + 16) = v31 + 1;
            *(_BYTE *)(v29 + v31 + 32) = 10;
            *a2 = (char *)v29;
          }
        }
      }
    }
  }
  return result;
}

double Google_Protobuf_Struct.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C215B4F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_beginAccess();
  if (a1[3])
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (a1[5])
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v5 = a1[6];
  if (*(_QWORD *)(v5 + 16))
  {
    sub_1C2175834();
    sub_1C2175834();
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = v5 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C21754C8();
        swift_bridgeObjectRelease();
        v7 += 16;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  if (!*(_QWORD *)(a1[9] + 16)
    || (v8 = swift_bridgeObjectRetain(), sub_1C21134A4(v8, 4), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1[10] + 16)
      || (v10 = swift_bridgeObjectRetain(), sub_1C2113084(v10, 5), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(a1[11] + 16)
        || (v11 = swift_bridgeObjectRetain(), sub_1C2112848(v11), result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(a1[12] + 16)
          || (v12 = swift_bridgeObjectRetain(), sub_1C211282C(v12, 7), result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          v13 = a1[15];
          if (v13)
          {
            v14 = a1[16];
            v16 = a1[13];
            v15 = a1[14];
            sub_1C2175834();
            sub_1C20A8008(v16, v15);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1C20BEA1C(a2, v16, v15, v13, v14);
            sub_1C20EC0E4(v16, v15, v13);
          }
          swift_beginAccess();
          v17 = (_QWORD *)a1[17];
          if (v17)
          {
            v19 = a1[18];
            v18 = a1[19];
            sub_1C2175834();
            swift_bridgeObjectRetain();
            sub_1C20A8008(v19, v18);
            sub_1C20BE618(a2, v17, v19, v18);
            sub_1C20EC150((uint64_t)v17, v19, v18);
          }
          swift_beginAccess();
          v20 = a1[7];
          if (*(_QWORD *)(v20 + 16))
          {
            sub_1C2175834();
            sub_1C2175834();
            v21 = *(_QWORD *)(v20 + 16);
            if (v21)
            {
              v22 = v20 + 32;
              do
              {
                v22 += 4;
                sub_1C217584C();
                --v21;
              }
              while (v21);
            }
          }
          swift_beginAccess();
          v23 = a1[8];
          if (*(_QWORD *)(v23 + 16))
          {
            sub_1C2175834();
            sub_1C2175834();
            v24 = *(_QWORD *)(v23 + 16);
            if (v24)
            {
              v25 = v23 + 32;
              do
              {
                v25 += 4;
                sub_1C217584C();
                --v24;
              }
              while (v24);
            }
          }
          result = swift_beginAccess();
          if (a1[21])
          {
            sub_1C2175834();
            swift_bridgeObjectRetain();
            sub_1C21754C8();
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215B914(_QWORD *a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  char *v39;
  char v40;
  unint64_t v41;
  unint64_t v42;

  v5 = a1 + 2;
  swift_beginAccess();
  v6 = a1[3];
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v13 = a1[5];
  if (v13)
  {
    v14 = a1[4];
    swift_bridgeObjectRetain();
    sub_1C20A988C(2uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v15);
    sub_1C20AAAD0(v14, v13);
    v16 = *a2;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v16;
    if ((v17 & 1) == 0)
    {
      v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      *a2 = v16;
    }
    v19 = *((_QWORD *)v16 + 2);
    v18 = *((_QWORD *)v16 + 3);
    if (v19 >= v18 >> 1)
      v16 = sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1[6] + 16))
  {
    v20 = swift_bridgeObjectRetain();
    sub_1C20AB2EC(v20, 3uLL);
    if (v2)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(a1[9] + 16)
    || (v22 = swift_bridgeObjectRetain(),
        sub_1C2162D28(v22, 4uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C20FFB94, (void (*)(uint64_t, _QWORD *))sub_1C215C2F0), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(a1[10] + 16)
      || (v23 = swift_bridgeObjectRetain(),
          sub_1C2162D28(v23, 5uLL, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100318, (void (*)(uint64_t, _QWORD *))sub_1C215D514), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(a1[11] + 16)
        || (v24 = swift_bridgeObjectRetain(),
            sub_1C2162D28(v24, 6uLL, (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(uint64_t))sub_1C21006FC, (void (*)(uint64_t, _QWORD *))sub_1C215DB4C), result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(a1[12] + 16)
          || (v25 = swift_bridgeObjectRetain(),
              sub_1C2162D28(v25, 7uLL, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100080, (void (*)(uint64_t, _QWORD *))sub_1C215CB50), result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          v26 = a1[15];
          if (!v26)
            goto LABEL_41;
          v27 = a1[16];
          v29 = a1[13];
          v28 = a1[14];
          sub_1C20A8008(v29, v28);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C215FF28(v29, v28, v26, v27, 8uLL);
          result = sub_1C20EC0E4(v29, v28, v26);
          if (!v2)
          {
LABEL_41:
            swift_beginAccess();
            v30 = a1[17];
            if (!v30
              || (v32 = a1[18],
                  v31 = a1[19],
                  swift_bridgeObjectRetain(),
                  sub_1C20A8008(v32, v31),
                  sub_1C215FD50(v30, v32, v31, 9uLL),
                  result = sub_1C20EC150(v30, v32, v31),
                  !v2))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(a1[7] + 16)
                || (v33 = swift_bridgeObjectRetain(),
                    sub_1C2123FCC(v33, 0xAuLL),
                    result = swift_bridgeObjectRelease(),
                    !v2))
              {
                swift_beginAccess();
                if (!*(_QWORD *)(a1[8] + 16)
                  || (v34 = swift_bridgeObjectRetain(),
                      sub_1C2123FCC(v34, 0xBuLL),
                      result = swift_bridgeObjectRelease(),
                      !v2))
                {
                  v35 = a1 + 20;
                  result = swift_beginAccess();
                  v36 = a1[21];
                  if (v36)
                  {
                    v37 = *v35;
                    swift_bridgeObjectRetain();
                    sub_1C20A988C(0xCuLL);
                    sub_1C20A9EB4((uint64_t)": ", 2, v38);
                    sub_1C20AAAD0(v37, v36);
                    v39 = *a2;
                    v40 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v39;
                    if ((v40 & 1) == 0)
                    {
                      v39 = sub_1C214E1A4(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
                      *a2 = v39;
                    }
                    v42 = *((_QWORD *)v39 + 2);
                    v41 = *((_QWORD *)v39 + 3);
                    if (v42 >= v41 >> 1)
                      v39 = sub_1C214E1A4((char *)(v41 > 1), v42 + 1, 1, v39);
                    *((_QWORD *)v39 + 2) = v42 + 1;
                    v39[v42 + 32] = 10;
                    *a2 = v39;
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215BEF8(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;

  v3 = v2;
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v6 = swift_bridgeObjectRetain(), sub_1C211282C(v6, 2), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16)
      || (v8 = swift_bridgeObjectRetain(), sub_1C21134A4(v8, 3), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 56) + 16)
        || (v9 = swift_bridgeObjectRetain(), sub_1C2113084(v9, 4), result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 64) + 16)
          || (v10 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C2113A1C(v10), result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
            || (v11 = swift_bridgeObjectRetain(), sub_1C211282C(v11, 6), result = swift_bridgeObjectRelease(), !v2))
          {
            swift_beginAccess();
            v12 = *(_QWORD *)(a1 + 80);
            if (v12)
            {
              v13 = *(_QWORD *)(a1 + 88);
              v14 = *(_QWORD *)(a1 + 96);
              v15 = *(_QWORD *)(a1 + 104);
              v16 = *(_DWORD *)(a1 + 112);
              v33 = *(_QWORD *)(a1 + 80);
              v34 = v13;
              v35 = v14;
              v36 = v15;
              v37 = v16;
              sub_1C2175834();
              v17 = *((_QWORD *)a2 + 8);
              v18 = a2[1];
              v28 = *a2;
              v29 = v18;
              v19 = a2[3];
              v30 = a2[2];
              v31 = v19;
              v32 = v17;
              swift_bridgeObjectRetain();
              sub_1C20A8008(v13, v14);
              swift_bridgeObjectRetain();
              sub_1C20EE48C((uint64_t)&v28);
              if (v2)
              {
                MEMORY[0x1C3BB7EEC](v2);
                v3 = 0;
              }
              v20 = v32;
              v21 = v29;
              *a2 = v28;
              a2[1] = v21;
              v22 = v31;
              a2[2] = v30;
              a2[3] = v22;
              *((_QWORD *)a2 + 8) = v20;
              sub_1C20EC1EC(v12, v13, v14);
            }
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 72) + 16)
              || (v23 = (_QWORD *)swift_bridgeObjectRetain(),
                  sub_1C21136B8(v23),
                  result = swift_bridgeObjectRelease(),
                  !v3))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(*(_QWORD *)(a1 + 120) + 16)
                || (v24 = swift_bridgeObjectRetain(), sub_1C21130A0(v24), result = swift_bridgeObjectRelease(), !v3))
              {
                result = swift_beginAccess();
                v25 = *(_QWORD *)(a1 + 128);
                if (*(_QWORD *)(v25 + 16))
                {
                  sub_1C2175834();
                  result = sub_1C2175834();
                  v26 = *(_QWORD *)(v25 + 16);
                  if (v26)
                  {
                    swift_bridgeObjectRetain();
                    v27 = v25 + 40;
                    do
                    {
                      swift_bridgeObjectRetain();
                      sub_1C21754C8();
                      swift_bridgeObjectRelease();
                      v27 += 16;
                      --v26;
                    }
                    while (v26);
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215C2F0(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[4];
  int v28;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v13 = swift_bridgeObjectRetain();
    sub_1C2162D28(v13, 2uLL, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100080, (void (*)(uint64_t, _QWORD *))sub_1C215CB50);
    if (v2)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16)
    || (v15 = swift_bridgeObjectRetain(),
        sub_1C2162D28(v15, 3uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C20FFB94, (void (*)(uint64_t, _QWORD *))sub_1C215C2F0), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 56) + 16)
      || (v16 = swift_bridgeObjectRetain(),
          sub_1C2162D28(v16, 4uLL, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100318, (void (*)(uint64_t, _QWORD *))sub_1C215D514), result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 64) + 16)
        || (v17 = swift_bridgeObjectRetain(),
            sub_1C21628BC(v17, 5uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(uint64_t))sub_1C20FFCE0, (void (*)(_QWORD *, uint64_t, unint64_t, uint64_t))sub_1C20E4F48), result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
          || (v18 = swift_bridgeObjectRetain(),
              sub_1C2162D28(v18, 6uLL, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100080, (void (*)(uint64_t, _QWORD *))sub_1C215CB50), result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          v19 = *(_QWORD *)(a1 + 80);
          if (!v19)
            goto LABEL_29;
          v20 = *(_DWORD *)(a1 + 112);
          v22 = *(_QWORD *)(a1 + 96);
          v21 = *(_QWORD *)(a1 + 104);
          v23 = *(_QWORD *)(a1 + 88);
          v27[0] = *(_QWORD *)(a1 + 80);
          v27[1] = v23;
          v27[2] = v22;
          v27[3] = v21;
          v28 = v20;
          swift_bridgeObjectRetain();
          sub_1C20A8008(v23, v22);
          swift_bridgeObjectRetain();
          sub_1C21609D0(v27, 7uLL);
          result = sub_1C20EC1EC(v19, v23, v22);
          if (!v2)
          {
LABEL_29:
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 72) + 16)
              || (v24 = swift_bridgeObjectRetain(),
                  sub_1C21628BC(v24, 8uLL, (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(uint64_t))sub_1C21001CC, (void (*)(_QWORD *, uint64_t, unint64_t, uint64_t))sub_1C20E790C), result = swift_bridgeObjectRelease(), !v2))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(*(_QWORD *)(a1 + 120) + 16)
                || (v25 = swift_bridgeObjectRetain(),
                    sub_1C216260C(v25, 9uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ReservedRange, (uint64_t (*)(uint64_t))sub_1C20FFE2C), result = swift_bridgeObjectRelease(), !v2))
              {
                result = swift_beginAccess();
                if (*(_QWORD *)(*(_QWORD *)(a1 + 128) + 16))
                {
                  v26 = swift_bridgeObjectRetain();
                  sub_1C20AB2EC(v26, 0xAuLL);
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215C778(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int8x16_t v10;
  uint64x2_t v11;
  int16x8_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t result;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  unsigned __int32 v30;
  char v31;

  swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 64))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a1 + 36) & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 37) != 3)
  {
    sub_1C2175834();
    sub_1C2175834();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 38) != 18)
  {
    sub_1C2175834();
    sub_1C2175834();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 48))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 80))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 112);
  if (v5)
  {
    v6 = *(_QWORD *)(a1 + 120);
    v7 = *(_QWORD *)(a1 + 128);
    v8 = *(_QWORD *)(a1 + 136);
    v9 = *(unsigned int *)(a1 + 144) | ((unint64_t)*(unsigned __int16 *)(a1 + 148) << 32);
    v10.i64[0] = 0xFFFFFFFFFFFFLL;
    v10.i64[1] = 0xFFFFFFFFFFFFLL;
    v11 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v9), v10);
    v12 = (int16x8_t)vshlq_u64(v11, (uint64x2_t)xmmword_1C2177150);
    v25 = *(_QWORD *)(a1 + 112);
    v26 = v6;
    v27 = v7;
    v28 = v8;
    v29 = v9;
    *(int32x2_t *)v11.i8 = vmovn_s64((int64x2_t)vshlq_u64(v11, (uint64x2_t)xmmword_1C2177140));
    *(int32x2_t *)v12.i8 = vmovn_s64((int64x2_t)v12);
    v12.i16[1] = v12.i16[2];
    v12.i16[2] = v11.i16[0];
    v12.i16[3] = v11.i16[2];
    v30 = vmovn_s16(v12).u32[0];
    v31 = BYTE5(v9);
    sub_1C2175834();
    v13 = *((_QWORD *)a2 + 8);
    v14 = a2[1];
    v20 = *a2;
    v21 = v14;
    v15 = a2[3];
    v22 = a2[2];
    v23 = v15;
    v24 = v13;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v7);
    swift_bridgeObjectRetain();
    sub_1C20EEEB8((uint64_t)&v20);
    if (v2)
      MEMORY[0x1C3BB7EEC](v2);
    v16 = v24;
    v17 = v21;
    *a2 = v20;
    a2[1] = v17;
    v18 = v23;
    a2[2] = v22;
    a2[3] = v18;
    *((_QWORD *)a2 + 8) = v16;
    sub_1C20EC1EC(v5, v6, v7);
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a1 + 92) & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 104))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C215CB50(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  int v21;
  unsigned __int8 *v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unsigned __int8 *v28;
  char *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  char *v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  char *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int8x16_t v53;
  uint64x2_t v54;
  int16x8_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  char *v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD v64[4];
  char v65;
  unsigned __int32 v66;
  char v67;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 64);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    sub_1C20A988C(2uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v15);
    sub_1C20AAAD0(v14, v13);
    v16 = *a2;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v16;
    if ((v17 & 1) == 0)
    {
      v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      *a2 = v16;
    }
    v19 = *((_QWORD *)v16 + 2);
    v18 = *((_QWORD *)v16 + 3);
    if (v19 >= v18 >> 1)
      v16 = sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a1 + 36) & 1) != 0 || (result = sub_1C212FA64(*(_DWORD *)(a1 + 32), 3uLL), !v2))
  {
    swift_beginAccess();
    v21 = *(unsigned __int8 *)(a1 + 37);
    if (v21 != 3)
    {
      sub_1C20A988C(4uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v22);
      sub_1C215F7E4(v21, (void (*)(_QWORD *__return_ptr))sub_1C2157454);
      v23 = *a2;
      v24 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v23;
      if ((v24 & 1) == 0)
      {
        v23 = sub_1C214E1A4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
        *a2 = v23;
      }
      v26 = *((_QWORD *)v23 + 2);
      v25 = *((_QWORD *)v23 + 3);
      if (v26 >= v25 >> 1)
        v23 = sub_1C214E1A4((char *)(v25 > 1), v26 + 1, 1, v23);
      *((_QWORD *)v23 + 2) = v26 + 1;
      v23[v26 + 32] = 10;
      *a2 = v23;
    }
    swift_beginAccess();
    v27 = *(unsigned __int8 *)(a1 + 38);
    if (v27 != 18)
    {
      sub_1C20A988C(5uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v28);
      sub_1C215F7E4(v27, (void (*)(_QWORD *__return_ptr))sub_1C21572B4);
      v29 = *a2;
      v30 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v29;
      if ((v30 & 1) == 0)
      {
        v29 = sub_1C214E1A4(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
        *a2 = v29;
      }
      v32 = *((_QWORD *)v29 + 2);
      v31 = *((_QWORD *)v29 + 3);
      if (v32 >= v31 >> 1)
        v29 = sub_1C214E1A4((char *)(v31 > 1), v32 + 1, 1, v29);
      *((_QWORD *)v29 + 2) = v32 + 1;
      v29[v32 + 32] = 10;
      *a2 = v29;
    }
    swift_beginAccess();
    v33 = *(_QWORD *)(a1 + 48);
    if (v33)
    {
      v34 = *(_QWORD *)(a1 + 40);
      swift_bridgeObjectRetain();
      sub_1C20A988C(6uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v35);
      sub_1C20AAAD0(v34, v33);
      v36 = *a2;
      v37 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v36;
      if ((v37 & 1) == 0)
      {
        v36 = sub_1C214E1A4(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
        *a2 = v36;
      }
      v39 = *((_QWORD *)v36 + 2);
      v38 = *((_QWORD *)v36 + 3);
      if (v39 >= v38 >> 1)
        v36 = sub_1C214E1A4((char *)(v38 > 1), v39 + 1, 1, v36);
      *((_QWORD *)v36 + 2) = v39 + 1;
      v36[v39 + 32] = 10;
      *a2 = v36;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v40 = *(_QWORD *)(a1 + 80);
    if (v40)
    {
      v41 = *(_QWORD *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1C20A988C(7uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v42);
      sub_1C20AAAD0(v41, v40);
      v43 = *a2;
      v44 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v43;
      if ((v44 & 1) == 0)
      {
        v43 = sub_1C214E1A4(0, *((_QWORD *)v43 + 2) + 1, 1, v43);
        *a2 = v43;
      }
      v46 = *((_QWORD *)v43 + 2);
      v45 = *((_QWORD *)v43 + 3);
      if (v46 >= v45 >> 1)
        v43 = sub_1C214E1A4((char *)(v45 > 1), v46 + 1, 1, v43);
      *((_QWORD *)v43 + 2) = v46 + 1;
      v43[v46 + 32] = 10;
      *a2 = v43;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v47 = *(_QWORD *)(a1 + 112);
    if (!v47)
      goto LABEL_51;
    v48 = *(unsigned __int16 *)(a1 + 148);
    v49 = *(unsigned int *)(a1 + 144);
    v51 = *(_QWORD *)(a1 + 128);
    v50 = *(_QWORD *)(a1 + 136);
    v52 = *(_QWORD *)(a1 + 120);
    v64[0] = *(_QWORD *)(a1 + 112);
    v64[1] = v52;
    v64[2] = v51;
    v64[3] = v50;
    v65 = v49;
    v53.i64[0] = 0xFFFFFFFFFFFFLL;
    v53.i64[1] = 0xFFFFFFFFFFFFLL;
    v54 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v49 | (unint64_t)(v48 << 32)), v53);
    v55 = (int16x8_t)vshlq_u64(v54, (uint64x2_t)xmmword_1C2177150);
    *(int32x2_t *)v54.i8 = vmovn_s64((int64x2_t)vshlq_u64(v54, (uint64x2_t)xmmword_1C2177140));
    *(int32x2_t *)v55.i8 = vmovn_s64((int64x2_t)v55);
    v55.i16[1] = v55.i16[2];
    v55.i16[2] = v54.i16[0];
    v55.i16[3] = v54.i16[2];
    v66 = vmovn_s16(v55).u32[0];
    v67 = BYTE1(v48);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v52, v51);
    swift_bridgeObjectRetain();
    sub_1C2160130((uint64_t)v64, 8uLL);
    result = sub_1C20EC1EC(v47, v52, v51);
    if (!v2)
    {
LABEL_51:
      swift_beginAccess();
      if ((*(_BYTE *)(a1 + 92) & 1) != 0 || (result = sub_1C212FA64(*(_DWORD *)(a1 + 88), 9uLL), !v2))
      {
        v56 = (uint64_t *)(a1 + 96);
        result = swift_beginAccess();
        v57 = *(_QWORD *)(a1 + 104);
        if (v57)
        {
          v58 = *v56;
          swift_bridgeObjectRetain();
          sub_1C20A988C(0xAuLL);
          sub_1C20A9EB4((uint64_t)": ", 2, v59);
          sub_1C20AAAD0(v58, v57);
          v60 = *a2;
          v61 = swift_isUniquelyReferenced_nonNull_native();
          *a2 = v60;
          if ((v61 & 1) == 0)
          {
            v60 = sub_1C214E1A4(0, *((_QWORD *)v60 + 2) + 1, 1, v60);
            *a2 = v60;
          }
          v63 = *((_QWORD *)v60 + 2);
          v62 = *((_QWORD *)v60 + 3);
          if (v63 >= v62 >> 1)
            v60 = sub_1C214E1A4((char *)(v62 > 1), v63 + 1, 1, v60);
          *((_QWORD *)v60 + 2) = v63 + 1;
          v60[v63 + 32] = 10;
          *a2 = v60;
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215D294(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int16 v32;

  v3 = v2;
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v6 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C21130B4(v6), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(a1 + 40);
    if (v8)
    {
      v9 = *(_QWORD *)(a1 + 48);
      v10 = *(_QWORD *)(a1 + 56);
      v11 = *(_QWORD *)(a1 + 64);
      v12 = *(_WORD *)(a1 + 72);
      v28 = *(_QWORD *)(a1 + 40);
      v29 = v9;
      v30 = v10;
      v31 = v11;
      v32 = v12;
      sub_1C2175834();
      v13 = *((_QWORD *)a2 + 8);
      v14 = a2[1];
      v23 = *a2;
      v24 = v14;
      v15 = a2[3];
      v25 = a2[2];
      v26 = v15;
      v27 = v13;
      swift_bridgeObjectRetain();
      sub_1C20A8008(v9, v10);
      swift_bridgeObjectRetain();
      sub_1C20F05A0((uint64_t)&v23);
      if (v2)
      {
        MEMORY[0x1C3BB7EEC](v2);
        v3 = 0;
      }
      v16 = v27;
      v17 = v24;
      *a2 = v23;
      a2[1] = v17;
      v18 = v26;
      a2[2] = v25;
      a2[3] = v18;
      *((_QWORD *)a2 + 8) = v16;
      sub_1C20EC1EC(v8, v9, v10);
    }
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 80) + 16)
      || (v19 = swift_bridgeObjectRetain(), sub_1C21130A0(v19), result = swift_bridgeObjectRelease(), !v3))
    {
      result = swift_beginAccess();
      v20 = *(_QWORD *)(a1 + 88);
      if (*(_QWORD *)(v20 + 16))
      {
        sub_1C2175834();
        result = sub_1C2175834();
        v21 = *(_QWORD *)(v20 + 16);
        if (v21)
        {
          swift_bridgeObjectRetain();
          v22 = v20 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_1C21754C8();
            swift_bridgeObjectRelease();
            v22 += 16;
            --v21;
          }
          while (v21);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215D514(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[4];
  __int16 v23;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(),
        sub_1C2162D28(v13, 2uLL, (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(uint64_t))sub_1C21005B0, (void (*)(uint64_t, _QWORD *))sub_1C215D7B0), result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 40);
    if (!v15)
      goto LABEL_11;
    v17 = *(_QWORD *)(a1 + 56);
    v16 = *(_QWORD *)(a1 + 64);
    v18 = *(_QWORD *)(a1 + 48);
    v19 = *(_WORD *)(a1 + 72);
    v22[0] = *(_QWORD *)(a1 + 40);
    v22[1] = v18;
    v22[2] = v17;
    v22[3] = v16;
    v23 = v19;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v18, v17);
    swift_bridgeObjectRetain();
    sub_1C21604A8(v22, 3uLL);
    result = sub_1C20EC1EC(v15, v18, v17);
    if (!v2)
    {
LABEL_11:
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 80) + 16)
        || (v20 = swift_bridgeObjectRetain(),
            sub_1C216260C(v20, 4uLL, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, (uint64_t (*)(uint64_t))sub_1C2100464), result = swift_bridgeObjectRelease(), !v2))
      {
        result = swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16))
        {
          v21 = swift_bridgeObjectRetain();
          sub_1C20AB2EC(v21, 5uLL);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215D7B0(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[4];
  char v19;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a1 + 36) & 1) != 0 || (result = sub_1C212FA64(*(_DWORD *)(a1 + 32), 2uLL), !v2))
  {
    result = swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 40);
    if (v14)
    {
      v16 = *(_QWORD *)(a1 + 56);
      v15 = *(_QWORD *)(a1 + 64);
      v17 = *(_QWORD *)(a1 + 48);
      v18[0] = *(_QWORD *)(a1 + 40);
      v18[1] = v17;
      v18[2] = v16;
      v18[3] = v15;
      v19 = *(_BYTE *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v17, v16);
      swift_bridgeObjectRetain();
      sub_1C216074C(v18, 3uLL, (uint64_t)&type metadata for Google_Protobuf_EnumValueOptions, (uint64_t (*)(uint64_t))sub_1C20FEF30, (uint64_t)&unk_1E7BE11E0, 1uLL);
      return sub_1C20EC1EC(v14, v17, v16);
    }
  }
  return result;
}

uint64_t sub_1C215D99C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;

  swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v5 = (_QWORD *)swift_bridgeObjectRetain(), sub_1C2112388(v5), result = swift_bridgeObjectRelease(), !v2))
  {
    result = swift_beginAccess();
    v7 = *(_QWORD *)(a1 + 40);
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 48);
      v9 = *(_QWORD *)(a1 + 56);
      v10 = *(_QWORD *)(a1 + 64);
      v11 = *(_BYTE *)(a1 + 72);
      v23 = v7;
      v24 = v8;
      v25 = v9;
      v26 = v10;
      v27 = v11;
      sub_1C2175834();
      v12 = *((_QWORD *)a2 + 8);
      v13 = a2[1];
      v18 = *a2;
      v19 = v13;
      v14 = a2[3];
      v20 = a2[2];
      v21 = v14;
      v22 = v12;
      swift_bridgeObjectRetain();
      sub_1C20A8008(v8, v9);
      swift_bridgeObjectRetain();
      sub_1C20F0FDC((uint64_t)&v18);
      if (v2)
        MEMORY[0x1C3BB7EEC](v2);
      v15 = v22;
      v16 = v19;
      *a2 = v18;
      a2[1] = v16;
      v17 = v21;
      a2[2] = v20;
      a2[3] = v17;
      *((_QWORD *)a2 + 8) = v15;
      return sub_1C20EC1EC(v7, v8, v9);
    }
  }
  return result;
}

uint64_t sub_1C215DB4C(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19[4];
  char v20;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(),
        sub_1C2162D28(v13, 2uLL, (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(uint64_t))sub_1C2100848, (void (*)(uint64_t, _QWORD *))sub_1C215DFDC), result = swift_bridgeObjectRelease(), !v2))
  {
    result = swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 40);
    if (v15)
    {
      v17 = *(_QWORD *)(a1 + 56);
      v16 = *(_QWORD *)(a1 + 64);
      v18 = *(_QWORD *)(a1 + 48);
      v19[0] = *(_QWORD *)(a1 + 40);
      v19[1] = v18;
      v19[2] = v17;
      v19[3] = v16;
      v20 = *(_BYTE *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v18, v17);
      swift_bridgeObjectRetain();
      sub_1C216074C(v19, 3uLL, (uint64_t)&type metadata for Google_Protobuf_ServiceOptions, (uint64_t (*)(uint64_t))sub_1C20FEF74, (uint64_t)&unk_1E7BE11B8, 0x21uLL);
      return sub_1C20EC1EC(v15, v18, v17);
    }
  }
  return result;
}

uint64_t sub_1C215DD5C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int16 v26;

  swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 40))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 56))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 64);
  if (v5)
  {
    v6 = *(_QWORD *)(a1 + 72);
    v7 = *(_QWORD *)(a1 + 80);
    v8 = *(_QWORD *)(a1 + 88);
    v9 = *(_WORD *)(a1 + 96);
    v22 = *(_QWORD *)(a1 + 64);
    v23 = v6;
    v24 = v7;
    v25 = v8;
    v26 = v9;
    sub_1C2175834();
    v10 = *((_QWORD *)a2 + 8);
    v11 = a2[1];
    v17 = *a2;
    v18 = v11;
    v12 = a2[3];
    v19 = a2[2];
    v20 = v12;
    v21 = v10;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v7);
    swift_bridgeObjectRetain();
    sub_1C20F1844((uint64_t)&v17);
    if (v2)
      MEMORY[0x1C3BB7EEC](v2);
    v13 = v21;
    v14 = v18;
    *a2 = v17;
    a2[1] = v14;
    v15 = v20;
    a2[2] = v19;
    a2[3] = v15;
    *((_QWORD *)a2 + 8) = v13;
    sub_1C20EC1EC(v5, v6, v7);
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 98) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  result = swift_beginAccess();
  if (*(_BYTE *)(a1 + 99) != 2)
  {
    sub_1C2175834();
    return sub_1C2175840();
  }
  return result;
}

uint64_t sub_1C215DFDC(uint64_t a1, char **a2)
{
  uint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int16 v31;
  uint64_t result;
  int v33;
  int v34;
  _QWORD v35[4];
  __int16 v36;

  v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 24);
  if (v6)
  {
    v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v7, v6);
    v9 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 40);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1C20A988C(2uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v15);
    sub_1C20AAAD0(v14, v13);
    v16 = *a2;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v16;
    if ((v17 & 1) == 0)
    {
      v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      *a2 = v16;
    }
    v19 = *((_QWORD *)v16 + 2);
    v18 = *((_QWORD *)v16 + 3);
    if (v19 >= v18 >> 1)
      v16 = sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 56);
  if (v20)
  {
    v21 = *(_QWORD *)(a1 + 48);
    swift_bridgeObjectRetain();
    sub_1C20A988C(3uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v22);
    sub_1C20AAAD0(v21, v20);
    v23 = *a2;
    v24 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v23;
    if ((v24 & 1) == 0)
    {
      v23 = sub_1C214E1A4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
      *a2 = v23;
    }
    v26 = *((_QWORD *)v23 + 2);
    v25 = *((_QWORD *)v23 + 3);
    if (v26 >= v25 >> 1)
      v23 = sub_1C214E1A4((char *)(v25 > 1), v26 + 1, 1, v23);
    *((_QWORD *)v23 + 2) = v26 + 1;
    v23[v26 + 32] = 10;
    *a2 = v23;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 64);
  if (!v27)
    goto LABEL_21;
  v29 = *(_QWORD *)(a1 + 80);
  v28 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 72);
  v31 = *(_WORD *)(a1 + 96);
  v35[0] = *(_QWORD *)(a1 + 64);
  v35[1] = v30;
  v35[2] = v29;
  v35[3] = v28;
  v36 = v31;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v30, v29);
  swift_bridgeObjectRetain();
  sub_1C21602EC((uint64_t)v35, 4uLL);
  result = sub_1C20EC1EC(v27, v30, v29);
  if (!v2)
  {
LABEL_21:
    swift_beginAccess();
    v33 = *(unsigned __int8 *)(a1 + 98);
    if (v33 == 2 || (result = sub_1C20AE8CC(v33 & 1, 5uLL), !v2))
    {
      result = swift_beginAccess();
      v34 = *(unsigned __int8 *)(a1 + 99);
      if (v34 != 2)
        return sub_1C20AE8CC(v34 & 1, 6uLL);
    }
  }
  return result;
}

uint64_t sub_1C215E39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t result;

  swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 40))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 51) != 3)
  {
    sub_1C2175834();
    sub_1C2175834();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 48) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 64))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 72) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 73) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 74) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 49) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 76) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 50) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 77) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 88))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 104))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 120))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 136))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 152))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 75) != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 168))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 184))
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 192) + 16)
    || (v9 = swift_bridgeObjectRetain(), sub_1C2111BB8(v9), result = swift_bridgeObjectRelease(), !v5))
  {
    swift_bridgeObjectRetain();
    sub_1C2131194(a2, 1000, 0x20000000, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C215E954(uint64_t a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned __int8 *v25;
  char *v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t result;
  unint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  char *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  char *v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  char *v56;
  char v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unsigned __int8 *v62;
  char *v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  char *v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unsigned __int8 *v76;
  char *v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  unsigned __int8 *v84;
  char *v85;
  char v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unsigned __int8 *v91;
  char *v92;
  char v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;

  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (v10)
  {
    v11 = *v9;
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v12);
    sub_1C20AAAD0(v11, v10);
    v13 = *a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
      *a2 = v13;
    }
    v16 = *((_QWORD *)v13 + 2);
    v15 = *((_QWORD *)v13 + 3);
    if (v16 >= v15 >> 1)
      v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v16 + 1;
    v13[v16 + 32] = 10;
    *a2 = v13;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 40);
  if (v17)
  {
    v18 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1C20A988C(8uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v19);
    sub_1C20AAAD0(v18, v17);
    v20 = *a2;
    v21 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v20;
    if ((v21 & 1) == 0)
    {
      v20 = sub_1C214E1A4(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
      *a2 = v20;
    }
    v23 = *((_QWORD *)v20 + 2);
    v22 = *((_QWORD *)v20 + 3);
    if (v23 >= v22 >> 1)
      v20 = sub_1C214E1A4((char *)(v22 > 1), v23 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v23 + 1;
    v20[v23 + 32] = 10;
    *a2 = v20;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v24 = *(unsigned __int8 *)(a1 + 51);
  if (v24 != 3)
  {
    sub_1C20A988C(9uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v25);
    sub_1C215F7E4(v24, (void (*)(_QWORD *__return_ptr))sub_1C2156DDC);
    v26 = *a2;
    v27 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v26;
    if ((v27 & 1) == 0)
    {
      v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
      *a2 = v26;
    }
    v29 = *((_QWORD *)v26 + 2);
    v28 = *((_QWORD *)v26 + 3);
    if (v29 >= v28 >> 1)
      v26 = sub_1C214E1A4((char *)(v28 > 1), v29 + 1, 1, v26);
    *((_QWORD *)v26 + 2) = v29 + 1;
    v26[v29 + 32] = 10;
    *a2 = v26;
  }
  swift_beginAccess();
  v30 = *(unsigned __int8 *)(a1 + 48);
  if (v30 == 2 || (result = sub_1C20AE8CC(v30 & 1, 0xAuLL), !v5))
  {
    swift_beginAccess();
    v32 = *(_QWORD *)(a1 + 64);
    if (v32)
    {
      v33 = *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      sub_1C20A988C(0xBuLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v34);
      sub_1C20AAAD0(v33, v32);
      v35 = *a2;
      v36 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v35;
      if ((v36 & 1) == 0)
      {
        v35 = sub_1C214E1A4(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
        *a2 = v35;
      }
      v38 = *((_QWORD *)v35 + 2);
      v37 = *((_QWORD *)v35 + 3);
      if (v38 >= v37 >> 1)
        v35 = sub_1C214E1A4((char *)(v37 > 1), v38 + 1, 1, v35);
      *((_QWORD *)v35 + 2) = v38 + 1;
      v35[v38 + 32] = 10;
      *a2 = v35;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v39 = *(unsigned __int8 *)(a1 + 72);
    if (v39 == 2 || (result = sub_1C20AE8CC(v39 & 1, 0x10uLL), !v5))
    {
      swift_beginAccess();
      v40 = *(unsigned __int8 *)(a1 + 73);
      if (v40 == 2 || (result = sub_1C20AE8CC(v40 & 1, 0x11uLL), !v5))
      {
        swift_beginAccess();
        v41 = *(unsigned __int8 *)(a1 + 74);
        if (v41 == 2 || (result = sub_1C20AE8CC(v41 & 1, 0x12uLL), !v5))
        {
          swift_beginAccess();
          v42 = *(unsigned __int8 *)(a1 + 49);
          if (v42 == 2 || (result = sub_1C20AE8CC(v42 & 1, 0x14uLL), !v5))
          {
            swift_beginAccess();
            v43 = *(unsigned __int8 *)(a1 + 76);
            if (v43 == 2 || (result = sub_1C20AE8CC(v43 & 1, 0x17uLL), !v5))
            {
              swift_beginAccess();
              v44 = *(unsigned __int8 *)(a1 + 50);
              if (v44 == 2 || (result = sub_1C20AE8CC(v44 & 1, 0x1BuLL), !v5))
              {
                swift_beginAccess();
                v45 = *(unsigned __int8 *)(a1 + 77);
                if (v45 == 2 || (result = sub_1C20AE8CC(v45 & 1, 0x1FuLL), !v5))
                {
                  swift_beginAccess();
                  v46 = *(_QWORD *)(a1 + 88);
                  if (v46)
                  {
                    v47 = *(_QWORD *)(a1 + 80);
                    swift_bridgeObjectRetain();
                    sub_1C20A988C(0x24uLL);
                    sub_1C20A9EB4((uint64_t)": ", 2, v48);
                    sub_1C20AAAD0(v47, v46);
                    v49 = *a2;
                    v50 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v49;
                    if ((v50 & 1) == 0)
                    {
                      v49 = sub_1C214E1A4(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
                      *a2 = v49;
                    }
                    v52 = *((_QWORD *)v49 + 2);
                    v51 = *((_QWORD *)v49 + 3);
                    if (v52 >= v51 >> 1)
                      v49 = sub_1C214E1A4((char *)(v51 > 1), v52 + 1, 1, v49);
                    *((_QWORD *)v49 + 2) = v52 + 1;
                    v49[v52 + 32] = 10;
                    *a2 = v49;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  v53 = *(_QWORD *)(a1 + 104);
                  if (v53)
                  {
                    v54 = *(_QWORD *)(a1 + 96);
                    swift_bridgeObjectRetain();
                    sub_1C20A988C(0x25uLL);
                    sub_1C20A9EB4((uint64_t)": ", 2, v55);
                    sub_1C20AAAD0(v54, v53);
                    v56 = *a2;
                    v57 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v56;
                    if ((v57 & 1) == 0)
                    {
                      v56 = sub_1C214E1A4(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
                      *a2 = v56;
                    }
                    v59 = *((_QWORD *)v56 + 2);
                    v58 = *((_QWORD *)v56 + 3);
                    if (v59 >= v58 >> 1)
                      v56 = sub_1C214E1A4((char *)(v58 > 1), v59 + 1, 1, v56);
                    *((_QWORD *)v56 + 2) = v59 + 1;
                    v56[v59 + 32] = 10;
                    *a2 = v56;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  v60 = *(_QWORD *)(a1 + 120);
                  if (v60)
                  {
                    v61 = *(_QWORD *)(a1 + 112);
                    swift_bridgeObjectRetain();
                    sub_1C20A988C(0x27uLL);
                    sub_1C20A9EB4((uint64_t)": ", 2, v62);
                    sub_1C20AAAD0(v61, v60);
                    v63 = *a2;
                    v64 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v63;
                    if ((v64 & 1) == 0)
                    {
                      v63 = sub_1C214E1A4(0, *((_QWORD *)v63 + 2) + 1, 1, v63);
                      *a2 = v63;
                    }
                    v66 = *((_QWORD *)v63 + 2);
                    v65 = *((_QWORD *)v63 + 3);
                    if (v66 >= v65 >> 1)
                      v63 = sub_1C214E1A4((char *)(v65 > 1), v66 + 1, 1, v63);
                    *((_QWORD *)v63 + 2) = v66 + 1;
                    v63[v66 + 32] = 10;
                    *a2 = v63;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  v67 = *(_QWORD *)(a1 + 136);
                  if (v67)
                  {
                    v68 = *(_QWORD *)(a1 + 128);
                    swift_bridgeObjectRetain();
                    sub_1C20A988C(0x28uLL);
                    sub_1C20A9EB4((uint64_t)": ", 2, v69);
                    sub_1C20AAAD0(v68, v67);
                    v70 = *a2;
                    v71 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v70;
                    if ((v71 & 1) == 0)
                    {
                      v70 = sub_1C214E1A4(0, *((_QWORD *)v70 + 2) + 1, 1, v70);
                      *a2 = v70;
                    }
                    v73 = *((_QWORD *)v70 + 2);
                    v72 = *((_QWORD *)v70 + 3);
                    if (v73 >= v72 >> 1)
                      v70 = sub_1C214E1A4((char *)(v72 > 1), v73 + 1, 1, v70);
                    *((_QWORD *)v70 + 2) = v73 + 1;
                    v70[v73 + 32] = 10;
                    *a2 = v70;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  v74 = *(_QWORD *)(a1 + 152);
                  if (v74)
                  {
                    v75 = *(_QWORD *)(a1 + 144);
                    swift_bridgeObjectRetain();
                    sub_1C20A988C(0x29uLL);
                    sub_1C20A9EB4((uint64_t)": ", 2, v76);
                    sub_1C20AAAD0(v75, v74);
                    v77 = *a2;
                    v78 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v77;
                    if ((v78 & 1) == 0)
                    {
                      v77 = sub_1C214E1A4(0, *((_QWORD *)v77 + 2) + 1, 1, v77);
                      *a2 = v77;
                    }
                    v80 = *((_QWORD *)v77 + 2);
                    v79 = *((_QWORD *)v77 + 3);
                    if (v80 >= v79 >> 1)
                      v77 = sub_1C214E1A4((char *)(v79 > 1), v80 + 1, 1, v77);
                    *((_QWORD *)v77 + 2) = v80 + 1;
                    v77[v80 + 32] = 10;
                    *a2 = v77;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  v81 = *(unsigned __int8 *)(a1 + 75);
                  if (v81 == 2 || (result = sub_1C20AE8CC(v81 & 1, 0x2AuLL), !v5))
                  {
                    swift_beginAccess();
                    v82 = *(_QWORD *)(a1 + 168);
                    if (v82)
                    {
                      v83 = *(_QWORD *)(a1 + 160);
                      swift_bridgeObjectRetain();
                      sub_1C20A988C(0x2CuLL);
                      sub_1C20A9EB4((uint64_t)": ", 2, v84);
                      sub_1C20AAAD0(v83, v82);
                      v85 = *a2;
                      v86 = swift_isUniquelyReferenced_nonNull_native();
                      *a2 = v85;
                      if ((v86 & 1) == 0)
                      {
                        v85 = sub_1C214E1A4(0, *((_QWORD *)v85 + 2) + 1, 1, v85);
                        *a2 = v85;
                      }
                      v88 = *((_QWORD *)v85 + 2);
                      v87 = *((_QWORD *)v85 + 3);
                      if (v88 >= v87 >> 1)
                        v85 = sub_1C214E1A4((char *)(v87 > 1), v88 + 1, 1, v85);
                      *((_QWORD *)v85 + 2) = v88 + 1;
                      v85[v88 + 32] = 10;
                      *a2 = v85;
                      swift_bridgeObjectRelease();
                    }
                    swift_beginAccess();
                    v89 = *(_QWORD *)(a1 + 184);
                    if (v89)
                    {
                      v90 = *(_QWORD *)(a1 + 176);
                      swift_bridgeObjectRetain();
                      sub_1C20A988C(0x2DuLL);
                      sub_1C20A9EB4((uint64_t)": ", 2, v91);
                      sub_1C20AAAD0(v90, v89);
                      v92 = *a2;
                      v93 = swift_isUniquelyReferenced_nonNull_native();
                      *a2 = v92;
                      if ((v93 & 1) == 0)
                      {
                        v92 = sub_1C214E1A4(0, *((_QWORD *)v92 + 2) + 1, 1, v92);
                        *a2 = v92;
                      }
                      v95 = *((_QWORD *)v92 + 2);
                      v94 = *((_QWORD *)v92 + 3);
                      if (v95 >= v94 >> 1)
                        v92 = sub_1C214E1A4((char *)(v94 > 1), v95 + 1, 1, v92);
                      *((_QWORD *)v92 + 2) = v95 + 1;
                      v92[v95 + 32] = 10;
                      *a2 = v92;
                      swift_bridgeObjectRelease();
                    }
                    swift_beginAccess();
                    if (!*(_QWORD *)(*(_QWORD *)(a1 + 192) + 16)
                      || (v96 = swift_bridgeObjectRetain(),
                          sub_1C2162040(v96, 0x3E7uLL),
                          result = swift_bridgeObjectRelease(),
                          !v5))
                    {
                      swift_bridgeObjectRetain();
                      sub_1C2130B94((uint64_t)a2, 1000, 0x20000000, a5);
                      return swift_bridgeObjectRelease();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C215F51C(_BOOL8 a1, char a2)
{
  char **v2;
  unint64_t v3;
  int v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  _BYTE v16[40];
  uint64_t v17[4];
  unsigned __int8 v18;

  v3 = a1;
  v4 = a2 & 1;
  sub_1C21568F8(a1, a2 & 1, (uint64_t)v16);
  sub_1C20C4D30((uint64_t)v16, (uint64_t)v17, &qword_1EF75D800);
  if (v18 != 255)
  {
    sub_1C20A9EB4(v17[0], v17[1], (unsigned __int8 *)v18);
    return sub_1C20CC680((uint64_t)v16);
  }
  if (v4)
  {
    v3 = v3 != 0;
  }
  else if ((v3 & 0x8000000000000000) != 0)
  {
    v5 = *v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      *v2 = v5;
    }
    v7 = *((_QWORD *)v5 + 2);
    v8 = *((_QWORD *)v5 + 3);
    v9 = v7 + 1;
    if (v7 >= v8 >> 1)
    {
      v15 = v7 + 1;
      v12 = v5;
      v13 = *((_QWORD *)v5 + 2);
      v14 = sub_1C214E1A4((char *)(v8 > 1), v7 + 1, 1, v12);
      v7 = v13;
      v9 = v15;
      v5 = v14;
    }
    *((_QWORD *)v5 + 2) = v9;
    v5[v7 + 32] = 45;
    *v2 = v5;
    v10 = -(uint64_t)v3;
    return sub_1C214C444(v10);
  }
  v10 = v3;
  return sub_1C214C444(v10);
}

uint64_t sub_1C215F638(unint64_t a1, char a2)
{
  return sub_1C215F650(a1, a2, (void (*)(_QWORD *__return_ptr, unint64_t, _QWORD))sub_1C2156AA4);
}

uint64_t sub_1C215F644(unint64_t a1, char a2)
{
  return sub_1C215F650(a1, a2, (void (*)(_QWORD *__return_ptr, unint64_t, _QWORD))sub_1C2156C40);
}

uint64_t sub_1C215F650(unint64_t a1, char a2, void (*a3)(_QWORD *__return_ptr, unint64_t, _QWORD))
{
  char **v3;
  int v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  _QWORD v17[5];
  uint64_t v18[4];
  unsigned __int8 v19;

  v5 = a2 & 1;
  a3(v17, a1, a2 & 1);
  sub_1C20C4D30((uint64_t)v17, (uint64_t)v18, &qword_1EF75D800);
  if (v19 == 255)
  {
    if (v5 || (a1 & 0x8000000000000000) == 0)
    {
      v11 = a1;
    }
    else
    {
      v6 = *v3;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v3 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        *v3 = v6;
      }
      v8 = *((_QWORD *)v6 + 2);
      v9 = *((_QWORD *)v6 + 3);
      v10 = v8 + 1;
      if (v8 >= v9 >> 1)
      {
        v16 = v8 + 1;
        v13 = v6;
        v14 = *((_QWORD *)v6 + 2);
        v15 = sub_1C214E1A4((char *)(v9 > 1), v8 + 1, 1, v13);
        v8 = v14;
        v10 = v16;
        v6 = v15;
      }
      *((_QWORD *)v6 + 2) = v10;
      v6[v8 + 32] = 45;
      *v3 = v6;
      v11 = -(uint64_t)a1;
    }
    return sub_1C214C444(v11);
  }
  else
  {
    sub_1C20A9EB4(v18[0], v18[1], (unsigned __int8 *)v19);
    return sub_1C20CC680((uint64_t)v17);
  }
}

uint64_t sub_1C215F764(unsigned __int8 a1)
{
  return sub_1C215F77C(a1, (void (*)(_QWORD *__return_ptr))sub_1C2156F7C);
}

uint64_t sub_1C215F770(unsigned __int8 a1)
{
  return sub_1C215F77C(a1, (void (*)(_QWORD *__return_ptr))sub_1C2157118);
}

uint64_t sub_1C215F77C(unsigned __int8 a1, void (*a2)(_QWORD *__return_ptr))
{
  _QWORD v4[5];
  uint64_t v5[4];
  unsigned __int8 v6;

  a2(v4);
  sub_1C20C4D30((uint64_t)v4, (uint64_t)v5, &qword_1EF75D800);
  if (v6 == 255)
    return sub_1C214C444(a1);
  sub_1C20A9EB4(v5[0], v5[1], (unsigned __int8 *)v6);
  return sub_1C20CC680((uint64_t)v4);
}

uint64_t sub_1C215F7E4(unsigned __int8 a1, void (*a2)(_QWORD *__return_ptr))
{
  _QWORD v4[5];
  uint64_t v5[4];
  unsigned __int8 v6;

  a2(v4);
  sub_1C20C4D30((uint64_t)v4, (uint64_t)v5, &qword_1EF75D800);
  if (v6 == 255)
    return sub_1C214C444(a1 + 1);
  sub_1C20A9EB4(v5[0], v5[1], (unsigned __int8 *)v6);
  return sub_1C20CC680((uint64_t)v4);
}

uint64_t sub_1C215F850(unsigned __int8 a1)
{
  return sub_1C215F77C(a1, (void (*)(_QWORD *__return_ptr))sub_1C21575F4);
}

uint64_t sub_1C215F85C(uint64_t a1, char a2)
{
  char **v2;
  unint64_t v3;
  int v4;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  _BYTE v16[40];
  uint64_t v17[4];
  unsigned __int8 v18;

  v3 = a1;
  v4 = a2 & 1;
  sub_1C2156754(a1, a2 & 1, (uint64_t)v16);
  sub_1C20C4D30((uint64_t)v16, (uint64_t)v17, &qword_1EF75D800);
  if (v18 != 255)
  {
    sub_1C20A9EB4(v17[0], v17[1], (unsigned __int8 *)v18);
    return sub_1C20CC680((uint64_t)v16);
  }
  if (v4)
  {
    v3 = 0;
  }
  else if ((v3 & 0x8000000000000000) != 0)
  {
    v5 = *v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      *v2 = v5;
    }
    v7 = *((_QWORD *)v5 + 2);
    v8 = *((_QWORD *)v5 + 3);
    v9 = v7 + 1;
    if (v7 >= v8 >> 1)
    {
      v15 = v7 + 1;
      v12 = v5;
      v13 = *((_QWORD *)v5 + 2);
      v14 = sub_1C214E1A4((char *)(v8 > 1), v7 + 1, 1, v12);
      v7 = v13;
      v9 = v15;
      v5 = v14;
    }
    *((_QWORD *)v5 + 2) = v9;
    v5[v7 + 32] = 45;
    *v2 = v5;
    v10 = -(uint64_t)v3;
    return sub_1C214C444(v10);
  }
  v10 = v3;
  return sub_1C214C444(v10);
}

uint64_t sub_1C215F974(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  char *v19;
  uint64_t result;
  _QWORD v21[5];
  char *v22[3];
  char v23;

  sub_1C20A988C(a5);
  sub_1C20AA8D4(v11);
  v21[3] = &type metadata for Google_Protobuf_SourceContext;
  v21[4] = sub_1C20C4E54();
  v12 = (_QWORD *)swift_allocObject();
  v21[0] = v12;
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v13 = *(_QWORD *)v5;
  v14 = *(_QWORD *)(v5 + 8);
  v23 = *(_BYTE *)(v5 + 64);
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v21, v13, v14, &v23, (uint64_t)v22);
  sub_1C21688D4(v22, a1, a2, a3, a4);
  if (v6)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v15 = v22[0];
    v16 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v5 = v15;
    *(_QWORD *)(v5 + 8) = v16;
    sub_1C20AB238(*((_QWORD *)v16 + 2) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 16) - 1);
    v17 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v17);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v18);
    v19 = v22[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840((uint64_t)v19);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C215FB44(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  uint64_t result;
  _QWORD v18[5];
  char *v19[3];
  char v20;

  sub_1C20A988C(a4);
  sub_1C20AA8D4(v9);
  v18[3] = &type metadata for Google_Protobuf_Any;
  v18[0] = a1;
  v18[1] = a2;
  v18[4] = sub_1C20C4DCC();
  v18[2] = a3;
  v10 = *(_QWORD *)v4;
  v11 = *(_QWORD *)(v4 + 8);
  v20 = *(_BYTE *)(v4 + 64);
  sub_1C20A8008(a1, a2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  sub_1C20A8008(a1, a2);
  swift_retain();
  sub_1C215283C(v19);
  sub_1C20A8008(a1, a2);
  sub_1C2122EF0((uint64_t)v19, a1, a2);
  sub_1C20A8058(a1, a2);
  if (v5)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C20A8058(a1, a2);
    swift_release();
    v12 = v19[0];
    v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v4 = v12;
    *(_QWORD *)(v4 + 8) = v13;
    sub_1C20AB238(*((_QWORD *)v13 + 2) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 16) - 1);
    v14 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v14);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v15);
    v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840((uint64_t)v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C215FD50(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[5];
  _QWORD v19[3];
  char v20;

  sub_1C20A988C(a4);
  sub_1C20AA8D4(v9);
  v18[3] = &type metadata for Google_Protobuf_SourceCodeInfo;
  v18[0] = a1;
  v18[1] = a2;
  v18[4] = sub_1C21013E4();
  v18[2] = a3;
  v10 = *(_QWORD *)v4;
  v11 = *(_QWORD *)(v4 + 8);
  v20 = *(_BYTE *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_1C20A8008(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  if (*(_QWORD *)(a1 + 16) && (sub_1C2161E04(a1, 1uLL), v5) || (sub_1C2122EF0((uint64_t)v19, a2, a3), v5))
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v12 = v19[0];
    v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v4 = v12;
    *(_QWORD *)(v4 + 8) = v13;
    sub_1C20AB238(*(_QWORD *)(v13 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 16) - 1);
    v14 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v14);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v15);
    v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C215FF28(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  uint64_t result;
  _QWORD v22[5];
  char *v23[3];
  char v24;

  sub_1C20A988C(a5);
  sub_1C20AA8D4(v11);
  v22[3] = &type metadata for Google_Protobuf_FileOptions;
  v22[4] = sub_1C20FF448();
  v12 = (_QWORD *)swift_allocObject();
  v22[0] = v12;
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v13 = *(_QWORD *)v5;
  v14 = *(_QWORD *)(v5 + 8);
  v24 = *(_BYTE *)(v5 + 64);
  sub_1C20A8008(a1, a2);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v22, v13, v14, &v24, (uint64_t)v23);
  v15 = swift_retain();
  sub_1C215E954(v15, v23, a1, a2, a3);
  if (v6)
  {
    swift_release();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_release();
    sub_1C2122EF0((uint64_t)v23, a1, a2);
    v16 = v23[0];
    v17 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v5 = v16;
    *(_QWORD *)(v5 + 8) = v17;
    sub_1C20AB238(*((_QWORD *)v17 + 2) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 16) - 1);
    v18 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v18);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v19);
    v20 = v23[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840((uint64_t)v20);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2160130(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  char *v14;
  uint64_t result;
  _QWORD v16[5];
  char *v17[3];
  char v18;

  sub_1C20A988C(a2);
  sub_1C20AA8D4(v5);
  v16[3] = &type metadata for Google_Protobuf_FieldOptions;
  v16[4] = sub_1C20FECAC();
  v6 = swift_allocObject();
  v16[0] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 46) = *(_QWORD *)(a1 + 30);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v18 = *(_BYTE *)(v2 + 64);
  sub_1C216E1E0(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v16, v8, v9, &v18, (uint64_t)v17);
  sub_1C20EF11C(v17);
  if (v3)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v10 = v17[0];
    v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v2 = v10;
    *(_QWORD *)(v2 + 8) = v11;
    sub_1C20AB238(*((_QWORD *)v11 + 2) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) - 1);
    v12 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v12);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v13);
    v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840((uint64_t)v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21602EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  char *v14;
  uint64_t result;
  _QWORD v16[5];
  char *v17[3];
  char v18;

  sub_1C20A988C(a2);
  sub_1C20AA8D4(v5);
  v16[3] = &type metadata for Google_Protobuf_MethodOptions;
  v16[4] = sub_1C20FEFB8();
  v6 = swift_allocObject();
  v16[0] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_WORD *)(v6 + 48) = *(_WORD *)(a1 + 32);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v18 = *(_BYTE *)(v2 + 64);
  sub_1C216E1E0(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v16, v8, v9, &v18, (uint64_t)v17);
  sub_1C20F1998(v17);
  if (v3)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v10 = v17[0];
    v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v2 = v10;
    *(_QWORD *)(v2 + 8) = v11;
    sub_1C20AB238(*((_QWORD *)v11 + 2) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) - 1);
    v12 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v12);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v13);
    v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840((uint64_t)v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21604A8(uint64_t *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[5];
  _QWORD v17[3];
  char v18;
  char v19;
  char v20;

  sub_1C20A988C(a2);
  sub_1C20AA8D4(v5);
  v16[3] = &type metadata for Google_Protobuf_EnumOptions;
  v16[4] = sub_1C20FEDBC();
  v6 = swift_allocObject();
  v16[0] = v6;
  v7 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_WORD *)(v6 + 48) = *((_WORD *)a1 + 16);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v20 = *(_BYTE *)(v2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C216E1E0((uint64_t)a1);
  sub_1C20A84EC((uint64_t)v16, v8, v9, &v20, (uint64_t)v17);
  sub_1C20C4D30((uint64_t)(a1 + 4), (uint64_t)&v19, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v19, (uint64_t)&v20, &qword_1EF75D588);
  if (v20 != 2 && (sub_1C20AE8CC(v20 & 1, 2uLL), v3)
    || (sub_1C20C4D30((uint64_t)a1 + 33, (uint64_t)&v18, &qword_1EF75D588),
        sub_1C20C4D30((uint64_t)&v18, (uint64_t)v16, &qword_1EF75D588),
        LOBYTE(v16[0]) != 2)
    && (sub_1C20AE8CC(v16[0] & 1, 3uLL), v3)
    || *(_QWORD *)(*a1 + 16) && (sub_1C2162040(*a1, 0x3E7uLL), v3)
    || (sub_1C2130B94((uint64_t)v17, 1000, 0x20000000, a1[3]), v3))
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C2122EF0((uint64_t)v17, a1[1], a1[2]);
    v10 = v17[0];
    v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v2 = v10;
    *(_QWORD *)(v2 + 8) = v11;
    sub_1C20AB238(*(_QWORD *)(v11 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) - 1);
    v12 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v12);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v13);
    v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C216074C(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[5];
  _QWORD v25[3];
  char v26;

  sub_1C20A988C(a2);
  v13 = sub_1C20AA8D4(v12);
  v24[3] = a3;
  v24[4] = a4(v13);
  v14 = swift_allocObject();
  v24[0] = v14;
  v15 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v15;
  *(_BYTE *)(v14 + 48) = *((_BYTE *)a1 + 32);
  v16 = *(_QWORD *)v6;
  v17 = *(_QWORD *)(v6 + 8);
  v26 = *(_BYTE *)(v6 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C216E1E0((uint64_t)a1);
  sub_1C20A84EC((uint64_t)v24, v16, v17, &v26, (uint64_t)v25);
  sub_1C20C4D30((uint64_t)(a1 + 4), (uint64_t)&v26, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v26, (uint64_t)v24, &qword_1EF75D588);
  if (LOBYTE(v24[0]) != 2 && (sub_1C20AE8CC(v24[0] & 1, a6), v7)
    || *(_QWORD *)(*a1 + 16) && (sub_1C2162040(*a1, 0x3E7uLL), v7)
    || (sub_1C2130B94((uint64_t)v25, 1000, 0x20000000, a1[3]), v7))
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C2122EF0((uint64_t)v25, a1[1], a1[2]);
    v18 = v25[0];
    v19 = v25[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v6 = v18;
    *(_QWORD *)(v6 + 8) = v19;
    sub_1C20AB238(*(_QWORD *)(v19 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v6 + 8) + 16) - 1);
    v20 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v20);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v21);
    v22 = v25[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v22);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21609A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1C2160D40(a1, a2, a3, a4, a5, (uint64_t)&type metadata for Google_Protobuf_OneofOptions, (uint64_t (*)(uint64_t))sub_1C20FED78);
}

uint64_t sub_1C21609D0(uint64_t *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t result;
  _QWORD v16[5];
  _QWORD v17[3];
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1C20A988C(a2);
  sub_1C20AA8D4(v5);
  v16[3] = &type metadata for Google_Protobuf_MessageOptions;
  v16[4] = sub_1C20FEC68();
  v6 = swift_allocObject();
  v16[0] = v6;
  v7 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_DWORD *)(v6 + 48) = *((_DWORD *)a1 + 8);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v24 = *(_BYTE *)(v2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C216E1E0((uint64_t)a1);
  sub_1C20A84EC((uint64_t)v16, v8, v9, &v24, (uint64_t)v17);
  sub_1C20C4D30((uint64_t)(a1 + 4), (uint64_t)&v21, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v21, (uint64_t)&v22, &qword_1EF75D588);
  if (v22 != 2)
  {
    sub_1C20AE8CC(v22 & 1, 1uLL);
    if (v3)
      goto LABEL_13;
  }
  sub_1C20C4D30((uint64_t)a1 + 33, (uint64_t)&v20, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v20, (uint64_t)&v23, &qword_1EF75D588);
  if (v23 != 2)
  {
    sub_1C20AE8CC(v23 & 1, 2uLL);
    if (v3)
      goto LABEL_13;
  }
  sub_1C20C4D30((uint64_t)a1 + 34, (uint64_t)&v19, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v19, (uint64_t)&v24, &qword_1EF75D588);
  if (v24 != 2)
  {
    sub_1C20AE8CC(v24 & 1, 3uLL);
    if (v3)
      goto LABEL_13;
  }
  if ((sub_1C20C4D30((uint64_t)a1 + 35, (uint64_t)&v18, &qword_1EF75D588),
        sub_1C20C4D30((uint64_t)&v18, (uint64_t)v16, &qword_1EF75D588),
        LOBYTE(v16[0]) != 2)
    && (sub_1C20AE8CC(v16[0] & 1, 7uLL), v3)
    || *(_QWORD *)(*a1 + 16) && (sub_1C2162040(*a1, 0x3E7uLL), v3)
    || (sub_1C2130B94((uint64_t)v17, 1000, 0x20000000, a1[3]), v3))
  {
LABEL_13:
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C2122EF0((uint64_t)v17, a1[1], a1[2]);
    v10 = v17[0];
    v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v2 = v10;
    *(_QWORD *)(v2 + 8) = v11;
    sub_1C20AB238(*(_QWORD *)(v11 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) - 1);
    v12 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v12);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v13);
    v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2160D14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1C2160D40(a1, a2, a3, a4, a5, (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions, (uint64_t (*)(uint64_t))sub_1C20FE46C);
}

uint64_t sub_1C2160D40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  unsigned __int8 *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[5];
  _QWORD v28[3];
  char v29;

  v11 = v8;
  sub_1C20A988C(a5);
  v17 = sub_1C20AA8D4(v16);
  v27[3] = a6;
  v27[4] = a7(v17);
  v18 = (_QWORD *)swift_allocObject();
  v27[0] = v18;
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  v19 = *(_QWORD *)v7;
  v20 = *(_QWORD *)(v7 + 8);
  v29 = *(_BYTE *)(v7 + 64);
  swift_bridgeObjectRetain();
  sub_1C20A8008(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v27, v19, v20, &v29, (uint64_t)v28);
  if (*(_QWORD *)(a1 + 16) && (sub_1C2162040(a1, 0x3E7uLL), v11)
    || (sub_1C2130B94((uint64_t)v28, 1000, 0x20000000, a4), v11))
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C2122EF0((uint64_t)v28, a2, a3);
    v21 = v28[0];
    v22 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v7 = v21;
    *(_QWORD *)(v7 + 8) = v22;
    sub_1C20AB238(*(_QWORD *)(v22 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v7 + 8) + 16) - 1);
    v23 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v23);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v24);
    v25 = v28[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v25);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2160F64(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[5];
  _QWORD v19[3];
  char v20;

  sub_1C20A988C(a4);
  sub_1C20AA8D4(v9);
  v18[3] = &type metadata for Google_Protobuf_ListValue;
  v18[0] = a1;
  v18[1] = a2;
  v18[4] = sub_1C213E740();
  v18[2] = a3;
  v10 = *(_QWORD *)v4;
  v11 = *(_QWORD *)(v4 + 8);
  v20 = *(_BYTE *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_1C20A8008(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  if (*(_QWORD *)(a1 + 16)
    && (sub_1C2162D28(a1, 1uLL, (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C213E7C8, (void (*)(uint64_t, _QWORD *))sub_1C216B3AC), v5)|| (sub_1C2122EF0((uint64_t)v19, a2, a3), v5))
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v12 = v19[0];
    v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v4 = v12;
    *(_QWORD *)(v4 + 8) = v13;
    sub_1C20AB238(*(_QWORD *)(v13 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 16) - 1);
    v14 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v14);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v15);
    v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2161154(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[5];
  _QWORD v19[3];
  char v20;

  sub_1C20A988C(a4);
  sub_1C20AA8D4(v9);
  v18[3] = &type metadata for Google_Protobuf_Struct;
  v18[0] = a1;
  v18[1] = a2;
  v18[4] = sub_1C213E784();
  v18[2] = a3;
  v10 = *(_QWORD *)v4;
  v11 = *(_QWORD *)(v4 + 8);
  v20 = *(_BYTE *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_1C20A8008(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  if (*(_QWORD *)(a1 + 16) && (sub_1C2126274(a1, 1, v19), v5) || (sub_1C2122EF0((uint64_t)v19, a2, a3), v5))
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v12 = v19[0];
    v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v4 = v12;
    *(_QWORD *)(v4 + 8) = v13;
    sub_1C20AB238(*(_QWORD *)(v13 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 16) - 1);
    v14 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v14);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v15);
    v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2161324(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[5];
  _QWORD v20[3];
  char v21;

  sub_1C20A988C(a4);
  sub_1C20AA8D4(v9);
  v19[3] = &type metadata for Google_Protobuf_Value;
  v19[0] = a1;
  v19[1] = a2;
  v19[4] = sub_1C213E7C8();
  v19[2] = a3;
  v10 = *(_QWORD *)v4;
  v11 = *(_QWORD *)(v4 + 8);
  v21 = *(_BYTE *)(v4 + 64);
  sub_1C20A8008(a1, a2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v19, v10, v11, &v21, (uint64_t)v20);
  v12 = swift_retain();
  sub_1C216B3AC(v12);
  if (v5)
  {
    swift_release();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_release();
    sub_1C2122EF0((uint64_t)v20, a1, a2);
    v13 = v20[0];
    v14 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v4 = v13;
    *(_QWORD *)(v4 + 8) = v14;
    sub_1C20AB238(*(_QWORD *)(v14 + 16) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v4 + 8) + 16) - 1);
    v15 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v15);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v16);
    v17 = v20[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21614F8(uint64_t a1, unint64_t a2)
{
  return sub_1C2162D28(a1, a2, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C20C34A0, (void (*)(uint64_t, _QWORD *))sub_1C215AB5C);
}

uint64_t sub_1C2161524(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unsigned __int8 *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unsigned __int8 *v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD v37[5];
  char *v38[3];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v31 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v32 = v7;
    while (1)
    {
      v34 = v8;
      v35 = v5;
      v9 = (__int128 *)(v7 + v8);
      v10 = v9[4];
      v11 = v9[6];
      v12 = v9[7];
      v44 = v9[5];
      v45 = v11;
      v46 = v12;
      v13 = v9[1];
      v39 = *v9;
      v14 = v9[2];
      v15 = v9[3];
      v40 = v13;
      v41 = v14;
      v42 = v15;
      v43 = v10;
      sub_1C216E510((uint64_t)&v39);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v16);
      v37[3] = &type metadata for Google_Protobuf_Field;
      v37[4] = sub_1C20C3C88();
      v17 = (_OWORD *)swift_allocObject();
      v18 = v44;
      v19 = v45;
      v20 = v42;
      v17[5] = v43;
      v17[6] = v18;
      v21 = v46;
      v17[7] = v19;
      v17[8] = v21;
      v22 = v40;
      v23 = v41;
      v17[1] = v39;
      v17[2] = v22;
      v37[0] = v17;
      v17[3] = v23;
      v17[4] = v20;
      v24 = *v6;
      v25 = v6[1];
      v36 = v31;
      sub_1C216E510((uint64_t)&v39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v37, v24, v25, &v36, (uint64_t)v38);
      sub_1C20BFE30(v38);
      v47 = v4;
      if (v4)
        break;
      v27 = v38[0];
      v26 = v38[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v27;
      v6[1] = (uint64_t)v26;
      sub_1C20AB238(*((_QWORD *)v26 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v28 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v28);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v29);
      v30 = v38[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216E590((uint64_t)&v39);
      v8 = v34 + 128;
      --v5;
      v4 = v47;
      v7 = v32;
      if (v35 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2161770(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  unsigned __int8 *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[5];
  char *v30[3];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v23 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v24 = v7;
    while (1)
    {
      v26 = v8;
      v27 = v5;
      v9 = (__int128 *)(v7 + v8);
      v10 = v9[1];
      v31 = *v9;
      v11 = v9[2];
      v32 = v10;
      v33 = v11;
      sub_1C216E42C((uint64_t)&v31);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v12);
      v29[3] = &type metadata for Google_Protobuf_EnumValue;
      v29[4] = sub_1C20C3F20();
      v13 = (_OWORD *)swift_allocObject();
      v29[0] = v13;
      v14 = v32;
      v15 = v33;
      v13[1] = v31;
      v13[2] = v14;
      v13[3] = v15;
      v16 = *v6;
      v17 = v6[1];
      v28 = v23;
      sub_1C216E42C((uint64_t)&v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v29, v16, v17, &v28, (uint64_t)v30);
      sub_1C20C1CF8(v30);
      v34 = v4;
      if (v4)
        break;
      v19 = v30[0];
      v18 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v19;
      v6[1] = (uint64_t)v18;
      sub_1C20AB238(*((_QWORD *)v18 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v20 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v20);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v21);
      v22 = v30[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216E478((uint64_t)&v31);
      v8 = v26 + 48;
      --v5;
      v4 = v34;
      v7 = v24;
      if (v27 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2161994(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  unsigned __int8 *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[5];
  char *v30[3];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v23 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v24 = v7;
    while (1)
    {
      v26 = v8;
      v27 = v5;
      v9 = (__int128 *)(v7 + v8);
      v10 = v9[1];
      v31 = *v9;
      v11 = v9[2];
      v32 = v10;
      v33 = v11;
      sub_1C216E42C((uint64_t)&v31);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v12);
      v29[3] = &type metadata for Google_Protobuf_Mixin;
      v29[4] = sub_1C20CB1BC();
      v13 = (_OWORD *)swift_allocObject();
      v29[0] = v13;
      v14 = v32;
      v15 = v33;
      v13[1] = v31;
      v13[2] = v14;
      v13[3] = v15;
      v16 = *v6;
      v17 = v6[1];
      v28 = v23;
      sub_1C216E42C((uint64_t)&v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v29, v16, v17, &v28, (uint64_t)v30);
      sub_1C20CA224(v30);
      v34 = v4;
      if (v4)
        break;
      v19 = v30[0];
      v18 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v19;
      v6[1] = (uint64_t)v18;
      sub_1C20AB238(*((_QWORD *)v18 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v20 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v20);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v21);
      v22 = v30[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216E478((uint64_t)&v31);
      v8 = v26 + 48;
      --v5;
      v4 = v34;
      v7 = v24;
      if (v27 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2161BB8(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unsigned __int8 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD v33[5];
  char *v34[3];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v27 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v28 = v7;
    while (1)
    {
      v30 = v8;
      v31 = v5;
      v9 = v7 + v8;
      v10 = *(_OWORD *)(v9 + 64);
      v11 = *(_OWORD *)(v9 + 80);
      v12 = *(_OWORD *)(v9 + 32);
      v38 = *(_OWORD *)(v9 + 48);
      v39 = v10;
      v40 = v11;
      v13 = *(_OWORD *)(v9 + 16);
      v35 = *(_OWORD *)v9;
      v41 = *(_QWORD *)(v9 + 96);
      v36 = v13;
      v37 = v12;
      sub_1C216E31C((uint64_t)&v35);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v14);
      v33[3] = &type metadata for Google_Protobuf_Method;
      v33[4] = sub_1C20CB070();
      v15 = swift_allocObject();
      v16 = v38;
      v17 = v40;
      *(_OWORD *)(v15 + 80) = v39;
      *(_OWORD *)(v15 + 96) = v17;
      v18 = v36;
      v19 = v37;
      *(_OWORD *)(v15 + 16) = v35;
      *(_OWORD *)(v15 + 32) = v18;
      v33[0] = v15;
      *(_QWORD *)(v15 + 112) = v41;
      *(_OWORD *)(v15 + 48) = v19;
      *(_OWORD *)(v15 + 64) = v16;
      v20 = *v6;
      v21 = v6[1];
      v32 = v27;
      sub_1C216E31C((uint64_t)&v35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v33, v20, v21, &v32, (uint64_t)v34);
      sub_1C20C95D0(v34);
      v42 = v4;
      if (v4)
        break;
      v23 = v34[0];
      v22 = v34[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v23;
      v6[1] = (uint64_t)v22;
      sub_1C20AB238(*((_QWORD *)v22 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v24 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v24);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v25);
      v26 = v34[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216E388((uint64_t)&v35);
      v8 = v30 + 104;
      --v5;
      v4 = v42;
      v7 = v28;
      if (v31 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2161E04(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unsigned __int8 *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD v30[5];
  char *v31[3];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v24 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v25 = v7;
    while (1)
    {
      v27 = v8;
      v28 = v5;
      v9 = v7 + v8;
      v10 = *(_OWORD *)(v9 + 32);
      v11 = *(_OWORD *)(v9 + 48);
      v12 = *(_OWORD *)v9;
      v33 = *(_OWORD *)(v9 + 16);
      v34 = v10;
      v35 = v11;
      v36 = *(_QWORD *)(v9 + 64);
      v32 = v12;
      sub_1C216DF08((uint64_t)&v32);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v13);
      v30[3] = &type metadata for Google_Protobuf_SourceCodeInfo.Location;
      v30[4] = sub_1C20FF084();
      v14 = swift_allocObject();
      v30[0] = v14;
      v15 = v33;
      v16 = v35;
      *(_OWORD *)(v14 + 48) = v34;
      *(_OWORD *)(v14 + 64) = v16;
      *(_QWORD *)(v14 + 80) = v36;
      *(_OWORD *)(v14 + 16) = v32;
      *(_OWORD *)(v14 + 32) = v15;
      v17 = *v6;
      v18 = v6[1];
      v29 = v24;
      sub_1C216DF08((uint64_t)&v32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v30, v17, v18, &v29, (uint64_t)v31);
      sub_1C20F3F98(v31);
      v37 = v4;
      if (v4)
        break;
      v20 = v31[0];
      v19 = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v20;
      v6[1] = (uint64_t)v19;
      sub_1C20AB238(*((_QWORD *)v19 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v21 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v21);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v22);
      v23 = v31[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216DF84((uint64_t)&v32);
      v8 = v27 + 72;
      --v5;
      v4 = v37;
      v7 = v25;
      if (v28 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2162040(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  unsigned __int8 *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD v35[5];
  char *v36[3];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v29 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v30 = v7;
    while (1)
    {
      v32 = v8;
      v33 = v5;
      v9 = v7 + v8;
      v10 = *(_OWORD *)(v9 + 64);
      v11 = *(_OWORD *)(v9 + 96);
      v42 = *(_OWORD *)(v9 + 80);
      v43 = v11;
      v12 = *(_OWORD *)(v9 + 16);
      v37 = *(_OWORD *)v9;
      v13 = *(_OWORD *)(v9 + 32);
      v14 = *(_OWORD *)(v9 + 48);
      v38 = v12;
      v39 = v13;
      v44 = *(_QWORD *)(v9 + 112);
      v40 = v14;
      v41 = v10;
      sub_1C216E0B8(&v37);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v15);
      v35[3] = &type metadata for Google_Protobuf_UninterpretedOption;
      v35[4] = sub_1C20FE4B0();
      v16 = swift_allocObject();
      v17 = v42;
      v18 = v43;
      v19 = v40;
      *(_OWORD *)(v16 + 80) = v41;
      *(_OWORD *)(v16 + 96) = v17;
      *(_OWORD *)(v16 + 112) = v18;
      v20 = v38;
      v21 = v39;
      *(_OWORD *)(v16 + 16) = v37;
      *(_OWORD *)(v16 + 32) = v20;
      v35[0] = v16;
      *(_QWORD *)(v16 + 128) = v44;
      *(_OWORD *)(v16 + 48) = v21;
      *(_OWORD *)(v16 + 64) = v19;
      v22 = *v6;
      v23 = v6[1];
      v34 = v29;
      sub_1C216E0B8(&v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v35, v22, v23, &v34, (uint64_t)v36);
      sub_1C20F26AC(v36);
      v45 = v4;
      if (v4)
        break;
      v25 = v36[0];
      v24 = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v25;
      v6[1] = (uint64_t)v24;
      sub_1C20AB238(*((_QWORD *)v24 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v26 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v26);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v27);
      v28 = v36[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216E138(&v37);
      v8 = v32 + 120;
      --v5;
      v4 = v45;
      v7 = v30;
      if (v33 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2162294(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  _QWORD v37[3];
  int v38;
  char v39;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v38 = *(unsigned __int8 *)(v2 + 64);
    v29 = (uint64_t *)v2;
    v7 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 64);
    while (1)
    {
      v35 = v4;
      v9 = *((_QWORD *)v7 - 4);
      v8 = *((_QWORD *)v7 - 3);
      v10 = *v7;
      v12 = *((_QWORD *)v7 - 2);
      v11 = *((_QWORD *)v7 - 1);
      sub_1C20A8008(v9, v8);
      swift_bridgeObjectRetain();
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v13);
      v36[3] = &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
      v36[4] = sub_1C20FF040();
      v14 = swift_allocObject();
      v36[0] = v14;
      *(_QWORD *)(v14 + 16) = v9;
      *(_QWORD *)(v14 + 24) = v8;
      *(_QWORD *)(v14 + 32) = v12;
      *(_QWORD *)(v14 + 40) = v11;
      *(_BYTE *)(v14 + 48) = v10;
      v15 = *v6;
      v16 = v6[1];
      v39 = v38;
      v33 = v9;
      v34 = v8;
      v17 = v9;
      v18 = v15;
      sub_1C20A8008(v17, v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v36, v18, v16, &v39, (uint64_t)v37);
      if (v11)
      {
        sub_1C20A988C(1uLL);
        sub_1C20A9EB4((uint64_t)": ", 2, v19);
        sub_1C20AAAD0(v12, v11);
        v20 = (char *)v37[0];
        v31 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_1C214E1A4(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
        v22 = *((_QWORD *)v20 + 2);
        v21 = *((_QWORD *)v20 + 3);
        if (v22 >= v21 >> 1)
          v20 = sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, v20);
        *((_QWORD *)v20 + 2) = v22 + 1;
        v20[v22 + 32] = 10;
        v37[0] = v20;
        v7 = v31;
      }
      if (v10 == 2)
      {
        v23 = v35;
      }
      else
      {
        sub_1C20AE8CC(v10 & 1, 2uLL);
        v23 = v35;
        if (v35)
          goto LABEL_17;
      }
      v32 = v5;
      sub_1C20A8008(v33, v8);
      sub_1C2122EF0((uint64_t)v37, v33, v8);
      if (v23)
        break;
      sub_1C20A8058(v33, v8);
      v25 = v37[0];
      v24 = v37[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = v25;
      v6[1] = v24;
      sub_1C20AB238(*(_QWORD *)(v24 + 16) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v26 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v26);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v27);
      v28 = v37[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840(v28);
      v7 += 40;
      swift_bridgeObjectRelease();
      v6 = v29;
      swift_bridgeObjectRelease();
      sub_1C20A8058(v33, v34);
      swift_bridgeObjectRelease();
      --v5;
      v4 = 0;
      if (v32 == 1)
        return swift_bridgeObjectRelease();
    }
    sub_1C20A8058(v33, v8);
LABEL_17:
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216260C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  char v13;
  char v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _QWORD v34[5];
  _QWORD v35[3];
  int v36;
  char v37;

  v6 = v5;
  v7 = *(_QWORD *)(result + 16);
  if (v7)
  {
    v36 = *((unsigned __int8 *)v4 + 64);
    v26 = v4;
    v8 = (_BYTE *)(swift_bridgeObjectRetain() + 60);
    while (1)
    {
      v30 = v8;
      v31 = v7;
      v9 = *(_QWORD *)(v8 - 28);
      v10 = *(_QWORD *)(v8 - 20);
      v11 = *((_DWORD *)v8 - 3);
      v12 = *((_DWORD *)v8 - 1);
      v13 = *v8;
      v14 = *(v8 - 8);
      sub_1C20A8008(v9, v10);
      sub_1C20A988C(a2);
      v16 = sub_1C20AA8D4(v15);
      v34[3] = a3;
      v34[4] = a4(v16);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v9;
      *(_QWORD *)(v17 + 24) = v10;
      *(_DWORD *)(v17 + 32) = v11;
      *(_BYTE *)(v17 + 36) = v14;
      v32 = v12;
      *(_DWORD *)(v17 + 40) = v12;
      *(_BYTE *)(v17 + 44) = v13;
      v18 = *v4;
      v19 = v4[1];
      v37 = v36;
      v33 = v9;
      v34[0] = v17;
      sub_1C20A8008(v9, v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v34, v18, v19, &v37, (uint64_t)v35);
      if ((v14 & 1) == 0)
      {
        sub_1C212FA64(v11, 1uLL);
        if (v6)
          break;
      }
      if ((v13 & 1) == 0)
      {
        sub_1C212FA64(v32, 2uLL);
        if (v6)
          break;
      }
      sub_1C20A8008(v9, v10);
      sub_1C2122EF0((uint64_t)v35, v9, v10);
      if (v6)
      {
        sub_1C20A8058(v9, v10);
        break;
      }
      sub_1C20A8058(v9, v10);
      v20 = v35[0];
      v21 = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v26 = v20;
      v26[1] = v21;
      sub_1C20AB238(*(_QWORD *)(v21 + 16) - 1);
      sub_1C20AB238(*(_QWORD *)(v26[1] + 16) - 1);
      v22 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v22);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v23);
      v24 = v35[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = v24;
      v4 = v26;
      sub_1C20A8840(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v33, v10);
      v8 = v30 + 32;
      --v7;
      v6 = 0;
      if (v31 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21628BC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(_QWORD *, uint64_t, unint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[3];
  int v33;
  char v34;

  v7 = v6;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = (uint64_t *)v5;
    v33 = *(unsigned __int8 *)(v5 + 64);
    v10 = (_QWORD *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      v29 = v10;
      v30 = v8;
      v12 = *(v10 - 2);
      v11 = *(v10 - 1);
      v13 = *v10;
      sub_1C20A8008(v12, v11);
      swift_retain();
      sub_1C20A988C(a2);
      v15 = sub_1C20AA8D4(v14);
      v31[3] = a3;
      v16 = a4(v15);
      v31[0] = v12;
      v31[1] = v11;
      v31[4] = v16;
      v31[2] = v13;
      v17 = *v9;
      v18 = v9[1];
      v34 = v33;
      sub_1C20A8008(v12, v11);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v31, v17, v18, &v34, (uint64_t)v32);
      v28 = v12;
      a5(v32, v12, v11, v13);
      if (v7)
        break;
      v19 = v32[0];
      v20 = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v9 = v19;
      v9[1] = v20;
      sub_1C20AB238(*(_QWORD *)(v20 + 16) - 1);
      sub_1C20AB238(*(_QWORD *)(v9[1] + 16) - 1);
      v21 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v21);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v22);
      v23 = v32[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v28, v11);
      swift_release();
      v10 = v29 + 3;
      --v8;
      v7 = 0;
      if (v30 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2162AF4(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  unsigned __int8 *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[5];
  char *v30[3];
  __int128 v31;
  __int128 v32;
  _OWORD v33[3];
  uint64_t v34;

  v4 = v3;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = (uint64_t *)v2;
    v23 = *(_BYTE *)(v2 + 64);
    v7 = swift_bridgeObjectRetain();
    v8 = 32;
    v24 = v7;
    while (1)
    {
      v26 = v8;
      v27 = v5;
      v9 = v7 + v8;
      v10 = *(_OWORD *)(v9 + 16);
      v31 = *(_OWORD *)v9;
      v11 = *(_OWORD *)(v9 + 32);
      v32 = v10;
      v33[0] = v11;
      *(_QWORD *)((char *)v33 + 13) = *(_QWORD *)(v9 + 45);
      sub_1C216DE24((uint64_t)&v31);
      sub_1C20A988C(a2);
      sub_1C20AA8D4(v12);
      v29[3] = &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation;
      v29[4] = sub_1C20FF0C8();
      v13 = swift_allocObject();
      v29[0] = v13;
      v14 = v32;
      v15 = v33[0];
      *(_OWORD *)(v13 + 16) = v31;
      *(_OWORD *)(v13 + 32) = v14;
      *(_OWORD *)(v13 + 48) = v15;
      *(_QWORD *)(v13 + 61) = *(_QWORD *)((char *)v33 + 13);
      v16 = *v6;
      v17 = v6[1];
      v28 = v23;
      sub_1C216DE24((uint64_t)&v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v29, v16, v17, &v28, (uint64_t)v30);
      sub_1C20F4F60(v30);
      v34 = v4;
      if (v4)
        break;
      v19 = v30[0];
      v18 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v6 = (uint64_t)v19;
      v6[1] = (uint64_t)v18;
      sub_1C20AB238(*((_QWORD *)v18 + 2) - 1);
      sub_1C20AB238(*(_QWORD *)(v6[1] + 16) - 1);
      v20 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v20);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v21);
      v22 = v30[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840((uint64_t)v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C216DE70((uint64_t)&v31);
      v8 = v26 + 56;
      --v5;
      v4 = v34;
      v7 = v24;
      if (v27 == 1)
        return swift_bridgeObjectRelease();
    }
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2162D28(uint64_t result, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  _QWORD v33[3];
  int v34;
  char v35;

  v7 = v6;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = (uint64_t *)v5;
    v34 = *(unsigned __int8 *)(v5 + 64);
    v10 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      v11 = *(v10 - 2);
      v12 = *(v10 - 1);
      v13 = *v10;
      sub_1C20A8008(v11, v12);
      swift_retain();
      sub_1C20A988C(a2);
      v15 = sub_1C20AA8D4(v14);
      v32[3] = a3;
      v16 = a4(v15);
      v32[0] = v11;
      v32[1] = v12;
      v32[4] = v16;
      v32[2] = v13;
      v17 = *v9;
      v18 = v9[1];
      v35 = v34;
      sub_1C20A8008(v11, v12);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A84EC((uint64_t)v32, v17, v18, &v35, (uint64_t)v33);
      v19 = swift_retain();
      a5(v19, v33);
      if (v7)
        break;
      v31 = v8;
      swift_release();
      v29 = v12;
      v30 = v11;
      sub_1C2122EF0((uint64_t)v33, v11, v12);
      v20 = v33[0];
      v21 = v33[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v9 = v20;
      v9[1] = v21;
      sub_1C20AB238(*(_QWORD *)(v21 + 16) - 1);
      sub_1C20AB238(*(_QWORD *)(v9[1] + 16) - 1);
      v22 = swift_bridgeObjectRetain();
      sub_1C20AA5B0(v22);
      sub_1C20A9EB4((uint64_t)"}\n", 2, v23);
      v24 = v33[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8840(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v30, v29);
      swift_release();
      v10 += 3;
      --v8;
      v7 = 0;
      if (v31 == 1)
        return swift_bridgeObjectRelease();
    }
    swift_release();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2162F88(char a1)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v17[3] = &type metadata for Google_Protobuf_Field;
  v17[4] = sub_1C20C3C88();
  v5 = (_OWORD *)swift_allocObject();
  v17[0] = v5;
  v6 = v1[5];
  v5[5] = v1[4];
  v5[6] = v6;
  v7 = v1[7];
  v5[7] = v1[6];
  v5[8] = v7;
  v8 = v1[1];
  v5[1] = *v1;
  v5[2] = v8;
  v9 = v1[3];
  v5[3] = v1[2];
  v5[4] = v9;
  sub_1C20A84A8((uint64_t)v17, (uint64_t)v16);
  v15 = a1;
  sub_1C216E510((uint64_t)v1);
  sub_1C20A84EC((uint64_t)v16, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1C20BFE30((char **)&v18);
  v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v11 = sub_1C2175444();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2163204(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, __int128 *))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  _BYTE v24[40];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v25[3] = a5;
  v25[0] = a2;
  v25[1] = a3;
  v25[4] = a6(v16);
  v25[2] = a4;
  sub_1C20A84A8((uint64_t)v25, (uint64_t)v24);
  v23 = a1;
  sub_1C20A8008(a2, a3);
  swift_retain();
  sub_1C20A84EC((uint64_t)v24, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v17 = swift_retain();
  a7(v17, &v26);
  swift_release();
  sub_1C2122EF0((uint64_t)&v26, a2, a3);
  v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v19 = sub_1C2175444();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2163490(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  _BYTE v15[40];
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v16[3] = &type metadata for Google_Protobuf_Method;
  v16[4] = sub_1C20CB070();
  v5 = swift_allocObject();
  v16[0] = v5;
  v6 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(v1 + 96);
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v8;
  sub_1C20A84A8((uint64_t)v16, (uint64_t)v15);
  v14 = a1;
  sub_1C216E31C(v1);
  sub_1C20A84EC((uint64_t)v15, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v14, (uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_1C20C95D0((char **)&v17);
  v9 = v18;
  v16[0] = v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v10 = sub_1C2175444();
  v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216370C(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(__int128 *))
{
  _OWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  _BYTE v21[40];
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;

  v10 = sub_1C2175468();
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v22[3] = a2;
  v22[4] = a3(v12);
  v13 = (_OWORD *)swift_allocObject();
  v22[0] = v13;
  v14 = v5[1];
  v13[1] = *v5;
  v13[2] = v14;
  v13[3] = v5[2];
  sub_1C20A84A8((uint64_t)v22, (uint64_t)v21);
  v20 = a1;
  sub_1C216E42C((uint64_t)v5);
  sub_1C20A84EC((uint64_t)v21, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v20, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  a5(&v23);
  v15 = v24;
  v22[0] = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v16 = sub_1C2175444();
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v16;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216397C(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v17[3] = &type metadata for Google_Protobuf_FileDescriptorSet;
  v17[0] = a2;
  v17[1] = a3;
  v17[4] = sub_1C20FF940();
  v17[2] = a4;
  sub_1C20A84A8((uint64_t)v17, (uint64_t)v16);
  v15 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v16, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (*(_QWORD *)(a2 + 16))
    sub_1C2162D28(a2, 1uLL, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20FE420, (void (*)(uint64_t, _QWORD *))sub_1C215B914);
  sub_1C2122EF0((uint64_t)&v18, a3, a4);
  v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v11 = sub_1C2175444();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2163C1C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(__int128 *, uint64_t, unint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  _BYTE v23[40];
  _QWORD v24[5];
  __int128 v25;
  __int128 v26;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v24[3] = a5;
  v24[0] = a2;
  v24[1] = a3;
  v24[4] = a6(v16);
  v24[2] = a4;
  sub_1C20A84A8((uint64_t)v24, (uint64_t)v23);
  v22 = a1;
  sub_1C20A8008(a2, a3);
  swift_retain();
  sub_1C20A84EC((uint64_t)v23, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v22, (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  a7(&v25, a2, a3, a4);
  v17 = v26;
  v24[0] = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v18 = sub_1C2175444();
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2163E90(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  _BYTE v24[40];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v25[3] = a6;
  v25[4] = a7(v16);
  v17 = swift_allocObject();
  v25[0] = v17;
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  *(_DWORD *)(v17 + 32) = a4;
  *(_BYTE *)(v17 + 36) = BYTE4(a4) & 1;
  *(_DWORD *)(v17 + 40) = a5;
  *(_BYTE *)(v17 + 44) = BYTE4(a5) & 1;
  sub_1C20A84A8((uint64_t)v25, (uint64_t)v24);
  v23 = a1;
  sub_1C20A8008(a2, a3);
  sub_1C20A84EC((uint64_t)v24, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if ((a4 & 0x100000000) == 0)
    sub_1C212FA64(a4, 1uLL);
  if ((a5 & 0x100000000) == 0)
    sub_1C212FA64(a5, 2uLL);
  sub_1C20A8008(a2, a3);
  sub_1C2122EF0((uint64_t)&v26, a2, a3);
  sub_1C20A8058(a2, a3);
  v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v19 = sub_1C2175444();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216416C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  _BYTE v20[40];
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v10 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v10, v11);
  v21[3] = &type metadata for Google_Protobuf_FileOptions;
  v21[4] = sub_1C20FF448();
  v12 = (_QWORD *)swift_allocObject();
  v21[0] = v12;
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  sub_1C20A84A8((uint64_t)v21, (uint64_t)v20);
  v19 = a1;
  sub_1C20A8008(a2, a3);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C20A84EC((uint64_t)v20, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v13 = swift_retain();
  sub_1C215E954(v13, (char **)&v22, a2, a3, a4);
  swift_release();
  sub_1C2122EF0((uint64_t)&v22, a2, a3);
  v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v15 = sub_1C2175444();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2164428(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[40];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23[9];

  v2 = v1;
  v4 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v4, v5);
  v14[3] = &type metadata for Google_Protobuf_MessageOptions;
  v14[4] = sub_1C20FEC68();
  v6 = swift_allocObject();
  v14[0] = v6;
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_DWORD *)(v6 + 48) = *(_DWORD *)(v2 + 32);
  sub_1C20A84A8((uint64_t)v14, (uint64_t)v13);
  v23[0] = a1;
  sub_1C216E1E0(v2);
  sub_1C20A84EC((uint64_t)v13, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], v23, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C20C4D30(v2 + 32, (uint64_t)&v20, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v20, (uint64_t)&v21, &qword_1EF75D588);
  if (v21 != 2)
    sub_1C20AE8CC(v21 & 1, 1uLL);
  sub_1C20C4D30(v2 + 33, (uint64_t)&v19, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v19, (uint64_t)&v22, &qword_1EF75D588);
  if (v22 != 2)
    sub_1C20AE8CC(v22 & 1, 2uLL);
  sub_1C20C4D30(v2 + 34, (uint64_t)&v18, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v18, (uint64_t)v23, &qword_1EF75D588);
  if (v23[0] != 2)
    sub_1C20AE8CC(v23[0] & 1, 3uLL);
  sub_1C20C4D30(v2 + 35, (uint64_t)&v17, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v17, (uint64_t)v13, &qword_1EF75D588);
  if (v13[0] != 2)
    sub_1C20AE8CC(v13[0] & 1, 7uLL);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    sub_1C2162040(*(_QWORD *)v2, 0x3E7uLL);
  sub_1C2130B94((uint64_t)&v15, 1000, 0x20000000, *(_QWORD *)(v2 + 24));
  sub_1C2122EF0((uint64_t)&v15, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  v8 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v9 = sub_1C2175444();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21647EC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  _BYTE v13[40];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v14[3] = &type metadata for Google_Protobuf_FieldOptions;
  v14[4] = sub_1C20FECAC();
  v5 = swift_allocObject();
  v14[0] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 46) = *(_QWORD *)(v1 + 30);
  sub_1C20A84A8((uint64_t)v14, (uint64_t)v13);
  v12 = a1;
  sub_1C216E1E0(v1);
  sub_1C20A84EC((uint64_t)v13, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C20EF11C((char **)&v15);
  v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v8 = sub_1C2175444();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2164A58(char a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  _BYTE v24[40];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v25[3] = a6;
  v25[4] = a7(v16);
  v17 = (_QWORD *)swift_allocObject();
  v25[0] = v17;
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a5;
  sub_1C20A84A8((uint64_t)v25, (uint64_t)v24);
  v23 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  swift_bridgeObjectRetain();
  sub_1C20A84EC((uint64_t)v24, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (*(_QWORD *)(a2 + 16))
    sub_1C2162040(a2, 0x3E7uLL);
  sub_1C2130B94((uint64_t)&v26, 1000, 0x20000000, a5);
  sub_1C2122EF0((uint64_t)&v26, a3, a4);
  v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v19 = sub_1C2175444();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2164D1C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[40];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  char v17;
  char v18;
  char v19[9];

  v2 = v1;
  v4 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v4, v5);
  v14[3] = &type metadata for Google_Protobuf_EnumOptions;
  v14[4] = sub_1C20FEDBC();
  v6 = swift_allocObject();
  v14[0] = v6;
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_WORD *)(v6 + 48) = *(_WORD *)(v2 + 32);
  sub_1C20A84A8((uint64_t)v14, (uint64_t)v13);
  v19[0] = a1;
  sub_1C216E1E0(v2);
  sub_1C20A84EC((uint64_t)v13, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], v19, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C20C4D30(v2 + 32, (uint64_t)&v18, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v18, (uint64_t)v19, &qword_1EF75D588);
  if (v19[0] != 2)
    sub_1C20AE8CC(v19[0] & 1, 2uLL);
  sub_1C20C4D30(v2 + 33, (uint64_t)&v17, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v17, (uint64_t)v13, &qword_1EF75D588);
  if (v13[0] != 2)
    sub_1C20AE8CC(v13[0] & 1, 3uLL);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    sub_1C2162040(*(_QWORD *)v2, 0x3E7uLL);
  sub_1C2130B94((uint64_t)&v15, 1000, 0x20000000, *(_QWORD *)(v2 + 24));
  sub_1C2122EF0((uint64_t)&v15, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  v8 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v9 = sub_1C2175444();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2165050(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v21[40];
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;
  char v25[9];

  v9 = v5;
  v11 = sub_1C2175468();
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v22[3] = a2;
  v22[4] = a3(v13);
  v14 = swift_allocObject();
  v22[0] = v14;
  v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v9;
  *(_OWORD *)(v14 + 32) = v15;
  *(_BYTE *)(v14 + 48) = *(_BYTE *)(v9 + 32);
  sub_1C20A84A8((uint64_t)v22, (uint64_t)v21);
  v25[0] = a1;
  sub_1C216E1E0(v9);
  sub_1C20A84EC((uint64_t)v21, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], v25, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1C20C4D30(v9 + 32, (uint64_t)v25, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)v25, (uint64_t)v21, &qword_1EF75D588);
  if (v21[0] != 2)
    sub_1C20AE8CC(v21[0] & 1, a5);
  if (*(_QWORD *)(*(_QWORD *)v9 + 16))
    sub_1C2162040(*(_QWORD *)v9, 0x3E7uLL);
  sub_1C2130B94((uint64_t)&v23, 1000, 0x20000000, *(_QWORD *)(v9 + 24));
  sub_1C2122EF0((uint64_t)&v23, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16));
  v16 = v24;
  v22[0] = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v17 = sub_1C2175444();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2165340(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  _BYTE v13[40];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v14[3] = &type metadata for Google_Protobuf_MethodOptions;
  v14[4] = sub_1C20FEFB8();
  v5 = swift_allocObject();
  v14[0] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_WORD *)(v5 + 48) = *(_WORD *)(v1 + 32);
  sub_1C20A84A8((uint64_t)v14, (uint64_t)v13);
  v12 = a1;
  sub_1C216E1E0(v1);
  sub_1C20A84EC((uint64_t)v13, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C20F1998((char **)&v15);
  v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v8 = sub_1C2175444();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21655AC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  _BYTE v15[40];
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v16[3] = &type metadata for Google_Protobuf_UninterpretedOption;
  v16[4] = sub_1C20FE4B0();
  v5 = swift_allocObject();
  v16[0] = v5;
  v6 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v5 + 96) = v6;
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(v1 + 96);
  *(_QWORD *)(v5 + 128) = *(_QWORD *)(v1 + 112);
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v8;
  sub_1C20A84A8((uint64_t)v16, (uint64_t)v15);
  v14 = a1;
  sub_1C216E0B8((_QWORD *)v1);
  sub_1C20A84EC((uint64_t)v15, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v14, (uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_1C20F26AC((char **)&v17);
  v9 = v18;
  v16[0] = v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v10 = sub_1C2175444();
  v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2165830(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21[16];
  _BYTE v22[40];
  uint64_t v23;
  unint64_t v24;
  ValueMetadata *v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;
  _BYTE v30[9];

  v2 = v1;
  v4 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v4, v5);
  v25 = &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
  v26 = sub_1C20FF040();
  v6 = swift_allocObject();
  v23 = v6;
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_BYTE *)(v6 + 48) = *(_BYTE *)(v2 + 32);
  sub_1C20A84A8((uint64_t)&v23, (uint64_t)v22);
  v21[0] = a1;
  sub_1C216E02C(v2);
  sub_1C20A84EC((uint64_t)v22, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], v21, (uint64_t)&v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  sub_1C20C4D30(v2 + 16, (uint64_t)v22, &qword_1EF75D580);
  sub_1C20C4D30((uint64_t)v22, (uint64_t)&v23, &qword_1EF75D580);
  v8 = v24;
  if (v24)
  {
    v9 = v23;
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v10);
    sub_1C20AAAD0(v9, v8);
    v11 = (char *)v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    if (v13 >= v12 >> 1)
      v11 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(_QWORD *)&v27 = v11;
  }
  sub_1C20C4D30(v2 + 32, (uint64_t)&v29, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v29, (uint64_t)v30, &qword_1EF75D588);
  if (v30[0] != 2)
    sub_1C20AE8CC(v30[0] & 1, 2uLL);
  v14 = *(_QWORD *)v2;
  v15 = *(_QWORD *)(v2 + 8);
  sub_1C20A8008(v14, v15);
  sub_1C2122EF0((uint64_t)&v27, v14, v15);
  sub_1C20A8058(v14, v15);
  v16 = v28;
  *(_QWORD *)v21 = v27;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v17 = sub_1C2175444();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2165BE8(char a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  _BYTE v23[40];
  _QWORD v24[5];
  __int128 v25;
  __int128 v26;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v24[3] = a5;
  v24[0] = a2;
  v24[1] = a3;
  v24[4] = a6(v16);
  v24[2] = a4;
  sub_1C20A84A8((uint64_t)v24, (uint64_t)v23);
  v22 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v23, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v22, (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (*(_QWORD *)(a2 + 16))
    a7(a2, 1);
  sub_1C2122EF0((uint64_t)&v25, a3, a4);
  v17 = v26;
  v24[0] = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v18 = sub_1C2175444();
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2165E74(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  _BYTE v14[40];
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v15[3] = &type metadata for Google_Protobuf_SourceCodeInfo.Location;
  v15[4] = sub_1C20FF084();
  v5 = swift_allocObject();
  v15[0] = v5;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v1 + 64);
  v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  sub_1C20A84A8((uint64_t)v15, (uint64_t)v14);
  v13 = a1;
  sub_1C216DF08(v1);
  sub_1C20A84EC((uint64_t)v14, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v13, (uint64_t)&v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1C20F3F98((char **)&v16);
  v8 = v17;
  v15[0] = v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v9 = sub_1C2175444();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21660E8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12;
  _BYTE v13[40];
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;

  v3 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v3, v4);
  v14[3] = &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation;
  v14[4] = sub_1C20FF0C8();
  v5 = swift_allocObject();
  v14[0] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v5 + 61) = *(_QWORD *)(v1 + 45);
  sub_1C20A84A8((uint64_t)v14, (uint64_t)v13);
  v12 = a1;
  sub_1C216DE24(v1);
  sub_1C20A84EC((uint64_t)v13, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C20F4F60((char **)&v15);
  v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v8 = sub_1C2175444();
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216635C(char a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v17[3] = &type metadata for Google_Protobuf_BoolValue;
  v17[4] = sub_1C213C6CC();
  LOBYTE(v17[0]) = a2;
  v17[1] = a3;
  v17[2] = a4;
  sub_1C20A84A8((uint64_t)v17, (uint64_t)v16);
  v15 = a1;
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v16, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if ((a2 & 1) != 0)
    sub_1C20AE8CC(1, 1uLL);
  sub_1C20A8008(a3, a4);
  sub_1C2122EF0((uint64_t)&v18, a3, a4);
  sub_1C20A8058(a3, a4);
  v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v11 = sub_1C2175444();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21665F0(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unsigned __int8 *v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[3];
  char v27;
  _BYTE v28[40];
  _QWORD v29[5];
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v26[1] = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[3] = &type metadata for Google_Protobuf_FieldMask;
  v11 = sub_1C213D6B0();
  v29[0] = a2;
  v29[1] = a3;
  v29[4] = v11;
  v29[2] = a4;
  sub_1C20A84A8((uint64_t)v29, (uint64_t)v28);
  v27 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v28, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v27, (uint64_t)&v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = (unint64_t *)(a2 + 40);
    do
    {
      v14 = *(v13 - 1);
      v15 = *v13;
      swift_bridgeObjectRetain();
      sub_1C20A988C(1uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v16);
      sub_1C20AAAD0(v14, v15);
      swift_bridgeObjectRelease();
      v17 = (char *)v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v19 = *((_QWORD *)v17 + 2);
      v18 = *((_QWORD *)v17 + 3);
      if (v19 >= v18 >> 1)
        v17 = sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v17);
      v13 += 2;
      *((_QWORD *)v17 + 2) = v19 + 1;
      v17[v19 + 32] = 10;
      *(_QWORD *)&v30 = v17;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_1C2122EF0((uint64_t)&v30, a3, a4);
  v20 = v31;
  v21 = v32;
  v29[0] = v30;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v20);
  swift_bridgeObjectRetain();
  v26[0] = v21;
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v22 = sub_1C2175444();
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216694C(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v17[3] = &type metadata for Google_Protobuf_ListValue;
  v17[0] = a2;
  v17[1] = a3;
  v17[4] = sub_1C213E740();
  v17[2] = a4;
  sub_1C20A84A8((uint64_t)v17, (uint64_t)v16);
  v15 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v16, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (*(_QWORD *)(a2 + 16))
    sub_1C2162D28(a2, 1uLL, (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C213E7C8, (void (*)(uint64_t, _QWORD *))sub_1C216B3AC);
  sub_1C2122EF0((uint64_t)&v18, a3, a4);
  v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v11 = sub_1C2175444();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2166BEC(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  _BYTE v19[40];
  _QWORD v20[5];
  __int128 v21;
  __int128 v22;

  v10 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v10, v11);
  v20[3] = &type metadata for Google_Protobuf_BytesValue;
  v20[4] = sub_1C213C964();
  v12 = (_QWORD *)swift_allocObject();
  v20[0] = v12;
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  sub_1C20A84A8((uint64_t)v20, (uint64_t)v19);
  v18 = a1;
  sub_1C20A8008(a2, a3);
  sub_1C20A8008(a4, a5);
  sub_1C20A84EC((uint64_t)v19, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v18, (uint64_t)&v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_1C21689E4((uint64_t)&v21, a2, a3);
  v13 = v22;
  v20[0] = v21;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v14 = sub_1C2175444();
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2166E80(char a1, uint64_t a2, unint64_t a3, float a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  _BYTE v20[40];
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v21[3] = &type metadata for Google_Protobuf_FloatValue;
  v21[4] = sub_1C213C050();
  *(float *)v21 = a4;
  v21[1] = a2;
  v21[2] = a3;
  sub_1C20A84A8((uint64_t)v21, (uint64_t)v20);
  v19 = a1;
  sub_1C20A8008(a2, a3);
  sub_1C20A84EC((uint64_t)v20, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a4 != 0.0)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v10);
    sub_1C214C12C(a4);
    v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    if (v13 >= v12 >> 1)
      v11 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(_QWORD *)&v22 = v11;
  }
  sub_1C20A8008(a2, a3);
  sub_1C2122EF0((uint64_t)&v22, a2, a3);
  sub_1C20A8058(a2, a3);
  v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v15 = sub_1C2175444();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21671A8(char a1, int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v17[3] = &type metadata for Google_Protobuf_Int32Value;
  v17[4] = sub_1C213C434();
  LODWORD(v17[0]) = a2;
  v17[1] = a3;
  v17[2] = a4;
  sub_1C20A84A8((uint64_t)v17, (uint64_t)v16);
  v15 = a1;
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v16, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (a2)
    sub_1C212FA64(a2, 1uLL);
  sub_1C20A8008(a3, a4);
  sub_1C2122EF0((uint64_t)&v18, a3, a4);
  sub_1C20A8058(a3, a4);
  v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v11 = sub_1C2175444();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216743C(char a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  _BYTE v23[40];
  _QWORD v24[5];
  __int128 v25;
  __int128 v26;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v24[3] = &type metadata for Google_Protobuf_Int64Value;
  v24[0] = a2;
  v24[1] = a3;
  v24[4] = sub_1C213C19C();
  v24[2] = a4;
  sub_1C20A84A8((uint64_t)v24, (uint64_t)v23);
  v22 = a1;
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v23, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v22, (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (a2)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v10);
    if ((a2 & 0x8000000000000000) != 0)
    {
      v11 = (char *)v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v13 = *((_QWORD *)v11 + 2);
      v12 = *((_QWORD *)v11 + 3);
      if (v13 >= v12 >> 1)
        v11 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v13 + 1;
      v11[v13 + 32] = 45;
      *(_QWORD *)&v25 = v11;
      a2 = -(uint64_t)a2;
    }
    sub_1C214C444(a2);
    v14 = (char *)v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_1C214E1A4(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v16 = *((_QWORD *)v14 + 2);
    v15 = *((_QWORD *)v14 + 3);
    if (v16 >= v15 >> 1)
      v14 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v16 + 1;
    v14[v16 + 32] = 10;
    *(_QWORD *)&v25 = v14;
  }
  sub_1C20A8008(a3, a4);
  sub_1C2122EF0((uint64_t)&v25, a3, a4);
  sub_1C20A8058(a3, a4);
  v17 = v26;
  v24[0] = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v18 = sub_1C2175444();
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21677D4(char a1, uint64_t a2, unint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  _BYTE v20[40];
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v21[3] = &type metadata for Google_Protobuf_DoubleValue;
  v21[4] = sub_1C213BF04();
  *(double *)v21 = a4;
  v21[1] = a2;
  v21[2] = a3;
  sub_1C20A84A8((uint64_t)v21, (uint64_t)v20);
  v19 = a1;
  sub_1C20A8008(a2, a3);
  sub_1C20A84EC((uint64_t)v20, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a4 != 0.0)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v10);
    sub_1C214C194(a4);
    v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    if (v13 >= v12 >> 1)
      v11 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(_QWORD *)&v22 = v11;
  }
  sub_1C20A8008(a2, a3);
  sub_1C2122EF0((uint64_t)&v22, a2, a3);
  sub_1C20A8058(a2, a3);
  v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v15 = sub_1C2175444();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2167AFC(char a1, unsigned int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  _BYTE v20[40];
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v21[3] = &type metadata for Google_Protobuf_UInt32Value;
  v21[4] = sub_1C213C580();
  LODWORD(v21[0]) = a2;
  v21[1] = a3;
  v21[2] = a4;
  sub_1C20A84A8((uint64_t)v21, (uint64_t)v20);
  v19 = a1;
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v20, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a2)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v10);
    sub_1C214C444(a2);
    v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    if (v13 >= v12 >> 1)
      v11 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(_QWORD *)&v22 = v11;
  }
  sub_1C20A8008(a3, a4);
  sub_1C2122EF0((uint64_t)&v22, a3, a4);
  sub_1C20A8058(a3, a4);
  v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v15 = sub_1C2175444();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2167E18(char a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  _BYTE v20[40];
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v21[3] = &type metadata for Google_Protobuf_UInt64Value;
  v21[0] = a2;
  v21[1] = a3;
  v21[4] = sub_1C213C2E8();
  v21[2] = a4;
  sub_1C20A84A8((uint64_t)v21, (uint64_t)v20);
  v19 = a1;
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v20, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a2)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v10);
    sub_1C214C444(a2);
    v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1C214E1A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v13 = *((_QWORD *)v11 + 2);
    v12 = *((_QWORD *)v11 + 3);
    if (v13 >= v12 >> 1)
      v11 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(_QWORD *)&v22 = v11;
  }
  sub_1C20A8008(a3, a4);
  sub_1C2122EF0((uint64_t)&v22, a3, a4);
  sub_1C20A8058(a3, a4);
  v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v15 = sub_1C2175444();
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2168130(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  _BYTE v24[40];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v25[3] = a6;
  v25[4] = a7(v16);
  v17 = (_QWORD *)swift_allocObject();
  v25[0] = v17;
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a5;
  sub_1C20A84A8((uint64_t)v25, (uint64_t)v24);
  v23 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a4, a5);
  sub_1C20A84EC((uint64_t)v24, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1C21688D4((char **)&v26, a2, a3, a4, a5);
  v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v19 = sub_1C2175444();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21683C0(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  _BYTE v16[40];
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;

  v8 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v8, v9);
  v17[3] = &type metadata for Google_Protobuf_Struct;
  v17[0] = a2;
  v17[1] = a3;
  v17[4] = sub_1C213E784();
  v17[2] = a4;
  sub_1C20A84A8((uint64_t)v17, (uint64_t)v16);
  v15 = a1;
  swift_bridgeObjectRetain();
  sub_1C20A8008(a3, a4);
  sub_1C20A84EC((uint64_t)v16, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (*(_QWORD *)(a2 + 16))
    sub_1C2126274(a2, 1uLL, (uint64_t)&v18);
  sub_1C2122EF0((uint64_t)&v18, a3, a4);
  v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v11 = sub_1C2175444();
  v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2168648(char a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  _BYTE v24[40];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v14 = sub_1C2175468();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v25[3] = a6;
  v25[4] = a7(v16);
  v17 = swift_allocObject();
  v25[0] = v17;
  *(_QWORD *)(v17 + 16) = a2;
  *(_DWORD *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  sub_1C20A84A8((uint64_t)v25, (uint64_t)v24);
  v23 = a1;
  sub_1C20A8008(a4, a5);
  sub_1C20A84EC((uint64_t)v24, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1C2168B28((char **)&v26, a2, a3, a4, a5);
  v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C2156660((unint64_t *)&qword_1ED7DFDE0, &qword_1ED7DFDD8, MEMORY[0x1E0DEAF38]);
  v19 = sub_1C2175444();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_1C21688D4(char **a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  unsigned __int8 *v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;

  v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v8 = a2 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v11);
    sub_1C20AAAD0(a2, a3);
    v12 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1C214E1A4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
      *a1 = v12;
    }
    v15 = *((_QWORD *)v12 + 2);
    v14 = *((_QWORD *)v12 + 3);
    if (v15 >= v14 >> 1)
      v12 = sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v12);
    *((_QWORD *)v12 + 2) = v15 + 1;
    v12[v15 + 32] = 10;
    *a1 = v12;
  }
  sub_1C2122EF0((uint64_t)a1, a4, a5);
}

void sub_1C21689E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_1C2168A30()
{
  char **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;

  if ((v3 & 0xFF000000000000) != 0)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v5);
    sub_1C214BE80(v4, v3);
    v6 = *v0;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v0 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *v0 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 10;
    *v0 = v6;
  }
  sub_1C2122EF0((uint64_t)v0, v2, v1);
}

uint64_t sub_1C2168B28(char **a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  unint64_t v10;
  unsigned __int8 *v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  char *v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;

  if (a2)
  {
    v10 = a2;
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v11);
    if ((v10 & 0x8000000000000000) != 0)
    {
      v12 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_1C214E1A4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        *a1 = v12;
      }
      v14 = *((_QWORD *)v12 + 2);
      v15 = *((_QWORD *)v12 + 3);
      v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        v25 = v14 + 1;
        v22 = v12;
        v23 = *((_QWORD *)v12 + 2);
        v24 = sub_1C214E1A4((char *)(v15 > 1), v14 + 1, 1, v22);
        v14 = v23;
        v16 = v25;
        v12 = v24;
      }
      *((_QWORD *)v12 + 2) = v16;
      v12[v14 + 32] = 45;
      *a1 = v12;
      v10 = -(uint64_t)v10;
    }
    sub_1C214C444(v10);
    v17 = *a1;
    v18 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v17;
    if ((v18 & 1) == 0)
    {
      v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      *a1 = v17;
    }
    v20 = *((_QWORD *)v17 + 2);
    v19 = *((_QWORD *)v17 + 3);
    if (v20 >= v19 >> 1)
      v17 = sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v20 + 1;
    v17[v20 + 32] = 10;
    *a1 = v17;
  }
  if (!a3 || (result = sub_1C212FA64(a3, 2uLL), !v5))
  {
    sub_1C20A8008(a4, a5);
    sub_1C2122EF0((uint64_t)a1, a4, a5);
    return sub_1C20A8058(a4, a5);
  }
  return result;
}

uint64_t Google_Protobuf_Value.kind.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned __int8 v16;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v6 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v7 = swift_allocObject();
    v8 = *(_QWORD *)(v6 + 16);
    v9 = *(_QWORD *)(v6 + 24);
    v10 = *(_QWORD *)(v6 + 32);
    v11 = *(_BYTE *)(v6 + 40);
    *(_QWORD *)(v7 + 16) = v8;
    *(_QWORD *)(v7 + 24) = v9;
    *(_QWORD *)(v7 + 32) = v10;
    *(_BYTE *)(v7 + 40) = v11;
    sub_1C20C60C4(v8, v9, v10, v11);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v7;
    swift_release();
  }
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v12 + 24);
  v15 = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = v3;
  *(_QWORD *)(v12 + 32) = v4;
  v16 = *(_BYTE *)(v12 + 40);
  *(_BYTE *)(v12 + 40) = v5;
  return sub_1C20C6160(v13, v14, v15, v16);
}

uint64_t Google_Protobuf_Value.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_BYTE *)(v2 + 40);
  *(_BYTE *)(a1 + 24) = v6;
  return sub_1C20C60C4(v3, v4, v5, v6);
}

void Google_Protobuf_NullValue.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t Google_Protobuf_NullValue.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result == 0;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t Google_Protobuf_NullValue.rawValue.getter()
{
  _BYTE *v0;

  if ((v0[8] & 1) != 0)
    return 0;
  else
    return *(_QWORD *)v0;
}

uint64_t sub_1C2168E18@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result == 0;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1C2168E30()
{
  _BYTE *v0;

  if ((v0[8] & 1) != 0)
    return 0;
  else
    return *(_QWORD *)v0;
}

_QWORD *sub_1C2168E48@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result == 0;
  *(_QWORD *)a2 = *result;
  v3 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_1C2168E64(_QWORD *a1@<X8>)
{
  uint64_t v1;

  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
    *a1 = 0;
  else
    *a1 = *(_QWORD *)v1;
}

uint64_t sub_1C2168E80()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t sub_1C2168ECC()
{
  return sub_1C2175834();
}

uint64_t sub_1C2168F04()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

BOOL sub_1C2168F4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  if ((a1[1] & 1) != 0)
    v3 = 0;
  else
    v3 = *a1;
  if (*((_BYTE *)a2 + 8))
    v2 = 0;
  return v3 == v2;
}

void sub_1C2168F7C()
{
  qword_1EF760608 = (uint64_t)&unk_1E7BD85A8;
}

uint64_t static Google_Protobuf_NullValue.allCases.getter()
{
  if (qword_1EF75CD60 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static Google_Protobuf_NullValue.allCases.setter(uint64_t a1)
{
  if (qword_1EF75CD60 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EF760608 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Google_Protobuf_NullValue.allCases.modify())()
{
  if (qword_1EF75CD60 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_1C21690E0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EF75CD60 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_1EF760608;
  return swift_bridgeObjectRetain();
}

uint64_t (*Google_Protobuf_Struct.fields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Struct.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2169178(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  uint64_t v5[3];
  unsigned __int8 v6;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v5[0] = *(_QWORD *)a1;
  v5[1] = v1;
  v5[2] = v2;
  v6 = v3;
  sub_1C20C60C4(v5[0], v1, v2, v3);
  return Google_Protobuf_Value.kind.setter(v5);
}

void (*Google_Protobuf_Value.kind.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = *(_BYTE *)(v4 + 40);
  *v3 = v5;
  v3[1] = v6;
  v3[2] = v7;
  *((_BYTE *)v3 + 24) = v8;
  sub_1C20C60C4(v5, v6, v7, v8);
  return sub_1C2169228;
}

void sub_1C2169228(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    sub_1C20C60C4(**a1, v3, v5, v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[4];
      v8 = *(_QWORD *)(v7 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      v9 = swift_allocObject();
      v10 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      v12 = *(_QWORD *)(v8 + 32);
      v13 = *(_BYTE *)(v8 + 40);
      *(_QWORD *)(v9 + 16) = v10;
      *(_QWORD *)(v9 + 24) = v11;
      *(_QWORD *)(v9 + 32) = v12;
      *(_BYTE *)(v9 + 40) = v13;
      sub_1C20C60C4(v10, v11, v12, v13);
      sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(_QWORD *)(v7 + 16) = v9;
      swift_release();
    }
    v14 = *(_QWORD *)(v2[4] + 16);
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v14 + 24);
    v17 = *(_QWORD *)(v14 + 32);
    *(_QWORD *)(v14 + 16) = v4;
    *(_QWORD *)(v14 + 24) = v3;
    *(_QWORD *)(v14 + 32) = v5;
    v18 = *(_BYTE *)(v14 + 40);
    *(_BYTE *)(v14 + 40) = v6;
    sub_1C20C6160(v15, v16, v17, v18);
    v19 = *v2;
    v20 = v2[1];
    v21 = v2[2];
    v22 = *((_BYTE *)v2 + 24);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v23 = v2[4];
      v24 = *(_QWORD *)(v23 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      v25 = swift_allocObject();
      v26 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v24 + 24);
      v28 = *(_QWORD *)(v24 + 32);
      v29 = *(_BYTE *)(v24 + 40);
      *(_QWORD *)(v25 + 16) = v26;
      *(_QWORD *)(v25 + 24) = v27;
      *(_QWORD *)(v25 + 32) = v28;
      *(_BYTE *)(v25 + 40) = v29;
      sub_1C20C60C4(v26, v27, v28, v29);
      sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(_QWORD *)(v23 + 16) = v25;
      swift_release();
    }
    v30 = *(_QWORD *)(v2[4] + 16);
    v19 = *(_QWORD *)(v30 + 16);
    v20 = *(_QWORD *)(v30 + 24);
    v21 = *(_QWORD *)(v30 + 32);
    *(_QWORD *)(v30 + 16) = v4;
    *(_QWORD *)(v30 + 24) = v3;
    *(_QWORD *)(v30 + 32) = v5;
    v22 = *(_BYTE *)(v30 + 40);
    *(_BYTE *)(v30 + 40) = v6;
  }
  sub_1C20C6160(v19, v20, v21, v22);
  free(v2);
}

uint64_t Google_Protobuf_Value.nullValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  int v6;

  v2 = *(_QWORD *)(v1 + 16);
  result = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(unsigned __int8 *)(v2 + 40);
  if ((~v5 & 0x3000000000000000) == 0 && v6 == 255 || (v5 >> 60) & 3 | (4 * (v6 & 1u)))
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 1;
  }
  else
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = v4 & 1;
    return sub_1C20C60E8(result, v4, v5, v6 & 1);
  }
  return result;
}

uint64_t sub_1C2169404@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v3 = *(_QWORD *)(result + 16);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if ((~v6 & 0x3000000000000000) == 0 && v7 == 255 || (v6 >> 60) & 3 | (4 * (v7 & 1u)))
  {
    v5 = 0;
    v8 = 1;
  }
  else
  {
    v8 = v4 & 1;
    result = sub_1C20C60E8(v5, v4, v6, v7 & 1);
  }
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v8;
  return result;
}

uint64_t Google_Protobuf_Value.nullValue.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int8 v14;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v4 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v5 = swift_allocObject();
    v6 = *(_QWORD *)(v4 + 16);
    v7 = *(_QWORD *)(v4 + 24);
    v8 = *(_QWORD *)(v4 + 32);
    v9 = *(_BYTE *)(v4 + 40);
    *(_QWORD *)(v5 + 16) = v6;
    *(_QWORD *)(v5 + 24) = v7;
    *(_QWORD *)(v5 + 32) = v8;
    *(_BYTE *)(v5 + 40) = v9;
    sub_1C20C60C4(v6, v7, v8, v9);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v5;
    swift_release();
  }
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  v13 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(v10 + 32) = 0;
  v14 = *(_BYTE *)(v10 + 40);
  *(_BYTE *)(v10 + 40) = 0;
  return sub_1C20C6160(v11, v12, v13, v14);
}

uint64_t (*Google_Protobuf_Value.nullValue.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if ((~v6 & 0x3000000000000000) == 0 && v7 == 255 || (v6 >> 60) & 3 | (4 * (v7 & 1u)))
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 1;
  }
  else
  {
    *(_QWORD *)a1 = v4;
    *(_BYTE *)(a1 + 8) = v5 & 1;
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  return sub_1C21695AC;
}

uint64_t sub_1C21695AC(uint64_t a1)
{
  char v1;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)a1;
  v4 = v1;
  return Google_Protobuf_Value.nullValue.setter(&v3);
}

double Google_Protobuf_Value.numberValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  double v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  v6 = 0.0;
  if (((~v4 & 0x3000000000000000) != 0 || v5 != 255) && ((v4 >> 60) & 3 | (4 * (v5 & 1u))) == 1)
  {
    v6 = *(double *)&v2;
    sub_1C20C60E8(v2, v3, v4, v5 & 1);
  }
  return v6;
}

uint64_t sub_1C2169648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  result = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  v8 = 0;
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 1)
  {
    v8 = result;
    result = sub_1C20C60E8(result, v5, v6, v7 & 1);
  }
  *a2 = v8;
  return result;
}

uint64_t Google_Protobuf_Value.numberValue.setter(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v3 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v4 = swift_allocObject();
    v5 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *(_QWORD *)(v3 + 32);
    v8 = *(_BYTE *)(v3 + 40);
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = v6;
    *(_QWORD *)(v4 + 32) = v7;
    *(_BYTE *)(v4 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v4;
    swift_release();
  }
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v9 + 32);
  *(double *)(v9 + 16) = a1;
  *(_OWORD *)(v9 + 24) = xmmword_1C217C090;
  v13 = *(_BYTE *)(v9 + 40);
  *(_BYTE *)(v9 + 40) = 0;
  return sub_1C20C6160(v10, v11, v12, v13);
}

uint64_t (*Google_Protobuf_Value.numberValue.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  v8 = 0;
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 1)
  {
    v8 = v4;
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  *a1 = v8;
  return sub_1C21697E4;
}

uint64_t sub_1C21697E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;

  v1 = *a1;
  v2 = a1[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v4 = swift_allocObject();
    v5 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *(_QWORD *)(v3 + 32);
    v8 = *(_BYTE *)(v3 + 40);
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = v6;
    *(_QWORD *)(v4 + 32) = v7;
    *(_BYTE *)(v4 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v2 + 16) = v4;
    swift_release();
  }
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v9 + 16) = v1;
  *(_OWORD *)(v9 + 24) = xmmword_1C217C090;
  v13 = *(_BYTE *)(v9 + 40);
  *(_BYTE *)(v9 + 40) = 0;
  return sub_1C20C6160(v10, v11, v12, v13);
}

uint64_t Google_Protobuf_Value.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  if ((~v4 & 0x3000000000000000) == 0 && v5 == 255 || ((v4 >> 60) & 3 | (4 * (v5 & 1u))) != 2)
    return 0;
  sub_1C20C60E8(v2, v3, v4, v5 & 1);
  return v2;
}

uint64_t sub_1C2169904@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 2)
  {
    result = sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t Google_Protobuf_Value.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v5 = *(_QWORD *)(v2 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v6 = swift_allocObject();
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    v9 = *(_QWORD *)(v5 + 32);
    v10 = *(_BYTE *)(v5 + 40);
    *(_QWORD *)(v6 + 16) = v7;
    *(_QWORD *)(v6 + 24) = v8;
    *(_QWORD *)(v6 + 32) = v9;
    *(_BYTE *)(v6 + 40) = v10;
    sub_1C20C60C4(v7, v8, v9, v10);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v2 + 16) = v6;
    swift_release();
  }
  v11 = *(_QWORD *)(v2 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  v14 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = 0x2000000000000000;
  v15 = *(_BYTE *)(v11 + 40);
  *(_BYTE *)(v11 + 40) = 0;
  return sub_1C20C6160(v12, v13, v14, v15);
}

uint64_t (*Google_Protobuf_Value.stringValue.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 2)
  {
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a1 = v4;
  a1[1] = v5;
  return sub_1C2169AB8;
}

uint64_t sub_1C2169AB8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned __int8 v27;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(_QWORD *)(v4 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      v6 = swift_allocObject();
      v7 = *(_QWORD *)(v5 + 16);
      v8 = *(_QWORD *)(v5 + 24);
      v9 = *(_QWORD *)(v5 + 32);
      v10 = *(_BYTE *)(v5 + 40);
      *(_QWORD *)(v6 + 16) = v7;
      *(_QWORD *)(v6 + 24) = v8;
      *(_QWORD *)(v6 + 32) = v9;
      *(_BYTE *)(v6 + 40) = v10;
      sub_1C20C60C4(v7, v8, v9, v10);
      sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(_QWORD *)(v4 + 16) = v6;
      swift_release();
    }
    v11 = *(_QWORD *)(v4 + 16);
    v12 = *(_QWORD *)(v11 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    v14 = *(_QWORD *)(v11 + 32);
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v2;
    *(_QWORD *)(v11 + 32) = 0x2000000000000000;
    v15 = *(_BYTE *)(v11 + 40);
    *(_BYTE *)(v11 + 40) = 0;
    sub_1C20C6160(v12, v13, v14, v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = *(_QWORD *)(v4 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      v18 = swift_allocObject();
      v19 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v17 + 24);
      v21 = *(_QWORD *)(v17 + 32);
      v22 = *(_BYTE *)(v17 + 40);
      *(_QWORD *)(v18 + 16) = v19;
      *(_QWORD *)(v18 + 24) = v20;
      *(_QWORD *)(v18 + 32) = v21;
      *(_BYTE *)(v18 + 40) = v22;
      sub_1C20C60C4(v19, v20, v21, v22);
      sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(_QWORD *)(v4 + 16) = v18;
      swift_release();
    }
    v23 = *(_QWORD *)(v4 + 16);
    v24 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    v26 = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v23 + 16) = v3;
    *(_QWORD *)(v23 + 24) = v2;
    *(_QWORD *)(v23 + 32) = 0x2000000000000000;
    v27 = *(_BYTE *)(v23 + 40);
    *(_BYTE *)(v23 + 40) = 0;
    return sub_1C20C6160(v24, v25, v26, v27);
  }
}

uint64_t Google_Protobuf_Value.BOOLValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 40);
  if ((~v4 & 0x3000000000000000) == 0 && v5 == 255 || ((v4 >> 60) & 3 | (4 * (v5 & 1u))) != 3)
    return 0;
  v6 = v2 & 1;
  sub_1C20C60E8(v2, v3, v4, v5 & 1);
  return v6;
}

uint64_t sub_1C2169C7C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v3 = *(_QWORD *)(a1 + 16);
  result = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 3)
  {
    v8 = result & 1;
    result = sub_1C20C60E8(result, v5, v6, v7 & 1);
  }
  else
  {
    v8 = 0;
  }
  *a2 = v8;
  return result;
}

uint64_t Google_Protobuf_Value.BOOLValue.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v3 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v4 = swift_allocObject();
    v5 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *(_QWORD *)(v3 + 32);
    v8 = *(_BYTE *)(v3 + 40);
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = v6;
    *(_QWORD *)(v4 + 32) = v7;
    *(_BYTE *)(v4 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v4;
    swift_release();
  }
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v9 + 16) = a1 & 1;
  *(_OWORD *)(v9 + 24) = xmmword_1C217C0A0;
  v13 = *(_BYTE *)(v9 + 40);
  *(_BYTE *)(v9 + 40) = 0;
  return sub_1C20C6160(v10, v11, v12, v13);
}

uint64_t (*Google_Protobuf_Value.BOOLValue.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 3)
  {
    v8 = v4 & 1;
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    v8 = 0;
  }
  *v2 = v8;
  return sub_1C2169E0C;
}

uint64_t sub_1C2169E0C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v3 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v4 = swift_allocObject();
    v5 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    v7 = *(_QWORD *)(v3 + 32);
    v8 = *(_BYTE *)(v3 + 40);
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = v6;
    *(_QWORD *)(v4 + 32) = v7;
    *(_BYTE *)(v4 + 40) = v8;
    sub_1C20C60C4(v5, v6, v7, v8);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v4;
    swift_release();
  }
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v9 + 16) = v2;
  *(_OWORD *)(v9 + 24) = xmmword_1C217C0A0;
  v13 = *(_BYTE *)(v9 + 40);
  *(_BYTE *)(v9 + 40) = 0;
  return sub_1C20C6160(v10, v11, v12, v13);
}

double Google_Protobuf_Value.structValue.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  double result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 4)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    *a1 = sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
    result = 0.0;
    *(_OWORD *)(a1 + 1) = xmmword_1C2175DE0;
  }
  return result;
}

unint64_t sub_1C2169F44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 4)
  {
    result = sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    result = sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
    v4 = result;
    v5 = 0;
    v6 = 0xC000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t Google_Protobuf_Value.structValue.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v6 = swift_allocObject();
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    v9 = *(_QWORD *)(v5 + 32);
    v10 = *(_BYTE *)(v5 + 40);
    *(_QWORD *)(v6 + 16) = v7;
    *(_QWORD *)(v6 + 24) = v8;
    *(_QWORD *)(v6 + 32) = v9;
    *(_BYTE *)(v6 + 40) = v10;
    sub_1C20C60C4(v7, v8, v9, v10);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v6;
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  v14 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = v3;
  *(_QWORD *)(v11 + 32) = v4;
  v15 = *(_BYTE *)(v11 + 40);
  *(_BYTE *)(v11 + 40) = 1;
  return sub_1C20C6160(v12, v13, v14, v15);
}

uint64_t (*Google_Protobuf_Value.structValue.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;

  a1[3] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 4)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    *a1 = sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
    *(_OWORD *)(a1 + 1) = xmmword_1C2175DE0;
  }
  return sub_1C216A118;
}

uint64_t sub_1C216A118(_QWORD *a1, char a2)
{
  return sub_1C216A3C0(a1, a2, Google_Protobuf_Value.structValue.setter);
}

double Google_Protobuf_Value.listValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  double result;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(unsigned __int8 *)(v2 + 40);
  if (((~v5 & 0x3000000000000000) != 0 || v6 != 255) && ((v5 >> 60) & 3 | (4 * (v6 & 1u))) == 5)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5 & 0xCFFFFFFFFFFFFFFFLL;
    sub_1C20C60E8(v3, v4, v5, v6 & 1);
  }
  else
  {
    *a1 = MEMORY[0x1E0DEE9D8];
    result = 0.0;
    *(_OWORD *)(a1 + 1) = xmmword_1C2175DE0;
  }
  return result;
}

uint64_t sub_1C216A188@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 5)
  {
    v8 = v6 & 0xCFFFFFFFFFFFFFFFLL;
    result = sub_1C20C60E8(v5, v4, v6, v7 & 1);
  }
  else
  {
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
    v8 = 0xC000000000000000;
  }
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v8;
  return result;
}

uint64_t sub_1C216A210(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[3];

  v6 = a1[1];
  v7 = a1[2];
  v9[0] = *a1;
  v9[1] = v6;
  v9[2] = v7;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v6, v7);
  return a5(v9);
}

uint64_t Google_Protobuf_Value.listValue.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v5 = *(_QWORD *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v6 = swift_allocObject();
    v7 = *(_QWORD *)(v5 + 16);
    v8 = *(_QWORD *)(v5 + 24);
    v9 = *(_QWORD *)(v5 + 32);
    v10 = *(_BYTE *)(v5 + 40);
    *(_QWORD *)(v6 + 16) = v7;
    *(_QWORD *)(v6 + 24) = v8;
    *(_QWORD *)(v6 + 32) = v9;
    *(_BYTE *)(v6 + 40) = v10;
    sub_1C20C60C4(v7, v8, v9, v10);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v1 + 16) = v6;
    swift_release();
  }
  v11 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  v14 = *(_QWORD *)(v11 + 32);
  *(_QWORD *)(v11 + 16) = v2;
  *(_QWORD *)(v11 + 24) = v3;
  *(_QWORD *)(v11 + 32) = v4 | 0x1000000000000000;
  v15 = *(_BYTE *)(v11 + 40);
  *(_BYTE *)(v11 + 40) = 1;
  return sub_1C20C6160(v12, v13, v14, v15);
}

uint64_t (*Google_Protobuf_Value.listValue.modify(uint64_t *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;

  a1[3] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 5)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6 & 0xCFFFFFFFFFFFFFFFLL;
    sub_1C20C60E8(v4, v5, v6, v7 & 1);
  }
  else
  {
    *a1 = MEMORY[0x1E0DEE9D8];
    *(_OWORD *)(a1 + 1) = xmmword_1C2175DE0;
  }
  return sub_1C216A3B4;
}

uint64_t sub_1C216A3B4(_QWORD *a1, char a2)
{
  return sub_1C216A3C0(a1, a2, Google_Protobuf_Value.listValue.setter);
}

uint64_t sub_1C216A3C0(_QWORD *a1, char a2, uint64_t (*a3)(_QWORD *))
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[3];

  v4 = a1[1];
  v5 = a1[2];
  v7[0] = *a1;
  v7[1] = v4;
  v7[2] = v5;
  if ((a2 & 1) == 0)
    return a3(v7);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  a3(v7);
  swift_bridgeObjectRelease();
  return sub_1C20A8058(v4, v5);
}

uint64_t Google_Protobuf_Value.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Value.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Value.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t static Google_Protobuf_Struct.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1C20F3950(a1, a2, sub_1C216C06C);
}

uint64_t static Google_Protobuf_ListValue.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1C20F3950(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1C20F77A8);
}

uint64_t Google_Protobuf_ListValue.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ListValue.values.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_ListValue.values.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ListValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_ListValue.unknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C216A528()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD38E0, &qword_1EF760610);
}

uint64_t static Google_Protobuf_NullValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD68 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760618;
  v3 = qword_1EF760620;
  v4 = unk_1EF760628;
  *a1 = qword_1EF760610;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C216A5B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD68 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760618;
  v3 = qword_1EF760620;
  v4 = unk_1EF760628;
  *a1 = qword_1EF760610;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_Struct.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C216A650()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD7408, &qword_1EF760630);
}

uint64_t static Google_Protobuf_Struct._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD70 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760638;
  v3 = qword_1EF760640;
  v4 = unk_1EF760648;
  *a1 = qword_1EF760630;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Struct.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  void (*v10)(uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1)
      {
        v10 = *(void (**)(uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 456);
        v11 = sub_1C213E7C8();
        v12 = sub_1C216D4B4();
        v10(v3, &type metadata for ProtobufString, &type metadata for Google_Protobuf_Value, &protocol witness table for ProtobufString, v11, v12, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

void Google_Protobuf_Struct.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v9;
  unint64_t v10;

  v7 = *v3;
  if (!*(_QWORD *)(*v3 + 16)
    || (v8 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 424),
        v9 = sub_1C213E7C8(),
        v10 = sub_1C216D4B4(),
        v8(v7, 1, &type metadata for ProtobufString, &type metadata for Google_Protobuf_Value, &protocol witness table for ProtobufString, v9, v10, a2, a3), !v4))
  {
    UnknownStorage.traverse<A>(visitor:)();
  }
}

uint64_t Google_Protobuf_Struct.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE220);
}

double sub_1C216A8A4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C216A8DC()
{
  return 0xD000000000000016;
}

uint64_t sub_1C216A8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Struct.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C216A90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Struct.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C216A920@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD70 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760638;
  v3 = qword_1EF760640;
  v4 = unk_1EF760648;
  *a1 = qword_1EF760630;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C216A99C()
{
  uint64_t *v0;

  return sub_1C2159CDC(*v0, v0[1], v0[2], (uint64_t)&type metadata for Google_Protobuf_Struct, &qword_1EF7607D0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C21683C0);
}

uint64_t sub_1C216A9D0(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE220);
}

void sub_1C216A9DC(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE220(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C216A9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE220);
}

uint64_t sub_1C216A9F4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20F3B10(a1, a2, a3, a4, sub_1C216C06C);
}

unint64_t static Google_Protobuf_Value.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1C216AA1C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD7060, &qword_1EF760650);
}

uint64_t static Google_Protobuf_Value._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD78 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760658;
  v3 = qword_1EF760660;
  v4 = unk_1EF760668;
  *a1 = qword_1EF760650;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C216AAAC()
{
  uint64_t v0;

  sub_1C20C6160(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v7 = *(_QWORD *)(v3 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    v8 = swift_allocObject();
    v9 = *(_QWORD *)(v7 + 16);
    v10 = *(_QWORD *)(v7 + 24);
    v11 = *(_QWORD *)(v7 + 32);
    v12 = *(_BYTE *)(v7 + 40);
    *(_QWORD *)(v8 + 16) = v9;
    *(_QWORD *)(v8 + 24) = v10;
    *(_QWORD *)(v8 + 32) = v11;
    *(_BYTE *)(v8 + 40) = v12;
    sub_1C20C60C4(v9, v10, v11, v12);
    sub_1C20C6160(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(_QWORD *)(v3 + 16) = v8;
    swift_release();
  }
  v13 = swift_retain();
  sub_1C216ABAC(v13, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C216ABAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  unsigned __int8 v11;
  void (*v12)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  void (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  __int128 v43;
  uint64_t (*v44)(uint64_t, uint64_t);

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  if (!v4)
  {
    v44 = v8;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          if ((~*(_QWORD *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255)
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          v42 = 0;
          LOWORD(v43) = 256;
          v12 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 392);
          v13 = sub_1C216E610();
          v12(&v42, &type metadata for Google_Protobuf_NullValue, v13, a3, a4);
          if ((BYTE1(v43) & 1) == 0)
          {
            v14 = v43 & 1;
            v15 = *(_QWORD *)(a1 + 16);
            v16 = *(_QWORD *)(a1 + 24);
            v17 = *(_QWORD *)(a1 + 32);
            *(_QWORD *)(a1 + 16) = v42;
            *(_QWORD *)(a1 + 24) = v14;
            *(_QWORD *)(a1 + 32) = 0;
            goto LABEL_5;
          }
          break;
        case 2:
          if ((~*(_QWORD *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255)
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          v42 = 0;
          LOBYTE(v43) = 1;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 56))(&v42, a3, a4);
          if ((v43 & 1) == 0)
          {
            v15 = *(_QWORD *)(a1 + 16);
            v16 = *(_QWORD *)(a1 + 24);
            v17 = *(_QWORD *)(a1 + 32);
            *(_QWORD *)(a1 + 16) = v42;
            v18 = xmmword_1C217C090;
            goto LABEL_4;
          }
          break;
        case 3:
          if ((~*(_QWORD *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255)
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          v42 = 0;
          *(_QWORD *)&v43 = 0;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 344))(&v42, a3, a4);
          v19 = v43;
          if ((_QWORD)v43)
          {
            v20 = *(_QWORD *)(a1 + 16);
            v16 = *(_QWORD *)(a1 + 24);
            v17 = *(_QWORD *)(a1 + 32);
            *(_QWORD *)(a1 + 16) = v42;
            *(_QWORD *)(a1 + 24) = v19;
            *(_QWORD *)(a1 + 32) = 0x2000000000000000;
            v11 = *(_BYTE *)(a1 + 40);
            *(_BYTE *)(a1 + 40) = 0;
            v15 = v20;
            goto LABEL_6;
          }
          break;
        case 4:
          if ((~*(_QWORD *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255)
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          LOBYTE(v42) = 2;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 320))(&v42, a3, a4);
          if (v42 != 2)
          {
            v15 = *(_QWORD *)(a1 + 16);
            v16 = *(_QWORD *)(a1 + 24);
            v17 = *(_QWORD *)(a1 + 32);
            *(_QWORD *)(a1 + 16) = v42 & 1;
            v18 = xmmword_1C217C0A0;
LABEL_4:
            *(_OWORD *)(a1 + 24) = v18;
LABEL_5:
            v11 = *(_BYTE *)(a1 + 40);
            *(_BYTE *)(a1 + 40) = 0;
            goto LABEL_6;
          }
          break;
        case 5:
          v42 = 0;
          v43 = 0uLL;
          v21 = *(_QWORD *)(a1 + 32);
          v22 = *(unsigned __int8 *)(a1 + 40);
          if ((~v21 & 0x3000000000000000) != 0 || v22 != 255)
          {
            v39 = *(_BYTE *)(a1 + 40);
            v23 = v22 & 1;
            v40 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
            v24 = *(_QWORD *)(a1 + 16);
            v25 = *(_QWORD *)(a1 + 24);
            sub_1C20C60E8(v24, v25, v21, v22 & 1);
            v40(a3, a4);
            if (((v21 >> 60) & 3 | (4 * v23)) == 4)
            {
              v42 = v24;
              *(_QWORD *)&v43 = v25;
              *((_QWORD *)&v43 + 1) = v21;
            }
            else
            {
              sub_1C20C6160(v24, v25, v21, v39);
            }
          }
          v8 = v44;
          v31 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          v32 = sub_1C213E784();
          v31(&v42, &type metadata for Google_Protobuf_Struct, v32, a3, a4);
          if (v42)
          {
            v33 = *(_QWORD *)(a1 + 16);
            v16 = *(_QWORD *)(a1 + 24);
            v17 = *(_QWORD *)(a1 + 32);
            *(_QWORD *)(a1 + 16) = v42;
            *(_OWORD *)(a1 + 24) = v43;
            v11 = *(_BYTE *)(a1 + 40);
            *(_BYTE *)(a1 + 40) = 1;
            v15 = v33;
            goto LABEL_6;
          }
          break;
        case 6:
          v42 = 0;
          v43 = 0uLL;
          v26 = *(_QWORD *)(a1 + 32);
          v27 = *(unsigned __int8 *)(a1 + 40);
          if ((~v26 & 0x3000000000000000) != 0 || v27 != 255)
          {
            v38 = *(_BYTE *)(a1 + 40);
            v28 = v27 & 1;
            v41 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
            v29 = *(_QWORD *)(a1 + 16);
            v30 = *(_QWORD *)(a1 + 24);
            sub_1C20C60E8(v29, v30, v26, v27 & 1);
            v41(a3, a4);
            if (((v26 >> 60) & 3 | (4 * v28)) == 5)
            {
              v42 = v29;
              *(_QWORD *)&v43 = v30;
              *((_QWORD *)&v43 + 1) = v26 & 0xCFFFFFFFFFFFFFFFLL;
            }
            else
            {
              sub_1C20C6160(v29, v30, v26, v38);
            }
            v8 = v44;
          }
          v34 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          v35 = sub_1C213E740();
          v34(&v42, &type metadata for Google_Protobuf_ListValue, v35, a3, a4);
          if (v42)
          {
            v36 = v43;
            v37 = *((_QWORD *)&v43 + 1) | 0x1000000000000000;
            v15 = *(_QWORD *)(a1 + 16);
            v16 = *(_QWORD *)(a1 + 24);
            v17 = *(_QWORD *)(a1 + 32);
            *(_QWORD *)(a1 + 16) = v42;
            *(_QWORD *)(a1 + 24) = v36;
            *(_QWORD *)(a1 + 32) = v37;
            v11 = *(_BYTE *)(a1 + 40);
            *(_BYTE *)(a1 + 40) = 1;
LABEL_6:
            sub_1C20C6160(v15, v16, v17, v11);
          }
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void sub_1C216B114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int v6;

  v5 = *(_QWORD *)(a4 + 32);
  v6 = *(unsigned __int8 *)(a4 + 40);
  if ((~v5 & 0x3000000000000000) == 0 && v6 == 255)
  {
    swift_retain();
    swift_release();
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1C216B2B8()
{
  uint64_t v0;
  uint64_t result;

  if ((v0 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void Google_Protobuf_Value.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_retain();
  sub_1C216B654(v1);
  swift_release();
  if (!v0)
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t sub_1C216B3AC(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(result + 32);
  v2 = *(unsigned __int8 *)(result + 40);
  if ((~v1 & 0x3000000000000000) != 0 || v2 != 255)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_1C216B654(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(result + 32);
  v2 = *(unsigned __int8 *)(result + 40);
  if ((~v1 & 0x3000000000000000) != 0 || v2 != 255)
    __asm { BR              X10 }
  return result;
}

BOOL sub_1C216B80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  if ((~v4 & 0x3000000000000000) == 0 && v5 == 255)
  {
    if ((~v8 & 0x3000000000000000) != 0 || v9 != 255)
      goto LABEL_9;
    return 1;
  }
  v13 = *(_QWORD *)(a1 + 16);
  v14 = v2;
  v15 = v4;
  v16 = v5;
  if ((~v8 & 0x3000000000000000) != 0 || v9 != 255)
  {
    sub_1C20C60C4(v3, v2, v4, v5);
    sub_1C20C60C4(v3, v2, v4, v5);
    _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0((uint64_t)&v13);
    v11 = v10;
    sub_1C20C6184(v13, v14, v15, v16);
    sub_1C20C6160(v3, v2, v4, v5);
    return (v11 & 1) != 0;
  }
  sub_1C20C60C4(v3, v2, v4, v5);
  sub_1C20C60E8(v3, v2, v4, v5 & 1);
  sub_1C20C6184(v3, v2, v4, v5 & 1);
LABEL_9:
  sub_1C20C60C4(v7, v6, v8, v9);
  sub_1C20C6160(v3, v2, v4, v5);
  sub_1C20C6160(v7, v6, v8, v9);
  return 0;
}

uint64_t Google_Protobuf_Value.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  v5 = v15;
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  sub_1C216B114((uint64_t)&v5, v1, v2, v3);
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  return sub_1C2175870();
}

uint64_t sub_1C216BA4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)a1 = xmmword_1C2175DE0;
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  result = swift_initStaticObject();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C216BA8C()
{
  return 0xD000000000000015;
}

uint64_t sub_1C216BAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C216BABC()
{
  Google_Protobuf_Value.traverse<A>(visitor:)();
}

uint64_t sub_1C216BAD0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD78 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760658;
  v3 = qword_1EF760660;
  v4 = unk_1EF760668;
  *a1 = qword_1EF760650;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C216BB4C()
{
  uint64_t v0;

  return sub_1C215A3C4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C216BB58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  v5 = v15;
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  sub_1C216B114((uint64_t)&v5, v1, v2, v3);
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  return sub_1C2175870();
}

double sub_1C216BC00(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = *((_QWORD *)a1 + 8);
  v7 = a1[1];
  v13 = *a1;
  v14 = v7;
  v8 = a1[3];
  v15 = a1[2];
  v16 = v8;
  v17 = v6;
  sub_1C216B114((uint64_t)&v13, v3, v4, v5);
  v9 = v17;
  v10 = v14;
  *a1 = v13;
  a1[1] = v10;
  result = *(double *)&v15;
  v12 = v16;
  a1[2] = v15;
  a1[3] = v12;
  *((_QWORD *)a1 + 8) = v9;
  return result;
}

uint64_t sub_1C216BC7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  v5 = v15;
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  sub_1C216B114((uint64_t)&v5, v1, v2, v3);
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_ListValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C216BD40()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3888, &qword_1EF760670);
}

uint64_t static Google_Protobuf_ListValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD80 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760678;
  v3 = qword_1EF760680;
  v4 = unk_1EF760688;
  *a1 = qword_1EF760670;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ListValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  void (*v10)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v11;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1)
      {
        v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
        v11 = sub_1C213E7C8();
        v10(v3, &type metadata for Google_Protobuf_Value, v11, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

void Google_Protobuf_ListValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v9;

  v7 = *v3;
  if (!*(_QWORD *)(*v3 + 16)
    || (v8 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
        v9 = sub_1C213E7C8(),
        v8(v7, 1, &type metadata for Google_Protobuf_Value, v9, a2, a3),
        !v4))
  {
    UnknownStorage.traverse<A>(visitor:)();
  }
}

uint64_t Google_Protobuf_ListValue.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE308);
}

unint64_t sub_1C216BF54()
{
  return 0xD000000000000019;
}

uint64_t sub_1C216BF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ListValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C216BF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_ListValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C216BF98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CD80 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF760678;
  v3 = qword_1EF760680;
  v4 = unk_1EF760688;
  *a1 = qword_1EF760670;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C216C014()
{
  uint64_t *v0;

  return sub_1C2159CDC(*v0, v0[1], v0[2], (uint64_t)&type metadata for Google_Protobuf_ListValue, &qword_1EF7607C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C216694C);
}

uint64_t sub_1C216C048(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE308);
}

uint64_t sub_1C216C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE308);
}

uint64_t sub_1C216C060(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20F3B10(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))sub_1C20F77A8);
}

uint64_t sub_1C216C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t __s1;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v3 = 1 << *(_BYTE *)(a1 + 32);
    v4 = -1;
    if (v3 < 64)
      v4 = ~(-1 << v3);
    v5 = v4 & *(_QWORD *)(a1 + 64);
    v42 = (unint64_t)(v3 + 63) >> 6;
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      goto LABEL_22;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 72);
      v8 = 1;
      if (v7)
        goto LABEL_21;
      v8 = 2;
      if (v42 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_21;
      v8 = 3;
      if (v42 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
        goto LABEL_21;
      v8 = 4;
      if (v42 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 96);
      if (v7)
      {
LABEL_21:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_22:
        v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        v13 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 24 * v6);
        v15 = *v13;
        v14 = v13[1];
        v16 = v13[2];
        swift_bridgeObjectRetain();
        sub_1C20A8008(v15, v14);
        swift_retain();
        v17 = sub_1C20A9B30(v11, v12);
        v19 = v18;
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          sub_1C20A8058(v15, v14);
LABEL_40:
          swift_release();
          return 0;
        }
        v20 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * v17);
        v21 = *v20;
        v22 = v20[1];
        v23 = v20[2];
        v46 = v22;
        v47 = *v20;
        if (v23 == v16)
        {
          v34 = v20[1];
          sub_1C20A8008(v21, v22);
          swift_retain();
        }
        else
        {
          v43 = v15;
          v44 = v14;
          v25 = *(_QWORD *)(v23 + 16);
          v24 = *(_QWORD *)(v23 + 24);
          v26 = *(_QWORD *)(v23 + 32);
          v45 = *(unsigned __int8 *)(v23 + 40);
          v28 = *(_QWORD *)(v16 + 16);
          v27 = *(_QWORD *)(v16 + 24);
          v29 = *(_QWORD *)(v16 + 32);
          v30 = *(unsigned __int8 *)(v16 + 40);
          if ((~v26 & 0x3000000000000000) != 0 || v45 != 255)
          {
            __s1 = *(_QWORD *)(v23 + 16);
            v49 = v24;
            v50 = v26;
            v51 = v45;
            if ((~v29 & 0x3000000000000000) == 0 && v30 == 255)
            {
              v39 = v28;
              v40 = v27;
              v41 = v29;
              sub_1C20C60C4(v25, v24, v26, v45);
              sub_1C20A8008(v47, v46);
              swift_retain();
              sub_1C20C60C4(v25, v24, v26, v45);
              swift_retain();
              swift_retain();
              v31 = v25;
              v38 = v25;
              v32 = v24;
              sub_1C20C6184(v38, v24, v26, v45 & 1);
LABEL_38:
              sub_1C20C60C4(v39, v40, v41, v30);
              sub_1C20C6160(v31, v32, v26, v45);
              sub_1C20C6160(v39, v40, v41, v30);
              goto LABEL_39;
            }
            sub_1C20C60C4(v25, v24, v26, v45);
            sub_1C20A8008(v47, v46);
            swift_retain();
            sub_1C20C60C4(v25, v24, v26, v45);
            swift_retain();
            swift_retain();
            _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0((uint64_t)&__s1);
            v36 = v35;
            sub_1C20C6184(__s1, v49, v50, v51);
            sub_1C20C6160(v25, v24, v26, v45);
            if ((v36 & 1) == 0)
            {
LABEL_39:
              swift_release();
              swift_release();
              sub_1C20A8058(v47, v46);
              swift_release();
              sub_1C20A8058(v43, v44);
              goto LABEL_40;
            }
          }
          else
          {
            v39 = v28;
            v40 = v27;
            v31 = *(_QWORD *)(v23 + 16);
            v32 = *(_QWORD *)(v23 + 24);
            v41 = v29;
            v33 = ~v29 & 0x3000000000000000;
            sub_1C20A8008(v21, v22);
            swift_retain_n();
            swift_retain();
            if (v33 || v30 != 255)
              goto LABEL_38;
          }
          swift_release();
          swift_release();
          v34 = v46;
        }
        __asm { BR              X8 }
      }
      v9 = 5;
      if (v42 > 5)
      {
        v7 = *(_QWORD *)(a1 + 104);
        if (v7)
        {
          v8 = 5;
          goto LABEL_21;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x1C216CEB0);
          }
          if (v8 >= v42)
            break;
          v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_21;
        }
      }
    }
    return 1;
  }
  return 0;
}

void _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 24))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

uint64_t sub_1C216CFCC()
{
  char v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  char v10;

  if (v1)
    v8 = 4;
  else
    v8 = 0;
  if ((v7 >> 60) & 3 | v8)
  {
    sub_1C20C60E8(v3, v5, v7, v1);
    sub_1C20C6184(v4, v2, v6, v0);
    sub_1C20C6184(v3, v5, v7, v1);
  }
  else
  {
    sub_1C20C6184(v4, v2, v6, v0);
    sub_1C20C6184(v3, v5, v7, v1);
    if ((v2 & 1) != 0)
      v9 = 0;
    else
      v9 = v4;
    if ((v5 & 1) != 0)
    {
      if (!v9)
      {
LABEL_15:
        v10 = 1;
        return v10 & 1;
      }
    }
    else if (v9 == v3)
    {
      goto LABEL_15;
    }
  }
  v10 = 0;
  return v10 & 1;
}

unint64_t sub_1C216D4B4()
{
  unint64_t result;

  result = qword_1EF760690;
  if (!qword_1EF760690)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Value, &type metadata for Google_Protobuf_Value);
    atomic_store(result, (unint64_t *)&qword_1EF760690);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_ValueV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  char v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  if (v4 != v7)
  {
    swift_retain();
    swift_retain();
    v8 = sub_1C216B80C(v4, v7);
    swift_release();
    swift_release();
    if (!v8)
      return 0;
  }
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v5, v6);
  sub_1C20FD650(v2, v3);
  v10 = v9;
  sub_1C20A8058(v5, v6);
  sub_1C20A8058(v2, v3);
  return v10 & 1;
}

uint64_t sub_1C216D5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C216D5DC, (uint64_t (*)(void))sub_1C216D620);
}

unint64_t sub_1C216D5DC()
{
  unint64_t result;

  result = qword_1EF760698;
  if (!qword_1EF760698)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_NullValue, &type metadata for Google_Protobuf_NullValue);
    atomic_store(result, (unint64_t *)&qword_1EF760698);
  }
  return result;
}

unint64_t sub_1C216D620()
{
  unint64_t result;

  result = qword_1EF7606A0;
  if (!qword_1EF7606A0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_NullValue, &type metadata for Google_Protobuf_NullValue);
    atomic_store(result, (unint64_t *)&qword_1EF7606A0);
  }
  return result;
}

unint64_t sub_1C216D668()
{
  unint64_t result;

  result = qword_1EF7606A8;
  if (!qword_1EF7606A8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_NullValue, &type metadata for Google_Protobuf_NullValue);
    atomic_store(result, (unint64_t *)&qword_1EF7606A8);
  }
  return result;
}

uint64_t sub_1C216D6AC()
{
  return sub_1C2156660(&qword_1EF7606B0, &qword_1EF7606B8, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1C216D6D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C216D6FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C216D6FC()
{
  unint64_t result;

  result = qword_1EF7606C0;
  if (!qword_1EF7606C0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Struct, &type metadata for Google_Protobuf_Struct);
    atomic_store(result, (unint64_t *)&qword_1EF7606C0);
  }
  return result;
}

uint64_t sub_1C216D740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213E784, (uint64_t (*)(void))sub_1C216D754);
}

unint64_t sub_1C216D754()
{
  unint64_t result;

  result = qword_1EF7606C8;
  if (!qword_1EF7606C8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Struct, &type metadata for Google_Protobuf_Struct);
    atomic_store(result, (unint64_t *)&qword_1EF7606C8);
  }
  return result;
}

unint64_t sub_1C216D79C()
{
  unint64_t result;

  result = qword_1EF7606D0;
  if (!qword_1EF7606D0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Struct, &type metadata for Google_Protobuf_Struct);
    atomic_store(result, (unint64_t *)&qword_1EF7606D0);
  }
  return result;
}

unint64_t sub_1C216D7E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C216D804();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C216D804()
{
  unint64_t result;

  result = qword_1EF7606D8;
  if (!qword_1EF7606D8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Value, &type metadata for Google_Protobuf_Value);
    atomic_store(result, (unint64_t *)&qword_1EF7606D8);
  }
  return result;
}

uint64_t sub_1C216D848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213E7C8, (uint64_t (*)(void))sub_1C216D4B4);
}

unint64_t sub_1C216D860()
{
  unint64_t result;

  result = qword_1EF7606E0;
  if (!qword_1EF7606E0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Value, &type metadata for Google_Protobuf_Value);
    atomic_store(result, (unint64_t *)&qword_1EF7606E0);
  }
  return result;
}

unint64_t sub_1C216D8A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C216D8C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C216D8C8()
{
  unint64_t result;

  result = qword_1EF7606E8;
  if (!qword_1EF7606E8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ListValue, &type metadata for Google_Protobuf_ListValue);
    atomic_store(result, (unint64_t *)&qword_1EF7606E8);
  }
  return result;
}

uint64_t sub_1C216D90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C213E740, (uint64_t (*)(void))sub_1C216D920);
}

unint64_t sub_1C216D920()
{
  unint64_t result;

  result = qword_1EF7606F0;
  if (!qword_1EF7606F0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ListValue, &type metadata for Google_Protobuf_ListValue);
    atomic_store(result, (unint64_t *)&qword_1EF7606F0);
  }
  return result;
}

unint64_t sub_1C216D968()
{
  unint64_t result;

  result = qword_1EF7606F8;
  if (!qword_1EF7606F8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ListValue, &type metadata for Google_Protobuf_ListValue);
    atomic_store(result, (unint64_t *)&qword_1EF7606F8);
  }
  return result;
}

uint64_t sub_1C216D9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  v6 = *(_BYTE *)(v2 + 40);
  *(_BYTE *)(a2 + 24) = v6;
  return sub_1C20C60C4(v3, v4, v5, v6);
}

uint64_t sub_1C216D9D4(uint64_t a1)
{
  char v1;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)a1;
  v4 = v1;
  return Google_Protobuf_Value.nullValue.setter(&v3);
}

uint64_t sub_1C216DA14(double *a1)
{
  return Google_Protobuf_Value.numberValue.setter(*a1);
}

uint64_t sub_1C216DA3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return Google_Protobuf_Value.stringValue.setter(v1, v2);
}

uint64_t sub_1C216DA7C(char *a1)
{
  return Google_Protobuf_Value.BOOLValue.setter(*a1);
}

uint64_t sub_1C216DAA4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C216A210(a1, a2, a3, a4, Google_Protobuf_Value.structValue.setter);
}

uint64_t sub_1C216DAC4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C216A210(a1, a2, a3, a4, Google_Protobuf_Value.listValue.setter);
}

ValueMetadata *type metadata accessor for Google_Protobuf_NullValue()
{
  return &type metadata for Google_Protobuf_NullValue;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Struct()
{
  return &type metadata for Google_Protobuf_Struct;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Value()
{
  return &type metadata for Google_Protobuf_Value;
}

uint64_t destroy for Google_Protobuf_Value.OneOf_Kind(uint64_t a1)
{
  return sub_1C20C6184(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C20C60E8(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1C20C60E8(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1C20C6184(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1C20C6184(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FB && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1019);
  v3 = ((*(_QWORD *)(a1 + 16) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 24))) ^ 0x3FF;
  if (v3 >= 0x3FA)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Value.OneOf_Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FA)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 1019;
    if (a3 >= 0x3FB)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x3FB)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (-a2 & 3) << 60;
      *(_BYTE *)(result + 24) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_1C216DCF8(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 24))
    v1 = 4;
  else
    v1 = 0;
  return (*(_QWORD *)(a1 + 16) >> 60) & 3 | v1;
}

uint64_t sub_1C216DD18(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1C216DD28(uint64_t result, char a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(_BYTE *)(result + 24) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Value.OneOf_Kind()
{
  return &type metadata for Google_Protobuf_Value.OneOf_Kind;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ListValue()
{
  return &type metadata for Google_Protobuf_ListValue;
}

uint64_t sub_1C216DD68()
{
  uint64_t v0;

  sub_1C20A8058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_1C20A8058(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  sub_1C20A8058(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C216DDF0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C216DE24(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C216DE70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_1C20A8058(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C216DEBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C216DF08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C216DF84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C216E000()
{
  uint64_t v0;

  sub_1C20A8058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C216E02C(uint64_t a1)
{
  sub_1C20A8008(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C216E064()
{
  _QWORD *v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  sub_1C20A8058(v0[3], v0[4]);
  swift_bridgeObjectRelease();
  v1 = v0[14];
  if (v1 >> 60 != 15)
    sub_1C20A8058(v0[13], v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1C216E0B8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[11];
  v5 = a1[12];
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  swift_bridgeObjectRetain();
  sub_1C20FE40C(v4, v5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C216E130()
{
  return objectdestroy_42Tm();
}

_QWORD *sub_1C216E138(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[11];
  v5 = a1[12];
  swift_bridgeObjectRelease();
  sub_1C20A8058(v2, v3);
  swift_bridgeObjectRelease();
  sub_1C20AE1C8(v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C216E1B0()
{
  return objectdestroy_42Tm();
}

uint64_t sub_1C216E1B8()
{
  return objectdestroy_42Tm();
}

uint64_t sub_1C216E1C0()
{
  return objectdestroy_42Tm();
}

uint64_t sub_1C216E1C8()
{
  return objectdestroy_42Tm();
}

uint64_t sub_1C216E1D0()
{
  return objectdestroy_42Tm();
}

uint64_t sub_1C216E1D8()
{
  return objectdestroy_42Tm();
}

uint64_t sub_1C216E1E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C216E22C()
{
  uint64_t v0;

  sub_1C20A8058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C216E264()
{
  return objectdestroy_42Tm();
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_70Tm()
{
  uint64_t v0;

  sub_1C20A8058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C216E2D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  return swift_deallocObject();
}

uint64_t sub_1C216E31C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  return a1;
}

uint64_t sub_1C216E388(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(v2, v3);
  return a1;
}

uint64_t objectdestroy_87Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1C216E42C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  return a1;
}

uint64_t sub_1C216E478(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(v2, v3);
  return a1;
}

uint64_t sub_1C216E4C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  return swift_deallocObject();
}

uint64_t sub_1C216E510(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  return a1;
}

uint64_t sub_1C216E590(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(v2, v3);
  return a1;
}

unint64_t sub_1C216E610()
{
  unint64_t result;

  result = qword_1EF760968;
  if (!qword_1EF760968)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_NullValue, &type metadata for Google_Protobuf_NullValue);
    atomic_store(result, (unint64_t *)&qword_1EF760968);
  }
  return result;
}

double Google_Protobuf_DoubleValue.init(_:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  double result;

  *(double *)a1 = a2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_DoubleValue.init(floatLiteral:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  double result;

  *(double *)a1 = a2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216E688()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v1, v2);
  sub_1C211E124(*v0);
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v3 = sub_1C2175444();
  v5 = v4;
  result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C216E774@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = *a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216E78C()
{
  return sub_1C216E688();
}

uint64_t sub_1C216E7A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_1C20B260C();
  v3 = 0;
  if ((result & 1) != 0 || (result = sub_1C20B1DA8(), !v1))
    *v0 = v3;
  return result;
}

double Google_Protobuf_FloatValue.init(_:)@<D0>(uint64_t a1@<X8>, float a2@<S0>)
{
  double result;

  *(float *)a1 = a2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_FloatValue.init(floatLiteral:)@<D0>(uint64_t a1@<X8>, float a2@<S0>)
{
  double result;

  *(float *)a1 = a2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216E818()
{
  float *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v1, v2);
  sub_1C211E0B4(*v0);
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v3 = sub_1C2175444();
  v5 = v4;
  result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C216E904@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_DWORD *)a2 = *a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216E91C()
{
  return sub_1C216E818();
}

uint64_t sub_1C216E930()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t result;
  int v3;

  result = sub_1C20B260C();
  v3 = 0;
  if ((result & 1) != 0 || (result = sub_1C20B15EC(), !v1))
    *v0 = v3;
  return result;
}

double Google_Protobuf_Int64Value.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_Int64Value.init(integerLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216E9A8()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v1, v2);
  sub_1C211E3C4(*v0);
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v3 = sub_1C2175444();
  v5 = v4;
  result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C216EA94@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = *a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216EAAC()
{
  return sub_1C216E9A8();
}

uint64_t sub_1C216EAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C216ECC4(a1, a2, a3, (uint64_t (*)(void))sub_1C20B1098);
}

uint64_t sub_1C216EADC()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char *v14;

  v1 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = *v0;
  v4 = sub_1C214E1A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v6 = *((_QWORD *)v4 + 2);
  v5 = *((_QWORD *)v4 + 3);
  if (v6 >= v5 >> 1)
    v4 = sub_1C214E1A4((char *)(v5 > 1), v6 + 1, 1, v4);
  *((_QWORD *)v4 + 2) = v6 + 1;
  v4[v6 + 32] = 34;
  v14 = v4;
  sub_1C211F414(v3);
  v7 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_1C214E1A4(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
  v9 = *((_QWORD *)v7 + 2);
  v8 = *((_QWORD *)v7 + 3);
  if (v9 >= v8 >> 1)
    v7 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v7);
  *((_QWORD *)v7 + 2) = v9 + 1;
  v7[v9 + 32] = 34;
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v10 = sub_1C2175444();
  v12 = v11;
  result = swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216EC94()
{
  return sub_1C216EADC();
}

uint64_t sub_1C216ECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C216ECC4(a1, a2, a3, (uint64_t (*)(void))sub_1C20B0F84);
}

uint64_t sub_1C216ECC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = a4();
    if (v5)
      return result;
  }
  *v4 = result;
  return result;
}

double Google_Protobuf_Int32Value.init(_:)@<D0>(int a1@<W0>, uint64_t a2@<X8>)
{
  double result;

  *(_DWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double sub_1C216ED30@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_DWORD *)a2 = *a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216ED48()
{
  return sub_1C21757B0();
}

_QWORD *sub_1C216ED90()
{
  _DWORD *v0;
  uint64_t v1;
  _QWORD *result;
  _OWORD *v3;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = 0;
LABEL_3:
    *v0 = (_DWORD)result;
    return result;
  }
  result = sub_1C20B1098();
  if (!v1)
  {
    if (result == (_QWORD *)(int)result)
      goto LABEL_3;
    sub_1C20AFA84();
    swift_allocError();
    *v3 = xmmword_1C2175D90;
    return (_QWORD *)swift_willThrow();
  }
  return result;
}

uint64_t sub_1C216EE20()
{
  return sub_1C21757B0();
}

unint64_t sub_1C216EE68()
{
  _DWORD *v0;
  uint64_t v1;
  unint64_t result;
  _OWORD *v3;

  if ((sub_1C20B260C() & 1) != 0)
  {
    result = 0;
LABEL_3:
    *v0 = result;
    return result;
  }
  result = (unint64_t)sub_1C20B0F84();
  if (!v1)
  {
    if (!HIDWORD(result))
      goto LABEL_3;
    sub_1C20AFA84();
    swift_allocError();
    *v3 = xmmword_1C2175D90;
    return swift_willThrow();
  }
  return result;
}

double Google_Protobuf_BoolValue.init(_:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  double result;

  *(_BYTE *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_BoolValue.init(BOOLeanLiteral:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  double result;

  *(_BYTE *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double sub_1C216EF20@<D0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_BYTE *)a2 = *a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216EF38()
{
  _BYTE *v0;

  if (*v0)
    return 1702195828;
  else
    return 0x65736C6166;
}

uint64_t sub_1C216EF68(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t result;

  v3 = v1;
  if ((sub_1C20B260C() & 1) != 0)
  {
    result = 0;
LABEL_7:
    *v3 = result & 1;
    return result;
  }
  if ((*(_BYTE *)(a1 + 80) & 1) != 0)
    result = sub_1C20B2774();
  else
    result = sub_1C20B267C();
  if (!v2)
    goto LABEL_7;
  return result;
}

double Google_Protobuf_StringValue.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_StringValue.init(stringLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C216F000(uint64_t a1)
{
  return sub_1C216F1D4(a1, (void (*)(_QWORD, _QWORD))sub_1C211E7B0);
}

uint64_t sub_1C216F01C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;

  v2 = v0;
  if ((sub_1C20B260C() & 1) != 0)
  {
    v3 = 0;
    v4 = 0xE000000000000000;
  }
  else
  {
    result = (uint64_t)sub_1C20B0FD4();
    if (v1)
      return result;
    v3 = result;
    v4 = v6;
  }
  result = swift_bridgeObjectRelease();
  *v2 = v3;
  v2[1] = v4;
  return result;
}

double sub_1C216F084@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = a1[1];
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v2;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_BytesValue.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
  return result;
}

_UNKNOWN **sub_1C216F0B0()
{
  return &protocol witness table for ProtobufDouble;
}

_UNKNOWN **sub_1C216F0BC()
{
  return &protocol witness table for ProtobufFloat;
}

uint64_t sub_1C216F0C8()
{
  return MEMORY[0x1E0DEB1E0];
}

_UNKNOWN **sub_1C216F0D4()
{
  return &protocol witness table for ProtobufInt64;
}

_UNKNOWN **sub_1C216F0E0()
{
  return &protocol witness table for ProtobufUInt64;
}

uint64_t sub_1C216F0EC()
{
  return MEMORY[0x1E0DEE1E8];
}

_UNKNOWN **sub_1C216F0F8()
{
  return &protocol witness table for ProtobufInt32;
}

uint64_t sub_1C216F104()
{
  return MEMORY[0x1E0DEDC30];
}

_UNKNOWN **sub_1C216F110()
{
  return &protocol witness table for ProtobufUInt32;
}

uint64_t sub_1C216F11C()
{
  return MEMORY[0x1E0DEE160];
}

_UNKNOWN **sub_1C216F128()
{
  return &protocol witness table for ProtobufBool;
}

_UNKNOWN **sub_1C216F134()
{
  return &protocol witness table for ProtobufString;
}

unint64_t sub_1C216F144()
{
  unint64_t result;

  result = qword_1EF760B70;
  if (!qword_1EF760B70)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_StringValue, &type metadata for Google_Protobuf_StringValue);
    atomic_store(result, (unint64_t *)&qword_1EF760B70);
  }
  return result;
}

unint64_t sub_1C216F18C()
{
  unint64_t result;

  result = qword_1EF760B78;
  if (!qword_1EF760B78)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_StringValue, &type metadata for Google_Protobuf_StringValue);
    atomic_store(result, (unint64_t *)&qword_1EF760B78);
  }
  return result;
}

uint64_t sub_1C216F1D4(uint64_t a1, void (*a2)(_QWORD, _QWORD))
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v4, v5);
  a2(*v2, v2[1]);
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v6 = sub_1C2175444();
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C216F2C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;

  v3 = v1;
  if ((sub_1C20B260C() & 1) != 0)
  {
    v5 = 0;
    v6 = 0xC000000000000000;
LABEL_3:
    result = sub_1C20A8058(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v6;
    return result;
  }
  sub_1C20B061C();
  v8 = a1[1];
  if (a1[2] == v8)
  {
    sub_1C20AFA84();
    swift_allocError();
    *v9 = xmmword_1C2175D80;
    return swift_willThrow();
  }
  else
  {
    result = sub_1C20AF834(*a1, v8, a1 + 2, a1[1]);
    if (!v2)
    {
      v5 = result;
      v6 = v10;
      goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_1C216F388(uint64_t a1)
{
  return sub_1C216F1D4(a1, sub_1C211EFB8);
}

uint64_t sub_1C216F3A4(uint64_t *a1)
{
  return sub_1C216F2C4(a1);
}

uint64_t sub_1C216F3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a5, a3, &off_1E7BD9BF0);
}

uint64_t sub_1C216F3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7, a3, a4);
}

uint64_t sub_1C216F428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return nullsub_1(a8, a3, a4);
}

uint64_t sub_1C216F454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a5, a3, &off_1E7BDD488);
}

uint64_t sub_1C216F478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7, a3, a4);
}

uint64_t sub_1C216F4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return nullsub_1(a8, a3, a4);
}

uint64_t sub_1C216F4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a5, a3, &off_1E7BDE1A0);
}

uint64_t sub_1C216F4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7, a3, a4);
}

uint64_t sub_1C216F520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return nullsub_1(a8, a3, a4);
}

BOOL static BinaryDelimited.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BinaryDelimited.Error.hash(into:)()
{
  return sub_1C2175834();
}

uint64_t BinaryDelimited.Error.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t static BinaryDelimited.serialize(message:to:partial:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  result = Message.serializedData(partial:)(a3, v5, v6);
  if (!v3)
    __asm { BR              X9 }
  return result;
}

uint64_t static BinaryDelimited.parse<A>(messageType:from:extensions:partial:options:)@<X0>(void *a1@<X1>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  result = static BinaryDelimited.merge<A>(into:from:extensions:partial:options:)(a4, a1);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a4, a2);
  return result;
}

uint64_t static BinaryDelimited.merge<A>(into:from:extensions:partial:options:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  result = sub_1C216FCD8(a2);
  if (!v2)
  {
    v5 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else if (result)
    {
      v14 = sub_1C20A8B0C(result);
      v15 = v6;
      v16 = 0;
      v7 = a2;
      sub_1C21702B0((uint64_t)&v14);
      if (v16 == v5)
      {
        v8 = v14;
        v9 = v15;
        sub_1C20A8008(v14, v15);
        Message.merge(serializedData:extensions:partial:options:)(v8, v9);
        sub_1C20A8058(v8, v9);
        v10 = v8;
        v11 = v9;
      }
      else
      {
        if (v16 == -1)
        {
          if (!objc_msgSend(v7, sel_streamError))
          {
            sub_1C21705EC();
            swift_allocError();
            *v13 = 0;
          }
        }
        else
        {
          sub_1C21705EC();
          swift_allocError();
          *v12 = 1;
        }
        swift_willThrow();
        v10 = v14;
        v11 = v15;
      }
      return sub_1C20A8058(v10, v11);
    }
  }
  return result;
}

uint64_t sub_1C216FCD8(void *a1)
{
  uint64_t v1;
  char v3;
  _BYTE *v4;
  id v5;
  id v6;
  int v7;
  id v8;
  int v9;
  id v10;
  int v11;
  id v12;
  int v13;
  id v14;
  int v15;
  id v16;
  int v17;
  id v18;
  int v19;
  id v20;
  int v21;
  id v22;
  uint64_t v23;
  char *v24;
  _BYTE *v26;

  v3 = 1;
  v4 = (_BYTE *)swift_slowAlloc();
  v5 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
  if (v5 == (id)-1)
    goto LABEL_33;
  if (v5 != (id)1)
    goto LABEL_35;
  v1 = *v4 & 0x7F;
  if ((*v4 & 0x80) != 0)
  {
    v3 = 1;
    v6 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
    if (v6 != (id)-1)
    {
      if (v6 != (id)1)
        goto LABEL_35;
      v7 = (char)*v4;
      v1 |= (unint64_t)(v7 & 0x7F) << 7;
      if ((v7 & 0x80000000) == 0)
        goto LABEL_4;
      v3 = 1;
      v8 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
      if (v8 != (id)-1)
      {
        if (v8 != (id)1)
          goto LABEL_35;
        v9 = (char)*v4;
        v1 |= (unint64_t)(v9 & 0x7F) << 14;
        if ((v9 & 0x80000000) == 0)
          goto LABEL_4;
        v3 = 1;
        v10 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
        if (v10 != (id)-1)
        {
          if (v10 != (id)1)
            goto LABEL_35;
          v11 = (char)*v4;
          v1 |= (unint64_t)(v11 & 0x7F) << 21;
          if ((v11 & 0x80000000) == 0)
            goto LABEL_4;
          v3 = 1;
          v12 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
          if (v12 != (id)-1)
          {
            if (v12 != (id)1)
              goto LABEL_35;
            v13 = (char)*v4;
            v1 |= (unint64_t)(v13 & 0x7F) << 28;
            if ((v13 & 0x80000000) == 0)
              goto LABEL_4;
            v3 = 1;
            v14 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
            if (v14 != (id)-1)
            {
              if (v14 != (id)1)
                goto LABEL_35;
              v15 = (char)*v4;
              v1 |= (unint64_t)(v15 & 0x7F) << 35;
              if ((v15 & 0x80000000) == 0)
                goto LABEL_4;
              v3 = 1;
              v16 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
              if (v16 != (id)-1)
              {
                if (v16 != (id)1)
                  goto LABEL_35;
                v17 = (char)*v4;
                v1 |= (unint64_t)(v17 & 0x7F) << 42;
                if ((v17 & 0x80000000) == 0)
                  goto LABEL_4;
                v3 = 1;
                v18 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
                if (v18 != (id)-1)
                {
                  if (v18 != (id)1)
                    goto LABEL_35;
                  v19 = (char)*v4;
                  v1 |= (unint64_t)(v19 & 0x7F) << 49;
                  if ((v19 & 0x80000000) == 0)
                    goto LABEL_4;
                  v3 = 1;
                  v20 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
                  if (v20 != (id)-1)
                  {
                    if (v20 != (id)1)
                      goto LABEL_35;
                    v21 = (char)*v4;
                    v1 |= (unint64_t)(v21 & 0x7F) << 56;
                    if ((v21 & 0x80000000) == 0)
                      goto LABEL_4;
                    v3 = 1;
                    v22 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
                    if (v22 != (id)-1)
                    {
                      if (v22 == (id)1)
                      {
                        v23 = *v4;
                        if ((v23 & 0x80) == 0)
                        {
                          v1 |= v23 << 63;
                          goto LABEL_4;
                        }
                        sub_1C2108014();
                        swift_allocError();
                        *v26 = 3;
LABEL_36:
                        swift_willThrow();
                        swift_beginAccess();
                        MEMORY[0x1C3BB8018](v4, -1, -1);
                        return v1;
                      }
LABEL_35:
                      sub_1C21705EC();
                      swift_allocError();
                      *v24 = v3;
                      goto LABEL_36;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_33:
    if (objc_msgSend(a1, sel_streamError))
      goto LABEL_36;
    v3 = 0;
    goto LABEL_35;
  }
LABEL_4:
  MEMORY[0x1C3BB8018](v4, -1, -1);
  return v1;
}

void sub_1C2170014(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C2170078@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  unsigned int v10;
  char v11;
  char v12;
  char v13;

  v9 = v1;
  LOWORD(v10) = a1;
  BYTE2(v10) = BYTE2(a1);
  v5 = HIDWORD(a1);
  HIBYTE(v10) = BYTE3(a1);
  v6 = a1 >> 40;
  v11 = BYTE4(a1);
  v7 = HIWORD(a1);
  v12 = BYTE5(a1);
  v13 = BYTE6(a1);
  if ((a1 & 0xFF000000000000) != 0)
  {
    sub_1C20C5144(v4, v3);
    LOBYTE(v5) = v11;
    LOBYTE(v6) = v12;
    LOBYTE(v7) = v13;
  }
  result = sub_1C20A8058(v4, v3);
  *v2 = v9;
  v2[1] = v10 | ((unint64_t)v5 << 32) | ((unint64_t)v6 << 40) | ((unint64_t)v7 << 48);
  return result;
}

void sub_1C21702B0(uint64_t a1)
{
  __asm { BR              X12 }
}

void sub_1C2170318(unint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  char v31;
  char v32;

  v28 = v19;
  LOWORD(v29) = a1;
  BYTE2(v29) = BYTE2(a1);
  v24 = HIDWORD(a1);
  HIBYTE(v29) = BYTE3(a1);
  v25 = a1 >> 40;
  v30 = BYTE4(a1);
  v26 = HIWORD(a1);
  v31 = BYTE5(a1);
  v32 = BYTE6(a1);
  if ((a1 & 0xFF000000000000) != 0)
  {
    *v22 = objc_msgSend(v21, sel_read_maxLength_, &v28, v23);

    LOBYTE(v24) = v30;
    LOBYTE(v25) = v31;
    LOBYTE(v26) = v32;
  }
  else
  {

  }
  v27 = v29 | ((unint64_t)v24 << 32) | ((unint64_t)v25 << 40) | ((unint64_t)v26 << 48);
  *v20 = v28;
  v20[1] = v27;
}

void sub_1C217052C(int *a1, _QWORD *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C217530C();
  v8 = *a1;
  v9 = a1[1];
  if ((int)v9 < (int)v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = sub_1C21752C4();
  if (!v10)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v11 = v10;
  v12 = sub_1C21752E8();
  v13 = v8 - v12;
  if (__OFSUB__(v8, v12))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = v9 - v8;
  v15 = sub_1C21752DC();
  if (v15 >= v14)
    v16 = v14;
  else
    v16 = v15;
  if (v16 >= 1)
    *a2 = objc_msgSend(a3, sel_read_maxLength_, v11 + v13, a4);

}

unint64_t sub_1C21705EC()
{
  unint64_t result;

  result = qword_1EF760BC0;
  if (!qword_1EF760BC0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for BinaryDelimited.Error, &type metadata for BinaryDelimited.Error);
    atomic_store(result, (unint64_t *)&qword_1EF760BC0);
  }
  return result;
}

unint64_t sub_1C2170634()
{
  unint64_t result;

  result = qword_1EF760BC8;
  if (!qword_1EF760BC8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for BinaryDelimited.Error, &type metadata for BinaryDelimited.Error);
    atomic_store(result, (unint64_t *)&qword_1EF760BC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDelimited()
{
  return &type metadata for BinaryDelimited;
}

uint64_t storeEnumTagSinglePayload for BinaryDelimited.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C21706D4 + 4 * byte_1C217CBB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2170708 + 4 * asc_1C217CBB0[v4]))();
}

uint64_t sub_1C2170708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2170710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2170718);
  return result;
}

uint64_t sub_1C2170724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C217072CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2170730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2170738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BinaryDelimited.Error()
{
  return &type metadata for BinaryDelimited.Error;
}

SiriOntologyProtobuf::JSONDecodingOptions __swiftcall JSONDecodingOptions.init()()
{
  uint64_t v0;
  SiriOntologyProtobuf::JSONDecodingOptions result;

  *(_QWORD *)v0 = 100;
  *(_BYTE *)(v0 + 8) = 0;
  return result;
}

uint64_t JSONDecodingOptions.messageDepthLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t JSONDecodingOptions.messageDepthLimit.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*JSONDecodingOptions.messageDepthLimit.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t JSONDecodingOptions.ignoreUnknownFields.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t JSONDecodingOptions.ignoreUnknownFields.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*JSONDecodingOptions.ignoreUnknownFields.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for JSONDecodingOptions()
{
  return &type metadata for JSONDecodingOptions;
}

uint64_t _NameMap.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;

  type metadata accessor for InternPool();
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9D8];
  v9 = v3;
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  v5 = sub_1C2171510(v4);
  v10 = sub_1C217172C(v4);
  v6 = sub_1C217172C(v4);
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X9 }
  result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v5;
  a2[2] = v10;
  a2[3] = v6;
  return result;
}

unint64_t sub_1C21713E4(uint64_t a1)
{
  unint64_t result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BD0);
  result = sub_1C2175798();
  v3 = (_QWORD *)result;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = 0;
  v6 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v7 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    v8 = *((_QWORD *)v6 - 3);
    v15 = *((_OWORD *)v6 - 1);
    v9 = *v6;
    result = sub_1C20A9B94(v8);
    if ((v10 & 1) != 0)
      goto LABEL_12;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v8;
    v11 = v3[7] + 24 * result;
    *(_OWORD *)v11 = v15;
    *(_BYTE *)(v11 + 16) = v9;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_13;
    v6 += 32;
    v3[2] = v14;
    ++v5;
    if (v7 == v4)
      goto LABEL_10;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1C2171510(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  unsigned int v34;
  unsigned __int8 v35;

  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_11:
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDF0);
  v2 = sub_1C2175798();
  v3 = (_QWORD *)v2;
  v29 = *(_QWORD *)(a1 + 16);
  if (!v29)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v28 = v2 + 64;
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(unsigned __int16 *)(a1 + 72);
  v10 = *(_OWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  v13 = *(unsigned __int8 *)(a1 + 112);
  v14 = (unsigned __int8 *)(a1 + 201);
  v15 = *(_BYTE *)(a1 + 113);
  v16 = 1;
  v35 = v15;
  while (1)
  {
    if (v35 == 255)
    {
      sub_1C20B7C58(v4, v6, v7, v8, v9);
      sub_1C20A9EA4(v12, v11, v13, v15 & 1);
      goto LABEL_13;
    }
    v32 = v10;
    v30 = v15;
    v31 = v16;
    v17 = v9;
    v34 = v13;
    v18 = v8;
    v33 = v11;
    v19 = v12;
    v20 = v4;
    result = sub_1C20A9B94(v5);
    if ((v22 & 1) != 0)
      break;
    *(_QWORD *)(v28 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v5;
    v23 = v3[7] + 80 * result;
    result = v20;
    *(_QWORD *)v23 = v20;
    *(_QWORD *)(v23 + 8) = v6;
    *(_QWORD *)(v23 + 16) = v7;
    *(_QWORD *)(v23 + 24) = v18;
    *(_WORD *)(v23 + 32) = v17;
    *(_OWORD *)(v23 + 40) = v32;
    *(_QWORD *)(v23 + 56) = v19;
    *(_QWORD *)(v23 + 64) = v33;
    *(_BYTE *)(v23 + 72) = v34;
    *(_BYTE *)(v23 + 73) = v35 & 1;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_15;
    v3[2] = v26;
    sub_1C20B7C58(v20, v6, v7, v18, v17);
    sub_1C20A9EA4(v19, v33, v34, v30 & 1);
    if (v29 == v31)
      goto LABEL_13;
    v5 = *(_QWORD *)(v14 - 81);
    v4 = *(_QWORD *)(v14 - 73);
    v6 = *(_QWORD *)(v14 - 65);
    v7 = *(_QWORD *)(v14 - 57);
    v8 = *(_QWORD *)(v14 - 49);
    v9 = *(unsigned __int16 *)(v14 - 41);
    v10 = *(_OWORD *)(v14 - 33);
    v12 = *(_QWORD *)(v14 - 17);
    v11 = *(_QWORD *)(v14 - 9);
    v13 = *(v14 - 1);
    v27 = *v14;
    v14 += 88;
    v15 = v27;
    v35 = v27;
    v16 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

unint64_t sub_1C217172C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;

  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_11:
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDE8);
  v2 = sub_1C2175798();
  v3 = (_QWORD *)v2;
  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = *(unsigned __int8 **)(a1 + 32);
  v4 = *(unsigned __int8 **)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int8 *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 65);
  v21 = v2 + 64;
  v10 = *(_QWORD *)(a1 + 72);
  v24 = v9;
  v11 = (_QWORD *)(a1 + 120);
  v12 = 1;
  while (1)
  {
    if (v24 == 255)
    {
      sub_1C20A9EA4(v6, v7, v8, v9 & 1);
      goto LABEL_13;
    }
    v23 = v12;
    v13 = v4;
    result = sub_1C20A9BC4(v5, v4);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = v3[6] + 40 * result;
    *(_QWORD *)v16 = v5;
    *(_QWORD *)(v16 + 8) = v13;
    *(_QWORD *)(v16 + 16) = v6;
    *(_QWORD *)(v16 + 24) = v7;
    *(_BYTE *)(v16 + 32) = v8;
    *(_BYTE *)(v16 + 33) = v24 & 1;
    *(_QWORD *)(v3[7] + 8 * result) = v10;
    v17 = v3[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_15;
    v3[2] = v19;
    sub_1C20A9EA4(v6, v7, v8, v9 & 1);
    if (v22 == v23)
      goto LABEL_13;
    v5 = (unsigned __int8 *)*(v11 - 5);
    v4 = (unsigned __int8 *)*(v11 - 4);
    v6 = *(v11 - 3);
    v7 = *(v11 - 2);
    v8 = *((unsigned __int8 *)v11 - 8);
    v9 = *((_BYTE *)v11 - 7);
    v20 = *v11;
    v11 += 6;
    v10 = v20;
    v24 = v9;
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

unint64_t sub_1C21718C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BE8);
  v2 = (_QWORD *)sub_1C2175798();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v7 = *(v4 - 2);
    v8 = *(v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v7, v8);
    swift_retain();
    result = sub_1C20A9B30(v5, v6);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v5;
    v12[1] = v6;
    v13 = (uint64_t *)(v2[7] + 24 * result);
    *v13 = v7;
    v13[1] = v8;
    v13[2] = v9;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2171A0C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BE0);
  v2 = (_QWORD *)sub_1C2175798();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1C20A9B30(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t _NameMap.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t result;

  type metadata accessor for InternPool();
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v4 = sub_1C2171510(v3);
  v5 = sub_1C217172C(v3);
  result = sub_1C217172C(v3);
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = result;
  return result;
}

uint64_t sub_1C2171BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  swift_bridgeObjectRetain();
  v0 = sub_1C2175504();
  v2 = v1;
  if (v1)
  {
    v3 = v0;
    v4 = 0;
    do
    {
      if (v3 == 95 && v2 == 0xE100000000000000 || (sub_1C21757C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v4 = 1;
      }
      else
      {
        if ((v4 & 1) != 0)
        {
          sub_1C217548C();
          swift_bridgeObjectRelease();
        }
        sub_1C21754F8();
        swift_bridgeObjectRelease();
        v4 = 0;
      }
      v3 = sub_1C2175504();
      v2 = v5;
    }
    while (v5);
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C2171CD0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  char *v13;

  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0)
  {
    sub_1C2175510();
    v6 = swift_slowAlloc();
    sub_1C2175510();
  }
  else
  {
    v6 = swift_slowAlloc();
  }
  swift_bridgeObjectRetain();
  result = sub_1C21756E4();
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1C2175510();
    }
    else if ((a2 & 0x2000000000000000) == 0)
    {
      v5 = a1 & 0xFFFFFFFFFFFFLL;
    }
    v9 = *(char **)(v2 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 16) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E28C(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *(_QWORD *)(v2 + 16) = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
    {
      v9 = sub_1C214E28C((char *)(v11 > 1), v12 + 1, 1, v9);
      *(_QWORD *)(v2 + 16) = v9;
    }
    *((_QWORD *)v9 + 2) = v12 + 1;
    v13 = &v9[16 * v12];
    *((_QWORD *)v13 + 4) = v6;
    *((_QWORD *)v13 + 5) = v5;
    return v6;
  }
  return result;
}

uint64_t sub_1C2171E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 32;
    do
    {
      v4 = *(_QWORD *)(v1 + v3);
      if (v4)
        MEMORY[0x1C3BB8018](v4, -1, -1);
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2171E9C(unsigned __int8 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;

  if (a3)
    v4 = &a3[a4];
  else
    v4 = 0;
  if (a1)
    v5 = &a1[a2];
  else
    v5 = 0;
  do
  {
    if (!a3 || a3 == v4)
    {
      v7 = 0;
      v6 = 1;
      if (!a1)
        goto LABEL_15;
    }
    else
    {
      v6 = 0;
      v8 = *a3++;
      v7 = v8;
      if (!a1)
        goto LABEL_15;
    }
    if (a1 != v5)
    {
      v9 = 0;
      v11 = *a1++;
      v10 = v11;
      if ((v6 & 1) != 0)
        return v9;
      goto LABEL_16;
    }
LABEL_15:
    v10 = 0;
    v9 = 1;
    if ((v6 & 1) != 0)
      return v9;
LABEL_16:
    if (v7 != v10)
      LODWORD(v9) = 1;
  }
  while ((_DWORD)v9 != 1);
  return 0;
}

uint64_t sub_1C2171F1C()
{
  uint64_t *v0;

  return sub_1C2174FFC(*v0, v0[1]);
}

uint64_t sub_1C2171F24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t i;
  uint64_t result;

  v1 = *v0;
  if (*v0)
  {
    for (i = v0[1]; i; --i)
    {
      ++v1;
      result = sub_1C2175840();
    }
  }
  return result;
}

uint64_t sub_1C2171F6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = *v0;
  v2 = v0[1];
  sub_1C2175828();
  if (v1)
    v3 = v2 == 0;
  else
    v3 = 1;
  if (!v3)
  {
    do
    {
      ++v1;
      sub_1C2175840();
      --v2;
    }
    while (v2);
  }
  return sub_1C2175870();
}

uint64_t sub_1C2171FC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 33) & 1) != 0)
    return sub_1C21756F0();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2172020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3 == *(_QWORD *)(a2 + 8))
    return sub_1C2171E9C(*(unsigned __int8 **)a2, v3, *(unsigned __int8 **)a1, v3);
  else
    return 0;
}

void sub_1C2172054(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  __int128 v26;
  _QWORD *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDE8);
  v27 = (_QWORD *)sub_1C217578C();
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = 1 << *(_BYTE *)(v5 + 32);
    v24 = v2;
    v25 = (_QWORD *)(v5 + 64);
    v7 = -1;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    v8 = v7 & *(_QWORD *)(v5 + 64);
    v9 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    v10 = 0;
    while (1)
    {
      if (v8)
      {
        v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v13 >= v9)
          goto LABEL_22;
        v14 = v25[v13];
        ++v10;
        if (!v14)
        {
          v10 = v13 + 1;
          if (v13 + 1 >= v9)
            goto LABEL_22;
          v14 = v25[v10];
          if (!v14)
          {
            v15 = v13 + 2;
            if (v15 >= v9)
            {
LABEL_22:
              swift_release();
              v3 = v24;
              if ((a2 & 1) != 0)
              {
                v23 = 1 << *(_BYTE *)(v5 + 32);
                if (v23 > 63)
                  bzero(v25, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v25 = -1 << v23;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v14 = v25[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_29;
                if (v10 >= v9)
                  goto LABEL_22;
                v14 = v25[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
LABEL_19:
        v8 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      v16 = *(_QWORD *)(v5 + 48) + 40 * v12;
      v17 = *(_OWORD *)v16;
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      v20 = *(_BYTE *)(v16 + 32);
      v21 = *(_BYTE *)(v16 + 33);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v12);
      if ((a2 & 1) == 0)
      {
        v26 = *(_OWORD *)v16;
        sub_1C20A9EA4(*(_QWORD *)(v16 + 16), *(_QWORD *)(v16 + 24), *(unsigned __int8 *)(v16 + 32), *(_BYTE *)(v16 + 33));
        v17 = v26;
      }
      v28 = v17;
      v29 = v19;
      v30 = v18;
      v31 = v20;
      v32 = v21;
      sub_1C21739F4((uint64_t *)&v28, v22, v27);
    }
  }
  swift_release();
  *v3 = v27;
}

uint64_t sub_1C2172284(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  int64_t v44;
  __int128 v45;
  char v46;
  uint64_t v47;

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDF0);
  v42 = a2;
  result = sub_1C217578C();
  v43 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = 0;
    v40 = (_QWORD *)(v4 + 64);
    v41 = v4;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 64);
    v39 = (unint64_t)(v7 + 63) >> 6;
    v10 = result + 64;
    while (1)
    {
      if (v9)
      {
        v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v44 = v6;
        v17 = v16 | (v6 << 6);
      }
      else
      {
        v18 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = (uint64_t)v40;
        if (v18 >= v39)
          goto LABEL_33;
        v19 = v40[v18];
        v20 = v6 + 1;
        if (!v19)
        {
          v20 = v18 + 1;
          if (v18 + 1 >= v39)
            goto LABEL_33;
          v19 = v40[v20];
          if (!v19)
          {
            v21 = v18 + 2;
            if (v21 >= v39)
            {
LABEL_33:
              if ((v42 & 1) == 0)
                break;
              v35 = 1 << *(_BYTE *)(v4 + 32);
              if (v35 >= 64)
                bzero(v40, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v40 = -1 << v35;
              v37 = v38;
              *(_QWORD *)(v4 + 16) = 0;
              result = swift_release();
              v36 = v43;
              goto LABEL_39;
            }
            v19 = v40[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v39)
                  goto LABEL_33;
                v19 = v40[v20];
                ++v21;
                if (v19)
                  goto LABEL_30;
              }
            }
            v20 = v21;
          }
        }
LABEL_30:
        v9 = (v19 - 1) & v19;
        v44 = v20;
        v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v27 = *(_QWORD *)(v4 + 56) + 80 * v17;
      v28 = *(_QWORD *)v27;
      v29 = *(_QWORD *)(v27 + 8);
      v30 = *(_QWORD *)(v27 + 16);
      v31 = *(_QWORD *)(v27 + 24);
      v32 = *(unsigned __int16 *)(v27 + 32);
      v45 = *(_OWORD *)(v27 + 40);
      v33 = *(_QWORD *)(v27 + 64);
      v47 = *(_QWORD *)(v27 + 56);
      v34 = *(unsigned __int8 *)(v27 + 72);
      v46 = *(_BYTE *)(v27 + 73);
      if ((v42 & 1) == 0)
      {
        sub_1C20B7C58(v28, v29, v30, v31, v32);
        sub_1C20A9EA4(v47, v33, v34, v46);
      }
      result = sub_1C217581C();
      v11 = -1 << *(_BYTE *)(v43 + 32);
      v12 = result & ~v11;
      v13 = v12 >> 6;
      if (((-1 << v12) & ~*(_QWORD *)(v10 + 8 * (v12 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v10 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v11) >> 6;
        do
        {
          if (++v13 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v24 = v13 == v23;
          if (v13 == v23)
            v13 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v10 + 8 * v13);
        }
        while (v25 == -1);
        v14 = __clz(__rbit64(~v25)) + (v13 << 6);
      }
      *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v43 + 48) + 8 * v14) = v26;
      v15 = *(_QWORD *)(v43 + 56) + 80 * v14;
      *(_QWORD *)v15 = v28;
      *(_QWORD *)(v15 + 8) = v29;
      *(_QWORD *)(v15 + 16) = v30;
      *(_QWORD *)(v15 + 24) = v31;
      *(_WORD *)(v15 + 32) = v32;
      *(_OWORD *)(v15 + 40) = v45;
      *(_QWORD *)(v15 + 56) = v47;
      *(_QWORD *)(v15 + 64) = v33;
      *(_BYTE *)(v15 + 72) = v34;
      *(_BYTE *)(v15 + 73) = v46;
      ++*(_QWORD *)(v43 + 16);
      v4 = v41;
      v6 = v44;
    }
  }
  result = swift_release();
  v36 = v43;
  v37 = v38;
LABEL_39:
  *v37 = v36;
  return result;
}

uint64_t sub_1C21725E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF760BF0);
  result = sub_1C217578C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_34;
        v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_34;
          v18 = v30[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if ((a2 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 >= 64)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_34;
                v18 = v30[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v16);
      if ((a2 & 1) != 0)
        sub_1C20A8734(v21, (uint64_t)v31);
      else
        sub_1C20A84A8((uint64_t)v21, (uint64_t)v31);
      result = sub_1C217581C();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v20;
      result = sub_1C20A8734(v31, *(_QWORD *)(v7 + 56) + 40 * v14);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C21728AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BE8);
  v40 = a2;
  v6 = sub_1C217578C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v21);
      v34 = *v32;
      v33 = v32[1];
      v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1C20A8008(v34, v33);
        swift_retain();
      }
      sub_1C2175828();
      sub_1C21754C8();
      result = sub_1C2175870();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 24 * v17);
      *v19 = v34;
      v19[1] = v33;
      v19[2] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C2172BD8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BE0);
  v38 = a2;
  v6 = sub_1C217578C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1C2175828();
    sub_1C21754C8();
    result = sub_1C2175870();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C2172EE4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BD8);
  result = sub_1C217578C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1C217581C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C2173198(uint64_t a1, __int128 *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  __n128 v26;

  v4 = v3;
  v8 = *v3;
  v9 = *(unsigned __int8 **)a2;
  v10 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
  v12 = sub_1C20A9BC4(*(unsigned __int8 **)a2, v10);
  v13 = *(_QWORD *)(v8 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v8 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1C2173B8C();
LABEL_7:
    v18 = (_QWORD *)*v4;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C2172054(result, a3 & 1);
  result = sub_1C20A9BC4(v9, v10);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_16:
    result = sub_1C21757E0();
    __break(1u);
    return result;
  }
  v12 = result;
  v18 = (_QWORD *)*v4;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  v20 = v18[6] + 40 * v12;
  v21 = *a2;
  v22 = a2[1];
  *(_WORD *)(v20 + 32) = *((_WORD *)a2 + 16);
  *(_OWORD *)v20 = v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v18[7] + 8 * v12) = a1;
  v23 = v18[2];
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18[2] = v25;
  sub_1C20CC644((__n128 *)a2 + 1, &v26);
  return sub_1C217505C((uint64_t)&v26);
}

uint64_t sub_1C2173304(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1C20A9B94(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1C2173D54();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_1C2175090((uint64_t)a1, v16[7] + 80 * v10);
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_QWORD *)(v16[6] + 8 * v10) = a2;
    v18 = (_OWORD *)(v16[7] + 80 * v10);
    *v18 = *a1;
    v19 = a1[1];
    v20 = a1[2];
    v21 = a1[3];
    *(_OWORD *)((char *)v18 + 58) = *(_OWORD *)((char *)a1 + 58);
    v18[2] = v20;
    v18[3] = v21;
    v18[1] = v19;
    v22 = v16[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v16[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C2172284(result, a3 & 1);
  result = sub_1C20A9B94(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_1C2175090((uint64_t)a1, v16[7] + 80 * v10);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for InternPool()
{
  return objc_opt_self();
}

uint64_t sub_1C217348C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 62 == 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1C21734A4(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1C20A9B94(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7] + 40 * v10;
        __swift_destroy_boxed_opaque_existential_1(v17);
        return sub_1C20A8734(a1, v17);
      }
      return sub_1C2173ADC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C2173F60();
      goto LABEL_7;
    }
    sub_1C21725E8(v13, a3 & 1);
    v19 = sub_1C20A9B94(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1C2173ADC(v10, a2, a1, v16);
    }
  }
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

uint64_t sub_1C21735C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_1C20A9B30(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1C2174124();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (uint64_t *)(v22[7] + 24 * v16);
      sub_1C20A8058(*v23, v23[1]);
      result = swift_release();
      *v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (uint64_t *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C21728AC(v19, a6 & 1);
  v25 = sub_1C20A9B30(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

uint64_t sub_1C2173750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1C20A9B30(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_1C2174300();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = (uint64_t *)(v20[6] + 16 * v14);
    *v23 = a3;
    v23[1] = a4;
    v24 = (_QWORD *)(v20[7] + 16 * v14);
    *v24 = a1;
    v24[1] = a2;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C2172BD8(result, a5 & 1);
  result = sub_1C20A9B30(a3, a4);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

uint64_t sub_1C21738BC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1C20A9B94(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1C21744A8();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C2172EE4(result, a3 & 1);
  result = sub_1C20A9B94(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

__n128 sub_1C21739F4(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;

  v7 = *a1;
  v6 = a1[1];
  sub_1C2175828();
  if (v7)
    v8 = v7 + v6;
  else
    v8 = 0;
  if (v7)
    v9 = v8 == v7;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      ++v7;
      sub_1C2175840();
    }
    while (v7 != v8);
  }
  sub_1C2175870();
  v10 = sub_1C21756C0();
  *(_QWORD *)((char *)a3 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
  v11 = a3[6] + 40 * v10;
  result = *(__n128 *)a1;
  v13 = *((_OWORD *)a1 + 1);
  *(_OWORD *)v11 = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 16) = v13;
  *(_WORD *)(v11 + 32) = *((_WORD *)a1 + 16);
  *(_QWORD *)(a3[7] + 8 * v10) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1C2173ADC(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1C20A8734(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1C2173B44(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

void *sub_1C2173B8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDE8);
  v2 = *v0;
  v3 = sub_1C2175780();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v17 + 24);
    v20 = *(_BYTE *)(v17 + 33);
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(unsigned __int8 *)(v17 + 32);
    *(_OWORD *)v23 = *(_OWORD *)v17;
    *(_QWORD *)(v23 + 16) = v18;
    *(_QWORD *)(v23 + 24) = v19;
    *(_BYTE *)(v23 + 32) = v24;
    *(_BYTE *)(v23 + 33) = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    result = (void *)sub_1C20A9EA4(v18, v19, v24, v20);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2173D54()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDF0);
  v33 = v0;
  v1 = *v0;
  v2 = sub_1C2175780();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v33 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v30 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v12)
      goto LABEL_26;
    v31 = *(_QWORD *)(v5 + 8 * v30);
    ++v8;
    if (!v31)
    {
      v8 = v30 + 1;
      if (v30 + 1 >= v12)
        goto LABEL_26;
      v31 = *(_QWORD *)(v5 + 8 * v8);
      if (!v31)
        break;
    }
LABEL_25:
    v11 = (v31 - 1) & v31;
    v14 = __clz(__rbit64(v31)) + (v8 << 6);
LABEL_12:
    v15 = 8 * v14;
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v14);
    v17 = 80 * v14;
    v18 = *(_QWORD *)(v1 + 56) + v17;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 56);
    v24 = *(_QWORD *)(v18 + 64);
    v25 = *(_BYTE *)(v18 + 73);
    v26 = *(_OWORD *)(v18 + 40);
    v27 = *(unsigned __int16 *)(v18 + 32);
    v28 = *(unsigned __int8 *)(v18 + 72);
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + v15) = v16;
    v29 = *(_QWORD *)(v3 + 56) + v17;
    *(_QWORD *)v29 = v19;
    *(_QWORD *)(v29 + 8) = v20;
    *(_QWORD *)(v29 + 16) = v21;
    *(_QWORD *)(v29 + 24) = v22;
    *(_WORD *)(v29 + 32) = v27;
    *(_OWORD *)(v29 + 40) = v26;
    *(_QWORD *)(v29 + 56) = v23;
    *(_QWORD *)(v29 + 64) = v24;
    *(_BYTE *)(v29 + 72) = v28;
    *(_BYTE *)(v29 + 73) = v25;
    sub_1C20B7C58(v19, v20, v21, v22, v27);
    result = (void *)sub_1C20A9EA4(v23, v24, v28, v25);
  }
  v32 = v30 + 2;
  if (v32 >= v12)
    goto LABEL_26;
  v31 = *(_QWORD *)(v5 + 8 * v32);
  if (v31)
  {
    v8 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v31 = *(_QWORD *)(v5 + 8 * v8);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2173F60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF760BF0);
  v2 = *v0;
  v3 = sub_1C2175780();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_1C20A84A8(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1C20A8734(v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2174124()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BE8);
  v2 = *v0;
  v3 = sub_1C2175780();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v17 + v20);
    v22 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_QWORD *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v21;
    v25[1] = v22;
    v25[2] = v23;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v21, v22);
    result = (void *)swift_retain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2174300()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BE0);
  v2 = *v0;
  v3 = sub_1C2175780();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C21744A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF760BD8);
  v2 = *v0;
  v3 = sub_1C2175780();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C2174648(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 62 == 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t destroy for _NameMap()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for _NameMap(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _NameMap(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for _NameMap.NameDescription(uint64_t a1)
{
  return sub_1C2174648(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for _NameMap.NameDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1C217348C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for _NameMap.NameDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1C217348C(*(_QWORD *)a2, v4, v5);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  sub_1C2174648(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for _NameMap.NameDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_1C2174648(v5, v7, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.NameDescription(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 17);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.NameDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)-a2 << 8;
      *(_BYTE *)(result + 40) = 0;
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1C2174984(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 62;
}

uint64_t sub_1C2174990(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C21749A0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(unsigned __int8 *)(result + 16) | (unint64_t)(a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.NameDescription()
{
  return &type metadata for _NameMap.NameDescription;
}

uint64_t destroy for _NameMap.Names(uint64_t a1)
{
  uint64_t v2;

  v2 = *(unsigned __int16 *)(a1 + 32);
  if (v2 >> 8 <= 0xFE)
    sub_1C20AA8C4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2, BYTE1(v2) & 1);
  return sub_1C20AA8C4(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(unsigned __int8 *)(a1 + 72), *(_BYTE *)(a1 + 73));
}

uint64_t initializeWithCopy for _NameMap.Names(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(unsigned __int16 *)(a2 + 32);
  if (v4 >> 8 <= 0xFE)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_1C20A9EA4(v6, v7, v4, BYTE1(v4) & 1);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v4;
    *(_BYTE *)(a1 + 33) = BYTE1(v4) & 1;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 73);
  v11 = *(unsigned __int8 *)(a2 + 72);
  sub_1C20A9EA4(v8, v9, v11, v10);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 73) = v10;
  return a1;
}

uint64_t assignWithCopy for _NameMap.Names(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  __int16 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v4 = HIBYTE(*((unsigned __int16 *)a2 + 16));
  if (*(unsigned __int8 *)(a1 + 33) == 255)
  {
    if (v4 <= 0xFE)
    {
      *(_OWORD *)a1 = *a2;
      v9 = *((_QWORD *)a2 + 2);
      v10 = *((_QWORD *)a2 + 3);
      v11 = *((_BYTE *)a2 + 33);
      v12 = *((_BYTE *)a2 + 32);
      sub_1C20A9EA4(v9, v10, v12, v11);
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(_BYTE *)(a1 + 32) = v12;
      *(_BYTE *)(a1 + 33) = v11;
    }
    else
    {
      v5 = *a2;
      v6 = a2[1];
      *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4 <= 0xFE)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    v13 = *((_QWORD *)a2 + 2);
    v14 = *((_QWORD *)a2 + 3);
    v15 = *((_BYTE *)a2 + 33);
    v16 = *((_BYTE *)a2 + 32);
    sub_1C20A9EA4(v13, v14, v16, v15);
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(a1 + 24);
    v19 = *(_BYTE *)(a1 + 33);
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v14;
    v20 = *(unsigned __int8 *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v16;
    *(_BYTE *)(a1 + 33) = v15;
    sub_1C20AA8C4(v17, v18, v20, v19);
  }
  else
  {
    sub_1C2174C18(a1);
    v7 = *((_WORD *)a2 + 16);
    v8 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 32) = v7;
  }
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  v21 = *((_QWORD *)a2 + 7);
  v22 = *((_QWORD *)a2 + 8);
  v23 = *((_BYTE *)a2 + 73);
  v24 = *((unsigned __int8 *)a2 + 72);
  sub_1C20A9EA4(v21, v22, v24, v23);
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_QWORD *)(a1 + 64);
  v27 = *(_BYTE *)(a1 + 73);
  *(_QWORD *)(a1 + 56) = v21;
  *(_QWORD *)(a1 + 64) = v22;
  v28 = *(unsigned __int8 *)(a1 + 72);
  *(_BYTE *)(a1 + 72) = v24;
  *(_BYTE *)(a1 + 73) = v23;
  sub_1C20AA8C4(v25, v26, v28, v27);
  return a1;
}

uint64_t sub_1C2174C18(uint64_t a1)
{
  sub_1C20AA8C4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_BYTE *)(a1 + 33));
  return a1;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for _NameMap.Names(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = *(unsigned __int16 *)(a1 + 32);
  if (v4 >> 8 <= 0xFE)
  {
    v5 = *(unsigned __int16 *)(a2 + 32);
    if (v5 >> 8 <= 0xFE)
    {
      v7 = *(_QWORD *)(a1 + 16);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_BYTE *)(a1 + 32) = v5;
      *(_BYTE *)(a1 + 33) = BYTE1(v5) & 1;
      sub_1C20AA8C4(v7, v8, v4, BYTE1(v4) & 1);
      goto LABEL_6;
    }
    sub_1C2174C18(a1);
  }
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 73);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_BYTE *)(a1 + 73);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v15 = *(unsigned __int8 *)(a1 + 72);
  *(_BYTE *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 73) = v11;
  sub_1C20AA8C4(v12, v13, v15, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.Names(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 74))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 73);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.Names(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 74) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 74) = 0;
    if (a2)
      *(_BYTE *)(result + 73) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.Names()
{
  return &type metadata for _NameMap.Names;
}

uint64_t destroy for _NameMap.Name(uint64_t a1)
{
  return sub_1C20AA8C4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_BYTE *)(a1 + 33));
}

uint64_t initializeWithCopy for _NameMap.Name(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 33);
  v6 = *(unsigned __int8 *)(a2 + 32);
  sub_1C20A9EA4(v3, v4, v6, v5);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 33) = v5;
  return a1;
}

uint64_t assignWithCopy for _NameMap.Name(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 33);
  v6 = *(unsigned __int8 *)(a2 + 32);
  sub_1C20A9EA4(v3, v4, v6, v5);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 33);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v10 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 33) = v5;
  sub_1C20AA8C4(v7, v8, v10, v9);
  return a1;
}

uint64_t assignWithTake for _NameMap.Name(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  uint64_t v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 33);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 33);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 33) = v4;
  sub_1C20AA8C4(v5, v6, v9, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.Name(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 33);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.Name(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 33) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.Name()
{
  return &type metadata for _NameMap.Name;
}

unint64_t sub_1C2174FB8()
{
  unint64_t result;

  result = qword_1ED7DFDD0;
  if (!qword_1ED7DFDD0)
  {
    result = MEMORY[0x1C3BB7F64](&unk_1C217CD58, &type metadata for _NameMap.Name);
    atomic_store(result, (unint64_t *)&qword_1ED7DFDD0);
  }
  return result;
}

uint64_t sub_1C2174FFC(uint64_t a1, uint64_t a2)
{
  sub_1C2175828();
  if (a1 && a2)
  {
    do
    {
      ++a1;
      sub_1C2175840();
      --a2;
    }
    while (a2);
  }
  return sub_1C2175870();
}

uint64_t sub_1C217505C(uint64_t a1)
{
  sub_1C20A9EA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
  return a1;
}

uint64_t sub_1C2175090(uint64_t a1, uint64_t a2)
{
  assignWithTake for _NameMap.Names(a2, a1);
  return a2;
}

uint64_t destroy for _NameMap.Name.NameString(uint64_t a1)
{
  return sub_1C20AA8C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
}

uint64_t _s20SiriOntologyProtobuf8_NameMapV4NameV10NameStringOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1C20A9EA4(*(_QWORD *)a2, v4, v6, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for _NameMap.Name.NameString(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1C20A9EA4(*(_QWORD *)a2, v4, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v10 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  sub_1C20AA8C4(v7, v8, v10, v9);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for _NameMap.Name.NameString(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 17);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  sub_1C20AA8C4(v5, v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.Name.NameString(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.Name.NameString(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2175294(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_1C217529C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.Name.NameString()
{
  return &type metadata for _NameMap.Name.NameString;
}

uint64_t sub_1C21752B8()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1C21752C4()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1C21752D0()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1C21752DC()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1C21752E8()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1C21752F4()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1C2175300()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1C217530C()
{
  return MEMORY[0x1E0CB00F0]();
}

uint64_t sub_1C2175318()
{
  return MEMORY[0x1E0CB0128]();
}

uint64_t sub_1C2175324()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1C2175330()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1C217533C()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1C2175348()
{
  return MEMORY[0x1E0CB01D0]();
}

uint64_t sub_1C2175354()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1C2175360()
{
  return MEMORY[0x1E0CB0298]();
}

uint64_t sub_1C217536C()
{
  return MEMORY[0x1E0CB02C0]();
}

uint64_t sub_1C2175378()
{
  return MEMORY[0x1E0CB02F8]();
}

uint64_t sub_1C2175384()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1C2175390()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1C217539C()
{
  return MEMORY[0x1E0CB03D8]();
}

uint64_t sub_1C21753A8()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1C21753B4()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1C21753C0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1C21753CC()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1C21753D8()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t sub_1C21753E4()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1C21753F0()
{
  return MEMORY[0x1E0DEA078]();
}

uint64_t sub_1C21753FC()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1C2175408()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1C2175414()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1C2175420()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1C217542C()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1C2175438()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1C2175444()
{
  return MEMORY[0x1E0CB1998]();
}

uint64_t sub_1C2175450()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1C217545C()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1C2175468()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1C2175474()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1C2175480()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1C217548C()
{
  return MEMORY[0x1E0DEA628]();
}

uint64_t sub_1C2175498()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1C21754A4()
{
  return MEMORY[0x1E0DEA6C0]();
}

uint64_t sub_1C21754B0()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1C21754BC()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1C21754C8()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1C21754D4()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1C21754E0()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_1C21754EC()
{
  return MEMORY[0x1E0DEA7F8]();
}

uint64_t sub_1C21754F8()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1C2175504()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1C2175510()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1C217551C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1C2175528()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1C2175534()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1C2175540()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1C217554C()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1C2175558()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1C2175564()
{
  return MEMORY[0x1E0DEAA38]();
}

uint64_t sub_1C2175570()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1C217557C()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1C2175588()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1C2175594()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1C21755A0()
{
  return MEMORY[0x1E0DEADD8]();
}

uint64_t sub_1C21755AC()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1C21755B8()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1C21755C4()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1C21755D0()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1C21755DC()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1C21755E8()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1C21755F4()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1C2175600()
{
  return MEMORY[0x1E0DEAEE0]();
}

uint64_t sub_1C217560C()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_1C2175618()
{
  return MEMORY[0x1E0DEB000]();
}

uint64_t sub_1C2175624()
{
  return MEMORY[0x1E0DEB140]();
}

uint64_t sub_1C2175630()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1C217563C()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1C2175648()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1C2175654()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1C2175660()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1C217566C()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1C2175678()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1C2175684()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1C2175690()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1C217569C()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1C21756A8()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1C21756B4()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1C21756C0()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1C21756CC()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1C21756D8()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1C21756E4()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1C21756F0()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1C21756FC()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1C2175708()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1C2175714()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1C2175720()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1C217572C()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1C2175738()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1C2175744()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1C2175750()
{
  return MEMORY[0x1E0DEC8D8]();
}

uint64_t sub_1C217575C()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_1C2175768()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_1C2175774()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1C2175780()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1C217578C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1C2175798()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1C21757A4()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1C21757B0()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1C21757BC()
{
  return MEMORY[0x1E0DED5A8]();
}

uint64_t sub_1C21757C8()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1C21757D4()
{
  return MEMORY[0x1E0DED610]();
}

uint64_t sub_1C21757E0()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1C21757EC()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1C21757F8()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1C2175804()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1C2175810()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1C217581C()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1C2175828()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1C2175834()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1C2175840()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1C217584C()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_1C2175858()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1C2175864()
{
  return MEMORY[0x1E0DEDF38]();
}

uint64_t sub_1C2175870()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1C217587C()
{
  return MEMORY[0x1E0DEE450]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

double strtod(const char *a1, char **a2)
{
  double result;

  MEMORY[0x1E0C85618](a1, a2);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

