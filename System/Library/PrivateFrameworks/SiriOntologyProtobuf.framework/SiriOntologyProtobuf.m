ValueMetadata *type metadata accessor for UnknownStorage()
{
  return &type metadata for UnknownStorage;
}

uint64_t sub_1C20A8008(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for UnknownStorage(uint64_t a1)
{
  return sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_1C20A8058(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

ValueMetadata *type metadata accessor for BinaryDecodingOptions()
{
  return &type metadata for BinaryDecodingOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Int32Value()
{
  return &type metadata for Google_Protobuf_Int32Value;
}

double UnknownStorage.init()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1C2175DE0;
  return result;
}

uint64_t storeEnumTagSinglePayload for UnknownStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnknownStorage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

Swift::String __swiftcall Message.textFormatString()()
{
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v2;
  Swift::String result;
  char v4;

  v4 = 1;
  v2 = Message.textFormatString(options:)((SiriOntologyProtobuf::TextFormatEncodingOptions)&v4);
  object = v2._object;
  countAndFlagsBits = v2._countAndFlagsBits;
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

Swift::String __swiftcall Message.textFormatString(options:)(SiriOntologyProtobuf::TextFormatEncodingOptions options)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *boxed_opaque_existential_1;
  void (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  Swift::String result;
  uint64_t v25;
  char v26;
  _BYTE v27[40];
  uint64_t v28[5];
  _OWORD v29[2];

  v4 = v2;
  v5 = v1;
  v6 = *(_BYTE **)&options;
  v7 = sub_1C2175468();
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v10 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *v6;
  v28[3] = v5;
  v28[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16);
  v15(boxed_opaque_existential_1, v3, v5);
  sub_1C20A84A8((uint64_t)v28, (uint64_t)v27);
  v26 = (char)v6;
  sub_1C20A84EC((uint64_t)v27, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], &v26, (uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v15((uint64_t *)v13, v3, v5);
  if (swift_dynamicCast())
  {
    v16 = v28[0];
    v17 = v28[1];
    sub_1C215283C((char **)v29);
    sub_1C20A8058(v16, v17);
    swift_release();
  }
  else
  {
    (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 72))(v29, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, v5, v4);
  }
  v18 = v29[1];
  v28[0] = *(_QWORD *)&v29[0];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C20A87F4(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C217545C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
  sub_1C20A8908();
  v19 = sub_1C2175444();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = v19;
    v23 = v21;
  }
  else
  {
    __break(1u);
    v22 = swift_unexpectedError();
    __break(1u);
  }
  result._object = v23;
  result._countAndFlagsBits = v22;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1C20A84A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C20A84EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  uint64_t v29;
  _QWORD v30[5];
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v7 = a1;
  v9 = *a4;
  sub_1C20A84A8(a1, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1C20A8734(v28, (uint64_t)&v31);
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    swift_getDynamicType();
    (*(void (**)(_QWORD *__return_ptr))(v33 + 8))(v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    v11 = v30[0];
    v10 = v30[1];
    v12 = v30[2];
    v27 = v30[3];
  }
  else
  {
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    sub_1C2128154((uint64_t)v28, &qword_1EF75FB10);
    v11 = 0;
    v10 = 0;
    v12 = 0;
    v27 = 0;
  }
  sub_1C20A84A8(v7, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDB0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v26 = v7;
    v13 = v12;
    v14 = v10;
    v15 = v11;
    v16 = a2;
    v17 = a3;
    v18 = v9;
    v19 = *((_QWORD *)&v32 + 1);
    v20 = v33;
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    v21 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 16);
    v22 = v20;
    v9 = v18;
    a3 = v17;
    a2 = v16;
    v11 = v15;
    v10 = v14;
    v12 = v13;
    v7 = v26;
    v21(v28, v19, v22);
    v23 = *(_QWORD *)&v28[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
    sub_1C2128154((uint64_t)&v31, &qword_1ED7DFDB8);
    v23 = 0;
  }
  v24 = sub_1C21713E4(MEMORY[0x1E0DEE9D8]);
  result = __swift_destroy_boxed_opaque_existential_1(v7);
  *(_QWORD *)a5 = a2;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = v11;
  *(_QWORD *)(a5 + 24) = v10;
  *(_QWORD *)(a5 + 32) = v12;
  *(_QWORD *)(a5 + 40) = v27;
  *(_QWORD *)(a5 + 48) = v24;
  *(_QWORD *)(a5 + 56) = v23;
  *(_BYTE *)(a5 + 64) = v9;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BB7F4C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C20A8734(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

ValueMetadata *type metadata accessor for _NameMap()
{
  return &type metadata for _NameMap;
}

_QWORD *initializeWithCopy for _NameMap(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C20A87F4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C20A8840(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void UnknownStorage.traverse<A>(visitor:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1C20A88C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if ((a2 & 0xFF000000000000) != 0)
    return (*(uint64_t (**)(void))(a4 + 448))();
  return result;
}

unint64_t sub_1C20A8908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7DFDE0;
  if (!qword_1ED7DFDE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7DFDD8);
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7DFDE0);
  }
  return result;
}

uint64_t Message.serializedData(partial:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17[2];

  v5 = v3;
  v8 = a1;
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, a2);
  if ((v8 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
    if ((v12 & 1) == 0)
    {
      sub_1C2107C2C();
      swift_allocError();
      *v16 = 1;
      return swift_willThrow();
    }
  }
  v17[0] = 0;
  result = (*(uint64_t (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 72))(v17, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298, a2, a3);
  if (!v4)
  {
    v14 = v17[0];
    v17[0] = sub_1C20A8B0C(v17[0]);
    v17[1] = v15;
    MEMORY[0x1E0C80A78](v17[0], v15);
    v17[-4] = a2;
    v17[-3] = a3;
    v17[-2] = v5;
    v17[-1] = v14;
    sub_1C2107C80();
    return v17[0];
  }
  return result;
}

uint64_t sub_1C20A8AFC()
{
  return 1;
}

uint64_t Message.isInitialized.getter()
{
  return 1;
}

uint64_t sub_1C20A8B0C(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1C21752F4();
      swift_allocObject();
      sub_1C21752D0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1C2175324();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1C20A8BA8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];

  if (result)
  {
    if (a2 - result >= 1)
    {
      v7[1] = v3;
      v7[2] = v4;
      v5 = *(_QWORD *)(v2 + 24);
      v6 = *(_QWORD *)(v2 + 16);
      v7[0] = result;
      return (*(uint64_t (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t))(v5 + 72))(v7, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58, v6);
    }
  }
  return result;
}

SiriOntologyProtobuf::BinaryDecodingOptions __swiftcall BinaryDecodingOptions.init()()
{
  uint64_t v0;
  SiriOntologyProtobuf::BinaryDecodingOptions result;

  *(_QWORD *)v0 = 100;
  *(_BYTE *)(v0 + 8) = 0;
  return result;
}

uint64_t Message.init(serializedData:extensions:partial:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  Message.merge(serializedData:extensions:partial:options:)(a1, a2);
  sub_1C20A8058(a1, a2);
  result = sub_1C20A8FA0(a3);
  if (v12)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a6, a4);
  return result;
}

void Message.merge(serializedData:extensions:partial:options:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C20A8FA0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7DFE00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Message.debugDescription.getter()
{
  uint64_t v1;

  swift_getDynamicType();
  swift_getMetatypeMetadata();
  v1 = sub_1C2175480();
  sub_1C21754F8();
  Message.textFormatString()();
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DoubleValue()
{
  return &type metadata for Google_Protobuf_DoubleValue;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Int64Value()
{
  return &type metadata for Google_Protobuf_Int64Value;
}

ValueMetadata *type metadata accessor for Google_Protobuf_StringValue()
{
  return &type metadata for Google_Protobuf_StringValue;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_SourceContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_SourceContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

double Google_Protobuf_Int32Value.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_DWORD *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_Int32Value.value.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t destroy for Google_Protobuf_BoolValue(uint64_t a1)
{
  return sub_1C20A8058(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

double Google_Protobuf_StringValue.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_StringValue.value.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *initializeWithCopy for Google_Protobuf_SourceContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

uint64_t destroy for Google_Protobuf_SourceContext(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1C20A8058(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_DoubleValueVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_DoubleValueVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

double Google_Protobuf_Int32Value.init(integerLiteral:)@<D0>(int a1@<W0>, uint64_t a2@<X8>)
{
  double result;

  *(_DWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C11_Int32ValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  v3 = *(_QWORD *)(a2 + 8);
  v2 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v3, v2);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v3, v2);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

uint64_t Google_Protobuf_Int32Value.value.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t Google_Protobuf_StringValue.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 280))();
}

uint64_t sub_1C20A9404(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20A9418(a1, a2, a3, a4);
}

uint64_t sub_1C20A9418(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  char *v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t result;
  _QWORD v40[2];
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[5];
  char *v53[3];
  char v54;

  v6 = v4;
  v8 = a3;
  v48 = a2;
  v9 = a1;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v47 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)v40 - v15;
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)v40 - v18;
  v20 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v20, v8))
    return swift_bridgeObjectRelease();
  v51 = v5;
  v40[0] = v11;
  v21 = 0;
  v40[1] = v6 + 8;
  v45 = a4;
  v46 = v9;
  v44 = v8;
  v43 = v10;
  v42 = v16;
  v41 = v19;
  while (1)
  {
    v28 = sub_1C21755C4();
    sub_1C2175594();
    v50 = v21;
    if ((v28 & 1) != 0)
    {
      v29 = v9
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(_QWORD *)(v10 + 72) * v21;
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v30(v19, v29, v8);
      v31 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_14;
      goto LABEL_6;
    }
    v38 = (char *)sub_1C21756FC();
    if (v40[0] != 8)
      break;
    v53[0] = v38;
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v30(v19, (unint64_t)v53, v8);
    swift_unknownObjectRelease();
    v31 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
LABEL_14:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_6:
    v49 = v31;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v16, v19, v8);
    sub_1C20A988C(v48);
    sub_1C20AA8D4(v32);
    v52[3] = v8;
    v52[4] = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
    v30((char *)boxed_opaque_existential_1, (unint64_t)v16, v8);
    v35 = *(_QWORD *)v6;
    v34 = *(_QWORD *)(v6 + 8);
    v54 = *(_BYTE *)(v6 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A84EC((uint64_t)v52, v35, v34, &v54, (uint64_t)v53);
    v30(v47, (unint64_t)v16, v8);
    if (swift_dynamicCast())
    {
      v10 = v52[0];
      v19 = (char *)v52[1];
      sub_1C215283C(v53);
      sub_1C20A8008(v10, (unint64_t)v19);
      v36 = v51;
      sub_1C2122EF0((uint64_t)v53, v10, (uint64_t)v19);
      if (v36)
        goto LABEL_19;
      v51 = 0;
      sub_1C20A8058(v10, (unint64_t)v19);
      sub_1C20A8058(v10, (unint64_t)v19);
      swift_release();
    }
    else
    {
      v37 = v51;
      (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v53, &type metadata for TextFormatEncodingVisitor, &off_1E7BDE418, v8, a4);
      if (v37)
        goto LABEL_20;
      v51 = 0;
    }
    v22 = v53[0];
    v23 = v53[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v6 = v22;
    *(_QWORD *)(v6 + 8) = v23;
    sub_1C20AB238(*((_QWORD *)v23 + 2) - 1);
    sub_1C20AB238(*(_QWORD *)(*(_QWORD *)(v6 + 8) + 16) - 1);
    v24 = swift_bridgeObjectRetain();
    sub_1C20AA5B0(v24);
    sub_1C20A9EB4((uint64_t)"}\n", 2, v25);
    v26 = v53[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8840((uint64_t)v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v43;
    v16 = v42;
    v8 = v44;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
    v9 = v46;
    v27 = MEMORY[0x1C3BB7A60](v46, v8);
    v21 = v50 + 1;
    a4 = v45;
    v19 = v41;
    if (v49 == v27)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  sub_1C20A8058(v10, (unint64_t)v19);
  swift_unexpectedError();
  __break(1u);
LABEL_20:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1C20A988C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v2 = v1;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = *(_QWORD *)(v1 + 24);
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = sub_1C20A9B94(a1);
      if ((v6 & 1) != 0)
      {
        v7 = *(_QWORD *)(v4 + 56) + 80 * v5;
        v8 = *(_QWORD *)(v7 + 40);
        v9 = *(_QWORD *)(v7 + 48);
        v10 = *(_QWORD *)(v7 + 56);
        v11 = *(_QWORD *)(v7 + 64);
        v12 = *(_BYTE *)(v7 + 73);
        v13 = *(unsigned __int8 *)(v7 + 72);
        sub_1C20A9EA4(v10, v11, v13, v12);
        v14 = swift_bridgeObjectRetain();
        sub_1C20AA5B0(v14);
        sub_1C20A9EB4(v8, v9, v15);
        return sub_1C20AA8C4(v10, v11, v13, v12);
      }
    }
  }
  v17 = *(_QWORD *)(v2 + 48);
  if (*(_QWORD *)(v17 + 16))
  {
    result = sub_1C20A9B94(a1);
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(v17 + 56) + 24 * result;
      if ((*(_BYTE *)(v19 + 16) & 1) == 0)
      {
        v20 = *(_QWORD *)v19;
        if (*(_QWORD *)v19)
        {
          v21 = *(_QWORD *)(v19 + 8);
          v22 = swift_bridgeObjectRetain();
          sub_1C20AA5B0(v22);
          return sub_1C20A9EB4(v20, v21, v23);
        }
        goto LABEL_22;
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return result;
    }
  }
  v24 = *(_QWORD *)(v2 + 56);
  if (v24)
  {
    if (*(_QWORD *)(v24 + 16) && (v25 = sub_1C20A9B94(a1), (v26 & 1) != 0))
    {
      sub_1C20A84A8(*(_QWORD *)(v24 + 56) + 40 * v25, (uint64_t)&v43);
      v27 = *((_QWORD *)&v44 + 1);
      if (*((_QWORD *)&v44 + 1))
      {
        v28 = v45;
        v29 = __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
        v30 = *(_QWORD *)(v27 - 8);
        MEMORY[0x1E0C80A78](v29, v29);
        v32 = (char *)&v40[-1] - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v30 + 16))(v32);
        sub_1C2128154((uint64_t)&v43, &qword_1EF75CF70);
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v28 + 24))(v40, v27, v28);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v27);
        v33 = v41;
        v34 = v42;
        __swift_project_boxed_opaque_existential_1(v40, v41);
        v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
        v37 = v36;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
        sub_1C214BC9C(v35, v37);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      v45 = 0;
      v43 = 0u;
      v44 = 0u;
    }
    sub_1C2128154((uint64_t)&v43, &qword_1EF75CF70);
  }
  v38 = swift_bridgeObjectRetain();
  result = sub_1C20AA5B0(v38);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  return sub_1C214C444(a1);
}

unint64_t sub_1C20A9B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C2175828();
  sub_1C21754C8();
  v4 = sub_1C2175870();
  return sub_1C20A9CE0(a1, a2, v4);
}

unint64_t sub_1C20A9B94(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C217581C();
  return sub_1C20A9C44(a1, v2);
}

unint64_t sub_1C20A9BC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;

  sub_1C2175828();
  if (a1 && a2)
  {
    v4 = a2;
    v5 = a1;
    do
    {
      ++v5;
      sub_1C2175840();
      --v4;
    }
    while (v4);
  }
  v6 = sub_1C2175870();
  return sub_1C20A9DC0(a1, a2, v6);
}

unint64_t sub_1C20A9C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1C20A9CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C21757C8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C21757C8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C20A9DC0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 **v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  int v15;
  int v16;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    v8 = &a2[(_QWORD)a1];
    if (!a1)
      v8 = 0;
    do
    {
      v9 = (unsigned __int8 **)(*(_QWORD *)(v3 + 48) + 40 * result);
      if (v9[1] == a2)
      {
        v10 = *v9;
        v11 = &a2[(_QWORD)v10];
        if (!v10)
          v11 = 0;
        v12 = a1;
        while (1)
        {
          if (!v10 || v10 == v11)
          {
            v14 = 0;
            v13 = 1;
            if (!v12)
              break;
          }
          else
          {
            v13 = 0;
            v15 = *v10++;
            v14 = v15;
            if (!v12)
              break;
          }
          if (v12 == v8)
            break;
          v16 = *v12++;
          if (v14 != v16)
            v13 = 1;
          if (v13 == 1)
            goto LABEL_6;
        }
        if ((v13 & 1) != 0)
          break;
      }
LABEL_6:
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_1C20A9EA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1C20A9EB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  int64_t v17;
  int v18;
  unsigned __int8 *v19;
  int v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  __int128 *v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _OWORD *v29;
  __int128 v30;
  unsigned __int8 *v31;
  int v32;
  char *v33;
  unsigned __int8 *v34;
  int64_t v35;
  int v36;

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = v6 + a2;
  if (__OFADD__(v6, a2))
  {
    __break(1u);
  }
  else
  {
    v4 = (unsigned __int8 *)result;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v5;
    if (!(_DWORD)result || (v9 = *(_QWORD *)(v5 + 24) >> 1, v9 < v7))
    {
      if (v6 <= v7)
        v10 = v7;
      else
        v10 = v6;
      result = (uint64_t)sub_1C214E1A4((char *)result, v10, 1, (char *)v5);
      v5 = result;
      *v3 = result;
      v9 = *(_QWORD *)(result + 24) >> 1;
    }
    v11 = *(_QWORD *)(v5 + 16);
    v12 = v9 - v11;
    if (!a2 || v9 == v11)
    {
      a3 = &v4[a2];
      if (!v4)
        a3 = 0;
      if (a2 <= 0)
      {
        v13 = 0;
LABEL_22:
        if (v13 != v12)
          goto LABEL_23;
        goto LABEL_26;
      }
    }
    else
    {
      if (a2 >= v12)
        v13 = v9 - v11;
      else
        v13 = a2;
      result = (uint64_t)memcpy((void *)(v5 + v11 + 32), v4, v13);
      if (v12 >= a2)
      {
        a3 = &v4[a2];
        if (v13 >= 1)
        {
          v14 = *(_QWORD *)(v5 + 16);
          v15 = __OFADD__(v14, v13);
          v16 = v14 + v13;
          if (v15)
          {
            __break(1u);
            return result;
          }
          *(_QWORD *)(v5 + 16) = v16;
        }
        v4 += v13;
        goto LABEL_22;
      }
    }
  }
  __break(1u);
LABEL_26:
  if (v4 && v4 != a3)
  {
    v17 = *(_QWORD *)(v5 + 16);
    v20 = *v4;
    v19 = v4 + 1;
    v18 = v20;
    while (1)
    {
      v21 = *(_QWORD *)(v5 + 24);
      v22 = v21 >> 1;
      v23 = v17 + 1;
      if ((uint64_t)(v21 >> 1) < v17 + 1)
      {
        v33 = (char *)v5;
        v34 = a3;
        v35 = v17;
        v36 = v18;
        result = (uint64_t)sub_1C214E1A4((char *)(v21 > 1), v17 + 1, 1, v33);
        v18 = v36;
        v17 = v35;
        a3 = v34;
        v5 = result;
        *v3 = result;
        v22 = *(_QWORD *)(result + 24) >> 1;
        if (v17 >= v22)
          goto LABEL_30;
      }
      else if (v17 >= v22)
      {
        goto LABEL_30;
      }
      *(_BYTE *)(v5 + 32 + v17) = v18;
      if (v19 == a3)
      {
LABEL_48:
        *(_QWORD *)(v5 + 16) = v23;
        break;
      }
      v24 = (unsigned __int8 *)(v22 + ~v17);
      if (v24 >= &a3[~(unint64_t)v19])
        v24 = &a3[~(unint64_t)v19];
      v25 = v24 + 1;
      if ((unint64_t)(v24 + 1) > 0x10 && (unint64_t)(v17 + v5 - (_QWORD)v19 + 33) >= 0x10)
      {
        v26 = (__int128 *)v19;
        v27 = v25 & 0xF;
        if ((v25 & 0xF) == 0)
          v27 = 16;
        v28 = &v25[-v27];
        v23 += (int64_t)v28;
        v19 = &v28[(_QWORD)v19];
        v29 = (_OWORD *)(v5 + v17 + 33);
        do
        {
          v30 = *v26++;
          *v29++ = v30;
          v28 -= 16;
        }
        while (v28);
      }
      v31 = v19++;
      while (1)
      {
        v32 = *v31++;
        v18 = v32;
        if (v22 == v23)
          break;
        *(_BYTE *)(v5 + 32 + v23++) = v18;
        ++v19;
        if (v31 == a3)
          goto LABEL_48;
      }
      v17 = v22;
LABEL_30:
      *(_QWORD *)(v5 + 16) = v17;
    }
  }
LABEL_23:
  *v3 = v5;
  return result;
}

void sub_1C20AA104(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C217536C();
  MEMORY[0x1E0C80A78](v3, v4);
  __asm { BR              X10 }
}

uint64_t sub_1C20AA188()
{
  uint64_t v0;
  uint64_t v1;
  char **v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;

  v7 = *v2;
  v8 = *((_QWORD *)*v2 + 2);
  v9 = v8 + BYTE6(v3);
  if (__OFADD__(v8, BYTE6(v3)))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v2 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v11 = *((_QWORD *)v7 + 3) >> 1, v11 < v9))
  {
    if (v8 <= v9)
      v12 = v8 + BYTE6(v3);
    else
      v12 = v8;
    v7 = sub_1C214E1A4(isUniquelyReferenced_nonNull_native, v12, 1, v7);
    *v2 = v7;
    v11 = *((_QWORD *)v7 + 3) >> 1;
  }
  v13 = v11 - *((_QWORD *)v7 + 2);
  sub_1C20A8008(v4, v3);
  v14 = sub_1C2175318();
  sub_1C20A8058(v4, v3);
  sub_1C20A8058(v4, v3);
  if (v14 < BYTE6(v3))
    goto LABEL_15;
  if (v14 >= 1)
  {
    v15 = *((_QWORD *)v7 + 2);
    v16 = __OFADD__(v15, v14);
    v17 = v15 + v14;
    if (v16)
    {
      __break(1u);
      JUMPOUT(0x1C20AA368);
    }
    *((_QWORD *)v7 + 2) = v17;
  }
  if (v14 == v13)
  {
LABEL_16:
    v19 = *((_QWORD *)v7 + 2);
    sub_1C215250C();
    sub_1C217569C();
    if ((*(_BYTE *)(v6 - 81) & 1) != 0)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
    while (1)
    {
      v20 = *((_QWORD *)v7 + 3);
      v21 = v20 >> 1;
      if ((uint64_t)(v20 >> 1) >= v19 + 1)
        break;
      v7 = sub_1C214E1A4((char *)(v20 > 1), v19 + 1, 1, v7);
      *v2 = v7;
      v22 = *(_BYTE *)(v6 - 81);
      v21 = *((_QWORD *)v7 + 3) >> 1;
      if ((v22 & 1) == 0)
        goto LABEL_21;
LABEL_18:
      *((_QWORD *)v7 + 2) = v19;
      if ((v22 & 1) != 0)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
    }
    v22 = 0;
    do
    {
LABEL_21:
      if (v19 >= v21)
        break;
      v7[v19++ + 32] = *(_BYTE *)(v6 - 82);
      sub_1C217569C();
      v22 = *(_BYTE *)(v6 - 81);
    }
    while ((v22 & 1) == 0);
    goto LABEL_18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
}

uint64_t sub_1C20AA370(uint64_t result)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  __int16 v6;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  _BYTE *v17;
  char *v18;
  char v19;
  uint64_t v20;
  _BOOL8 v21;
  unint64_t v22;
  int64_t v23;
  char *v24;
  uint64_t v25;
  _BOOL8 v26;
  int v27;
  _BYTE *v28;
  char *v29;
  _BYTE v30[36];
  _BYTE v31[2];
  unsigned __int8 v32;
  BOOL v33;

  if (BYTE1(result) < result)
    v2 = -(uint64_t)(result - BYTE1(result));
  else
    v2 = BYTE1(result) - result;
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2 + 1;
  if (__OFADD__(v4, v2 + 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = *((_QWORD *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2 + 1;
    else
      v9 = v4;
    v3 = sub_1C214E1A4(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    *v1 = v3;
    v8 = *((_QWORD *)v3 + 3) >> 1;
  }
  v10 = *((_QWORD *)v3 + 2);
  v11 = v8 - v10;
  result = sub_1C2152278((uint64_t)v31, (uint64_t)&v3[v10 + 32], v8 - v10, v6);
  if (result <= v2)
    goto LABEL_18;
  if (result >= 1)
  {
    v12 = *((_QWORD *)v3 + 2);
    v13 = __OFADD__(v12, result);
    v14 = v12 + result;
    if (v13)
    {
      __break(1u);
      goto LABEL_36;
    }
    *((_QWORD *)v3 + 2) = v14;
  }
  if (result != v11)
  {
LABEL_16:
    *v1 = v3;
    return result;
  }
LABEL_19:
  if (v33)
    goto LABEL_16;
  v2 = *((_QWORD *)v3 + 2);
  v15 = v32;
  v16 = v31[1];
  v17 = sub_1C215231C(v30, v32);
  v19 = *v18;
  result = ((uint64_t (*)(_BYTE *, _QWORD))v17)(v30, 0);
  v20 = 0;
  v21 = v15 == v16;
  if (v15 == v16 || (v20 = (v15 + 1), (((_WORD)v15 + 1) & 0x100) == 0))
  {
    v32 = v20;
    v33 = v15 == v16;
    while (1)
    {
      v22 = *((_QWORD *)v3 + 3);
      v23 = v22 >> 1;
      if ((uint64_t)(v22 >> 1) < v2 + 1)
      {
        v24 = v3;
        v25 = v20;
        v26 = v21;
        result = (uint64_t)sub_1C214E1A4((char *)(v22 > 1), v2 + 1, 1, v24);
        v21 = v26;
        v20 = v25;
        v3 = (char *)result;
        *v1 = (char *)result;
        v23 = *(_QWORD *)(result + 24) >> 1;
        if (v2 < v23)
        {
LABEL_29:
          while (1)
          {
            v3[v2++ + 32] = v19;
            if (v21)
              break;
            v27 = v20;
            v28 = sub_1C215231C(v30, v20);
            v19 = *v29;
            result = ((uint64_t (*)(_BYTE *, _QWORD))v28)(v30, 0);
            v20 = 0;
            v21 = v27 == v16;
            if (v27 != v16)
            {
              v20 = (v27 + 1);
              if ((((_WORD)v27 + 1) & 0x100) != 0)
              {
                __break(1u);
                goto LABEL_37;
              }
            }
            if (v23 == v2)
            {
              v2 = v23;
              goto LABEL_34;
            }
          }
LABEL_36:
          *((_QWORD *)v3 + 2) = v2;
          goto LABEL_16;
        }
      }
      else if (v2 < v23)
      {
        goto LABEL_29;
      }
LABEL_34:
      *((_QWORD *)v3 + 2) = v2;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C20AA5B0(uint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int64_t v11;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v11 = v4 + v2;
  else
    v11 = v4;
  result = (uint64_t)sub_1C214E1A4((char *)result, v11, 1, (char *)v3);
  v3 = result;
  *v1 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = (uint64_t)memcpy((void *)(v3 + v7 + 32), (const void *)(v6 + 32), v2);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = __OFADD__(v8, v2);
  v10 = v8 + v2;
  if (!v9)
  {
    *(_QWORD *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

_QWORD *sub_1C20AA698(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = result[2];
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v1 = v3;
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = sub_1C214EC8C(result, v10, 1, v3);
  v3 = result;
  *(_QWORD *)v1 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF90);
  result = (_QWORD *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v7 = v3[2];
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C20AA79C(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  int64_t v6;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if ((a2 & 0x1000000000000000) != 0)
  {
    result = sub_1C2175510();
    v3 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v3 = HIBYTE(a2) & 0xF;
  }
  else
  {
    v3 = result & 0xFFFFFFFFFFFFLL;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    *v2 = v4;
    if (!(_DWORD)isUniquelyReferenced_nonNull_native || *((_QWORD *)v4 + 3) >> 1 < v6)
    {
      if (v5 <= v6)
        v8 = v5 + v3;
      else
        v8 = v5;
      v4 = sub_1C214E1A4(isUniquelyReferenced_nonNull_native, v8, 1, v4);
      *v2 = v4;
    }
    swift_bridgeObjectRetain();
    result = sub_1C21756E4();
    if ((v9 & 1) != 0)
      goto LABEL_22;
    v10 = result;
    result = swift_bridgeObjectRelease_n();
    if (v10 >= v3)
    {
      if (v10 < 1)
      {
LABEL_17:
        *v2 = v4;
        return result;
      }
      v11 = *((_QWORD *)v4 + 2);
      v12 = __OFADD__(v11, v10);
      v13 = v11 + v10;
      if (!v12)
      {
        *((_QWORD *)v4 + 2) = v13;
        goto LABEL_17;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1C20AA8C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C20AA8D4@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;

  sub_1C20A9EB4((uint64_t)" {\n", 3, a1);
  v2 = *(_QWORD *)(v1 + 8);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 8) = v2;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
    v2 = result;
    *(_QWORD *)(v1 + 8) = result;
  }
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = v5 + 1;
  if (v5 >= v4 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v4 > 1), v5 + 1, 1, (char *)v2);
    v2 = result;
  }
  *(_QWORD *)(v2 + 16) = v6;
  *(_BYTE *)(v2 + v5 + 32) = 32;
  *(_QWORD *)(v1 + 8) = v2;
  v7 = *(_QWORD *)(v2 + 24);
  v8 = v5 + 2;
  if (v8 > (uint64_t)(v7 >> 1))
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8, 1, (char *)v2);
    v2 = result;
  }
  *(_QWORD *)(v2 + 16) = v8;
  *(_BYTE *)(v2 + v6 + 32) = 32;
  *(_QWORD *)(v1 + 8) = v2;
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t sub_1C20AA9E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C20AA9FC(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1C20AAAD0);
}

uint64_t sub_1C20AA9FC(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;

  sub_1C20A988C(a3);
  sub_1C20A9EB4((uint64_t)": ", 2, v8);
  a4(a1, a2);
  v9 = *v4;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v9;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
    v9 = result;
    *v4 = result;
  }
  v12 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    v9 = result;
  }
  *(_QWORD *)(v9 + 16) = v12 + 1;
  *(_BYTE *)(v9 + v12 + 32) = 10;
  *v4 = v9;
  return result;
}

uint64_t sub_1C20AAAD0(uint64_t a1, unint64_t a2)
{
  char **v2;
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  const char *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char v16;
  char *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  char *v37;
  char *v38;
  char v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t result;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v5 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_85:
    v5 = sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    *v2 = v5;
  }
  v8 = *((_QWORD *)v5 + 2);
  v7 = *((_QWORD *)v5 + 3);
  if (v8 >= v7 >> 1)
    v5 = sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v5);
  *((_QWORD *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 34;
  *v2 = v5;
  if ((a2 & 0x2000000000000000) != 0)
    v9 = HIBYTE(a2) & 0xF;
  else
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v55 = a1;
    while (2)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v11 = sub_1C21756CC();
      }
      else
      {
        if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
          sub_1C2175708();
        v11 = sub_1C2175714();
      }
      v13 = v11;
      v14 = v12;
      v15 = (unsigned __int8 *)(v11 - 8);
      switch(v11)
      {
        case 8u:
          v10 = "\\b";
          goto LABEL_10;
        case 9u:
          v10 = "\\t";
          goto LABEL_10;
        case 0xAu:
          v10 = "\\n";
          goto LABEL_10;
        case 0xBu:
          v10 = "\\v";
          goto LABEL_10;
        case 0xCu:
          v10 = "\\f";
          goto LABEL_10;
        case 0xDu:
          v10 = "\\r";
          goto LABEL_10;
        case 0xEu:
        case 0xFu:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
          goto LABEL_22;
        case 0x22u:
          v10 = "\\\"";
          goto LABEL_10;
        default:
          if (v11 == 92)
          {
            v10 = "\\\\";
LABEL_10:
            sub_1C20A9EB4((uint64_t)v10, 2, v15);
          }
          else
          {
LABEL_22:
            if (v11 < 0x20 || v11 == 127)
            {
              v17 = *v2;
              v28 = swift_isUniquelyReferenced_nonNull_native();
              *v2 = v17;
              if ((v28 & 1) == 0)
              {
                v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
                *v2 = v17;
              }
              v30 = *((_QWORD *)v17 + 2);
              v29 = *((_QWORD *)v17 + 3);
              v31 = v30 + 1;
              if (v30 >= v29 >> 1)
                v17 = sub_1C214E1A4((char *)(v29 > 1), v30 + 1, 1, v17);
              *((_QWORD *)v17 + 2) = v31;
              v17[v30 + 32] = 92;
              *v2 = v17;
              v32 = *((_QWORD *)v17 + 3);
              v33 = v30 + 2;
              if ((uint64_t)(v30 + 2) > (uint64_t)(v32 >> 1))
                v17 = sub_1C214E1A4((char *)(v32 > 1), v30 + 2, 1, v17);
              *((_QWORD *)v17 + 2) = v33;
              v17[v31 + 32] = (v13 >> 6) + 48;
              *v2 = v17;
              v34 = *((_QWORD *)v17 + 3);
              v25 = v30 + 3;
              if ((uint64_t)(v30 + 3) > (uint64_t)(v34 >> 1))
                v17 = sub_1C214E1A4((char *)(v34 > 1), v30 + 3, 1, v17);
              *((_QWORD *)v17 + 2) = v25;
              v17[v33 + 32] = (v13 >> 3) & 7 | 0x30;
              *v2 = v17;
              v35 = *((_QWORD *)v17 + 3);
              v27 = v30 + 4;
              if ((uint64_t)(v30 + 4) > (uint64_t)(v35 >> 1))
                v17 = sub_1C214E1A4((char *)(v35 > 1), v30 + 4, 1, v17);
              v36 = v13 & 7 | 0x30;
              goto LABEL_54;
            }
            if (v11 > 0x7F)
            {
              if (v11 <= 0x7FF)
              {
                v17 = *v2;
                v42 = swift_isUniquelyReferenced_nonNull_native();
                *v2 = v17;
                if ((v42 & 1) == 0)
                {
                  v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
                  *v2 = v17;
                }
                v44 = *((_QWORD *)v17 + 2);
                v43 = *((_QWORD *)v17 + 3);
                v45 = v44 + 1;
                if (v44 >= v43 >> 1)
                  v17 = sub_1C214E1A4((char *)(v43 > 1), v44 + 1, 1, v17);
                *((_QWORD *)v17 + 2) = v45;
                v17[v44 + 32] = (v13 >> 6) - 64;
                *v2 = v17;
                v46 = *((_QWORD *)v17 + 3);
                if ((uint64_t)(v44 + 2) > (uint64_t)(v46 >> 1))
                  v17 = sub_1C214E1A4((char *)(v46 > 1), v44 + 2, 1, v17);
                v36 = v13 & 0x3F | 0x80;
                *((_QWORD *)v17 + 2) = v44 + 2;
                v37 = &v17[v45];
              }
              else
              {
                if (HIWORD(v11))
                {
                  v16 = (v11 >> 18) - 16;
                  if ((((v11 >> 18) + 240) & 0x100) != 0)
                  {
                    __break(1u);
                    goto LABEL_85;
                  }
                  v17 = *v2;
                  v18 = swift_isUniquelyReferenced_nonNull_native();
                  *v2 = v17;
                  if ((v18 & 1) == 0)
                  {
                    v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
                    *v2 = v17;
                  }
                  v20 = *((_QWORD *)v17 + 2);
                  v19 = *((_QWORD *)v17 + 3);
                  v21 = v20 + 1;
                  if (v20 >= v19 >> 1)
                    v17 = sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v17);
                  *((_QWORD *)v17 + 2) = v21;
                  v17[v20 + 32] = v16;
                  *v2 = v17;
                  v22 = *((_QWORD *)v17 + 3);
                  v23 = v20 + 2;
                  if ((uint64_t)(v20 + 2) > (uint64_t)(v22 >> 1))
                    v17 = sub_1C214E1A4((char *)(v22 > 1), v20 + 2, 1, v17);
                  *((_QWORD *)v17 + 2) = v23;
                  v17[v21 + 32] = (v13 >> 12) & 0x3F | 0x80;
                  *v2 = v17;
                  v24 = *((_QWORD *)v17 + 3);
                  v25 = v20 + 3;
                  if ((uint64_t)(v20 + 3) > (uint64_t)(v24 >> 1))
                    v17 = sub_1C214E1A4((char *)(v24 > 1), v20 + 3, 1, v17);
                  *((_QWORD *)v17 + 2) = v25;
                  v17[v23 + 32] = (v13 >> 6) & 0x3F | 0x80;
                  *v2 = v17;
                  v26 = *((_QWORD *)v17 + 3);
                  v27 = v20 + 4;
                }
                else
                {
                  v17 = *v2;
                  v47 = swift_isUniquelyReferenced_nonNull_native();
                  *v2 = v17;
                  if ((v47 & 1) == 0)
                  {
                    v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
                    *v2 = v17;
                  }
                  v49 = *((_QWORD *)v17 + 2);
                  v48 = *((_QWORD *)v17 + 3);
                  v50 = v49 + 1;
                  if (v49 >= v48 >> 1)
                    v17 = sub_1C214E1A4((char *)(v48 > 1), v49 + 1, 1, v17);
                  *((_QWORD *)v17 + 2) = v50;
                  v17[v49 + 32] = (v13 >> 12) - 32;
                  *v2 = v17;
                  v51 = *((_QWORD *)v17 + 3);
                  v25 = v49 + 2;
                  if ((uint64_t)(v49 + 2) > (uint64_t)(v51 >> 1))
                    v17 = sub_1C214E1A4((char *)(v51 > 1), v49 + 2, 1, v17);
                  *((_QWORD *)v17 + 2) = v25;
                  v17[v50 + 32] = (v13 >> 6) & 0x3F | 0x80;
                  *v2 = v17;
                  v26 = *((_QWORD *)v17 + 3);
                  v27 = v49 + 3;
                }
                if (v27 > (uint64_t)(v26 >> 1))
                  v17 = sub_1C214E1A4((char *)(v26 > 1), v27, 1, v17);
                v36 = v13 & 0x3F | 0x80;
LABEL_54:
                *((_QWORD *)v17 + 2) = v27;
                v37 = &v17[v25];
              }
              v37[32] = v36;
              *v2 = v17;
              a1 = v55;
              goto LABEL_11;
            }
            v38 = *v2;
            v39 = swift_isUniquelyReferenced_nonNull_native();
            *v2 = v38;
            if ((v39 & 1) == 0)
            {
              v38 = sub_1C214E1A4(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
              *v2 = v38;
            }
            v41 = *((_QWORD *)v38 + 2);
            v40 = *((_QWORD *)v38 + 3);
            if (v41 >= v40 >> 1)
              v38 = sub_1C214E1A4((char *)(v40 > 1), v41 + 1, 1, v38);
            *((_QWORD *)v38 + 2) = v41 + 1;
            v38[v41 + 32] = v13;
            *v2 = v38;
          }
LABEL_11:
          v5 += v14;
          if ((uint64_t)v5 < v9)
            continue;
          swift_bridgeObjectRelease();
          v5 = *v2;
          break;
      }
      break;
    }
  }
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v5;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
    v5 = (char *)result;
    *v2 = (char *)result;
  }
  v54 = *((_QWORD *)v5 + 2);
  v53 = *((_QWORD *)v5 + 3);
  if (v54 >= v53 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v53 > 1), v54 + 1, 1, v5);
    v5 = (char *)result;
  }
  *((_QWORD *)v5 + 2) = v54 + 1;
  v5[v54 + 32] = 34;
  *v2 = v5;
  return result;
}

uint64_t sub_1C20AB238(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C20C602C(v3);
    v3 = result;
    *v1 = result;
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 - 1;
    v7 = *(unsigned __int8 *)(v3 + a1 + 32);
    memmove((void *)(v3 + a1 + 32), (const void *)(v3 + a1 + 33), v5 - 1 - a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
    return v7;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 256))();
}

uint64_t sub_1C20AB2D8(uint64_t a1, unint64_t a2)
{
  return sub_1C20AB2EC(a1, a2);
}

uint64_t sub_1C20AB2EC(uint64_t result, unint64_t a2)
{
  char **v2;
  uint64_t v3;
  unint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v5 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      swift_bridgeObjectRetain();
      sub_1C20A988C(a2);
      sub_1C20A9EB4((uint64_t)": ", 2, v8);
      sub_1C20AAAD0(v6, v7);
      swift_bridgeObjectRelease();
      v9 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        *v2 = v9;
      }
      v12 = *((_QWORD *)v9 + 2);
      v11 = *((_QWORD *)v9 + 3);
      if (v12 >= v11 >> 1)
        v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
      v5 += 2;
      *((_QWORD *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      *v2 = v9;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20AB414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20AB428(a1, a2, a3, a4);
}

uint64_t sub_1C20AB428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v37 = a4;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v38 = (char *)&v35 - v16;
  v17 = 8 * v14;
  v18 = 2;
  v19 = 3;
  v20 = 4;
  if ((8 * v14) >> 28)
    v20 = 5;
  if (v17 >= 0x200000)
    v19 = v20;
  if ((8 * v14) >> 14)
    v18 = v19;
  if (v17 >= 0x80)
    v21 = v18;
  else
    v21 = 1;
  result = MEMORY[0x1C3BB7A48](v13, v15);
  v23 = result * v21;
  if ((unsigned __int128)(result * (__int128)v21) >> 64 != (result * v21) >> 63)
    goto LABEL_44;
  v24 = __OFADD__(*v4, v23);
  v25 = *v4 + v23;
  if (v24)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
  }
  else
  {
    *v4 = v25;
    v26 = swift_bridgeObjectRetain();
    if (MEMORY[0x1C3BB7A60](v26, a3))
    {
      v35 = v9;
      v36 = v4;
      v27 = 0;
      do
      {
        v28 = sub_1C21755C4();
        sub_1C2175594();
        if ((v28 & 1) != 0)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v38, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v27, a3);
          v29 = v27 + 1;
          if (__OFADD__(v27, 1))
            goto LABEL_38;
        }
        else
        {
          result = sub_1C21756FC();
          if (v35 != 8)
            goto LABEL_46;
          v39 = result;
          (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v38, &v39, a3);
          swift_unknownObjectRelease();
          v29 = v27 + 1;
          if (__OFADD__(v27, 1))
          {
LABEL_38:
            __break(1u);
LABEL_39:
            (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a3);
            return swift_bridgeObjectRelease();
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v38, a3);
        result = sub_1C20AB704(a3, v37);
        if (v5)
          goto LABEL_39;
        v30 = result;
        if (result < 0)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, a3);
        if (v30 <= 0x7F)
        {
          v31 = 1;
          goto LABEL_31;
        }
        if (v30 >> 35)
        {
          if (v30 >> 49)
          {
            v32 = v30 >> 28;
            v31 = 8;
LABEL_29:
            if (!(v32 >> 28))
              goto LABEL_31;
LABEL_30:
            ++v31;
            goto LABEL_31;
          }
          v31 = 6;
          if (v30 >> 42)
            goto LABEL_30;
        }
        else
        {
          if (v30 >= 0x200000)
          {
            v31 = 4;
            v32 = v30;
            goto LABEL_29;
          }
          v31 = 2;
          if (v30 >= 0x4000)
            goto LABEL_30;
        }
LABEL_31:
        v24 = __OFADD__(v31, v30);
        v33 = v31 + v30;
        if (v24)
          goto LABEL_42;
        v24 = __OFADD__(*v36, v33);
        v34 = *v36 + v33;
        if (v24)
          goto LABEL_43;
        *v36 = v34;
        ++v27;
      }
      while (v29 != MEMORY[0x1C3BB7A60](a1, a3));
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20AB704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v4 = 0;
  result = (*(uint64_t (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 72))(&v4, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298, a1, a2);
  if (!v2)
    return v4;
  return result;
}

uint64_t sub_1C20AB750(uint64_t a1, unint64_t a2, int a3)
{
  return sub_1C20AB764(a1, a2, a3);
}

uint64_t sub_1C20AB764(uint64_t a1, unint64_t a2, int a3)
{
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;

  v4 = 8 * a3;
  if ((8 * a3) >= 0x80)
  {
    if (v4 >= 0x4000)
    {
      if (v4 >> 21)
      {
        if (v4 >> 28)
        {
          v5 = 5;
          if ((a2 & 0x1000000000000000) != 0)
            goto LABEL_20;
        }
        else
        {
          v5 = 4;
          if ((a2 & 0x1000000000000000) != 0)
            goto LABEL_20;
        }
      }
      else
      {
        v5 = 3;
        if ((a2 & 0x1000000000000000) != 0)
          goto LABEL_20;
      }
LABEL_3:
      if ((a2 & 0x2000000000000000) == 0)
      {
LABEL_4:
        v6 = a1 & 0xFFFFFFFFFFFFLL;
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    v5 = 2;
    if ((a2 & 0x1000000000000000) == 0)
    {
      if ((a2 & 0x2000000000000000) == 0)
        goto LABEL_4;
LABEL_8:
      v6 = HIBYTE(a2) & 0xF;
      goto LABEL_9;
    }
  }
  else
  {
    v5 = 1;
    if ((a2 & 0x1000000000000000) == 0)
      goto LABEL_3;
  }
LABEL_20:
  v6 = sub_1C2175510();
LABEL_9:
  result = sub_1C20AB8F0(v6);
  v8 = v5 + result;
  if (__OFADD__(v5, result))
  {
    __break(1u);
    goto LABEL_22;
  }
  v9 = __OFADD__(v8, v6);
  v10 = v8 + v6;
  if (v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = __OFADD__(*v3, v10);
  v11 = *v3 + v10;
  if (!v9)
  {
    *v3 = v11;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C20AB834(unsigned int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = 1;
  v2 = 2;
  v3 = 3;
  v4 = 4;
  if (a1 >> 28)
    v4 = 5;
  if (a1 >= 0x200000)
    v3 = v4;
  if (a1 >= 0x4000)
    v2 = v3;
  if (a1 >= 0x80)
    v1 = v2;
  if ((a1 & 0x80000000) == 0)
    return v1;
  else
    return 10;
}

uint64_t sub_1C20AB878(unint64_t a1)
{
  uint64_t result;
  unint64_t v2;

  if (a1 < 0x80)
    return 1;
  v2 = a1;
  if ((a1 & 0x8000000000000000) != 0)
    return 10;
  if (a1 >> 35)
  {
    if (!(a1 >> 49))
    {
      result = 6;
      if (v2 >> 42)
        return ++result;
      return result;
    }
    v2 = a1 >> 28;
    result = 8;
  }
  else
  {
    if (a1 < 0x200000)
    {
      result = 2;
      if (v2 < 0x4000)
        return result;
      return ++result;
    }
    result = 4;
  }
  if (v2 >> 28)
    return ++result;
  return result;
}

uint64_t sub_1C20AB8F0(unint64_t a1)
{
  uint64_t result;
  unint64_t v2;

  if (a1 < 0x80)
    return 1;
  v2 = a1;
  if ((a1 & 0x8000000000000000) != 0)
    return 10;
  if (!(a1 >> 35))
  {
    if (!(a1 >> 21))
    {
      result = 2;
      if (v2 < 0x4000)
        return result;
      return ++result;
    }
    result = 4;
LABEL_14:
    if (!(v2 >> 28))
      return result;
    return ++result;
  }
  if (a1 >> 49)
  {
    v2 = a1 >> 28;
    result = 8;
    goto LABEL_14;
  }
  result = 6;
  if (v2 >> 42)
    return ++result;
  return result;
}

unint64_t sub_1C20AB968(unint64_t a1, int a2)
{
  return sub_1C20AB97C(a1, a2);
}

unint64_t sub_1C20AB97C(unint64_t result, int a2)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t *i;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return result;
  v4 = 8 * a2;
  v5 = *v2;
  for (i = (unint64_t *)(result + 40); ; i += 2)
  {
    v7 = *i;
    if (v4 > 0x7F)
    {
      if (v4 >= 0x4000)
      {
        if (v4 >= 0x200000)
        {
          if (v4 >> 28)
          {
            v8 = 5;
            if ((v7 & 0x1000000000000000) != 0)
            {
LABEL_14:
              result = sub_1C2175510();
              if (result < 0x80)
                goto LABEL_17;
              goto LABEL_7;
            }
          }
          else
          {
            v8 = 4;
            if ((v7 & 0x1000000000000000) != 0)
              goto LABEL_14;
          }
        }
        else
        {
          v8 = 3;
          if ((v7 & 0x1000000000000000) != 0)
            goto LABEL_14;
        }
      }
      else
      {
        v8 = 2;
        if ((v7 & 0x1000000000000000) != 0)
          goto LABEL_14;
      }
    }
    else
    {
      v8 = 1;
      if ((v7 & 0x1000000000000000) != 0)
        goto LABEL_14;
    }
    if ((v7 & 0x2000000000000000) != 0)
    {
      result = HIBYTE(v7) & 0xF;
LABEL_17:
      v9 = 1;
      goto LABEL_18;
    }
    result = *(i - 1) & 0xFFFFFFFFFFFFLL;
    if (result < 0x80)
      goto LABEL_17;
LABEL_7:
    if ((result & 0x8000000000000000) != 0)
    {
      v9 = 10;
      goto LABEL_18;
    }
    if (!(result >> 35))
    {
      if (result >= 0x200000)
      {
        v9 = 4;
        if (!(result >> 28))
          goto LABEL_18;
      }
      else
      {
        v9 = 2;
        if (result < 0x4000)
          goto LABEL_18;
      }
LABEL_37:
      ++v9;
      goto LABEL_18;
    }
    if (result >> 49)
    {
      v9 = 8;
      if (!HIBYTE(result))
        goto LABEL_18;
      goto LABEL_37;
    }
    v9 = result >> 42 ? 7 : 6;
LABEL_18:
    v10 = v9 + v8;
    v11 = __OFADD__(v10, result);
    v12 = v10 + result;
    if (v11)
      break;
    v11 = __OFADD__(v5, v12);
    v5 += v12;
    if (v11)
      goto LABEL_41;
    if (!--v3)
    {
      *v2 = v5;
      return result;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1C20ABAEC(unint64_t result, int a2)
{
  _BYTE **v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v23 = *(_QWORD *)(result + 16);
  if (!v23)
    return result;
  v3 = 0;
  v4 = (8 * a2) | 2;
  v21 = v4;
  v22 = result + 32;
  while (1)
  {
    v5 = (unint64_t *)(v22 + 16 * v3);
    v6 = *v5;
    v7 = v5[1];
    v8 = *v2;
    v24 = v3;
    if (v4 >= 0x80)
    {
      v9 = v4;
      do
      {
        *v8++ = v9 | 0x80;
        v4 = v9 >> 7;
        v10 = v9 >> 14;
        v9 >>= 7;
      }
      while (v10);
    }
    *v8 = v4;
    *v2 = v8 + 1;
    v11 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x1000000000000000) != 0)
    {
      v13 = sub_1C2175510();
      v12 = v7 & 0x2000000000000000;
    }
    else
    {
      v12 = (v7 & 0x2000000000000000) != 0;
      if ((v7 & 0x2000000000000000) != 0)
        v13 = HIBYTE(v7) & 0xF;
      else
        v13 = v6 & 0xFFFFFFFFFFFFLL;
    }
    result = sub_1C20AE75C(v13);
    v25 = v12;
    if (!v12)
      v11 = v6 & 0xFFFFFFFFFFFFLL;
    if (v11)
      break;
LABEL_3:
    v3 = v24 + 1;
    v4 = v21;
    if (v24 + 1 == v23)
      return result;
  }
  v14 = (v6 >> 59) & 1;
  if ((v7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v16 = 15;
  while (1)
  {
    v18 = v16 & 0xC;
    result = v16;
    if (v18 == v15)
      result = sub_1C2152200(v16, v6, v7);
    v19 = result >> 16;
    if (result >> 16 >= v11)
      break;
    if ((v7 & 0x1000000000000000) != 0)
    {
      result = sub_1C2175540();
      v20 = result;
      if (v18 != v15)
        goto LABEL_27;
    }
    else if (v25)
    {
      v26[0] = v6;
      v26[1] = v7 & 0xFFFFFFFFFFFFFFLL;
      v20 = *((_BYTE *)v26 + v19);
      if (v18 != v15)
        goto LABEL_27;
    }
    else
    {
      result = (v7 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v6 & 0x1000000000000000) == 0)
        result = sub_1C2175708();
      v20 = *(_BYTE *)(result + v19);
      if (v18 != v15)
      {
LABEL_27:
        if ((v7 & 0x1000000000000000) == 0)
          goto LABEL_17;
        goto LABEL_28;
      }
    }
    result = sub_1C2152200(v16, v6, v7);
    v16 = result;
    if ((v7 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v16 = (v16 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_18;
    }
LABEL_28:
    if (v11 <= v16 >> 16)
      goto LABEL_38;
    result = sub_1C217551C();
    v16 = result;
LABEL_18:
    v17 = *v2;
    *v17 = v20;
    *v2 = v17 + 1;
    if (4 * v11 == v16 >> 14)
      goto LABEL_3;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C20ABD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v28 = a6;
  v26 = a2;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v22 - v15;
  v17 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v17, a4))
    return swift_bridgeObjectRelease();
  v23 = v11;
  v18 = 0;
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 136);
  v25 = a5;
  while (1)
  {
    v19 = sub_1C21755C4();
    sub_1C2175594();
    if ((v19 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v16, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18, a4);
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_11;
      goto LABEL_5;
    }
    result = sub_1C21756FC();
    if (v23 != 8)
      break;
    v29 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v16, &v29, a4);
    swift_unknownObjectRelease();
    v20 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v16, a4);
    v24(v13, v26, a4, v28, v27, v25);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    if (!v6)
    {
      ++v18;
      if (v20 != MEMORY[0x1C3BB7A60](a1, a4))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1C20ABF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20ABF28(a1, a2, a3, a4);
}

unint64_t sub_1C20ABF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  sub_1C20ABFC8(a2, 2u);
  result = sub_1C20AB704(a3, a4);
  if (!v5)
  {
    sub_1C20AE75C(result);
    return (*(uint64_t (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v4, &type metadata for BinaryEncodingVisitor, &off_1E7BDDF58, a3, a4);
  }
  return result;
}

uint64_t sub_1C20ABFC8(uint64_t result, unsigned __int8 a2)
{
  _BYTE **v2;
  unint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = (8 * result) | (unint64_t)a2;
  v4 = *v2;
  if (v3 < 0x80)
  {
    LOBYTE(v5) = (8 * result) | a2;
  }
  else
  {
    do
    {
      *v4++ = v3 | 0x80;
      v5 = v3 >> 7;
      v6 = v3 >> 14;
      v3 >>= 7;
    }
    while (v6);
  }
  *v4 = v5;
  *v2 = v4 + 1;
  return result;
}

uint64_t sub_1C20AC00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20AC028(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C20AC074);
}

uint64_t sub_1C20AC028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  sub_1C20ABFC8(a3, 2u);
  return a6(a1, a2);
}

unint64_t sub_1C20AC074(unint64_t result, unint64_t a2)
{
  _BYTE **v2;
  unint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD v16[2];

  v4 = result;
  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_37;
  if ((a2 & 0x2000000000000000) == 0)
  {
    result &= 0xFFFFFFFFFFFFuLL;
    goto LABEL_4;
  }
  v6 = *v2;
  v7 = HIBYTE(a2) & 0xF;
LABEL_9:
  *v6 = v7;
  *v2 = v6 + 1;
  if ((a2 & 0x2000000000000000) != 0)
    v9 = v5;
  else
    v9 = v4 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    v10 = (v4 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0)
      LOBYTE(v10) = 1;
    v11 = 4 << v10;
    v5 = 15;
    do
    {
      v13 = v5 & 0xC;
      result = v5;
      if (v13 == v11)
        result = sub_1C2152200(v5, v4, a2);
      v14 = result >> 16;
      if (result >> 16 >= v9)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        result = sub_1C2175510();
LABEL_4:
        v6 = *v2;
        if (result < 0x80)
        {
          LOBYTE(v7) = result;
        }
        else
        {
          do
          {
            *v6++ = result | 0x80;
            v7 = result >> 7;
            v8 = result >> 14;
            result >>= 7;
          }
          while (v8);
        }
        goto LABEL_9;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        result = sub_1C2175540();
        v15 = result;
        if (v13 != v11)
          goto LABEL_28;
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v16[0] = v4;
        v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v15 = *((_BYTE *)v16 + v14);
        if (v13 != v11)
          goto LABEL_28;
      }
      else
      {
        result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v4 & 0x1000000000000000) == 0)
          result = sub_1C2175708();
        v15 = *(_BYTE *)(result + v14);
        if (v13 != v11)
        {
LABEL_28:
          if ((a2 & 0x1000000000000000) == 0)
            goto LABEL_16;
          goto LABEL_29;
        }
      }
      result = sub_1C2152200(v5, v4, a2);
      v5 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_16:
        v5 = (v5 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_17;
      }
LABEL_29:
      if (v9 <= v5 >> 16)
        goto LABEL_36;
      result = sub_1C217551C();
      v5 = result;
LABEL_17:
      v12 = *v2;
      *v12 = v15;
      *v2 = v12 + 1;
    }
    while (4 * v9 != v5 >> 14);
  }
  return result;
}

unint64_t sub_1C20AC258(unint64_t a1, int a2)
{
  return sub_1C20ABAEC(a1, a2);
}

uint64_t sub_1C20AC26C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C20AC290(a1, a2, *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C20AC290(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v15;
  _BYTE v16[64];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[40];
  _OWORD v22[11];

  if (result)
  {
    v8 = result;
    v9 = a2 - result;
    if (a2 - result >= 1)
    {
      sub_1C20AC3C4(a5, (uint64_t)v21);
      *(_WORD *)v16 = 1;
      memset(&v16[8], 0, 56);
      LOBYTE(v17) = 1;
      v19 = xmmword_1C2177160;
      v20 = xmmword_1C2177160;
      *(_QWORD *)&v15 = v8;
      *((_QWORD *)&v15 + 1) = v9;
      sub_1C20AC40C((uint64_t)v21, (uint64_t)&v16[16]);
      *((_QWORD *)&v17 + 1) = a3;
      LOBYTE(v18) = a4 & 1;
      *((_QWORD *)&v18 + 1) = a3;
      v22[8] = v19;
      v22[9] = v20;
      v22[2] = *(_OWORD *)v16;
      v22[3] = *(_OWORD *)&v16[16];
      v22[4] = *(_OWORD *)&v16[32];
      v22[5] = *(_OWORD *)&v16[48];
      v22[0] = v15;
      v22[1] = (unint64_t)v8;
      v22[6] = v17;
      v22[7] = v18;
      sub_1C20AC498(a6, a7, a8);
      return sub_1C20ACEE8((uint64_t)v22);
    }
  }
  return result;
}

uint64_t sub_1C20AC3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7DFE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20AC40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7DFE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20AC454(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20AC498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  void (*v18)(_BYTE *, _QWORD);
  _BYTE v19[32];

  v5 = v3[15];
  v6 = __OFSUB__(v5, 1);
  v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v3[15] = v7;
  if (v7 < 0)
  {
    v13 = 6;
    goto LABEL_9;
  }
  result = (*(uint64_t (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 64))(v3, &type metadata for BinaryDecoder, &off_1E7BDFED8, a2, a3);
  if (v4)
    return result;
  v11 = v3[15];
  v6 = __OFADD__(v11, 1);
  v12 = v11 + 1;
  if (v6)
    goto LABEL_14;
  v3[15] = v12;
  if (v3[13] < v12)
  {
LABEL_15:
    result = sub_1C2175774();
    __break(1u);
    return result;
  }
  if (v3[1])
  {
    v13 = 0;
LABEL_9:
    sub_1C2108014();
    swift_allocError();
    *v14 = v13;
    return swift_willThrow();
  }
  v15 = v3[17];
  if (v15 >> 60 != 15)
  {
    v16 = v3[16];
    v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a3 + 56);
    sub_1C20A8008(v16, v15);
    v18 = (void (*)(_BYTE *, _QWORD))v17(v19, a2, a3);
    sub_1C2175360();
    v18(v19, 0);
    return sub_1C20AE1C8(v16, v15);
  }
  return result;
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1C20AC65C()
{
  sub_1C20AC67C();
}

void sub_1C20AC67C()
{
  unsigned __int8 **v0;
  uint64_t v1;
  unsigned __int8 **v2;
  unint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  char *v12;
  char v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  BOOL v23;
  unsigned __int8 *v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  unsigned __int8 *v28;
  unint64_t v29;
  int v30;
  unint64_t v31;

  v2 = v0;
  if ((uint64_t)v0[5] >= 1)
  {
    v3 = (unint64_t)v0[19];
    if (v3 >> 60 == 15)
    {
      if (((_BYTE)v0[4] & 1) == 0)
      {
        if (*((_BYTE *)v0 + 112) == 1)
        {
          v4 = v0[3];
          if (v4)
          {
            *v0 = v4;
          }
          else
          {
            v21 = v0[1];
            v20 = v0[2];
            v22 = (unsigned __int8 *)(*v0 - v20);
            v23 = __OFADD__(v21, v22);
            v24 = &v22[(_QWORD)v21];
            if (v23)
            {
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            *v0 = v20;
            v0[1] = v24;
            v25 = sub_1C20ADCDC();
            if (v1)
              return;
            if ((v25 & 0x100000000) != 0)
            {
              sub_1C2108014();
              swift_allocError();
              v13 = 1;
              goto LABEL_23;
            }
            sub_1C20ADDE4(v25);
            v0[3] = *v0;
          }
        }
        else
        {
          sub_1C20ADC30();
          if (v1)
            return;
          v14 = v0[3];
          if (!v14)
          {
LABEL_51:
            __break(1u);
            return;
          }
          v15 = sub_1C2127830(v0[2], v14 - v0[2]);
          v17 = v15;
          v18 = v16;
          if ((unint64_t)v0[17] >> 60 == 15)
          {
            v0[16] = (unsigned __int8 *)v15;
            v0[17] = (unsigned __int8 *)v16;
          }
          else
          {
            sub_1C2175360();
            sub_1C20A8058(v17, v18);
          }
        }
      }
    }
    else
    {
      v5 = (uint64_t)v0[18];
      if ((unint64_t)v0[17] >> 60 == 15)
      {
        v0[16] = (unsigned __int8 *)v5;
        v0[17] = (unsigned __int8 *)v3;
      }
      else
      {
        sub_1C20A8008((uint64_t)v0[18], (unint64_t)v0[19]);
        sub_1C2175360();
        sub_1C20AE1C8(v5, v3);
        sub_1C20AE1C8(v5, v3);
      }
      *((_OWORD *)v0 + 9) = xmmword_1C2177160;
    }
  }
  v6 = (unint64_t)v0[1];
  if (!v6)
    return;
  v7 = *v2;
  v2[2] = *v2;
  v2[3] = 0;
  v8 = *v7;
  v9 = sub_1C214D25C(v8 & 7);
  if (v9 == 6)
    goto LABEL_22;
  *((_BYTE *)v2 + 33) = v9;
  if ((v8 & 0x80) == 0)
  {
    *v2 = v7 + 1;
    if (!__OFSUB__(v6, 1))
    {
      v2[1] = (unsigned __int8 *)(v6 - 1);
      v10 = (unsigned __int8 *)(v8 >> 3);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_50;
  }
  v11 = (unsigned __int8 *)((v8 >> 3) & 0xF);
  v2[5] = v11;
  if ((uint64_t)v6 <= 1)
    goto LABEL_22;
  v19 = v7[1];
  if ((char)v7[1] < 0)
  {
    v26 = (v8 >> 3) & 0xFLL | (16 * (v19 & 0x7F));
    v2[5] = (unsigned __int8 *)v26;
    if (v6 > 2)
    {
      v27 = (char)v7[2];
      v10 = (unsigned __int8 *)(v26 | ((unint64_t)(v27 & 0x7F) << 11));
      v2[5] = v10;
      if (v27 < 0)
      {
        if (v6 <= 3)
          goto LABEL_22;
        v30 = (char)v7[3];
        v10 = (unsigned __int8 *)((unint64_t)v10 | ((unint64_t)(v30 & 0x7F) << 18));
        v2[5] = v10;
        if (v30 < 0)
        {
          if (v6 <= 4)
            goto LABEL_22;
          v31 = v7[4];
          if (v31 >= 0x10)
            goto LABEL_22;
          v10 = (unsigned __int8 *)((unint64_t)v10 | (v31 << 25));
          v2[5] = v10;
          v28 = v7 + 5;
          v29 = v6 - 5;
        }
        else
        {
          v28 = v7 + 4;
          v29 = v6 - 4;
        }
      }
      else
      {
        v28 = v7 + 3;
        v29 = v6 - 3;
      }
      *v2 = v28;
      v2[1] = (unsigned __int8 *)v29;
      if (v10)
        goto LABEL_17;
    }
LABEL_22:
    sub_1C2108014();
    swift_allocError();
    v13 = 3;
LABEL_23:
    *v12 = v13;
    swift_willThrow();
    return;
  }
  *v2 = v7 + 2;
  v2[1] = (unsigned __int8 *)(v6 - 2);
  v10 = (unsigned __int8 *)((unint64_t)v11 | (16 * v19));
LABEL_16:
  v2[5] = v10;
  if (!v10)
    goto LABEL_22;
LABEL_17:
  *((_BYTE *)v2 + 32) = 0;
  if (v9 == 4 && (((_BYTE)v2[12] & 1) != 0 || v2[11] != v10))
    goto LABEL_22;
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 416))();
}

unint64_t sub_1C20AC9C0(uint64_t a1, uint64_t a2)
{
  return sub_1C20AC9D4(a1, a2);
}

unint64_t sub_1C20AC9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[4];
  int v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[4];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[40];
  _BYTE v37[48];
  _QWORD v38[8];
  unsigned __int8 v39;
  uint64_t v40;
  _OWORD v41[7];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;

  v4 = v2;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1, a2);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x1E0C80A78](v7, v10);
  v14 = &v25[-v13];
  if (*(_BYTE *)(v2 + 33) == 2)
  {
    v15 = v12;
    v45 = result;
    result = sub_1C20ACC78();
    if (!v3)
    {
      v16 = *(_QWORD *)(v2 + 8);
      if ((v16 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v17 = v16 >= result;
        v18 = v16 - result;
        if (v17)
        {
          v27 = *(_QWORD *)v2;
          v28 = v15;
          *(_QWORD *)v2 = v27 + result;
          *(_QWORD *)(v2 + 8) = v18;
          v20 = v15;
          v21 = *(void (**)(uint64_t, uint64_t))(v15 + 16);
          v22 = result;
          v21(a2, v20);
          sub_1C20ACD54(v2, (uint64_t)v37);
          v23 = v38[7];
          v26 = v39;
          sub_1C20ACEA4((uint64_t)v38, (uint64_t)v36, (uint64_t *)&unk_1ED7DFE00);
          LOWORD(v31[0]) = 1;
          *(_OWORD *)((char *)v31 + 8) = 0u;
          *(_OWORD *)((char *)&v31[1] + 8) = 0u;
          *(_OWORD *)((char *)&v31[2] + 8) = 0u;
          *((_QWORD *)&v31[3] + 1) = 0;
          LOBYTE(v32) = 1;
          v34 = xmmword_1C2177160;
          v35 = xmmword_1C2177160;
          *(_QWORD *)&v29 = v27;
          *((_QWORD *)&v29 + 1) = v22;
          v30 = v27;
          sub_1C20AC454((uint64_t)v36, (uint64_t)&v31[1], (uint64_t *)&unk_1ED7DFE00);
          *((_QWORD *)&v32 + 1) = v23;
          LOBYTE(v33) = v26;
          *((_QWORD *)&v33 + 1) = v23;
          v43 = v34;
          v44 = v35;
          v41[2] = v31[0];
          v41[3] = v31[1];
          v41[4] = v31[2];
          v41[5] = v31[3];
          v41[0] = v29;
          v41[1] = v30;
          v41[6] = v32;
          v42 = v33;
          v24 = v40;
          sub_1C20ACEE8((uint64_t)v37);
          *((_QWORD *)&v42 + 1) = v24;
          sub_1C20AC498((uint64_t)v14, a2, v28);
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v14, a2);
          sub_1C21755F4();
          sub_1C21755DC();
          sub_1C20ACEE8((uint64_t)v41);
          result = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v14, a2);
          *(_BYTE *)(v4 + 32) = 1;
        }
        else
        {
          sub_1C2108014();
          swift_allocError();
          *v19 = 1;
          return swift_willThrow();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C20ACC78()
{
  uint64_t *v0;
  uint64_t v1;
  BOOL v2;
  unint64_t v3;
  uint64_t result;
  char v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;

  v1 = v0[1];
  v2 = v1 < 1;
  v3 = v1 - 1;
  if (v2)
  {
    v5 = 1;
  }
  else
  {
    result = *(unsigned __int8 *)*v0;
    if ((*(char *)*v0 & 0x80000000) == 0)
    {
      ++*v0;
LABEL_4:
      v0[1] = v3;
      return result;
    }
    if (v3)
    {
      result &= 0x7Fu;
      v7 = *v0 + 2;
      v8 = 7;
      v5 = 3;
      while (1)
      {
        result |= (unint64_t)(*(_BYTE *)(v7 - 1) & 0x7F) << v8;
        if ((*(_BYTE *)(v7 - 1) & 0x80) == 0)
          break;
        if (v3 >= 2)
        {
          ++v7;
          --v3;
          v2 = v8 > 0x38;
          v8 += 7;
          if (!v2)
            continue;
        }
        goto LABEL_6;
      }
      --v3;
      *v0 = v7;
      goto LABEL_4;
    }
    v5 = 3;
  }
LABEL_6:
  sub_1C2108014();
  swift_allocError();
  *v6 = v5;
  return swift_willThrow();
}

uint64_t sub_1C20ACD54(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BinaryDecoder(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = a1 + 48;
  v6 = a2 + 48;
  v7 = *(_QWORD *)(a2 + 72);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v6;
    *(_OWORD *)(v5 + 16) = v9;
    *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 + 32);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v10 = (uint64_t *)(a2 + 128);
  v11 = *(_QWORD *)(a2 + 136);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v10;
  }
  else
  {
    v12 = *v10;
    sub_1C20A8008(*v10, *(_QWORD *)(a2 + 136));
    *(_QWORD *)(a1 + 128) = v12;
    *(_QWORD *)(a1 + 136) = v11;
  }
  v13 = (uint64_t *)(a2 + 144);
  v14 = *(_QWORD *)(a2 + 152);
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v13;
  }
  else
  {
    v15 = *v13;
    sub_1C20A8008(*v13, v14);
    *(_QWORD *)(a1 + 144) = v15;
    *(_QWORD *)(a1 + 152) = v14;
  }
  return a1;
}

uint64_t sub_1C20ACEA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20ACEE8(uint64_t a1)
{
  destroy for BinaryDecoder(a1);
  return a1;
}

uint64_t destroy for BinaryDecoder(uint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;

  v1 = (uint64_t *)result;
  if (*(_QWORD *)(result + 72))
    result = __swift_destroy_boxed_opaque_existential_1(result + 48);
  v2 = v1[17];
  if (v2 >> 60 != 15)
    result = sub_1C20A8058(v1[16], v2);
  v3 = v1[19];
  if (v3 >> 60 != 15)
    return sub_1C20A8058(v1[18], v3);
  return result;
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

unint64_t sub_1C20ACFB0(unint64_t a1)
{
  return sub_1C20ACFC4(a1);
}

unint64_t sub_1C20ACFC4(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  char v8;
  char *v9;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  char *v14;

  if (*(_BYTE *)(v1 + 33) == 2)
  {
    v3 = (_QWORD *)result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      v4 = *(_QWORD *)(v1 + 8);
      if ((v4 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v5 = result;
        v6 = v4 >= result;
        v7 = v4 - result;
        if (v6)
        {
          v9 = *(char **)v1;
          *(_QWORD *)v1 += v5;
          *(_QWORD *)(v1 + 8) = v7;
          v10 = sub_1C20AD098(v9, v5);
          if (v11)
          {
            v12 = v10;
            v13 = v11;
            result = swift_bridgeObjectRelease();
            *v3 = v12;
            v3[1] = v13;
            *(_BYTE *)(v1 + 32) = 1;
            return result;
          }
          v8 = 2;
        }
        else
        {
          v8 = 1;
        }
        sub_1C2108014();
        swift_allocError();
        *v14 = v8;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t (*sub_1C20AD098(char *a1, uint64_t a2))()
{
  int v2;
  char *v3;
  char *v4;
  unsigned __int8 v5;
  int v6;
  unsigned int v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  uint64_t (*result)();
  uint64_t v12;
  char v13;
  char v14[32];
  unsigned int v15;
  unsigned __int8 v16;

  if (!a2)
    return 0;
  v2 = 0;
  v15 = 0;
  v16 = 0;
  v3 = &a1[a2];
  v4 = a1;
  while (1)
  {
    while (!(_BYTE)v2)
    {
      if (!v4 || v3 == v4)
        return (uint64_t (*)())sub_1C21754B0();
      v2 = 0;
      v6 = *v4++;
      v5 = v6;
      if (v6 < 0)
      {
        v7 = v15 & 0xFFFFFF00 | v5;
        v2 = 8;
LABEL_8:
        v8 = (unsigned __int8 *)v4;
        if (v4 == v3)
          goto LABEL_22;
        ++v4;
        v7 = ((-255 << v2) - 1) & v7 | (*v8 << v2);
        v9 = v2 + 8;
        if ((v2 + 8) >= 0x20u)
          goto LABEL_21;
        if (v4 != v3)
        {
          v4 = (char *)(v8 + 2);
          v7 = ((-255 << v9) - 1) & v7 | (v8[1] << v9);
          v9 = v2 + 16;
          if ((v2 + 16) > 0x1Fu)
            goto LABEL_21;
          if (v4 != v3)
          {
            v4 = (char *)(v8 + 3);
            v7 = ((-255 << v9) - 1) & v7 | (v8[2] << v9);
            v9 = v2 + 24;
            if ((v2 + 24) > 0x1Fu)
              goto LABEL_21;
            if (v4 != v3)
            {
              v4 = (char *)(v8 + 4);
              v7 = ((-255 << v9) - 1) & v7 | (v8[3] << v9);
              v9 = v2 + 32;
              if (v2 < 0xE0u)
                goto LABEL_21;
              if (v4 != v3)
              {
                v7 = ((-255 << v2) - 1) & v7 | (v8[4] << v2);
                v9 = v2 + 40;
                if ((v2 + 40) >= 0x20u)
                {
                  v4 = (char *)(v8 + 5);
LABEL_21:
                  v2 = v9;
                  goto LABEL_22;
                }
              }
            }
          }
        }
        v2 = v9;
        v4 = v3;
        if (!(_BYTE)v9)
          return (uint64_t (*)())sub_1C21754B0();
LABEL_22:
        if ((v7 & 0xC0E0) == 0x80C0)
        {
          if ((v7 & 0x1E) == 0)
            goto LABEL_40;
          v10 = 16;
        }
        else if ((v7 & 0xC0C0F0) == 0x8080E0)
        {
          if ((v7 & 0x200F) == 0 || (v7 & 0x200F) == 0x200D)
            goto LABEL_40;
          v10 = 24;
        }
        else
        {
          if ((v7 & 0xC0C0C0F8) != 0x808080F0 || (v7 & 0x3007) == 0 || __rev16(v7 & 0x3007) > 0x400)
          {
LABEL_40:
            sub_1C217587C();
            return 0;
          }
          v10 = 32;
        }
        v15 = (unint64_t)v7 >> v10;
        v2 -= v10;
        v16 = v2;
      }
    }
    v7 = v15;
    if ((v15 & 0x80) != 0)
    {
      if (!v4)
        goto LABEL_22;
      goto LABEL_8;
    }
    sub_1C2105B14();
    result = sub_1C20BE1E4();
    v13 = *(_BYTE *)(v12 + 4);
    if (!v13)
      break;
    *(_DWORD *)v12 >>= 8;
    *(_BYTE *)(v12 + 4) = v13 - 8;
    ((void (*)(char *, _QWORD))result)(v14, 0);
    v2 = v16;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of Decoder.decodeRepeatedStringField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 352))();
}

unint64_t sub_1C20AD3CC(unint64_t a1)
{
  return sub_1C20AD3E0(a1);
}

unint64_t sub_1C20AD3E0(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  char v11;
  char *v12;
  uint64_t (*v13)();
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;

  if (*(_BYTE *)(v1 + 33) != 2)
    return result;
  v6 = (unint64_t *)result;
  result = sub_1C20ACC78();
  if (v2)
    return result;
  v7 = *(_QWORD *)(v1 + 8);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = v7 >= result;
    v10 = v7 - result;
    if (!v9)
    {
      v11 = 1;
LABEL_12:
      sub_1C2108014();
      swift_allocError();
      *v19 = v11;
      return swift_willThrow();
    }
    v12 = *(char **)v1;
    *(_QWORD *)v1 += v8;
    *(_QWORD *)(v1 + 8) = v10;
    v13 = sub_1C20AD098(v12, v8);
    if (!v14)
    {
      v11 = 2;
      goto LABEL_12;
    }
    v3 = v13;
    v4 = v14;
    v5 = *v6;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v6 = v5;
    if ((result & 1) != 0)
      goto LABEL_8;
  }
  result = (unint64_t)sub_1C214E384(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
  v5 = result;
  *v6 = result;
LABEL_8:
  v15 = *(_QWORD *)(v5 + 16);
  v16 = *(_QWORD *)(v5 + 24);
  v17 = v15 + 1;
  if (v15 >= v16 >> 1)
  {
    v22 = v15 + 1;
    v20 = (char *)v5;
    v21 = *(_QWORD *)(v5 + 16);
    result = (unint64_t)sub_1C214E384((char *)(v16 > 1), v15 + 1, 1, v20);
    v15 = v21;
    v17 = v22;
    v5 = result;
  }
  *(_QWORD *)(v5 + 16) = v17;
  v18 = v5 + 16 * v15;
  *(_QWORD *)(v18 + 32) = v3;
  *(_QWORD *)(v18 + 40) = v4;
  *v6 = v5;
  *(_BYTE *)(v1 + 32) = 1;
  return result;
}

uint64_t dispatch thunk of Decoder.decodeSingularDoubleField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void sub_1C20AD568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (*(_BYTE *)(v1 + 33) == 1)
  {
    sub_1C20AD5E4();
    if (!v2)
    {
      *(_QWORD *)a1 = v4;
      *(_BYTE *)(a1 + 8) = 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
}

void sub_1C20AD5A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (*(_BYTE *)(v1 + 33) == 1)
  {
    sub_1C20AD5E4();
    if (!v2)
    {
      *a1 = v4;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
}

void sub_1C20AD5E4()
{
  _QWORD *v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = v0[1];
  v2 = v1 < 8;
  v3 = v1 - 8;
  if (v2)
  {
    sub_1C2108014();
    swift_allocError();
    *v4 = 1;
    swift_willThrow();
  }
  else
  {
    *v0 += 8;
    v0[1] = v3;
  }
}

uint64_t dispatch thunk of Decoder.decodeSingularBoolField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t sub_1C20AD6B4(uint64_t a1)
{
  return sub_1C2146698(a1);
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 408))();
}

unint64_t sub_1C20AD6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20AD6F4(a1, a2, a3);
}

unint64_t sub_1C20AD6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t result;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  _BYTE *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[4];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[40];
  _BYTE v43[48];
  _QWORD v44[8];
  char v45;
  uint64_t v46;
  _OWORD v47[7];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v5 = v3;
  v51 = a2;
  v8 = sub_1C2175690();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11, v14);
  v17 = (char *)&v29 - v16;
  if (*(_BYTE *)(v5 + 33) == 2)
  {
    v34 = a3;
    result = sub_1C20ACC78();
    if (!v4)
    {
      v18 = *(_QWORD *)(v5 + 8);
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v19 = v18 >= result;
        v20 = v18 - result;
        if (!v19)
        {
          sub_1C2108014();
          swift_allocError();
          *v21 = 1;
          return swift_willThrow();
        }
        *(_QWORD *)&v31 = *(_QWORD *)v5;
        *((_QWORD *)&v31 + 1) = result;
        *(_QWORD *)v5 = v31 + result;
        *(_QWORD *)(v5 + 8) = v20;
        v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
        v33 = a1;
        v22(v17, a1, v8);
        v23 = v51;
        v30 = *(_QWORD *)(v51 - 8);
        v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
        v24 = v32(v17, 1, v51);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        if (v24 == 1)
        {
          (*(void (**)(uint64_t))(v34 + 16))(v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, v23);
          (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v33, v13, v8);
        }
        sub_1C20ACD54(v5, (uint64_t)v43);
        v25 = v44[7];
        v26 = v45;
        sub_1C20ACEA4((uint64_t)v44, (uint64_t)v42, (uint64_t *)&unk_1ED7DFE00);
        LOWORD(v37[0]) = 1;
        *(_OWORD *)((char *)v37 + 8) = 0u;
        *(_OWORD *)((char *)&v37[1] + 8) = 0u;
        *(_OWORD *)((char *)&v37[2] + 8) = 0u;
        *((_QWORD *)&v37[3] + 1) = 0;
        LOBYTE(v38) = 1;
        v40 = xmmword_1C2177160;
        v41 = xmmword_1C2177160;
        v35 = v31;
        v36 = (unint64_t)v31;
        sub_1C20AC454((uint64_t)v42, (uint64_t)&v37[1], (uint64_t *)&unk_1ED7DFE00);
        *((_QWORD *)&v38 + 1) = v25;
        LOBYTE(v39) = v26;
        *((_QWORD *)&v39 + 1) = v25;
        v49 = v40;
        v50 = v41;
        v47[2] = v37[0];
        v47[3] = v37[1];
        v47[4] = v37[2];
        v47[5] = v37[3];
        v47[0] = v35;
        v47[1] = v36;
        v47[6] = v38;
        v48 = v39;
        v27 = v46;
        sub_1C20ACEE8((uint64_t)v43);
        *((_QWORD *)&v48 + 1) = v27;
        v28 = v33;
        result = v32((char *)v33, 1, v23);
        if ((_DWORD)result != 1)
        {
          sub_1C20AC498(v28, v23, v34);
          result = sub_1C20ACEE8((uint64_t)v47);
          *(_BYTE *)(v5 + 32) = 1;
          return result;
        }
      }
      __break(1u);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtobufString()
{
  return &type metadata for ProtobufString;
}

uint64_t sub_1C20AD9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufString.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t static ProtobufString.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(a1, a3, a4);
}

uint64_t dispatch thunk of Decoder.decodeSingularInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1C20ADA68(uint64_t a1)
{
  return sub_1C20ADA7C(a1);
}

uint64_t sub_1C20ADA7C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = (_DWORD *)result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *v3 = result;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C20ADAB4(uint64_t a1)
{
  return sub_1C20ADAC8(a1);
}

uint64_t sub_1C20ADAC8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *(_DWORD *)v3 = result;
      *(_BYTE *)(v3 + 4) = 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 392))();
}

{
  return (*(uint64_t (**)(void))(a5 + 384))();
}

uint64_t sub_1C20ADB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2142914(a1, a2, a3);
}

uint64_t sub_1C20ADB48(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C214279C(a1, a2, a3);
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t sub_1C20ADBBC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *(_QWORD *)v3 = result;
      *(_BYTE *)(v3 + 8) = 0;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C20ADBF8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (!*(_BYTE *)(v1 + 33))
  {
    v3 = (_QWORD *)result;
    result = sub_1C20ACC78();
    if (!v2)
    {
      *v3 = result;
      *(_BYTE *)(v1 + 32) = 1;
    }
  }
  return result;
}

void sub_1C20ADC30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v9;

  v2 = v0[3];
  if (v2)
  {
    *v0 = v2;
  }
  else
  {
    v4 = v0[1];
    v3 = v0[2];
    v5 = *v0 - v3;
    v6 = __OFADD__(v4, v5);
    v7 = v4 + v5;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      *v0 = v3;
      v0[1] = v7;
      v8 = sub_1C20ADCDC();
      if (!v1)
      {
        if ((v8 & 0x100000000) != 0)
        {
          sub_1C2108014();
          swift_allocError();
          *v9 = 1;
          swift_willThrow();
        }
        else
        {
          sub_1C20ADDE4(v8);
          v0[3] = *v0;
        }
      }
    }
  }
}

unint64_t sub_1C20ADCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;

  v2 = *(_QWORD *)(v0 + 8);
  if (v2 < 1)
  {
    v6 = 0;
    return v6 | ((unint64_t)(v2 < 1) << 32);
  }
  result = sub_1C20ACC78();
  if (v1)
    return result;
  if (result <= 0xFFFFFFFE)
  {
    v4 = sub_1C20ADD9C(result);
    if ((v4 & 0x100000000) == 0)
    {
      v5 = v4;
      *(_BYTE *)(v0 + 33) = sub_1C20ADDD0(v4);
      *(_QWORD *)(v0 + 40) = v5 >> 3;
      v6 = v5;
      return v6 | ((unint64_t)(v2 < 1) << 32);
    }
  }
  sub_1C2108014();
  swift_allocError();
  *v7 = 3;
  return swift_willThrow();
}

uint64_t sub_1C20ADD9C(unsigned int a1)
{
  _BOOL4 v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (~a1 & 6) == 0 || a1 < 8;
  v3 = v2;
  if (v2)
    v4 = 0;
  else
    v4 = a1;
  return v4 | (v3 << 32);
}

uint64_t sub_1C20ADDD0(char a1)
{
  uint64_t result;

  result = a1 & 7;
  if (result > 5)
    __break(1u);
  return result;
}

unint64_t sub_1C20ADDE4(unint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  unsigned int v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  char *v23;
  char *v24;
  char *v25;

  v3 = result;
  switch(result & 7)
  {
    case 0uLL:
      v4 = v1[1];
      if (v4 <= 0)
        goto LABEL_37;
      v5 = (char *)*v1;
      if ((*(char *)*v1 & 0x80000000) == 0)
        goto LABEL_4;
      *v1 = (uint64_t)++v5;
      v1[1] = v4 - 1;
      if (v4 != 1)
      {
        do
        {
          if ((*v5 & 0x80000000) == 0)
          {
            --v4;
LABEL_4:
            v6 = (uint64_t)(v5 + 1);
            v7 = (char *)(v4 - 1);
            goto LABEL_39;
          }
          *v1 = (uint64_t)++v5;
          v1[1] = v4 - 2;
          --v4;
        }
        while (v4 >= 2);
      }
      goto LABEL_37;
    case 1uLL:
      v19 = v1[1];
      if (v19 <= 7)
        goto LABEL_37;
      v6 = *v1 + 8;
      v7 = (char *)(v19 - 8);
      goto LABEL_39;
    case 2uLL:
      goto LABEL_29;
    case 3uLL:
      v8 = (char *)v1[15];
      v9 = __OFSUB__(v8, 1);
      v10 = (unint64_t)(v8 - 1);
      if (v9)
        goto LABEL_54;
      v1[15] = v10;
      if ((v10 & 0x8000000000000000) != 0)
      {
        sub_1C2108014();
        swift_allocError();
        v22 = 6;
        goto LABEL_50;
      }
      v11 = v1[1];
      if (v11 < 1)
        goto LABEL_37;
      break;
    case 4uLL:
      goto LABEL_49;
    case 5uLL:
      v20 = v1[1];
      if (v20 <= 3)
        goto LABEL_37;
      v6 = *v1 + 4;
      v7 = (char *)(v20 - 4);
      goto LABEL_39;
    default:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
  }
  while (1)
  {
    result = *(unsigned __int8 *)*v1;
    v12 = v11 - 1;
    if (*(char *)*v1 < 0)
    {
      if (!v12)
        goto LABEL_49;
      result &= 0x7Fu;
      v13 = *v1 + 2;
      v14 = 7;
      while (1)
      {
        result |= (unint64_t)(*(_BYTE *)(v13 - 1) & 0x7F) << v14;
        if ((*(_BYTE *)(v13 - 1) & 0x80) == 0)
          break;
        if (v12 >= 2)
        {
          ++v13;
          --v12;
          v15 = v14 > 0x38;
          v14 += 7;
          if (!v15)
            continue;
        }
        goto LABEL_49;
      }
      *v1 = v13;
      v1[1] = v12 - 1;
      if (result >= 0xFFFFFFFF)
        goto LABEL_49;
    }
    else
    {
      ++*v1;
      v1[1] = v12;
    }
    v16 = result & 7;
    v17 = result < 8 || v16 >= 6;
    if (v17)
      goto LABEL_49;
    if (v16 >= 4)
      break;
LABEL_23:
    *((_BYTE *)v1 + 33) = v16;
    v1[5] = result >> 3;
    result = sub_1C20ADDE4();
    if (v2)
      return result;
    v11 = v1[1];
    if (v11 < 1)
      goto LABEL_37;
  }
  if (v16 == 4)
  {
    *((_BYTE *)v1 + 33) = 4;
    v23 = (char *)(result >> 3);
    v1[5] = (uint64_t)v23;
    if ((_DWORD)v23 == v3 >> 3)
    {
      v24 = (char *)v1[15];
      v9 = __OFADD__(v24, 1);
      v25 = v24 + 1;
      if (v9)
      {
LABEL_56:
        __break(1u);
        return result;
      }
      v1[15] = (uint64_t)v25;
      if (v1[13] >= (uint64_t)v25)
        return result;
      sub_1C2175774();
      __break(1u);
    }
LABEL_49:
    sub_1C2108014();
    swift_allocError();
    v22 = 3;
    goto LABEL_50;
  }
  if (v16 == 5)
    goto LABEL_23;
  __break(1u);
LABEL_29:
  result = sub_1C20ACC78();
  if (v2)
    return result;
  v18 = v1[1];
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v17 = v18 >= result;
  v7 = (char *)(v18 - result);
  if (!v17)
  {
LABEL_37:
    sub_1C2108014();
    swift_allocError();
    v22 = 1;
LABEL_50:
    *v21 = v22;
    return swift_willThrow();
  }
  v6 = *v1 + result;
LABEL_39:
  *v1 = v6;
  v1[1] = (uint64_t)v7;
  return result;
}

uint64_t sub_1C20AE108(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1C20AE1C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C20A8058(a1, a2);
  return a1;
}

ValueMetadata *type metadata accessor for BinaryEncodingError()
{
  return &type metadata for BinaryEncodingError;
}

uint64_t dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C20AE204(uint64_t a1)
{
  return sub_1C20AE218(a1);
}

uint64_t sub_1C20AE218(uint64_t result)
{
  _QWORD *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v2 = 8 * result;
  v3 = 10;
  v4 = 11;
  v5 = 12;
  if ((8 * result) >> 28)
    v5 = 13;
  if (v2 >= 0x200000)
    v4 = v5;
  if ((8 * result) >> 14)
    v3 = v4;
  if (v2 >= 0x80)
    v6 = v3;
  else
    v6 = 9;
  v7 = __OFADD__(*v1, v6);
  v8 = *v1 + v6;
  if (v7)
    __break(1u);
  else
    *v1 = v8;
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t sub_1C20AE284(uint64_t a1, uint64_t a2)
{
  return sub_1C20AE29C(a2);
}

uint64_t sub_1C20AE29C(uint64_t result)
{
  _QWORD *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v2 = 8 * result;
  v3 = 3;
  v4 = 4;
  v5 = 5;
  if ((8 * result) >> 28)
    v5 = 6;
  if (v2 >= 0x200000)
    v4 = v5;
  if ((8 * result) >> 14)
    v3 = v4;
  if (v2 >= 0x80)
    v6 = v3;
  else
    v6 = 2;
  v7 = __OFADD__(*v1, v6);
  v8 = *v1 + v6;
  if (v7)
    __break(1u);
  else
    *v1 = v8;
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 136))();
}

unint64_t sub_1C20AE308(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20AE31C(a1, a2, a3, a4);
}

unint64_t sub_1C20AE31C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;

  v6 = 8 * a2;
  v7 = 2;
  v8 = 3;
  v9 = 4;
  if ((8 * a2) >> 28)
    v9 = 5;
  if (v6 >= 0x200000)
    v8 = v9;
  if ((8 * a2) >> 14)
    v7 = v8;
  if (v6 >= 0x80)
    v10 = v7;
  else
    v10 = 1;
  result = sub_1C20AB704(a3, a4);
  if (!v5)
  {
    v12 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      result = sub_1C20AB878(result);
      v13 = v10 + result;
      if (!__OFADD__(v10, result))
      {
        v14 = __OFADD__(v13, v12);
        v15 = v13 + v12;
        if (!v14)
        {
          v14 = __OFADD__(*v4, v15);
          v16 = *v4 + v15;
          if (!v14)
          {
            *v4 = v16;
            return result;
          }
LABEL_20:
          __break(1u);
          return result;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

unint64_t sub_1C20AE3F0(int a1, int a2)
{
  return sub_1C20AE408(a1, a2);
}

unint64_t sub_1C20AE408(unint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v3 = 8 * a2;
  if ((8 * a2) >= 0x80)
  {
    if (v3 < 0x4000)
    {
      if (result < 0x80)
      {
        v5 = 2;
        v4 = 1;
        goto LABEL_59;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        v5 = 2;
        goto LABEL_46;
      }
      if (result >> 35)
      {
        v5 = 2;
        goto LABEL_50;
      }
      if (!(result >> 21))
      {
        v4 = 2;
        v5 = 2;
LABEL_18:
        if (result < 0x4000)
          goto LABEL_59;
LABEL_58:
        ++v4;
        goto LABEL_59;
      }
      v5 = 2;
LABEL_56:
      v4 = 4;
      goto LABEL_57;
    }
    if (v3 >> 21)
    {
      if (v3 >> 28)
      {
        if (result < 0x80)
        {
          v5 = 5;
          v4 = 1;
          goto LABEL_59;
        }
        if ((result & 0x8000000000000000) != 0)
        {
          v5 = 5;
          goto LABEL_46;
        }
        if (result >> 35)
        {
          v5 = 5;
          goto LABEL_50;
        }
        if (!(result >> 21))
        {
          v5 = 5;
          goto LABEL_10;
        }
        v5 = 5;
        goto LABEL_56;
      }
      if (result < 0x80)
      {
        v5 = 4;
        v4 = 1;
        goto LABEL_59;
      }
      if ((result & 0x8000000000000000) == 0)
      {
        if (!(result >> 35))
        {
          if (!(result >> 21))
          {
            v5 = 4;
            goto LABEL_10;
          }
          v4 = 4;
          v5 = 4;
LABEL_57:
          if (!(result >> 28))
            goto LABEL_59;
          goto LABEL_58;
        }
        v5 = 4;
        goto LABEL_50;
      }
      v5 = 4;
    }
    else
    {
      if (result < 0x80)
      {
        v5 = 3;
        v4 = 1;
        goto LABEL_59;
      }
      if ((result & 0x8000000000000000) == 0)
      {
        if (!(result >> 35))
        {
          if (!(result >> 21))
          {
            v5 = 3;
            goto LABEL_10;
          }
          v5 = 3;
          goto LABEL_56;
        }
        v5 = 3;
        goto LABEL_50;
      }
      v5 = 3;
    }
LABEL_46:
    v4 = 10;
    goto LABEL_59;
  }
  if (result < 0x80)
  {
    v4 = 1;
    v5 = 1;
    goto LABEL_59;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    v5 = 1;
    goto LABEL_46;
  }
  if (!(result >> 35))
  {
    v5 = 1;
    if (result < 0x200000)
    {
LABEL_10:
      v4 = 2;
      goto LABEL_18;
    }
    goto LABEL_56;
  }
  v5 = 1;
LABEL_50:
  if (result >> 49)
  {
    result >>= 28;
    v4 = 8;
    goto LABEL_57;
  }
  v4 = 6;
  if (result >> 42)
    goto LABEL_58;
LABEL_59:
  v6 = v5 + v4;
  v7 = __OFADD__(*v2, v6);
  v8 = *v2 + v6;
  if (v7)
    __break(1u);
  else
    *v2 = v8;
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

void sub_1C20AE5FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_1C20AE610(a1, a2, a3, a4);
}

void sub_1C20AE610(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v5 = 8 * a2;
  v6 = 2;
  v7 = 3;
  v8 = 4;
  if ((8 * a2) >> 28)
    v8 = 5;
  if (v5 >= 0x200000)
    v7 = v8;
  if ((8 * a2) >> 14)
    v6 = v7;
  if (v5 >= 0x80)
    v9 = v6;
  else
    v9 = 1;
  v10 = *v4 + v9;
  if (__OFADD__(*v4, v9))
  {
    __break(1u);
  }
  else
  {
    *v4 = v10;
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
    v12 = sub_1C20AB834(v11);
    if (!__OFADD__(v10, v12))
    {
      *v4 = v10 + v12;
      return;
    }
  }
  __break(1u);
}

uint64_t dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

unint64_t sub_1C20AE6CC(unsigned int a1, int a2)
{
  return sub_1C20AE408(a1, a2);
}

uint64_t dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

unint64_t sub_1C20AE6FC(unint64_t a1, int a2)
{
  return sub_1C20AE408(a1, a2);
}

uint64_t sub_1C20AE710(uint64_t a1, double a2)
{
  return sub_1C2120278(a1, a2);
}

unint64_t sub_1C20AE724(char a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a1 & 1;
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(v2);
}

unint64_t sub_1C20AE75C(unint64_t result)
{
  _BYTE **v1;
  _BYTE *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = *v1;
  if (result < 0x80)
  {
    LOBYTE(v3) = result;
  }
  else
  {
    do
    {
      *v2++ = result | 0x80;
      v3 = result >> 7;
      v4 = result >> 14;
      result >>= 7;
    }
    while (v4);
  }
  *v2 = v3;
  *v1 = v2 + 1;
  return result;
}

unint64_t sub_1C20AE794(int a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a1;
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(v2);
}

unint64_t sub_1C20AE7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20AE7E0(a1, a2, a3, a4);
}

unint64_t sub_1C20AE7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(v5);
}

unint64_t sub_1C20AE848(unsigned int a1, uint64_t a2)
{
  unint64_t v2;

  v2 = a1;
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(v2);
}

unint64_t sub_1C20AE880(unint64_t a1, uint64_t a2)
{
  sub_1C20ABFC8(a2, 0);
  return sub_1C20AE75C(a1);
}

uint64_t sub_1C20AE8B8(char a1, unint64_t a2)
{
  return sub_1C20AE8CC(a1, a2);
}

uint64_t sub_1C20AE8CC(char a1, unint64_t a2)
{
  uint64_t *v2;
  unsigned __int8 *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;

  sub_1C20A988C(a2);
  sub_1C20A9EB4((uint64_t)": ", 2, v4);
  if ((a1 & 1) != 0)
    v5 = "true";
  else
    v5 = "false";
  if ((a1 & 1) != 0)
    v6 = 4;
  else
    v6 = 5;
  sub_1C20A9EB4((uint64_t)v5, v6, (unsigned __int8 *)4);
  v7 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v7 + 16) + 1, 1, (char *)v7);
    v7 = result;
    *v2 = result;
  }
  v10 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
    v7 = result;
  }
  *(_QWORD *)(v7 + 16) = v10 + 1;
  *(_BYTE *)(v7 + v10 + 32) = 10;
  *v2 = v7;
  return result;
}

BOOL static BinaryEncodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BinaryEncodingError.hash(into:)()
{
  return sub_1C2175834();
}

uint64_t BinaryEncodingError.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

BOOL sub_1C20AEA34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C20AEA4C()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t sub_1C20AEA90()
{
  return sub_1C2175834();
}

uint64_t sub_1C20AEAB8()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

unint64_t sub_1C20AEAFC()
{
  unint64_t result;

  result = qword_1EF75CF58;
  if (!qword_1EF75CF58)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for BinaryEncodingError, &type metadata for BinaryEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75CF58);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryEncodingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryEncodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C20AEC3C + 4 * byte_1C2175BD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C20AEC70 + 4 * byte_1C2175BD0[v4]))();
}

uint64_t sub_1C20AEC70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20AEC78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C20AEC80);
  return result;
}

uint64_t sub_1C20AEC8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C20AEC94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C20AEC98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20AECA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20AECAC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1C20AECB8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HashVisitor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HashVisitor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HashVisitor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HashVisitor()
{
  return &type metadata for HashVisitor;
}

uint64_t sub_1C20AED84()
{
  sub_1C2175834();
  return sub_1C2175408();
}

uint64_t sub_1C20AEDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1C2175834();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(v4, a3, a4);
}

uint64_t sub_1C20AEE18(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1C2175834();
  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C2175834();
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      ++v4;
      result = sub_1C2175840();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C20AEE70(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1C2175834();
  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C2175834();
  if (v2)
  {
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      result = swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C20AEEE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_1C2175834();
  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C2175834();
  if (v2)
  {
    v4 = (unint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_1C20A8008(v5, *v4);
      sub_1C2175354();
      result = sub_1C20A8058(v5, v6);
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C20AEF70()
{
  sub_1C2175834();
  return sub_1C2175600();
}

uint64_t sub_1C20AEFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  char v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v4;
  sub_1C2175834();
  v11 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C3BB7A60](v11, a3))
  {
    v19 = v9;
    v12 = 0;
    v13 = a4;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 80);
    while (1)
    {
      v15 = sub_1C21755C4();
      sub_1C2175594();
      if ((v15 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v12, a3);
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_10;
      }
      else
      {
        result = sub_1C21756FC();
        if (v19 != 8)
        {
          __break(1u);
          return result;
        }
        v21 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v10, &v21, a3);
        swift_unknownObjectRelease();
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v14(v20, a3, v13);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
      ++v12;
      if (v16 == MEMORY[0x1C3BB7A60](a1, a3))
        return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20AF170()
{
  sub_1C2175834();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C21753F0();
}

uint64_t sub_1C20AF270()
{
  sub_1C2175834();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C21753F0();
}

uint64_t sub_1C20AF328()
{
  sub_1C2175834();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C21753F0();
}

uint64_t sub_1C20AF3E0()
{
  sub_1C2175834();
  return sub_1C2175858();
}

uint64_t sub_1C20AF420()
{
  sub_1C2175834();
  return sub_1C2175858();
}

uint64_t sub_1C20AF454()
{
  sub_1C2175834();
  return sub_1C2175840();
}

uint64_t sub_1C20AF488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20AF4C0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA758]);
}

uint64_t sub_1C20AF4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20AF4C0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0CB0240]);
}

uint64_t sub_1C20AF4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1C2175834();
  return a6(v6, a1, a2);
}

uint64_t sub_1C20AF50C()
{
  return sub_1C20AED84();
}

uint64_t sub_1C20AF530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20AEDCC(a1, a2, a3, a4);
}

uint64_t sub_1C20AF554(uint64_t a1)
{
  uint64_t v1;

  sub_1C2175834();
  return sub_1C2133D8C(v1, a1);
}

uint64_t sub_1C20AF58C(uint64_t a1)
{
  uint64_t v1;

  sub_1C2175834();
  return sub_1C2133D38(v1, a1);
}

uint64_t sub_1C20AF5C4(uint64_t a1)
{
  return sub_1C20AF5EC(a1);
}

uint64_t sub_1C20AF5D8(uint64_t a1)
{
  return sub_1C20AF644(a1);
}

uint64_t sub_1C20AF5EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1C2175834();
  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C2175834();
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v4 += 4;
      result = sub_1C217584C();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C20AF644(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1C2175834();
  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C2175834();
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      result = sub_1C2175858();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C20AF69C(uint64_t a1)
{
  return sub_1C20AEE18(a1);
}

uint64_t sub_1C20AF6B0(uint64_t a1)
{
  return sub_1C20AEE70(a1);
}

uint64_t sub_1C20AF6C4(uint64_t a1)
{
  return sub_1C20AEEE8(a1);
}

uint64_t sub_1C20AF6D8()
{
  return sub_1C20AEF70();
}

uint64_t sub_1C20AF6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20AEFC0(a1, a2, a3, a4);
}

uint64_t sub_1C20AF700()
{
  return sub_1C20AF170();
}

uint64_t sub_1C20AF714()
{
  return sub_1C20AF270();
}

uint64_t sub_1C20AF728()
{
  return sub_1C20AF328();
}

uint64_t sub_1C20AF73C()
{
  return sub_1C2175354();
}

uint64_t sub_1C20AF76C()
{
  return sub_1C20AF420();
}

unint64_t sub_1C20AF780(int a1)
{
  unsigned __int8 v1;
  uint64_t v2;

  if ((a1 - 58) >= 0xFFFFFFF6)
  {
    v1 = 0;
    v2 = (a1 - 48);
  }
  else
  {
    v1 = 0;
    v2 = 10;
    switch(a1)
    {
      case 'A':
      case 'a':
        return v2 | ((unint64_t)v1 << 32);
      case 'B':
      case 'b':
        v1 = 0;
        v2 = 11;
        break;
      case 'C':
      case 'c':
        v1 = 0;
        v2 = 12;
        break;
      case 'D':
      case 'd':
        v1 = 0;
        v2 = 13;
        break;
      case 'E':
      case 'e':
        v1 = 0;
        v2 = 14;
        break;
      case 'F':
      case 'f':
        v1 = 0;
        v2 = 15;
        break;
      default:
        v2 = 0;
        v1 = 1;
        break;
    }
  }
  return v2 | ((unint64_t)v1 << 32);
}

void sub_1C20AF820()
{
  qword_1EF76E180 = (uint64_t)&unk_1E7BD7740;
}

uint64_t sub_1C20AF834(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v5 = *a3;
  if (*(_BYTE *)(result + *a3) != 34 || (v8 = v5 + 1, *a3 = v5 + 1, v5 + 1 == a4))
  {
LABEL_3:
    sub_1C20AFA84();
    swift_allocError();
    *v9 = xmmword_1C2175D70;
    return swift_willThrow();
  }
  v10 = v4;
  v11 = result;
  v12 = *(unsigned __int8 *)(result + v8);
  if (v12 != 34)
  {
    v23 = v4;
    v15 = 0;
    v16 = 0;
    v13 = 0;
    v17 = 0x1EF75C000uLL;
    v18 = v5 + 1;
    while (1)
    {
      if (v12 <= 46)
      {
        if (v12 == 43)
          goto LABEL_20;
        if (v12 == 45)
LABEL_19:
          v15 = 1;
      }
      else
      {
        switch(v12)
        {
          case '/':
            goto LABEL_20;
          case '_':
            goto LABEL_19;
          case '\\':
            if (++v18 == a4)
              goto LABEL_29;
            v12 = *(unsigned __int8 *)(v11 + v18);
            if (v12 != 47)
            {
              *a3 = v18;
              goto LABEL_3;
            }
LABEL_20:
            v16 = 1;
            break;
        }
      }
      if (*(_QWORD *)(v17 + 2736) != -1)
      {
        v20 = v15;
        result = swift_once();
        v17 = 0x1EF75C000;
        v15 = v20;
      }
      if (*(_QWORD *)(qword_1EF76E180 + 16) <= (unint64_t)v12)
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if ((*(_QWORD *)(qword_1EF76E180 + 8 * v12 + 32) & 0x8000000000000000) == 0
        && __OFADD__(v13++, 1))
      {
        goto LABEL_34;
      }
      if (++v18 == a4)
      {
LABEL_29:
        *a3 = a4;
        goto LABEL_3;
      }
      v12 = *(unsigned __int8 *)(v11 + v18);
      if (v12 == 34)
      {
        *a3 = v18;
        v10 = v23;
        if ((v16 & v15 & 1) != 0)
          goto LABEL_3;
        goto LABEL_6;
      }
    }
  }
  v13 = 0;
LABEL_6:
  if ((unsigned __int128)(v13 * (__int128)3) >> 64 == (3 * v13) >> 63)
  {
    v21 = sub_1C20A8B0C(3 * v13 / 4);
    v22 = v14;
    *a3 = v8;
    sub_1C20B3BA4((uint64_t)&v21);
    if (v10)
    {
      return sub_1C20A8058(v21, v22);
    }
    else
    {
      ++*a3;
      return v21;
    }
  }
  else
  {
LABEL_35:
    __break(1u);
  }
  return result;
}

unint64_t sub_1C20AFA84()
{
  unint64_t result;

  result = qword_1EF75CF60;
  if (!qword_1EF75CF60)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for JSONDecodingError, &type metadata for JSONDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75CF60);
  }
  return result;
}

uint64_t sub_1C20AFAC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  _BYTE *v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;

  if (!result)
    return result;
  v5 = (_BYTE *)result;
  if (a2 - result < 1)
    return result;
  v8 = 0;
  v9 = 0;
  for (i = *a5; ; *a5 = i)
  {
    v11 = *(unsigned __int8 *)(a3 + i);
    if (qword_1EF75CAB0 != -1)
      result = swift_once();
    v12 = qword_1EF76E180;
    if (*(_QWORD *)(qword_1EF76E180 + 16) <= v11)
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    v13 = *(_QWORD *)(qword_1EF76E180 + 8 * v11 + 32);
    if ((v13 & 0x8000000000000000) == 0)
      goto LABEL_14;
    if ((_DWORD)v11 == 32)
      goto LABEL_4;
    if ((_DWORD)v11 != 92)
      break;
    v14 = *a5 + 1;
    *a5 = v14;
    if (*(_BYTE *)(a3 + v14) != 47)
      goto LABEL_39;
    if (*(_QWORD *)(v12 + 16) < 0x30uLL)
      goto LABEL_45;
    v13 = *(_QWORD *)(v12 + 408);
LABEL_14:
    v15 = __OFADD__(v8++, 1);
    if (v15)
      goto LABEL_44;
    v9 = v13 | (v9 << 6);
    if (v8 == 4)
    {
      v8 = 0;
      *v5 = BYTE2(v9);
      v5[1] = BYTE1(v9);
      v5[2] = v9;
      v5 += 3;
      v9 = 0;
    }
LABEL_4:
    i = *a5 + 1;
  }
  if ((_DWORD)v11 != 61)
  {
    if ((_DWORD)v11 != 34)
    {
LABEL_39:
      sub_1C20AFA84();
      swift_allocError();
      *v19 = xmmword_1C2175D70;
      return swift_willThrow();
    }
LABEL_21:
    switch(v8)
    {
      case 0:
        return result;
      case 2:
LABEL_32:
        *v5 = v9 >> 4;
        return result;
      case 3:
        *v5 = v9 >> 10;
        v5[1] = v9 >> 2;
        return result;
    }
    goto LABEL_39;
  }
  v16 = *(unsigned __int8 *)(a3 + *a5);
  if (v16 == 34)
    goto LABEL_21;
  v17 = 0;
  v18 = *a5 + 1;
  do
  {
    if (v16 != 32)
    {
      if (v16 != 61)
        goto LABEL_39;
      v15 = __OFADD__(v17++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_32;
      }
    }
    *a5 = v18;
    v16 = *(unsigned __int8 *)(a3 + v18++);
  }
  while (v16 != 34);
  switch(v8)
  {
    case 0:
      if (!v17)
        return result;
      goto LABEL_39;
    case 2:
      *v5 = v9 >> 4;
      if ((v17 | 2) != 2)
        goto LABEL_39;
      break;
    case 3:
      *v5 = v9 >> 10;
      v5[1] = v9 >> 2;
      if (v17 >= 2)
        goto LABEL_39;
      break;
    default:
      goto LABEL_39;
  }
  return result;
}

uint64_t sub_1C20AFD1C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  BOOL v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unsigned int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v68;
  uint64_t v69;

  if ((a2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(a2) & 0xF;
  else
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v9 = sub_1C21756CC();
      }
      else
      {
        if ((a2 & 0x2000000000000000) == 0)
        {
          v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v6 = sub_1C2175708();
          v7 = *(unsigned __int8 *)(v6 + v5);
          if (*(char *)(v6 + v5) < 0)
            __asm { BR              X9 }
          v8 = 1;
          goto LABEL_16;
        }
        v9 = sub_1C2175714();
      }
      v7 = v9;
LABEL_16:
      v5 += v8;
      if (v7 == 92)
      {
        if (v5 >= v3)
          goto LABEL_125;
        if ((a2 & 0x1000000000000000) != 0)
        {
          v10 = sub_1C21756CC();
        }
        else
        {
          if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
            sub_1C2175708();
          v10 = sub_1C2175714();
        }
        v5 += v11;
        switch(v10)
        {
          case '"':
          case '/':
          case '\\':
          case 'b':
          case 'f':
          case 'n':
          case 'r':
          case 't':
            break;
          case 'u':
            if (v5 >= v3)
              goto LABEL_125;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v12 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v12 = sub_1C2175714();
            }
            v14 = v13;
            v15 = sub_1C20AF780(v12);
            if ((v15 & 0x100000000) != 0)
              goto LABEL_125;
            v16 = v14 + v5;
            if (v16 >= v3)
              goto LABEL_125;
            v17 = v15;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v18 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v18 = sub_1C2175714();
            }
            v20 = v19;
            v21 = sub_1C20AF780(v18);
            if ((v21 & 0x100000000) != 0)
              goto LABEL_125;
            v22 = v20 + v16;
            if (v22 >= v3)
              goto LABEL_125;
            v23 = v21;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v24 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v24 = sub_1C2175714();
            }
            v26 = v25;
            v27 = sub_1C20AF780(v24);
            if ((v27 & 0x100000000) != 0)
              goto LABEL_125;
            v28 = v26 + v22;
            if (v28 >= v3)
              goto LABEL_125;
            v29 = v27;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v30 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v30 = sub_1C2175714();
            }
            v32 = v31;
            v33 = sub_1C20AF780(v30);
            if ((v33 & 0x100000000) != 0)
              goto LABEL_125;
            if (v17 >> 28)
            {
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              JUMPOUT(0x1C20B04BCLL);
            }
            v34 = v23 + 16 * v17;
            if (__CFADD__(v23, 16 * v17))
              goto LABEL_129;
            if (v34 >> 28)
              goto LABEL_130;
            v35 = __CFADD__(v29, 16 * v34);
            v36 = v29 + 16 * v34;
            if (v35)
              goto LABEL_131;
            if (v36 >> 28)
              goto LABEL_132;
            v37 = v33 + 16 * v36;
            if (__CFADD__((_DWORD)v33, 16 * v36))
              goto LABEL_133;
            v5 = v32 + v28;
            if (HIWORD(v37) <= 0x10u && (v37 & 0xFFFFF800) != 0xD800)
              break;
            if (v37 >= 0xE000 || v37 >> 10 >= 0x37 || v5 >= v3)
              goto LABEL_125;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v38 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v38 = sub_1C2175714();
            }
            if (v38 != 92)
              goto LABEL_125;
            v40 = v39 + v5;
            if (v39 + v5 >= v3)
              goto LABEL_125;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v41 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v41 = sub_1C2175714();
            }
            if (v41 != 117)
              goto LABEL_125;
            v43 = v42 + v40;
            if (v42 + v40 >= v3)
              goto LABEL_125;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v44 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v44 = sub_1C2175714();
            }
            v46 = v45;
            v47 = sub_1C20AF780(v44);
            if ((v47 & 0x100000000) != 0)
              goto LABEL_125;
            v48 = v46 + v43;
            if (v48 >= v3)
              goto LABEL_125;
            v49 = v47;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v50 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v50 = sub_1C2175714();
            }
            v52 = v51;
            v53 = sub_1C20AF780(v50);
            if ((v53 & 0x100000000) != 0)
              goto LABEL_125;
            v54 = v52 + v48;
            if (v54 >= v3)
              goto LABEL_125;
            v55 = v53;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v56 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v56 = sub_1C2175714();
            }
            v68 = v57;
            v58 = sub_1C20AF780(v56);
            if ((v58 & 0x100000000) != 0)
              goto LABEL_125;
            v59 = v68 + v54;
            if (v59 >= v3)
              goto LABEL_125;
            v60 = v58;
            if ((a2 & 0x1000000000000000) != 0)
            {
              v61 = sub_1C21756CC();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
                sub_1C2175708();
              v61 = sub_1C2175714();
            }
            v69 = v62;
            v63 = sub_1C20AF780(v61);
            if ((v63 & 0x100000000) != 0)
            {
LABEL_125:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
            if (v49 >> 28)
              goto LABEL_134;
            v64 = v55 + 16 * v49;
            if (__CFADD__(v55, 16 * v49))
              goto LABEL_135;
            if (v64 >> 28)
              goto LABEL_136;
            v35 = __CFADD__(v60, 16 * v64);
            v65 = v60 + 16 * v64;
            if (v35)
              goto LABEL_137;
            if (v65 >> 28)
              goto LABEL_138;
            v35 = __CFADD__((_DWORD)v63, 16 * v65);
            v66 = v63 + 16 * v65;
            if (v35)
              goto LABEL_139;
            if (v66 >> 10 != 55)
              goto LABEL_125;
            if (v37 < 0xD800)
              goto LABEL_140;
            v5 = v69 + v59;
            break;
          default:
            goto LABEL_125;
        }
      }
      sub_1C21754A4();
      if (v5 >= v3)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return 0;
}

void sub_1C20B061C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  v1 = v0[1];
  v2 = v0[2];
  if (v2 != v1)
  {
    v3 = *v0;
    do
    {
      v4 = *(unsigned __int8 *)(v3 + v2);
      v5 = v4 > 0x20;
      v6 = (1 << v4) & 0x100002600;
      if (v5 || v6 == 0)
        break;
      v0[2] = ++v2;
    }
    while (v1 != v2);
  }
}

uint64_t sub_1C20B0664()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  _OWORD *v8;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    goto LABEL_8;
  v3 = *v0;
  while (1)
  {
    v4 = *(unsigned __int8 *)(v3 + v1);
    v5 = v4 > 0x20;
    v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0)
      break;
    v0[2] = ++v1;
    if (v2 == v1)
      goto LABEL_8;
  }
  if (v2 == v1)
  {
LABEL_8:
    sub_1C20AFA84();
    swift_allocError();
    *v8 = xmmword_1C2175D80;
    return swift_willThrow();
  }
  else
  {
    v10 = *(char *)(*v0 + v1);
    if (v10 >= 0)
      v11 = v10 + 1;
    else
      v11 = ((v10 >> 6) & 0xFFFFC0FF | ((v10 & 0x3F) << 8)) + 33217;
    v12 = (v11 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v11) >> 3)) & 7)));
    return MEMORY[0x1C3BB7934](&v12);
  }
}

uint64_t sub_1C20B076C(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  unint64_t v8;
  int v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  double v18;
  char v19;

  v5 = *a3;
  if (*a3 != a4)
  {
    v9 = *(unsigned __int8 *)(result + v5);
    v10 = v9 - 48;
    if (v9 == 48)
    {
      *a3 = v5 + 1;
      if (v5 + 1 == a4)
        return 0;
      v11 = *(unsigned __int8 *)(result + v5 + 1);
      if ((v11 - 58) >= 0xFFFFFFF6)
      {
        sub_1C20AFA84();
        swift_allocError();
        v7 = xmmword_1C2175DB0;
        goto LABEL_3;
      }
      if (*(unsigned __int8 *)(result + v5 + 1) <= 0x5Bu)
      {
        if (v11 != 46 && v11 != 69)
          return 0;
        goto LABEL_35;
      }
      if (v11 != 92)
      {
        if (v11 != 101)
          return 0;
        goto LABEL_35;
      }
    }
    else
    {
      if ((v9 - 58) >= 0xF7u)
      {
        v12 = 0;
        v13 = v10;
        v14 = v5 + 1;
        while (1)
        {
          v15 = __CFADD__(v12, v13);
          v8 = v12 + v13;
          if (v15)
          {
            __break(1u);
            return result;
          }
          v16 = v14;
          if (a4 == v14)
          {
            *a3 = a4;
            return v8;
          }
          v17 = *(unsigned __int8 *)(result + v14);
          if ((v17 - 58) < 0xF6u)
            break;
          if (v8 <= 0x1999999999999999)
          {
            v13 = (v17 - 48);
            v12 = 10 * v8;
            ++v14;
            if (!__CFADD__(v13, v12))
              continue;
          }
          *a3 = v16;
          sub_1C20AFA84();
          swift_allocError();
          v7 = xmmword_1C2175D90;
          goto LABEL_3;
        }
        *a3 = v14;
        if (v17 > 91)
        {
          if (v17 == 92)
            return 0;
          if (v17 != 101)
            return v8;
        }
        else if (v17 != 46 && v17 != 69)
        {
          return v8;
        }
LABEL_35:
        *a3 = v5;
        v18 = COERCE_DOUBLE(sub_1C20B09DC(result, a2, a3, a4));
        if (v4)
          return v8;
        if ((v19 & 1) == 0 && v18 > -1.0 && v18 < 1.84467441e19 && trunc(v18) == v18)
          return (unint64_t)v18;
        goto LABEL_41;
      }
      if (v9 != 92)
      {
LABEL_41:
        sub_1C20AFA84();
        swift_allocError();
        v7 = xmmword_1C2175DA0;
        goto LABEL_3;
      }
    }
    return 0;
  }
  sub_1C20AFA84();
  swift_allocError();
  v7 = xmmword_1C2175D80;
LABEL_3:
  *v6 = v7;
  swift_willThrow();
  return v8;
}

char *sub_1C20B09DC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *result;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;

  v4 = *a3;
  if (*a3 == a4)
    goto LABEL_2;
  v7 = 0;
  result = (char *)(a1 + v4);
  v10 = *result;
  if (v10 == 92 || v10 == 78)
    return (char *)v7;
  if (v10 == 45)
  {
    v11 = v4 + 1;
    *a3 = v4 + 1;
    if (v4 + 1 == a4)
    {
      *a3 = v4;
LABEL_2:
      v5 = 13;
LABEL_3:
      sub_1C20AFA84();
      swift_allocError();
      *v6 = 0;
      v6[1] = v5;
      swift_willThrow();
      return (char *)v7;
    }
    v10 = *(unsigned __int8 *)(a1 + v11);
    if (v10 == 92)
      return 0;
  }
  else
  {
    v11 = *a3;
  }
  if (v10 == 73)
    return 0;
  if (v10 == 48)
  {
    v12 = v11 + 1;
    *a3 = v12;
    if (v12 == a4)
      return 0;
    LODWORD(v13) = *(unsigned __int8 *)(a1 + v12);
    if ((_DWORD)v13 == 92)
      return 0;
    if ((v13 - 58) >= 0xFFFFFFF6)
    {
      v5 = 12;
      goto LABEL_3;
    }
  }
  else
  {
    if ((v10 - 58) < 0xFFFFFFF7)
      goto LABEL_18;
    *a3 = v11 + 1;
    if (v11 + 1 == a4)
    {
LABEL_23:
      if (!a1)
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      v14 = a4 - v4;
      if (!__OFSUB__(a4, v4))
      {
LABEL_25:
        v15 = sub_1C2105A38(result, v14);
        if ((v16 & 1) == 0)
          return v15;
        v5 = 6;
        goto LABEL_3;
      }
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    LODWORD(v13) = *(unsigned __int8 *)(a1 + v11 + 1);
    if ((_DWORD)v13 == 92)
      return 0;
    v17 = v11 + 2;
    while ((v13 - 58) >= 0xFFFFFFF6)
    {
      *a3 = v17;
      if (a4 == v17)
        goto LABEL_23;
      v7 = 0;
      LODWORD(v13) = *(unsigned __int8 *)(a1 + v17++);
      if ((_DWORD)v13 == 92)
        return (char *)v7;
    }
    v12 = v17 - 1;
  }
  if ((_DWORD)v13 == 46)
  {
    *a3 = v12 + 1;
    if (v12 + 1 == a4)
      goto LABEL_2;
    v18 = *(unsigned __int8 *)(a1 + v12 + 1);
    if ((v18 - 58) < 0xFFFFFFF6)
    {
      v5 = 1;
      if (v18 == 92)
        return 0;
      goto LABEL_3;
    }
    v13 = v12 + 2;
    *a3 = v12 + 2;
    if (v12 + 2 == a4)
    {
LABEL_42:
      if (!a1)
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      v14 = a4 - v4;
      if (!__OFSUB__(a4, v4))
        goto LABEL_25;
      __break(1u);
    }
    LODWORD(v13) = *(unsigned __int8 *)(a1 + v13);
    if ((_DWORD)v13 == 92)
      return 0;
    v12 += 3;
    while ((v13 - 58) >= 0xFFFFFFF6)
    {
      *a3 = v12;
      if (a4 == v12)
        goto LABEL_42;
      v7 = 0;
      v13 = *(unsigned __int8 *)(a1 + v12++);
      if ((_DWORD)v13 == 92)
        return (char *)v7;
    }
    --v12;
  }
  if ((v13 | 0x20) != 0x65)
    goto LABEL_73;
  v19 = v12 + 1;
  *a3 = v12 + 1;
  if (v12 + 1 == a4)
    goto LABEL_2;
  v20 = *(unsigned __int8 *)(a1 + v19);
  switch(v20)
  {
    case '+':
      goto LABEL_84;
    case '\\':
      return 0;
    case '-':
LABEL_84:
      v19 = v12 + 2;
      *a3 = v12 + 2;
      if (v12 + 2 == a4)
        goto LABEL_2;
      v20 = *(unsigned __int8 *)(a1 + v19);
      if (v20 == 92)
        return 0;
      break;
  }
  if ((v20 - 58) < 0xFFFFFFF6)
  {
LABEL_18:
    v5 = 1;
    goto LABEL_3;
  }
  v21 = v19 + 1;
  *a3 = v19 + 1;
  if (v19 + 1 != a4)
  {
LABEL_66:
    v22 = *(unsigned __int8 *)(a1 + v21);
    if (v22 == 92)
      return 0;
    v21 = v19 + 2;
    while (1)
    {
      v19 = (v22 - 58);
      if (v19 < 0xFFFFFFF6)
        break;
      *a3 = v21;
      if (a4 == v21)
        goto LABEL_62;
      v7 = 0;
      v22 = *(unsigned __int8 *)(a1 + v21++);
      if (v22 == 92)
        return (char *)v7;
    }
    v12 = v21 - 1;
LABEL_73:
    if (!a1)
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    v14 = v12 - v4;
    if (!__OFSUB__(v12, v4))
      goto LABEL_25;
    __break(1u);
    goto LABEL_77;
  }
LABEL_62:
  if (a1)
  {
    v14 = a4 - v4;
    if (!__OFSUB__(a4, v4))
      goto LABEL_25;
    __break(1u);
    goto LABEL_66;
  }
LABEL_81:
  __break(1u);
  return result;
}

unint64_t sub_1C20B0D20(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  unint64_t result;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;

  v5 = *a3;
  if (*a3 == a4)
    goto LABEL_2;
  if (*(_BYTE *)(a1 + v5) == 45)
  {
    v9 = v5 + 1;
    *a3 = v9;
    if (v9 == a4)
    {
LABEL_2:
      sub_1C20AFA84();
      swift_allocError();
      v7 = xmmword_1C2175D80;
LABEL_3:
      *v6 = v7;
      return swift_willThrow();
    }
    if (*(unsigned __int8 *)(a1 + v9) - 58 <= 0xFFFFFFF5)
    {
      sub_1C20AFA84();
      swift_allocError();
      v7 = xmmword_1C2175DA0;
      goto LABEL_3;
    }
    result = sub_1C20B076C(a1, a2, a3, a4);
    if (v4)
      return result;
    if ((v11 & 1) == 0)
    {
      v12 = result;
      if ((result & 0x8000000000000000) == 0)
        return -(uint64_t)result;
      result = 0x8000000000000000;
      if (v12 != 0x8000000000000000)
        goto LABEL_19;
      return result;
    }
    return 0;
  }
  result = sub_1C20B076C(a1, a2, a3, a4);
  if (v4)
    return result;
  if ((v10 & 1) != 0)
    return 0;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_19:
    sub_1C20AFA84();
    swift_allocError();
    v7 = xmmword_1C2175D90;
    goto LABEL_3;
  }
  return result;
}

char *sub_1C20B0E58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t (*v9)();
  unint64_t v10;
  uint64_t v11;

  v1 = v0[1];
  v2 = v0[2] + 1;
  v0[2] = v2;
  if (v2 == v1)
    return 0;
  v4 = *v0;
  result = (char *)(*v0 + v2);
  v6 = *result;
  if (v6 == 34)
  {
    v7 = 0;
    v8 = v2;
    if (v4)
      goto LABEL_5;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = 0;
  v8 = v2;
  do
  {
    v11 = v8 + 1;
    if (v6 == 92)
    {
      if (v11 == v1 || (v8 += 2, v8 == v1))
      {
LABEL_15:
        v3 = 0;
        v0[2] = v1;
        return (char *)v3;
      }
      v7 = 1;
    }
    else
    {
      ++v8;
      if (v11 == v1)
        goto LABEL_15;
    }
    v6 = *(unsigned __int8 *)(v4 + v8);
  }
  while (v6 != 34);
  v0[2] = v8;
  if (!v4)
    goto LABEL_18;
LABEL_5:
  if (!__OFSUB__(v8, v2))
  {
    v9 = sub_1C20AD098(result, v8 - v2);
    v3 = (uint64_t)v9;
    v0[2] = v8 + 1;
    if (((v10 != 0) & v7) == 1)
    {
      v3 = sub_1C20AFD1C((uint64_t)v9, v10);
      swift_bridgeObjectRelease();
    }
    return (char *)v3;
  }
LABEL_19:
  __break(1u);
  return result;
}

_QWORD *sub_1C20B0F84()
{
  return sub_1C20B10E8(sub_1C20B076C);
}

char *sub_1C20B0FD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v9;
  char *result;
  uint64_t v11;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    goto LABEL_2;
  v4 = *v0;
  v3 = 13;
  while (1)
  {
    v5 = *(unsigned __int8 *)(v4 + v1);
    v6 = v5 > 0x20;
    v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0)
      break;
    v0[2] = ++v1;
    if (v2 == v1)
      goto LABEL_9;
  }
  if (v2 == v1)
  {
LABEL_2:
    v3 = 13;
LABEL_9:
    sub_1C20AFA84();
    swift_allocError();
    *v9 = 0;
    v9[1] = v3;
    return (char *)swift_willThrow();
  }
  if (*(_BYTE *)(*v0 + v1) != 34 || (result = sub_1C20B0E58(), !v11))
  {
    v3 = 5;
    goto LABEL_9;
  }
  return result;
}

_QWORD *sub_1C20B1098()
{
  return sub_1C20B10E8((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C20B0D20);
}

_QWORD *sub_1C20B10E8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;
  __int128 *v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t *, uint64_t);
  _QWORD v38[4];
  __int128 v39;
  char v40;
  _QWORD v41[4];
  __int128 v42;
  char v43;
  uint64_t v44;

  v37 = a1;
  v3 = v2;
  v4 = v1;
  v44 = *MEMORY[0x1E0C80C00];
  v5 = sub_1C2175468();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + 2;
  v11 = v1[2];
  v12 = v1[1];
  if (v11 != v12)
  {
    v13 = *v1;
    while (1)
    {
      v14 = *(unsigned __int8 *)(v13 + v11);
      v15 = v14 > 0x20;
      v16 = (1 << v14) & 0x100002600;
      if (v15 || v16 == 0)
        break;
      *v10 = ++v11;
      if (v12 == v11)
        goto LABEL_8;
    }
    if (v12 != v11)
    {
      v21 = *v1;
      if (*(_BYTE *)(*v1 + v11) != 34)
      {
        v26 = v1[3];
        v27 = *((_BYTE *)v1 + 48);
        v41[0] = *v1;
        v41[1] = v12;
        v41[2] = v11;
        v41[3] = v26;
        v42 = *((_OWORD *)v1 + 2);
        v43 = v27;
        swift_retain();
        v1 = v41;
        v28 = v37(v21, v12, v10, v12);
        if (v3)
        {
LABEL_16:
          swift_release();
          return v1;
        }
        v1 = (_QWORD *)v28;
        v31 = v29;
        swift_release();
        if ((v31 & 1) == 0)
          return v1;
        goto LABEL_22;
      }
      v1[2] = v11 + 1;
      v22 = v1[3];
      v23 = *((_BYTE *)v1 + 48);
      v38[0] = v21;
      v38[1] = v12;
      v38[2] = v11 + 1;
      v38[3] = v22;
      v39 = *((_OWORD *)v1 + 2);
      v40 = v23;
      v36 = v22;
      swift_retain();
      v1 = v38;
      v35 = v21;
      v24 = v37(v21, v12, v10, v12);
      if (v3)
        goto LABEL_16;
      v1 = (_QWORD *)v24;
      LODWORD(v36) = v25;
      swift_release();
      if ((v36 & 1) != 0)
      {
        v4[2] = v11;
        sub_1C20B0FD4();
        sub_1C217545C();
        sub_1C217542C();
        v33 = v32;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        if (v33 >> 60 != 15)
          __asm { BR              X10 }
        __break(1u);
        JUMPOUT(0x1C20B15DCLL);
      }
      v30 = *v10;
      if (*v10 != v12)
      {
        if (*(_BYTE *)(v35 + v30) == 34)
        {
          *v10 = v30 + 1;
          return v1;
        }
LABEL_22:
        sub_1C20AFA84();
        swift_allocError();
        v19 = xmmword_1C2175DA0;
        goto LABEL_9;
      }
    }
  }
LABEL_8:
  sub_1C20AFA84();
  swift_allocError();
  v19 = xmmword_1C2175D80;
LABEL_9:
  *v18 = v19;
  swift_willThrow();
  return v1;
}

uint64_t sub_1C20B15EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  __int128 *v17;
  __int128 v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  char v24;
  uint64_t v25;
  char v26;
  char *v27;
  char v28;
  char v29;
  uint64_t v30;
  double v31;
  char v32;
  float v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  uint64_t v54;

  v2 = v1;
  v3 = v0;
  v54 = *MEMORY[0x1E0C80C00];
  v4 = sub_1C2175468();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v0 + 16);
  v10 = *(_QWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 8);
  if (v10 == v11)
    goto LABEL_8;
  v12 = *(_QWORD *)v0;
  while (1)
  {
    v13 = *(unsigned __int8 *)(v12 + v10);
    v14 = v13 > 0x20;
    v15 = (1 << v13) & 0x100002600;
    if (v14 || v15 == 0)
      break;
    *v9 = ++v10;
    if (v11 == v10)
      goto LABEL_8;
  }
  if (v11 == v10)
    goto LABEL_8;
  v20 = *(_QWORD *)v0;
  if (*(_BYTE *)(*(_QWORD *)v0 + v10) == 34)
  {
    *(_QWORD *)(v0 + 16) = v10 + 1;
    v21 = *(_QWORD *)(v0 + 24);
    v22 = *(_BYTE *)(v0 + 48);
    v42 = v20;
    v43 = v11;
    v44 = v10 + 1;
    v45 = v21;
    v46 = *(_OWORD *)(v0 + 32);
    v47 = v22;
    v41 = v21;
    swift_retain();
    v40 = v20;
    v23 = sub_1C20B09DC(v20, v11, v9, v11);
    if (v2)
      return swift_release();
    v29 = v24;
    v39 = v23;
    result = swift_release();
    if ((v29 & 1) == 0)
    {
      v30 = *v9;
      if (*v9 != v11)
      {
        if (*(_BYTE *)(v40 + v30) == 34)
        {
          *v9 = v30 + 1;
          return result;
        }
        goto LABEL_23;
      }
LABEL_8:
      sub_1C20AFA84();
      swift_allocError();
      v18 = xmmword_1C2175D80;
LABEL_9:
      *v17 = v18;
      return swift_willThrow();
    }
    *(_QWORD *)(v3 + 16) = v10;
    v35 = sub_1C20B0FD4();
    v36 = v34;
    if ((v35 != (char *)5136718 || v34 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v35 != (char *)6712905 || v36 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v35 != (char *)1718503725 || v36 != 0xE400000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v35 != (char *)0x7974696E69666E49 || v36 != 0xE800000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v35 != (char *)0x74696E69666E492DLL || v36 != 0xE900000000000079)
      && (sub_1C21757C8() & 1) == 0)
    {
      sub_1C217545C();
      sub_1C217542C();
      v38 = v37;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      if (v38 >> 60 != 15)
        __asm { BR              X10 }
      __break(1u);
      JUMPOUT(0x1C20B1CA4);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 24);
    v26 = *(_BYTE *)(v0 + 48);
    v48 = *(_QWORD *)v0;
    v49 = v11;
    v50 = v10;
    v51 = v25;
    v52 = *(_OWORD *)(v0 + 32);
    v53 = v26;
    swift_retain();
    v27 = sub_1C20B09DC(v20, v11, v9, v11);
    if (v2)
      return swift_release();
    v31 = *(double *)&v27;
    v32 = v28;
    result = swift_release();
    if ((v32 & 1) != 0 || (v33 = v31, (~LODWORD(v33) & 0x7F800000) == 0))
    {
LABEL_23:
      sub_1C20AFA84();
      swift_allocError();
      v18 = xmmword_1C2175DA0;
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1C20B1CB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char *v9;
  char v10;
  double v11;
  char v12;
  float v13;
  _OWORD v14[3];
  char v15;
  uint64_t v16;

  if (!result)
    goto LABEL_8;
  v6 = result;
  v7 = a2 - result;
  if (a2 - result < 1)
    goto LABEL_8;
  v16 = 0;
  v8 = *(_OWORD *)(a3 + 16);
  v14[0] = *(_OWORD *)a3;
  v14[1] = v8;
  v14[2] = *(_OWORD *)(a3 + 32);
  v15 = *(_BYTE *)(a3 + 48);
  sub_1C20B40C0((uint64_t)v14);
  v9 = sub_1C20B09DC(v6, v7, &v16, v7);
  if (v4)
    return sub_1C20B40E8((uint64_t)v14);
  v11 = *(double *)&v9;
  v12 = v10;
  result = sub_1C20B40E8((uint64_t)v14);
  if ((v12 & 1) == 0 && v16 == v7 && (v13 = v11, (~LODWORD(v13) & 0x7F800000) != 0))
  {
    *(float *)a4 = v13;
    *(_BYTE *)(a4 + 4) = 0;
  }
  else
  {
LABEL_8:
    *(_DWORD *)a4 = 0;
    *(_BYTE *)(a4 + 4) = 1;
  }
  return result;
}

uint64_t sub_1C20B1DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  __int128 *v17;
  __int128 v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  uint64_t v51;

  v2 = v1;
  v3 = v0;
  v51 = *MEMORY[0x1E0C80C00];
  v4 = sub_1C2175468();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v0 + 16);
  v10 = *(_QWORD *)(v0 + 16);
  v11 = *(_QWORD *)(v0 + 8);
  if (v10 == v11)
    goto LABEL_8;
  v12 = *(_QWORD *)v0;
  while (1)
  {
    v13 = *(unsigned __int8 *)(v12 + v10);
    v14 = v13 > 0x20;
    v15 = (1 << v13) & 0x100002600;
    if (v14 || v15 == 0)
      break;
    *v9 = ++v10;
    if (v11 == v10)
      goto LABEL_8;
  }
  if (v11 == v10)
    goto LABEL_8;
  v20 = *(_QWORD *)v0;
  if (*(_BYTE *)(*(_QWORD *)v0 + v10) == 34)
  {
    *(_QWORD *)(v0 + 16) = v10 + 1;
    v21 = *(_QWORD *)(v0 + 24);
    v22 = *(_BYTE *)(v0 + 48);
    v39 = v20;
    v40 = v11;
    v41 = v10 + 1;
    v42 = v21;
    v43 = *(_OWORD *)(v0 + 32);
    v44 = v22;
    v38 = v21;
    swift_retain();
    v37 = v20;
    v23 = sub_1C20B09DC(v20, v11, v9, v11);
    if (v2)
      return swift_release();
    v28 = v24;
    v36[1] = v23;
    result = swift_release();
    if ((v28 & 1) == 0)
    {
      v29 = *v9;
      if (*v9 != v11)
      {
        if (*(_BYTE *)(v37 + v29) == 34)
        {
          *v9 = v29 + 1;
          return result;
        }
        goto LABEL_42;
      }
LABEL_8:
      sub_1C20AFA84();
      swift_allocError();
      v18 = xmmword_1C2175D80;
LABEL_9:
      *v17 = v18;
      return swift_willThrow();
    }
    *(_QWORD *)(v3 + 16) = v10;
    v32 = sub_1C20B0FD4();
    v33 = v31;
    if ((v32 != (char *)5136718 || v31 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v32 != (char *)6712905 || v33 != 0xE300000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v32 != (char *)1718503725 || v33 != 0xE400000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v32 != (char *)0x7974696E69666E49 || v33 != 0xE800000000000000)
      && (sub_1C21757C8() & 1) == 0
      && (v32 != (char *)0x74696E69666E492DLL || v33 != 0xE900000000000079)
      && (sub_1C21757C8() & 1) == 0)
    {
      sub_1C217545C();
      sub_1C217542C();
      v35 = v34;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      if (v35 >> 60 != 15)
        __asm { BR              X10 }
      __break(1u);
      JUMPOUT(0x1C20B2464);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 24);
    v26 = *(_BYTE *)(v0 + 48);
    v45 = *(_QWORD *)v0;
    v46 = v11;
    v47 = v10;
    v48 = v25;
    v49 = *(_OWORD *)(v0 + 32);
    v50 = v26;
    swift_retain();
    sub_1C20B09DC(v20, v11, v9, v11);
    if (v2)
      return swift_release();
    v30 = v27;
    result = swift_release();
    if ((v30 & 1) != 0)
    {
LABEL_42:
      sub_1C20AFA84();
      swift_allocError();
      v18 = xmmword_1C2175DA0;
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1C20B2474@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _OWORD v16[3];
  char v17;

  if (!result)
    goto LABEL_8;
  v7 = result;
  v8 = a2 - result;
  if (a2 - result < 1)
    goto LABEL_8;
  v15 = 0;
  v10 = *(_OWORD *)(a3 + 16);
  v16[0] = *(_OWORD *)a3;
  v16[1] = v10;
  v16[2] = *(_OWORD *)(a3 + 32);
  v17 = *(_BYTE *)(a3 + 48);
  sub_1C20B40C0((uint64_t)v16);
  v11 = a4(v7, v8, &v15, v8);
  if (v5)
    return sub_1C20B40E8((uint64_t)v16);
  v13 = v11;
  v14 = v12;
  result = sub_1C20B40E8((uint64_t)v16);
  if ((v14 & 1) == 0 && v15 == v8)
  {
    *(_QWORD *)a5 = v13;
    *(_BYTE *)(a5 + 8) = 0;
  }
  else
  {
LABEL_8:
    *(_QWORD *)a5 = 0;
    *(_BYTE *)(a5 + 8) = 1;
  }
  return result;
}

uint64_t sub_1C20B2554(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;
  int v11;

  v2 = v1[2];
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v6 = v1[2];
    if (v2 == v1[1])
      return 1;
LABEL_5:
    if ((*(_BYTE *)(*v1 + v6) & 0xDFu) - 91 >= 0xFFFFFFE6)
    {
      result = 0;
      v1[2] = v2;
      return result;
    }
    return 1;
  }
  v4 = v1[1];
  if (v2 == v4)
    return 0;
  if (*(unsigned __int8 *)(*v1 + v2) != *(unsigned __int8 *)(a1 + 32))
    return 0;
  v6 = v3 + v2;
  v7 = v2 + 1;
  v8 = (unsigned __int8 *)(a1 + 33);
  v9 = v3 - 1;
  while (v9)
  {
    if (v4 != v7)
    {
      v10 = *v8++;
      v11 = *(unsigned __int8 *)(*v1 + v7++);
      --v9;
      if (v11 == v10)
        continue;
    }
    return 0;
  }
  v1[2] = v6;
  if (v6 != v4)
    goto LABEL_5;
  return 1;
}

uint64_t sub_1C20B260C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    return 0;
  v3 = *v0;
  while (1)
  {
    v4 = *(unsigned __int8 *)(v3 + v1);
    v5 = v4 > 0x20;
    v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0)
      break;
    v0[2] = ++v1;
    if (v2 == v1)
      return 0;
  }
  if (v2 == v1 || *(_BYTE *)(*v0 + v1) != 110)
    return 0;
  else
    return sub_1C20B2554((uint64_t)&unk_1E7BD75F8);
}

uint64_t sub_1C20B267C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v9;
  char v10;
  int v12;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    goto LABEL_2;
  v4 = *v0;
  v3 = 13;
  do
  {
    v5 = *(unsigned __int8 *)(v4 + v1);
    v6 = v5 > 0x20;
    v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0)
      break;
    v0[2] = ++v1;
  }
  while (v2 != v1);
  if (v2 == v1)
  {
LABEL_2:
    v3 = 13;
  }
  else
  {
    v12 = *(unsigned __int8 *)(*v0 + v1);
    if (v12 == 116)
    {
      if ((sub_1C20B2554((uint64_t)&unk_1E7BD7648) & 1) != 0)
      {
        v10 = 1;
        return v10 & 1;
      }
    }
    else if (v12 == 102 && (sub_1C20B2554((uint64_t)&unk_1E7BD7620) & 1) != 0)
    {
      v10 = 0;
      return v10 & 1;
    }
    v3 = 4;
  }
  sub_1C20AFA84();
  swift_allocError();
  *v9 = 0;
  v9[1] = v3;
  swift_willThrow();
  return v10 & 1;
}

uint64_t sub_1C20B2774()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  _QWORD *v9;
  char v10;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    goto LABEL_2;
  v4 = *v0;
  v3 = 13;
  do
  {
    v5 = *(unsigned __int8 *)(v4 + v1);
    v6 = v5 > 0x20;
    v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0)
      break;
    v0[2] = ++v1;
  }
  while (v2 != v1);
  if (v2 == v1)
  {
LABEL_2:
    v3 = 13;
  }
  else if (*(_BYTE *)(*v0 + v1) == 34)
  {
    v12 = sub_1C20B0E58();
    if (v13)
    {
      v14 = v12;
      v15 = v13;
      if (v12 == (char *)0x65736C6166 && v13 == 0xE500000000000000 || (sub_1C21757C8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v10 = 0;
        return v10 & 1;
      }
      if (v14 == (char *)1702195828 && v15 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        v10 = 1;
        return v10 & 1;
      }
      v16 = sub_1C21757C8();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_23;
    }
    v3 = 4;
  }
  else
  {
    v3 = 11;
  }
  sub_1C20AFA84();
  swift_allocError();
  *v9 = 0;
  v9[1] = v3;
  swift_willThrow();
  return v10 & 1;
}

void sub_1C20B2904()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    goto LABEL_8;
  v3 = *v0;
  v4 = v1 + 2;
  while (1)
  {
    v5 = *(unsigned __int8 *)(v3 + v4 - 2);
    v6 = v5 > 0x20;
    v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0)
      break;
    v0[2] = v4++ - 1;
    if (v4 - v2 == 2)
      goto LABEL_8;
  }
  if (v4 - v2 == 2)
    goto LABEL_8;
  v10 = *v0;
  if (*(_BYTE *)(*v0 + v4 - 2) == 34)
  {
    v0[2] = v4 - 1;
    if (v4 - v2 == 1)
    {
LABEL_8:
      sub_1C20AFA84();
      swift_allocError();
      *v9 = xmmword_1C2175D80;
      swift_willThrow();
      return;
    }
    v11 = v4 - 2;
    v12 = *(unsigned __int8 *)(v10 + v4 - 1);
    if (v12 == 92)
      goto LABEL_23;
    v13 = v4 - 1;
    if (v12 != 34)
    {
      v14 = v4;
      while (v2 != v14)
      {
        v15 = *(unsigned __int8 *)(v10 + v14);
        if (v15 == 92)
          goto LABEL_23;
        ++v14;
        if (v15 == 34)
        {
          v13 = v14 - 1;
          v0[2] = v13;
          goto LABEL_19;
        }
      }
      v0[2] = v2;
      goto LABEL_8;
    }
LABEL_19:
    if (v10)
    {
      if (!__OFSUB__(v13, v4 - 1))
      {
        v11 = v13 + 1;
LABEL_23:
        v0[2] = v11;
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1C20B2A80(uint64_t a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  char v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  char *v41;
  uint64_t v42;
  size_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  _QWORD *v53;
  uint64_t result;
  _QWORD *v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  _QWORD *v63;
  char **v64;

  v3 = i;
  v4 = *(_QWORD *)(a1 + 24);
  sub_1C20B2904();
  if (v2)
    return i;
  v8 = v5;
  v9 = v6;
  for (i = 13; ; i = 13)
  {
    v11 = *(_QWORD *)(v3 + 8);
    v10 = *(_QWORD *)(v3 + 16);
    if ((v7 & 1) != 0)
    {
      if (v10 == v11)
        goto LABEL_77;
      v17 = *(_QWORD *)v3;
      while (1)
      {
        v18 = *(unsigned __int8 *)(v17 + v10);
        v14 = v18 > 0x20;
        v19 = (1 << v18) & 0x100002600;
        if (v14 || v19 == 0)
          break;
        *(_QWORD *)(v3 + 16) = ++v10;
        if (v11 == v10)
          goto LABEL_77;
      }
      if (v11 == v10)
        goto LABEL_77;
      v29 = *(_QWORD *)v3;
      if (*(_BYTE *)(*(_QWORD *)v3 + v10) != 34 || (i = v3, v30 = sub_1C20B0E58(), !v31))
      {
        i = 5;
LABEL_77:
        sub_1C20AFA84();
        swift_allocError();
        *v53 = 0;
        v53[1] = i;
        goto LABEL_78;
      }
      v32 = (char *)v31;
      v33 = *(_QWORD *)(v3 + 16);
      v34 = MEMORY[0x1E0DEE9D8];
      if (v33 == v11)
        goto LABEL_74;
      while (1)
      {
        v35 = *(unsigned __int8 *)(v29 + v33);
        if (v35 > 0x20 || ((1 << v35) & 0x100002600) == 0)
          break;
        *(_QWORD *)(v3 + 16) = ++v33;
        if (v11 == v33)
          goto LABEL_74;
      }
      if (v11 == v33)
      {
LABEL_74:
        sub_1C20AFA84();
        swift_allocError();
        *v52 = xmmword_1C2175D80;
LABEL_75:
        swift_willThrow();
        swift_bridgeObjectRelease();
        return i;
      }
      if (v35 != 58)
      {
        sub_1C20AFA84();
        swift_allocError();
        *v63 = 0;
        v63[1] = 0;
        goto LABEL_75;
      }
      *(_QWORD *)(v3 + 16) = v33 + 1;
      if ((v31 & 0x1000000000000000) != 0)
      {
        v41 = v30;
        v50 = sub_1C2175510();
        v34 = MEMORY[0x1E0DEE9D8];
        i = v50;
        if (!v50)
          goto LABEL_56;
      }
      else if ((v31 & 0x2000000000000000) != 0)
      {
        i = HIBYTE(v31) & 0xF;
        v41 = v30;
        if (!i)
          goto LABEL_56;
      }
      else
      {
        i = (unint64_t)v30 & 0xFFFFFFFFFFFFLL;
        v41 = v30;
        if (((unint64_t)v30 & 0xFFFFFFFFFFFFLL) == 0)
        {
LABEL_56:
          v42 = v34;
LABEL_64:
          if (*(_QWORD *)(v4 + 16))
          {
            i = v4;
            v46 = sub_1C20A9BC4((unsigned __int8 *)(v42 + 32), *(unsigned __int8 **)(v42 + 16));
            if ((v47 & 1) != 0)
            {
              i = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v46);
              swift_bridgeObjectRelease();
              swift_release();
              return i;
            }
          }
          swift_release();
          if ((*(_BYTE *)(v3 + 48) & 1) == 0)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v64 = v41;
            v64[1] = v32;
            goto LABEL_78;
          }
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      if (i < 1)
      {
        v42 = v34;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDF8);
        v42 = swift_allocObject();
        v43 = _swift_stdlib_malloc_size((const void *)v42);
        *(_QWORD *)(v42 + 16) = i;
        *(_QWORD *)(v42 + 24) = 2 * v43 - 64;
      }
      swift_bridgeObjectRetain();
      v44 = sub_1C21756E4();
      if ((v45 & 1) != 0)
        goto LABEL_93;
      if (v44 != i)
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    if (v10 == v11)
      goto LABEL_73;
    v12 = *(_QWORD *)v3;
    while (1)
    {
      v13 = *(unsigned __int8 *)(v12 + v10);
      v14 = v13 > 0x20;
      v15 = (1 << v13) & 0x100002600;
      if (v14 || v15 == 0)
        break;
      *(_QWORD *)(v3 + 16) = ++v10;
      if (v11 == v10)
        goto LABEL_73;
    }
    if (v11 == v10)
    {
LABEL_73:
      sub_1C20AFA84();
      swift_allocError();
      *v51 = xmmword_1C2175D80;
      goto LABEL_78;
    }
    if (*(_BYTE *)(*(_QWORD *)v3 + v10) != 58)
      goto LABEL_80;
    *(_QWORD *)(v3 + 16) = v10 + 1;
    if (*(_QWORD *)(v4 + 16))
    {
      v21 = sub_1C20A9BC4(v8, v9);
      if ((v22 & 1) != 0)
        return *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v21);
    }
    if ((*(_BYTE *)(v3 + 48) & 1) == 0)
    {
      if (v8)
      {
        v56 = sub_1C20AD098((char *)v8, (uint64_t)v9);
        if (v57)
        {
          i = (uint64_t)v56;
          v58 = v57;
          sub_1C20AFA84();
          swift_allocError();
          *v59 = i;
          v59[1] = v58;
          goto LABEL_78;
        }
        goto LABEL_95;
      }
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
LABEL_25:
    i = v3;
    sub_1C20B3100();
    v24 = *(_QWORD *)(v3 + 8);
    v23 = *(_QWORD *)(v3 + 16);
    if (v23 == v24)
      goto LABEL_73;
    v25 = *(_QWORD *)v3;
    while (1)
    {
      v26 = *(unsigned __int8 *)(v25 + v23);
      v14 = v26 > 0x20;
      v27 = (1 << v26) & 0x100002600;
      if (v14 || v27 == 0)
        break;
      *(_QWORD *)(v3 + 16) = ++v23;
      if (v24 == v23)
        goto LABEL_73;
    }
    if (v24 == v23)
      goto LABEL_73;
    v37 = *(_QWORD *)v3;
    if (*(_BYTE *)(*(_QWORD *)v3 + v23) == 125)
      break;
    while (1)
    {
      v38 = *(unsigned __int8 *)(v37 + v23);
      v14 = v38 > 0x20;
      v39 = (1 << v38) & 0x100002600;
      if (v14 || v39 == 0)
        break;
      *(_QWORD *)(v3 + 16) = ++v23;
      if (v24 == v23)
        goto LABEL_73;
    }
    if (v24 == v23)
      goto LABEL_73;
    if (*(_BYTE *)(*(_QWORD *)v3 + v23) != 44)
    {
LABEL_80:
      sub_1C20AFA84();
      swift_allocError();
      *v55 = 0;
      v55[1] = 0;
LABEL_78:
      swift_willThrow();
      return i;
    }
    *(_QWORD *)(v3 + 16) = v23 + 1;
    sub_1C20B2904();
    v8 = v48;
    v9 = v49;
  }
  *(_QWORD *)(v3 + 16) = v23 + 1;
  v60 = *(_QWORD *)(v3 + 40);
  v61 = __OFADD__(v60, 1);
  v62 = v60 + 1;
  if (v61)
    goto LABEL_92;
  *(_QWORD *)(v3 + 40) = v62;
  if (*(_QWORD *)(v3 + 32) >= v62)
    return 0;
LABEL_96:
  result = sub_1C2175774();
  __break(1u);
  return result;
}

uint64_t sub_1C20B301C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  _OWORD *v9;
  _QWORD *v10;

  v3 = v1[1];
  v2 = v1[2];
  if (v2 == v3)
    goto LABEL_8;
  v4 = *v1;
  while (1)
  {
    v5 = *(unsigned __int8 *)(v4 + v2);
    v6 = v5 > 0x20;
    v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0)
      break;
    v1[2] = ++v2;
    if (v3 == v2)
      goto LABEL_8;
  }
  if (v3 == v2)
  {
LABEL_8:
    sub_1C20AFA84();
    swift_allocError();
    *v9 = xmmword_1C2175D80;
    return swift_willThrow();
  }
  if (*(unsigned __int8 *)(*v1 + v2) != result)
  {
    sub_1C20AFA84();
    swift_allocError();
    *v10 = 0;
    v10[1] = 0;
    return swift_willThrow();
  }
  v1[2] = v2 + 1;
  return result;
}

void sub_1C20B3100()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  _OWORD *v8;
  void *v9;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 != v2)
  {
    v3 = *v0;
    while (1)
    {
      v4 = *(unsigned __int8 *)(v3 + v1);
      v5 = v4 > 0x20;
      v6 = (1 << v4) & 0x100002600;
      if (v5 || v6 == 0)
        break;
      v0[2] = ++v1;
      if (v2 == v1)
        goto LABEL_8;
    }
    if (v2 != v1)
    {
      switch(*(_BYTE *)(*v0 + v1))
      {
        case '[':
          sub_1C20B39DC();
          return;
        case '\\':
        case ']':
        case '^':
        case '_':
        case 'a':
        case 'b':
        case 'c':
        case 'd':
        case 'e':
        case 'g':
        case 'h':
        case 'i':
        case 'j':
        case 'k':
        case 'l':
        case 'm':
        case 'o':
        case 'p':
        case 'q':
        case 'r':
        case 's':
        case 'u':
        case 'v':
        case 'w':
        case 'x':
        case 'y':
        case 'z':
          goto LABEL_14;
        case 'f':
          v9 = &unk_1E7BD75A8;
          goto LABEL_18;
        case 'n':
          v9 = &unk_1E7BD7580;
          goto LABEL_18;
        case 't':
          v9 = &unk_1E7BD75D0;
LABEL_18:
          if ((sub_1C20B2554((uint64_t)v9) & 1) != 0)
            return;
          break;
        case '{':
          sub_1C20B3718();
          return;
        default:
          if (*(_BYTE *)(*v0 + v1) == 34)
            sub_1C20B3644();
          else
LABEL_14:
            sub_1C20B1DA8();
          return;
      }
    }
  }
LABEL_8:
  sub_1C20AFA84();
  swift_allocError();
  *v8 = xmmword_1C2175D80;
  swift_willThrow();
}

uint64_t sub_1C20B3234()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    return 0;
  v3 = *v0;
  while (1)
  {
    v4 = *(unsigned __int8 *)(v3 + v1);
    v5 = v4 > 0x20;
    v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0)
      break;
    v0[2] = ++v1;
    if (v2 == v1)
      return 0;
  }
  if (v2 == v1 || *(_BYTE *)(*v0 + v1) != 125)
    return 0;
  v0[2] = v1 + 1;
  v9 = v0[5];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v0[5] = v11;
    if (v0[4] >= v11)
      return 1;
  }
  result = sub_1C2175774();
  __break(1u);
  return result;
}

void sub_1C20B3328(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  uint64_t v25;
  __int128 *v27;
  __int128 v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a3;
  v7 = sub_1C2175690();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v10, v13);
  v16 = (char *)&v36 - v15;
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v36 - v18;
  v21 = v3[1];
  v20 = v3[2];
  if (v20 == v21)
    goto LABEL_8;
  v22 = *v3;
  while (1)
  {
    v23 = *(unsigned __int8 *)(v22 + v20);
    v24 = v23 > 0x20;
    v25 = (1 << v23) & 0x100002600;
    if (v24 || v25 == 0)
      break;
    v3[2] = ++v20;
    if (v21 == v20)
      goto LABEL_8;
  }
  if (v21 == v20)
  {
LABEL_8:
    sub_1C20AFA84();
    swift_allocError();
    v28 = xmmword_1C2175D80;
LABEL_9:
    *v27 = v28;
    swift_willThrow();
    return;
  }
  if (*(_BYTE *)(*v3 + v20) == 34)
  {
    sub_1C20B2904();
    if (!v4)
    {
      if ((v31 & 1) != 0)
      {
        v34 = sub_1C20B0FD4();
        sub_1C20B7844((uint64_t)v34, v35, a1, a2, (uint64_t)v16);
        v32 = *(_QWORD *)(a1 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v16, 1, a1) == 1)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
          goto LABEL_20;
        }
        v12 = v16;
      }
      else
      {
        sub_1C20B7688(v29, v30, a1, a2, (uint64_t)v19);
        v32 = *(_QWORD *)(a1 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v19, 1, a1) == 1)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v7);
LABEL_20:
          sub_1C20AFA84();
          swift_allocError();
          v28 = xmmword_1C2175DC0;
          goto LABEL_9;
        }
        v12 = v19;
      }
      goto LABEL_25;
    }
  }
  else
  {
    v33 = sub_1C20B10E8((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C20B0D20);
    if (!v4)
    {
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(a2 + 32))(v33, a1, a2);
      v32 = *(_QWORD *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, a1) == 1)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
        goto LABEL_20;
      }
LABEL_25:
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v37, v12, a1);
    }
  }
}

uint64_t sub_1C20B35D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  v2 = v0[1];
  v1 = v0[2];
  if (v1 == v2)
    return 0;
  v3 = *v0;
  while (1)
  {
    v4 = *(unsigned __int8 *)(v3 + v1);
    v5 = v4 > 0x20;
    v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0)
      break;
    v0[2] = ++v1;
    if (v2 == v1)
      return 0;
  }
  if (v2 == v1 || *(_BYTE *)(*v0 + v1) != 93)
    return 0;
  v0[2] = v1 + 1;
  return 1;
}

void sub_1C20B3644()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *v0;
  v2 = v0[2];
  if (*(_BYTE *)(*v0 + v2) != 34)
  {
    v7 = 5;
LABEL_14:
    sub_1C20AFA84();
    swift_allocError();
    *v8 = 0;
    v8[1] = v7;
    swift_willThrow();
    return;
  }
  v3 = v2 + 1;
  v0[2] = v2 + 1;
  v4 = v0[1];
  if (v3 == v4)
  {
LABEL_13:
    v7 = 13;
    goto LABEL_14;
  }
  v5 = *(unsigned __int8 *)(v1 + v3);
  if (v5 != 34)
  {
    while (1)
    {
      v6 = v3 + 1;
      if (v5 == 92)
      {
        if (v6 == v4)
          break;
        v6 = v3 + 2;
      }
      if (v6 == v4)
        break;
      v5 = *(unsigned __int8 *)(v1 + v6);
      v3 = v6;
      if (v5 == 34)
        goto LABEL_10;
    }
    v0[2] = v4;
    goto LABEL_13;
  }
  v6 = v3;
LABEL_10:
  v0[2] = v6 + 1;
}

void sub_1C20B3718()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  __int128 *v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C20B301C(123);
  if (!v1)
  {
    v2 = v0[5];
    v3 = __OFSUB__(v2, 1);
    v4 = v2 - 1;
    if (v3)
    {
      __break(1u);
LABEL_49:
      v0[2] = v4 + 1;
      v28 = v0[5];
      v3 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (!v3)
      {
        v0[5] = v29;
        if (v0[4] >= v29)
          return;
        sub_1C2175774();
        __break(1u);
      }
      __break(1u);
      return;
    }
    v0[5] = v4;
    if (v4 < 0)
    {
      sub_1C20AFA84();
      swift_allocError();
      v26 = xmmword_1C2175DD0;
LABEL_44:
      *v25 = v26;
    }
    else
    {
      if ((sub_1C20B3234() & 1) != 0)
        return;
      v6 = v0[1];
      v5 = v0[2];
      if (v5 != v6)
      {
LABEL_6:
        v7 = *v0;
        do
        {
          v8 = *(unsigned __int8 *)(v7 + v5);
          v9 = v8 > 0x20;
          v10 = (1 << v8) & 0x100002600;
          if (v9 || v10 == 0)
            break;
          v0[2] = ++v5;
        }
        while (v6 != v5);
        goto LABEL_12;
      }
      while (1)
      {
LABEL_12:
        sub_1C20B3644();
        v12 = v0[2];
        if (v12 == v6)
          goto LABEL_43;
        v13 = *v0;
        while (1)
        {
          v14 = *(unsigned __int8 *)(v13 + v12);
          v9 = v14 > 0x20;
          v15 = (1 << v14) & 0x100002600;
          if (v9 || v15 == 0)
            break;
          v0[2] = ++v12;
          if (v6 == v12)
            goto LABEL_43;
        }
        if (v6 == v12)
          goto LABEL_43;
        if (*(_BYTE *)(*v0 + v12) != 58)
          break;
        v0[2] = v12 + 1;
        sub_1C20B3100();
        v6 = v0[1];
        v4 = v0[2];
        if (v4 == v6)
          goto LABEL_43;
        v17 = *v0;
        while (1)
        {
          v18 = *(unsigned __int8 *)(v17 + v4);
          v9 = v18 > 0x20;
          v19 = (1 << v18) & 0x100002600;
          if (v9 || v19 == 0)
            break;
          v0[2] = ++v4;
          if (v6 == v4)
            goto LABEL_43;
        }
        if (v6 == v4)
          goto LABEL_43;
        v21 = *v0;
        if (*(_BYTE *)(*v0 + v4) == 125)
          goto LABEL_49;
        while (1)
        {
          v22 = *(unsigned __int8 *)(v21 + v4);
          v9 = v22 > 0x20;
          v23 = (1 << v22) & 0x100002600;
          if (v9 || v23 == 0)
            break;
          v0[2] = ++v4;
          if (v6 == v4)
            goto LABEL_43;
        }
        if (v6 == v4)
        {
LABEL_43:
          sub_1C20AFA84();
          swift_allocError();
          v26 = xmmword_1C2175D80;
          goto LABEL_44;
        }
        if (*(_BYTE *)(*v0 + v4) != 44)
          break;
        v5 = v4 + 1;
        v0[2] = v5;
        if (v5 != v6)
          goto LABEL_6;
      }
      sub_1C20AFA84();
      swift_allocError();
      *v27 = 0;
      v27[1] = 0;
    }
    swift_willThrow();
  }
}

uint64_t sub_1C20B39DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  _OWORD *v19;
  _QWORD *v20;

  result = sub_1C20B301C(91);
  if (!v1)
  {
    v4 = v0[1];
    v3 = v0[2];
    if (v3 == v4)
      goto LABEL_9;
    v5 = *v0;
    while (1)
    {
      v6 = *(unsigned __int8 *)(v5 + v3);
      v7 = v6 > 0x20;
      v8 = (1 << v6) & 0x100002600;
      if (v7 || v8 == 0)
        break;
      v0[2] = ++v3;
      if (v4 == v3)
        goto LABEL_9;
    }
    if (v4 == v3 || *(_BYTE *)(*v0 + v3) != 93)
    {
LABEL_9:
      for (result = sub_1C20B3100(result); ; result = sub_1C20B3100(result))
      {
        v10 = v0[1];
        v3 = v0[2];
        if (v3 == v10)
          goto LABEL_29;
        v11 = *v0;
        while (1)
        {
          v12 = *(unsigned __int8 *)(v11 + v3);
          v7 = v12 > 0x20;
          v13 = (1 << v12) & 0x100002600;
          if (v7 || v13 == 0)
            break;
          v0[2] = ++v3;
          if (v10 == v3)
            goto LABEL_29;
        }
        if (v10 == v3)
          goto LABEL_29;
        v15 = *v0;
        if (*(_BYTE *)(*v0 + v3) == 93)
          goto LABEL_34;
        while (1)
        {
          v16 = *(unsigned __int8 *)(v15 + v3);
          v7 = v16 > 0x20;
          v17 = (1 << v16) & 0x100002600;
          if (v7 || v17 == 0)
            break;
          v0[2] = ++v3;
          if (v10 == v3)
            goto LABEL_29;
        }
        if (v10 == v3)
        {
LABEL_29:
          sub_1C20AFA84();
          swift_allocError();
          *v19 = xmmword_1C2175D80;
          return swift_willThrow();
        }
        if (*(_BYTE *)(*v0 + v3) != 44)
          break;
        v0[2] = v3 + 1;
      }
      sub_1C20AFA84();
      swift_allocError();
      *v20 = 0;
      v20[1] = 0;
      return swift_willThrow();
    }
    else
    {
LABEL_34:
      v0[2] = v3 + 1;
    }
  }
  return result;
}

void sub_1C20B3BA4(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1C20B3C08@<X0>(uint64_t *a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v2;
  LOWORD(v9) = a2;
  BYTE2(v9) = BYTE2(a2);
  HIBYTE(v9) = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  v12 = BYTE6(a2);
  result = sub_1C20AFAC8((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), v5, v4, a1);
  v7 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v3 = v8;
  v3[1] = v7;
  return result;
}

uint64_t sub_1C20B3DF8(int *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_1C217530C();
  v9 = *a1;
  v10 = a1[1];
  if ((int)v10 < (int)v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_1C21752C4();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v11 = result;
  result = sub_1C21752E8();
  v12 = v9 - result;
  if (__OFSUB__(v9, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = v10 - v9;
  v14 = sub_1C21752DC();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  return sub_1C20AFAC8(v11 + v12, v11 + v12 + v15, a2, a3, a4);
}

uint64_t sub_1C20B3EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1C21752C4();
  v11 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1C21752DC();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  result = sub_1C20B2474(v11, v17, a4, a5, (uint64_t)&v18);
  if (!v5)
    return v18;
  return result;
}

unint64_t sub_1C20B3F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned __int8 v17;

  result = sub_1C21752C4();
  v9 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1C21752DC();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = sub_1C20B1CB4(v9, v15, a4, (uint64_t)&v16);
  if (!v4)
    return v16 | ((unint64_t)v17 << 32);
  return result;
}

uint64_t sub_1C20B4028(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  char v5;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1C21079B8(v2, 0);
      result = sub_1C21756E4();
      if ((v5 & 1) != 0)
        break;
      if (result == v2)
        return (uint64_t)v3;
      __break(1u);
LABEL_9:
      v2 = sub_1C2175510();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1C20B40C0(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1C20B40E8(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t destroy for JSONScanner()
{
  return swift_release();
}

uint64_t initializeWithCopy for JSONScanner(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONScanner(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSONScanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONScanner(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONScanner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONScanner()
{
  return &type metadata for JSONScanner;
}

uint64_t (*sub_1C20B42E4(unint64_t a1, unint64_t a2))()
{
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t (*v86)();
  unint64_t v88;
  uint64_t v89;
  char *v90;

  v4 = (char *)MEMORY[0x1E0DEE9D8];
  v90 = (char *)MEMORY[0x1E0DEE9D8];
  if ((a2 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a2) & 0xF;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_194;
  v6 = 4 * v5;
  v7 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v7) = 1;
  v8 = 4 << v7;
  v9 = 15;
  do
  {
    v12 = v9 & 0xC;
    v13 = v9;
    if (v12 == v8)
      v13 = sub_1C2152200(v9, a1, a2);
    v14 = v13 >> 16;
    if (v13 >> 16 >= v5)
    {
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
      JUMPOUT(0x1C20B5028);
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      v16 = sub_1C2175540();
      if (v12 != v8)
        goto LABEL_22;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v88 = a1;
      v89 = a2 & 0xFFFFFFFFFFFFFFLL;
      v16 = *((_BYTE *)&v88 + v14);
      if (v12 != v8)
        goto LABEL_22;
    }
    else
    {
      v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0)
        v15 = sub_1C2175708();
      v16 = *(_BYTE *)(v15 + v14);
      if (v12 != v8)
      {
LABEL_22:
        if ((a2 & 0x1000000000000000) == 0)
          goto LABEL_23;
        goto LABEL_26;
      }
    }
    v9 = sub_1C2152200(v9, a1, a2);
    if ((a2 & 0x1000000000000000) == 0)
    {
LABEL_23:
      v9 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_28;
    }
LABEL_26:
    if (v5 <= v9 >> 16)
      goto LABEL_198;
    v9 = sub_1C217551C();
LABEL_28:
    if (v16 != 92)
    {
      v22 = v90;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_1C214E1A4(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
      v24 = *((_QWORD *)v22 + 2);
      v23 = *((_QWORD *)v22 + 3);
      if (v24 >= v23 >> 1)
        v22 = sub_1C214E1A4((char *)(v23 > 1), v24 + 1, 1, v22);
      *((_QWORD *)v22 + 2) = v24 + 1;
      v22[v24 + 32] = v16;
      v90 = v22;
      continue;
    }
    if (v6 == v9 >> 14)
      goto LABEL_195;
    v17 = v9 & 0xC;
    v18 = v9;
    if (v17 == v8)
      v18 = sub_1C2152200(v9, a1, a2);
    v19 = v18 >> 16;
    if (v18 >> 16 >= v5)
      goto LABEL_199;
    if ((a2 & 0x1000000000000000) != 0)
    {
      v21 = sub_1C2175540();
      if (v17 != v8)
        goto LABEL_45;
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v88 = a1;
      v89 = a2 & 0xFFFFFFFFFFFFFFLL;
      v21 = *((_BYTE *)&v88 + v19);
      if (v17 != v8)
        goto LABEL_45;
    }
    else
    {
      v20 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0)
        v20 = sub_1C2175708();
      v21 = *(_BYTE *)(v20 + v19);
      if (v17 != v8)
      {
LABEL_45:
        if ((a2 & 0x1000000000000000) != 0)
          goto LABEL_49;
        goto LABEL_46;
      }
    }
    v9 = sub_1C2152200(v9, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_49:
      if (v5 <= v9 >> 16)
        goto LABEL_200;
      v25 = sub_1C217551C();
      goto LABEL_51;
    }
LABEL_46:
    v25 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_51:
    if ((v21 - 56) >= 0xF8u)
    {
      v29 = v21 - 48;
      if (v6 != v25 >> 14)
      {
        v30 = v25;
        if ((v25 & 0xC) == v8)
          v30 = sub_1C2152200(v25, a1, a2);
        v31 = v30 >> 16;
        if (v30 >> 16 >= v5)
          goto LABEL_201;
        if ((a2 & 0x1000000000000000) != 0)
        {
          v33 = sub_1C2175540();
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          v88 = a1;
          v89 = a2 & 0xFFFFFFFFFFFFFFLL;
          v33 = *((_BYTE *)&v88 + v31);
        }
        else
        {
          v32 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v32 = sub_1C2175708();
          v33 = *(_BYTE *)(v32 + v31);
        }
        v34 = v25;
        if ((v25 & 0xC) == v8)
        {
          v34 = sub_1C2152200(v25, a1, a2);
          if ((a2 & 0x1000000000000000) != 0)
            goto LABEL_144;
LABEL_71:
          v9 = (v34 & 0xFFFFFFFFFFFF0000) + 65540;
        }
        else
        {
          if ((a2 & 0x1000000000000000) == 0)
            goto LABEL_71;
LABEL_144:
          if (v5 <= v34 >> 16)
            goto LABEL_202;
          v9 = sub_1C217551C();
        }
        if ((v33 - 56) >= 0xF8u)
        {
          v64 = v33 - 48;
          if (v6 == v9 >> 14)
            goto LABEL_170;
          v65 = v9;
          if ((v9 & 0xC) == v8)
            v65 = sub_1C2152200(v9, a1, a2);
          v66 = v65 >> 16;
          if (v65 >> 16 >= v5)
            goto LABEL_203;
          if ((a2 & 0x1000000000000000) != 0)
          {
            v68 = sub_1C2175540();
          }
          else if ((a2 & 0x2000000000000000) != 0)
          {
            v88 = a1;
            v89 = a2 & 0xFFFFFFFFFFFFFFLL;
            v68 = *((_BYTE *)&v88 + v66);
          }
          else
          {
            v67 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
            if ((a1 & 0x1000000000000000) == 0)
              v67 = sub_1C2175708();
            v68 = *(_BYTE *)(v67 + v66);
          }
          v69 = v9;
          if ((v9 & 0xC) == v8)
          {
            v69 = sub_1C2152200(v9, a1, a2);
            if ((a2 & 0x1000000000000000) != 0)
              goto LABEL_167;
LABEL_165:
            v70 = (v69 & 0xFFFFFFFFFFFF0000) + 65540;
          }
          else
          {
            if ((a2 & 0x1000000000000000) == 0)
              goto LABEL_165;
LABEL_167:
            if (v5 <= v69 >> 16)
              goto LABEL_205;
            v70 = sub_1C217551C();
          }
          if ((v68 - 56) < 0xF8u)
          {
LABEL_170:
            v71 = v90;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v71 = sub_1C214E1A4(0, *((_QWORD *)v71 + 2) + 1, 1, v71);
              v90 = v71;
            }
            v73 = *((_QWORD *)v71 + 2);
            v72 = *((_QWORD *)v71 + 3);
            if (v73 >= v72 >> 1)
              v90 = sub_1C214E1A4((char *)(v72 > 1), v73 + 1, 1, v71);
            v74 = v64 + 8 * v29;
            v75 = v73;
          }
          else
          {
            if ((v21 - 48) > 3u)
              goto LABEL_206;
            v9 = v70;
            v76 = (v21 << 6) + 8 * v64 + v68 - 48;
            swift_bridgeObjectRetain();
            sub_1C214E104();
            v77 = (char *)*((_QWORD *)v90 + 2);
            sub_1C214E14C(v77);
            v75 = (uint64_t)v77;
            v74 = v76;
          }
          v78 = sub_1C214E18C(v75, v74);
          nullsub_1(v78, v79, v80);
          swift_bridgeObjectRelease();
          continue;
        }
      }
      v26 = v90;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
      v63 = *((_QWORD *)v26 + 2);
      v62 = *((_QWORD *)v26 + 3);
      if (v63 >= v62 >> 1)
        v26 = sub_1C214E1A4((char *)(v62 > 1), v63 + 1, 1, v26);
      *((_QWORD *)v26 + 2) = v63 + 1;
      v26[v63 + 32] = v29;
      swift_bridgeObjectRelease();
LABEL_10:
      v90 = v26;
      v9 = v25;
      continue;
    }
    switch(v21)
    {
      case '"':
      case '\'':
      case '?':
      case '\\':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v28 = *((_QWORD *)v26 + 2);
        v27 = *((_QWORD *)v26 + 3);
        if (v28 >= v27 >> 1)
          v26 = sub_1C214E1A4((char *)(v27 > 1), v28 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v28 + 1;
        v26[v28 + 32] = v21;
        goto LABEL_10;
      case 'a':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v36 = *((_QWORD *)v26 + 2);
        v35 = *((_QWORD *)v26 + 3);
        if (v36 >= v35 >> 1)
          v26 = sub_1C214E1A4((char *)(v35 > 1), v36 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v36 + 1;
        v10 = &v26[v36];
        v11 = 7;
        goto LABEL_9;
      case 'b':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v38 = *((_QWORD *)v26 + 2);
        v37 = *((_QWORD *)v26 + 3);
        if (v38 >= v37 >> 1)
          v26 = sub_1C214E1A4((char *)(v37 > 1), v38 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v38 + 1;
        v10 = &v26[v38];
        v11 = 8;
        goto LABEL_9;
      case 'f':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v40 = *((_QWORD *)v26 + 2);
        v39 = *((_QWORD *)v26 + 3);
        if (v40 >= v39 >> 1)
          v26 = sub_1C214E1A4((char *)(v39 > 1), v40 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v40 + 1;
        v10 = &v26[v40];
        v11 = 12;
        goto LABEL_9;
      case 'n':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v42 = *((_QWORD *)v26 + 2);
        v41 = *((_QWORD *)v26 + 3);
        if (v42 >= v41 >> 1)
          v26 = sub_1C214E1A4((char *)(v41 > 1), v42 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v42 + 1;
        v10 = &v26[v42];
        v11 = 10;
        goto LABEL_9;
      case 'r':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v44 = *((_QWORD *)v26 + 2);
        v43 = *((_QWORD *)v26 + 3);
        if (v44 >= v43 >> 1)
          v26 = sub_1C214E1A4((char *)(v43 > 1), v44 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v44 + 1;
        v10 = &v26[v44];
        v11 = 13;
        goto LABEL_9;
      case 't':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v46 = *((_QWORD *)v26 + 2);
        v45 = *((_QWORD *)v26 + 3);
        if (v46 >= v45 >> 1)
          v26 = sub_1C214E1A4((char *)(v45 > 1), v46 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v46 + 1;
        v10 = &v26[v46];
        v11 = 9;
        goto LABEL_9;
      case 'v':
        v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
        v48 = *((_QWORD *)v26 + 2);
        v47 = *((_QWORD *)v26 + 3);
        if (v48 >= v47 >> 1)
          v26 = sub_1C214E1A4((char *)(v47 > 1), v48 + 1, 1, v26);
        *((_QWORD *)v26 + 2) = v48 + 1;
        v10 = &v26[v48];
        v11 = 11;
LABEL_9:
        v10[32] = v11;
        goto LABEL_10;
      case 'x':
        if (v6 == v25 >> 14)
          goto LABEL_195;
        v49 = v25 & 0xC;
        v50 = v25;
        if (v49 == v8)
          v50 = sub_1C2152200(v25, a1, a2);
        v51 = v50 >> 16;
        if (v50 >> 16 >= v5)
          goto LABEL_204;
        if ((a2 & 0x1000000000000000) != 0)
        {
          v53 = sub_1C2175540();
          if (v49 != v8)
            goto LABEL_117;
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          v88 = a1;
          v89 = a2 & 0xFFFFFFFFFFFFFFLL;
          v53 = *((_BYTE *)&v88 + v51);
          if (v49 != v8)
            goto LABEL_117;
        }
        else
        {
          v52 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v52 = sub_1C2175708();
          v53 = *(_BYTE *)(v52 + v51);
          if (v49 != v8)
          {
LABEL_117:
            if ((a2 & 0x1000000000000000) == 0)
              goto LABEL_118;
            goto LABEL_121;
          }
        }
        v25 = sub_1C2152200(v25, a1, a2);
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_118:
          v9 = (v25 & 0xFFFFFFFFFFFF0000) + 65540;
          goto LABEL_123;
        }
LABEL_121:
        if (v5 <= v25 >> 16)
          goto LABEL_207;
        v9 = sub_1C217551C();
LABEL_123:
        if ((v53 - 58) > 0xF5u)
        {
          v54 = -48;
        }
        else if ((v53 - 71) > 0xF9u)
        {
          v54 = -55;
        }
        else
        {
          if ((v53 - 103) <= 0xF9u)
          {
LABEL_195:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          v54 = -87;
        }
        v55 = v53 + v54;
        if (v6 == v9 >> 14)
          goto LABEL_188;
        v56 = v9;
        if ((v9 & 0xC) == v8)
          v56 = sub_1C2152200(v9, a1, a2);
        v57 = v56 >> 16;
        if (v56 >> 16 >= v5)
          goto LABEL_208;
        if ((a2 & 0x1000000000000000) != 0)
        {
          v59 = sub_1C2175540();
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          v88 = a1;
          v89 = a2 & 0xFFFFFFFFFFFFFFLL;
          v59 = *((_BYTE *)&v88 + v57);
        }
        else
        {
          v58 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v58 = sub_1C2175708();
          v59 = *(_BYTE *)(v58 + v57);
        }
        v60 = v9;
        if ((v9 & 0xC) == v8)
        {
          v60 = sub_1C2152200(v9, a1, a2);
          if ((a2 & 0x1000000000000000) == 0)
          {
LABEL_142:
            v61 = (v60 & 0xFFFFFFFFFFFF0000) + 65540;
            goto LABEL_181;
          }
        }
        else if ((a2 & 0x1000000000000000) == 0)
        {
          goto LABEL_142;
        }
        if (v5 <= v60 >> 16)
          goto LABEL_209;
        v61 = sub_1C217551C();
LABEL_181:
        if ((v59 - 58) > 0xF5u)
        {
          v81 = -48;
        }
        else if ((v59 - 71) > 0xF9u)
        {
          v81 = -55;
        }
        else
        {
          if ((v59 - 103) < 0xFAu)
            goto LABEL_188;
          v81 = -87;
        }
        v55 = v59 + v81 + 16 * v55;
        v9 = v61;
LABEL_188:
        v82 = v90;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v82 = sub_1C214E1A4(0, *((_QWORD *)v82 + 2) + 1, 1, v82);
        v84 = *((_QWORD *)v82 + 2);
        v83 = *((_QWORD *)v82 + 3);
        if (v84 >= v83 >> 1)
          v82 = sub_1C214E1A4((char *)(v83 > 1), v84 + 1, 1, v82);
        *((_QWORD *)v82 + 2) = v84 + 1;
        v82[v84 + 32] = v55;
        swift_bridgeObjectRelease();
        v90 = v82;
        break;
      default:
        goto LABEL_195;
    }
  }
  while (v6 != v9 >> 14);
  v4 = v90;
LABEL_194:
  v85 = *((_QWORD *)v4 + 2);
  swift_bridgeObjectRetain();
  v86 = sub_1C20AD098(v4 + 32, v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v86;
}

void sub_1C20B5184()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  v1 = *(unsigned __int8 **)(v0 + 40);
  v2 = *(unsigned __int8 **)(v0 + 48);
  while (v1 != v2)
  {
    v3 = *v1;
    if (v3 > 0x23)
      break;
    if (((1 << v3) & 0x100002600) != 0)
    {
      *(_QWORD *)(v0 + 40) = ++v1;
    }
    else
    {
      if (v3 != 35)
        return;
      *(_QWORD *)(v0 + 40) = v1 + 1;
      if (v1 + 1 == v2)
        return;
      v4 = v1[1];
      v1 += 2;
      *(_QWORD *)(v0 + 40) = v1;
      if (v4 != 10 && v4 != 13)
      {
        while (v1 != v2)
        {
          v6 = *v1++;
          v5 = v6;
          *(_QWORD *)(v0 + 40) = v1;
          if (v6 == 10 || v5 == 13)
            goto LABEL_4;
        }
        return;
      }
    }
LABEL_4:
    ;
  }
}

unsigned __int8 *sub_1C20B5220()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  int v4;

  v2 = *(unsigned __int8 **)(v0 + 40);
  v1 = *(unsigned __int8 **)(v0 + 48);
  if (v2 != v1)
  {
    v3 = *(unsigned __int8 **)(v0 + 40);
    do
    {
      v4 = *v3;
      if ((v4 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v4 != 95 && (v4 - 48) > 9)
        break;
      *(_QWORD *)(v0 + 40) = ++v3;
    }
    while (v3 != v1);
  }
  sub_1C20B5184();
  return v2;
}

uint64_t (*sub_1C20B52A4())()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  int v4;
  BOOL v5;

  v1 = *(char **)(v0 + 40);
  v2 = *(char **)(v0 + 48);
  if (v1 == v2)
    return 0;
  if ((*v1 & 0xDFu) - 91 < 0xFFFFFFE6)
    return 0;
  *(_QWORD *)(v0 + 40) = v1 + 1;
  if (v1 + 1 == v2)
    return 0;
  v3 = 1;
  while (1)
  {
    v4 = v1[v3];
    v5 = (v4 - 58) > 0xFFFFFFF5 || (v4 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
    if (!v5 && (v4 - 46) >= 2 && v4 != 95)
      break;
    *(_QWORD *)(v0 + 40) = &v1[++v3];
    if (&v1[v3] == v2)
      return 0;
  }
  if (v4 != 93)
    return 0;
  else
    return sub_1C20AD098(v1, v3);
}

uint64_t sub_1C20B5354(unsigned __int8 a1, _BYTE *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t result;
  unsigned __int8 *v9;
  BOOL v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  _BYTE *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  _BYTE *v18;

  v3 = *(unsigned __int8 **)(v2 + 40);
  *a2 = 0;
  v4 = *(unsigned __int8 **)(v2 + 48);
  if (v3 == v4)
  {
LABEL_40:
    sub_1C20B727C();
    swift_allocError();
    *v18 = 0;
    return swift_willThrow();
  }
  else
  {
    v5 = a1;
    v6 = v3 + 1;
    v7 = *v3;
    *(_QWORD *)(v2 + 40) = v3 + 1;
    if (v7 != a1)
    {
      result = 0;
      v9 = v3;
      while (1)
      {
        if (v7 == 92)
        {
          *a2 = 1;
          if (v6 == v4)
            goto LABEL_40;
          v11 = v9[1];
          v12 = v9 + 2;
          *(_QWORD *)(v2 + 40) = v9 + 2;
          if (v11 - 56 >= 0xFFFFFFF8)
          {
            v17 = v4;
            if (v12 != v4)
            {
              v17 = v9 + 2;
              if (*v12 - 56 >= 0xFFFFFFF8)
              {
                *(_QWORD *)(v2 + 40) = v9 + 3;
                v17 = v4;
                if (v9 + 3 != v4)
                {
                  v17 = v9 + 3;
                  if (v9[3] - 56 >= 0xFFFFFFF8)
                  {
                    if (v11 > 0x33)
                      goto LABEL_40;
                    v17 = v9 + 4;
                    *(_QWORD *)(v2 + 40) = v9 + 4;
                  }
                }
              }
            }
            v10 = __OFADD__(result++, 1);
            if (v10)
              goto LABEL_42;
            v9 = v17;
            if (v17 == v4)
              goto LABEL_40;
          }
          else
          {
            switch(v11)
            {
              case '"':
              case '\'':
              case '?':
              case '\\':
              case 'a':
              case 'b':
              case 'f':
              case 'n':
              case 'r':
              case 't':
              case 'v':
                v10 = __OFADD__(result++, 1);
                if (!v10)
                  goto LABEL_7;
                goto LABEL_43;
              case 'x':
                if (v12 == v4)
                  goto LABEL_40;
                if ((*v12 - 58) <= 0xF5u)
                {
                  v13 = *v12 - 65;
                  if (v13 > 0x25 || ((1 << v13) & 0x3F0000003FLL) == 0)
                    goto LABEL_40;
                }
                v14 = v9 + 3;
                *(_QWORD *)(v2 + 40) = v9 + 3;
                v12 = v4;
                if (v9 + 3 == v4)
                  goto LABEL_22;
                if ((*v14 - 58) > 0xF5u)
                  goto LABEL_21;
                v15 = *v14 - 65;
                if (v15 > 0x25)
                {
                  v12 = v9 + 3;
                  v10 = __OFADD__(result++, 1);
                  if (v10)
                    goto LABEL_39;
                }
                else
                {
                  v16 = 1 << v15;
                  v12 = v9 + 3;
                  if ((v16 & 0x3F0000003FLL) != 0)
                  {
LABEL_21:
                    v12 = v9 + 4;
                    *(_QWORD *)(v2 + 40) = v9 + 4;
                  }
LABEL_22:
                  v10 = __OFADD__(result++, 1);
                  if (v10)
                  {
LABEL_39:
                    __break(1u);
                    goto LABEL_40;
                  }
                }
LABEL_7:
                v9 = v12;
                if (v12 == v4)
                  goto LABEL_40;
                break;
              default:
                goto LABEL_40;
            }
          }
        }
        else
        {
          v10 = __OFADD__(result++, 1);
          if (v10)
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            JUMPOUT(0x1C20B5598);
          }
          v9 = v6;
          if (v6 == v4)
            goto LABEL_40;
        }
        v6 = v9 + 1;
        v7 = *v9;
        *(_QWORD *)(v2 + 40) = v9 + 1;
        if (v7 == v5)
          goto LABEL_4;
      }
    }
    result = 0;
LABEL_4:
    *(_QWORD *)(v2 + 40) = v3;
  }
  return result;
}

_BYTE *sub_1C20B56F4(_BYTE *result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unsigned __int8 *v4;
  int v5;
  unsigned __int8 *v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 *v9;
  unsigned __int8 v10;
  char v11;
  char v12;
  unsigned __int8 v13;
  char v14;
  unsigned __int8 v15;
  char v16;

  if (!result || a2 - (uint64_t)result < 1)
    return result;
  v4 = *(unsigned __int8 **)(a3 + 40);
  v5 = *v4;
  if (v5 != a4)
  {
    while (1)
    {
      if (v5 == 92)
      {
        v7 = v4[1];
        v6 = v4 + 2;
        if ((v7 - 56) >= 0xF8u)
        {
          LOBYTE(v5) = v7 - 48;
          v8 = *v6;
          if ((*v6 - 56) >= 0xF8u)
          {
            v6 = v4 + 4;
            v10 = v4[3];
            v9 = v4 + 3;
            v11 = v8 - 48;
            LOBYTE(v5) = v11 + 8 * v5;
            v12 = (v7 << 6) + 8 * v11 + v10 - 48;
            if ((v10 - 56) < 0xF8u)
              v6 = v9;
            else
              LOBYTE(v5) = v12;
          }
          goto LABEL_9;
        }
        LOBYTE(v5) = 7;
        switch(v4[1])
        {
          case 'a':
            break;
          case 'b':
            LOBYTE(v5) = 8;
            break;
          case 'f':
            LOBYTE(v5) = 12;
            break;
          case 'n':
            LOBYTE(v5) = 10;
            break;
          case 'r':
            LOBYTE(v5) = 13;
            break;
          case 't':
            LOBYTE(v5) = 9;
            break;
          case 'v':
            LOBYTE(v5) = 11;
            break;
          case 'x':
            v13 = *v6;
            if ((*v6 - 58) > 0xF5u)
            {
              v14 = -48;
            }
            else if ((v13 - 71) > 0xF9u)
            {
              v14 = -55;
            }
            else
            {
              if ((v13 - 103) < 0xFAu)
              {
                __break(1u);
                JUMPOUT(0x1C20B58C0);
              }
              v14 = -87;
            }
            LOBYTE(v5) = v13 + v14;
            v6 = v4 + 3;
            v15 = v4[3];
            if ((v15 - 58) > 0xF5u)
            {
              v16 = -48;
              goto LABEL_36;
            }
            if ((v15 - 71) > 0xF9u)
            {
              v16 = -55;
              goto LABEL_36;
            }
            if ((v15 - 103) >= 0xFAu)
            {
              v16 = -87;
LABEL_36:
              LOBYTE(v5) = v15 + v16 + 16 * v5;
              v6 = v4 + 4;
              break;
            }
            break;
          default:
            LOBYTE(v5) = v4[1];
            break;
        }
      }
      else
      {
        v6 = v4 + 1;
      }
LABEL_9:
      *result++ = v5;
      v5 = *v6;
      v4 = v6;
      if (v5 == a4)
        goto LABEL_5;
    }
  }
  v6 = *(unsigned __int8 **)(a3 + 40);
LABEL_5:
  *(_QWORD *)(a3 + 40) = v6 + 1;
  return result;
}

uint64_t (*sub_1C20B5920(unsigned __int8 a1))()
{
  uint64_t v1;
  char *v3;
  char *v4;
  int v5;
  char v6;
  unsigned __int8 *v7;
  uint64_t (*v8)();
  unsigned __int8 *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(char **)(v1 + 40);
  v4 = *(char **)(v1 + 48);
  if (v3 == v4)
    return 0;
  v5 = *v3;
  if (v5 == a1)
  {
    v6 = 0;
    v7 = *(unsigned __int8 **)(v1 + 40);
  }
  else
  {
    v6 = 0;
    v7 = (unsigned __int8 *)(v3 + 2);
    do
    {
      while (1)
      {
        v9 = v7 - 1;
        if (v5 != 92)
          break;
        if (v9 == (unsigned __int8 *)v4 || v7 == (unsigned __int8 *)v4)
        {
LABEL_14:
          v8 = 0;
          *(_QWORD *)(v1 + 40) = v4;
          return v8;
        }
        v5 = *v7;
        v6 = 1;
        if (v5 == a1)
          goto LABEL_15;
        v7 += 2;
      }
      if (v9 == (unsigned __int8 *)v4)
        goto LABEL_14;
      v5 = *(v7++ - 1);
    }
    while (v5 != a1);
    v7 -= 2;
LABEL_15:
    *(_QWORD *)(v1 + 40) = v7;
  }
  v8 = sub_1C20AD098(v3, v7 - (unsigned __int8 *)v3);
  v11 = v10;
  *(_QWORD *)(v1 + 40) = v7 + 1;
  sub_1C20B5184();
  if (v11 && (v6 & 1) != 0)
  {
    v8 = sub_1C20B42E4((unint64_t)v8, v11);
    swift_bridgeObjectRelease();
  }
  return v8;
}

void sub_1C20B5A40()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  int v4;
  int v5;
  unsigned __int8 *v6;
  unint64_t v7;
  char v8;
  int v9;
  _BYTE *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unint64_t v15;
  unsigned __int8 *v16;
  int v17;
  unint64_t v18;

  v2 = *(unsigned __int8 **)(v0 + 40);
  v1 = *(unsigned __int8 **)(v0 + 48);
  if (v2 == v1)
    goto LABEL_16;
  v3 = v2 + 1;
  v4 = *v2;
  *(_QWORD *)(v0 + 40) = v2 + 1;
  if (v4 != 48)
  {
    if ((v4 - 58) >= 0xF7u)
    {
      if (v3 == v1)
        goto LABEL_25;
      v11 = *v3;
      if (v11 != 117)
      {
        if ((v11 - 58) < 0xF6u)
          goto LABEL_25;
        v12 = (v11 - 48);
        v13 = 10 * (v4 - 48);
        v14 = v2 + 2;
        while (1)
        {
          v15 = v13 + v12;
          if (__CFADD__(v13, v12))
          {
            __break(1u);
            return;
          }
          v16 = v14;
          if (v14 == v1)
            goto LABEL_23;
          v17 = *v14;
          if (v17 == 117)
            break;
          if ((v17 - 58) < 0xF6u)
          {
LABEL_46:
            *(_QWORD *)(v0 + 40) = v16;
            goto LABEL_25;
          }
          if (v15 <= 0x1999999999999999)
          {
            v12 = (v17 - 48);
            v13 = 10 * v15;
            ++v14;
            if (!__CFADD__(v12, 10 * v15))
              continue;
          }
          goto LABEL_42;
        }
LABEL_43:
        v2 = v16 - 1;
      }
LABEL_22:
      v1 = v2 + 2;
      goto LABEL_23;
    }
LABEL_16:
    sub_1C20B727C();
    swift_allocError();
    *v10 = 1;
    swift_willThrow();
    return;
  }
  v5 = *v3;
  if (v5 != 120)
  {
    if (v3 == v1)
      goto LABEL_25;
    if (v5 == 117)
      goto LABEL_22;
    if ((v5 - 56) < 0xF8u)
      goto LABEL_25;
    v18 = 0;
    v16 = v2 + 2;
    do
    {
      v18 = 8 * v18 + (v5 - 48);
      if (v16 == v1)
        goto LABEL_23;
      v5 = *v16;
      if (v5 == 117)
        goto LABEL_43;
      if ((v5 - 56) < 0xF8u)
        goto LABEL_46;
      ++v16;
    }
    while (!(v18 >> 61));
    --v16;
LABEL_42:
    *(_QWORD *)(v0 + 40) = v16;
    goto LABEL_16;
  }
  v6 = v2 + 2;
  *(_QWORD *)(v0 + 40) = v6;
  if (v6 == v1)
    goto LABEL_25;
  v7 = 0;
  while (1)
  {
    v9 = *v6;
    if ((v9 - 58) > 0xF5u)
    {
      v8 = -48;
      if (v7 >> 60)
        goto LABEL_16;
      goto LABEL_7;
    }
    if ((v9 - 103) <= 0xF9u)
      break;
    v8 = -87;
    if (v7 >> 60)
      goto LABEL_16;
LABEL_7:
    *(_QWORD *)(v0 + 40) = ++v6;
    v7 = 16 * v7 + (v9 + v8);
    if (v6 == v1)
      goto LABEL_25;
  }
  if ((v9 - 71) > 0xF9u)
  {
    v8 = -55;
    if (v7 >> 60)
      goto LABEL_16;
    goto LABEL_7;
  }
  if (v9 == 117)
  {
    v1 = v6 + 1;
LABEL_23:
    *(_QWORD *)(v0 + 40) = v1;
  }
LABEL_25:
  sub_1C20B5184();
}

void sub_1C20B5CB4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v2 = *(_BYTE **)(v0 + 40);
  if (v2 == *(_BYTE **)(v0 + 48))
    goto LABEL_11;
  if (*v2 == 45)
  {
    *(_QWORD *)(v0 + 40) = v2 + 1;
    if (v2[1] - 58 <= 0xFFFFFFF5
      || (sub_1C20B5A40(), !v1) && v3 < 0 && v3 != 0x8000000000000000)
    {
LABEL_11:
      sub_1C20B727C();
      swift_allocError();
      *v5 = 1;
      swift_willThrow();
    }
  }
  else
  {
    sub_1C20B5A40();
    if (!v1 && v4 < 0)
      goto LABEL_11;
  }
}

uint64_t sub_1C20B5D6C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  int v4;
  uint64_t (*v5)();
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  char *v9;
  int v10;
  char v11;
  unsigned __int8 *i;
  unsigned __int8 *v13;
  uint64_t (*v14)();
  unint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t (*v28)();

  v1 = v0;
  sub_1C20B5184();
  v2 = *(unsigned __int8 **)(v0 + 40);
  v3 = *(unsigned __int8 **)(v0 + 48);
  if (v2 != v3 && ((v4 = *v2, v4 == 39) || v4 == 34) && (*(_QWORD *)(v0 + 40) = v2 + 1, v5 = sub_1C20B5920(v4), v6))
  {
    v28 = v5;
    v7 = *(unsigned __int8 **)(v0 + 40);
    while (v7 != v3)
    {
      v8 = *v7;
      if (v8 != 34 && v8 != 39)
        break;
      v9 = (char *)(v7 + 1);
      *(_QWORD *)(v1 + 40) = v7 + 1;
      if (v7 + 1 == v3)
        goto LABEL_51;
      v10 = *v9;
      if (v10 != v8)
      {
        v11 = 0;
        for (i = v7 + 3; ; i += 2)
        {
          while (1)
          {
            v13 = i - 1;
            if (v10 == 92)
              break;
            if (v13 == v3)
              goto LABEL_50;
            v10 = *(i++ - 1);
            if (v10 == v8)
            {
              i -= 2;
LABEL_22:
              *(_QWORD *)(v1 + 40) = i;
              goto LABEL_23;
            }
          }
          if (v13 == v3 || i == v3)
            break;
          v10 = *i;
          v11 = 1;
          if (v10 == v8)
            goto LABEL_22;
        }
LABEL_50:
        *(_QWORD *)(v1 + 40) = v3;
LABEL_51:
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      v11 = 0;
      i = v7 + 1;
LABEL_23:
      v14 = sub_1C20AD098(v9, i - (unsigned __int8 *)v9);
      v16 = i + 1;
      *(_QWORD *)(v1 + 40) = i + 1;
      v7 = v3;
      if (v16 == v3)
      {
LABEL_44:
        if (!v15)
          goto LABEL_51;
      }
      else
      {
        while (1)
        {
          v18 = *v16;
          if (v18 > 0x23)
            break;
          if (((1 << v18) & 0x100002600) != 0)
          {
            v17 = v16 + 1;
            *(_QWORD *)(v1 + 40) = v16 + 1;
          }
          else
          {
            if (v18 != 35)
              break;
            *(_QWORD *)(v1 + 40) = v16 + 1;
            if (v16 + 1 == v3)
              goto LABEL_43;
            v19 = v16[1];
            v17 = v16 + 2;
            *(_QWORD *)(v1 + 40) = v16 + 2;
            if (v19 != 10 && v19 != 13)
            {
              if (v17 == v3)
                goto LABEL_43;
              v20 = v16[2];
              v17 = v16 + 3;
              *(_QWORD *)(v1 + 40) = v16 + 3;
              if (v20 != 10 && v20 != 13)
              {
                while (v17 != v3)
                {
                  v22 = *v17++;
                  v21 = v22;
                  *(_QWORD *)(v1 + 40) = v17;
                  if (v22 == 10 || v21 == 13)
                    goto LABEL_26;
                }
LABEL_43:
                v7 = v3;
                goto LABEL_44;
              }
            }
          }
LABEL_26:
          v16 = v17;
          if (v17 == v3)
            goto LABEL_43;
        }
        v7 = v16;
        if (!v15)
          goto LABEL_51;
      }
      if ((v11 & 1) != 0)
      {
        sub_1C20B42E4((unint64_t)v14, v15);
        v25 = v24;
        swift_bridgeObjectRelease();
        if (!v25)
          goto LABEL_51;
      }
      sub_1C21754F8();
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v28;
  }
  else
  {
LABEL_52:
    sub_1C20B727C();
    swift_allocError();
    *v26 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C20B6020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  unint64_t v12;
  unsigned __int8 *i;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned __int8 *v20;
  int v21;
  unsigned __int8 *v22;
  uint64_t v23;
  char v24;
  unsigned __int8 *v25;
  BOOL v26;
  int v27;
  unsigned int v28;
  unsigned __int8 v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;

  v2 = v0;
  sub_1C20B5184();
  v3 = *(unsigned __int8 **)(v0 + 40);
  v4 = *(unsigned __int8 **)(v0 + 48);
  if (v3 != v4 && ((v5 = *v3, v5 == 34) || v5 == 39))
  {
    *(_QWORD *)(v0 + 40) = v3 + 1;
    v46 = 0;
    result = sub_1C20B5354(v5, &v46);
    if (!v1)
    {
      v7 = result;
      if (v46 == 1)
      {
        v44 = sub_1C20A8B0C(result);
        v45 = v8;
        sub_1C20B6F80((uint64_t)&v44);
      }
      else
      {
        v11 = *(_BYTE **)(v2 + 40);
        v44 = sub_1C2127830(v11, result);
        v45 = v12;
        if (__OFADD__(v7, 1))
          goto LABEL_92;
        *(_QWORD *)(v2 + 40) = &v11[v7 + 1];
      }
      for (i = *(unsigned __int8 **)(v2 + 40); i != v4; i = *(unsigned __int8 **)(v2 + 40))
      {
        while (1)
        {
          v14 = *i;
          if (v14 > 0x23)
            break;
          if (((1 << v14) & 0x100002600) != 0)
          {
            v15 = i + 1;
            *(_QWORD *)(v2 + 40) = i + 1;
            goto LABEL_15;
          }
          if (v14 != 35)
            break;
          *(_QWORD *)(v2 + 40) = i + 1;
          if (i + 1 == v4)
            return v44;
          v16 = i[1];
          v15 = i + 2;
          *(_QWORD *)(v2 + 40) = i + 2;
          if (v16 != 10 && v16 != 13)
          {
            if (v15 == v4)
              return v44;
            v17 = i[2];
            v15 = i + 3;
            *(_QWORD *)(v2 + 40) = i + 3;
            if (v17 != 10 && v17 != 13)
            {
              while (v15 != v4)
              {
                v19 = *v15++;
                v18 = v19;
                *(_QWORD *)(v2 + 40) = v15;
                if (v19 == 10 || v18 == 13)
                  goto LABEL_15;
              }
              return v44;
            }
          }
LABEL_15:
          i = v15;
          if (v15 == v4)
            return v44;
        }
        if (i == v4 || (_DWORD)v14 != 39 && (_DWORD)v14 != 34)
          return v44;
        v20 = i + 1;
        *(_QWORD *)(v2 + 40) = i + 1;
        if (i + 1 == v4)
        {
LABEL_87:
          sub_1C20B727C();
          swift_allocError();
          *v41 = 0;
          swift_willThrow();
          return sub_1C20A8058(v44, v45);
        }
        v21 = i[1];
        v22 = i + 2;
        *(_QWORD *)(v2 + 40) = v22;
        if (v21 == (_DWORD)v14)
        {
          v23 = 0;
          *(_QWORD *)(v2 + 40) = v20;
        }
        else
        {
          v23 = 0;
          v24 = 0;
          v25 = v20;
          do
          {
            if (v21 == 92)
            {
              if (v22 == v4)
                goto LABEL_87;
              v28 = v25[1];
              v22 = v25 + 2;
              *(_QWORD *)(v2 + 40) = v25 + 2;
              if (v28 - 56 >= 0xFFFFFFF8)
              {
                v33 = v4;
                if (v22 != v4)
                {
                  v33 = v25 + 2;
                  if (*v22 - 56 > 0xFFFFFFF7)
                  {
                    *(_QWORD *)(v2 + 40) = v25 + 3;
                    v33 = v4;
                    if (v25 + 3 != v4)
                    {
                      v33 = v25 + 3;
                      if (v25[3] - 56 >= 0xFFFFFFF8)
                      {
                        if (v28 > 0x33)
                          goto LABEL_87;
                        v33 = v25 + 4;
                        *(_QWORD *)(v2 + 40) = v25 + 4;
                      }
                    }
                  }
                }
                v26 = __OFADD__(v23++, 1);
                if (v26)
                  goto LABEL_89;
                if (v33 == v4)
                  goto LABEL_87;
                v24 = 1;
                v22 = v33;
              }
              else
              {
                switch(v28)
                {
                  case '"':
                  case '\'':
                  case '?':
                  case '\\':
                  case 'a':
                  case 'b':
                  case 'f':
                  case 'n':
                  case 'r':
                  case 't':
                  case 'v':
                    v26 = __OFADD__(v23++, 1);
                    if (!v26)
                      goto LABEL_40;
                    goto LABEL_90;
                  case 'x':
                    if (v22 == v4)
                      goto LABEL_87;
                    v29 = *v22;
                    if ((v29 - 58) <= 0xF5u)
                    {
                      v30 = v29 - 65;
                      if (v30 > 0x25 || ((1 << v30) & 0x3F0000003FLL) == 0)
                        goto LABEL_87;
                    }
                    *(_QWORD *)(v2 + 40) = v25 + 3;
                    v22 = v4;
                    if (v25 + 3 == v4)
                      goto LABEL_56;
                    if ((v25[3] - 58) > 0xF5u)
                      goto LABEL_55;
                    v31 = v25[3] - 65;
                    if (v31 > 0x25)
                    {
                      v22 = v25 + 3;
                      v26 = __OFADD__(v23++, 1);
                      if (v26)
                        goto LABEL_93;
                    }
                    else
                    {
                      v32 = 1 << v31;
                      v22 = v25 + 3;
                      if ((v32 & 0x3F0000003FLL) != 0)
                      {
LABEL_55:
                        v22 = v25 + 4;
                        *(_QWORD *)(v2 + 40) = v25 + 4;
                      }
LABEL_56:
                      v26 = __OFADD__(v23++, 1);
                      if (v26)
                        goto LABEL_93;
                    }
LABEL_40:
                    if (v22 == v4)
                      goto LABEL_87;
                    v24 = 1;
                    break;
                  default:
                    goto LABEL_87;
                }
              }
            }
            else
            {
              v26 = __OFADD__(v23++, 1);
              if (v26)
              {
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
LABEL_93:
                __break(1u);
LABEL_94:
                __break(1u);
                JUMPOUT(0x1C20B6588);
              }
              if (v22 == v4)
                goto LABEL_87;
            }
            v25 = v22;
            v27 = *v22++;
            LOBYTE(v21) = v27;
            *(_QWORD *)(v2 + 40) = v22;
          }
          while (v27 != (_DWORD)v14);
          *(_QWORD *)(v2 + 40) = v20;
          if ((v24 & 1) != 0)
          {
            if (v23)
            {
              if (v23 <= 14)
              {
                if (v23 < 0)
                  goto LABEL_94;
                v34 = v9;
                v36 = 0;
                v37 = (unint64_t)v23 << 48;
              }
              else
              {
                v34 = v9;
                sub_1C21752F4();
                swift_allocObject();
                v35 = sub_1C21752D0();
                if ((unint64_t)v23 >= 0x7FFFFFFF)
                {
                  sub_1C2175324();
                  v36 = swift_allocObject();
                  *(_QWORD *)(v36 + 16) = 0;
                  *(_QWORD *)(v36 + 24) = v23;
                  v37 = v35 | 0x8000000000000000;
                }
                else
                {
                  v36 = v23 << 32;
                  v37 = v35 | 0x4000000000000000;
                }
              }
            }
            else
            {
              v34 = v9;
              v36 = 0;
              v37 = 0xC000000000000000;
            }
            v42 = v36;
            v43 = v37;
            sub_1C20B6F80((uint64_t)&v42);
            v39 = v42;
            v40 = v43;
            sub_1C20A8008(v42, v43);
            sub_1C2175360();
            sub_1C20A8058(v39, v40);
            sub_1C20A8058(v39, v40);
            v9 = v34;
            continue;
          }
          if (v23)
          {
            v38 = v9;
            sub_1C217533C();
            v9 = v38;
          }
        }
        if (__OFADD__(v23, 1))
          goto LABEL_91;
        *(_QWORD *)(v2 + 40) = &v20[v23 + 1];
      }
      return v44;
    }
  }
  else
  {
    sub_1C20B727C();
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
  return result;
}

char *sub_1C20B66E4()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  int v3;
  unsigned __int8 *v4;
  char *v5;
  int64_t v6;
  int v7;
  uint64_t v8;

  v1 = *(unsigned __int8 **)(v0 + 40);
  v2 = *(unsigned __int8 **)(v0 + 48);
  if (v1 != v2)
  {
    v3 = *v1;
    v4 = *(unsigned __int8 **)(v0 + 40);
    if (v3 == 45)
    {
      v4 = v1 + 1;
      *(_QWORD *)(v0 + 40) = v1 + 1;
      if (v1 + 1 == v2)
        goto LABEL_24;
      v3 = *v4;
    }
    if (v3 == 46)
    {
      *(_QWORD *)(v0 + 40) = ++v4;
      if (v4 == v2 || *v4 - 58 <= 0xFFFFFFF5)
        goto LABEL_24;
      goto LABEL_13;
    }
    if (v3 == 48)
    {
      *(_QWORD *)(v0 + 40) = ++v4;
      if (v4 == v2)
      {
LABEL_20:
        v4 = v2;
        goto LABEL_21;
      }
      if (*v4 - 58 >= 0xFFFFFFF6)
        goto LABEL_24;
LABEL_13:
      v6 = v4 - v1;
      while (1)
      {
        v7 = *v4;
        if ((v7 - 58) <= 0xFFFFFFF5)
        {
          v8 = (v7 - 43);
          if (v8 > 0x3B)
            goto LABEL_21;
          if (((1 << v8) & 0x40000000400000DLL) == 0)
            break;
        }
        *(_QWORD *)(v0 + 40) = ++v4;
        ++v6;
        if (v4 == v2)
          goto LABEL_20;
      }
      if (v8 == 59)
      {
        v5 = sub_1C2105A38(v1, v6);
        *(_QWORD *)(v0 + 40) = v4 + 1;
LABEL_22:
        sub_1C20B5184();
        return v5;
      }
LABEL_21:
      v5 = sub_1C2105A38(v1, v4 - v1);
      goto LABEL_22;
    }
    if ((v3 - 58) >= 0xFFFFFFF7)
      goto LABEL_13;
LABEL_24:
    v5 = 0;
    *(_QWORD *)(v0 + 40) = v1;
    return v5;
  }
  return 0;
}

uint64_t sub_1C20B6854(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = *(unsigned __int8 **)(v1 + 40);
    v3 = *(unsigned __int8 **)(v1 + 48);
    if (v4 != v3 && *v4 == *(unsigned __int8 *)(result + 32))
    {
      v5 = &v4[v2];
      v6 = v4 + 1;
      v7 = (unsigned __int8 *)(result + 33);
      v8 = v2 - 1;
      while (v8)
      {
        if (v6 != v3)
        {
          v10 = *v7++;
          v9 = v10;
          v11 = *v6++;
          --v8;
          if (v11 == v9)
            continue;
        }
        return result;
      }
      *(_QWORD *)(v1 + 40) = v5;
    }
  }
  return result;
}

uint64_t sub_1C20B68B4(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  _BYTE *v8;
  uint64_t result;

  v2 = *(_BYTE **)(v1 + 40);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = *(_BYTE **)(v1 + 48);
    if (v2 != v4)
    {
      v5 = 0;
      v6 = v3 - 1;
      do
      {
        v7 = v2[v5];
        if ((v7 - 91) >= 0xE6u)
          v7 += 32;
        if (*(unsigned __int8 *)(a1 + 32 + v5) != v7)
          break;
        v8 = &v2[v5 + 1];
        *(_QWORD *)(v1 + 40) = v8;
        if (v6 == v5)
          goto LABEL_11;
        ++v5;
      }
      while (&v2[v5] != v4);
    }
    goto LABEL_15;
  }
  v4 = *(_BYTE **)(v1 + 48);
  v8 = *(_BYTE **)(v1 + 40);
LABEL_11:
  if (v8 == v4)
    return 1;
  if ((*v8 & 0xDFu) - 91 < 0xFFFFFFE6)
  {
    sub_1C20B5184();
    return 1;
  }
LABEL_15:
  result = 0;
  *(_QWORD *)(v1 + 40) = v2;
  return result;
}

unint64_t sub_1C20B6970()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  unsigned __int8 v3;
  uint64_t v4;

  v1 = *(unsigned __int8 **)(v0 + 40);
  if (v1 == *(unsigned __int8 **)(v0 + 48))
    goto LABEL_9;
  v2 = *v1;
  if (v2 == 45)
    *(_QWORD *)(v0 + 40) = v1 + 1;
  if ((sub_1C20B68B4((uint64_t)&unk_1E7BD7FC0) & 1) != 0 || (sub_1C20B68B4((uint64_t)&unk_1E7BD7FE8) & 1) != 0)
  {
    v3 = 0;
    v4 = 2139095040;
    if (v2 == 45)
      v4 = 4286578688;
  }
  else
  {
LABEL_9:
    v4 = 0;
    v3 = 1;
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_1C20B69FC()
{
  uint64_t result;
  char v1;
  _BYTE *v2;

  result = (uint64_t)sub_1C20B66E4();
  if ((v1 & 1) != 0)
  {
    result = sub_1C20B68B4((uint64_t)&unk_1E7BD8010);
    if ((result & 1) == 0)
    {
      result = sub_1C20B6970();
      if ((result & 0x100000000) != 0)
      {
        sub_1C20B727C();
        swift_allocError();
        *v2 = 1;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C20B6A8C()
{
  uint64_t result;
  char v1;
  _BYTE *v2;

  result = (uint64_t)sub_1C20B66E4();
  if ((v1 & 1) != 0)
  {
    result = sub_1C20B68B4((uint64_t)&unk_1E7BD8038);
    if ((result & 1) == 0)
    {
      result = sub_1C20B6970();
      if ((result & 0x100000000) != 0)
      {
        sub_1C20B727C();
        swift_allocError();
        *v2 = 1;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C20B6B1C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  int v4;
  int v5;
  int v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  _BYTE *v9;

  sub_1C20B5184();
  v1 = *(unsigned __int8 **)(v0 + 40);
  v2 = *(unsigned __int8 **)(v0 + 48);
  if (v1 == v2)
  {
LABEL_19:
    sub_1C20B727C();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
  }
  else
  {
    v5 = *v1;
    v3 = v1 + 1;
    v4 = v5;
    *(_QWORD *)(v0 + 40) = v3;
    switch(v5)
    {
      case '0':
        if (v3 != v2)
        {
          LOBYTE(v2) = 0;
          v6 = *v3;
          switch(v6)
          {
            case 9:
            case 10:
            case 13:
            case 32:
            case 35:
            case 44:
            case 59:
            case 62:
            case 93:
              goto LABEL_10;
            case 11:
            case 12:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 33:
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 60:
            case 61:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
              goto LABEL_19;
            default:
              goto LABEL_18;
          }
        }
        goto LABEL_14;
      case '1':
        if (v3 != v2)
        {
          v6 = *v3;
          LOBYTE(v2) = 1;
          switch(v6)
          {
            case 9:
            case 10:
            case 13:
            case 32:
            case 35:
            case 44:
            case 59:
            case 62:
            case 93:
              goto LABEL_10;
            case 11:
            case 12:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 33:
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 60:
            case 61:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
              goto LABEL_19;
            default:
              goto LABEL_18;
          }
        }
        goto LABEL_17;
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
      case ':':
      case ';':
      case '<':
      case '=':
      case '>':
      case '?':
      case '@':
      case 'A':
      case 'B':
      case 'C':
      case 'D':
      case 'E':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
      case 'P':
      case 'Q':
      case 'R':
      case 'S':
        goto LABEL_19;
      case 'F':
        goto LABEL_11;
      case 'T':
        goto LABEL_7;
      default:
        if (v4 == 102)
        {
LABEL_11:
          if (v3 != v2)
          {
            sub_1C20B6854((uint64_t)&unk_1E7BD7670);
            v8 = *(unsigned __int8 **)(v0 + 40);
            if (v8 != v2)
            {
              LOBYTE(v2) = 0;
              v6 = *v8;
              switch(v6)
              {
                case 9:
                case 10:
                case 13:
                case 32:
                case 35:
                case 44:
                case 59:
                case 62:
                case 93:
                  goto LABEL_10;
                case 11:
                case 12:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 33:
                case 34:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 60:
                case 61:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                  goto LABEL_19;
                default:
                  goto LABEL_18;
              }
            }
          }
LABEL_14:
          LOBYTE(v2) = 0;
        }
        else
        {
          if (v4 != 116)
            goto LABEL_19;
LABEL_7:
          if (v3 == v2 || (sub_1C20B6854((uint64_t)&unk_1E7BD7698), v7 = *(unsigned __int8 **)(v0 + 40), v7 == v2))
          {
LABEL_17:
            LOBYTE(v2) = 1;
          }
          else
          {
            v6 = *v7;
            LOBYTE(v2) = 1;
            switch(v6)
            {
              case 9:
              case 10:
              case 13:
              case 32:
              case 35:
              case 44:
              case 59:
              case 62:
              case 93:
                break;
              case 11:
              case 12:
              case 14:
              case 15:
              case 16:
              case 17:
              case 18:
              case 19:
              case 20:
              case 21:
              case 22:
              case 23:
              case 24:
              case 25:
              case 26:
              case 27:
              case 28:
              case 29:
              case 30:
              case 31:
              case 33:
              case 34:
              case 36:
              case 37:
              case 38:
              case 39:
              case 40:
              case 41:
              case 42:
              case 43:
              case 45:
              case 46:
              case 47:
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
              case 58:
              case 60:
              case 61:
              case 63:
              case 64:
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 70:
              case 71:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
              case 80:
              case 81:
              case 82:
              case 83:
              case 84:
              case 85:
              case 86:
              case 87:
              case 88:
              case 89:
              case 90:
              case 91:
              case 92:
                goto LABEL_19;
              default:
LABEL_18:
                if (v6 != 125)
                  goto LABEL_19;
                break;
            }
LABEL_10:
            sub_1C20B5184();
          }
        }
        break;
    }
  }
  return v2 & 1;
}

unsigned __int8 *sub_1C20B6CD8()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v3;

  sub_1C20B5184();
  v1 = *(_BYTE **)(v0 + 40);
  if (v1 == *(_BYTE **)(v0 + 48))
  {
    sub_1C20B727C();
    swift_allocError();
    *v3 = 0;
    return (unsigned __int8 *)swift_willThrow();
  }
  else if ((*v1 & 0xDFu) - 91 >= 0xFFFFFFE6)
  {
    return sub_1C20B5220();
  }
  else
  {
    return 0;
  }
}

uint64_t (*sub_1C20B6D64())()
{
  uint64_t v0;
  uint64_t (*v1)();
  _BYTE *v2;
  _BYTE *v3;
  uint64_t (*v4)();
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;

  sub_1C20B5184();
  v2 = *(_BYTE **)(v0 + 40);
  v3 = *(_BYTE **)(v0 + 48);
  if (v2 == v3 || *v2 != 91)
    return 0;
  *(_QWORD *)(v0 + 40) = v2 + 1;
  v4 = sub_1C20B52A4();
  if (!v5)
  {
LABEL_9:
    sub_1C20B727C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    return v1;
  }
  v6 = *(_BYTE **)(v0 + 40);
  if (v6 == v3 || *v6 != 93)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v1 = v4;
  *(_QWORD *)(v0 + 40) = v6 + 1;
  sub_1C20B5184();
  return v1;
}

uint64_t sub_1C20B6E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  char v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unsigned int v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned int v15;
  char v16;
  char *v17;

  v3 = *(unsigned __int8 **)(v1 + 40);
  v4 = *(unsigned __int8 **)(v1 + 48);
  if (v3 == v4)
    return 0;
  v5 = *v3;
  if ((v5 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v7 = sub_1C20B5220();
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_18;
    v9 = sub_1C20A9BC4(v7, v8);
    if ((v10 & 1) == 0)
      goto LABEL_18;
    return *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v9);
  }
  else
  {
    if ((v5 - 58) < 0xFFFFFFF7)
    {
      v6 = 0;
LABEL_19:
      sub_1C20B727C();
      swift_allocError();
      *v17 = v6;
      swift_willThrow();
      return v2;
    }
    v11 = *(_QWORD *)(a1 + 8);
    v2 = v5 - 48;
    *(_QWORD *)(v1 + 40) = v3 + 1;
    if (v3 + 1 != v4)
    {
      v12 = v3[1];
      if (v12 - 58 >= 0xFFFFFFF6)
      {
        v13 = v4;
        v14 = v3 + 2;
        while (1)
        {
          v2 = 10 * v2 + v12 - 48;
          if (v14 == v4)
            break;
          v15 = *v14++;
          v12 = v15;
          if (v15 - 58 <= 0xFFFFFFF5)
          {
            v13 = v14 - 1;
            break;
          }
        }
        *(_QWORD *)(v1 + 40) = v13;
      }
    }
    sub_1C20B5184();
    if (!*(_QWORD *)(v11 + 16) || (sub_1C20A9B94(v2), (v16 & 1) == 0))
    {
LABEL_18:
      v6 = 7;
      goto LABEL_19;
    }
  }
  return v2;
}

void sub_1C20B6F80(uint64_t a1)
{
  __asm { BR              X12 }
}

_BYTE *sub_1C20B6FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  unsigned __int8 v3;
  uint64_t v4;
  _BYTE *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v1;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_1C20B56F4(&v7, (uint64_t)&v7 + BYTE6(a1), v4, v3);
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v2 = v7;
  v2[1] = v6;
  return result;
}

_BYTE *sub_1C20B71CC(int *a1, uint64_t a2, unsigned __int8 a3)
{
  _BYTE *result;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = (_BYTE *)sub_1C217530C();
  v7 = *a1;
  v8 = a1[1];
  if ((int)v8 < (int)v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (_BYTE *)sub_1C21752C4();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v9 = result;
  result = (_BYTE *)sub_1C21752E8();
  v10 = v7 - (_QWORD)result;
  if (__OFSUB__(v7, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v11 = v8 - v7;
  v12 = sub_1C21752DC();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  return sub_1C20B56F4(&v9[v10], (uint64_t)&v9[v10 + v13], a2, a3);
}

unint64_t sub_1C20B727C()
{
  unint64_t result;

  result = qword_1EF75CF68;
  if (!qword_1EF75CF68)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for TextFormatDecodingError, &type metadata for TextFormatDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75CF68);
  }
  return result;
}

uint64_t destroy for TextFormatScanner(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t initializeWithCopy for TextFormatScanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TextFormatScanner(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TextFormatScanner(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatScanner(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatScanner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatScanner()
{
  return &type metadata for TextFormatScanner;
}

uint64_t sub_1C20B7688@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v11 = sub_1C2175690();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)v26 - v14;
  v16 = swift_conformsToProtocol2();
  if (v16)
    v17 = v16;
  else
    v17 = 0;
  if (v16)
    v18 = a3;
  else
    v18 = 0;
  if (v18)
  {
    v26[1] = v5;
    v27 = a4;
    v28 = a5;
    (*(void (**)(uint64_t *__return_ptr))(v17 + 8))(&v29);
    v19 = v30;
    if (*(_QWORD *)(v30 + 16) && (v20 = sub_1C20A9BC4(a1, a2), (v21 & 1) != 0))
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v27 + 32))(v22, a3);
      v23 = *(_QWORD *)(a3 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, a3))
      {
        v25 = v28;
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v28, v15, a3);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, a3);
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    a5 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, 1, 1, a3);
}

uint64_t sub_1C20B7844@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];

  v11 = sub_1C2175690();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)v26 - v14;
  v16 = swift_conformsToProtocol2();
  if (v16)
    v17 = v16;
  else
    v17 = 0;
  if (v16)
    v18 = a3;
  else
    v18 = 0;
  if (v18)
  {
    v26[1] = v5;
    v27 = a4;
    v28 = a5;
    (*(void (**)(_QWORD *__return_ptr))(v17 + 8))(v29);
    v19 = v29[3];
    swift_bridgeObjectRetain();
    v20 = sub_1C20B4028(a1, a2);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v19 + 16)
      && (v21 = sub_1C20A9BC4((unsigned __int8 *)(v20 + 32), *(unsigned __int8 **)(v20 + 16)), (v22 & 1) != 0))
    {
      v26[0] = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(_QWORD, uint64_t))(v27 + 32))(v26[0], a3);
      v23 = *(_QWORD *)(a3 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, a3))
      {
        v25 = v28;
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v28, v15, a3);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, a3);
      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    a5 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, 1, 1, a3);
}

uint64_t Enum.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  return sub_1C2175834();
}

uint64_t dispatch thunk of Enum.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Enum.init(rawValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Enum.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C20B7A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _QWORD v27[2];

  v6 = swift_conformsToProtocol2();
  if (v6)
    v7 = v6;
  else
    v7 = 0;
  if (v6)
    result = a1;
  else
    result = 0;
  v9 = 0uLL;
  if (result)
  {
    (*(void (**)(_QWORD *__return_ptr, __n128))(v7 + 8))(v27, (__n128)0);
    v10 = v27[1];
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    if (*(_QWORD *)(v10 + 16) && (v12 = sub_1C20A9B94(v11), (v13 & 1) != 0))
    {
      v14 = *(_QWORD *)(v10 + 56) + 80 * v12;
      v24 = *(_QWORD *)(v14 + 8);
      v25 = *(_QWORD *)v14;
      v22 = *(_QWORD *)(v14 + 24);
      v23 = *(_QWORD *)(v14 + 16);
      v26 = *(_OWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 56);
      v16 = *(_QWORD *)(v14 + 64);
      v17 = *(unsigned __int8 *)(v14 + 72);
      v18 = *(unsigned __int8 *)(v14 + 73);
      v19 = *(unsigned __int16 *)(v14 + 32);
      sub_1C20B7C58(*(_QWORD *)v14, v24, v23, v22, v19);
      sub_1C20A9EA4(v15, v16, v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20A9EA4(v15, v16, v17, v18);
      sub_1C20B7C80(v25, v24, v23, v22, v19);
      result = sub_1C20AA8C4(v15, v16, v17, v18);
      v9 = v26;
      if (v18)
        v20 = 256;
      else
        v20 = 0;
      v21 = v20 | v17;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_release();
      v15 = 0;
      v16 = 0;
      v21 = -256;
      v9 = 0uLL;
    }
  }
  else
  {
    v15 = 0;
    v16 = 0;
    v21 = -256;
  }
  *(_OWORD *)a3 = v9;
  *(_QWORD *)(a3 + 16) = v15;
  *(_QWORD *)(a3 + 24) = v16;
  *(_WORD *)(a3 + 32) = v21;
  return result;
}

uint64_t sub_1C20B7C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (BYTE1(a5) != 255)
    return sub_1C20A9EA4(a3, a4, a5, BYTE1(a5) & 1);
  return result;
}

uint64_t sub_1C20B7C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (BYTE1(a5) != 255)
    return sub_1C20AA8C4(a3, a4, a5, BYTE1(a5) & 1);
  return result;
}

void ExtensibleMessage.setExtensionValue<A>(ext:value:)()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v1);
  type metadata accessor for MessageExtension();
}

uint64_t sub_1C20B7D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v13)(uint64_t, _QWORD);

  *(_QWORD *)(v11 - 136) = a1;
  *(_QWORD *)(v11 - 128) = &protocol witness table for MessageExtension<A, B>;
  *(_QWORD *)(v11 - 160) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v9, v7, v8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  *(_QWORD *)(v11 - 96) = v2;
  *(_QWORD *)(v11 - 88) = *(_QWORD *)(v4 + 8);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 - 120));
  swift_retain();
  v12(v11 - 160, v9, v2, v4);
  v13 = (uint64_t (*)(uint64_t, _QWORD))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v11 - 192, v10, v1);
  sub_1C20B7E1C(v11 - 120, v11 - 160);
  sub_1C20B825C(v11 - 160, v5);
  sub_1C20B8364(v11 - 120);
  return v13(v11 - 192, 0);
}

uint64_t sub_1C20B7E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ExtensibleMessage.getExtensionValue<A>(ext:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v27 = a3;
  v5 = *a1;
  v6 = *(_QWORD *)(*a1 + 80);
  v7 = sub_1C2175690();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v10, v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(a2 + 16))(&v30, *(_QWORD *)(v5 + 88), a2);
  v17 = v30;
  if (*(_QWORD *)(v30 + 16) && (v18 = sub_1C20A9B94(a1[2]), (v19 & 1) != 0))
  {
    sub_1C20A84A8(*(_QWORD *)(v17 + 56) + 40 * v18, (uint64_t)v28);
  }
  else
  {
    v29 = 0;
    memset(v28, 0, sizeof(v28));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF70);
  v20 = swift_dynamicCast();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v20 & 1) != 0)
  {
    v21(v12, 0, 1, v6);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v12, v6);
    v22 = v27;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 + 96) + 32))(v6, *(_QWORD *)(v5 + 96));
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v6);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v22, 0, 1, AssociatedTypeWitness);
  }
  else
  {
    v21(v12, 1, 1, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v25 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v27, 1, 1, v25);
  }
}

BOOL ExtensibleMessage.hasExtensionValue<A>(ext:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  _BOOL8 v16;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 80);
  v6 = sub_1C2175690();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)v18 - v9;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(a2 + 16))(&v20, *(_QWORD *)(v4 + 88), a2);
  v11 = v20;
  if (*(_QWORD *)(v20 + 16) && (v12 = sub_1C20A9B94(a1[2]), (v13 & 1) != 0))
  {
    sub_1C20A84A8(*(_QWORD *)(v11 + 56) + 40 * v12, (uint64_t)v18);
  }
  else
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF70);
  v14 = swift_dynamicCast();
  v15 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, v14 ^ 1u, 1, v5);
  v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v5) == 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v16;
}

uint64_t ExtensibleMessage.clearExtensionValue<A>(ext:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_BYTE *, _QWORD);
  _BYTE v6[40];
  _BYTE v7[32];
  _OWORD v8[2];
  uint64_t v9;

  v2 = *a1;
  v3 = a1[2];
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v4 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, _QWORD, uint64_t))(a2 + 32))(v7, *(_QWORD *)(v2 + 88), a2);
  sub_1C20B7E1C((uint64_t)v8, (uint64_t)v6);
  sub_1C20B825C((uint64_t)v6, v3);
  sub_1C20B8364((uint64_t)v8);
  return v4(v7, 0);
}

uint64_t sub_1C20B825C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14[2];
  uint64_t v15;

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C20A8734((__int128 *)a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_1C21734A4(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C20B8364(a1);
    v7 = sub_1C20A9B94(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_1C2173F60();
        v11 = v13;
      }
      sub_1C20A8734((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_1C20CDBF8(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_1C20B8364((uint64_t)v14);
  }
}

uint64_t sub_1C20B8364(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C20B83A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13[3];

  if (a3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v5;
    *v5 = 0x8000000000000000;
    sub_1C21735C0(a1, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    *v5 = v13[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C20CDAFC(a4, a5, (uint64_t)v13);
    swift_bridgeObjectRelease();
    return sub_1C20B8490(v13[0], v13[1], v13[2]);
  }
}

uint64_t dispatch thunk of ExtensibleMessage._protobuf_extensionFieldValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ExtensibleMessage._protobuf_extensionFieldValues.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ExtensibleMessage._protobuf_extensionFieldValues.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C20B8490(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C20A8058(result, a2);
    return swift_release();
  }
  return result;
}

uint64_t ExtensionFieldValueSet.subscript.setter(uint64_t a1, uint64_t a2)
{
  _BYTE v5[40];

  sub_1C20B7E1C(a1, (uint64_t)v5);
  sub_1C20B825C((uint64_t)v5, a2);
  return sub_1C20B8364(a1);
}

double ExtensionFieldValueSet.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  double result;

  v4 = *v2;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1C20A9B94(a1), (v6 & 1) != 0))
  {
    sub_1C20A84A8(*(_QWORD *)(v4 + 56) + 40 * v5, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

SiriOntologyProtobuf::ExtensionFieldValueSet __swiftcall ExtensionFieldValueSet.init()()
{
  _QWORD *v0;
  SiriOntologyProtobuf::ExtensionFieldValueSet result;

  *v0 = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t ExtensionFieldValueSet.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v3 = *v1;
  v21 = *v1 + 64;
  v4 = 1 << *(_BYTE *)(*v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*v1 + 64);
  v22 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 16777619;
  if (!v6)
    goto LABEL_8;
LABEL_6:
  v15 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v16 = v15 | (v8 << 6);
  while (2)
  {
    v17 = *(_QWORD *)(v3 + 56);
    *(_QWORD *)&v23 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    sub_1C20A84A8(v17 + 40 * v16, (uint64_t)&v23 + 8);
    while (1)
    {
      sub_1C20B9ED0((uint64_t)&v23, (uint64_t)&v31);
      if (!v33)
      {
        swift_release();
        return sub_1C2175834();
      }
      sub_1C20A8734(&v32, (uint64_t)v28);
      v10 = *((_QWORD *)a1 + 8);
      v11 = a1[1];
      v23 = *a1;
      v24 = v11;
      v12 = a1[3];
      v25 = a1[2];
      v26 = v12;
      v27 = v10;
      sub_1C2175834();
      v13 = v29;
      v14 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v14 + 16))(&v23, v13, v14);
      v36 = v25;
      v37 = v26;
      v38 = v27;
      v34 = v23;
      v35 = v24;
      v9 += sub_1C2175864();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      if (v6)
        goto LABEL_6;
LABEL_8:
      v18 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v18 < v22)
      {
        v19 = *(_QWORD *)(v21 + 8 * v18);
        if (v19)
          goto LABEL_11;
        v20 = v8 + 2;
        ++v8;
        if (v18 + 1 < v22)
        {
          v19 = *(_QWORD *)(v21 + 8 * v20);
          if (v19)
            goto LABEL_14;
          v8 = v18 + 1;
          if (v18 + 2 < v22)
          {
            v19 = *(_QWORD *)(v21 + 8 * (v18 + 2));
            if (v19)
            {
              v18 += 2;
              goto LABEL_11;
            }
            v20 = v18 + 3;
            v8 = v18 + 2;
            if (v18 + 3 < v22)
              break;
          }
        }
      }
LABEL_25:
      v6 = 0;
      v24 = 0u;
      v25 = 0u;
      v23 = 0u;
    }
    v19 = *(_QWORD *)(v21 + 8 * v20);
    if (v19)
    {
LABEL_14:
      v18 = v20;
LABEL_11:
      v6 = (v19 - 1) & v19;
      v16 = __clz(__rbit64(v19)) + (v18 << 6);
      v8 = v18;
      continue;
    }
    break;
  }
  while (1)
  {
    v18 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v18 >= v22)
    {
      v8 = v22 - 1;
      goto LABEL_25;
    }
    v19 = *(_QWORD *)(v21 + 8 * v18);
    ++v20;
    if (v19)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t ExtensionFieldValueSet.traverse<A>(visitor:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a5;
  v8 = *(_QWORD **)v5;
  v9 = *(_QWORD *)v5 + 64;
  v10 = 1 << *(_BYTE *)(*(_QWORD *)v5 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(*(_QWORD *)v5 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v34 = a3;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v13)
      goto LABEL_32;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    if (v19)
      goto LABEL_20;
    v20 = v14 + 1;
    if (v14 + 1 >= v13)
      goto LABEL_32;
    v19 = *(_QWORD *)(v9 + 8 * v20);
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v13)
        goto LABEL_32;
      v19 = *(_QWORD *)(v9 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v13)
          goto LABEL_32;
        v19 = *(_QWORD *)(v9 + 8 * v20);
        if (!v19)
        {
          v20 = v14 + 4;
          if (v14 + 4 >= v13)
            goto LABEL_32;
          v19 = *(_QWORD *)(v9 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_19:
    v14 = v20;
LABEL_20:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_21:
    v21 = *(_QWORD *)(v8[6] + 8 * v17);
    if (v21 >= a2 && v21 < a3)
    {
      v37[0] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C20B9958(0, *((_QWORD *)v15 + 2) + 1, 1);
        v15 = v37[0];
      }
      v23 = *((_QWORD *)v15 + 2);
      v22 = *((_QWORD *)v15 + 3);
      v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1C20B9958((char *)(v22 > 1), v23 + 1, 1);
        v24 = v23 + 1;
        v15 = v37[0];
      }
      *((_QWORD *)v15 + 2) = v24;
      *(_QWORD *)&v15[8 * v23 + 32] = v21;
      a3 = v34;
    }
  }
  v20 = v14 + 5;
  if (v14 + 5 >= v13)
  {
LABEL_32:
    swift_release();
    v37[0] = v15;
    swift_bridgeObjectRetain();
    sub_1C20B8F6C(v37);
    if (v33)
      goto LABEL_43;
    swift_release();
    v25 = v37[0];
    v26 = *((_QWORD *)v37[0] + 2);
    if (!v26)
      return swift_release();
    v27 = 0;
    while (v8[2])
    {
      v28 = sub_1C20A9B94(*(_QWORD *)&v25[8 * v27 + 32]);
      if ((v29 & 1) == 0)
        goto LABEL_41;
      sub_1C20A84A8(v8[7] + 40 * v28, (uint64_t)v37);
      v30 = v38;
      v31 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 48))(a1, a4, v40, v30, v31);
      ++v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if (v26 == v27)
        return swift_release();
    }
    goto LABEL_40;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
    goto LABEL_19;
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_32;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C20B8AFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  _BYTE v5[40];
  _BYTE v6[40];

  v3 = *a3;
  sub_1C20B7E1C(a1, (uint64_t)v6);
  sub_1C20B7E1C((uint64_t)v6, (uint64_t)v5);
  sub_1C20B825C((uint64_t)v5, v3);
  return sub_1C20B8364((uint64_t)v6);
}

void (*ExtensionFieldValueSet.subscript.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v5 = malloc(0x88uLL);
  *a1 = v5;
  v5[15] = a2;
  v5[16] = v2;
  v6 = *v2;
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1C20A9B94(a2), (v8 & 1) != 0))
  {
    sub_1C20A84A8(*(_QWORD *)(v6 + 56) + 40 * v7, (uint64_t)v5);
  }
  else
  {
    v5[4] = 0;
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
  }
  return sub_1C20B8BD0;
}

void sub_1C20B8BD0(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  if ((a2 & 1) != 0)
  {
    v4 = v2[15];
    sub_1C20B7E1C(*a1, v3);
    sub_1C20B7E1C(v3, (uint64_t)(v2 + 10));
    sub_1C20B825C((uint64_t)(v2 + 10), v4);
    sub_1C20B8364(v3);
  }
  else
  {
    v5 = v2[15];
    sub_1C20B7E1C(*a1, v3);
    sub_1C20B825C(v3, v5);
  }
  sub_1C20B8364((uint64_t)v2);
  free(v2);
}

uint64_t ExtensionFieldValueSet.isInitialized.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21[8];
  __int128 v22;
  uint64_t v23;

  v1 = *v0;
  v17 = *v0 + 64;
  v2 = 1 << *(_BYTE *)(*v0 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(*v0 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  if (!v4)
    goto LABEL_6;
LABEL_4:
  v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v9 = v8 | (v7 << 6);
LABEL_5:
  v10 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)&v18 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v9);
  sub_1C20A84A8(v10 + 40 * v9, (uint64_t)&v18 + 8);
  while (1)
  {
    sub_1C20B9ED0((uint64_t)&v18, (uint64_t)v21);
    v14 = v23;
    if (!v23)
    {
      swift_release();
      return v14 == 0;
    }
    sub_1C20A8734(&v22, (uint64_t)&v18);
    v15 = *((_QWORD *)&v19 + 1);
    v16 = v20;
    __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16) & 1) == 0)
      break;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    if (v4)
      goto LABEL_4;
LABEL_6:
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 < v5)
    {
      v12 = *(_QWORD *)(v17 + 8 * v11);
      if (v12)
        goto LABEL_9;
      v13 = v7 + 2;
      ++v7;
      if (v11 + 1 < v5)
      {
        v12 = *(_QWORD *)(v17 + 8 * v13);
        if (v12)
          goto LABEL_12;
        v7 = v11 + 1;
        if (v11 + 2 < v5)
        {
          v12 = *(_QWORD *)(v17 + 8 * (v11 + 2));
          if (v12)
          {
            v11 += 2;
            goto LABEL_9;
          }
          v13 = v11 + 3;
          v7 = v11 + 2;
          if (v11 + 3 < v5)
          {
            v12 = *(_QWORD *)(v17 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                v11 = v13 + 1;
                if (__OFADD__(v13, 1))
                  break;
                if (v11 >= v5)
                {
                  v7 = v5 - 1;
                  goto LABEL_23;
                }
                v12 = *(_QWORD *)(v17 + 8 * v11);
                ++v13;
                if (v12)
                  goto LABEL_9;
              }
LABEL_32:
              __break(1u);
              return result;
            }
LABEL_12:
            v11 = v13;
LABEL_9:
            v4 = (v12 - 1) & v12;
            v9 = __clz(__rbit64(v12)) + (v11 << 6);
            v7 = v11;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v4 = 0;
    v19 = 0u;
    v20 = 0u;
    v18 = 0u;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v14 == 0;
}

uint64_t ExtensionFieldValueSet.hashValue.getter()
{
  uint64_t *v0;
  __int128 v2[4];
  uint64_t v3;

  v3 = *v0;
  sub_1C2175828();
  ExtensionFieldValueSet.hash(into:)(v2);
  return sub_1C2175870();
}

uint64_t sub_1C20B8ED8()
{
  uint64_t *v0;
  __int128 v2[4];
  uint64_t v3;

  v3 = *v0;
  sub_1C2175828();
  ExtensionFieldValueSet.hash(into:)(v2);
  return sub_1C2175870();
}

uint64_t sub_1C20B8F24()
{
  uint64_t *v0;
  __int128 v2[4];
  uint64_t v3;

  v3 = *v0;
  sub_1C2175828();
  ExtensionFieldValueSet.hash(into:)(v2);
  return sub_1C2175870();
}

uint64_t sub_1C20B8F6C(char **a1)
{
  char *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1C20B9BD0((uint64_t)v2);
    *a1 = v2;
  }
  v4 = *((_QWORD *)v2 + 2);
  v6[0] = v2 + 32;
  v6[1] = v4;
  result = sub_1C20B8FDC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C20B8FDC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t i;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;

  v2 = a1;
  v3 = a1[1];
  result = sub_1C21757A4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v76 = 0;
      v77 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v79 = *(_QWORD *)(v77 + 8 * i);
        v80 = v76;
        do
        {
          v81 = *(_QWORD *)(v77 + v80);
          if (v79 >= v81)
            break;
          if (!v77)
            goto LABEL_142;
          *(_QWORD *)(v77 + v80 + 8) = v81;
          *(_QWORD *)(v77 + v80) = v79;
          v80 -= 8;
        }
        while (v80 != -8);
        v76 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v93 = result;
    v94 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      result = sub_1C21755B8();
      *(_QWORD *)(result + 16) = v6;
      v3 = v94;
      v92 = result;
      v96 = (char *)(result + 32);
LABEL_13:
      v8 = 0;
      v9 = *v2;
      v90 = v2;
      v91 = *v2 - 8;
      v10 = MEMORY[0x1E0DEE9D8];
      v95 = *v2;
      while (1)
      {
        v12 = v8++;
        if (v8 < v3)
        {
          v13 = *(_QWORD *)(v9 + 8 * v8);
          v14 = *(_QWORD *)(v9 + 8 * v12);
          v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            v15 = v13;
            while (1)
            {
              v16 = *(_QWORD *)(v9 + 8 * v8);
              if (v13 < v14 == v16 >= v15)
                break;
              ++v8;
              v15 = v16;
              if (v3 == v8)
              {
                v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12)
              goto LABEL_139;
            if (v12 < v8)
            {
              v17 = v8 - 1;
              v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9)
                    goto LABEL_145;
                  v19 = *(_QWORD *)(v9 + 8 * v18);
                  *(_QWORD *)(v9 + 8 * v18) = *(_QWORD *)(v9 + 8 * v17);
                  *(_QWORD *)(v9 + 8 * v17) = v19;
                }
                v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12))
            goto LABEL_136;
          if (v8 - v12 < v93)
          {
            v20 = v12 + v93;
            if (__OFADD__(v12, v93))
              goto LABEL_140;
            if (v20 >= v3)
              v20 = v3;
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              v21 = (uint64_t *)(v91 + 8 * v8);
              do
              {
                v22 = *(_QWORD *)(v9 + 8 * v8);
                v23 = v12;
                v24 = v21;
                do
                {
                  v25 = *v24;
                  if (v22 >= *v24)
                    break;
                  if (!v9)
                    goto LABEL_143;
                  *v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              v8 = v20;
            }
          }
        }
        if (v8 < v12)
          goto LABEL_131;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C20B9820(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
          v10 = result;
        }
        v27 = *(_QWORD *)(v10 + 16);
        v26 = *(_QWORD *)(v10 + 24);
        v11 = v27 + 1;
        v9 = v95;
        if (v27 >= v26 >> 1)
        {
          result = (uint64_t)sub_1C20B9820((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          v9 = v95;
          v10 = result;
        }
        *(_QWORD *)(v10 + 16) = v11;
        v28 = v10 + 32;
        v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        *v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            v30 = v11 - 1;
            if (v11 >= 4)
            {
              v35 = v28 + 16 * v11;
              v36 = *(_QWORD *)(v35 - 64);
              v37 = *(_QWORD *)(v35 - 56);
              v41 = __OFSUB__(v37, v36);
              v38 = v37 - v36;
              if (v41)
                goto LABEL_120;
              v40 = *(_QWORD *)(v35 - 48);
              v39 = *(_QWORD *)(v35 - 40);
              v41 = __OFSUB__(v39, v40);
              v33 = v39 - v40;
              v34 = v41;
              if (v41)
                goto LABEL_121;
              v42 = v11 - 2;
              v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              v45 = *v43;
              v44 = v43[1];
              v41 = __OFSUB__(v44, v45);
              v46 = v44 - v45;
              if (v41)
                goto LABEL_122;
              v41 = __OFADD__(v33, v46);
              v47 = v33 + v46;
              if (v41)
                goto LABEL_124;
              if (v47 >= v38)
              {
                v65 = (uint64_t *)(v28 + 16 * v30);
                v67 = *v65;
                v66 = v65[1];
                v41 = __OFSUB__(v66, v67);
                v68 = v66 - v67;
                if (v41)
                  goto LABEL_130;
                v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                v59 = *(_QWORD *)(v10 + 32);
                v60 = *(_QWORD *)(v10 + 40);
                v41 = __OFSUB__(v60, v59);
                v52 = v60 - v59;
                v53 = v41;
                goto LABEL_78;
              }
              v32 = *(_QWORD *)(v10 + 32);
              v31 = *(_QWORD *)(v10 + 40);
              v41 = __OFSUB__(v31, v32);
              v33 = v31 - v32;
              v34 = v41;
            }
            if ((v34 & 1) != 0)
              goto LABEL_123;
            v42 = v11 - 2;
            v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            v50 = *v48;
            v49 = v48[1];
            v51 = __OFSUB__(v49, v50);
            v52 = v49 - v50;
            v53 = v51;
            if (v51)
              goto LABEL_125;
            v54 = (uint64_t *)(v28 + 16 * v30);
            v56 = *v54;
            v55 = v54[1];
            v41 = __OFSUB__(v55, v56);
            v57 = v55 - v56;
            if (v41)
              goto LABEL_127;
            if (__OFADD__(v52, v57))
              goto LABEL_129;
            if (v52 + v57 >= v33)
            {
              v58 = v33 < v57;
LABEL_84:
              if (v58)
                v30 = v42;
              goto LABEL_86;
            }
LABEL_78:
            if ((v53 & 1) != 0)
              goto LABEL_126;
            v61 = (uint64_t *)(v28 + 16 * v30);
            v63 = *v61;
            v62 = v61[1];
            v41 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v41)
              goto LABEL_128;
            if (v64 < v52)
              goto LABEL_15;
LABEL_86:
            v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9)
              goto LABEL_144;
            v70 = (uint64_t *)(v28 + 16 * v69);
            v71 = *v70;
            v72 = v28;
            v73 = (_QWORD *)(v28 + 16 * v30);
            v74 = v73[1];
            result = sub_1C20B9620((char *)(v9 + 8 * *v70), (char *)(v9 + 8 * *v73), v9 + 8 * v74, v96);
            if (v1)
              goto LABEL_114;
            if (v74 < v71)
              goto LABEL_117;
            if (v30 > *(_QWORD *)(v10 + 16))
              goto LABEL_118;
            *v70 = v71;
            *(_QWORD *)(v72 + 16 * v69 + 8) = v74;
            v75 = *(_QWORD *)(v10 + 16);
            if (v30 >= v75)
              goto LABEL_119;
            v11 = v75 - 1;
            result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            v28 = v72;
            *(_QWORD *)(v10 + 16) = v75 - 1;
            v9 = v95;
            if (v75 <= 2)
              goto LABEL_15;
          }
        }
        v11 = 1;
LABEL_15:
        v3 = v94;
        if (v8 >= v94)
        {
          v7 = v92;
          v2 = v90;
          goto LABEL_103;
        }
      }
    }
    v7 = MEMORY[0x1E0DEE9D8];
    v96 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 == 1)
    {
      v92 = MEMORY[0x1E0DEE9D8];
      goto LABEL_13;
    }
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_103:
    v92 = v7;
    if (v11 >= 2)
    {
      v82 = *v2;
      do
      {
        v83 = v11 - 2;
        if (v11 < 2)
          goto LABEL_132;
        if (!v82)
          goto LABEL_146;
        v84 = v10;
        v85 = v10 + 32;
        v86 = *(_QWORD *)(v10 + 32 + 16 * v83);
        v87 = *(_QWORD *)(v10 + 32 + 16 * (v11 - 1) + 8);
        result = sub_1C20B9620((char *)(v82 + 8 * v86), (char *)(v82 + 8 * *(_QWORD *)(v85 + 16 * (v11 - 1))), v82 + 8 * v87, v96);
        if (v1)
          break;
        if (v87 < v86)
          goto LABEL_133;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1C20B9918(v84);
          v84 = result;
        }
        if (v83 >= *(_QWORD *)(v84 + 16))
          goto LABEL_134;
        v88 = (_QWORD *)(v84 + 32 + 16 * v83);
        *v88 = v86;
        v88[1] = v87;
        v89 = *(_QWORD *)(v84 + 16);
        if (v11 > v89)
          goto LABEL_135;
        result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        v10 = v84;
        *(_QWORD *)(v84 + 16) = v89 - 1;
        v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v92 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20B9620(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  int64_t v23;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 7;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4)
      memmove(a4, __src, 8 * v13);
    v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8)
      goto LABEL_39;
    v17 = (char *)(a3 - 8);
    v18 = v6;
    while (1)
    {
      v19 = v17 + 8;
      v21 = *((_QWORD *)v18 - 1);
      v18 -= 8;
      v20 = v21;
      if (*((_QWORD *)v14 - 1) < v21)
        break;
      v20 = *((_QWORD *)v14 - 1);
      v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(_QWORD *)v17 = v20;
        goto LABEL_36;
      }
      v22 = v17 >= v14;
      v14 -= 8;
      if (v22)
        goto LABEL_35;
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        v6 = v18;
        if (v14 > v4)
          continue;
      }
      v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6)
      goto LABEL_36;
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[8 * v10] <= a4)
    memmove(a4, __dst, 8 * v10);
  v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v15 = *(_QWORD *)v6;
      if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        break;
      v16 = v7 == v6;
      v6 += 8;
      if (!v16)
        goto LABEL_16;
LABEL_17:
      v7 += 8;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v15 = *(_QWORD *)v4;
    v16 = v7 == v4;
    v4 += 8;
    if (v16)
      goto LABEL_17;
LABEL_16:
    *(_QWORD *)v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  v6 = v7;
LABEL_39:
  v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8])
    memmove(v6, v4, 8 * (v23 >> 3));
  return 1;
}

char *sub_1C20B9820(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CFA0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C20B9918(uint64_t a1)
{
  return sub_1C20B9820(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1C20B992C(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1C20B9A98(a1, a2, a3, *v3, &qword_1EF75CF98, &qword_1ED7DFDC8);
  *v3 = result;
  return result;
}

char *sub_1C20B9958(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1C20B99A0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1C20B9974(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1C20B9A98(a1, a2, a3, *v3, &qword_1EF75CF88, &qword_1EF75CF90);
  *v3 = result;
  return result;
}

char *sub_1C20B99A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CFA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

_QWORD *sub_1C20B9A98(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_1C20B9BD0(uint64_t a1)
{
  return sub_1C20B99A0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s20SiriOntologyProtobuf22ExtensionFieldValueSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t DynamicType;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int64_t v23;
  __int128 v24[2];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;

  v2 = *a1;
  v3 = *a2;
  if (*(_QWORD *)(*a1 + 16) != *(_QWORD *)(*a2 + 16))
    return 0;
  v22 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v23 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v8 << 6);
  while (2)
  {
    v11 = *(_QWORD *)(v2 + 56);
    *(_QWORD *)&v26 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10);
    sub_1C20A84A8(v11 + 40 * v10, (uint64_t)&v26 + 8);
    while (1)
    {
      sub_1C20B9ED0((uint64_t)&v26, (uint64_t)&v29);
      if (!v31)
      {
        swift_release();
        return 1;
      }
      v15 = v29;
      sub_1C20A8734(&v30, (uint64_t)&v26);
      if (!*(_QWORD *)(v3 + 16))
        goto LABEL_34;
      v16 = sub_1C20A9B94(v15);
      if ((v17 & 1) == 0)
        goto LABEL_34;
      sub_1C20A84A8(*(_QWORD *)(v3 + 56) + 40 * v16, (uint64_t)v24);
      sub_1C20A8734(v24, (uint64_t)v25);
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      DynamicType = swift_getDynamicType();
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      if (DynamicType != swift_getDynamicType())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
LABEL_34:
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
        return 0;
      }
      v19 = *((_QWORD *)&v27 + 1);
      v20 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      v21 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 32))(v25, v19, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      if ((v21 & 1) == 0)
        goto LABEL_34;
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      if (v6)
        goto LABEL_5;
LABEL_7:
      v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v12 < v23)
      {
        v13 = *(_QWORD *)(v22 + 8 * v12);
        if (v13)
          goto LABEL_10;
        v14 = v8 + 2;
        ++v8;
        if (v12 + 1 < v23)
        {
          v13 = *(_QWORD *)(v22 + 8 * v14);
          if (v13)
            goto LABEL_13;
          v8 = v12 + 1;
          if (v12 + 2 < v23)
          {
            v13 = *(_QWORD *)(v22 + 8 * (v12 + 2));
            if (v13)
            {
              v12 += 2;
              goto LABEL_10;
            }
            v14 = v12 + 3;
            v8 = v12 + 2;
            if (v12 + 3 < v23)
              break;
          }
        }
      }
LABEL_24:
      v6 = 0;
      v27 = 0u;
      v28 = 0u;
      v26 = 0u;
    }
    v13 = *(_QWORD *)(v22 + 8 * v14);
    if (v13)
    {
LABEL_13:
      v12 = v14;
LABEL_10:
      v6 = (v13 - 1) & v13;
      v10 = __clz(__rbit64(v13)) + (v12 << 6);
      v8 = v12;
      continue;
    }
    break;
  }
  while (1)
  {
    v12 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v12 >= v23)
    {
      v8 = v23 - 1;
      goto LABEL_24;
    }
    v13 = *(_QWORD *)(v22 + 8 * v12);
    ++v14;
    if (v13)
      goto LABEL_10;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C20B9ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75CF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C20B9F1C()
{
  unint64_t result;

  result = qword_1EF75CF80;
  if (!qword_1EF75CF80)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for ExtensionFieldValueSet, &type metadata for ExtensionFieldValueSet);
    atomic_store(result, (unint64_t *)&qword_1EF75CF80);
  }
  return result;
}

double sub_1C20B9F60@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return ExtensionFieldValueSet.subscript.getter(*a1, a2);
}

uint64_t sub_1C20B9F98()
{
  return 0;
}

ValueMetadata *type metadata accessor for ExtensionFieldValueSet()
{
  return &type metadata for ExtensionFieldValueSet;
}

uint64_t sub_1C20B9FB8()
{
  return sub_1C2175834();
}

unint64_t Google_Protobuf_Syntax.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t Google_Protobuf_Syntax.rawValue.getter()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

unint64_t sub_1C20BA010@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1C20BA028()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

_QWORD *sub_1C20BA044@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 2uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_1C20BA060(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8))
    v2 = *v1 != 0;
  *a1 = v2;
}

uint64_t sub_1C20BA080()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t sub_1C20BA0D4()
{
  return sub_1C2175834();
}

uint64_t sub_1C20BA110()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

BOOL sub_1C20BA160(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8))
    v2 = *a1 != 0;
  v3 = *a2 != 0;
  if (!*((_BYTE *)a2 + 8))
    v3 = *a2;
  return v2 == v3;
}

BOOL sub_1C20BA19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

void sub_1C20BA1A8()
{
  qword_1EF75CFB0 = (uint64_t)&unk_1E7BD81F0;
}

uint64_t static Google_Protobuf_Syntax.allCases.getter()
{
  return sub_1C20BB5F0(&qword_1EF75CAB8);
}

uint64_t static Google_Protobuf_Syntax.allCases.setter(uint64_t a1)
{
  return sub_1C20BB664(a1, &qword_1EF75CAB8, &qword_1EF75CFB0);
}

uint64_t (*static Google_Protobuf_Syntax.allCases.modify())()
{
  if (qword_1EF75CAB8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C20BA260@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C20BB754(&qword_1EF75CAB8, &qword_1EF75CFB0, a1);
}

uint64_t Google_Protobuf_Type.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20BB898(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t type metadata accessor for Google_Protobuf_Type._StorageClass()
{
  return objc_opt_self();
}

void (*Google_Protobuf_Type.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v3[9] = *(_QWORD *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C20BA324;
}

void sub_1C20BA324(uint64_t a1, char a2)
{
  sub_1C20BB9DC(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t Google_Protobuf_Type.fields.setter(uint64_t a1)
{
  return sub_1C20BBC58(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

void (*Google_Protobuf_Type.fields.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C20BA3C4;
}

void sub_1C20BA3C4(uint64_t a1, char a2)
{
  sub_1C20BBD98(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t Google_Protobuf_Type.oneofs.setter(uint64_t a1)
{
  return sub_1C20BC00C(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

void (*Google_Protobuf_Type.oneofs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C20BA464;
}

void sub_1C20BA464(uint64_t a1, char a2)
{
  sub_1C20BC14C(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t Google_Protobuf_Type.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20BA4BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20C2D8C(v4);
    swift_release();
    *(_QWORD *)(a2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Type.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20C2D8C(v4);
    swift_release();
    *(_QWORD *)(v2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Type.options.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain();
  return sub_1C20BA670;
}

void sub_1C20BA670(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      v6 = sub_1C20C2D8C(v5);
      swift_release();
      *(_QWORD *)(v4 + 16) = v6;
      swift_release();
    }
    v7 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[10];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      v10 = sub_1C20C2D8C(v9);
      swift_release();
      *(_QWORD *)(v8 + 16) = v10;
      swift_release();
    }
    v11 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 48) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Type.sourceContext.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[7];
  v5 = v3[8];
  v6 = v3[9];
  v7 = v3[10];
  v8 = 0xC000000000000000;
  v9 = 0xE000000000000000;
  if (v5)
    v10 = v3[7];
  else
    v10 = 0;
  if (v5)
  {
    v9 = v3[8];
    v11 = v3[9];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
    v8 = v3[10];
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v8;
  return sub_1C20C2FEC(v4, v5, v6, v7);
}

uint64_t sub_1C20BA824@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD **)(a1 + 16);
  swift_beginAccess();
  v4 = v3[7];
  v5 = v3[8];
  v6 = v3[9];
  v7 = v3[10];
  v8 = 0xE000000000000000;
  v9 = 0xC000000000000000;
  if (v5)
    v10 = v3[9];
  else
    v10 = 0;
  if (v5)
  {
    v9 = v3[10];
    v11 = v3[7];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
    v8 = v3[8];
  *a2 = v11;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v9;
  return sub_1C20C2FEC(v4, v5, v6, v7);
}

uint64_t Google_Protobuf_Type.sourceContext.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C20C2D8C(v7);
    swift_release();
    *(_QWORD *)(v2 + 16) = v8;
    swift_release();
  }
  v9 = *(_QWORD **)(v2 + 16);
  swift_beginAccess();
  v10 = v9[7];
  v11 = v9[8];
  v12 = v9[9];
  v13 = v9[10];
  v9[7] = v3;
  v9[8] = v4;
  v9[9] = v5;
  v9[10] = v6;
  return sub_1C20C3024(v10, v11, v12, v13);
}

void (*Google_Protobuf_Type.sourceContext.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[7];
  v6 = v4[8];
  v7 = v4[9];
  v8 = v4[10];
  v9 = 0xC000000000000000;
  v10 = 0xE000000000000000;
  if (v6)
    v11 = v4[7];
  else
    v11 = 0;
  if (v6)
  {
    v10 = v4[8];
    v12 = v4[9];
  }
  else
  {
    v12 = 0;
  }
  if (v6)
    v9 = v4[10];
  *v3 = v11;
  v3[1] = v10;
  v3[2] = v12;
  v3[3] = v9;
  sub_1C20C2FEC(v5, v6, v7, v8);
  return sub_1C20BA9D8;
}

void sub_1C20BA9D8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[13];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      v9 = sub_1C20C2D8C(v8);
      swift_release();
      *(_QWORD *)(v7 + 16) = v9;
      swift_release();
    }
    v10 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v11 = v10[7];
    v12 = v10[8];
    v13 = v10[9];
    v14 = v10[10];
    v10[7] = v4;
    v10[8] = v3;
    v10[9] = v6;
    v10[10] = v5;
    sub_1C20C3024(v11, v12, v13, v14);
    v15 = v2[2];
    v16 = v2[3];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v15, v16);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = v2[13];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      v18 = swift_retain();
      v19 = sub_1C20C2D8C(v18);
      swift_release();
      *(_QWORD *)(v17 + 16) = v19;
      swift_release();
    }
    v20 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v21 = v20[7];
    v22 = v20[8];
    v23 = v20[9];
    v24 = v20[10];
    v20[7] = v4;
    v20[8] = v3;
    v20[9] = v6;
    v20[10] = v5;
    sub_1C20C3024(v21, v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_Type.hasSourceContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Type.clearSourceContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20C2D8C(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[7];
  v6 = v4[8];
  v7 = v4[9];
  v8 = v4[10];
  *(_OWORD *)(v4 + 7) = 0u;
  *(_OWORD *)(v4 + 9) = 0u;
  sub_1C20C3024(v5, v6, v7, v8);
}

uint64_t Google_Protobuf_Type.syntax.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 96);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 88);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C20BAC98(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20C2D8C(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 88) = v3;
  *(_BYTE *)(v7 + 96) = v4;
  return result;
}

uint64_t Google_Protobuf_Type.syntax.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20C2D8C(v5);
    swift_release();
    *(_QWORD *)(v2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + 16);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 88) = v3;
  *(_BYTE *)(v7 + 96) = v4;
  return result;
}

void (*Google_Protobuf_Type.syntax.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_BYTE *)(v4 + 96);
  v3[9] = *(_QWORD *)(v4 + 88);
  *((_BYTE *)v3 + 80) = v5;
  return sub_1C20BAE54;
}

void sub_1C20BAE54(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = v3[11];
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C20C2D8C(v8);
    swift_release();
    *(_QWORD *)(v7 + 16) = v9;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(v3[11] + 16);
  swift_beginAccess();
  *(_QWORD *)(v10 + 88) = v4;
  *(_BYTE *)(v10 + 96) = v5;
  free(v3);
}

uint64_t (*Google_Protobuf_Type.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Type.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CAE0, &qword_1EF75D008, a1);
}

void Google_Protobuf_Field.kind.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Google_Protobuf_Field.kind.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*Google_Protobuf_Field.kind.modify())()
{
  return nullsub_1;
}

void Google_Protobuf_Field.cardinality.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Google_Protobuf_Field.cardinality.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_Field.cardinality.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.number.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 28);
}

uint64_t Google_Protobuf_Field.number.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*Google_Protobuf_Field.number.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.typeURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.typeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.typeURL.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.oneofIndex.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 64);
}

uint64_t Google_Protobuf_Field.oneofIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*Google_Protobuf_Field.oneofIndex.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.packed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 68);
}

uint64_t Google_Protobuf_Field.packed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 68) = result;
  return result;
}

uint64_t (*Google_Protobuf_Field.packed.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Field.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*Google_Protobuf_Field.options.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.jsonName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.jsonName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.jsonName.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.defaultValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.defaultValue.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Field.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Field.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t Google_Protobuf_Field.Kind.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 0x13;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C20BB294@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Google_Protobuf_Field.Kind.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C20BB29C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Google_Protobuf_Field.Cardinality.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C20BB2C0()
{
  sub_1C2175828();
  sub_1C20B9FB8();
  return sub_1C2175870();
}

uint64_t sub_1C20BB30C()
{
  return sub_1C20B9FB8();
}

uint64_t sub_1C20BB318()
{
  sub_1C2175828();
  sub_1C20B9FB8();
  return sub_1C2175870();
}

BOOL sub_1C20BB360(uint64_t a1, uint64_t *a2)
{
  return sub_1C20BA19C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void Google_Protobuf_Field.Cardinality.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t Google_Protobuf_Field.Cardinality.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 4;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t Google_Protobuf_Field.Cardinality.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1C20BB3AC(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1C20BB3C0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1C20BB3C8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Google_Protobuf_Field.Cardinality.init(rawValue:)(*a1, a2);
}

void sub_1C20BB3D0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1C20BB3DC()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t sub_1C20BB420()
{
  return sub_1C2175834();
}

uint64_t sub_1C20BB448()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

BOOL sub_1C20BB488(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

double Google_Protobuf_Field.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 0;
  *(_QWORD *)(a1 + 72) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0xE000000000000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = xmmword_1C2175DE0;
  return result;
}

void sub_1C20BB4EC()
{
  qword_1EF75CFB8 = (uint64_t)&unk_1E7BD8230;
}

uint64_t static Google_Protobuf_Field.Kind.allCases.getter()
{
  return sub_1C20BB5F0(&qword_1EF75CAC0);
}

uint64_t static Google_Protobuf_Field.Kind.allCases.setter(uint64_t a1)
{
  return sub_1C20BB664(a1, &qword_1EF75CAC0, &qword_1EF75CFB8);
}

uint64_t (*static Google_Protobuf_Field.Kind.allCases.modify())()
{
  if (qword_1EF75CAC0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C20BB5A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C20BB754(&qword_1EF75CAC0, &qword_1EF75CFB8, a1);
}

void sub_1C20BB5C0()
{
  qword_1EF75CFC0 = (uint64_t)&unk_1E7BD8380;
}

uint64_t static Google_Protobuf_Field.Cardinality.allCases.getter()
{
  return sub_1C20BB5F0(&qword_1EF75CAC8);
}

uint64_t sub_1C20BB5F0(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static Google_Protobuf_Field.Cardinality.allCases.setter(uint64_t a1)
{
  return sub_1C20BB664(a1, &qword_1EF75CAC8, &qword_1EF75CFC0);
}

uint64_t sub_1C20BB664(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Google_Protobuf_Field.Cardinality.allCases.modify())()
{
  if (qword_1EF75CAC8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C20BB738@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C20BB754(&qword_1EF75CAC8, &qword_1EF75CFC0, a1);
}

uint64_t sub_1C20BB754@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20BB7BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a1;
  v10 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v12 = swift_retain();
    v13 = a7(v12);
    swift_release();
    *(_QWORD *)(a2 + 16) = v13;
    swift_release();
  }
  v14 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Enum.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20BB898(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

uint64_t sub_1C20BB898(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = a5(v11);
    swift_release();
    *(_QWORD *)(v8 + 16) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(v8 + 16);
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Enum.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v3[9] = *(_QWORD *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C20BB9C4;
}

void sub_1C20BB9C4(uint64_t a1, char a2)
{
  sub_1C20BB9DC(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

void sub_1C20BB9DC(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = v7[11];
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      v12 = a5(v11);
      swift_release();
      *(_QWORD *)(v10 + 16) = v12;
      swift_release();
    }
    v13 = *(_QWORD *)(v7[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v13 + 16) = v8;
    *(_QWORD *)(v13 + 24) = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v14 = v7[11];
      a3(0);
      swift_allocObject();
      v15 = swift_retain();
      v16 = a5(v15);
      swift_release();
      *(_QWORD *)(v14 + 16) = v16;
      swift_release();
    }
    v17 = *(_QWORD *)(v7[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v17 + 16) = v8;
    *(_QWORD *)(v17 + 24) = v9;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV6fieldsSayAA0d1_C6_FieldVGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20BBB84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = a7(v11);
    swift_release();
    *(_QWORD *)(a2 + 16) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v13 + 32) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Enum.enumvalue.setter(uint64_t a1)
{
  return sub_1C20BBC58(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

uint64_t sub_1C20BBC58(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = a4(v9);
    swift_release();
    *(_QWORD *)(v7 + 16) = v10;
    swift_release();
  }
  v11 = *(_QWORD *)(v7 + 16);
  swift_beginAccess();
  *(_QWORD *)(v11 + 32) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Enum.enumvalue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C20BBD80;
}

void sub_1C20BBD80(uint64_t a1, char a2)
{
  sub_1C20BBD98(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

void sub_1C20BBD98(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      v11 = a5(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 32) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = v7[10];
      a3(0);
      swift_allocObject();
      v14 = swift_retain();
      v15 = a5(v14);
      swift_release();
      *(_QWORD *)(v13 + 16) = v15;
      swift_release();
    }
    v16 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v16 + 32) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV6oneofsSaySSGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20BBF38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    v12 = a7(v11);
    swift_release();
    *(_QWORD *)(a2 + 16) = v12;
    swift_release();
  }
  v13 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v13 + 40) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Enum.options.setter(uint64_t a1)
{
  return sub_1C20BC00C(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

uint64_t sub_1C20BC00C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v9 = swift_retain();
    v10 = a4(v9);
    swift_release();
    *(_QWORD *)(v7 + 16) = v10;
    swift_release();
  }
  v11 = *(_QWORD *)(v7 + 16);
  swift_beginAccess();
  *(_QWORD *)(v11 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Enum.options.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C20BC134;
}

void sub_1C20BC134(uint64_t a1, char a2)
{
  sub_1C20BC14C(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

void sub_1C20BC14C(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      v11 = a5(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 40) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = v7[10];
      a3(0);
      swift_allocObject();
      v14 = swift_retain();
      v15 = a5(v14);
      swift_release();
      *(_QWORD *)(v13 + 16) = v15;
      swift_release();
    }
    v16 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v16 + 40) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t Google_Protobuf_Enum.sourceContext.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[6];
  v5 = v3[7];
  v6 = v3[8];
  v7 = v3[9];
  v8 = 0xC000000000000000;
  v9 = 0xE000000000000000;
  if (v5)
    v10 = v3[6];
  else
    v10 = 0;
  if (v5)
  {
    v9 = v3[7];
    v11 = v3[8];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
    v8 = v3[9];
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v8;
  return sub_1C20C2FEC(v4, v5, v6, v7);
}

uint64_t sub_1C20BC314@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD **)(a1 + 16);
  swift_beginAccess();
  v4 = v3[6];
  v5 = v3[7];
  v6 = v3[8];
  v7 = v3[9];
  v8 = 0xE000000000000000;
  v9 = 0xC000000000000000;
  if (v5)
    v10 = v3[8];
  else
    v10 = 0;
  if (v5)
  {
    v9 = v3[9];
    v11 = v3[6];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
    v8 = v3[7];
  *a2 = v11;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v9;
  return sub_1C20C2FEC(v4, v5, v6, v7);
}

uint64_t sub_1C20BC380(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[4];

  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v10[0] = *a1;
  v10[1] = v6;
  v10[2] = v7;
  v10[3] = v8;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v7, v8);
  return a5(v10);
}

uint64_t Google_Protobuf_Enum.sourceContext.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C20C2B78(v7);
    swift_release();
    *(_QWORD *)(v2 + 16) = v8;
    swift_release();
  }
  v9 = *(_QWORD **)(v2 + 16);
  swift_beginAccess();
  v10 = v9[6];
  v11 = v9[7];
  v12 = v9[8];
  v13 = v9[9];
  v9[6] = v3;
  v9[7] = v4;
  v9[8] = v5;
  v9[9] = v6;
  return sub_1C20C3024(v10, v11, v12, v13);
}

void (*Google_Protobuf_Enum.sourceContext.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[6];
  v6 = v4[7];
  v7 = v4[8];
  v8 = v4[9];
  v9 = 0xC000000000000000;
  v10 = 0xE000000000000000;
  if (v6)
    v11 = v4[6];
  else
    v11 = 0;
  if (v6)
  {
    v10 = v4[7];
    v12 = v4[8];
  }
  else
  {
    v12 = 0;
  }
  if (v6)
    v9 = v4[9];
  *v3 = v11;
  v3[1] = v10;
  v3[2] = v12;
  v3[3] = v9;
  sub_1C20C2FEC(v5, v6, v7, v8);
  return sub_1C20BC524;
}

void sub_1C20BC524(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[13];
      type metadata accessor for Google_Protobuf_Enum._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      v9 = sub_1C20C2B78(v8);
      swift_release();
      *(_QWORD *)(v7 + 16) = v9;
      swift_release();
    }
    v10 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v11 = v10[6];
    v12 = v10[7];
    v13 = v10[8];
    v14 = v10[9];
    v10[6] = v4;
    v10[7] = v3;
    v10[8] = v6;
    v10[9] = v5;
    sub_1C20C3024(v11, v12, v13, v14);
    v15 = v2[2];
    v16 = v2[3];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v15, v16);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = v2[13];
      type metadata accessor for Google_Protobuf_Enum._StorageClass();
      swift_allocObject();
      v18 = swift_retain();
      v19 = sub_1C20C2B78(v18);
      swift_release();
      *(_QWORD *)(v17 + 16) = v19;
      swift_release();
    }
    v20 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v21 = v20[6];
    v22 = v20[7];
    v23 = v20[8];
    v24 = v20[9];
    v20[6] = v4;
    v20[7] = v3;
    v20[8] = v6;
    v20[9] = v5;
    sub_1C20C3024(v21, v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_Enum.hasSourceContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 56) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Enum.clearSourceContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20C2B78(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[6];
  v6 = v4[7];
  v7 = v4[8];
  v8 = v4[9];
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  sub_1C20C3024(v5, v6, v7, v8);
}

uint64_t Google_Protobuf_Enum.syntax.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 88);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 80);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C20BC7E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20C2B78(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 80) = v3;
  *(_BYTE *)(v7 + 88) = v4;
  return result;
}

uint64_t Google_Protobuf_Enum.syntax.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20C2B78(v5);
    swift_release();
    *(_QWORD *)(v2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + 16);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 80) = v3;
  *(_BYTE *)(v7 + 88) = v4;
  return result;
}

void (*Google_Protobuf_Enum.syntax.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_BYTE *)(v4 + 88);
  v3[9] = *(_QWORD *)(v4 + 80);
  *((_BYTE *)v3 + 80) = v5;
  return sub_1C20BC99C;
}

void sub_1C20BC99C(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = v3[11];
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C20C2B78(v8);
    swift_release();
    *(_QWORD *)(v7 + 16) = v9;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(v3[11] + 16);
  swift_beginAccess();
  *(_QWORD *)(v10 + 80) = v4;
  *(_BYTE *)(v10 + 88) = v5;
  free(v3);
}

uint64_t Google_Protobuf_Enum.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_Enum.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Enum.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CB08, &qword_1EF75D090, a1);
}

uint64_t sub_1C20BCAAC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = xmmword_1C2175DE0;
  if (*a1 != -1)
    swift_once();
  *(_QWORD *)(a3 + 16) = *a2;
  return swift_retain();
}

uint64_t Google_Protobuf_EnumValue.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_EnumValue.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValue.number.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t Google_Protobuf_EnumValue.number.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.number.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValue.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumValue.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.options.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_EnumValue.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_EnumValue.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C2175DE0;
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV4nameSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Google_Protobuf_Option.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v5 = *(_QWORD **)(v2 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0xE000000000000000;
    v6[5] = 0;
    v6[6] = 0;
    v6[4] = 0;
    swift_beginAccess();
    v8 = v5[2];
    v7 = v5[3];
    swift_beginAccess();
    v6[2] = v8;
    v6[3] = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v9 = v5[4];
    v10 = v5[5];
    v11 = v5[6];
    sub_1C20C309C(v9, v10, v11);
    swift_release();
    swift_beginAccess();
    v12 = v6[4];
    v13 = v6[5];
    v14 = v6[6];
    v6[4] = v9;
    v6[5] = v10;
    v6[6] = v11;
    sub_1C20B8490(v12, v13, v14);
    *(_QWORD *)(v2 + 16) = v6;
    swift_release();
  }
  v15 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Option.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v3[3] = *(_QWORD *)(v4 + 16);
  v3[4] = v5;
  swift_bridgeObjectRetain();
  return sub_1C20BCE60;
}

void sub_1C20BCE60(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    Google_Protobuf_Option.name.setter(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    Google_Protobuf_Option.name.setter(*(_QWORD *)(*(_QWORD *)a1 + 24), v4);
  }
  free(v2);
}

uint64_t Google_Protobuf_Option.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[4];
  v5 = v3[5];
  v6 = v3[6];
  if (v6)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1C2175DE0;
    if (qword_1EF75CD58 != -1)
      swift_once();
    a1[2] = qword_1EF76E188;
    swift_retain();
  }
  return sub_1C20C309C(v4, v5, v6);
}

uint64_t sub_1C20BCF74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = (_QWORD *)a1[2];
  swift_beginAccess();
  v6 = v5[4];
  v7 = v5[5];
  v8 = v5[6];
  if (v8)
  {
    sub_1C20A8008(v3, v4);
    swift_retain();
    v9 = v8;
    v10 = v6;
    v11 = v7;
  }
  else
  {
    sub_1C20A8008(v3, v4);
    v12 = qword_1EF75CD58;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v9 = qword_1EF76E188;
    swift_retain();
    v10 = 0;
    v11 = 0xC000000000000000;
  }
  sub_1C20C309C(v6, v7, v8);
  sub_1C20A8058(v3, v4);
  result = swift_release();
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v9;
  return result;
}

uint64_t sub_1C20BD084(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4[3];

  v1 = a1[1];
  v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  sub_1C20A8008(v4[0], v1);
  swift_retain();
  return Google_Protobuf_Option.value.setter(v4);
}

uint64_t Google_Protobuf_Option.value.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v20 = v2;
    v5 = *(_QWORD **)(v1 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0xE000000000000000;
    v6[5] = 0;
    v6[6] = 0;
    v6[4] = 0;
    swift_beginAccess();
    v8 = v5[2];
    v7 = v5[3];
    swift_beginAccess();
    v6[2] = v8;
    v6[3] = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v9 = v5[4];
    v10 = v5[5];
    v11 = v5[6];
    sub_1C20C309C(v9, v10, v11);
    v2 = v20;
    swift_release();
    swift_beginAccess();
    v12 = v6[4];
    v13 = v6[5];
    v14 = v6[6];
    v6[4] = v9;
    v6[5] = v10;
    v6[6] = v11;
    sub_1C20B8490(v12, v13, v14);
    *(_QWORD *)(v1 + 16) = v6;
    swift_release();
  }
  v15 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v16 = v15[4];
  v17 = v15[5];
  v18 = v15[6];
  v15[4] = v2;
  v15[5] = v3;
  v15[6] = v4;
  return sub_1C20B8490(v16, v17, v18);
}

void (*Google_Protobuf_Option.value.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[4];
  v6 = v4[5];
  v7 = v4[6];
  if (v7)
  {
    *v3 = v5;
    v3[1] = v6;
    v3[2] = v7;
  }
  else
  {
    *(_OWORD *)v3 = xmmword_1C2175DE0;
    if (qword_1EF75CD58 != -1)
      swift_once();
    v3[2] = qword_1EF76E188;
    swift_retain();
  }
  sub_1C20C309C(v5, v6, v7);
  return sub_1C20BD310;
}

void sub_1C20BD310(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7[3];

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v6 = v3[2];
  v7[0] = v4;
  v7[1] = v5;
  v7[2] = v6;
  if ((a2 & 1) != 0)
  {
    sub_1C20A8008(v4, v5);
    swift_retain();
    Google_Protobuf_Option.value.setter(v7);
    sub_1C20A8058(*v3, v3[1]);
    swift_release();
  }
  else
  {
    Google_Protobuf_Option.value.setter(v7);
  }
  free(v3);
}

BOOL Google_Protobuf_Option.hasValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 48) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Option.clearValue()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v1 = *(_QWORD **)(v0 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    v2 = (_QWORD *)swift_allocObject();
    v2[2] = 0;
    v2[3] = 0xE000000000000000;
    v2[5] = 0;
    v2[6] = 0;
    v2[4] = 0;
    swift_beginAccess();
    v4 = v1[2];
    v3 = v1[3];
    swift_beginAccess();
    v2[2] = v4;
    v2[3] = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v5 = v1[4];
    v6 = v1[5];
    v7 = v1[6];
    sub_1C20C309C(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    v8 = v2[4];
    v9 = v2[5];
    v10 = v2[6];
    v2[4] = v5;
    v2[5] = v6;
    v2[6] = v7;
    sub_1C20B8490(v8, v9, v10);
    *(_QWORD *)(v0 + 16) = v2;
    swift_release();
  }
  v11 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v12 = v11[4];
  v13 = v11[5];
  v14 = v11[6];
  v11[5] = 0;
  v11[6] = 0;
  v11[4] = 0;
  sub_1C20B8490(v12, v13, v14);
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV13unknownFieldsAA14UnknownStorageVvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Option.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Option.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)a1 = xmmword_1C2175DE0;
  type metadata accessor for Google_Protobuf_Option._StorageClass();
  result = swift_initStaticObject();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C20BD5C0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD7460, &qword_1EF75CFC8);
}

uint64_t static Google_Protobuf_Syntax._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAD0 != -1)
    swift_once();
  v2 = unk_1EF75CFD0;
  v3 = qword_1EF75CFD8;
  v4 = unk_1EF75CFE0;
  *a1 = qword_1EF75CFC8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20BD650@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAD0 != -1)
    swift_once();
  v2 = unk_1EF75CFD0;
  v3 = qword_1EF75CFD8;
  v4 = unk_1EF75CFE0;
  *a1 = qword_1EF75CFC8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_Type.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1C20BD6E8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD66C8, &qword_1EF75CFE8);
}

uint64_t static Google_Protobuf_Type._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAD8 != -1)
    swift_once();
  v2 = unk_1EF75CFF0;
  v3 = qword_1EF75CFF8;
  v4 = unk_1EF75D000;
  *a1 = qword_1EF75CFE8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20BD778()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  type metadata accessor for Google_Protobuf_Type._StorageClass();
  v0 = swift_allocObject();
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v1;
  result = 0.0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  *(_BYTE *)(v0 + 96) = 1;
  qword_1EF75D008 = v0;
  return result;
}

uint64_t sub_1C20BD7D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20C3024(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_Type.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C0E30(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BD84C);
}

uint64_t sub_1C20BD84C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;
  void (*v20)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v26 = a1 + 88;
    v24 = a1 + 48;
    v25 = a1 + 56;
    v22 = a1 + 32;
    v23 = a1 + 40;
    v12 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[42];
          v19 = v12;
          goto LABEL_12;
        case 2:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v14 = sub_1C20C3C88();
          v15 = v22;
          v16 = &type metadata for Google_Protobuf_Field;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[44];
          v19 = v23;
LABEL_12:
          v17 = v11;
          v18(v19, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v14 = sub_1C20C34A0();
          v15 = v24;
          v16 = &type metadata for Google_Protobuf_Option;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
          v14 = sub_1C20C4E54();
          v15 = v25;
          v16 = &type metadata for Google_Protobuf_SourceContext;
LABEL_5:
          v17 = v11;
          v13(v15, v16, v14, a3, a4);
LABEL_6:
          v11 = v17;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          v20 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[48];
          v21 = sub_1C20C4E10();
          v20(v26, &type metadata for Google_Protobuf_Syntax, v21, a3, a4);
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_Type.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20BDAA4);
}

uint64_t sub_1C20BDAA4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t result;
  void (*v14)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v24;
  char v25;
  uint64_t (*v26)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v27;
  _QWORD v28[2];
  __int128 v29;
  uint64_t v30;
  char v31;

  v5 = v4;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v11
    || (v12 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
      || (v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v15 = sub_1C20C3C88(),
          v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_Field, v15, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
        || (v17 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))a4[32],
            v18 = swift_bridgeObjectRetain(),
            v17(v18, 3, a3, a4),
            result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16)
          || (v19 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
              v20 = sub_1C20C34A0(),
              v21 = swift_bridgeObjectRetain(),
              v19(v21, 4, &type metadata for Google_Protobuf_Option, v20, a3, a4),
              result = swift_bridgeObjectRelease(),
              !v5))
        {
          swift_beginAccess();
          v22 = *(_QWORD *)(a1 + 64);
          if (!v22
            || (v28[0] = *(_QWORD *)(a1 + 56),
                v28[1] = v22,
                v29 = *(_OWORD *)(a1 + 72),
                v23 = (uint64_t (*)(_QWORD *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17],
                v24 = sub_1C20C4E54(),
                result = v23(v28, 5, &type metadata for Google_Protobuf_SourceContext, v24, a3, a4),
                !v5))
          {
            result = swift_beginAccess();
            if (*(_QWORD *)(a1 + 88))
            {
              v25 = *(_BYTE *)(a1 + 96);
              v30 = *(_QWORD *)(a1 + 88);
              v31 = v25;
              v26 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[16];
              v27 = sub_1C20C4E10();
              return v26(&v30, 6, &type metadata for Google_Protobuf_Syntax, v27, a3, a4);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_Type.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20BDD48) & 1;
}

uint64_t sub_1C20BDD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1C21757C8(), result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 32);
    swift_beginAccess();
    v10 = *(_QWORD *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1C20F8650(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v12 = *(_QWORD **)(a1 + 40);
    swift_beginAccess();
    if ((sub_1C20F76E4(v12, *(_QWORD **)(a2 + 40)) & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v13 = *(_QWORD **)(a1 + 48);
    swift_beginAccess();
    v14 = *(_QWORD **)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1C20F5614(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v17 = *(_QWORD *)(a1 + 56);
    v16 = *(_QWORD *)(a1 + 64);
    v19 = *(_QWORD *)(a1 + 72);
    v18 = *(_QWORD *)(a1 + 80);
    swift_beginAccess();
    v20 = *(_QWORD *)(a2 + 56);
    v21 = *(_QWORD *)(a2 + 64);
    v22 = *(_QWORD *)(a2 + 72);
    v23 = *(_QWORD *)(a2 + 80);
    if (v16)
    {
      if (v21)
      {
        if (v17 == v20 && v16 == v21 || (sub_1C21757C8() & 1) != 0)
        {
          sub_1C20C2FEC(v17, v16, v19, v18);
          sub_1C20C2FEC(v17, v16, v19, v18);
          sub_1C20C2FEC(v20, v21, v22, v23);
          sub_1C20A8008(v19, v18);
          sub_1C20A8008(v22, v23);
          sub_1C20FD650(v19, v18);
          v34 = v24;
          sub_1C20A8058(v22, v23);
          sub_1C20A8058(v19, v18);
          sub_1C20C3024(v20, v21, v22, v23);
          swift_bridgeObjectRelease();
          sub_1C20A8058(v19, v18);
          sub_1C20C3024(v17, v16, v19, v18);
          if ((v34 & 1) == 0)
            goto LABEL_26;
LABEL_17:
          swift_beginAccess();
          v25 = *(_QWORD *)(a1 + 88);
          v26 = *(unsigned __int8 *)(a1 + 96);
          swift_release();
          swift_beginAccess();
          v27 = *(_QWORD *)(a2 + 88);
          v28 = *(unsigned __int8 *)(a2 + 96);
          swift_release();
          v29 = v25 != 0;
          if (!v26)
            v29 = v25;
          if (v28 == 1)
          {
            if (v27)
            {
              if (v29 != 1)
                return 0;
            }
            else if (v29)
            {
              return 0;
            }
          }
          else if (v29 != v27)
          {
            return 0;
          }
          return 1;
        }
        sub_1C20C2FEC(v17, v16, v19, v18);
        swift_bridgeObjectRetain();
        sub_1C20A8008(v19, v18);
        swift_bridgeObjectRelease();
        sub_1C20A8058(v19, v18);
        v30 = v17;
        v31 = v16;
        v32 = v19;
        v33 = v18;
LABEL_25:
        sub_1C20C3024(v30, v31, v32, v33);
LABEL_26:
        swift_release();
        swift_release();
        return 0;
      }
      swift_bridgeObjectRetain();
      sub_1C20A8008(v19, v18);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v19, v18);
      swift_bridgeObjectRelease();
      sub_1C20A8058(v19, v18);
    }
    else if (!v21)
    {
      goto LABEL_17;
    }
    sub_1C20C2FEC(v20, v21, v22, v23);
    sub_1C20C3024(v17, v16, v19, v18);
    v30 = v20;
    v31 = v21;
    v32 = v22;
    v33 = v23;
    goto LABEL_25;
  }
  return result;
}

uint64_t Google_Protobuf_Type.hashValue.getter()
{
  return sub_1C20C1794((void (*)(uint64_t, _OWORD *))sub_1C2157790);
}

uint64_t sub_1C20BE1A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CAE0, &qword_1EF75D008, a1);
}

unint64_t sub_1C20BE1C4()
{
  return 0xD000000000000014;
}

uint64_t (*sub_1C20BE1E4())()
{
  return nullsub_1;
}

uint64_t sub_1C20BE1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Type.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20BE208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Type.traverse<A>(visitor:)(a1, a2, a3);
}

void sub_1C20BE220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[4];
  uint64_t v10;

  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v7;
  v10 = v5;
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C2175834();
    sub_1C2118064((uint64_t)v9, a2);
  }
  __asm { BR              X10 }
}

double sub_1C20BE29C()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  return result;
}

void sub_1C20BE308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BED78(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1C2110D4C);
}

void sub_1C20BE314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215AA2C);
}

void sub_1C20BE320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1C20BE390()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((v3 & 0xFF000000000000) != 0)
  {
    sub_1C2175354();
    result = sub_1C20A8058(v4, v3);
    v18 = v19;
    v17 = v20;
    v7 = v21;
    v8 = v22;
    v9 = v23;
    v10 = v24;
    v11 = v25;
    v5 = v26;
    v6 = v27;
  }
  else
  {
    v12 = v4;
    v13 = v3;
    v14 = v0;
    v15 = v1;
    result = sub_1C20A8058(v12, v13);
    v17 = v15;
    v18 = v14;
  }
  *v2 = v18;
  v2[1] = v17;
  v2[2] = v7;
  v2[3] = v8;
  v2[4] = v9;
  v2[5] = v10;
  v2[6] = v11;
  v2[7] = v5;
  v2[8] = v6;
  return result;
}

void sub_1C20BE448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C2157790);
}

void sub_1C20BE458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215A5A8);
}

void sub_1C20BE464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215AD5C);
}

void sub_1C20BE470()
{
  uint64_t v0;
  char v1;
  _BYTE v2[16];
  _QWORD v3[2];
  char v4;

  sub_1C20C4D30(v0 + 16, (uint64_t)v2, &qword_1EF75D580);
  sub_1C20C4D30((uint64_t)v2, (uint64_t)v3, &qword_1EF75D580);
  if (v3[1])
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  sub_1C20C4D30(v0 + 32, (uint64_t)&v1, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v1, (uint64_t)&v4, &qword_1EF75D588);
  if (v4 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  __asm { BR              X10 }
}

double sub_1C20BE56C()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20C4DA0((uint64_t)&v8);
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  return result;
}

void sub_1C20BE5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215D99C);
}

void sub_1C20BE5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215DD5C);
}

void sub_1C20BE600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215C778);
}

void sub_1C20BE60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215B4F0);
}

void sub_1C20BE618(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  if (!a2[2])
    __asm { BR              X10 }
  sub_1C2175834();
  v17 = a2 + 4;
  swift_bridgeObjectRetain();
  v18 = a2[5];
  v5 = a2[6];
  v6 = v17[3];
  v7 = v17[4];
  v8 = v17[6];
  v9 = v17[8];
  v10 = *v17;
  v11 = *(_QWORD *)(*v17 + 16);
  if (v11)
  {
    sub_1C2175834();
    sub_1C2175834();
    v12 = v10 + 32;
    do
    {
      v12 += 4;
      sub_1C217584C();
      --v11;
    }
    while (v11);
  }
  v13 = *(_QWORD *)(v18 + 16);
  if (v13)
  {
    sub_1C2175834();
    sub_1C2175834();
    v14 = v18 + 32;
    do
    {
      v14 += 4;
      sub_1C217584C();
      --v13;
    }
    while (v13);
  }
  if (v8)
  {
    sub_1C2175834();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    if (!v9)
      goto LABEL_11;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v7);
    swift_bridgeObjectRetain();
    if (!v9)
    {
LABEL_11:
      v15 = *(_QWORD *)(v5 + 16);
      if (v15)
      {
        sub_1C2175834();
        sub_1C2175834();
        v16 = v5 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1C21754C8();
          swift_bridgeObjectRelease();
          v16 += 16;
          --v15;
        }
        while (v15);
      }
      __asm { BR              X9 }
    }
  }
  sub_1C2175834();
  sub_1C21754C8();
  goto LABEL_11;
}

uint64_t sub_1C20BE998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if ((a4 & 0xFF000000000000) != 0)
  {
    result = sub_1C2175354();
    v8 = v15;
    v11 = v16;
    v13 = v17;
    v7 = v18;
    v6 = v19;
    v5 = v20;
    v4 = v21;
    v12 = v22;
    v9 = v23;
  }
  *v10 = v8;
  v10[1] = v11;
  v10[2] = v13;
  v10[3] = v7;
  v10[4] = v6;
  v10[5] = v5;
  v10[6] = v4;
  v10[7] = v12;
  v10[8] = v9;
  return result;
}

void sub_1C20BEA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[4];
  uint64_t v13;

  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v10;
  v11 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v11;
  v13 = v9;
  swift_retain();
  sub_1C215E39C(a5, (uint64_t)v12, a2, a3, a4);
  swift_release();
  __asm { BR              X10 }
}

void sub_1C20BEB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215D294);
}

void sub_1C20BEB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BEB44(a1, a2, a3, a4, (void (*)(uint64_t, _OWORD *))sub_1C215BEF8);
}

void sub_1C20BEB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _OWORD *))
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[4];
  uint64_t v12;

  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v9;
  v10 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v10;
  v12 = v8;
  swift_retain();
  a5(a4, v11);
  swift_release();
  __asm { BR              X10 }
}

void sub_1C20BEC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a4 & 0x100000000) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  if ((a5 & 0x100000000) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BECDC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BED60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BED78(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1C2113D68);
}

void sub_1C20BED6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C20BED78(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1C2113FF8);
}

void sub_1C20BED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  if (*(_QWORD *)(a2 + 16))
    a5(a2, 1);
  __asm { BR              X10 }
}

void sub_1C20BEE64(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BEEDC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BEF60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  __asm { BR              X10 }
}

double sub_1C20BEFF0()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  return result;
}

void sub_1C20BF05C(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 != 0.0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BF0E0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BF164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BF1DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BF260(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BF2D8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BF35C(float a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 != 0.0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BF3E0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BF464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1C20BF4C4()
{
  unint64_t v0;
  uint64_t v1;

  if ((v1 & 0xFF000000000000) != 0)
  {
    sub_1C2175834();
    sub_1C2175354();
  }
  return ((uint64_t (*)(void))((char *)sub_1C20BF528 + 4 * byte_1C2176086[v0 >> 62]))();
}

double sub_1C20BF528()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  return result;
}

void sub_1C20BF594(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  if (a3)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

double sub_1C20BF630()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

void sub_1C20BF6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    sub_1C2175834();
    sub_1C2175834();
    v7 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v5;
    }
    while (v5);
  }
  __asm { BR              X10 }
}

double sub_1C20BF768()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  return result;
}

void sub_1C20BF7D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 1) != 0)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  __asm { BR              X10 }
}

double sub_1C20BF848()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  sub_1C20A8058(v2, v1);
  *(_OWORD *)v0 = v4;
  *(_OWORD *)(v0 + 16) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 64) = v8;
  return result;
}

uint64_t sub_1C20BF8C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAD8 != -1)
    swift_once();
  v2 = unk_1EF75CFF0;
  v3 = qword_1EF75CFF8;
  v4 = unk_1EF75D000;
  *a1 = qword_1EF75CFE8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20BF944()
{
  uint64_t v0;

  return sub_1C2157E0C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20BF950(uint64_t a1, uint64_t a2)
{
  return sub_1C20C1944(a1, a2, (void (*)(uint64_t, _OWORD *))sub_1C2157790);
}

void sub_1C20BF95C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BEB44(a1, *v1, v1[1], v1[2], (void (*)(uint64_t, _OWORD *))sub_1C2157790);
}

uint64_t sub_1C20BF980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C19D4(a1, a2, a3, (void (*)(uint64_t, _OWORD *))sub_1C2157790);
}

uint64_t sub_1C20BF98C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20BDD48) & 1;
}

unint64_t static Google_Protobuf_Field.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1C20BF9C8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6D80, &qword_1EF75D010);
}

uint64_t static Google_Protobuf_Field._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D018;
  v3 = qword_1EF75D020;
  v4 = unk_1EF75D028;
  *a1 = qword_1EF75D010;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Field.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  void (*v10)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  ValueMetadata *v13;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 384);
          v11 = sub_1C20C3528();
          v12 = v3;
          v13 = &type metadata for Google_Protobuf_Field.Kind;
          goto LABEL_13;
        case 2:
          v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 384);
          v11 = sub_1C20C34E4();
          v12 = v3 + 16;
          v13 = &type metadata for Google_Protobuf_Field.Cardinality;
          goto LABEL_13;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 28, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 32, a2, a3);
          break;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 48, a2, a3);
          break;
        case 7:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 64, a2, a3);
          break;
        case 8:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3 + 68, a2, a3);
          break;
        case 9:
          v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          v11 = sub_1C20C34A0();
          v12 = v3 + 72;
          v13 = &type metadata for Google_Protobuf_Option;
LABEL_13:
          v10(v12, v13, v11, a2, a3);
          break;
        case 10:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 80, a2, a3);
          break;
        case 11:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 96, a2, a3);
          break;
        default:
          break;
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C20BFC14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12[2];
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)v0)
  {
    sub_1C2175834();
    sub_1C20B9FB8();
  }
  sub_1C20C4E98((uint64_t *)(v0 + 16), (uint64_t)v12);
  sub_1C20C4E98(v12, (uint64_t)&v14);
  if (v14)
  {
    sub_1C2175834();
    sub_1C20C4E98(v12, (uint64_t)&v13);
    sub_1C2175834();
  }
  if (*(_DWORD *)(v0 + 28))
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  v2 = *(_QWORD *)(v0 + 40);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  v4 = *(_QWORD *)(v0 + 56);
  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = *(_QWORD *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  if (*(_DWORD *)(v0 + 64))
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  if ((*(_BYTE *)(v0 + 68) & 1) != 0)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  v6 = *(_QWORD **)(v0 + 72);
  if (!v6[2] || (result = sub_1C2111214(v6), !v1))
  {
    v8 = *(_QWORD *)(v0 + 88);
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = *(_QWORD *)(v0 + 80) & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      sub_1C2175834();
      sub_1C21754C8();
    }
    v10 = *(_QWORD *)(v0 + 104);
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = *(_QWORD *)(v0 + 96) & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      sub_1C2175834();
      sub_1C21754C8();
    }
    __asm { BR              X10 }
  }
  return result;
}

void sub_1C20BFE30(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  char v6;
  unsigned __int8 *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unsigned __int8 *v14;
  char *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  char *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  char *v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  char *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;

  v3 = v1;
  v5 = *(_QWORD *)v3;
  if (*(_QWORD *)v3)
  {
    v6 = *(_BYTE *)(v3 + 8);
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v7);
    sub_1C215F638(v5, v6);
    v8 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      *a1 = v8;
    }
    v11 = *((_QWORD *)v8 + 2);
    v10 = *((_QWORD *)v8 + 3);
    if (v11 >= v10 >> 1)
      v8 = sub_1C214E1A4((char *)(v10 > 1), v11 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11 + 1;
    v8[v11 + 32] = 10;
    *a1 = v8;
  }
  v12 = *(_QWORD *)(v3 + 16);
  if (v12)
  {
    v13 = *(_BYTE *)(v3 + 24);
    sub_1C20A988C(2uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v14);
    sub_1C215F644(v12, v13);
    v15 = *a1;
    v16 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v15;
    if ((v16 & 1) == 0)
    {
      v15 = sub_1C214E1A4(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
      *a1 = v15;
    }
    v18 = *((_QWORD *)v15 + 2);
    v17 = *((_QWORD *)v15 + 3);
    if (v18 >= v17 >> 1)
      v15 = sub_1C214E1A4((char *)(v17 > 1), v18 + 1, 1, v15);
    *((_QWORD *)v15 + 2) = v18 + 1;
    v15[v18 + 32] = 10;
    *a1 = v15;
  }
  v19 = *(_DWORD *)(v3 + 28);
  if (!v19 || (sub_1C212FA64(v19, 3uLL), !v2))
  {
    v20 = *(_QWORD *)(v3 + 32);
    v21 = *(_QWORD *)(v3 + 40);
    v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v22 = v20 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      sub_1C20A988C(4uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v23);
      sub_1C20AAAD0(v20, v21);
      v24 = *a1;
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v24;
      if ((v25 & 1) == 0)
      {
        v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        *a1 = v24;
      }
      v27 = *((_QWORD *)v24 + 2);
      v26 = *((_QWORD *)v24 + 3);
      if (v27 >= v26 >> 1)
        v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
      *((_QWORD *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 10;
      *a1 = v24;
    }
    v28 = *(_QWORD *)(v3 + 48);
    v29 = *(_QWORD *)(v3 + 56);
    v30 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v30 = v28 & 0xFFFFFFFFFFFFLL;
    if (v30)
    {
      sub_1C20A988C(6uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v31);
      sub_1C20AAAD0(v28, v29);
      v32 = *a1;
      v33 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v32;
      if ((v33 & 1) == 0)
      {
        v32 = sub_1C214E1A4(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        *a1 = v32;
      }
      v35 = *((_QWORD *)v32 + 2);
      v34 = *((_QWORD *)v32 + 3);
      if (v35 >= v34 >> 1)
        v32 = sub_1C214E1A4((char *)(v34 > 1), v35 + 1, 1, v32);
      *((_QWORD *)v32 + 2) = v35 + 1;
      v32[v35 + 32] = 10;
      *a1 = v32;
    }
    v36 = *(_DWORD *)(v3 + 64);
    if (!v36 || (sub_1C212FA64(v36, 7uLL), !v2))
    {
      if (*(_BYTE *)(v3 + 68) != 1 || (sub_1C20AE8CC(1, 8uLL), !v2))
      {
        v37 = *(_QWORD *)(v3 + 72);
        if (!*(_QWORD *)(v37 + 16) || (sub_1C21614F8(v37, 9uLL), !v2))
        {
          v38 = *(_QWORD *)(v3 + 80);
          v39 = *(_QWORD *)(v3 + 88);
          v40 = HIBYTE(v39) & 0xF;
          if ((v39 & 0x2000000000000000) == 0)
            v40 = v38 & 0xFFFFFFFFFFFFLL;
          if (v40)
          {
            sub_1C20A988C(0xAuLL);
            sub_1C20A9EB4((uint64_t)": ", 2, v41);
            sub_1C20AAAD0(v38, v39);
            v42 = *a1;
            v43 = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v42;
            if ((v43 & 1) == 0)
            {
              v42 = sub_1C214E1A4(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
              *a1 = v42;
            }
            v45 = *((_QWORD *)v42 + 2);
            v44 = *((_QWORD *)v42 + 3);
            if (v45 >= v44 >> 1)
              v42 = sub_1C214E1A4((char *)(v44 > 1), v45 + 1, 1, v42);
            *((_QWORD *)v42 + 2) = v45 + 1;
            v42[v45 + 32] = 10;
            *a1 = v42;
          }
          v46 = *(_QWORD *)(v3 + 96);
          v47 = *(_QWORD *)(v3 + 104);
          v48 = HIBYTE(v47) & 0xF;
          if ((v47 & 0x2000000000000000) == 0)
            v48 = v46 & 0xFFFFFFFFFFFFLL;
          if (v48)
          {
            sub_1C20A988C(0xBuLL);
            sub_1C20A9EB4((uint64_t)": ", 2, v49);
            sub_1C20AAAD0(v46, v47);
            v50 = *a1;
            v51 = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v50;
            if ((v51 & 1) == 0)
            {
              v50 = sub_1C214E1A4(0, *((_QWORD *)v50 + 2) + 1, 1, v50);
              *a1 = v50;
            }
            v53 = *((_QWORD *)v50 + 2);
            v52 = *((_QWORD *)v50 + 3);
            if (v53 >= v52 >> 1)
              v50 = sub_1C214E1A4((char *)(v52 > 1), v53 + 1, 1, v50);
            *((_QWORD *)v50 + 2) = v53 + 1;
            v50[v53 + 32] = 10;
            *a1 = v50;
          }
          sub_1C2122EF0((uint64_t)a1, *(_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 120));
        }
      }
    }
  }
}

void Google_Protobuf_Field.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void (*v13)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v14;
  void (*v15)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v7 = *v3;
  v8 = v3[2];
  v9 = *((_BYTE *)v3 + 24);
  v10 = *((unsigned int *)v3 + 7);
  v11 = v3[5];
  v34 = v3[4];
  v31 = v3[7];
  v32 = v3[6];
  v29 = *((unsigned __int8 *)v3 + 68);
  v30 = *((_DWORD *)v3 + 16);
  v27 = v3[10];
  v28 = v3[9];
  v25 = v3[12];
  v26 = v3[11];
  v24 = v3[13];
  v23 = *((_OWORD *)v3 + 7);
  if (!v7
    || (v12 = *((_BYTE *)v3 + 8),
        *(_QWORD *)&v33 = v7,
        BYTE8(v33) = v12,
        v13 = *(void (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
        v14 = sub_1C20C3528(),
        v13(&v33, 1, &type metadata for Google_Protobuf_Field.Kind, v14, a2, a3),
        !v4))
  {
    if (!v8
      || (*(_QWORD *)&v33 = v8,
          BYTE8(v33) = v9,
          v15 = *(void (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
          v16 = sub_1C20C34E4(),
          v15(&v33, 2, &type metadata for Google_Protobuf_Field.Cardinality, v16, a2, a3),
          !v4))
    {
      if (!(_DWORD)v10
        || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v10, 3, a2, a3), !v4))
      {
        v17 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0)
          v17 = v34 & 0xFFFFFFFFFFFFLL;
        if (!v17 || ((*(void (**)(void))(a3 + 112))(), !v4))
        {
          v18 = HIBYTE(v31) & 0xF;
          if ((v31 & 0x2000000000000000) == 0)
            v18 = v32 & 0xFFFFFFFFFFFFLL;
          if (!v18 || ((*(void (**)(void))(a3 + 112))(), !v4))
          {
            if (!v30 || ((*(void (**)(void))(a3 + 24))(), !v4))
            {
              if (!v29
                || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 8, a2, a3), !v4))
              {
                if (!*(_QWORD *)(v28 + 16)
                  || (v19 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                      v20 = sub_1C20C34A0(),
                      v19(v28, 9, &type metadata for Google_Protobuf_Option, v20, a2, a3),
                      !v4))
                {
                  v21 = HIBYTE(v26) & 0xF;
                  if ((v26 & 0x2000000000000000) == 0)
                    v21 = v27 & 0xFFFFFFFFFFFFLL;
                  if (!v21 || ((*(void (**)(void))(a3 + 112))(), !v4))
                  {
                    v22 = HIBYTE(v24) & 0xF;
                    if ((v24 & 0x2000000000000000) == 0)
                      v22 = v25 & 0xFFFFFFFFFFFFLL;
                    if (!v22 || ((*(void (**)(void))(a3 + 112))(), !v4))
                    {
                      v33 = v23;
                      UnknownStorage.traverse<A>(visitor:)();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t Google_Protobuf_Field.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20BFC14();
  return sub_1C2175870();
}

double sub_1C20C0704@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 0;
  *(_QWORD *)(a1 + 72) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0xE000000000000000;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C20C0754()
{
  return 0xD000000000000015;
}

uint64_t sub_1C20C0770@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t sub_1C20C077C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v3;
  return result;
}

uint64_t (*sub_1C20C07AC())()
{
  return nullsub_1;
}

uint64_t sub_1C20C07BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Field.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20C07D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Field.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20C07E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D018;
  v3 = qword_1EF75D020;
  v4 = unk_1EF75D028;
  *a1 = qword_1EF75D010;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C0860()
{
  return sub_1C2157EE4();
}

uint64_t sub_1C20C08A8()
{
  sub_1C2175828();
  sub_1C20BFC14();
  return sub_1C2175870();
}

double sub_1C20C0958(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20BFC14();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20C09F8()
{
  sub_1C2175828();
  sub_1C20BFC14();
  return sub_1C2175870();
}

uint64_t sub_1C20C0AA8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6938, &qword_1EF75D030);
}

uint64_t static Google_Protobuf_Field.Kind._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAF0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D038;
  v3 = qword_1EF75D040;
  v4 = unk_1EF75D048;
  *a1 = qword_1EF75D030;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C0B38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAF0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D038;
  v3 = qword_1EF75D040;
  v4 = unk_1EF75D048;
  *a1 = qword_1EF75D030;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C0BB4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6838, &qword_1EF75D050);
}

uint64_t static Google_Protobuf_Field.Cardinality._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAF8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D058;
  v3 = qword_1EF75D060;
  v4 = unk_1EF75D068;
  *a1 = qword_1EF75D050;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C0C44@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CAF8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D058;
  v3 = qword_1EF75D060;
  v4 = unk_1EF75D068;
  *a1 = qword_1EF75D050;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_Enum.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1C20C0CDC()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6590, &qword_1EF75D070);
}

uint64_t static Google_Protobuf_Enum._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB00 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D078;
  v3 = qword_1EF75D080;
  v4 = unk_1EF75D088;
  *a1 = qword_1EF75D070;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20C0D6C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  type metadata accessor for Google_Protobuf_Enum._StorageClass();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 40) = v1;
  result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_QWORD *)(v0 + 80) = 0;
  *(_BYTE *)(v0 + 88) = 1;
  qword_1EF75D090 = v0;
  return result;
}

uint64_t sub_1C20C0DC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20C3024(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_Enum.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C0E30(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20C0F14);
}

uint64_t sub_1C20C0E30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v14 = swift_retain();
    v15 = a6(v14);
    swift_release();
    *(_QWORD *)(v7 + 16) = v15;
    swift_release();
  }
  v16 = swift_retain();
  a7(v16, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C20C0F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v21 = a1 + 80;
    v19 = a1 + 40;
    v20 = a1 + 48;
    v18 = a1 + 32;
    v12 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v17 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(v12, a3, a4);
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v14 = sub_1C20C3F20();
          v15 = v18;
          v16 = &type metadata for Google_Protobuf_EnumValue;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v14 = sub_1C20C34A0();
          v15 = v19;
          v16 = &type metadata for Google_Protobuf_Option;
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          v14 = sub_1C20C4E54();
          v15 = v20;
          v16 = &type metadata for Google_Protobuf_SourceContext;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 384);
          v14 = sub_1C20C4E10();
          v15 = v21;
          v16 = &type metadata for Google_Protobuf_Syntax;
LABEL_5:
          v17 = v11;
          v13(v15, v16, v14, a3, a4);
LABEL_6:
          v11 = v17;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_Enum.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20C111C);
}

uint64_t sub_1C20C111C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t result;
  void (*v14)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v22;
  char v23;
  uint64_t (*v24)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  uint64_t v28;
  char v29;

  v5 = v4;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v11
    || (v12 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
      || (v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v15 = sub_1C20C3F20(),
          v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_EnumValue, v15, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
        || (v17 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
            v18 = sub_1C20C34A0(),
            v19 = swift_bridgeObjectRetain(),
            v17(v19, 3, &type metadata for Google_Protobuf_Option, v18, a3, a4),
            result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        v20 = *(_QWORD *)(a1 + 56);
        if (!v20
          || (v26[0] = *(_QWORD *)(a1 + 48),
              v26[1] = v20,
              v27 = *(_OWORD *)(a1 + 64),
              v21 = (uint64_t (*)(_QWORD *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17],
              v22 = sub_1C20C4E54(),
              result = v21(v26, 4, &type metadata for Google_Protobuf_SourceContext, v22, a3, a4),
              !v5))
        {
          result = swift_beginAccess();
          if (*(_QWORD *)(a1 + 80))
          {
            v23 = *(_BYTE *)(a1 + 88);
            v28 = *(_QWORD *)(a1 + 80);
            v29 = v23;
            v24 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[16];
            v25 = sub_1C20C4E10();
            return v24(&v28, 5, &type metadata for Google_Protobuf_Syntax, v25, a3, a4);
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_Enum.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20C1370) & 1;
}

uint64_t sub_1C20C1370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1C21757C8(), result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 32);
    swift_beginAccess();
    v10 = *(_QWORD *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1C20F8718(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_25;
    swift_beginAccess();
    v12 = *(_QWORD **)(a1 + 40);
    swift_beginAccess();
    v13 = *(_QWORD **)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1C20F5614(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_25;
    swift_beginAccess();
    v16 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56);
    v18 = *(_QWORD *)(a1 + 64);
    v17 = *(_QWORD *)(a1 + 72);
    swift_beginAccess();
    v19 = *(_QWORD *)(a2 + 48);
    v20 = *(_QWORD *)(a2 + 56);
    v21 = *(_QWORD *)(a2 + 64);
    v22 = *(_QWORD *)(a2 + 72);
    if (v15)
    {
      if (v20)
      {
        if (v16 == v19 && v15 == v20 || (sub_1C21757C8() & 1) != 0)
        {
          sub_1C20C2FEC(v16, v15, v18, v17);
          sub_1C20C2FEC(v16, v15, v18, v17);
          sub_1C20C2FEC(v19, v20, v21, v22);
          sub_1C20A8008(v18, v17);
          sub_1C20A8008(v21, v22);
          sub_1C20FD650(v18, v17);
          v33 = v23;
          sub_1C20A8058(v21, v22);
          sub_1C20A8058(v18, v17);
          sub_1C20C3024(v19, v20, v21, v22);
          swift_bridgeObjectRelease();
          sub_1C20A8058(v18, v17);
          sub_1C20C3024(v16, v15, v18, v17);
          if ((v33 & 1) == 0)
            goto LABEL_25;
LABEL_16:
          swift_beginAccess();
          v24 = *(_QWORD *)(a1 + 80);
          v25 = *(unsigned __int8 *)(a1 + 88);
          swift_release();
          swift_beginAccess();
          v26 = *(_QWORD *)(a2 + 80);
          v27 = *(unsigned __int8 *)(a2 + 88);
          swift_release();
          v28 = v24 != 0;
          if (!v25)
            v28 = v24;
          if (v27 == 1)
          {
            if (v26)
            {
              if (v28 != 1)
                return 0;
            }
            else if (v28)
            {
              return 0;
            }
          }
          else if (v28 != v26)
          {
            return 0;
          }
          return 1;
        }
        sub_1C20C2FEC(v16, v15, v18, v17);
        swift_bridgeObjectRetain();
        sub_1C20A8008(v18, v17);
        swift_bridgeObjectRelease();
        sub_1C20A8058(v18, v17);
        v29 = v16;
        v30 = v15;
        v31 = v18;
        v32 = v17;
LABEL_24:
        sub_1C20C3024(v29, v30, v31, v32);
LABEL_25:
        swift_release();
        swift_release();
        return 0;
      }
      swift_bridgeObjectRetain();
      sub_1C20A8008(v18, v17);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v18, v17);
      swift_bridgeObjectRelease();
      sub_1C20A8058(v18, v17);
    }
    else if (!v20)
    {
      goto LABEL_16;
    }
    sub_1C20C2FEC(v19, v20, v21, v22);
    sub_1C20C3024(v16, v15, v18, v17);
    v29 = v19;
    v30 = v20;
    v31 = v21;
    v32 = v22;
    goto LABEL_24;
  }
  return result;
}

uint64_t Google_Protobuf_Enum.hashValue.getter()
{
  return sub_1C20C1794((void (*)(uint64_t, _OWORD *))sub_1C215A5A8);
}

uint64_t sub_1C20C1794(void (*a1)(uint64_t, _OWORD *))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  sub_1C2175828();
  sub_1C20BEB44((uint64_t)v7, v3, v4, v5, a1);
  return sub_1C2175870();
}

uint64_t sub_1C20C17F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CB08, &qword_1EF75D090, a1);
}

uint64_t sub_1C20C1810@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = xmmword_1C2175DE0;
  if (*a1 != -1)
    swift_once();
  *(_QWORD *)(a3 + 16) = *a2;
  return swift_retain();
}

unint64_t sub_1C20C1860()
{
  return 0xD000000000000014;
}

uint64_t sub_1C20C187C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t sub_1C20C1888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Enum.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20C189C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Enum.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20C18B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB00 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D078;
  v3 = qword_1EF75D080;
  v4 = unk_1EF75D088;
  *a1 = qword_1EF75D070;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C192C()
{
  uint64_t v0;

  return sub_1C2157FB4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20C1938(uint64_t a1, uint64_t a2)
{
  return sub_1C20C1944(a1, a2, (void (*)(uint64_t, _OWORD *))sub_1C215A5A8);
}

uint64_t sub_1C20C1944(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _OWORD *))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];

  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  sub_1C2175828();
  sub_1C20BEB44((uint64_t)v9, v5, v6, v7, a3);
  return sub_1C2175870();
}

void sub_1C20C19A4(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BEB44(a1, *v1, v1[1], v1[2], (void (*)(uint64_t, _OWORD *))sub_1C215A5A8);
}

uint64_t sub_1C20C19C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C19D4(a1, a2, a3, (void (*)(uint64_t, _OWORD *))sub_1C215A5A8);
}

uint64_t sub_1C20C19D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _OWORD *))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[72];

  v6 = *v4;
  v7 = v4[1];
  v8 = v4[2];
  sub_1C2175828();
  sub_1C20BEB44((uint64_t)v10, v6, v7, v8, a4);
  return sub_1C2175870();
}

uint64_t sub_1C20C1A30(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20C1370) & 1;
}

unint64_t static Google_Protobuf_EnumValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C20C1A6C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3768, &qword_1EF75D098);
}

uint64_t static Google_Protobuf_EnumValue._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB10 != -1)
    swift_once();
  v2 = unk_1EF75D0A0;
  v3 = qword_1EF75D0A8;
  v4 = unk_1EF75D0B0;
  *a1 = qword_1EF75D098;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  void (*v10)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v11;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          v11 = sub_1C20C34A0();
          v10(v3 + 24, &type metadata for Google_Protobuf_Option, v11, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 16, a2, a3);
          break;
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
          break;
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C20C1C04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  if (*(_DWORD *)(v0 + 16))
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  v4 = *(_QWORD **)(v0 + 24);
  if (!v4[2] || (result = sub_1C2111214(v4), !v1))
    __asm { BR              X10 }
  return result;
}

void sub_1C20C1CF8(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;

  v3 = v1;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v5, v6);
    v9 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a1 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a1 = v9;
  }
  v13 = *(_DWORD *)(v3 + 16);
  if (!v13 || (sub_1C212FA64(v13, 2uLL), !v2))
  {
    v14 = *(_QWORD *)(v3 + 24);
    if (!*(_QWORD *)(v14 + 16) || (sub_1C21614F8(v14, 3uLL), !v2))
      sub_1C2122EF0((uint64_t)a1, *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
  }
}

void Google_Protobuf_EnumValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;

  v7 = *(_QWORD *)(v3 + 8);
  v8 = *(unsigned int *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v10 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v10 || ((*(void (**)(void))(a3 + 112))(), !v4))
  {
    if (!(_DWORD)v8 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v8, 2, a2, a3), !v4))
    {
      if (!*(_QWORD *)(v9 + 16)
        || (v11 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
            v12 = sub_1C20C34A0(),
            v11(v9, 3, &type metadata for Google_Protobuf_Option, v12, a2, a3),
            !v4))
      {
        UnknownStorage.traverse<A>(visitor:)();
      }
    }
  }
}

uint64_t Google_Protobuf_EnumValue.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20C1C04();
  return sub_1C2175870();
}

double sub_1C20C2004@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C20C202C()
{
  return 0xD000000000000019;
}

uint64_t sub_1C20C2048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t sub_1C20C2054(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*sub_1C20C2084())()
{
  return nullsub_1;
}

uint64_t sub_1C20C2094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20C20A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_EnumValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20C20BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB10 != -1)
    swift_once();
  v2 = unk_1EF75D0A0;
  v3 = qword_1EF75D0A8;
  v4 = unk_1EF75D0B0;
  *a1 = qword_1EF75D098;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C2138()
{
  return sub_1C215808C();
}

uint64_t sub_1C20C2170()
{
  sub_1C2175828();
  sub_1C20C1C04();
  return sub_1C2175870();
}

double sub_1C20C2210(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20C1C04();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20C2298()
{
  sub_1C2175828();
  sub_1C20C1C04();
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_Option.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C20C2354()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD7378, &qword_1EF75D0B8);
}

uint64_t static Google_Protobuf_Option._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB18 != -1)
    swift_once();
  v2 = unk_1EF75D0C0;
  v3 = qword_1EF75D0C8;
  v4 = unk_1EF75D0D0;
  *a1 = qword_1EF75D0B8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C23E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C20B8490(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_Option.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1C20C30C8();
  v6 = swift_retain();
  sub_1C20C2480(v6, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C20C2480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v12 = a1 + 32;
    v13 = a1 + 16;
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(v13, a3, a4);
        goto LABEL_5;
      }
LABEL_6:
      result = v8(a3, a4);
    }
    swift_beginAccess();
    v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    v15 = sub_1C20C4DCC();
    v16 = v11;
    v14(v12, &type metadata for Google_Protobuf_Any, v15, a3, a4);
LABEL_5:
    v11 = v16;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

void Google_Protobuf_Option.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20C265C);
}

void sub_1C20C25C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_retain();
  a4(v9, a1, a2, a3);
  swift_release();
  if (!v4)
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t sub_1C20C265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t (*v15)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v16;
  __int128 v17;
  uint64_t v18;

  v5 = v4;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v11
    || (v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    result = swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 48);
    if (v14)
    {
      v17 = *(_OWORD *)(a1 + 32);
      v18 = v14;
      v15 = *(uint64_t (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
      v16 = sub_1C20C4DCC();
      return v15(&v17, 2, &type metadata for Google_Protobuf_Any, v16, a3, a4);
    }
  }
  return result;
}

uint64_t static Google_Protobuf_Option.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C278C) & 1;
}

BOOL sub_1C20C278C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = sub_1C21757C8(), result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    v10 = a1[4];
    v9 = a1[5];
    v11 = a1[6];
    swift_beginAccess();
    v13 = a2[4];
    v12 = a2[5];
    v14 = (_QWORD *)a2[6];
    if (v11)
    {
      if (v14)
      {
        sub_1C20C309C(v10, v9, v11);
        sub_1C20C309C(v10, v9, v11);
        swift_retain();
        swift_retain();
        sub_1C20C309C(v13, v12, (uint64_t)v14);
        if ((_QWORD *)v11 == v14 || (sub_1C2152554(v14) & 1) != 0)
        {
          sub_1C20A8008(v10, v9);
          sub_1C20A8008(v13, v12);
          sub_1C20FD650(v10, v9);
          v16 = v15;
          sub_1C20A8058(v13, v12);
          sub_1C20A8058(v10, v9);
          swift_release();
          swift_release();
          sub_1C20B8490(v13, v12, (uint64_t)v14);
          sub_1C20A8058(v10, v9);
          swift_release();
          sub_1C20B8490(v10, v9, v11);
          return (v16 & 1) != 0;
        }
        swift_release();
        swift_release();
        sub_1C20B8490(v13, v12, (uint64_t)v14);
        sub_1C20A8058(v10, v9);
        swift_release();
        v17 = v10;
        v18 = v9;
        v19 = v11;
LABEL_17:
        sub_1C20B8490(v17, v18, v19);
        return 0;
      }
      sub_1C20C309C(v10, v9, v11);
      sub_1C20A8008(v10, v9);
      swift_retain();
      sub_1C20A8058(v10, v9);
      swift_release();
    }
    else if (!v14)
    {
      return 1;
    }
    sub_1C20C309C(v13, v12, (uint64_t)v14);
    sub_1C20B8490(v10, v9, v11);
    v17 = v13;
    v18 = v12;
    v19 = (uint64_t)v14;
    goto LABEL_17;
  }
  return result;
}

uint64_t Google_Protobuf_Option.hashValue.getter()
{
  return sub_1C20C1794((void (*)(uint64_t, _OWORD *))sub_1C215AA2C);
}

uint64_t sub_1C20C2A10@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)a1 = xmmword_1C2175DE0;
  type metadata accessor for Google_Protobuf_Option._StorageClass();
  result = swift_initStaticObject();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C20C2A50()
{
  return 0xD000000000000016;
}

uint64_t sub_1C20C2A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Option.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20C2A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Option.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20C2A94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB18 != -1)
    swift_once();
  v2 = unk_1EF75D0C0;
  v3 = qword_1EF75D0C8;
  v4 = unk_1EF75D0D0;
  *a1 = qword_1EF75D0B8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C2B10()
{
  uint64_t v0;

  return sub_1C2158168(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20C2B1C(uint64_t a1, uint64_t a2)
{
  return sub_1C20C1944(a1, a2, (void (*)(uint64_t, _OWORD *))sub_1C215AA2C);
}

void sub_1C20C2B28(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BEB44(a1, *v1, v1[1], v1[2], (void (*)(uint64_t, _OWORD *))sub_1C215AA2C);
}

uint64_t sub_1C20C2B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C19D4(a1, a2, a3, (void (*)(uint64_t, _OWORD *))sub_1C215AA2C);
}

uint64_t sub_1C20C2B58(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C278C) & 1;
}

uint64_t sub_1C20C2B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v1 + 16) = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_QWORD *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_BYTE *)(v1 + 88) = 1;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  swift_beginAccess();
  v12 = *(_QWORD *)(v1 + 48);
  v14 = *(_QWORD *)(v1 + 56);
  v13 = *(_QWORD *)(v1 + 64);
  v15 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v9;
  *(_QWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v1 + 72) = v11;
  sub_1C20C2FEC(v8, v9, v10, v11);
  sub_1C20C3024(v12, v14, v13, v15);
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 80);
  LOBYTE(a1) = *(_BYTE *)(a1 + 88);
  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = v16;
  *(_BYTE *)(v1 + 88) = a1;
  return v1;
}

uint64_t sub_1C20C2D8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v1 + 16) = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_BYTE *)(v1 + 96) = 1;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v13 = *(_QWORD *)(v1 + 56);
  v15 = *(_QWORD *)(v1 + 64);
  v14 = *(_QWORD *)(v1 + 72);
  v16 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 56) = v9;
  *(_QWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v1 + 72) = v11;
  *(_QWORD *)(v1 + 80) = v12;
  sub_1C20C2FEC(v9, v10, v11, v12);
  sub_1C20C3024(v13, v15, v14, v16);
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 88);
  LOBYTE(a1) = *(_BYTE *)(a1 + 96);
  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = v17;
  *(_BYTE *)(v1 + 96) = a1;
  return v1;
}

uint64_t sub_1C20C2FEC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_1C20A8008(a3, a4);
  }
  return result;
}

uint64_t sub_1C20C3024(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1C20A8058(a3, a4);
  }
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_Enum._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_Option._StorageClass()
{
  return objc_opt_self();
}

uint64_t sub_1C20C309C(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C20A8008(result, a2);
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C20C30C8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v1 = *(_QWORD **)(v0 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    v2 = (_QWORD *)swift_allocObject();
    v2[2] = 0;
    v2[3] = 0xE000000000000000;
    v2[5] = 0;
    v2[6] = 0;
    v2[4] = 0;
    swift_beginAccess();
    v4 = v1[2];
    v3 = v1[3];
    swift_beginAccess();
    v2[2] = v4;
    v2[3] = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v5 = v1[4];
    v6 = v1[5];
    v7 = v1[6];
    sub_1C20C309C(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    v8 = v2[4];
    v9 = v2[5];
    v10 = v2[6];
    v2[4] = v5;
    v2[5] = v6;
    v2[6] = v7;
    sub_1C20B8490(v8, v9, v10);
    *(_QWORD *)(v0 + 16) = v2;
    swift_release();
  }
  return *(_QWORD *)(v0 + 16);
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_FieldV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_DWORD *)(a1 + 28);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_QWORD *)(a1 + 48);
  v32 = *(_DWORD *)(a1 + 64);
  v30 = *(unsigned __int8 *)(a1 + 68);
  v28 = *(_QWORD **)(a1 + 72);
  v26 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 88);
  v22 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 120);
  v18 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 24);
  v8 = *(_DWORD *)(a2 + 28);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 56);
  v33 = *(_QWORD *)(a2 + 48);
  v31 = *(_DWORD *)(a2 + 64);
  v29 = *(unsigned __int8 *)(a2 + 68);
  v27 = *(_QWORD **)(a2 + 72);
  v25 = *(_QWORD *)(a2 + 80);
  v23 = *(_QWORD *)(a2 + 88);
  v21 = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 112);
  if (!sub_1C20BA19C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)a2))
    return 0;
  if (v7)
    __asm { BR              X9 }
  if (v2 != v6
    || v3 != v8
    || (v5 != v10 || v4 != v9) && (sub_1C21757C8() & 1) == 0
    || (v35 != v33 || v34 != v11) && (sub_1C21757C8() & 1) == 0
    || v32 != v31
    || ((v30 ^ v29) & 1) != 0
    || (sub_1C20F5614(v28, v27) & 1) == 0
    || (v26 != v25 || v24 != v23) && (sub_1C21757C8() & 1) == 0
    || (v22 != v21 || v20 != v19) && (sub_1C21757C8() & 1) == 0)
  {
    return 0;
  }
  sub_1C20A8008(v18, v17);
  sub_1C20A8008(v16, v15);
  sub_1C20FD650(v18, v17);
  v13 = v12;
  sub_1C20A8058(v16, v15);
  sub_1C20A8058(v18, v17);
  return v13 & 1;
}

unint64_t sub_1C20C34A0()
{
  unint64_t result;

  result = qword_1EF75D0D8;
  if (!qword_1EF75D0D8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Option, &type metadata for Google_Protobuf_Option);
    atomic_store(result, (unint64_t *)&qword_1EF75D0D8);
  }
  return result;
}

unint64_t sub_1C20C34E4()
{
  unint64_t result;

  result = qword_1EF75D0E0;
  if (!qword_1EF75D0E0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Cardinality, &type metadata for Google_Protobuf_Field.Cardinality);
    atomic_store(result, (unint64_t *)&qword_1EF75D0E0);
  }
  return result;
}

unint64_t sub_1C20C3528()
{
  unint64_t result;

  result = qword_1EF75D0E8;
  if (!qword_1EF75D0E8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Kind, &type metadata for Google_Protobuf_Field.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF75D0E8);
  }
  return result;
}

uint64_t sub_1C20C356C(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v10;
  char v11;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  if (v5 != v8)
  {
    swift_retain();
    swift_retain();
    LOBYTE(a3) = a3(v5, v8);
    swift_release();
    swift_release();
    if ((a3 & 1) == 0)
      return 0;
  }
  sub_1C20A8008(v3, v4);
  sub_1C20A8008(v6, v7);
  sub_1C20FD650(v3, v4);
  v11 = v10;
  sub_1C20A8058(v6, v7);
  sub_1C20A8058(v3, v4);
  return v11 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C10_EnumValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  char v11;

  v2 = *(_DWORD *)(a1 + 16);
  v4 = *(_QWORD **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_DWORD *)(a2 + 16);
  v8 = *(_QWORD **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  if ((*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)) && (sub_1C21757C8() & 1) == 0
    || v2 != v6
    || (sub_1C20F5614(v4, v8) & 1) == 0)
  {
    return 0;
  }
  sub_1C20A8008(v3, v5);
  sub_1C20A8008(v7, v9);
  sub_1C20FD650(v3, v5);
  v11 = v10;
  sub_1C20A8058(v7, v9);
  sub_1C20A8058(v3, v5);
  return v11 & 1;
}

uint64_t sub_1C20C3724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3738, (uint64_t (*)(void))sub_1C20C377C);
}

unint64_t sub_1C20C3738()
{
  unint64_t result;

  result = qword_1EF75D0F0;
  if (!qword_1EF75D0F0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Syntax, &type metadata for Google_Protobuf_Syntax);
    atomic_store(result, (unint64_t *)&qword_1EF75D0F0);
  }
  return result;
}

unint64_t sub_1C20C377C()
{
  unint64_t result;

  result = qword_1EF75D0F8;
  if (!qword_1EF75D0F8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Syntax, &type metadata for Google_Protobuf_Syntax);
    atomic_store(result, (unint64_t *)&qword_1EF75D0F8);
  }
  return result;
}

unint64_t sub_1C20C37C4()
{
  unint64_t result;

  result = qword_1EF75D100;
  if (!qword_1EF75D100)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Syntax, &type metadata for Google_Protobuf_Syntax);
    atomic_store(result, (unint64_t *)&qword_1EF75D100);
  }
  return result;
}

uint64_t sub_1C20C3808()
{
  return sub_1C20C3A80(&qword_1EF75D108, &qword_1EF75D110);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BB7F58](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C20C3870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3884, (uint64_t (*)(void))sub_1C20C38C8);
}

unint64_t sub_1C20C3884()
{
  unint64_t result;

  result = qword_1EF75D118;
  if (!qword_1EF75D118)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Kind, &type metadata for Google_Protobuf_Field.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF75D118);
  }
  return result;
}

unint64_t sub_1C20C38C8()
{
  unint64_t result;

  result = qword_1EF75D120;
  if (!qword_1EF75D120)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Kind, &type metadata for Google_Protobuf_Field.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF75D120);
  }
  return result;
}

unint64_t sub_1C20C3910()
{
  unint64_t result;

  result = qword_1EF75D128;
  if (!qword_1EF75D128)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Kind, &type metadata for Google_Protobuf_Field.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF75D128);
  }
  return result;
}

uint64_t sub_1C20C3954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3968, (uint64_t (*)(void))sub_1C20C39AC);
}

unint64_t sub_1C20C3968()
{
  unint64_t result;

  result = qword_1EF75D130;
  if (!qword_1EF75D130)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Cardinality, &type metadata for Google_Protobuf_Field.Cardinality);
    atomic_store(result, (unint64_t *)&qword_1EF75D130);
  }
  return result;
}

unint64_t sub_1C20C39AC()
{
  unint64_t result;

  result = qword_1EF75D138;
  if (!qword_1EF75D138)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Cardinality, &type metadata for Google_Protobuf_Field.Cardinality);
    atomic_store(result, (unint64_t *)&qword_1EF75D138);
  }
  return result;
}

unint64_t sub_1C20C39F4()
{
  unint64_t result;

  result = qword_1EF75D140;
  if (!qword_1EF75D140)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field.Cardinality, &type metadata for Google_Protobuf_Field.Cardinality);
    atomic_store(result, (unint64_t *)&qword_1EF75D140);
  }
  return result;
}

uint64_t sub_1C20C3A38()
{
  return sub_1C20C3A80(&qword_1EF75D148, &qword_1EF75D150);
}

uint64_t sub_1C20C3A5C()
{
  return sub_1C20C3A80(&qword_1EF75D158, &qword_1EF75D160);
}

uint64_t sub_1C20C3A80(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C20C3AC0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20C3AE4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20C3AE4()
{
  unint64_t result;

  result = qword_1EF75D168;
  if (!qword_1EF75D168)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Type, &type metadata for Google_Protobuf_Type);
    atomic_store(result, (unint64_t *)&qword_1EF75D168);
  }
  return result;
}

uint64_t sub_1C20C3B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3B3C, (uint64_t (*)(void))sub_1C20C3B80);
}

unint64_t sub_1C20C3B3C()
{
  unint64_t result;

  result = qword_1EF75D170;
  if (!qword_1EF75D170)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Type, &type metadata for Google_Protobuf_Type);
    atomic_store(result, (unint64_t *)&qword_1EF75D170);
  }
  return result;
}

unint64_t sub_1C20C3B80()
{
  unint64_t result;

  result = qword_1EF75D178;
  if (!qword_1EF75D178)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Type, &type metadata for Google_Protobuf_Type);
    atomic_store(result, (unint64_t *)&qword_1EF75D178);
  }
  return result;
}

unint64_t sub_1C20C3BC8()
{
  unint64_t result;

  result = qword_1EF75D180;
  if (!qword_1EF75D180)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Type, &type metadata for Google_Protobuf_Type);
    atomic_store(result, (unint64_t *)&qword_1EF75D180);
  }
  return result;
}

unint64_t sub_1C20C3C0C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20C3C30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20C3C30()
{
  unint64_t result;

  result = qword_1EF75D188;
  if (!qword_1EF75D188)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field, &type metadata for Google_Protobuf_Field);
    atomic_store(result, (unint64_t *)&qword_1EF75D188);
  }
  return result;
}

uint64_t sub_1C20C3C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3C88, (uint64_t (*)(void))sub_1C20C3CCC);
}

unint64_t sub_1C20C3C88()
{
  unint64_t result;

  result = qword_1EF75D190;
  if (!qword_1EF75D190)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field, &type metadata for Google_Protobuf_Field);
    atomic_store(result, (unint64_t *)&qword_1EF75D190);
  }
  return result;
}

unint64_t sub_1C20C3CCC()
{
  unint64_t result;

  result = qword_1EF75D198;
  if (!qword_1EF75D198)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field, &type metadata for Google_Protobuf_Field);
    atomic_store(result, (unint64_t *)&qword_1EF75D198);
  }
  return result;
}

unint64_t sub_1C20C3D14()
{
  unint64_t result;

  result = qword_1EF75D1A0;
  if (!qword_1EF75D1A0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Field, &type metadata for Google_Protobuf_Field);
    atomic_store(result, (unint64_t *)&qword_1EF75D1A0);
  }
  return result;
}

unint64_t sub_1C20C3D58(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20C3D7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20C3D7C()
{
  unint64_t result;

  result = qword_1EF75D1A8;
  if (!qword_1EF75D1A8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Enum, &type metadata for Google_Protobuf_Enum);
    atomic_store(result, (unint64_t *)&qword_1EF75D1A8);
  }
  return result;
}

uint64_t sub_1C20C3DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3DD4, (uint64_t (*)(void))sub_1C20C3E18);
}

unint64_t sub_1C20C3DD4()
{
  unint64_t result;

  result = qword_1EF75D1B0;
  if (!qword_1EF75D1B0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Enum, &type metadata for Google_Protobuf_Enum);
    atomic_store(result, (unint64_t *)&qword_1EF75D1B0);
  }
  return result;
}

unint64_t sub_1C20C3E18()
{
  unint64_t result;

  result = qword_1EF75D1B8;
  if (!qword_1EF75D1B8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Enum, &type metadata for Google_Protobuf_Enum);
    atomic_store(result, (unint64_t *)&qword_1EF75D1B8);
  }
  return result;
}

unint64_t sub_1C20C3E60()
{
  unint64_t result;

  result = qword_1EF75D1C0;
  if (!qword_1EF75D1C0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Enum, &type metadata for Google_Protobuf_Enum);
    atomic_store(result, (unint64_t *)&qword_1EF75D1C0);
  }
  return result;
}

unint64_t sub_1C20C3EA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20C3EC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20C3EC8()
{
  unint64_t result;

  result = qword_1EF75D1C8;
  if (!qword_1EF75D1C8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValue, &type metadata for Google_Protobuf_EnumValue);
    atomic_store(result, (unint64_t *)&qword_1EF75D1C8);
  }
  return result;
}

uint64_t sub_1C20C3F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C3F20, (uint64_t (*)(void))sub_1C20C3F64);
}

unint64_t sub_1C20C3F20()
{
  unint64_t result;

  result = qword_1EF75D1D0;
  if (!qword_1EF75D1D0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValue, &type metadata for Google_Protobuf_EnumValue);
    atomic_store(result, (unint64_t *)&qword_1EF75D1D0);
  }
  return result;
}

unint64_t sub_1C20C3F64()
{
  unint64_t result;

  result = qword_1EF75D1D8;
  if (!qword_1EF75D1D8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValue, &type metadata for Google_Protobuf_EnumValue);
    atomic_store(result, (unint64_t *)&qword_1EF75D1D8);
  }
  return result;
}

unint64_t sub_1C20C3FAC()
{
  unint64_t result;

  result = qword_1EF75D1E0;
  if (!qword_1EF75D1E0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValue, &type metadata for Google_Protobuf_EnumValue);
    atomic_store(result, (unint64_t *)&qword_1EF75D1E0);
  }
  return result;
}

unint64_t sub_1C20C3FF0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20C4014();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20C4014()
{
  unint64_t result;

  result = qword_1EF75D1E8;
  if (!qword_1EF75D1E8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Option, &type metadata for Google_Protobuf_Option);
    atomic_store(result, (unint64_t *)&qword_1EF75D1E8);
  }
  return result;
}

uint64_t sub_1C20C4058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20C34A0, (uint64_t (*)(void))sub_1C20C409C);
}

uint64_t sub_1C20C406C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C20C409C()
{
  unint64_t result;

  result = qword_1EF75D1F0;
  if (!qword_1EF75D1F0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Option, &type metadata for Google_Protobuf_Option);
    atomic_store(result, (unint64_t *)&qword_1EF75D1F0);
  }
  return result;
}

unint64_t sub_1C20C40E4()
{
  unint64_t result;

  result = qword_1EF75D1F8;
  if (!qword_1EF75D1F8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Option, &type metadata for Google_Protobuf_Option);
    atomic_store(result, (unint64_t *)&qword_1EF75D1F8);
  }
  return result;
}

uint64_t sub_1C20C412C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BB7BC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t sub_1C20C4158(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BBB84(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t sub_1C20C4184(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BBF38(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C20C2D8C);
}

uint64_t sub_1C20C41AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C41FC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BC380(a1, a2, a3, a4, Google_Protobuf_Type.sourceContext.setter);
}

uint64_t sub_1C20C4218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 96);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 88);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C20C426C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BB7BC(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

uint64_t keypath_get_1Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C42E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BBB84(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

uint64_t keypath_get_3Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C4354(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BBF38(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C20C2B78);
}

uint64_t sub_1C20C4380(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20BC380(a1, a2, a3, a4, Google_Protobuf_Enum.sourceContext.setter);
}

uint64_t sub_1C20C439C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 88);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 80);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t keypath_getTm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C4438(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return Google_Protobuf_Option.name.setter(v1, v2);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Syntax()
{
  return &type metadata for Google_Protobuf_Syntax;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Type()
{
  return &type metadata for Google_Protobuf_Type;
}

uint64_t destroy for Google_Protobuf_Field(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C20A8058(*(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
}

uint64_t initializeWithCopy for Google_Protobuf_Field(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v7, v8);
  *(_QWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 120) = v8;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Field(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_BYTE *)(a1 + 68) = *((_BYTE *)a2 + 68);
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[14];
  v6 = a2[15];
  sub_1C20A8008(v7, v6);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 120) = v6;
  sub_1C20A8058(v8, v9);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_Field(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1C20A8058(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Field(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Field(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Field()
{
  return &type metadata for Google_Protobuf_Field;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Field.Kind()
{
  return &type metadata for Google_Protobuf_Field.Kind;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Field.Cardinality(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Field.Cardinality(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1C20C48F0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C20C490C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Field.Cardinality()
{
  return &type metadata for Google_Protobuf_Field.Cardinality;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Enum()
{
  return &type metadata for Google_Protobuf_Enum;
}

uint64_t destroy for Google_Protobuf_EnumValue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C20A8058(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for Google_Protobuf_EnumValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_EnumValue(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  sub_1C20A8008(v5, v4);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  sub_1C20A8058(v6, v7);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_EnumValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_EnumValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_EnumValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumValue()
{
  return &type metadata for Google_Protobuf_EnumValue;
}

uint64_t destroy for Google_Protobuf_Any(uint64_t a1)
{
  sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_release();
}

uint64_t *_s20SiriOntologyProtobuf19Google_Protobuf_AnyVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for Google_Protobuf_Any(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C20A8058(v6, v7);
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *assignWithTake for Google_Protobuf_Any(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C20A8058(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Any(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Any(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Option()
{
  return &type metadata for Google_Protobuf_Option;
}

uint64_t sub_1C20C4D30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20C4D74(uint64_t a1)
{
  sub_1C20A8008(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1C20C4DA0(uint64_t a1)
{
  sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1C20C4DCC()
{
  unint64_t result;

  result = qword_1EF75D590;
  if (!qword_1EF75D590)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Any, &type metadata for Google_Protobuf_Any);
    atomic_store(result, (unint64_t *)&qword_1EF75D590);
  }
  return result;
}

unint64_t sub_1C20C4E10()
{
  unint64_t result;

  result = qword_1EF75D598;
  if (!qword_1EF75D598)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Syntax, &type metadata for Google_Protobuf_Syntax);
    atomic_store(result, (unint64_t *)&qword_1EF75D598);
  }
  return result;
}

unint64_t sub_1C20C4E54()
{
  unint64_t result;

  result = qword_1EF75D5A0;
  if (!qword_1EF75D5A0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceContext, &type metadata for Google_Protobuf_SourceContext);
    atomic_store(result, (unint64_t *)&qword_1EF75D5A0);
  }
  return result;
}

uint64_t sub_1C20C4E98(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

unint64_t destroy for JSONDecodingError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s20SiriOntologyProtobuf17JSONDecodingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for JSONDecodingError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for JSONDecodingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONDecodingError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFEB && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483628);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 19;
  if (v4 >= 0x15)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSONDecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEC)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483628;
    if (a3 >= 0x7FFFFFEC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFEC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 19;
  }
  return result;
}

uint64_t sub_1C20C50FC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1C20C5114(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONDecodingError()
{
  return &type metadata for JSONDecodingError;
}

void sub_1C20C5144(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C20C5178@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  _BYTE **v2;
  unint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  unint64_t v6;

  v3 = BYTE6(a1);
  v4 = *v2;
  if (BYTE6(a1) < 0x80uLL)
  {
    LOBYTE(v5) = BYTE6(a1);
  }
  else
  {
    do
    {
      *v4++ = v3 | 0x80;
      v5 = v3 >> 7;
      v6 = v3 >> 14;
      v3 >>= 7;
    }
    while (v6);
  }
  *v4 = v5;
  *v2 = v4 + 1;
  return ((uint64_t (*)(void))((char *)&loc_1C20C51E4 + dword_1C20C5274[a2]))();
}

uint64_t sub_1C20C51F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  v6 = BYTE6(a4);
  result = sub_1C2175378();
  *v5 = v4 + v6;
  return result;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryEncoder(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryEncoder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryEncoder()
{
  return &type metadata for BinaryEncoder;
}

double Google_Protobuf_ListValue.init(arrayLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double Google_Protobuf_ListValue.init(values:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

double sub_1C20C5348@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t *sub_1C20C535C(unsigned __int8 *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  int v28;

  v3 = sub_1C2175468();
  v20[2] = *(_QWORD *)(v3 - 8);
  v20[3] = v3;
  MEMORY[0x1E0C80A78](v3, v4);
  v22 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a1;
  v21 = a1[1];
  v6 = (_QWORD *)*v1;
  v26 = MEMORY[0x1E0DEE9D8];
  v27 = 256;
  sub_1C20AA79C(91, 0xE100000000000000);
  v7 = v6[2];
  if (v7)
  {
    swift_bridgeObjectRetain();
    v20[1] = v6;
    v24 = v7;
    v8 = v6[4];
    v9 = v6[5];
    v10 = v6[6];
    sub_1C20A8008(v8, v9);
    swift_retain();
    v11 = &v26;
    sub_1C20A9EB4((uint64_t)"", 0, v12);
    v13 = *(_QWORD *)(v10 + 32);
    v14 = *(unsigned __int8 *)(v10 + 40);
    if ((~v13 & 0x3000000000000000) != 0 || v14 != 255)
      __asm { BR              X9 }
    sub_1C20C6080();
    v15 = swift_allocError();
    *v16 = 5;
    v23 = v15;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v8, v9);
    swift_release();
  }
  else
  {
    sub_1C20AA79C(93, 0xE100000000000000);
    v25 = v26;
    swift_bridgeObjectRetain();
    sub_1C217545C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
    sub_1C20A8908();
    v11 = (uint64_t *)sub_1C2175444();
    v18 = v17;
    swift_bridgeObjectRelease();
    if (!v18)
    {
      __break(1u);
      JUMPOUT(0x1C20C593CLL);
    }
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1C20C5954(uint64_t *a1)
{
  char **v1;
  uint64_t v2;
  char **v3;
  uint64_t result;
  uint64_t inited;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char *v25;
  _OWORD *v26;
  _QWORD *v27;
  __int128 v28;
  uint64_t v29;

  v3 = v1;
  result = sub_1C20B260C();
  if ((result & 1) == 0)
  {
    result = sub_1C20B301C(91);
    if (!v2)
    {
      result = sub_1C20B35D0();
      if ((result & 1) == 0)
      {
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        inited = swift_initStaticObject();
        v28 = xmmword_1C2175DE0;
        v29 = inited;
        sub_1C214FDCC(a1);
        while (1)
        {
          v7 = *v3;
          sub_1C20A8008(v28, *((unint64_t *)&v28 + 1));
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v3 = v7;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v7 = sub_1C214E484(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
            *v3 = v7;
          }
          v10 = *((_QWORD *)v7 + 2);
          v9 = *((_QWORD *)v7 + 3);
          v11 = v10 + 1;
          if (v10 >= v9 >> 1)
          {
            v25 = sub_1C214E484((char *)(v9 > 1), v10 + 1, 1, v7);
            v12 = *((_QWORD *)&v28 + 1);
            v11 = v10 + 1;
            v7 = v25;
          }
          else
          {
            v12 = *((_QWORD *)&v28 + 1);
          }
          *((_QWORD *)v7 + 2) = v11;
          v13 = &v7[24 * v10];
          *((_QWORD *)v13 + 4) = v28;
          *((_QWORD *)v13 + 5) = v12;
          *((_QWORD *)v13 + 6) = v29;
          *v3 = v7;
          v14 = a1[1];
          v15 = a1[2];
          if (v15 == v14)
            goto LABEL_29;
          v16 = *a1;
          while (1)
          {
            v17 = *(unsigned __int8 *)(v16 + v15);
            v18 = v17 > 0x20;
            v19 = (1 << v17) & 0x100002600;
            if (v18 || v19 == 0)
              break;
            a1[2] = ++v15;
            if (v14 == v15)
              goto LABEL_29;
          }
          if (v14 == v15)
          {
LABEL_29:
            sub_1C20AFA84();
            swift_allocError();
            *v26 = xmmword_1C2175D80;
LABEL_30:
            swift_willThrow();
            sub_1C20A8058(v28, *((unint64_t *)&v28 + 1));
            return swift_release();
          }
          v21 = *a1;
          if (*(_BYTE *)(*a1 + v15) == 93)
            break;
          while (1)
          {
            v22 = *(unsigned __int8 *)(v21 + v15);
            v18 = v22 > 0x20;
            v23 = (1 << v22) & 0x100002600;
            if (v18 || v23 == 0)
              break;
            a1[2] = ++v15;
            if (v14 == v15)
              goto LABEL_29;
          }
          if (v14 == v15)
            goto LABEL_29;
          if (*(_BYTE *)(*a1 + v15) != 44)
          {
            sub_1C20AFA84();
            swift_allocError();
            *v27 = 0;
            v27[1] = 0;
            goto LABEL_30;
          }
          sub_1C20A8058(v28, v12);
          swift_release();
          a1[2] = v15 + 1;
          v28 = xmmword_1C2175DE0;
          v29 = inited;
          sub_1C214FDCC(a1);
        }
        sub_1C20A8058(v28, v12);
        result = swift_release();
        a1[2] = v15 + 1;
      }
    }
  }
  return result;
}

uint64_t *sub_1C20C5C34(unsigned __int8 *a1)
{
  return sub_1C20C535C(a1);
}

uint64_t sub_1C20C5C48(uint64_t *a1)
{
  return sub_1C20C5954(a1);
}

unint64_t Google_Protobuf_ListValue.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > result)
  {
    v3 = (_QWORD *)(*(_QWORD *)v2 + 24 * result);
    v4 = v3[4];
    v5 = v3[5];
    v6 = v3[6];
    *a2 = v4;
    a2[1] = v5;
    a2[2] = v6;
    sub_1C20A8008(v4, v5);
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20C5CB0@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(_QWORD *)(*(_QWORD *)result + 16))
  {
    v4 = (_QWORD *)(*(_QWORD *)result + 24 * v3);
    v5 = v4[4];
    v6 = v4[5];
    v7 = v4[6];
    *a3 = v5;
    a3[1] = v6;
    a3[2] = v7;
    sub_1C20A8008(v5, v6);
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20C5D08(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;

  v4 = *a3;
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *a2;
  sub_1C20A8008(*a1, v6);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v8;
  if ((result & 1) != 0)
  {
    if ((v4 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_1C20C6054(v8);
  v8 = result;
  *a2 = result;
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (v4 < *(_QWORD *)(v8 + 16))
  {
    v10 = (_QWORD *)(v8 + 24 * v4);
    v11 = v10[4];
    v12 = v10[5];
    v10[4] = v5;
    v10[5] = v6;
    v10[6] = v7;
    sub_1C20A8058(v11, v12);
    result = swift_release();
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t Google_Protobuf_ListValue.subscript.setter(uint64_t *a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v7;
  if ((result & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  result = (uint64_t)sub_1C20C6054(v7);
  v7 = result;
  *v2 = result;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v7 + 16) > a2)
  {
    v9 = (_QWORD *)(v7 + 24 * a2);
    v10 = v9[4];
    v11 = v9[5];
    v9[4] = v4;
    v9[5] = v5;
    v9[6] = v6;
    sub_1C20A8058(v10, v11);
    result = swift_release();
    *v2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void (*Google_Protobuf_ListValue.subscript.modify(void (**a1)(uint64_t **a1, char a2), unint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  void (*result)(uint64_t **, char);
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  result = (void (*)(uint64_t **, char))malloc(0x28uLL);
  *a1 = result;
  *((_QWORD *)result + 3) = a2;
  *((_QWORD *)result + 4) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > a2)
  {
    v6 = (uint64_t *)result;
    v7 = (_QWORD *)(*(_QWORD *)v2 + 24 * a2);
    v8 = v7[4];
    v9 = v7[5];
    v10 = v7[6];
    *v6 = v8;
    v6[1] = v9;
    v6[2] = v10;
    sub_1C20A8008(v8, v9);
    swift_retain();
    return sub_1C20C5EE4;
  }
  __break(1u);
  return result;
}

void sub_1C20C5EE4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  char **v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  char **v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char **v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char **v20;
  char **v21;

  v2 = *a1;
  v3 = (char **)(*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *v3;
  if ((a2 & 1) != 0)
  {
    sub_1C20A8008(**a1, v4);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = (char **)v2[4];
      v7 = sub_1C20C6054((uint64_t)v7);
      *v20 = v7;
    }
    v9 = v2[3];
    if (*((_QWORD *)v7 + 2) > v9)
    {
      v10 = (char **)v2[4];
      v11 = &v7[24 * v9];
      v12 = *((_QWORD *)v11 + 4);
      v13 = *((_QWORD *)v11 + 5);
      *((_QWORD *)v11 + 4) = v5;
      *((_QWORD *)v11 + 5) = v4;
      *((_QWORD *)v11 + 6) = v6;
      sub_1C20A8058(v12, v13);
      swift_release();
      *v10 = v7;
      sub_1C20A8058(*v2, v2[1]);
      swift_release();
LABEL_9:
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    v14 = swift_isUniquelyReferenced_nonNull_native();
    *v3 = v7;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  v21 = (char **)v2[4];
  v7 = sub_1C20C6054((uint64_t)v7);
  *v21 = v7;
LABEL_7:
  v15 = v2[3];
  if (*((_QWORD *)v7 + 2) > v15)
  {
    v16 = (char **)v2[4];
    v17 = &v7[24 * v15];
    v18 = *((_QWORD *)v17 + 4);
    v19 = *((_QWORD *)v17 + 5);
    *((_QWORD *)v17 + 4) = v5;
    *((_QWORD *)v17 + 5) = v4;
    *((_QWORD *)v17 + 6) = v6;
    sub_1C20A8058(v18, v19);
    swift_release();
    *v16 = v7;
    goto LABEL_9;
  }
  __break(1u);
}

char *sub_1C20C602C(uint64_t a1)
{
  return sub_1C214E1A4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1C20C6040(uint64_t a1)
{
  return sub_1C214E59C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1C20C6054(uint64_t a1)
{
  return sub_1C214E484(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C20C6070()
{
  return 0;
}

unint64_t sub_1C20C6080()
{
  unint64_t result;

  result = qword_1EF75D5A8;
  if (!qword_1EF75D5A8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for JSONEncodingError, &type metadata for JSONEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75D5A8);
  }
  return result;
}

uint64_t sub_1C20C60C4(uint64_t result, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  if ((~a3 & 0x3000000000000000) != 0 || a4 != 255)
    return sub_1C20C60E8(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_1C20C60E8(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v4;
  int v6;
  int v7;
  uint64_t result;

  v4 = a3;
  if ((a4 & 1) != 0)
    v6 = 4;
  else
    v6 = 0;
  v7 = (a3 >> 60) & 3 | v6;
  switch(v7)
  {
    case 5:
      v4 = a3 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_9;
    case 4:
LABEL_9:
      swift_bridgeObjectRetain();
      return sub_1C20A8008(a2, v4);
    case 2:
      return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C20C6160(uint64_t result, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  if ((~a3 & 0x3000000000000000) != 0 || a4 != 255)
    return sub_1C20C6184(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_1C20C6184(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v4;
  int v6;
  int v7;
  uint64_t result;

  v4 = a3;
  if ((a4 & 1) != 0)
    v6 = 4;
  else
    v6 = 0;
  v7 = (a3 >> 60) & 3 | v6;
  switch(v7)
  {
    case 5:
      v4 = a3 & 0xCFFFFFFFFFFFFFFFLL;
      goto LABEL_9;
    case 4:
LABEL_9:
      swift_bridgeObjectRelease();
      return sub_1C20A8058(a2, v4);
    case 2:
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static Internal.emptyData.getter()
{
  return 0;
}

uint64_t static Internal.areAllInitialized<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t i;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7DFDC8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5 = sub_1C2175690();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v10);
  v12 = (char *)&v30 - v11;
  v13 = *(_QWORD *)(a1 + 64);
  v32 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v33 = (unint64_t)(v14 + 63) >> 6;
  v34 = a1;
  v31 = v33 - 1;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_6;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v20 = v19 | (v18 << 6);
  while (2)
  {
    v21 = v34;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v9, *(_QWORD *)(v34 + 48) + *(_QWORD *)(*(_QWORD *)(a2 - 8) + 72) * v20, a2);
    sub_1C20A84A8(*(_QWORD *)(v21 + 56) + 40 * v20, (uint64_t)&v9[*(int *)(TupleTypeMetadata2 + 48)]);
    for (i = 0; ; i = 1)
    {
      while (1)
      {
LABEL_18:
        v26 = *(_QWORD *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v9, i, 1, TupleTypeMetadata2);
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v12, v9, v36);
        v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v12, 1, TupleTypeMetadata2);
        if (v27 == 1)
        {
          swift_release();
          return v27 == 1;
        }
        sub_1C20A8734((__int128 *)&v12[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)v37);
        v28 = v38;
        v29 = v39;
        __swift_project_boxed_opaque_existential_1(v37, v38);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v29 + 32))(v28, v29) & 1) == 0)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v12, a2);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
          return v27 == 1;
        }
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v12, a2);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        if (v16)
          goto LABEL_4;
LABEL_6:
        v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        if (v23 < v33)
          break;
LABEL_17:
        v16 = 0;
        i = 1;
      }
      v24 = *(_QWORD *)(v32 + 8 * v23);
      if (v24)
        goto LABEL_9;
      v18 += 2;
      if (v23 + 1 < v33)
        break;
      v16 = 0;
      v18 = v23;
    }
    v24 = *(_QWORD *)(v32 + 8 * v18);
    if (v24)
    {
      ++v23;
LABEL_9:
      v16 = (v24 - 1) & v24;
      v20 = __clz(__rbit64(v24)) + (v23 << 6);
      v18 = v23;
      continue;
    }
    break;
  }
  v25 = v23 + 2;
  if (v23 + 2 >= v33)
    goto LABEL_17;
  v24 = *(_QWORD *)(v32 + 8 * v25);
  if (v24)
  {
    v23 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v33)
    {
      v16 = 0;
      i = 1;
      v18 = v31;
      goto LABEL_18;
    }
    v24 = *(_QWORD *)(v32 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_9;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t _s20SiriOntologyProtobuf8InternalO17areAllInitializedySbSayAA7Message_pGFZ_0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  BOOL v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    v3 = v1 - 1;
    do
    {
      v4 = v2[3];
      v5 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v4);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
      v7 = v6;
      v9 = v3-- != 0;
      if ((v6 & 1) == 0)
        break;
      v2 += 5;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 1;
  }
  return v7 & 1;
}

ValueMetadata *type metadata accessor for Internal()
{
  return &type metadata for Internal;
}

uint64_t Google_Protobuf_Api.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20C6628(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20CA918(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C20CA918(v6);
    swift_release();
    *(_QWORD *)(v3 + 16) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Google_Protobuf_Api._StorageClass()
{
  return objc_opt_self();
}

void (*Google_Protobuf_Api.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 24);
  v3[9] = *(_QWORD *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C20C6810;
}

void sub_1C20C6810(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      v7 = sub_1C20CA918(v6);
      swift_release();
      *(_QWORD *)(v5 + 16) = v7;
      swift_release();
    }
    v8 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v8 + 16) = v3;
    *(_QWORD *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      v11 = sub_1C20CA918(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v3;
    *(_QWORD *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.methods.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C69A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20CA918(v4);
    swift_release();
    *(_QWORD *)(a2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.methods.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20CA918(v4);
    swift_release();
    *(_QWORD *)(v2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.methods.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C20C6B54;
}

void sub_1C20C6B54(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      v6 = sub_1C20CA918(v5);
      swift_release();
      *(_QWORD *)(v4 + 16) = v6;
      swift_release();
    }
    v7 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 32) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      v10 = sub_1C20CA918(v9);
      swift_release();
      *(_QWORD *)(v8 + 16) = v10;
      swift_release();
    }
    v11 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 32) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C6CDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20CA918(v4);
    swift_release();
    *(_QWORD *)(a2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20CA918(v4);
    swift_release();
    *(_QWORD *)(v2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.options.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C20C6E90;
}

void sub_1C20C6E90(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      v6 = sub_1C20CA918(v5);
      swift_release();
      *(_QWORD *)(v4 + 16) = v6;
      swift_release();
    }
    v7 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 40) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      v10 = sub_1C20CA918(v9);
      swift_release();
      *(_QWORD *)(v8 + 16) = v10;
      swift_release();
    }
    v11 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 40) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.version.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20C7024(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20CA918(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C20CA918(v6);
    swift_release();
    *(_QWORD *)(v3 + 16) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  *(_QWORD *)(v8 + 48) = a1;
  *(_QWORD *)(v8 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.version.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 56);
  v3[9] = *(_QWORD *)(v4 + 48);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C20C71EC;
}

void sub_1C20C71EC(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      v7 = sub_1C20CA918(v6);
      swift_release();
      *(_QWORD *)(v5 + 16) = v7;
      swift_release();
    }
    v8 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v8 + 48) = v3;
    *(_QWORD *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      v11 = sub_1C20CA918(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 48) = v3;
    *(_QWORD *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.sourceContext.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[8];
  v5 = v3[9];
  v6 = v3[10];
  v7 = v3[11];
  v8 = 0xC000000000000000;
  v9 = 0xE000000000000000;
  if (v5)
    v10 = v3[8];
  else
    v10 = 0;
  if (v5)
  {
    v9 = v3[9];
    v11 = v3[10];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
    v8 = v3[11];
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v8;
  return sub_1C20C2FEC(v4, v5, v6, v7);
}

uint64_t sub_1C20C73A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD **)(a1 + 16);
  swift_beginAccess();
  v4 = v3[8];
  v5 = v3[9];
  v6 = v3[10];
  v7 = v3[11];
  v8 = 0xE000000000000000;
  v9 = 0xC000000000000000;
  if (v5)
    v10 = v3[10];
  else
    v10 = 0;
  if (v5)
  {
    v9 = v3[11];
    v11 = v3[8];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
    v8 = v3[9];
  *a2 = v11;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v9;
  return sub_1C20C2FEC(v4, v5, v6, v7);
}

uint64_t sub_1C20C7414(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5[4];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v5[0] = *a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v2, v3);
  return Google_Protobuf_Api.sourceContext.setter(v5);
}

uint64_t Google_Protobuf_Api.sourceContext.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C20CA918(v7);
    swift_release();
    *(_QWORD *)(v2 + 16) = v8;
    swift_release();
  }
  v9 = *(_QWORD **)(v2 + 16);
  swift_beginAccess();
  v10 = v9[8];
  v11 = v9[9];
  v12 = v9[10];
  v13 = v9[11];
  v9[8] = v3;
  v9[9] = v4;
  v9[10] = v5;
  v9[11] = v6;
  return sub_1C20C3024(v10, v11, v12, v13);
}

void (*Google_Protobuf_Api.sourceContext.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[8];
  v6 = v4[9];
  v7 = v4[10];
  v8 = v4[11];
  v9 = 0xC000000000000000;
  v10 = 0xE000000000000000;
  if (v6)
    v11 = v4[8];
  else
    v11 = 0;
  if (v6)
  {
    v10 = v4[9];
    v12 = v4[10];
  }
  else
  {
    v12 = 0;
  }
  if (v6)
    v9 = v4[11];
  *v3 = v11;
  v3[1] = v10;
  v3[2] = v12;
  v3[3] = v9;
  sub_1C20C2FEC(v5, v6, v7, v8);
  return sub_1C20C75B4;
}

void sub_1C20C75B4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[13];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      v9 = sub_1C20CA918(v8);
      swift_release();
      *(_QWORD *)(v7 + 16) = v9;
      swift_release();
    }
    v10 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v11 = v10[8];
    v12 = v10[9];
    v13 = v10[10];
    v14 = v10[11];
    v10[8] = v4;
    v10[9] = v3;
    v10[10] = v6;
    v10[11] = v5;
    sub_1C20C3024(v11, v12, v13, v14);
    v15 = v2[2];
    v16 = v2[3];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v15, v16);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = v2[13];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v18 = swift_retain();
      v19 = sub_1C20CA918(v18);
      swift_release();
      *(_QWORD *)(v17 + 16) = v19;
      swift_release();
    }
    v20 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v21 = v20[8];
    v22 = v20[9];
    v23 = v20[10];
    v24 = v20[11];
    v20[8] = v4;
    v20[9] = v3;
    v20[10] = v6;
    v20[11] = v5;
    sub_1C20C3024(v21, v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_Api.hasSourceContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 72) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Api.clearSourceContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20CA918(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[8];
  v6 = v4[9];
  v7 = v4[10];
  v8 = v4[11];
  *((_OWORD *)v4 + 4) = 0u;
  *((_OWORD *)v4 + 5) = 0u;
  sub_1C20C3024(v5, v6, v7, v8);
}

uint64_t Google_Protobuf_Api.mixins.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C7864(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20CA918(v4);
    swift_release();
    *(_QWORD *)(a2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 96) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.mixins.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20CA918(v4);
    swift_release();
    *(_QWORD *)(v2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 96) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.mixins.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 96);
  swift_bridgeObjectRetain();
  return sub_1C20C7A18;
}

void sub_1C20C7A18(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      v6 = sub_1C20CA918(v5);
      swift_release();
      *(_QWORD *)(v4 + 16) = v6;
      swift_release();
    }
    v7 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 96) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      v10 = sub_1C20CA918(v9);
      swift_release();
      *(_QWORD *)(v8 + 16) = v10;
      swift_release();
    }
    v11 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 96) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.syntax.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 112);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 104);
  *(_BYTE *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C20C7BAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20CA918(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 104) = v3;
  *(_BYTE *)(v7 + 112) = v4;
  return result;
}

uint64_t Google_Protobuf_Api.syntax.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20CA918(v5);
    swift_release();
    *(_QWORD *)(v2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(v2 + 16);
  result = swift_beginAccess();
  *(_QWORD *)(v7 + 104) = v3;
  *(_BYTE *)(v7 + 112) = v4;
  return result;
}

void (*Google_Protobuf_Api.syntax.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  char v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_BYTE *)(v4 + 112);
  v3[9] = *(_QWORD *)(v4 + 104);
  *((_BYTE *)v3 + 80) = v5;
  return sub_1C20C7D68;
}

void sub_1C20C7D68(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  char v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v7 = v3[11];
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C20CA918(v8);
    swift_release();
    *(_QWORD *)(v7 + 16) = v9;
    swift_release();
  }
LABEL_4:
  v10 = *(_QWORD *)(v3[11] + 16);
  swift_beginAccess();
  *(_QWORD *)(v10 + 104) = v4;
  *(_BYTE *)(v10 + 112) = v5;
  free(v3);
}

uint64_t Google_Protobuf_Api.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Api.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Api.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Api.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  if (qword_1EF75CB28 != -1)
    swift_once();
  *(_QWORD *)(a1 + 16) = qword_1EF75D5D0;
  return swift_retain();
}

uint64_t Google_Protobuf_Method.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Method.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_Method.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.requestTypeURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Method.requestTypeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Method.requestTypeURL.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.requestStreaming.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Google_Protobuf_Method.requestStreaming.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*Google_Protobuf_Method.requestStreaming.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.responseTypeURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Method.responseTypeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Method.responseTypeURL.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.responseStreaming.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Google_Protobuf_Method.responseStreaming.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*Google_Protobuf_Method.responseStreaming.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Method.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*Google_Protobuf_Method.options.modify())()
{
  return nullsub_1;
}

void Google_Protobuf_Method.syntax.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t Google_Protobuf_Method.syntax.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 80) = v2;
  return result;
}

uint64_t (*Google_Protobuf_Method.syntax.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Method.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Method.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Method.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_Mixin.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Mixin.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_Mixin.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Mixin.root.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Mixin.root.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Mixin.root.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Mixin.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Mixin.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Mixin.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Mixin.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C2175DE0;
  return result;
}

unint64_t static Google_Protobuf_Api.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1C20C82D8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD63E8, &qword_1EF75D5B0);
}

uint64_t static Google_Protobuf_Api._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB20 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D5B8;
  v3 = qword_1EF75D5C0;
  v4 = unk_1EF75D5C8;
  *a1 = qword_1EF75D5B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20C8368()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  type metadata accessor for Google_Protobuf_Api._StorageClass();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = 0;
  *(_BYTE *)(v0 + 112) = 1;
  qword_1EF75D5D0 = v0;
  return result;
}

uint64_t sub_1C20C83C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20C3024(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_Api.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C20CA918(v8);
    swift_release();
    *(_QWORD *)(v4 + 16) = v9;
    swift_release();
  }
  v10 = swift_retain();
  sub_1C20C84D0(v10, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C20C84D0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;
  void (*v20)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v21;
  uint64_t v22;
  ValueMetadata *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v29 = a1 + 104;
    v27 = a1 + 64;
    v28 = a1 + 96;
    v25 = a1 + 40;
    v26 = a1 + 48;
    v24 = a1 + 32;
    v12 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[42];
          v19 = v12;
          goto LABEL_13;
        case 2:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v14 = sub_1C20CB070();
          v15 = v24;
          v16 = &type metadata for Google_Protobuf_Method;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v14 = sub_1C20C34A0();
          v15 = v25;
          v16 = &type metadata for Google_Protobuf_Option;
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[42];
          v19 = v26;
LABEL_13:
          v17 = v11;
          v18(v19, a3, a4);
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
          v14 = sub_1C20C4E54();
          v15 = v27;
          v16 = &type metadata for Google_Protobuf_SourceContext;
LABEL_5:
          v17 = v11;
          v13(v15, v16, v14, a3, a4);
LABEL_6:
          v11 = v17;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          v20 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v21 = sub_1C20CB1BC();
          v22 = v28;
          v23 = &type metadata for Google_Protobuf_Mixin;
          goto LABEL_17;
        case 7:
          swift_beginAccess();
          v20 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[48];
          v21 = sub_1C20C4E10();
          v22 = v29;
          v23 = &type metadata for Google_Protobuf_Syntax;
LABEL_17:
          v20(v22, v23, v21, a3, a4);
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_Api.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_retain();
  sub_1C20C87E0(v7, a1, a2, a3);
  swift_release();
  if (!v3)
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t sub_1C20C87E0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t result;
  void (*v14)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t (*v31)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  char v36;

  v5 = v4;
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v11
    || (v12 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
      || (v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v15 = sub_1C20CB070(),
          v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_Method, v15, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
        || (v17 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
            v18 = sub_1C20C34A0(),
            v19 = swift_bridgeObjectRetain(),
            v17(v19, 3, &type metadata for Google_Protobuf_Option, v18, a3, a4),
            result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        v20 = *(_QWORD *)(a1 + 48);
        v21 = *(_QWORD *)(a1 + 56);
        v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0)
          v22 = v20 & 0xFFFFFFFFFFFFLL;
        if (!v22
          || (v23 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD *))a4[14],
              swift_bridgeObjectRetain(),
              v23(v20, v21, 4, a3, a4),
              result = swift_bridgeObjectRelease(),
              !v5))
        {
          swift_beginAccess();
          v24 = *(_QWORD *)(a1 + 72);
          if (!v24
            || (v33[0] = *(_QWORD *)(a1 + 64),
                v33[1] = v24,
                v34 = *(_OWORD *)(a1 + 80),
                v25 = (uint64_t (*)(_QWORD *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17],
                v26 = sub_1C20C4E54(),
                result = v25(v33, 5, &type metadata for Google_Protobuf_SourceContext, v26, a3, a4),
                !v5))
          {
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 96) + 16)
              || (v27 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
                  v28 = sub_1C20CB1BC(),
                  v29 = swift_bridgeObjectRetain(),
                  v27(v29, 6, &type metadata for Google_Protobuf_Mixin, v28, a3, a4),
                  result = swift_bridgeObjectRelease(),
                  !v5))
            {
              result = swift_beginAccess();
              if (*(_QWORD *)(a1 + 104))
              {
                v30 = *(_BYTE *)(a1 + 112);
                v35 = *(_QWORD *)(a1 + 104);
                v36 = v30;
                v31 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[16];
                v32 = sub_1C20C4E10();
                return v31(&v35, 7, &type metadata for Google_Protobuf_Syntax, v32, a3, a4);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C20C8AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1C21757C8(), result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 32);
    swift_beginAccess();
    v10 = *(_QWORD *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1C20F934C(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_29;
    swift_beginAccess();
    v12 = *(_QWORD **)(a1 + 40);
    swift_beginAccess();
    v13 = *(_QWORD **)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1C20F5614(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_29;
    swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 48);
    v16 = *(_QWORD *)(a1 + 56);
    swift_beginAccess();
    if ((v15 != *(_QWORD *)(a2 + 48) || v16 != *(_QWORD *)(a2 + 56)) && (sub_1C21757C8() & 1) == 0)
      goto LABEL_29;
    swift_beginAccess();
    v18 = *(_QWORD *)(a1 + 64);
    v17 = *(_QWORD *)(a1 + 72);
    v20 = *(_QWORD *)(a1 + 80);
    v19 = *(_QWORD *)(a1 + 88);
    swift_beginAccess();
    v21 = *(_QWORD *)(a2 + 64);
    v22 = *(_QWORD *)(a2 + 72);
    v23 = *(_QWORD *)(a2 + 80);
    v24 = *(_QWORD *)(a2 + 88);
    if (v17)
    {
      if (v22)
      {
        if (v18 == v21 && v17 == v22 || (sub_1C21757C8() & 1) != 0)
        {
          sub_1C20C2FEC(v18, v17, v20, v19);
          sub_1C20C2FEC(v18, v17, v20, v19);
          sub_1C20C2FEC(v21, v22, v23, v24);
          sub_1C20A8008(v20, v19);
          sub_1C20A8008(v23, v24);
          sub_1C20FD650(v20, v19);
          v38 = v25;
          sub_1C20A8058(v23, v24);
          sub_1C20A8058(v20, v19);
          sub_1C20C3024(v21, v22, v23, v24);
          swift_bridgeObjectRelease();
          sub_1C20A8058(v20, v19);
          sub_1C20C3024(v18, v17, v20, v19);
          if ((v38 & 1) == 0)
            goto LABEL_29;
          goto LABEL_19;
        }
        sub_1C20C2FEC(v18, v17, v20, v19);
        swift_bridgeObjectRetain();
        sub_1C20A8008(v20, v19);
        swift_bridgeObjectRelease();
        sub_1C20A8058(v20, v19);
        v34 = v18;
        v35 = v17;
        v36 = v20;
        v37 = v19;
LABEL_28:
        sub_1C20C3024(v34, v35, v36, v37);
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      sub_1C20A8008(v20, v19);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v20, v19);
      swift_bridgeObjectRelease();
      sub_1C20A8058(v20, v19);
    }
    else if (!v22)
    {
LABEL_19:
      swift_beginAccess();
      v26 = *(_QWORD **)(a1 + 96);
      swift_beginAccess();
      v27 = *(_QWORD **)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = sub_1C20F9BCC(v26, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        swift_beginAccess();
        v29 = *(_QWORD *)(a1 + 104);
        v30 = *(unsigned __int8 *)(a1 + 112);
        swift_release();
        swift_beginAccess();
        v31 = *(_QWORD *)(a2 + 104);
        v32 = *(unsigned __int8 *)(a2 + 112);
        swift_release();
        v33 = v29 != 0;
        if (!v30)
          v33 = v29;
        if (v32 == 1)
        {
          if (v31)
          {
            if (v33 != 1)
              return 0;
          }
          else if (v33)
          {
            return 0;
          }
        }
        else if (v33 != v31)
        {
          return 0;
        }
        return 1;
      }
LABEL_29:
      swift_release();
      swift_release();
      return 0;
    }
    sub_1C20C2FEC(v21, v22, v23, v24);
    sub_1C20C3024(v18, v17, v20, v19);
    v34 = v21;
    v35 = v22;
    v36 = v23;
    v37 = v24;
    goto LABEL_28;
  }
  return result;
}

uint64_t Google_Protobuf_Api.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  sub_1C20BE464((uint64_t)v5, v1, v2, v3);
  return sub_1C2175870();
}

uint64_t sub_1C20C9008@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  if (qword_1EF75CB28 != -1)
    swift_once();
  *(_QWORD *)(a1 + 16) = qword_1EF75D5D0;
  return swift_retain();
}

unint64_t sub_1C20C9064()
{
  return 0xD000000000000013;
}

uint64_t sub_1C20C9080(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return Google_Protobuf_Api.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20C9094(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  Google_Protobuf_Api.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20C90A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB20 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D5B8;
  v3 = qword_1EF75D5C0;
  v4 = unk_1EF75D5C8;
  *a1 = qword_1EF75D5B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C9124()
{
  uint64_t v0;

  return sub_1C2158240(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20C9130()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  sub_1C20BE464((uint64_t)v5, v1, v2, v3);
  return sub_1C2175870();
}

void sub_1C20C9188(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE464(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20C9194()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_1C2175828();
  sub_1C20BE464((uint64_t)v5, v1, v2, v3);
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_Method.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C20C9208()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD71D0, &qword_1EF75D5D8);
}

uint64_t static Google_Protobuf_Method._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB30 != -1)
    swift_once();
  v2 = unk_1EF75D5E0;
  v3 = qword_1EF75D5E8;
  v4 = unk_1EF75D5F0;
  *a1 = qword_1EF75D5D8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Method.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  void (*v10)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  void (*v12)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 16, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3 + 32, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 40, a2, a3);
          break;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3 + 56, a2, a3);
          break;
        case 6:
          v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          v11 = sub_1C20C34A0();
          v10(v3 + 64, &type metadata for Google_Protobuf_Option, v11, a2, a3);
          break;
        case 7:
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 384);
          v13 = sub_1C20C4E10();
          v12(v3 + 72, &type metadata for Google_Protobuf_Syntax, v13, a2, a3);
          break;
        default:
          break;
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C20C940C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10[2];
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  v4 = *(_QWORD *)(v0 + 24);
  v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0)
    v5 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  v6 = *(_QWORD *)(v0 + 48);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = *(_QWORD *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  v8 = *(_QWORD **)(v0 + 64);
  if (!v8[2] || (result = sub_1C2111214(v8), !v1))
  {
    sub_1C20CB8DC((uint64_t *)(v0 + 72), (uint64_t)v10);
    sub_1C20CB8DC(v10, (uint64_t)&v12);
    if (v12)
    {
      sub_1C2175834();
      sub_1C20CB8DC(v10, (uint64_t)&v11);
      sub_1C2175834();
    }
    __asm { BR              X10 }
  }
  return result;
}

void sub_1C20C95D0(char **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  char *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  char *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned __int8 *v32;
  char *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;

  v3 = v1;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (v7)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v8);
    sub_1C20AAAD0(v5, v6);
    v9 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      *a1 = v9;
    }
    v12 = *((_QWORD *)v9 + 2);
    v11 = *((_QWORD *)v9 + 3);
    if (v12 >= v11 >> 1)
      v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a1 = v9;
  }
  v13 = *(_QWORD *)(v3 + 16);
  v14 = *(_QWORD *)(v3 + 24);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v13 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    sub_1C20A988C(2uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v16);
    sub_1C20AAAD0(v13, v14);
    v17 = *a1;
    v18 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v17;
    if ((v18 & 1) == 0)
    {
      v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      *a1 = v17;
    }
    v20 = *((_QWORD *)v17 + 2);
    v19 = *((_QWORD *)v17 + 3);
    if (v20 >= v19 >> 1)
      v17 = sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v20 + 1;
    v17[v20 + 32] = 10;
    *a1 = v17;
  }
  if (*(_BYTE *)(v3 + 32) != 1 || (sub_1C20AE8CC(1, 3uLL), !v2))
  {
    v21 = *(_QWORD *)(v3 + 40);
    v22 = *(_QWORD *)(v3 + 48);
    v23 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0)
      v23 = v21 & 0xFFFFFFFFFFFFLL;
    if (v23)
    {
      sub_1C20A988C(4uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v24);
      sub_1C20AAAD0(v21, v22);
      v25 = *a1;
      v26 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v25;
      if ((v26 & 1) == 0)
      {
        v25 = sub_1C214E1A4(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
        *a1 = v25;
      }
      v28 = *((_QWORD *)v25 + 2);
      v27 = *((_QWORD *)v25 + 3);
      if (v28 >= v27 >> 1)
        v25 = sub_1C214E1A4((char *)(v27 > 1), v28 + 1, 1, v25);
      *((_QWORD *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 10;
      *a1 = v25;
    }
    if (*(_BYTE *)(v3 + 56) != 1 || (sub_1C20AE8CC(1, 5uLL), !v2))
    {
      v29 = *(_QWORD *)(v3 + 64);
      if (!*(_QWORD *)(v29 + 16) || (sub_1C21614F8(v29, 6uLL), !v2))
      {
        v30 = *(_QWORD *)(v3 + 72);
        if (v30)
        {
          v31 = *(_BYTE *)(v3 + 80);
          sub_1C20A988C(7uLL);
          sub_1C20A9EB4((uint64_t)": ", 2, v32);
          sub_1C215F51C(v30, v31);
          v33 = *a1;
          v34 = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v33;
          if ((v34 & 1) == 0)
          {
            v33 = sub_1C214E1A4(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
            *a1 = v33;
          }
          v36 = *((_QWORD *)v33 + 2);
          v35 = *((_QWORD *)v33 + 3);
          if (v36 >= v35 >> 1)
            v33 = sub_1C214E1A4((char *)(v35 > 1), v36 + 1, 1, v33);
          *((_QWORD *)v33 + 2) = v36 + 1;
          v33[v36 + 32] = 10;
          *a1 = v33;
        }
        sub_1C2122EF0((uint64_t)a1, *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96));
      }
    }
  }
}

void Google_Protobuf_Method.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v18;
  void (*v19)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  __int128 v26;
  uint64_t v27;

  v7 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = *(unsigned __int8 *)(v3 + 32);
  v11 = *(_QWORD *)(v3 + 40);
  v12 = *(_QWORD *)(v3 + 48);
  v25 = *(unsigned __int8 *)(v3 + 56);
  v23 = *(_QWORD *)(v3 + 72);
  v24 = *(_QWORD *)(v3 + 64);
  v13 = *(_BYTE *)(v3 + 80);
  v21 = *(_OWORD *)(v3 + 88);
  v14 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v14 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  v27 = a2;
  v22 = v13;
  if (!v14 || ((*(void (**)(void))(a3 + 112))(), !v4))
  {
    v15 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v15 = v9 & 0xFFFFFFFFFFFFLL;
    if (!v15
      || ((*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v9, v8, 2, v27, a3), !v4))
    {
      if (!v10 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 3, v27, a3), !v4))
      {
        v16 = HIBYTE(v12) & 0xF;
        if ((v12 & 0x2000000000000000) == 0)
          v16 = v11 & 0xFFFFFFFFFFFFLL;
        if (!v16
          || ((*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v11, v12, 4, v27, a3), !v4))
        {
          if (!v25 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 5, v27, a3), !v4))
          {
            if (!*(_QWORD *)(v24 + 16)
              || (v17 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                  v18 = sub_1C20C34A0(),
                  v17(v24, 6, &type metadata for Google_Protobuf_Option, v18, v27, a3),
                  !v4))
            {
              if (!v23
                || (*(_QWORD *)&v26 = v23,
                    BYTE8(v26) = v22,
                    v19 = *(void (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
                    v20 = sub_1C20C4E10(),
                    v19(&v26, 7, &type metadata for Google_Protobuf_Syntax, v20, v27, a3),
                    !v4))
              {
                v26 = v21;
                UnknownStorage.traverse<A>(visitor:)();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t Google_Protobuf_Method.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20C940C();
  return sub_1C2175870();
}

double sub_1C20C9C60@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C20C9C9C()
{
  return 0xD000000000000016;
}

uint64_t sub_1C20C9CB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t sub_1C20C9CC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v3;
  return result;
}

uint64_t (*sub_1C20C9CF4())()
{
  return nullsub_1;
}

uint64_t sub_1C20C9D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Method.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20C9D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_Method.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20C9D2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB30 != -1)
    swift_once();
  v2 = unk_1EF75D5E0;
  v3 = qword_1EF75D5E8;
  v4 = unk_1EF75D5F0;
  *a1 = qword_1EF75D5D8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20C9DA8()
{
  return sub_1C2158318();
}

uint64_t sub_1C20C9DF0()
{
  sub_1C2175828();
  sub_1C20C940C();
  return sub_1C2175870();
}

double sub_1C20C9EA0(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20C940C();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20C9F40()
{
  sub_1C2175828();
  sub_1C20C940C();
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_Mixin.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1C20CA00C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6FD0, &qword_1EF75D5F8);
}

uint64_t static Google_Protobuf_Mixin._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB38 != -1)
    swift_once();
  v2 = unk_1EF75D600;
  v3 = qword_1EF75D608;
  v4 = unk_1EF75D610;
  *a1 = qword_1EF75D5F8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Mixin.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 16, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

void sub_1C20CA138()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = v0[1];
  v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v2 = *v0 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  v3 = v0[3];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = v0[2] & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C20CA1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((a3 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void sub_1C20CA224(char **a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  char v17;
  unint64_t v18;
  unint64_t v19;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = *v2 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v7);
    sub_1C20AAAD0(v4, v5);
    v8 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      *a1 = v8;
    }
    v11 = *((_QWORD *)v8 + 2);
    v10 = *((_QWORD *)v8 + 3);
    if (v11 >= v10 >> 1)
      v8 = sub_1C214E1A4((char *)(v10 > 1), v11 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11 + 1;
    v8[v11 + 32] = 10;
    *a1 = v8;
  }
  v12 = v2[2];
  v13 = v2[3];
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v12 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    sub_1C20A988C(2uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v15);
    sub_1C20AAAD0(v12, v13);
    v16 = *a1;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v16;
    if ((v17 & 1) == 0)
    {
      v16 = sub_1C214E1A4(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      *a1 = v16;
    }
    v19 = *((_QWORD *)v16 + 2);
    v18 = *((_QWORD *)v16 + 3);
    if (v19 >= v18 >> 1)
      v16 = sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a1 = v16;
  }
  sub_1C2122EF0((uint64_t)a1, v2[4], v2[5]);
}

__n128 Google_Protobuf_Mixin.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 result;
  uint64_t v12;

  v7 = v3[1];
  v8 = v3[2];
  v9 = v3[3];
  v10 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v10 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v10 || ((*(void (**)(void))(a3 + 112))(), !v4))
  {
    v12 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v12 = v8 & 0xFFFFFFFFFFFFLL;
    if (!v12
      || ((*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v8, v9, 2, a2, a3),
          !v4))
    {
      UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t Google_Protobuf_Mixin.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20CA138();
  return sub_1C2175870();
}

double sub_1C20CA54C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C20CA568()
{
  return 0xD000000000000015;
}

uint64_t sub_1C20CA584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Mixin.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C20CA598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = Google_Protobuf_Mixin.traverse<A>(visitor:)(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t sub_1C20CA5AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB38 != -1)
    swift_once();
  v2 = unk_1EF75D600;
  v3 = qword_1EF75D608;
  v4 = unk_1EF75D610;
  *a1 = qword_1EF75D5F8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CA628()
{
  return sub_1C21583E8();
}

uint64_t sub_1C20CA660()
{
  sub_1C2175828();
  sub_1C20CA138();
  return sub_1C2175870();
}

double sub_1C20CA700(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20CA138();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20CA788()
{
  sub_1C2175828();
  sub_1C20CA138();
  return sub_1C2175870();
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_MixinV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1C21757C8() & 1) == 0
    || (v2 != v6 || v4 != v7) && (sub_1C21757C8() & 1) == 0)
  {
    return 0;
  }
  sub_1C20A8008(v3, v5);
  sub_1C20A8008(v8, v9);
  sub_1C20FD650(v3, v5);
  v11 = v10;
  sub_1C20A8058(v8, v9);
  sub_1C20A8058(v3, v5);
  return v11 & 1;
}

uint64_t sub_1C20CA918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0xE000000000000000;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0xE000000000000000;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_QWORD *)(v1 + 96) = v3;
  *(_QWORD *)(v1 + 104) = 0;
  *(_BYTE *)(v1 + 112) = 1;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = v9;
  *(_QWORD *)(v1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v14 = *(_QWORD *)(v1 + 64);
  v16 = *(_QWORD *)(v1 + 72);
  v15 = *(_QWORD *)(v1 + 80);
  v17 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v1 + 64) = v10;
  *(_QWORD *)(v1 + 72) = v11;
  *(_QWORD *)(v1 + 80) = v12;
  *(_QWORD *)(v1 + 88) = v13;
  sub_1C20C2FEC(v10, v11, v12, v13);
  sub_1C20C3024(v14, v16, v15, v17);
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 96);
  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 104);
  LOBYTE(a1) = *(_BYTE *)(a1 + 112);
  swift_beginAccess();
  *(_QWORD *)(v1 + 104) = v19;
  *(_BYTE *)(v1 + 112) = a1;
  return v1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C7_MethodV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int v26;
  int v27;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v25 = *(_QWORD **)(a1 + 64);
  v22 = *(_QWORD *)(a1 + 72);
  v21 = *(unsigned __int8 *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v26 = *(unsigned __int8 *)(a2 + 56);
  v27 = *(unsigned __int8 *)(a1 + 56);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD **)(a2 + 64);
  v20 = *(unsigned __int8 *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 88);
  if ((*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)) && (sub_1C21757C8() & 1) == 0)
    return 0;
  if (v2 == v7 && v3 == v8)
  {
    if (v4 != v9)
      return 0;
  }
  else if ((sub_1C21757C8() & 1) == 0 || ((v4 ^ v9) & 1) != 0)
  {
    return 0;
  }
  if (v5 == v10 && v6 == v11)
  {
    if (v27 != v26)
      return 0;
  }
  else if ((sub_1C21757C8() & 1) == 0 || ((v27 ^ v26) & 1) != 0)
  {
    return 0;
  }
  if ((sub_1C20F5614(v25, v24) & 1) == 0)
    return 0;
  v12 = v22 != 0;
  if (!v21)
    v12 = v22;
  if (v20)
  {
    if (v23)
    {
      if (v12 != 1)
        return 0;
    }
    else if (v12)
    {
      return 0;
    }
  }
  else if (v12 != v23)
  {
    return 0;
  }
  sub_1C20A8008(v19, v18);
  sub_1C20A8008(v17, v16);
  sub_1C20FD650(v19, v18);
  v15 = v14;
  sub_1C20A8058(v17, v16);
  sub_1C20A8058(v19, v18);
  return v15 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C4_ApiV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  if (v4 != v7)
  {
    swift_retain();
    swift_retain();
    v8 = sub_1C20C8AE0(v4, v7);
    swift_release();
    swift_release();
    if ((v8 & 1) == 0)
      return 0;
  }
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v5, v6);
  sub_1C20FD650(v2, v3);
  v10 = v9;
  sub_1C20A8058(v5, v6);
  sub_1C20A8058(v2, v3);
  return v10 & 1;
}

unint64_t sub_1C20CAEA8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20CAECC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20CAECC()
{
  unint64_t result;

  result = qword_1EF75D618;
  if (!qword_1EF75D618)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Api, &type metadata for Google_Protobuf_Api);
    atomic_store(result, (unint64_t *)&qword_1EF75D618);
  }
  return result;
}

uint64_t sub_1C20CAF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20CAF24, (uint64_t (*)(void))sub_1C20CAF68);
}

unint64_t sub_1C20CAF24()
{
  unint64_t result;

  result = qword_1EF75D620;
  if (!qword_1EF75D620)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Api, &type metadata for Google_Protobuf_Api);
    atomic_store(result, (unint64_t *)&qword_1EF75D620);
  }
  return result;
}

unint64_t sub_1C20CAF68()
{
  unint64_t result;

  result = qword_1EF75D628;
  if (!qword_1EF75D628)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Api, &type metadata for Google_Protobuf_Api);
    atomic_store(result, (unint64_t *)&qword_1EF75D628);
  }
  return result;
}

unint64_t sub_1C20CAFB0()
{
  unint64_t result;

  result = qword_1EF75D630;
  if (!qword_1EF75D630)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Api, &type metadata for Google_Protobuf_Api);
    atomic_store(result, (unint64_t *)&qword_1EF75D630);
  }
  return result;
}

unint64_t sub_1C20CAFF4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20CB018();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20CB018()
{
  unint64_t result;

  result = qword_1EF75D638;
  if (!qword_1EF75D638)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Method, &type metadata for Google_Protobuf_Method);
    atomic_store(result, (unint64_t *)&qword_1EF75D638);
  }
  return result;
}

uint64_t sub_1C20CB05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20CB070, (uint64_t (*)(void))sub_1C20CB0B4);
}

unint64_t sub_1C20CB070()
{
  unint64_t result;

  result = qword_1EF75D640;
  if (!qword_1EF75D640)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Method, &type metadata for Google_Protobuf_Method);
    atomic_store(result, (unint64_t *)&qword_1EF75D640);
  }
  return result;
}

unint64_t sub_1C20CB0B4()
{
  unint64_t result;

  result = qword_1EF75D648;
  if (!qword_1EF75D648)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Method, &type metadata for Google_Protobuf_Method);
    atomic_store(result, (unint64_t *)&qword_1EF75D648);
  }
  return result;
}

unint64_t sub_1C20CB0FC()
{
  unint64_t result;

  result = qword_1EF75D650;
  if (!qword_1EF75D650)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Method, &type metadata for Google_Protobuf_Method);
    atomic_store(result, (unint64_t *)&qword_1EF75D650);
  }
  return result;
}

unint64_t sub_1C20CB140(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20CB164();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20CB164()
{
  unint64_t result;

  result = qword_1EF75D658;
  if (!qword_1EF75D658)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Mixin, &type metadata for Google_Protobuf_Mixin);
    atomic_store(result, (unint64_t *)&qword_1EF75D658);
  }
  return result;
}

uint64_t sub_1C20CB1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20CB1BC, (uint64_t (*)(void))sub_1C20CB200);
}

unint64_t sub_1C20CB1BC()
{
  unint64_t result;

  result = qword_1EF75D660;
  if (!qword_1EF75D660)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Mixin, &type metadata for Google_Protobuf_Mixin);
    atomic_store(result, (unint64_t *)&qword_1EF75D660);
  }
  return result;
}

unint64_t sub_1C20CB200()
{
  unint64_t result;

  result = qword_1EF75D668;
  if (!qword_1EF75D668)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Mixin, &type metadata for Google_Protobuf_Mixin);
    atomic_store(result, (unint64_t *)&qword_1EF75D668);
  }
  return result;
}

unint64_t sub_1C20CB248()
{
  unint64_t result;

  result = qword_1EF75D670;
  if (!qword_1EF75D670)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Mixin, &type metadata for Google_Protobuf_Mixin);
    atomic_store(result, (unint64_t *)&qword_1EF75D670);
  }
  return result;
}

uint64_t sub_1C20CB28C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CB2D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CB324@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CB370@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CB3C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CB410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 112);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 104);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Api()
{
  return &type metadata for Google_Protobuf_Api;
}

uint64_t destroy for Google_Protobuf_Method(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C20A8058(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
}

uint64_t initializeWithCopy for Google_Protobuf_Method(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v6;
  v8 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v8, v9);
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v9;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Method(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  v6 = *(_QWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 96);
  sub_1C20A8008(v6, v5);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = v5;
  sub_1C20A8058(v7, v8);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_Method(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_1C20A8058(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Method(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Method(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Method()
{
  return &type metadata for Google_Protobuf_Method;
}

_QWORD *initializeWithCopy for Google_Protobuf_Mixin(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v5, v6);
  a1[4] = v5;
  a1[5] = v6;
  return a1;
}

_QWORD *assignWithCopy for Google_Protobuf_Mixin(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[4];
  v4 = a2[5];
  sub_1C20A8008(v5, v4);
  v6 = a1[4];
  v7 = a1[5];
  a1[4] = v5;
  a1[5] = v4;
  sub_1C20A8058(v6, v7);
  return a1;
}

_QWORD *assignWithTake for Google_Protobuf_Mixin(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a1[4];
  v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_1C20A8058(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Mixin()
{
  return &type metadata for Google_Protobuf_Mixin;
}

uint64_t sub_1C20CB8DC(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy9_8(a2, a1);
  return a2;
}

BOOL static JSONEncodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JSONEncodingError.hash(into:)()
{
  return sub_1C2175834();
}

uint64_t JSONEncodingError.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

BOOL sub_1C20CB998(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1C20CB9B0()
{
  unint64_t result;

  result = qword_1EF75D7F8;
  if (!qword_1EF75D7F8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for JSONEncodingError, &type metadata for JSONEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75D7F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JSONEncodingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C20CBAD0 + 4 * byte_1C2176EA5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C20CBB04 + 4 * asc_1C2176EA0[v4]))();
}

uint64_t sub_1C20CBB04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20CBB0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C20CBB14);
  return result;
}

uint64_t sub_1C20CBB20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C20CBB28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C20CBB2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20CBB34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1C20CBB40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONEncodingError()
{
  return &type metadata for JSONEncodingError;
}

uint64_t sub_1C20CBB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  unsigned __int8 *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;

  v4 = v3;
  if (a2 == 1)
  {
    if ((*(_BYTE *)(v3 + 17) & 1) != 0)
    {
      *(_QWORD *)v3 = ",";
      *(_QWORD *)(v3 + 8) = 1;
      *(_WORD *)(v3 + 16) = 2;
      return sub_1C211E194(a1);
    }
    v7 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if ((v7 & 1) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)v3)
    {
      sub_1C20A9EB4(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), v7);
      return sub_1C211E194(a1);
    }
    __break(1u);
    goto LABEL_17;
  }
  v3 += 24;
  sub_1C20A9EB4((uint64_t)":", 1, a3);
  v4 = (int)a1;
  if ((a1 & 0x80000000) != 0)
  {
    a1 = *(_QWORD *)v3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v3 = a1;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_11:
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v12 = v10 + 1;
      if (v10 >= v11 >> 1)
      {
        v16 = v10 + 1;
        v13 = (char *)a1;
        v14 = *(_QWORD *)(a1 + 16);
        v15 = sub_1C214E1A4((char *)(v11 > 1), v10 + 1, 1, v13);
        v10 = v14;
        v12 = v16;
        a1 = (uint64_t)v15;
      }
      *(_QWORD *)(a1 + 16) = v12;
      *(_BYTE *)(a1 + v10 + 32) = 45;
      *(_QWORD *)v3 = a1;
      v6 = -v4;
      return sub_1C211F414(v6);
    }
LABEL_17:
    a1 = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(a1 + 16) + 1, 1, (char *)a1);
    *(_QWORD *)v3 = a1;
    goto LABEL_11;
  }
  v6 = (int)a1;
  return sub_1C211F414(v6);
}

const char *sub_1C20CBCA8@<X0>(const char *result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v4 = (unint64_t)result;
  if (a2 != 1)
  {
    result = ":";
    v5 = 1;
LABEL_8:
    sub_1C20A9EB4((uint64_t)result, v5, a3);
    return (const char *)sub_1C211E3C4(v4);
  }
  if ((*(_BYTE *)(v3 + 17) & 1) != 0)
  {
    *(_QWORD *)v3 = ",";
    *(_QWORD *)(v3 + 8) = 1;
    *(_WORD *)(v3 + 16) = 2;
    return (const char *)sub_1C211E3C4(v4);
  }
  a3 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
  if ((a3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    result = *(const char **)v3;
    if (*(_QWORD *)v3)
    {
      v5 = *(_QWORD *)(v3 + 8);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20CBD48@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  unsigned __int8 *v5;
  char *v6;
  uint64_t *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v4 = result;
  if (a2 != 1)
  {
    sub_1C20A9EB4((uint64_t)":", 1, a3);
    return sub_1C211F414(v4);
  }
  if ((*(_BYTE *)(v3 + 17) & 1) == 0)
  {
    v5 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if ((v5 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      result = *(_QWORD *)v3;
      if (*(_QWORD *)v3)
      {
        sub_1C20A9EB4(result, *(_QWORD *)(v3 + 8), v5);
        goto LABEL_8;
      }
    }
    __break(1u);
    return result;
  }
  *(_QWORD *)v3 = ",";
  *(_QWORD *)(v3 + 8) = 1;
  *(_WORD *)(v3 + 16) = 2;
LABEL_8:
  v7 = (uint64_t *)(v3 + 24);
  v6 = *(char **)(v3 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v7 = (uint64_t)v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    *v7 = (uint64_t)v6;
  }
  v10 = *((_QWORD *)v6 + 2);
  v9 = *((_QWORD *)v6 + 3);
  if (v10 >= v9 >> 1)
    v6 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v10 + 1;
  v6[v10 + 32] = 34;
  *v7 = (uint64_t)v6;
  sub_1C211F414(v4);
  v11 = *v7;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v11;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v11 + 16) + 1, 1, (char *)v11);
    v11 = result;
    *v7 = result;
  }
  v13 = *(_QWORD *)(v11 + 16);
  v12 = *(_QWORD *)(v11 + 24);
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, (char *)v11);
    v11 = result;
  }
  *(_QWORD *)(v11 + 16) = v13 + 1;
  *(_BYTE *)(v11 + v13 + 32) = 34;
  *v7 = v11;
  return result;
}

uint64_t sub_1C20CBEF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v4 = result;
  if (a2 != 1)
  {
    result = (uint64_t)":";
    v5 = 1;
LABEL_8:
    sub_1C20A9EB4(result, v5, a3);
    goto LABEL_9;
  }
  if ((*(_BYTE *)(v3 + 17) & 1) == 0)
  {
    a3 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if ((a3 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      result = *(_QWORD *)v3;
      if (*(_QWORD *)v3)
      {
        v5 = *(_QWORD *)(v3 + 8);
        goto LABEL_8;
      }
    }
    __break(1u);
    return result;
  }
  *(_QWORD *)v3 = ",";
  *(_QWORD *)(v3 + 8) = 1;
  *(_WORD *)(v3 + 16) = 2;
LABEL_9:
  v7 = (uint64_t *)(v3 + 24);
  v6 = *(char **)(v3 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v7 = (uint64_t)v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
    *v7 = (uint64_t)v6;
  }
  v10 = *((_QWORD *)v6 + 2);
  v9 = *((_QWORD *)v6 + 3);
  if (v10 >= v9 >> 1)
    v6 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v6);
  *((_QWORD *)v6 + 2) = v10 + 1;
  v6[v10 + 32] = 34;
  *v7 = (uint64_t)v6;
  sub_1C211F414(v4);
  v11 = *v7;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v11;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v11 + 16) + 1, 1, (char *)v11);
    v11 = result;
    *v7 = result;
  }
  v13 = *(_QWORD *)(v11 + 16);
  v12 = *(_QWORD *)(v11 + 24);
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, (char *)v11);
    v11 = result;
  }
  *(_QWORD *)(v11 + 16) = v13 + 1;
  *(_BYTE *)(v11 + v13 + 32) = 34;
  *v7 = v11;
  return result;
}

uint64_t sub_1C20CC094@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  char v4;
  unsigned __int8 *v5;
  const char *v6;
  uint64_t v7;
  unsigned __int8 *v8;

  v4 = result;
  if (a2 == 1)
  {
    if ((*(_BYTE *)(v3 + 17) & 1) != 0)
    {
      *(_QWORD *)v3 = ",";
      *(_QWORD *)(v3 + 8) = 1;
      *(_WORD *)(v3 + 16) = 2;
      return sub_1C211E668(v4 & 1);
    }
    v8 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if ((v8 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      result = *(_QWORD *)v3;
      if (*(_QWORD *)v3)
      {
        sub_1C20A9EB4(result, *(_QWORD *)(v3 + 8), v8);
        return sub_1C211E668(v4 & 1);
      }
    }
    __break(1u);
  }
  else
  {
    sub_1C20A9EB4((uint64_t)":", 1, a3);
    if ((v4 & 1) != 0)
    {
      v6 = "true";
      v7 = 4;
    }
    else
    {
      v6 = "false";
      v7 = 5;
    }
    return sub_1C20A9EB4((uint64_t)v6, v7, v5);
  }
  return result;
}

const char *sub_1C20CC15C@<X0>(const char *result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = (uint64_t)result;
  if (a3 != 1)
  {
    result = ":";
    v7 = 1;
LABEL_8:
    sub_1C20A9EB4((uint64_t)result, v7, a4);
    return (const char *)sub_1C211E7B0(v6, a2);
  }
  if ((*(_BYTE *)(v4 + 17) & 1) != 0)
  {
    *(_QWORD *)v4 = ",";
    *(_QWORD *)(v4 + 8) = 1;
    *(_WORD *)(v4 + 16) = 2;
    return (const char *)sub_1C211E7B0(v6, a2);
  }
  a4 = (unsigned __int8 *)*(unsigned __int8 *)(v4 + 16);
  if ((a4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    result = *(const char **)v4;
    if (*(_QWORD *)v4)
    {
      v7 = *(_QWORD *)(v4 + 8);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20CC20C@<X0>(unsigned __int8 *a1@<X8>)
{
  return sub_1C20CC564(a1);
}

uint64_t sub_1C20CC228@<X0>(unsigned __int8 *a1@<X8>, float a2@<S0>)
{
  sub_1C20A9EB4((uint64_t)":", 1, a1);
  return sub_1C211E0B4(a2);
}

uint64_t sub_1C20CC270@<X0>(unsigned __int8 *a1@<X8>, double a2@<D0>)
{
  sub_1C20A9EB4((uint64_t)":", 1, a1);
  return sub_1C211E124(a2);
}

uint64_t sub_1C20CC2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CBB58(a1, a2, a3);
}

const char *sub_1C20CC2CC@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CBCA8(a1, a2, a3);
}

uint64_t sub_1C20CC2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CBD48(a1, a2, a3);
}

uint64_t sub_1C20CC2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CBEF4(a1, a2, a3);
}

uint64_t sub_1C20CC308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CC094(a1, a2, a3);
}

const char *sub_1C20CC31C@<X0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X8>)
{
  return sub_1C20CC15C(a1, a2, a3, a4);
}

void sub_1C20CC330(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  sub_1C20A9EB4((uint64_t)":", 1, a3);
  sub_1C211EFB8(a1, a2);
}

uint64_t sub_1C20CC380@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CC39C(a1, a2, a3);
}

uint64_t sub_1C20CC39C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned __int8 *a3@<X8>)
{
  uint64_t v3;
  char **v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _BYTE v17[40];
  _OWORD v18[2];
  __int16 v19;
  __int128 v20;
  __n128 v21;
  __int16 v22;
  __n128 v23;
  __n128 v24;
  char v25;

  v6 = (char **)(v3 + 24);
  sub_1C20A9EB4((uint64_t)":", 1, a3);
  if ((*(_BYTE *)(v3 + 34) & 1) != 0
    || (sub_1C20B7A9C(a1, a2, (uint64_t)v17), sub_1C20CC5FC((uint64_t)v17, (uint64_t)v18), HIBYTE(v19) == 255))
  {
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    v8 = v7;
    if ((v7 & 0x8000000000000000) != 0)
    {
      v9 = *v6;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v6 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        *v6 = v9;
      }
      v12 = *((_QWORD *)v9 + 2);
      v11 = *((_QWORD *)v9 + 3);
      if (v12 >= v11 >> 1)
        v9 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 45;
      *v6 = v9;
      v7 = -(uint64_t)v8;
    }
    return sub_1C211F414(v7);
  }
  else
  {
    v20 = v18[0];
    v21 = (__n128)v18[1];
    v22 = v19;
    sub_1C20CC644(&v21, &v23);
    sub_1C20CC644(&v23, &v24);
    v14 = v24.n128_u64[0];
    if ((v25 & 1) != 0)
    {
      v14 = sub_1C21756F0();
      v16 = v15;
      sub_1C20CC680((uint64_t)v17);
    }
    else
    {
      v16 = v24.n128_u64[1];
    }
    sub_1C211E7B0(v14, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C20CC564@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;
  Swift::String v5;
  uint64_t v6;
  _BYTE v7[2];

  sub_1C20A9EB4((uint64_t)":", 1, a1);
  v2 = *(_BYTE *)(v1 + 35);
  v7[0] = *(_BYTE *)(v1 + 34);
  v7[1] = v2;
  v3 = v7;
  v5 = Message.jsonString(options:)((SiriOntologyProtobuf::JSONEncodingOptions)v3);
  result = v5._countAndFlagsBits;
  if (!v6)
    return sub_1C20AA79C(v5._countAndFlagsBits, (unint64_t)v5._object);
  return result;
}

uint64_t sub_1C20CC5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75D800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 *sub_1C20CC644(__n128 *a1, __n128 *a2)
{
  __swift_memcpy18_8(a2, a1);
  return a2;
}

uint64_t sub_1C20CC680(uint64_t a1)
{
  sub_1C20B7C80(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int16 *)(a1 + 32));
  return a1;
}

uint64_t destroy for JSONMapEncodingVisitor()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONMapEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSONMapEncodingVisitor(uint64_t a1, __int128 *a2)
{
  __int128 v4;

  v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
  *(_BYTE *)(a1 + 34) = *((_BYTE *)a2 + 34);
  *(_BYTE *)(a1 + 35) = *((_BYTE *)a2 + 35);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for JSONMapEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONMapEncodingVisitor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 36))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONMapEncodingVisitor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONMapEncodingVisitor()
{
  return &type metadata for JSONMapEncodingVisitor;
}

uint64_t sub_1C20CC878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C20CC2B8(a1, a2, a3);
}

BOOL static BinaryDecodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BinaryDecodingError.hash(into:)()
{
  return sub_1C2175834();
}

uint64_t BinaryDecodingError.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

unint64_t sub_1C20CC910()
{
  unint64_t result;

  result = qword_1EF75D808;
  if (!qword_1EF75D808)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for BinaryDecodingError, &type metadata for BinaryDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75D808);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryDecodingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryDecodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C20CCA30 + 4 * byte_1C2176FD5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C20CCA64 + 4 * byte_1C2176FD0[v4]))();
}

uint64_t sub_1C20CCA64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20CCA6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C20CCA74);
  return result;
}

uint64_t sub_1C20CCA80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C20CCA88);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C20CCA8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C20CCA94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecodingError()
{
  return &type metadata for BinaryDecodingError;
}

uint64_t static Version.major.getter()
{
  return 1;
}

uint64_t static Version.minor.getter()
{
  return 7;
}

uint64_t static Version.revision.getter()
{
  return 0;
}

uint64_t sub_1C20CCAC8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C21757B0();
  v3 = v0;
  sub_1C21754F8();
  sub_1C21757B0();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  sub_1C21754F8();
  sub_1C21757B0();
  sub_1C21754F8();
  result = swift_bridgeObjectRelease();
  qword_1EF75D810 = v2;
  *(_QWORD *)algn_1EF75D818 = v3;
  return result;
}

uint64_t static Version.versionString.getter()
{
  uint64_t v0;

  if (qword_1EF75CB40 != -1)
    swift_once();
  v0 = qword_1EF75D810;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for Version()
{
  return &type metadata for Version;
}

uint64_t BinaryDecodingOptions.messageDepthLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t BinaryDecodingOptions.messageDepthLimit.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*BinaryDecodingOptions.messageDepthLimit.modify())()
{
  return nullsub_1;
}

uint64_t BinaryDecodingOptions.discardUnknownFields.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t BinaryDecodingOptions.discardUnknownFields.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*BinaryDecodingOptions.discardUnknownFields.modify())()
{
  return nullsub_1;
}

uint64_t getEnumTagSinglePayload for BinaryDecodingOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryDecodingOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t Google_Protobuf_Struct.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v28;

  v3 = (_QWORD *)sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v3;
    *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
    return result;
  }
  v5 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v28 = v4;
    v8 = *(v5 - 4);
    v7 = *(v5 - 3);
    v9 = *(v5 - 2);
    v10 = *(v5 - 1);
    v11 = *v5;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v9, v10);
    swift_retain();
    sub_1C20A8008(v9, v10);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_1C20A9B30(v8, v7);
    v15 = v3[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v3[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1C2174124();
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1C21728AC(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1C20A9B30(v8, v7);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_19;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        v6 = (uint64_t *)(v3[7] + 24 * v14);
        sub_1C20A8058(*v6, v6[1]);
        swift_release();
        *v6 = v9;
        v6[1] = v10;
        v6[2] = v11;
        goto LABEL_4;
      }
    }
    v3[(v14 >> 6) + 8] |= 1 << v14;
    v21 = (uint64_t *)(v3[6] + 16 * v14);
    *v21 = v8;
    v21[1] = v7;
    v22 = (uint64_t *)(v3[7] + 24 * v14);
    *v22 = v9;
    v22[1] = v10;
    v22[2] = v11;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_18;
    v3[2] = v25;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v9, v10);
    swift_release();
    v5 += 5;
    v4 = v28 - 1;
    if (v28 == 1)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_1C21757E0();
  __break(1u);
  return result;
}

uint64_t sub_1C20CCF1C(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  unint64_t v8;
  int64_t v9;
  char **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  __int16 v58;
  char *v59;
  __int16 v60;
  char v61;
  char v62;
  char *v63;

  v2 = sub_1C2175468();
  MEMORY[0x1E0C80A78](v2, v3);
  v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v5) = *a1;
  LODWORD(a1) = a1[1];
  v51 = *v1;
  v7 = sub_1C214E1A4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v9 = *((_QWORD *)v7 + 2);
  v8 = *((_QWORD *)v7 + 3);
  v10 = (char **)(v9 + 1);
  if (v9 < v8 >> 1)
    goto LABEL_2;
LABEL_45:
  v7 = sub_1C214E1A4((char *)(v8 > 1), (int64_t)v10, 1, v7);
LABEL_2:
  *((_QWORD *)v7 + 2) = v10;
  v7[v9 + 32] = 123;
  v56 = 0;
  v57 = 0;
  v58 = 256;
  v10 = &v59;
  v59 = v7;
  v60 = 256;
  v61 = v5;
  v62 = (char)a1;
  v11 = *(_QWORD *)(v51 + 64);
  v45 = v51 + 64;
  v12 = 1 << *(_BYTE *)(v51 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v46 = (unint64_t)(v12 + 63) >> 6;
  if ((_DWORD)a1)
    v15 = 256;
  else
    v15 = 0;
  v49 = v15 | v5;
  swift_bridgeObjectRetain();
  v9 = 0;
  v5 = 0;
  v48 = 0;
  v50 = 0;
  v8 = 1;
  if (v14)
  {
LABEL_8:
    v16 = __clz(__rbit64(v14));
    v17 = (v14 - 1) & v14;
    v18 = v16 | (v9 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    if (__OFADD__(v9++, 1))
      goto LABEL_43;
    if (v9 >= v46)
      goto LABEL_34;
    v20 = *(_QWORD *)(v45 + 8 * v9);
    if (!v20)
    {
      v21 = v9 + 1;
      if (v9 + 1 >= v46)
        goto LABEL_34;
      v20 = *(_QWORD *)(v45 + 8 * v21);
      if (!v20)
      {
        v21 = v9 + 2;
        if (v9 + 2 >= v46)
          goto LABEL_34;
        v20 = *(_QWORD *)(v45 + 8 * v21);
        if (!v20)
        {
          v21 = v9 + 3;
          if (v9 + 3 >= v46)
          {
LABEL_34:
            swift_release();
            v39 = v59;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v39 = sub_1C214E1A4(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
            v41 = *((_QWORD *)v39 + 2);
            v40 = *((_QWORD *)v39 + 3);
            if (v41 >= v40 >> 1)
              v39 = sub_1C214E1A4((char *)(v40 > 1), v41 + 1, 1, v39);
            *((_QWORD *)v39 + 2) = v41 + 1;
            v39[v41 + 32] = 125;
            v59 = v39;
            v60 = 44;
            v63 = v39;
            swift_bridgeObjectRetain();
            sub_1C217545C();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDD8);
            sub_1C20A8908();
            a1 = (unsigned __int8 *)sub_1C2175444();
            v43 = v42;
            result = swift_bridgeObjectRelease();
            if (!v43)
              goto LABEL_47;
            swift_bridgeObjectRelease();
            return (uint64_t)a1;
          }
          v20 = *(_QWORD *)(v45 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              v9 = v21 + 1;
              if (__OFADD__(v21, 1))
                break;
              if (v9 >= v46)
                goto LABEL_34;
              v20 = *(_QWORD *)(v45 + 8 * v9);
              ++v21;
              if (v20)
                goto LABEL_19;
            }
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
        }
      }
      v9 = v21;
    }
LABEL_19:
    v17 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_20:
    v22 = *(_QWORD *)(v51 + 48) + 16 * v18;
    a1 = *(unsigned __int8 **)v22;
    v23 = *(_QWORD *)(v22 + 8);
    v24 = (uint64_t *)(*(_QWORD *)(v51 + 56) + 24 * v18);
    v25 = *v24;
    v26 = v24[1];
    v27 = v24[2];
    if ((v8 & 1) != 0)
    {
      v5 = (uint64_t)",";
      v56 = ",";
      v57 = 1;
      v50 = 2;
      v58 = 2;
      swift_bridgeObjectRetain();
      sub_1C20A8008(v25, v26);
      swift_retain();
      v48 = 1;
    }
    else
    {
      v8 = v50;
      if ((v50 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      if (!v5)
        goto LABEL_42;
      swift_bridgeObjectRetain();
      sub_1C20A8008(v25, v26);
      swift_retain();
      sub_1C20A9EB4(v5, v48, v28);
    }
    sub_1C211E7B0((uint64_t)a1, v23);
    swift_bridgeObjectRelease();
    sub_1C20A9EB4((uint64_t)":", 1, v29);
    v54 = v25;
    v30 = v55;
    v31 = sub_1C21503F0(v49, v25, v26, v27);
    v55 = v30;
    if (v30)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v54, v26);
      swift_release();
      return (uint64_t)a1;
    }
    a1 = (unsigned __int8 *)v31;
    v33 = v32;
    v52 = v5;
    v53 = v17;
    v34 = v9;
    sub_1C217545C();
    result = sub_1C2175438();
    if (!v36)
      break;
    v37 = result;
    v38 = v36;
    sub_1C20A8058((uint64_t)a1, v33);
    sub_1C20AA79C(v37, v38);
    sub_1C20A8058(v54, v26);
    swift_release();
    v8 = 0;
    v9 = v34;
    v5 = v52;
    v14 = v53;
    if (v53)
      goto LABEL_8;
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1C20CD3E8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  __int128 v25;
  uint64_t inited;
  uint64_t v27;

  v3 = v1;
  result = sub_1C20B301C(123);
  if (!v2)
  {
    v6 = a1[5];
    v7 = __OFSUB__(v6, 1);
    v8 = v6 - 1;
    if (v7)
    {
      __break(1u);
      return result;
    }
    a1[5] = v8;
    if (v8 < 0)
    {
      sub_1C20AFA84();
      swift_allocError();
      *v13 = xmmword_1C2175DD0;
    }
    else
    {
      result = sub_1C20B3234();
      if ((result & 1) != 0)
        return result;
      v10 = a1[1];
      v9 = a1[2];
      if (v9 == v10)
      {
        v11 = 13;
      }
      else
      {
        v11 = 13;
        v14 = xmmword_1C2175DE0;
        do
        {
          v15 = *a1;
          while (1)
          {
            v16 = *(unsigned __int8 *)(v15 + v9);
            v17 = v16 > 0x20;
            v18 = (1 << v16) & 0x100002600;
            if (v17 || v18 == 0)
              break;
            a1[2] = ++v9;
            if (v10 == v9)
              goto LABEL_7;
          }
          if (v10 == v9)
            break;
          if (*(_BYTE *)(*a1 + v9) != 34 || (v25 = v14, v20 = sub_1C20B0E58(), !v21))
          {
            v11 = 5;
            break;
          }
          v22 = v21;
          v24 = (uint64_t)v20;
          sub_1C20B301C(58);
          type metadata accessor for Google_Protobuf_Value._StorageClass();
          inited = swift_initStaticObject();
          sub_1C214FDCC(a1);
          sub_1C20A8008(v25, *((unint64_t *)&v25 + 1));
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v27 = *v3;
          *v3 = 0x8000000000000000;
          sub_1C21735C0(v25, *((uint64_t *)&v25 + 1), inited, v24, v22, isUniquelyReferenced_nonNull_native);
          *v3 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((sub_1C20B3234() & 1) != 0)
          {
            sub_1C20A8058(v25, *((unint64_t *)&v25 + 1));
            return swift_release();
          }
          sub_1C20B301C(44);
          sub_1C20A8058(v25, *((unint64_t *)&v25 + 1));
          swift_release();
          v10 = a1[1];
          v9 = a1[2];
          v14 = v25;
          v11 = 13;
        }
        while (v9 != v10);
      }
LABEL_7:
      sub_1C20AFA84();
      swift_allocError();
      *v12 = 0;
      v12[1] = v11;
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C20CD6B8(unsigned __int8 *a1)
{
  return sub_1C20CCF1C(a1);
}

uint64_t sub_1C20CD6CC(uint64_t *a1)
{
  return sub_1C20CD3E8(a1);
}

double Google_Protobuf_Struct.init(fields:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  sub_1C21718C8(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_Struct.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *v3;
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = result;
    swift_bridgeObjectRetain();
    v8 = sub_1C20A9B30(v7, a2);
    if ((v9 & 1) != 0)
    {
      v10 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v8);
      v11 = *v10;
      v12 = v10[1];
      v13 = v10[2];
      *a3 = *v10;
      a3[1] = v12;
      a3[2] = v13;
      sub_1C20A8008(v11, v12);
      swift_retain();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  return result;
}

double sub_1C20CD7BC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *a2;
  v7 = a2[1];
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  Google_Protobuf_Struct.subscript.getter(v6, v7, (uint64_t *)&v10);
  swift_bridgeObjectRelease();
  sub_1C20A8058(v4, v5);
  v8 = v11;
  result = *(double *)&v10;
  *(_OWORD *)a3 = v10;
  *(_QWORD *)(a3 + 16) = v8;
  return result;
}

uint64_t sub_1C20CD858(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  swift_bridgeObjectRetain();
  sub_1C20C309C(v5, v6, v7);
  return sub_1C20B83A4(v5, v6, v7, v3, v4);
}

uint64_t Google_Protobuf_Struct.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11[3];

  v6 = a1[2];
  if (v6)
  {
    v8 = *a1;
    v7 = a1[1];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_1C21735C0(v8, v7, v6, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v11[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C20CDAFC(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_1C20B8490(v11[0], v11[1], v11[2]);
  }
}

void (*Google_Protobuf_Struct.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v7 = malloc(0x30uLL);
  *a1 = v7;
  v7[4] = a3;
  v7[5] = v3;
  v7[3] = a2;
  v8 = *v3;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v9 = sub_1C20A9B30(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *v7 = 0;
    v7[1] = 0;
    v7[2] = 0;
    return sub_1C20CDA50;
  }
  v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 24 * v9);
  v12 = *v11;
  v13 = v11[1];
  v14 = v11[2];
  *v7 = *v11;
  v7[1] = v13;
  v7[2] = v14;
  sub_1C20A8008(v12, v13);
  swift_retain();
  swift_bridgeObjectRelease();
  return sub_1C20CDA50;
}

void sub_1C20CDA50(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = (*a1)[4];
  v5 = **a1;
  v6 = (*a1)[1];
  v7 = (*a1)[2];
  swift_bridgeObjectRetain();
  v8 = v3[3];
  if ((a2 & 1) != 0)
  {
    sub_1C20C309C(v5, v6, v7);
    sub_1C20B83A4(v5, v6, v7, v8, v4);
    sub_1C20B8490(*v3, v3[1], v3[2]);
  }
  else
  {
    sub_1C20B83A4(v5, v6, v7, v3[3], v4);
  }
  free(v3);
}

uint64_t sub_1C20CDAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1C20A9B30(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C2174124();
      v12 = v15;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 24 * v8;
    v14 = *(_QWORD *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(_QWORD *)(a3 + 16) = v14;
    sub_1C20CDDA0(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  return result;
}

unint64_t sub_1C20CDBF8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C21756B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_QWORD *)(v11 + 8 * v6);
        result = sub_1C217581C();
        v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = (_QWORD *)(v11 + 8 * v3);
            if (v3 != v6 || v16 >= v12 + 1)
              *v16 = *v12;
            v17 = *(_QWORD *)(a2 + 56);
            v18 = v17 + 40 * v3;
            v19 = (__int128 *)(v17 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v18 >= (unint64_t)v19 + 40))
            {
              v9 = *v19;
              v10 = v19[1];
              *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
              *(_OWORD *)v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C20CDDA0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C21756B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C2175828();
        swift_bridgeObjectRetain();
        sub_1C21754C8();
        v10 = sub_1C2175870();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1C20CDF90()
{
  return 0;
}

uint64_t (*Google_Protobuf_FileDescriptorSet.file.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_FileDescriptorSet.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FileDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20D6F48(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

void (*Google_Protobuf_FileDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20CE08C;
}

void sub_1C20CE08C(uint64_t a1, char a2)
{
  sub_1C20D70A8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearName()()
{
  sub_1C20D7214((void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C20CE0C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E1318(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.package.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C20E1318(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileDescriptorProto.package.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 40))
  {
    v5 = *(_QWORD *)(v4 + 32);
    v6 = *(_QWORD *)(v4 + 40);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20CE2A0;
}

void sub_1C20CE2A0(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = (_QWORD *)swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C20E1318(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 32) = v3;
    *(_QWORD *)(v7 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v9 = (_QWORD *)swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E1318(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 32) = v3;
    *(_QWORD *)(v10 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasPackage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 40) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearPackage()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E1318(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.dependency.setter(uint64_t a1)
{
  return sub_1C20D0254(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

void (*Google_Protobuf_FileDescriptorProto.dependency.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain();
  return sub_1C20CE54C;
}

void sub_1C20CE54C(uint64_t a1, char a2)
{
  sub_1C20D0388(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t Google_Protobuf_FileDescriptorProto.publicDependency.setter(uint64_t a1)
{
  return sub_1C20D05E4(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

void (*Google_Protobuf_FileDescriptorProto.publicDependency.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 56);
  swift_bridgeObjectRetain();
  return sub_1C20CE5EC;
}

void sub_1C20CE5EC(uint64_t a1, char a2)
{
  sub_1C20D0718(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t Google_Protobuf_FileDescriptorProto.weakDependency.setter(uint64_t a1)
{
  return sub_1C20D0974(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

void (*Google_Protobuf_FileDescriptorProto.weakDependency.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  return sub_1C20CE68C;
}

void sub_1C20CE68C(uint64_t a1, char a2)
{
  sub_1C20D0AA8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t Google_Protobuf_FileDescriptorProto.messageType.setter(uint64_t a1)
{
  return sub_1C20D0D04(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

void (*Google_Protobuf_FileDescriptorProto.messageType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  return sub_1C20CE72C;
}

void sub_1C20CE72C(uint64_t a1, char a2)
{
  sub_1C20D0E38(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t Google_Protobuf_FileDescriptorProto.enumType.setter(uint64_t a1)
{
  return sub_1C20D620C(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

void (*Google_Protobuf_FileDescriptorProto.enumType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 80);
  swift_bridgeObjectRetain();
  return sub_1C20CE7CC;
}

void sub_1C20CE7CC(uint64_t a1, char a2)
{
  sub_1C20D6340(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t Google_Protobuf_FileDescriptorProto.service.setter(uint64_t a1)
{
  return sub_1C20D659C(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

void (*Google_Protobuf_FileDescriptorProto.service.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 88);
  swift_bridgeObjectRetain();
  return sub_1C20CE86C;
}

void sub_1C20CE86C(uint64_t a1, char a2)
{
  sub_1C20D66D0(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t Google_Protobuf_FileDescriptorProto.extension.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CE8C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E1318(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v5 + 96) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.extension.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v3 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E1318(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 96) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileDescriptorProto.extension.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 96);
  swift_bridgeObjectRetain();
  return sub_1C20CEA70;
}

void sub_1C20CEA70(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v5 = (_QWORD *)swift_retain();
      *(_QWORD *)(v4 + 16) = sub_1C20E1318(v5);
      swift_release();
    }
    v6 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v6 + 96) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[10];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v8 = (_QWORD *)swift_retain();
      *(_QWORD *)(v7 + 16) = sub_1C20E1318(v8);
      swift_release();
    }
    v9 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v9 + 96) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_FileDescriptorProto.options.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[13];
  v5 = v3[14];
  v6 = v3[15];
  v7 = v3[16];
  if (v6)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1C2175DE0;
    a1[2] = MEMORY[0x1E0DEE9E0];
    if (qword_1EF75CC08 != -1)
      swift_once();
    a1[3] = qword_1EF75DA78;
    swift_retain();
  }
  return sub_1C20EC0AC(v4, v5, v6);
}

uint64_t sub_1C20CEC78@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = *a1;
  v4 = a1[1];
  v5 = (_QWORD *)a1[2];
  swift_beginAccess();
  v7 = v5[13];
  v6 = v5[14];
  v8 = v5[15];
  v9 = v5[16];
  if (v8)
  {
    sub_1C20A8008(v3, v4);
    swift_retain();
    v10 = v9;
    v11 = v8;
    v15 = v6;
    v16 = v7;
  }
  else
  {
    v14 = v3;
    sub_1C20A8008(v3, v4);
    v12 = qword_1EF75CC08;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v10 = qword_1EF75DA78;
    swift_retain();
    v15 = 0xC000000000000000;
    v16 = 0;
    v11 = MEMORY[0x1E0DEE9E0];
    v3 = v14;
  }
  sub_1C20EC0AC(v7, v6, v8);
  sub_1C20A8058(v3, v4);
  result = swift_release();
  *a2 = v16;
  a2[1] = v15;
  a2[2] = v11;
  a2[3] = v10;
  return result;
}

uint64_t sub_1C20CEDA4(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[4];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v5[0] = *a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  sub_1C20A8008(v5[0], v1);
  swift_bridgeObjectRetain();
  swift_retain();
  return Google_Protobuf_FileDescriptorProto.options.setter(v5);
}

uint64_t Google_Protobuf_FileDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v6 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E1318(v6);
    swift_release();
  }
  v7 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v8 = v7[13];
  v9 = v7[14];
  v10 = v7[15];
  v7[13] = v2;
  v7[14] = v3;
  v7[15] = v4;
  v7[16] = v5;
  return sub_1C20EC0E4(v8, v9, v10);
}

uint64_t Google_Protobuf_FileOptions.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9E0];
  if (qword_1EF75CC08 != -1)
    swift_once();
  *(_QWORD *)(a1 + 24) = qword_1EF75DA78;
  return swift_retain();
}

void (*Google_Protobuf_FileDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[13];
  v6 = v4[14];
  v7 = v4[15];
  v8 = v4[16];
  if (v7)
  {
    *v3 = v5;
    v3[1] = v6;
    v3[2] = v7;
    v3[3] = v8;
  }
  else
  {
    *(_OWORD *)v3 = xmmword_1C2175DE0;
    v3[2] = MEMORY[0x1E0DEE9E0];
    if (qword_1EF75CC08 != -1)
      swift_once();
    v3[3] = qword_1EF75DA78;
    swift_retain();
  }
  sub_1C20EC0AC(v5, v6, v7);
  return sub_1C20CF000;
}

void sub_1C20CF000(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  if ((a2 & 1) != 0)
  {
    sub_1C20A8008(**a1, v3);
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[13];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v8 = (_QWORD *)swift_retain();
      *(_QWORD *)(v7 + 16) = sub_1C20E1318(v8);
      swift_release();
    }
    v9 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v10 = v9[13];
    v11 = v9[14];
    v12 = v9[15];
    v9[13] = v4;
    v9[14] = v3;
    v9[15] = v6;
    v9[16] = v5;
    sub_1C20EC0E4(v10, v11, v12);
    sub_1C20A8058(*v2, v2[1]);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = v2[13];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v14 = (_QWORD *)swift_retain();
      *(_QWORD *)(v13 + 16) = sub_1C20E1318(v14);
      swift_release();
    }
    v15 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v16 = v15[13];
    v17 = v15[14];
    v18 = v15[15];
    v15[13] = v4;
    v15[14] = v3;
    v15[15] = v6;
    v15[16] = v5;
    sub_1C20EC0E4(v16, v17, v18);
  }
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasOptions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 120) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearOptions()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E1318(v1);
    swift_release();
  }
  v2 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v3 = v2[13];
  v4 = v2[14];
  v5 = v2[15];
  *(_OWORD *)(v2 + 13) = 0u;
  *(_OWORD *)(v2 + 15) = 0u;
  sub_1C20EC0E4(v3, v4, v5);
}

uint64_t Google_Protobuf_FileDescriptorProto.sourceCodeInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[17];
  v5 = v3[18];
  v6 = v3[19];
  v7 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v7 = v3[17];
    v8 = v3[18];
  }
  else
  {
    v8 = 0;
  }
  v9 = 0xC000000000000000;
  if (v4)
    v9 = v3[19];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  return sub_1C20EC11C(v4, v5, v6);
}

uint64_t sub_1C20CF2E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)(a1 + 16);
  swift_beginAccess();
  v4 = v3[17];
  v5 = v3[18];
  v6 = v3[19];
  if (v4)
    v7 = v3[18];
  else
    v7 = 0;
  v8 = 0xC000000000000000;
  if (v4)
    v8 = v3[19];
  v9 = MEMORY[0x1E0DEE9D8];
  if (v4)
    v9 = v3[17];
  *a2 = v9;
  a2[1] = v7;
  a2[2] = v8;
  return sub_1C20EC11C(v4, v5, v6);
}

uint64_t sub_1C20CF34C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4[3];

  v1 = a1[1];
  v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v1, v2);
  return Google_Protobuf_FileDescriptorProto.sourceCodeInfo.setter(v4);
}

uint64_t Google_Protobuf_FileDescriptorProto.sourceCodeInfo.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E1318(v5);
    swift_release();
  }
  v6 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v7 = v6[17];
  v8 = v6[18];
  v9 = v6[19];
  v6[17] = v2;
  v6[18] = v3;
  v6[19] = v4;
  return sub_1C20EC150(v7, v8, v9);
}

double Google_Protobuf_SourceCodeInfo.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

void (*Google_Protobuf_FileDescriptorProto.sourceCodeInfo.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[17];
  v6 = v4[18];
  v7 = v4[19];
  v8 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v8 = v4[17];
    v9 = v4[18];
  }
  else
  {
    v9 = 0;
  }
  v10 = 0xC000000000000000;
  if (v5)
    v10 = v4[19];
  *v3 = v8;
  v3[1] = v9;
  v3[2] = v10;
  sub_1C20EC11C(v5, v6, v7);
  return sub_1C20CF4FC;
}

void sub_1C20CF4FC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = v2[12];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v7 = (_QWORD *)swift_retain();
      *(_QWORD *)(v6 + 16) = sub_1C20E1318(v7);
      swift_release();
    }
    v8 = *(_QWORD **)(v2[12] + 16);
    swift_beginAccess();
    v9 = v8[17];
    v10 = v8[18];
    v11 = v8[19];
    v8[17] = v4;
    v8[18] = v3;
    v8[19] = v5;
    sub_1C20EC150(v9, v10, v11);
    v12 = v2[1];
    v13 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v12, v13);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v14 = v2[12];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v15 = (_QWORD *)swift_retain();
      *(_QWORD *)(v14 + 16) = sub_1C20E1318(v15);
      swift_release();
    }
    v16 = *(_QWORD **)(v2[12] + 16);
    swift_beginAccess();
    v17 = v16[17];
    v18 = v16[18];
    v19 = v16[19];
    v16[17] = v4;
    v16[18] = v3;
    v16[19] = v5;
    sub_1C20EC150(v17, v18, v19);
  }
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasSourceCodeInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 136) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearSourceCodeInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E1318(v1);
    swift_release();
  }
  v2 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v3 = v2[17];
  v4 = v2[18];
  v5 = v2[19];
  v2[18] = 0;
  v2[19] = 0;
  v2[17] = 0;
  sub_1C20EC150(v3, v4, v5);
}

uint64_t Google_Protobuf_FileDescriptorProto.syntax.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 168))
    v2 = *(_QWORD *)(v1 + 160);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20CF7BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 168))
  {
    v4 = *(_QWORD *)(v3 + 160);
    v5 = *(_QWORD *)(v3 + 168);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CF828(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E1318(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 160) = v4;
  *(_QWORD *)(v6 + 168) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.syntax.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = (_QWORD *)swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C20E1318(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 160) = a1;
  *(_QWORD *)(v6 + 168) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileDescriptorProto.syntax.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 168))
  {
    v5 = *(_QWORD *)(v4 + 160);
    v6 = *(_QWORD *)(v4 + 168);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20CFA08;
}

void sub_1C20CFA08(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = (_QWORD *)swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C20E1318(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 160) = v3;
    *(_QWORD *)(v7 + 168) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      v9 = (_QWORD *)swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E1318(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 160) = v3;
    *(_QWORD *)(v10 + 168) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasSyntax.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 168) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearSyntax()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = (_QWORD *)swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E1318(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 160) = 0;
  *(_QWORD *)(v2 + 168) = 0;
  swift_bridgeObjectRelease();
}

uint64_t (*Google_Protobuf_FileDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FileDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CB58, &qword_1EF75D860, a1);
}

uint64_t Google_Protobuf_DescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20D6F48(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

void (*Google_Protobuf_DescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20CFD04;
}

void sub_1C20CFD04(uint64_t a1, char a2)
{
  sub_1C20D70A8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

BOOL Google_Protobuf_DescriptorProto.hasName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 24) != 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.clearName()()
{
  sub_1C20D7214((void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t Google_Protobuf_DescriptorProto.field.setter(uint64_t a1)
{
  return sub_1C20D7390(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

void (*Google_Protobuf_DescriptorProto.field.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C20CFE00;
}

void sub_1C20CFE00(uint64_t a1, char a2)
{
  sub_1C20D74C4(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t Google_Protobuf_DescriptorProto.extension.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20CFE58(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E2FA4(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v5 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.extension.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E2FA4(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.extension.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C20D0004;
}

void sub_1C20D0004(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      *(_QWORD *)(v4 + 16) = sub_1C20E2FA4(v5);
      swift_release();
    }
    v6 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v6 + 40) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      *(_QWORD *)(v7 + 16) = sub_1C20E2FA4(v8);
      swift_release();
    }
    v9 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v9 + 40) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV10dependencySaySSGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D0188(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 48) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.nestedType.setter(uint64_t a1)
{
  return sub_1C20D0254(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C20D0254(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.nestedType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain();
  return sub_1C20D0370;
}

void sub_1C20D0370(uint64_t a1, char a2)
{
  sub_1C20D0388(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

void sub_1C20D0388(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 48) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 48) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV16publicDependencySays5Int32VGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D0518(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 56) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.enumType.setter(uint64_t a1)
{
  return sub_1C20D05E4(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C20D05E4(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 56) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.enumType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 56);
  swift_bridgeObjectRetain();
  return sub_1C20D0700;
}

void sub_1C20D0700(uint64_t a1, char a2)
{
  sub_1C20D0718(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

void sub_1C20D0718(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 56) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 56) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV14weakDependencySays5Int32VGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D08A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 64) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.extensionRange.setter(uint64_t a1)
{
  return sub_1C20D0974(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C20D0974(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 64) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.extensionRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 64);
  swift_bridgeObjectRetain();
  return sub_1C20D0A90;
}

void sub_1C20D0A90(uint64_t a1, char a2)
{
  sub_1C20D0AA8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

void sub_1C20D0AA8(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 64) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 64) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV11messageTypeSayAA0d1_c1_fG0VGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D0C38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 72) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.oneofDecl.setter(uint64_t a1)
{
  return sub_1C20D0D04(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C20D0D04(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 72) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.oneofDecl.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain();
  return sub_1C20D0E20;
}

void sub_1C20D0E20(uint64_t a1, char a2)
{
  sub_1C20D0E38(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

void sub_1C20D0E38(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 72) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 72) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t Google_Protobuf_DescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  char v15;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 88);
  v6 = *(_QWORD *)(v3 + 96);
  v7 = *(_DWORD *)(v3 + 112);
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = 0xC000000000000000;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = v7 >> 8;
  v12 = HIWORD(v7);
  if (v4)
  {
    v10 = *(_QWORD *)(v3 + 80);
    v13 = *(_QWORD *)(v3 + 88);
  }
  else
  {
    v13 = 0;
  }
  if (v4)
  {
    v9 = *(_QWORD *)(v3 + 96);
    v8 = *(_QWORD *)(v3 + 104);
    v14 = *(_DWORD *)(v3 + 112);
  }
  else
  {
    v14 = 2;
  }
  if (v4)
  {
    v15 = HIBYTE(*(_DWORD *)(v3 + 112));
  }
  else
  {
    LOBYTE(v11) = 2;
    LOBYTE(v12) = 2;
    v15 = 2;
  }
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v13;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 33) = v11;
  *(_BYTE *)(a1 + 34) = v12;
  *(_BYTE *)(a1 + 35) = v15;
  return sub_1C20EC1A4(v4, v5, v6);
}

double sub_1C20D1034@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  int v7;

  Google_Protobuf_DescriptorProto.options.getter((uint64_t)&v4);
  v2 = v6;
  *(_QWORD *)a1 = v4;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 24) = v2;
  *(_DWORD *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_1C20D1094(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5[4];
  int v6;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5[0] = *(_QWORD *)a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  v6 = *(_DWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v1, v2);
  swift_bridgeObjectRetain();
  return Google_Protobuf_DescriptorProto.options.setter(v5);
}

uint64_t Google_Protobuf_DescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *((_DWORD *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E2FA4(v7);
    swift_release();
  }
  v8 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 88);
  v11 = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v8 + 80) = v2;
  *(_QWORD *)(v8 + 88) = v3;
  *(_QWORD *)(v8 + 96) = v4;
  *(_QWORD *)(v8 + 104) = v5;
  *(_DWORD *)(v8 + 112) = v6;
  return sub_1C20EC1EC(v9, v10, v11);
}

double Google_Protobuf_MessageOptions.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(a1 + 32) = 33686018;
  return result;
}

void (*Google_Protobuf_DescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 88);
  v7 = *(_QWORD *)(v4 + 96);
  v8 = *(_DWORD *)(v4 + 112);
  v9 = MEMORY[0x1E0DEE9E0];
  v10 = 0xC000000000000000;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = v8 >> 8;
  v13 = HIWORD(v8);
  if (v5)
  {
    v11 = *(_QWORD *)(v4 + 80);
    v14 = *(_QWORD *)(v4 + 88);
  }
  else
  {
    v14 = 0;
  }
  if (v5)
  {
    v10 = *(_QWORD *)(v4 + 96);
    v9 = *(_QWORD *)(v4 + 104);
    v15 = *(_DWORD *)(v4 + 112);
  }
  else
  {
    v15 = 2;
  }
  if (v5)
  {
    v16 = HIBYTE(*(_DWORD *)(v4 + 112));
  }
  else
  {
    LOBYTE(v12) = 2;
    LOBYTE(v13) = 2;
    v16 = 2;
  }
  *v3 = v11;
  v3[1] = v14;
  v3[2] = v10;
  v3[3] = v9;
  *((_BYTE *)v3 + 32) = v15;
  *((_BYTE *)v3 + 33) = v12;
  *((_BYTE *)v3 + 34) = v13;
  *((_BYTE *)v3 + 35) = v16;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D12C0;
}

void sub_1C20D12C0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  v7 = *((_DWORD *)*a1 + 8);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[14];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E2FA4(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v11 = *(_QWORD *)(v10 + 80);
    v12 = *(_QWORD *)(v10 + 88);
    v13 = *(_QWORD *)(v10 + 96);
    *(_QWORD *)(v10 + 80) = v4;
    *(_QWORD *)(v10 + 88) = v3;
    *(_QWORD *)(v10 + 96) = v6;
    *(_QWORD *)(v10 + 104) = v5;
    *(_DWORD *)(v10 + 112) = v7;
    sub_1C20EC1EC(v11, v12, v13);
    v14 = v2[1];
    v15 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v14, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v16 = v2[14];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v17 = swift_retain();
      *(_QWORD *)(v16 + 16) = sub_1C20E2FA4(v17);
      swift_release();
    }
    v18 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v19 = *(_QWORD *)(v18 + 80);
    v20 = *(_QWORD *)(v18 + 88);
    v21 = *(_QWORD *)(v18 + 96);
    *(_QWORD *)(v18 + 80) = v4;
    *(_QWORD *)(v18 + 88) = v3;
    *(_QWORD *)(v18 + 96) = v6;
    *(_QWORD *)(v18 + 104) = v5;
    *(_DWORD *)(v18 + 112) = v7;
    sub_1C20EC1EC(v19, v20, v21);
  }
  free(v2);
}

BOOL Google_Protobuf_DescriptorProto.hasOptions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 80) != 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.clearOptions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E2FA4(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 88);
  v5 = *(_QWORD *)(v2 + 96);
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 112) = 0;
  sub_1C20EC1EC(v3, v4, v5);
}

uint64_t Google_Protobuf_DescriptorProto.reservedRange.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D1590(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E2FA4(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v5 + 120) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.reservedRange.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E2FA4(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 120) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.reservedRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 120);
  swift_bridgeObjectRetain();
  return sub_1C20D173C;
}

void sub_1C20D173C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      *(_QWORD *)(v4 + 16) = sub_1C20E2FA4(v5);
      swift_release();
    }
    v6 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v6 + 120) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      *(_QWORD *)(v7 + 16) = sub_1C20E2FA4(v8);
      swift_release();
    }
    v9 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v9 + 120) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_DescriptorProto.reservedName.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D18BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E2FA4(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v5 + 128) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.reservedName.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E2FA4(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 128) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.reservedName.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 128);
  swift_bridgeObjectRetain();
  return sub_1C20D1A68;
}

void sub_1C20D1A68(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      *(_QWORD *)(v4 + 16) = sub_1C20E2FA4(v5);
      swift_release();
    }
    v6 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v6 + 128) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      *(_QWORD *)(v7 + 16) = sub_1C20E2FA4(v8);
      swift_release();
    }
    v9 = *(_QWORD *)(v2[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v9 + 128) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_DescriptorProto.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_DescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.start.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 20))
    return 0;
  else
    return *(unsigned int *)(v1 + 16);
}

uint64_t sub_1C20D1C10(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E4A70(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 20) = 0;
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.start.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E4A70(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 20) = 0;
  return result;
}

void (*Google_Protobuf_DescriptorProto.ExtensionRange.start.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_DWORD *)(v4 + 16);
  if (*(_BYTE *)(v4 + 20))
    v5 = 0;
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C20D1DB0;
}

void sub_1C20D1DB0(uint64_t a1, char a2)
{
  _QWORD *v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 16) = sub_1C20E4A70(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v8 + 16) = v4;
  *(_BYTE *)(v8 + 20) = 0;
  free(v3);
}

BOOL Google_Protobuf_DescriptorProto.ExtensionRange.hasStart.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 20) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ExtensionRange.clearStart()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E4A70(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_DWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 20) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.end.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 28))
    return 0;
  else
    return *(unsigned int *)(v1 + 24);
}

uint64_t sub_1C20D1F98(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E4A70(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 28) = 0;
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.end.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E4A70(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v4 + 24) = a1;
  *(_BYTE *)(v4 + 28) = 0;
  return result;
}

void (*Google_Protobuf_DescriptorProto.ExtensionRange.end.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_DWORD *)(v4 + 24);
  if (*(_BYTE *)(v4 + 28))
    v5 = 0;
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C20D2138;
}

void sub_1C20D2138(uint64_t a1, char a2)
{
  _QWORD *v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 16) = sub_1C20E4A70(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v8 + 24) = v4;
  *(_BYTE *)(v8 + 28) = 0;
  free(v3);
}

BOOL Google_Protobuf_DescriptorProto.ExtensionRange.hasEnd.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 28) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ExtensionRange.clearEnd()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E4A70(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_DWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 28) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E4A70(v6);
    swift_release();
  }
  v7 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v8 = v7[4];
  v9 = v7[5];
  v10 = v7[6];
  v7[4] = v2;
  v7[5] = v3;
  v7[6] = v4;
  v7[7] = v5;
  return sub_1C20EC1EC(v8, v9, v10);
}

void (*Google_Protobuf_DescriptorProto.ExtensionRange.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[4];
  v6 = v4[5];
  v7 = v4[6];
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = 0xC000000000000000;
  v10 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v10 = v4[4];
    v11 = v4[5];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
  {
    v9 = v4[6];
    v8 = v4[7];
  }
  *v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D242C;
}

void sub_1C20D242C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[13];
      type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      *(_QWORD *)(v7 + 16) = sub_1C20E4A70(v8);
      swift_release();
    }
    v9 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v10 = v9[4];
    v11 = v9[5];
    v12 = v9[6];
    v9[4] = v4;
    v9[5] = v3;
    v9[6] = v6;
    v9[7] = v5;
    sub_1C20EC1EC(v10, v11, v12);
    v13 = v2[1];
    v14 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v15 = v2[13];
      type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
      swift_allocObject();
      v16 = swift_retain();
      *(_QWORD *)(v15 + 16) = sub_1C20E4A70(v16);
      swift_release();
    }
    v17 = *(_QWORD **)(v2[13] + 16);
    swift_beginAccess();
    v18 = v17[4];
    v19 = v17[5];
    v20 = v17[6];
    v17[4] = v4;
    v17[5] = v3;
    v17[6] = v6;
    v17[7] = v5;
    sub_1C20EC1EC(v18, v19, v20);
  }
  free(v2);
}

BOOL Google_Protobuf_DescriptorProto.ExtensionRange.hasOptions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 32) != 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ExtensionRange.clearOptions()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E4A70(v1);
    swift_release();
  }
  v2 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v3 = v2[4];
  v4 = v2[5];
  v5 = v2[6];
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  sub_1C20EC1EC(v3, v4, v5);
}

uint64_t (*Google_Protobuf_DescriptorProto.ExtensionRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20D9764((void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass, a1);
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.start.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 20))
    return 0;
  else
    return *(unsigned int *)(v0 + 16);
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.start.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 20) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_DescriptorProto.ReservedRange.start.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_DWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + 20))
    v2 = 0;
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C20D2710;
}

uint64_t *sub_1C20D2710(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_DWORD *)(v1 + 16) = *((_DWORD *)result + 2);
  *(_BYTE *)(v1 + 20) = 0;
  return result;
}

BOOL Google_Protobuf_DescriptorProto.ReservedRange.hasStart.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 20) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ReservedRange.clearStart()()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 20) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.end.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 28))
    return 0;
  else
    return *(unsigned int *)(v0 + 24);
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.end.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_DescriptorProto.ReservedRange.end.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_DWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 28))
    v2 = 0;
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C20D278C;
}

uint64_t *sub_1C20D278C(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_DWORD *)(v1 + 24) = *((_DWORD *)result + 2);
  *(_BYTE *)(v1 + 28) = 0;
  return result;
}

BOOL Google_Protobuf_DescriptorProto.ReservedRange.hasEnd.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 28) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ReservedRange.clearEnd()()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 28) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_DescriptorProto.ReservedRange.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_DescriptorProto.ReservedRange.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CB68, &qword_1EF75D888, a1);
}

uint64_t (*Google_Protobuf_ExtensionRangeOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_ExtensionRangeOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_ExtensionRangeOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t (*sub_1C20D2854())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FieldDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20D6F48(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

void (*Google_Protobuf_FieldDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D290C;
}

void sub_1C20D290C(uint64_t a1, char a2)
{
  sub_1C20D70A8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearName()()
{
  sub_1C20D7214((void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

uint64_t Google_Protobuf_FieldDescriptorProto.number.setter(int a1)
{
  return sub_1C20D6A94(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

void (*Google_Protobuf_FieldDescriptorProto.number.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_DWORD *)(v4 + 32);
  if (*(_BYTE *)(v4 + 36))
    v5 = 0;
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C20D29C8;
}

void sub_1C20D29C8(uint64_t a1, char a2)
{
  sub_1C20D6BC8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 36) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearNumber()()
{
  sub_1C20D6CB4((void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

uint64_t Google_Protobuf_FieldDescriptorProto.label.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 37);
  if (v5 == 3)
    LOBYTE(v5) = 0;
  *a1 = v5;
  return result;
}

uint64_t sub_1C20D2A88(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 37) = v3;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.label.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E5C04(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 37) = v2;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.label.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(unsigned __int8 *)(v4 + 37);
  if (v5 == 3)
    LOBYTE(v5) = 0;
  *((_BYTE *)v3 + 80) = v5;
  return sub_1C20D2C1C;
}

void sub_1C20D2C1C(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 16) = sub_1C20E5C04(v7);
    swift_release();
  }
LABEL_4:
  v8 = (_BYTE *)(*(_QWORD *)(v3[9] + 16) + 37);
  swift_beginAccess();
  *v8 = v4;
  free(v3);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 37) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearLabel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_BYTE *)(v2 + 37) = 3;
}

uint64_t Google_Protobuf_FieldDescriptorProto.type.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 38);
  if (v5 == 18)
    LOBYTE(v5) = 0;
  *a1 = v5;
  return result;
}

uint64_t sub_1C20D2E04(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 38) = v3;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.type.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E5C04(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 38) = v2;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.type.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(unsigned __int8 *)(v4 + 38);
  if (v5 == 18)
    LOBYTE(v5) = 0;
  *((_BYTE *)v3 + 80) = v5;
  return sub_1C20D2F98;
}

void sub_1C20D2F98(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 16) = sub_1C20E5C04(v7);
    swift_release();
  }
LABEL_4:
  v8 = (_BYTE *)(*(_QWORD *)(v3[9] + 16) + 38);
  swift_beginAccess();
  *v8 = v4;
  free(v3);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 38) != 18;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_BYTE *)(v2 + 38) = 18;
}

uint64_t Google_Protobuf_FieldDescriptorProto.typeName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 48))
    v2 = *(_QWORD *)(v1 + 40);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D3198@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 48))
  {
    v4 = *(_QWORD *)(v3 + 40);
    v5 = *(_QWORD *)(v3 + 48);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D3204(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.typeName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.typeName.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 48))
  {
    v5 = *(_QWORD *)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 48);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D33E4;
}

void sub_1C20D33E4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C20E5C04(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 40) = v3;
    *(_QWORD *)(v7 + 48) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E5C04(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 40) = v3;
    *(_QWORD *)(v10 + 48) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasTypeName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 48) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearTypeName()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.extendee.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 64))
    v2 = *(_QWORD *)(v1 + 56);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D366C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 64))
  {
    v4 = *(_QWORD *)(v3 + 56);
    v5 = *(_QWORD *)(v3 + 64);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D36D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.extendee.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.extendee.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 64))
  {
    v5 = *(_QWORD *)(v4 + 56);
    v6 = *(_QWORD *)(v4 + 64);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D38B8;
}

void sub_1C20D38B8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C20E5C04(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 56) = v3;
    *(_QWORD *)(v7 + 64) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E5C04(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 56) = v3;
    *(_QWORD *)(v10 + 64) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasExtendee.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearExtendee()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.defaultValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 80))
    v2 = *(_QWORD *)(v1 + 72);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D3B40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 80))
  {
    v4 = *(_QWORD *)(v3 + 72);
    v5 = *(_QWORD *)(v3 + 80);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D3BAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 80) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 72) = a1;
  *(_QWORD *)(v6 + 80) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.defaultValue.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 80))
  {
    v5 = *(_QWORD *)(v4 + 72);
    v6 = *(_QWORD *)(v4 + 80);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D3D8C;
}

void sub_1C20D3D8C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C20E5C04(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 72) = v3;
    *(_QWORD *)(v7 + 80) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E5C04(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 72) = v3;
    *(_QWORD *)(v10 + 80) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasDefaultValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 80) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearDefaultValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.oneofIndex.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 92))
    return 0;
  else
    return *(unsigned int *)(v1 + 88);
}

uint64_t sub_1C20D3FF8(int *a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v5 + 88) = v3;
  *(_BYTE *)(v5 + 92) = 0;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.oneofIndex.setter(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E5C04(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v4 + 88) = a1;
  *(_BYTE *)(v4 + 92) = 0;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.oneofIndex.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_DWORD *)(v4 + 88);
  if (*(_BYTE *)(v4 + 92))
    v5 = 0;
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C20D4198;
}

void sub_1C20D4198(uint64_t a1, char a2)
{
  _QWORD *v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 16) = sub_1C20E5C04(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v8 + 88) = v4;
  *(_BYTE *)(v8 + 92) = 0;
  free(v3);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasOneofIndex.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return (*(_BYTE *)(v1 + 92) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearOneofIndex()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_DWORD *)(v2 + 88) = 0;
  *(_BYTE *)(v2 + 92) = 1;
}

uint64_t Google_Protobuf_FieldDescriptorProto.jsonName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 104))
    v2 = *(_QWORD *)(v1 + 96);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D439C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 104))
  {
    v4 = *(_QWORD *)(v3 + 96);
    v5 = *(_QWORD *)(v3 + 104);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D4408(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 96) = v4;
  *(_QWORD *)(v6 + 104) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.jsonName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 16) = sub_1C20E5C04(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v6 + 96) = a1;
  *(_QWORD *)(v6 + 104) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.jsonName.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 104))
  {
    v5 = *(_QWORD *)(v4 + 96);
    v6 = *(_QWORD *)(v4 + 104);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D45E8;
}

void sub_1C20D45E8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 16) = sub_1C20E5C04(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v7 + 96) = v3;
    *(_QWORD *)(v7 + 104) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 16) = sub_1C20E5C04(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v10 + 96) = v3;
    *(_QWORD *)(v10 + 104) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasJsonName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 104) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearJsonName()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int16x8_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int8x16_t v8;
  uint64x2_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 112);
  v6 = *(_QWORD *)(v3 + 120);
  v7 = *(_QWORD *)(v3 + 128);
  if (v5)
  {
    v8.i64[0] = 0xFFFFFFFFFFFFLL;
    v8.i64[1] = 0xFFFFFFFFFFFFLL;
    v9 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(*(unsigned int *)(v3 + 144) | ((unint64_t)*(unsigned __int16 *)(v3 + 148) << 32)), v8);
    v10 = HIBYTE(*(_WORD *)(v3 + 148));
    v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v9, (uint64x2_t)xmmword_1C2177150), (int32x4_t)vshlq_u64(v9, (uint64x2_t)xmmword_1C2177140));
    v11 = *(_QWORD *)(v3 + 112);
    *(int16x4_t *)v4.i8 = vmovn_s32((int32x4_t)v4);
    v12 = *(_QWORD *)(v3 + 120);
    v13 = *(_QWORD *)(v3 + 128);
    v14 = *(_QWORD *)(v3 + 136);
    v15 = *(_DWORD *)(v3 + 144);
  }
  else
  {
    v12 = 0;
    v4.i64[0] = 0x2000200030002;
    v10 = 2;
    v15 = 3;
    v14 = MEMORY[0x1E0DEE9E0];
    v13 = 0xC000000000000000;
    v11 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 24) = v14;
  *(_BYTE *)(a1 + 32) = v15;
  *(_DWORD *)(a1 + 33) = vmovn_s16(v4).u32[0];
  *(_BYTE *)(a1 + 37) = v10;
  return sub_1C20EC1A4(v5, v6, v7);
}

double sub_1C20D48EC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int16 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  int v8;
  __int16 v9;

  Google_Protobuf_FieldDescriptorProto.options.getter((uint64_t)&v5);
  v2 = v7;
  v3 = v9;
  *(_QWORD *)a1 = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 24) = v2;
  *(_DWORD *)(a1 + 32) = v8;
  *(_WORD *)(a1 + 36) = v3;
  return result;
}

uint64_t sub_1C20D4954(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v6[4];
  int v7;
  __int16 v8;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_WORD *)(a1 + 36);
  v6[0] = *(_QWORD *)a1;
  v6[1] = v1;
  v6[2] = v2;
  v6[3] = v3;
  v7 = *(_DWORD *)(a1 + 32);
  v8 = v4;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v1, v2);
  swift_bridgeObjectRetain();
  return Google_Protobuf_FieldDescriptorProto.options.setter(v6);
}

uint64_t Google_Protobuf_FieldDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *((_DWORD *)a1 + 8);
  v7 = *((unsigned __int8 *)a1 + 36);
  v8 = *((unsigned __int8 *)a1 + 37);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v9 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E5C04(v9);
    swift_release();
  }
  v10 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 112);
  v12 = *(_QWORD *)(v10 + 120);
  v13 = *(_QWORD *)(v10 + 128);
  *(_QWORD *)(v10 + 112) = v2;
  *(_QWORD *)(v10 + 120) = v3;
  *(_QWORD *)(v10 + 128) = v4;
  *(_QWORD *)(v10 + 136) = v5;
  *(_DWORD *)(v10 + 144) = v6;
  *(_WORD *)(v10 + 148) = ((v8 << 40) | (unint64_t)(v7 << 32)) >> 32;
  return sub_1C20EC1EC(v11, v12, v13);
}

double Google_Protobuf_FieldOptions.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&result = 33751555;
  *(_DWORD *)(a1 + 32) = 33751555;
  *(_WORD *)(a1 + 36) = 514;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  int16x8_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int8x16_t v9;
  uint64x2_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;

  v3 = (char *)malloc(0x78uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 14) = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 112);
  v7 = *(_QWORD *)(v4 + 120);
  v8 = *(_QWORD *)(v4 + 128);
  if (v6)
  {
    v9.i64[0] = 0xFFFFFFFFFFFFLL;
    v9.i64[1] = 0xFFFFFFFFFFFFLL;
    v10 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(*(unsigned int *)(v4 + 144) | ((unint64_t)*(unsigned __int16 *)(v4 + 148) << 32)), v9);
    v11 = HIBYTE(*(_WORD *)(v4 + 148));
    v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1C2177150), (int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1C2177140));
    v12 = *(_QWORD *)(v4 + 112);
    *(int16x4_t *)v5.i8 = vmovn_s32((int32x4_t)v5);
    v13 = *(_QWORD *)(v4 + 120);
    v14 = *(_QWORD *)(v4 + 128);
    v15 = *(_QWORD *)(v4 + 136);
    v16 = *(_DWORD *)(v4 + 144);
  }
  else
  {
    v13 = 0;
    v5.i64[0] = 0x2000200030002;
    v11 = 2;
    v16 = 3;
    v15 = MEMORY[0x1E0DEE9E0];
    v14 = 0xC000000000000000;
    v12 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)v3 = v12;
  *((_QWORD *)v3 + 1) = v13;
  *((_QWORD *)v3 + 2) = v14;
  *((_QWORD *)v3 + 3) = v15;
  v3[32] = v16;
  *(_DWORD *)(v3 + 33) = vmovn_s16(v5).u32[0];
  v3[37] = v11;
  sub_1C20EC1A4(v6, v7, v8);
  return sub_1C20D4BF8;
}

void sub_1C20D4BF8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  v7 = *((_DWORD *)*a1 + 8);
  v8 = *((unsigned __int8 *)*a1 + 36);
  v9 = *((unsigned __int8 *)*a1 + 37);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v24 = v8;
      v10 = v2[14];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + 16) = sub_1C20E5C04(v11);
      v8 = v24;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 112);
    v14 = *(_QWORD *)(v12 + 120);
    v15 = *(_QWORD *)(v12 + 128);
    *(_QWORD *)(v12 + 112) = v4;
    *(_QWORD *)(v12 + 120) = v3;
    *(_QWORD *)(v12 + 128) = v6;
    *(_QWORD *)(v12 + 136) = v5;
    *(_DWORD *)(v12 + 144) = v7;
    *(_WORD *)(v12 + 148) = ((v9 << 40) | (unint64_t)(v8 << 32)) >> 32;
    sub_1C20EC1EC(v13, v14, v15);
    v16 = v2[1];
    v17 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v16, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v25 = v8;
      v18 = v2[14];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      v19 = swift_retain();
      *(_QWORD *)(v18 + 16) = sub_1C20E5C04(v19);
      v8 = v25;
      swift_release();
    }
    v20 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v21 = *(_QWORD *)(v20 + 112);
    v22 = *(_QWORD *)(v20 + 120);
    v23 = *(_QWORD *)(v20 + 128);
    *(_QWORD *)(v20 + 112) = v4;
    *(_QWORD *)(v20 + 120) = v3;
    *(_QWORD *)(v20 + 128) = v6;
    *(_QWORD *)(v20 + 136) = v5;
    *(_DWORD *)(v20 + 144) = v7;
    *(_WORD *)(v20 + 148) = ((v9 << 40) | (unint64_t)(v8 << 32)) >> 32;
    sub_1C20EC1EC(v21, v22, v23);
  }
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasOptions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 112) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearOptions()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E5C04(v1);
    swift_release();
  }
  v2 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v3 = v2[14];
  v4 = v2[15];
  v5 = v2[16];
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *(_QWORD *)((char *)v2 + 142) = 0;
  sub_1C20EC1EC(v3, v4, v5);
}

uint64_t (*Google_Protobuf_FieldDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum __swiftcall Google_Protobuf_FieldDescriptorProto.TypeEnum.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum result;

  *v0 = 0;
  return result;
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum_optional __swiftcall Google_Protobuf_FieldDescriptorProto.TypeEnum.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 0x12)
    v2 = 18;
  *v1 = v2;
  return (SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum_optional)rawValue;
}

void sub_1C20D4F9C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum_optional sub_1C20D4FA8(Swift::Int *a1)
{
  return Google_Protobuf_FieldDescriptorProto.TypeEnum.init(rawValue:)(*a1);
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::Label __swiftcall Google_Protobuf_FieldDescriptorProto.Label.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::Label result;

  *v0 = 0;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CBA0, &qword_1EF75D930, a1);
}

void *static Google_Protobuf_FieldDescriptorProto.TypeEnum.allCases.getter()
{
  return &unk_1E7BD83E0;
}

void sub_1C20D4FE4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7BD83E0;
}

void *static Google_Protobuf_FieldDescriptorProto.Label.allCases.getter()
{
  return &unk_1E7BD8418;
}

void sub_1C20D5000(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7BD8440;
}

uint64_t Google_Protobuf_OneofDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v5 = *(_QWORD **)(v2 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 48) = 0u;
    *(_OWORD *)(v6 + 32) = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
    swift_beginAccess();
    v8 = v5[2];
    v7 = v5[3];
    swift_beginAccess();
    *(_QWORD *)(v6 + 16) = v8;
    *(_QWORD *)(v6 + 24) = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v9 = v5[4];
    v10 = v5[5];
    v11 = v5[6];
    v12 = v5[7];
    sub_1C20EC1A4(v9, v10, v11);
    swift_release();
    swift_beginAccess();
    v13 = *(_QWORD *)(v6 + 32);
    v14 = *(_QWORD *)(v6 + 40);
    v15 = *(_QWORD *)(v6 + 48);
    *(_QWORD *)(v6 + 32) = v9;
    *(_QWORD *)(v6 + 40) = v10;
    *(_QWORD *)(v6 + 48) = v11;
    *(_QWORD *)(v6 + 56) = v12;
    sub_1C20EC1EC(v13, v14, v15);
    *(_QWORD *)(v2 + 16) = v6;
    swift_release();
  }
  v16 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_OneofDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[3] = v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D5210;
}

void sub_1C20D5210(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    Google_Protobuf_OneofDescriptorProto.name.setter(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    Google_Protobuf_OneofDescriptorProto.name.setter(*(_QWORD *)(*(_QWORD *)a1 + 24), v4);
  }
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_OneofDescriptorProto.clearName()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v1 = *(_QWORD **)(v0 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_beginAccess();
    v4 = v1[2];
    v3 = v1[3];
    swift_beginAccess();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v5 = v1[4];
    v6 = v1[5];
    v7 = v1[6];
    v8 = v1[7];
    sub_1C20EC1A4(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    v9 = *(_QWORD *)(v2 + 32);
    v10 = *(_QWORD *)(v2 + 40);
    v11 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v2 + 32) = v5;
    *(_QWORD *)(v2 + 40) = v6;
    *(_QWORD *)(v2 + 48) = v7;
    *(_QWORD *)(v2 + 56) = v8;
    sub_1C20EC1EC(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = v2;
    swift_release();
  }
  v12 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf07Google_C16_DescriptorProtoV14ExtensionRangeV7optionsAA0d1_c1_gH7OptionsVvg_0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v4 = v3[4];
  v5 = v3[5];
  v6 = v3[6];
  v7 = MEMORY[0x1E0DEE9E0];
  v8 = 0xC000000000000000;
  v9 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v9 = v3[4];
    v10 = v3[5];
  }
  else
  {
    v10 = 0;
  }
  if (v4)
  {
    v8 = v3[6];
    v7 = v3[7];
  }
  *a1 = v9;
  a1[1] = v10;
  a1[2] = v8;
  a1[3] = v7;
  return sub_1C20EC1A4(v4, v5, v6);
}

uint64_t sub_1C20D5450@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD **)(a1 + 16);
  swift_beginAccess();
  v4 = v3[4];
  v5 = v3[5];
  v6 = v3[6];
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = 0xC000000000000000;
  v9 = MEMORY[0x1E0DEE9E0];
  if (v4)
  {
    v9 = v3[7];
    v10 = v3[5];
  }
  else
  {
    v10 = 0;
  }
  if (v4)
  {
    v8 = v3[6];
    v7 = v3[4];
  }
  *a2 = v7;
  a2[1] = v10;
  a2[2] = v8;
  a2[3] = v9;
  return sub_1C20EC1A4(v4, v5, v6);
}

uint64_t sub_1C20D54C8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v10[0] = *a1;
  v10[1] = v6;
  v10[2] = v7;
  v10[3] = v8;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v6, v7);
  swift_bridgeObjectRetain();
  return a5(v10);
}

uint64_t Google_Protobuf_OneofDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v22 = v4;
    v6 = *(_QWORD **)(v1 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    swift_beginAccess();
    v9 = v6[2];
    v8 = v6[3];
    swift_beginAccess();
    *(_QWORD *)(v7 + 16) = v9;
    *(_QWORD *)(v7 + 24) = v8;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v10 = v6[4];
    v11 = v6[5];
    v12 = v6[6];
    v13 = v6[7];
    sub_1C20EC1A4(v10, v11, v12);
    v4 = v22;
    swift_release();
    swift_beginAccess();
    v14 = *(_QWORD *)(v7 + 32);
    v15 = *(_QWORD *)(v7 + 40);
    v16 = *(_QWORD *)(v7 + 48);
    *(_QWORD *)(v7 + 32) = v10;
    *(_QWORD *)(v7 + 40) = v11;
    *(_QWORD *)(v7 + 48) = v12;
    *(_QWORD *)(v7 + 56) = v13;
    sub_1C20EC1EC(v14, v15, v16);
    *(_QWORD *)(v1 + 16) = v7;
    swift_release();
  }
  v17 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v18 = v17[4];
  v19 = v17[5];
  v20 = v17[6];
  v17[4] = v2;
  v17[5] = v3;
  v17[6] = v4;
  v17[7] = v5;
  return sub_1C20EC1EC(v18, v19, v20);
}

double Google_Protobuf_OneofOptions.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  return result;
}

void (*Google_Protobuf_OneofDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  v4 = *(_QWORD **)(v1 + 16);
  swift_beginAccess();
  v5 = v4[4];
  v6 = v4[5];
  v7 = v4[6];
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = 0xC000000000000000;
  v10 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v10 = v4[4];
    v11 = v4[5];
  }
  else
  {
    v11 = 0;
  }
  if (v5)
  {
    v9 = v4[6];
    v8 = v4[7];
  }
  *v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D577C;
}

void sub_1C20D577C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8[4];

  v2 = *a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v4 = (*a1)[3];
  v8[0] = **a1;
  v8[1] = v3;
  v8[2] = v5;
  v8[3] = v4;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v5);
    swift_bridgeObjectRetain();
    Google_Protobuf_OneofDescriptorProto.options.setter(v8);
    v6 = v2[1];
    v7 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v6, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    Google_Protobuf_OneofDescriptorProto.options.setter(v8);
  }
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_OneofDescriptorProto.clearOptions()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v1 = *(_QWORD **)(v0 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_beginAccess();
    v4 = v1[2];
    v3 = v1[3];
    swift_beginAccess();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v5 = v1[4];
    v6 = v1[5];
    v7 = v1[6];
    v8 = v1[7];
    sub_1C20EC1A4(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    v9 = *(_QWORD *)(v2 + 32);
    v10 = *(_QWORD *)(v2 + 40);
    v11 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v2 + 32) = v5;
    *(_QWORD *)(v2 + 40) = v6;
    *(_QWORD *)(v2 + 48) = v7;
    *(_QWORD *)(v2 + 56) = v8;
    sub_1C20EC1EC(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = v2;
    swift_release();
  }
  v12 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v13 = v12[4];
  v14 = v12[5];
  v15 = v12[6];
  *((_OWORD *)v12 + 2) = 0u;
  *((_OWORD *)v12 + 3) = 0u;
  sub_1C20EC1EC(v13, v14, v15);
}

uint64_t (*Google_Protobuf_OneofDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_OneofDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20D9764((void (*)(_QWORD))type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass, a1);
}

uint64_t Google_Protobuf_EnumDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20D6F48(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

void (*Google_Protobuf_EnumDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D5A58;
}

void sub_1C20D5A58(uint64_t a1, char a2)
{
  sub_1C20D70A8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

Swift::Void __swiftcall Google_Protobuf_EnumDescriptorProto.clearName()()
{
  sub_1C20D7214((void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t Google_Protobuf_EnumDescriptorProto.value.setter(uint64_t a1)
{
  return sub_1C20D7390(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

void (*Google_Protobuf_EnumDescriptorProto.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C20D5B10;
}

void sub_1C20D5B10(uint64_t a1, char a2)
{
  sub_1C20D74C4(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t Google_Protobuf_EnumDescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = MEMORY[0x1E0DEE9E0];
  v8 = 0xC000000000000000;
  v9 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v9 = *(_QWORD *)(v3 + 40);
    v10 = *(_QWORD *)(v3 + 48);
  }
  else
  {
    v10 = 0;
  }
  if (v4)
  {
    v8 = *(_QWORD *)(v3 + 56);
    v7 = *(_QWORD *)(v3 + 64);
    v11 = *(_WORD *)(v3 + 72);
  }
  else
  {
    v11 = 2;
  }
  if (v4)
    v12 = HIBYTE(*(_WORD *)(v3 + 72));
  else
    v12 = 2;
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 33) = v12;
  return sub_1C20EC1A4(v4, v5, v6);
}

uint64_t sub_1C20D5BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = 0xC000000000000000;
  v9 = MEMORY[0x1E0DEE9E0];
  v10 = HIBYTE(*(unsigned __int16 *)(v3 + 72));
  if (v4)
  {
    v11 = *(_WORD *)(v3 + 72);
  }
  else
  {
    LOBYTE(v10) = 2;
    v11 = 2;
  }
  if (v4)
  {
    v9 = *(_QWORD *)(v3 + 64);
    v12 = *(_QWORD *)(v3 + 48);
  }
  else
  {
    v12 = 0;
  }
  if (v4)
  {
    v8 = *(_QWORD *)(v3 + 56);
    v7 = *(_QWORD *)(v3 + 40);
  }
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 33) = v10;
  return sub_1C20EC1A4(v4, v5, v6);
}

uint64_t Google_Protobuf_EnumDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *((unsigned __int8 *)a1 + 32);
  v7 = *((unsigned __int8 *)a1 + 33);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v1 + 16) = sub_1C20E8074(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 40);
  v11 = *(_QWORD *)(v9 + 48);
  v12 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v9 + 40) = v2;
  *(_QWORD *)(v9 + 48) = v3;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v5;
  *(_WORD *)(v9 + 72) = v6 | (v7 << 8);
  return sub_1C20EC1EC(v10, v11, v12);
}

double Google_Protobuf_EnumOptions.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_WORD *)(a1 + 32) = 514;
  return result;
}

void (*Google_Protobuf_EnumDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = 0xC000000000000000;
  v10 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v10 = *(_QWORD *)(v4 + 40);
    v11 = *(_QWORD *)(v4 + 48);
  }
  else
  {
    v11 = 0;
  }
  if (v5)
  {
    v9 = *(_QWORD *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v12 = *(_WORD *)(v4 + 72);
  }
  else
  {
    v12 = 2;
  }
  if (v5)
    v13 = HIBYTE(*(_WORD *)(v4 + 72));
  else
    v13 = 2;
  *v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v12;
  *((_BYTE *)v3 + 33) = v13;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D5E14;
}

void sub_1C20D5E14(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  v7 = *((unsigned __int8 *)*a1 + 32);
  v8 = *((unsigned __int8 *)*a1 + 33);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[14];
      type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = sub_1C20E8074(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(v11 + 40);
    v13 = *(_QWORD *)(v11 + 48);
    v14 = *(_QWORD *)(v11 + 56);
    *(_QWORD *)(v11 + 40) = v4;
    *(_QWORD *)(v11 + 48) = v3;
    *(_QWORD *)(v11 + 56) = v6;
    *(_QWORD *)(v11 + 64) = v5;
    *(_WORD *)(v11 + 72) = v7 | (v8 << 8);
    sub_1C20EC1EC(v12, v13, v14);
    v15 = v2[1];
    v16 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v15, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = v2[14];
      type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
      swift_allocObject();
      v18 = swift_retain();
      *(_QWORD *)(v17 + 16) = sub_1C20E8074(v18);
      swift_release();
    }
    v19 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v20 = *(_QWORD *)(v19 + 40);
    v21 = *(_QWORD *)(v19 + 48);
    v22 = *(_QWORD *)(v19 + 56);
    *(_QWORD *)(v19 + 40) = v4;
    *(_QWORD *)(v19 + 48) = v3;
    *(_QWORD *)(v19 + 56) = v6;
    *(_QWORD *)(v19 + 64) = v5;
    *(_WORD *)(v19 + 72) = v7 | (v8 << 8);
    sub_1C20EC1EC(v20, v21, v22);
  }
  free(v2);
}

BOOL Google_Protobuf_EnumDescriptorProto.hasOptions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 40) != 0;
}

Swift::Void __swiftcall Google_Protobuf_EnumDescriptorProto.clearOptions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 16) = sub_1C20E8074(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 40);
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 56);
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_WORD *)(v2 + 72) = 0;
  sub_1C20EC1EC(v3, v4, v5);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV8enumTypeSayAA0d1_c5_EnumfG0VGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D6140(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 80) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_EnumDescriptorProto.reservedRange.setter(uint64_t a1)
{
  return sub_1C20D620C(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t sub_1C20D620C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 80) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_EnumDescriptorProto.reservedRange.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 80);
  swift_bridgeObjectRetain();
  return sub_1C20D6328;
}

void sub_1C20D6328(uint64_t a1, char a2)
{
  sub_1C20D6340(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

void sub_1C20D6340(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 80) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 80) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV7serviceSayAA0d1_c8_ServicefG0VGvg_0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D64D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 88) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_EnumDescriptorProto.reservedName.setter(uint64_t a1)
{
  return sub_1C20D659C(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t sub_1C20D659C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 88) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_EnumDescriptorProto.reservedName.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 88);
  swift_bridgeObjectRetain();
  return sub_1C20D66B8;
}

void sub_1C20D66B8(uint64_t a1, char a2)
{
  sub_1C20D66D0(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

void sub_1C20D66D0(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 88) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 88) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t (*Google_Protobuf_EnumDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t *(*Google_Protobuf_EnumDescriptorProto.EnumReservedRange.start.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_DWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + 20))
    v2 = 0;
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C2104E0C;
}

uint64_t *(*Google_Protobuf_EnumDescriptorProto.EnumReservedRange.end.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_DWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 28))
    v2 = 0;
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C2104E10;
}

uint64_t (*Google_Protobuf_EnumDescriptorProto.EnumReservedRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CBC8, &qword_1EF75D9B8, a1);
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20D6F48(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

void (*Google_Protobuf_EnumValueDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D6958;
}

void sub_1C20D6958(uint64_t a1, char a2)
{
  sub_1C20D70A8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

Swift::Void __swiftcall Google_Protobuf_EnumValueDescriptorProto.clearName()()
{
  sub_1C20D7214((void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

uint64_t _s20SiriOntologyProtobuf07Google_C21_FieldDescriptorProtoV6numbers5Int32Vvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 36))
    return 0;
  else
    return *(unsigned int *)(v1 + 32);
}

uint64_t sub_1C20D69D4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v12 + 32) = v10;
  *(_BYTE *)(v12 + 36) = 0;
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.number.setter(int a1)
{
  return sub_1C20D6A94(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

uint64_t sub_1C20D6A94(int a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v9 + 32) = a1;
  *(_BYTE *)(v9 + 36) = 0;
  return result;
}

void (*Google_Protobuf_EnumValueDescriptorProto.number.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_DWORD *)(v4 + 32);
  if (*(_BYTE *)(v4 + 36))
    v5 = 0;
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C20D6BB0;
}

void sub_1C20D6BB0(uint64_t a1, char a2)
{
  sub_1C20D6BC8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

void sub_1C20D6BC8(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v8;
  int v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = *(_QWORD **)a1;
  v9 = *(_DWORD *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v11 = v8[9];
    a3(0);
    swift_allocObject();
    v12 = swift_retain();
    *(_QWORD *)(v11 + 16) = a5(v12);
    swift_release();
  }
LABEL_4:
  v13 = *(_QWORD *)(v8[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v13 + 32) = v9;
  *(_BYTE *)(v13 + 36) = 0;
  free(v8);
}

Swift::Void __swiftcall Google_Protobuf_EnumValueDescriptorProto.clearNumber()()
{
  sub_1C20D6CB4((void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

uint64_t sub_1C20D6CB4(void (*a1)(_QWORD), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a1(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v3 + 16) = a3(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v3 + 16);
  result = swift_beginAccess();
  *(_DWORD *)(v7 + 32) = 0;
  *(_BYTE *)(v7 + 36) = 1;
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.options.setter(uint64_t *a1)
{
  return sub_1C20D77AC(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, sub_1C20E94F8);
}

void (*Google_Protobuf_EnumValueDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = 0xC000000000000000;
  if (v5)
  {
    v9 = *(_QWORD *)(v4 + 40);
    v11 = *(_QWORD *)(v4 + 48);
  }
  else
  {
    v11 = 0;
  }
  if (v5)
  {
    v10 = *(_QWORD *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v12 = *(_BYTE *)(v4 + 72);
  }
  else
  {
    v12 = 2;
  }
  *v3 = v9;
  v3[1] = v11;
  v3[2] = v10;
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v12;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D6E20;
}

void sub_1C20D6E20(uint64_t **a1, char a2)
{
  sub_1C20D796C(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, sub_1C20E94F8);
}

Swift::Void __swiftcall Google_Protobuf_EnumValueDescriptorProto.clearOptions()()
{
  sub_1C20D7B3C((void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, sub_1C20E94F8);
}

uint64_t (*Google_Protobuf_EnumValueDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20D9764((void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, a1);
}

uint64_t sub_1C20D6E74(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = *a1;
  v10 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v12 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v12);
    swift_release();
  }
  v13 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_ServiceDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C20D6F48(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

uint64_t sub_1C20D6F48(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    v10 = swift_retain();
    *(_QWORD *)(v5 + 16) = a5(v10);
    swift_release();
  }
  v11 = *(_QWORD *)(v5 + 16);
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_ServiceDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D7090;
}

void sub_1C20D7090(uint64_t a1, char a2)
{
  sub_1C20D70A8(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

void sub_1C20D70A8(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = v7[11];
      a3(0);
      swift_allocObject();
      v11 = swift_retain();
      *(_QWORD *)(v10 + 16) = a5(v11);
      swift_release();
    }
    v12 = *(_QWORD *)(v7[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v8;
    *(_QWORD *)(v12 + 24) = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = v7[11];
      a3(0);
      swift_allocObject();
      v14 = swift_retain();
      *(_QWORD *)(v13 + 16) = a5(v14);
      swift_release();
    }
    v15 = *(_QWORD *)(v7[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v15 + 16) = v8;
    *(_QWORD *)(v15 + 24) = v9;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

Swift::Void __swiftcall Google_Protobuf_ServiceDescriptorProto.clearName()()
{
  sub_1C20D7214((void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

uint64_t sub_1C20D7214(void (*a1)(_QWORD), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a1(0);
    swift_allocObject();
    v6 = swift_retain();
    *(_QWORD *)(v3 + 16) = a3(v6);
    swift_release();
  }
  v7 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20D72C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(a2 + 16) = a7(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v12 + 32) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_ServiceDescriptorProto.method.setter(uint64_t a1)
{
  return sub_1C20D7390(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

uint64_t sub_1C20D7390(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v8 = swift_retain();
    *(_QWORD *)(v4 + 16) = a4(v8);
    swift_release();
  }
  v9 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 32) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_ServiceDescriptorProto.method.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C20D74AC;
}

void sub_1C20D74AC(uint64_t a1, char a2)
{
  sub_1C20D74C4(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

void sub_1C20D74C4(uint64_t a1, char a2, void (*a3)(_QWORD), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v7[10];
      a3(0);
      swift_allocObject();
      v10 = swift_retain();
      *(_QWORD *)(v9 + 16) = a5(v10);
      swift_release();
    }
    v11 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v11 + 32) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v12 = v7[10];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a5(v13);
      swift_release();
    }
    v14 = *(_QWORD *)(v7[10] + 16);
    swift_beginAccess();
    *(_QWORD *)(v14 + 32) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C25_EnumValueDescriptorProtoV7optionsAA0d1_c1_eF7OptionsVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = MEMORY[0x1E0DEE9E0];
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = 0xC000000000000000;
  if (v4)
  {
    v8 = *(_QWORD *)(v3 + 40);
    v10 = *(_QWORD *)(v3 + 48);
  }
  else
  {
    v10 = 0;
  }
  if (v4)
  {
    v9 = *(_QWORD *)(v3 + 56);
    v7 = *(_QWORD *)(v3 + 64);
    v11 = *(_BYTE *)(v3 + 72);
  }
  else
  {
    v11 = 2;
  }
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v11;
  return sub_1C20EC1A4(v4, v5, v6);
}

uint64_t sub_1C20D769C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = 0xC000000000000000;
  v9 = MEMORY[0x1E0DEE9E0];
  if (v4)
    v10 = *(_BYTE *)(v3 + 72);
  else
    v10 = 2;
  if (v4)
  {
    v9 = *(_QWORD *)(v3 + 64);
    v11 = *(_QWORD *)(v3 + 48);
  }
  else
  {
    v11 = 0;
  }
  if (v4)
  {
    v8 = *(_QWORD *)(v3 + 56);
    v7 = *(_QWORD *)(v3 + 40);
  }
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v10;
  return sub_1C20EC1A4(v4, v5, v6);
}

uint64_t sub_1C20D7724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  char v12;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  v11[0] = *(_QWORD *)a1;
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v12 = v9;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v6, v7);
  swift_bridgeObjectRetain();
  return a5(v11);
}

uint64_t Google_Protobuf_ServiceDescriptorProto.options.setter(uint64_t *a1)
{
  return sub_1C20D77AC(a1, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, sub_1C20EA498);
}

uint64_t sub_1C20D77AC(uint64_t *a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v10 = *((_BYTE *)a1 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    v11 = swift_retain();
    *(_QWORD *)(v3 + 16) = a3(v11);
    swift_release();
  }
  v12 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 40);
  v14 = *(_QWORD *)(v12 + 48);
  v15 = *(_QWORD *)(v12 + 56);
  *(_QWORD *)(v12 + 40) = v6;
  *(_QWORD *)(v12 + 48) = v7;
  *(_QWORD *)(v12 + 56) = v8;
  *(_QWORD *)(v12 + 64) = v9;
  *(_BYTE *)(v12 + 72) = v10;
  return sub_1C20EC1EC(v13, v14, v15);
}

double Google_Protobuf_ServiceOptions.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a1 + 32) = 2;
  return result;
}

void (*Google_Protobuf_ServiceDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = 0xC000000000000000;
  if (v5)
  {
    v9 = *(_QWORD *)(v4 + 40);
    v11 = *(_QWORD *)(v4 + 48);
  }
  else
  {
    v11 = 0;
  }
  if (v5)
  {
    v10 = *(_QWORD *)(v4 + 56);
    v8 = *(_QWORD *)(v4 + 64);
    v12 = *(_BYTE *)(v4 + 72);
  }
  else
  {
    v12 = 2;
  }
  *v3 = v9;
  v3[1] = v11;
  v3[2] = v10;
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v12;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D7958;
}

void sub_1C20D7958(uint64_t **a1, char a2)
{
  sub_1C20D796C(a1, a2, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, sub_1C20EA498);
}

void sub_1C20D796C(uint64_t **a1, char a2, void (*a3)(_QWORD), uint64_t (*a4)(uint64_t))
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;

  v6 = *a1;
  v8 = **a1;
  v7 = (*a1)[1];
  v10 = (*a1)[2];
  v9 = (*a1)[3];
  v11 = *((_BYTE *)*a1 + 32);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v7, v10);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v26 = v11;
      v12 = v6[14];
      a3(0);
      swift_allocObject();
      v13 = swift_retain();
      *(_QWORD *)(v12 + 16) = a4(v13);
      v11 = v26;
      swift_release();
    }
    v14 = *(_QWORD *)(v6[14] + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v14 + 40);
    v16 = *(_QWORD *)(v14 + 48);
    v17 = *(_QWORD *)(v14 + 56);
    *(_QWORD *)(v14 + 40) = v8;
    *(_QWORD *)(v14 + 48) = v7;
    *(_QWORD *)(v14 + 56) = v10;
    *(_QWORD *)(v14 + 64) = v9;
    *(_BYTE *)(v14 + 72) = v11;
    sub_1C20EC1EC(v15, v16, v17);
    v18 = v6[1];
    v19 = v6[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v18, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v27 = v11;
      v20 = v6[14];
      a3(0);
      swift_allocObject();
      v21 = swift_retain();
      *(_QWORD *)(v20 + 16) = a4(v21);
      v11 = v27;
      swift_release();
    }
    v22 = *(_QWORD *)(v6[14] + 16);
    swift_beginAccess();
    v23 = *(_QWORD *)(v22 + 40);
    v24 = *(_QWORD *)(v22 + 48);
    v25 = *(_QWORD *)(v22 + 56);
    *(_QWORD *)(v22 + 40) = v8;
    *(_QWORD *)(v22 + 48) = v7;
    *(_QWORD *)(v22 + 56) = v10;
    *(_QWORD *)(v22 + 64) = v9;
    *(_BYTE *)(v22 + 72) = v11;
    sub_1C20EC1EC(v23, v24, v25);
  }
  free(v6);
}

Swift::Void __swiftcall Google_Protobuf_ServiceDescriptorProto.clearOptions()()
{
  sub_1C20D7B3C((void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, sub_1C20EA498);
}

uint64_t sub_1C20D7B3C(void (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a1(0);
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 16) = a2(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 40);
  v8 = *(_QWORD *)(v6 + 48);
  v9 = *(_QWORD *)(v6 + 56);
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_BYTE *)(v6 + 72) = 0;
  return sub_1C20EC1EC(v7, v8, v9);
}

uint64_t (*Google_Protobuf_ServiceDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20BCAAC(&qword_1EF75CBF0, &qword_1EF75DA30, a1);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV4nameSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 24))
    v2 = *(_QWORD *)(v1 + 16);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D7C88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 24))
  {
    v4 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v3 + 24);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D7CF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20FE1A8(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C20FE1A8(v6);
    swift_release();
    *(_QWORD *)(v3 + 16) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_MethodDescriptorProto.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D7EDC;
}

void sub_1C20D7EDC(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      v7 = sub_1C20FE1A8(v6);
      swift_release();
      *(_QWORD *)(v5 + 16) = v7;
      swift_release();
    }
    v8 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v8 + 16) = v3;
    *(_QWORD *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      v11 = sub_1C20FE1A8(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 16) = v3;
    *(_QWORD *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearName()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20FE1A8(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV7packageSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 40))
    v2 = *(_QWORD *)(v1 + 32);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D8130@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 40))
  {
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D819C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20FE1A8(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.inputType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C20FE1A8(v6);
    swift_release();
    *(_QWORD *)(v3 + 16) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_MethodDescriptorProto.inputType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 40))
  {
    v5 = *(_QWORD *)(v4 + 32);
    v6 = *(_QWORD *)(v4 + 40);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D8384;
}

void sub_1C20D8384(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      v7 = sub_1C20FE1A8(v6);
      swift_release();
      *(_QWORD *)(v5 + 16) = v7;
      swift_release();
    }
    v8 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      v11 = sub_1C20FE1A8(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 32) = v3;
    *(_QWORD *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearInputType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20FE1A8(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.outputType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 56))
    v2 = *(_QWORD *)(v1 + 48);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D85D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 56))
  {
    v4 = *(_QWORD *)(v3 + 48);
    v5 = *(_QWORD *)(v3 + 56);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D8640(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    v6 = sub_1C20FE1A8(v5);
    swift_release();
    *(_QWORD *)(a2 + 16) = v6;
    swift_release();
  }
  v7 = *(_QWORD *)(a2 + 16);
  swift_beginAccess();
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.outputType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v6 = swift_retain();
    v7 = sub_1C20FE1A8(v6);
    swift_release();
    *(_QWORD *)(v3 + 16) = v7;
    swift_release();
  }
  v8 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  *(_QWORD *)(v8 + 48) = a1;
  *(_QWORD *)(v8 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_MethodDescriptorProto.outputType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 56))
  {
    v5 = *(_QWORD *)(v4 + 48);
    v6 = *(_QWORD *)(v4 + 56);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D8828;
}

void sub_1C20D8828(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      v7 = sub_1C20FE1A8(v6);
      swift_release();
      *(_QWORD *)(v5 + 16) = v7;
      swift_release();
    }
    v8 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v8 + 48) = v3;
    *(_QWORD *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      v11 = sub_1C20FE1A8(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[11] + 16);
    swift_beginAccess();
    *(_QWORD *)(v12 + 48) = v3;
    *(_QWORD *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasOutputType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 56) != 0;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearOutputType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20FE1A8(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v3 + 72);
  v6 = *(_QWORD *)(v3 + 80);
  v7 = MEMORY[0x1E0DEE9E0];
  v8 = 0xC000000000000000;
  v9 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v9 = *(_QWORD *)(v3 + 64);
    v10 = *(_QWORD *)(v3 + 72);
  }
  else
  {
    v10 = 0;
  }
  if (v4)
  {
    v8 = *(_QWORD *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 88);
    v11 = *(_WORD *)(v3 + 96);
  }
  else
  {
    v11 = 2;
  }
  if (v4)
    v12 = HIBYTE(*(_WORD *)(v3 + 96));
  else
    v12 = 3;
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 33) = v12;
  return sub_1C20EC1A4(v4, v5, v6);
}

double sub_1C20D8AF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int16 v3;
  double result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int16 v8;

  Google_Protobuf_MethodDescriptorProto.options.getter((uint64_t)&v5);
  v2 = v7;
  v3 = v8;
  *(_QWORD *)a1 = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 24) = v2;
  *(_WORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1C20D8B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  _QWORD v11[4];
  __int16 v12;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_WORD *)(a1 + 32);
  v11[0] = *(_QWORD *)a1;
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v12 = v9;
  swift_bridgeObjectRetain();
  sub_1C20A8008(v6, v7);
  swift_bridgeObjectRetain();
  return a5(v11);
}

uint64_t Google_Protobuf_MethodDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((unsigned __int8 *)a1 + 32);
  v8 = *((unsigned __int8 *)a1 + 33);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1C20FE1A8(v9);
    swift_release();
    *(_QWORD *)(v2 + 16) = v10;
    swift_release();
  }
  v11 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = *(_QWORD *)(v11 + 80);
  *(_QWORD *)(v11 + 64) = v3;
  *(_QWORD *)(v11 + 72) = v4;
  *(_QWORD *)(v11 + 80) = v5;
  *(_QWORD *)(v11 + 88) = v6;
  *(_WORD *)(v11 + 96) = v7 | (v8 << 8);
  return sub_1C20EC1EC(v12, v13, v14);
}

double Google_Protobuf_MethodOptions.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_WORD *)(a1 + 32) = 770;
  return result;
}

void (*Google_Protobuf_MethodDescriptorProto.options.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(v4 + 72);
  v7 = *(_QWORD *)(v4 + 80);
  v8 = MEMORY[0x1E0DEE9E0];
  v9 = 0xC000000000000000;
  v10 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v10 = *(_QWORD *)(v4 + 64);
    v11 = *(_QWORD *)(v4 + 72);
  }
  else
  {
    v11 = 0;
  }
  if (v5)
  {
    v9 = *(_QWORD *)(v4 + 80);
    v8 = *(_QWORD *)(v4 + 88);
    v12 = *(_WORD *)(v4 + 96);
  }
  else
  {
    v12 = 2;
  }
  if (v5)
    v13 = HIBYTE(*(_WORD *)(v4 + 96));
  else
    v13 = 3;
  *v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  *((_BYTE *)v3 + 32) = v12;
  *((_BYTE *)v3 + 33) = v13;
  sub_1C20EC1A4(v5, v6, v7);
  return sub_1C20D8D8C;
}

void sub_1C20D8D8C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v6 = (*a1)[2];
  v5 = (*a1)[3];
  v7 = *((unsigned __int8 *)*a1 + 32);
  v8 = *((unsigned __int8 *)*a1 + 33);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = v2[14];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v10 = swift_retain();
      v11 = sub_1C20FE1A8(v10);
      swift_release();
      *(_QWORD *)(v9 + 16) = v11;
      swift_release();
    }
    v12 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 64);
    v14 = *(_QWORD *)(v12 + 72);
    v15 = *(_QWORD *)(v12 + 80);
    *(_QWORD *)(v12 + 64) = v4;
    *(_QWORD *)(v12 + 72) = v3;
    *(_QWORD *)(v12 + 80) = v6;
    *(_QWORD *)(v12 + 88) = v5;
    *(_WORD *)(v12 + 96) = v7 | (v8 << 8);
    sub_1C20EC1EC(v13, v14, v15);
    v16 = v2[1];
    v17 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C20A8058(v16, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v18 = v2[14];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      v19 = swift_retain();
      v20 = sub_1C20FE1A8(v19);
      swift_release();
      *(_QWORD *)(v18 + 16) = v20;
      swift_release();
    }
    v21 = *(_QWORD *)(v2[14] + 16);
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 64);
    v23 = *(_QWORD *)(v21 + 72);
    v24 = *(_QWORD *)(v21 + 80);
    *(_QWORD *)(v21 + 64) = v4;
    *(_QWORD *)(v21 + 72) = v3;
    *(_QWORD *)(v21 + 80) = v6;
    *(_QWORD *)(v21 + 88) = v5;
    *(_WORD *)(v21 + 96) = v7 | (v8 << 8);
    sub_1C20EC1EC(v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasOptions.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearOptions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20FE1A8(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(v4 + 72);
  v7 = *(_QWORD *)(v4 + 80);
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_WORD *)(v4 + 96) = 0;
  sub_1C20EC1EC(v5, v6, v7);
}

uint64_t Google_Protobuf_MethodDescriptorProto.clientStreaming.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 98) & 1;
}

uint64_t sub_1C20D908C(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20FE1A8(v4);
    swift_release();
    *(_QWORD *)(a2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 98) = v3;
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.clientStreaming.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20FE1A8(v4);
    swift_release();
    *(_QWORD *)(v2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 98) = a1 & 1;
  return result;
}

void (*Google_Protobuf_MethodDescriptorProto.clientStreaming.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 98) & 1;
  return sub_1C20D9228;
}

void sub_1C20D9228(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C20FE1A8(v7);
    swift_release();
    *(_QWORD *)(v6 + 16) = v8;
    swift_release();
  }
LABEL_4:
  v9 = *(_QWORD *)(v3[9] + 16);
  swift_beginAccess();
  *(_BYTE *)(v9 + 98) = v4;
  free(v3);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasClientStreaming.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 98) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearClientStreaming()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20FE1A8(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_BYTE *)(v4 + 98) = 2;
}

uint64_t Google_Protobuf_MethodDescriptorProto.serverStreaming.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 99) & 1;
}

uint64_t sub_1C20D9404(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20FE1A8(v4);
    swift_release();
    *(_QWORD *)(a2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 99) = v3;
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.serverStreaming.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    v5 = sub_1C20FE1A8(v4);
    swift_release();
    *(_QWORD *)(v2 + 16) = v5;
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 16);
  result = swift_beginAccess();
  *(_BYTE *)(v6 + 99) = a1 & 1;
  return result;
}

void (*Google_Protobuf_MethodDescriptorProto.serverStreaming.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 99) & 1;
  return sub_1C20D95A0;
}

void sub_1C20D95A0(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    v8 = sub_1C20FE1A8(v7);
    swift_release();
    *(_QWORD *)(v6 + 16) = v8;
    swift_release();
  }
LABEL_4:
  v9 = *(_QWORD *)(v3[9] + 16);
  swift_beginAccess();
  *(_BYTE *)(v9 + 99) = v4;
  free(v3);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasServerStreaming.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 99) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearServerStreaming()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v2 = swift_retain();
    v3 = sub_1C20FE1A8(v2);
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  *(_BYTE *)(v4 + 99) = 2;
}

uint64_t (*Google_Protobuf_MethodDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_MethodDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20D9764((void (*)(_QWORD))type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass, a1);
}

uint64_t sub_1C20D9764@<X0>(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_OWORD *)a2 = xmmword_1C2175DE0;
  a1(0);
  result = swift_initStaticObject();
  *(_QWORD *)(a2 + 16) = result;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaPackage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 24))
    v2 = *(_QWORD *)(v1 + 16);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D980C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 24))
  {
    v4 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v3 + 24);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D9878(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaPackage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.javaPackage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 24))
  {
    v5 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D9A58;
}

void sub_1C20D9A58(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 16) = v3;
    *(_QWORD *)(v7 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 16) = v3;
    *(_QWORD *)(v10 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasJavaPackage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 24) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaPackage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaOuterClassname.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 40))
    v2 = *(_QWORD *)(v1 + 32);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20D9CE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 40))
  {
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D9D4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaOuterClassname.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.javaOuterClassname.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 40))
  {
    v5 = *(_QWORD *)(v4 + 32);
    v6 = *(_QWORD *)(v4 + 40);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20D9F2C;
}

void sub_1C20D9F2C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 32) = v3;
    *(_QWORD *)(v7 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 32) = v3;
    *(_QWORD *)(v10 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasJavaOuterClassname.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 40) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaOuterClassname()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaMultipleFiles.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 48) & 1;
}

uint64_t sub_1C20DA190(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 48) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaMultipleFiles.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 48) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaMultipleFiles.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 48) & 1;
  return sub_1C20DA324;
}

void sub_1C20DA324(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 48) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaMultipleFiles.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 48) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaMultipleFiles()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 48) = 2;
}

uint64_t Google_Protobuf_FileOptions.javaGenerateEqualsAndHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 49) & 1;
}

uint64_t sub_1C20DA4F8(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 49) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaGenerateEqualsAndHash.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 49) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaGenerateEqualsAndHash.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 49) & 1;
  return sub_1C20DA68C;
}

void sub_1C20DA68C(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 49) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaGenerateEqualsAndHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 49) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaGenerateEqualsAndHash()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 49) = 2;
}

uint64_t Google_Protobuf_FileOptions.javaStringCheckUtf8.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 50) & 1;
}

uint64_t sub_1C20DA860(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 50) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaStringCheckUtf8.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 50) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaStringCheckUtf8.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 50) & 1;
  return sub_1C20DA9F4;
}

void sub_1C20DA9F4(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 50) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaStringCheckUtf8.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 50) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaStringCheckUtf8()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 50) = 2;
}

uint64_t Google_Protobuf_FileOptions.optimizeFor.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 51);
  if (v5 == 3)
    LOBYTE(v5) = 0;
  *a1 = v5;
  return result;
}

uint64_t sub_1C20DABD4(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 51) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.optimizeFor.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 51) = v2;
  return result;
}

void (*Google_Protobuf_FileOptions.optimizeFor.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  int v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  v5 = *(unsigned __int8 *)(v4 + 51);
  if (v5 == 3)
    LOBYTE(v5) = 0;
  *((_BYTE *)v3 + 80) = v5;
  return sub_1C20DAD68;
}

void sub_1C20DAD68(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = (_BYTE *)(*(_QWORD *)(v3[9] + 24) + 51);
  swift_beginAccess();
  *v8 = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasOptimizeFor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 51) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearOptimizeFor()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 51) = 3;
}

uint64_t Google_Protobuf_FileOptions.goPackage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 64))
    v2 = *(_QWORD *)(v1 + 56);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DAF68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 64))
  {
    v4 = *(_QWORD *)(v3 + 56);
    v5 = *(_QWORD *)(v3 + 64);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DAFD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.goPackage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.goPackage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 64))
  {
    v5 = *(_QWORD *)(v4 + 56);
    v6 = *(_QWORD *)(v4 + 64);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DB1B4;
}

void sub_1C20DB1B4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 56) = v3;
    *(_QWORD *)(v7 + 64) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 56) = v3;
    *(_QWORD *)(v10 + 64) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasGoPackage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearGoPackage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.ccGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 72) & 1;
}

uint64_t sub_1C20DB418(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 72) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.ccGenericServices.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 72) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.ccGenericServices.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 72) & 1;
  return sub_1C20DB5AC;
}

void sub_1C20DB5AC(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 72) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasCcGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 72) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearCcGenericServices()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 72) = 2;
}

uint64_t Google_Protobuf_FileOptions.javaGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 73) & 1;
}

uint64_t sub_1C20DB780(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 73) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaGenericServices.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 73) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaGenericServices.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 73) & 1;
  return sub_1C20DB914;
}

void sub_1C20DB914(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 73) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 73) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaGenericServices()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 73) = 2;
}

uint64_t Google_Protobuf_FileOptions.pyGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 74) & 1;
}

uint64_t sub_1C20DBAE8(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 74) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.pyGenericServices.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 74) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.pyGenericServices.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 74) & 1;
  return sub_1C20DBC7C;
}

void sub_1C20DBC7C(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 74) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasPyGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 74) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPyGenericServices()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 74) = 2;
}

uint64_t Google_Protobuf_FileOptions.phpGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 75) & 1;
}

uint64_t sub_1C20DBE50(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 75) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.phpGenericServices.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 75) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.phpGenericServices.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 75) & 1;
  return sub_1C20DBFE4;
}

void sub_1C20DBFE4(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 75) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasPhpGenericServices.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 75) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpGenericServices()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 75) = 2;
}

uint64_t Google_Protobuf_FileOptions.deprecated.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 76) & 1;
}

uint64_t sub_1C20DC1B8(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 76) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.deprecated.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 76) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.deprecated.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 76) & 1;
  return sub_1C20DC34C;
}

void sub_1C20DC34C(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 76) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasDeprecated.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 76) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearDeprecated()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 76) = 2;
}

uint64_t Google_Protobuf_FileOptions.ccEnableArenas.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 77) & 1;
}

uint64_t sub_1C20DC520(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v5 + 77) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.ccEnableArenas.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v4 + 77) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.ccEnableArenas.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *((_BYTE *)v3 + 80) = *(_BYTE *)(v4 + 77) & 1;
  return sub_1C20DC6B4;
}

void sub_1C20DC6B4(uint64_t a1, char a2)
{
  _QWORD *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v6 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
LABEL_4:
  v8 = *(_QWORD *)(v3[9] + 24);
  swift_beginAccess();
  *(_BYTE *)(v8 + 77) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasCcEnableArenas.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_BYTE *)(v1 + 77) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearCcEnableArenas()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_BYTE *)(v2 + 77) = 2;
}

uint64_t Google_Protobuf_FileOptions.objcClassPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 88))
    v2 = *(_QWORD *)(v1 + 80);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DC8AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 88))
  {
    v4 = *(_QWORD *)(v3 + 80);
    v5 = *(_QWORD *)(v3 + 88);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DC918(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 80) = v4;
  *(_QWORD *)(v6 + 88) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.objcClassPrefix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 80) = a1;
  *(_QWORD *)(v6 + 88) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.objcClassPrefix.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 88))
  {
    v5 = *(_QWORD *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 88);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DCAF8;
}

void sub_1C20DCAF8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 80) = v3;
    *(_QWORD *)(v7 + 88) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 80) = v3;
    *(_QWORD *)(v10 + 88) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasObjcClassPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 88) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearObjcClassPrefix()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 88) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.csharpNamespace.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 104))
    v2 = *(_QWORD *)(v1 + 96);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DCD80@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 104))
  {
    v4 = *(_QWORD *)(v3 + 96);
    v5 = *(_QWORD *)(v3 + 104);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DCDEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 96) = v4;
  *(_QWORD *)(v6 + 104) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.csharpNamespace.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 96) = a1;
  *(_QWORD *)(v6 + 104) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.csharpNamespace.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 104))
  {
    v5 = *(_QWORD *)(v4 + 96);
    v6 = *(_QWORD *)(v4 + 104);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DCFCC;
}

void sub_1C20DCFCC(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 96) = v3;
    *(_QWORD *)(v7 + 104) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 96) = v3;
    *(_QWORD *)(v10 + 104) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasCsharpNamespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 104) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearCsharpNamespace()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.swiftPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 120))
    v2 = *(_QWORD *)(v1 + 112);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DD254@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 120))
  {
    v4 = *(_QWORD *)(v3 + 112);
    v5 = *(_QWORD *)(v3 + 120);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DD2C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 112) = v4;
  *(_QWORD *)(v6 + 120) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.swiftPrefix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 112) = a1;
  *(_QWORD *)(v6 + 120) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.swiftPrefix.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 120))
  {
    v5 = *(_QWORD *)(v4 + 112);
    v6 = *(_QWORD *)(v4 + 120);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DD4A0;
}

void sub_1C20DD4A0(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 112) = v3;
    *(_QWORD *)(v7 + 120) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 112) = v3;
    *(_QWORD *)(v10 + 120) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasSwiftPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 120) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearSwiftPrefix()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 120) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpClassPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 136))
    v2 = *(_QWORD *)(v1 + 128);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DD728@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 136))
  {
    v4 = *(_QWORD *)(v3 + 128);
    v5 = *(_QWORD *)(v3 + 136);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DD794(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 128) = v4;
  *(_QWORD *)(v6 + 136) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpClassPrefix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 128) = a1;
  *(_QWORD *)(v6 + 136) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.phpClassPrefix.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 136))
  {
    v5 = *(_QWORD *)(v4 + 128);
    v6 = *(_QWORD *)(v4 + 136);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DD974;
}

void sub_1C20DD974(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 128) = v3;
    *(_QWORD *)(v7 + 136) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 128) = v3;
    *(_QWORD *)(v10 + 136) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasPhpClassPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 136) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpClassPrefix()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 136) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpNamespace.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 152))
    v2 = *(_QWORD *)(v1 + 144);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DDBFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 152))
  {
    v4 = *(_QWORD *)(v3 + 144);
    v5 = *(_QWORD *)(v3 + 152);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DDC68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 144) = v4;
  *(_QWORD *)(v6 + 152) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpNamespace.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 144) = a1;
  *(_QWORD *)(v6 + 152) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.phpNamespace.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 152))
  {
    v5 = *(_QWORD *)(v4 + 144);
    v6 = *(_QWORD *)(v4 + 152);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DDE48;
}

void sub_1C20DDE48(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 144) = v3;
    *(_QWORD *)(v7 + 152) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 144) = v3;
    *(_QWORD *)(v10 + 152) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasPhpNamespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 152) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpNamespace()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 144) = 0;
  *(_QWORD *)(v2 + 152) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpMetadataNamespace.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 168))
    v2 = *(_QWORD *)(v1 + 160);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DE0D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 168))
  {
    v4 = *(_QWORD *)(v3 + 160);
    v5 = *(_QWORD *)(v3 + 168);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DE13C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 160) = v4;
  *(_QWORD *)(v6 + 168) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpMetadataNamespace.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 160) = a1;
  *(_QWORD *)(v6 + 168) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.phpMetadataNamespace.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 168))
  {
    v5 = *(_QWORD *)(v4 + 160);
    v6 = *(_QWORD *)(v4 + 168);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DE31C;
}

void sub_1C20DE31C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 160) = v3;
    *(_QWORD *)(v7 + 168) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 160) = v3;
    *(_QWORD *)(v10 + 168) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasPhpMetadataNamespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 168) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpMetadataNamespace()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 160) = 0;
  *(_QWORD *)(v2 + 168) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.rubyPackage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 184))
    v2 = *(_QWORD *)(v1 + 176);
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20DE5A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 184))
  {
    v4 = *(_QWORD *)(v3 + 176);
    v5 = *(_QWORD *)(v3 + 184);
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DE610(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 176) = v4;
  *(_QWORD *)(v6 + 184) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.rubyPackage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v5 = swift_retain();
    *(_QWORD *)(v2 + 24) = sub_1C20EC314(v5);
    swift_release();
  }
  v6 = *(_QWORD *)(v2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v6 + 176) = a1;
  *(_QWORD *)(v6 + 184) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.rubyPackage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  if (*(_QWORD *)(v4 + 184))
  {
    v5 = *(_QWORD *)(v4 + 176);
    v6 = *(_QWORD *)(v4 + 184);
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C20DE7F0;
}

void sub_1C20DE7F0(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v6 = swift_retain();
      *(_QWORD *)(v5 + 24) = sub_1C20EC314(v6);
      swift_release();
    }
    v7 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v7 + 176) = v3;
    *(_QWORD *)(v7 + 184) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v9 = swift_retain();
      *(_QWORD *)(v8 + 24) = sub_1C20EC314(v9);
      swift_release();
    }
    v10 = *(_QWORD *)(v2[11] + 24);
    swift_beginAccess();
    *(_QWORD *)(v10 + 176) = v3;
    *(_QWORD *)(v10 + 184) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasRubyPackage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  return *(_QWORD *)(v1 + 184) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearRubyPackage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v1 = swift_retain();
    *(_QWORD *)(v0 + 24) = sub_1C20EC314(v1);
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 176) = 0;
  *(_QWORD *)(v2 + 184) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.uninterpretedOption.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DEA54(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v4 = swift_retain();
    *(_QWORD *)(a2 + 24) = sub_1C20EC314(v4);
    swift_release();
  }
  v5 = *(_QWORD *)(a2 + 24);
  swift_beginAccess();
  *(_QWORD *)(v5 + 192) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.uninterpretedOption.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v3 = swift_retain();
    *(_QWORD *)(v1 + 24) = sub_1C20EC314(v3);
    swift_release();
  }
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v4 + 192) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.uninterpretedOption.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(_QWORD *)(v1 + 24);
  swift_beginAccess();
  v3[9] = *(_QWORD *)(v4 + 192);
  swift_bridgeObjectRetain();
  return sub_1C20DEC00;
}

void sub_1C20DEC00(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = v2[10];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v5 = swift_retain();
      *(_QWORD *)(v4 + 24) = sub_1C20EC314(v5);
      swift_release();
    }
    v6 = *(_QWORD *)(v2[10] + 24);
    swift_beginAccess();
    *(_QWORD *)(v6 + 192) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = v2[10];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      v8 = swift_retain();
      *(_QWORD *)(v7 + 24) = sub_1C20EC314(v8);
      swift_release();
    }
    v9 = *(_QWORD *)(v2[10] + 24);
    swift_beginAccess();
    *(_QWORD *)(v9 + 192) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_FileOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_FileOptions.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_FileOptions.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode __swiftcall Google_Protobuf_FileOptions.OptimizeMode.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode result;

  *v0 = 0;
  return result;
}

SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode_optional __swiftcall Google_Protobuf_FileOptions.OptimizeMode.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return (SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode_optional)rawValue;
}

uint64_t Google_Protobuf_FileOptions.OptimizeMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_1C20DEDC4()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t sub_1C20DEE08()
{
  return sub_1C2175834();
}

uint64_t sub_1C20DEE34()
{
  sub_1C2175828();
  sub_1C2175834();
  return sub_1C2175870();
}

uint64_t sub_1C20DEE74()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode_optional sub_1C20DEE80(Swift::Int *a1)
{
  return Google_Protobuf_FileOptions.OptimizeMode.init(rawValue:)(*a1);
}

void sub_1C20DEE88(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t Google_Protobuf_FileOptions._protobuf_extensionFieldValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FileOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*Google_Protobuf_FileOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C20DEEDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DEEE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*sub_1C20DEF10())()
{
  return nullsub_1;
}

void *static Google_Protobuf_FileOptions.OptimizeMode.allCases.getter()
{
  return &unk_1E7BD8468;
}

void sub_1C20DEF2C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7BD8490;
}

uint64_t Google_Protobuf_MessageOptions.messageSetWireFormat.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) & 1;
}

uint64_t Google_Protobuf_MessageOptions.messageSetWireFormat.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.messageSetWireFormat.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 32) & 1;
  return sub_1C2104DE8;
}

BOOL Google_Protobuf_MessageOptions.hasMessageSetWireFormat.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearMessageSetWireFormat()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 32) = 2;
}

uint64_t Google_Protobuf_MessageOptions.noStandardDescriptorAccessor.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) & 1;
}

uint64_t Google_Protobuf_MessageOptions.noStandardDescriptorAccessor.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.noStandardDescriptorAccessor.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 33) & 1;
  return sub_1C2104DE0;
}

BOOL Google_Protobuf_MessageOptions.hasNoStandardDescriptorAccessor.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearNoStandardDescriptorAccessor()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 33) = 2;
}

uint64_t Google_Protobuf_MessageOptions.deprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 34) & 1;
}

uint64_t Google_Protobuf_MessageOptions.deprecated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 34) = result;
  return result;
}

_BYTE *(*Google_Protobuf_MessageOptions.deprecated.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 34) & 1;
  return sub_1C20DF010;
}

_BYTE *sub_1C20DF010(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 34) = result[8];
  return result;
}

BOOL Google_Protobuf_MessageOptions.hasDeprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 34) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearDeprecated()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 34) = 2;
}

uint64_t Google_Protobuf_MessageOptions.mapEntry.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 35) & 1;
}

uint64_t Google_Protobuf_MessageOptions.mapEntry.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 35) = result;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.mapEntry.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 35) & 1;
  return sub_1C2104DE4;
}

BOOL Google_Protobuf_MessageOptions.hasMapEntry.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 35) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearMapEntry()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 35) = 2;
}

uint64_t Google_Protobuf_MessageOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MessageOptions.uninterpretedOption.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_MessageOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_MessageOptions.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_MessageOptions._protobuf_extensionFieldValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MessageOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C20DF15C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20DF168(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

void Google_Protobuf_FieldOptions.ctype.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 32);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *a1 = v2;
}

_BYTE *Google_Protobuf_FieldOptions.ctype.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

_BYTE *(*Google_Protobuf_FieldOptions.ctype.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(unsigned __int8 *)(v1 + 32);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_1C20DF1D4;
}

_BYTE *sub_1C20DF1D4(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 32) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasCtype.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearCtype()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 32) = 3;
}

uint64_t Google_Protobuf_FieldOptions.packed.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) & 1;
}

uint64_t Google_Protobuf_FieldOptions.packed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions.packed.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 33) & 1;
  return sub_1C2104DE0;
}

BOOL Google_Protobuf_FieldOptions.hasPacked.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearPacked()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 33) = 2;
}

void Google_Protobuf_FieldOptions.jstype.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 34);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *a1 = v2;
}

_BYTE *Google_Protobuf_FieldOptions.jstype.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 34) = *result;
  return result;
}

_BYTE *(*Google_Protobuf_FieldOptions.jstype.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(unsigned __int8 *)(v1 + 34);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_1C20DF010;
}

BOOL Google_Protobuf_FieldOptions.hasJstype.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 34) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearJstype()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 34) = 3;
}

uint64_t Google_Protobuf_FieldOptions.lazy.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 35) & 1;
}

uint64_t Google_Protobuf_FieldOptions.lazy.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 35) = result;
  return result;
}

_BYTE *(*Google_Protobuf_FieldOptions.lazy.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 35) & 1;
  return sub_1C20DF2E4;
}

_BYTE *sub_1C20DF2E4(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 35) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasLazy.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 35) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearLazy()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 35) = 2;
}

uint64_t Google_Protobuf_FieldOptions.deprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 36) & 1;
}

uint64_t Google_Protobuf_FieldOptions.deprecated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 36) = result;
  return result;
}

_BYTE *(*Google_Protobuf_FieldOptions.deprecated.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 36) & 1;
  return sub_1C20DF344;
}

_BYTE *sub_1C20DF344(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 36) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasDeprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 36) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearDeprecated()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 36) = 2;
}

uint64_t Google_Protobuf_FieldOptions.weak.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 37) & 1;
}

uint64_t Google_Protobuf_FieldOptions.weak.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 37) = result;
  return result;
}

_BYTE *(*Google_Protobuf_FieldOptions.weak.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 37) & 1;
  return sub_1C20DF3A4;
}

_BYTE *sub_1C20DF3A4(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 37) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasWeak.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 37) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearWeak()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 37) = 2;
}

uint64_t Google_Protobuf_FieldOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldOptions.uninterpretedOption.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FieldOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_FieldOptions.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType __swiftcall Google_Protobuf_FieldOptions.CType.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType result;

  *v0 = 0;
  return result;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType_optional __swiftcall Google_Protobuf_FieldOptions.CType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType_optional)rawValue;
}

uint64_t Google_Protobuf_FieldOptions.CType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1C20DF48C()
{
  unsigned __int8 *v0;

  return *v0;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType_optional sub_1C20DF494(Swift::Int *a1)
{
  return Google_Protobuf_FieldOptions.CType.init(rawValue:)(*a1);
}

void sub_1C20DF49C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::JSType __swiftcall Google_Protobuf_FieldOptions.JSType.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::Google_Protobuf_FieldOptions::JSType result;

  *v0 = 0;
  return result;
}

uint64_t Google_Protobuf_FieldOptions._protobuf_extensionFieldValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

void *static Google_Protobuf_FieldOptions.CType.allCases.getter()
{
  return &unk_1E7BD84B8;
}

void sub_1C20DF500(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7BD84E0;
}

void *static Google_Protobuf_FieldOptions.JSType.allCases.getter()
{
  return &unk_1E7BD8508;
}

void sub_1C20DF51C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7BD8530;
}

uint64_t Google_Protobuf_OneofOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_OneofOptions.uninterpretedOption.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_OneofOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_OneofOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t _s20SiriOntologyProtobuf07Google_C18_FileDescriptorSetV13unknownFieldsAA14UnknownStorageVvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_OneofOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_OneofOptions._protobuf_extensionFieldValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_OneofOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_OneofOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumOptions.allowAlias.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) & 1;
}

uint64_t Google_Protobuf_EnumOptions.allowAlias.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

_BYTE *(*Google_Protobuf_EnumOptions.allowAlias.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 32) & 1;
  return sub_1C20DF1D4;
}

BOOL Google_Protobuf_EnumOptions.hasAllowAlias.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) != 2;
}

Swift::Void __swiftcall Google_Protobuf_EnumOptions.clearAllowAlias()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 32) = 2;
}

uint64_t Google_Protobuf_EnumOptions.deprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) & 1;
}

uint64_t Google_Protobuf_EnumOptions.deprecated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

_BYTE *(*Google_Protobuf_EnumOptions.deprecated.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 33) & 1;
  return sub_1C20DF684;
}

_BYTE *sub_1C20DF684(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 33) = result[8];
  return result;
}

BOOL Google_Protobuf_EnumOptions.hasDeprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) != 2;
}

Swift::Void __swiftcall Google_Protobuf_EnumOptions.clearDeprecated()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 33) = 2;
}

uint64_t Google_Protobuf_EnumOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumOptions.uninterpretedOption.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_EnumOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_EnumOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumOptions._protobuf_extensionFieldValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_EnumOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_EnumValueOptions.deprecated.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 32) & 1;
  return sub_1C2104DE8;
}

uint64_t (*Google_Protobuf_EnumValueOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_EnumValueOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_EnumValueOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceOptions.deprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) & 1;
}

uint64_t Google_Protobuf_ServiceOptions.deprecated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*Google_Protobuf_ServiceOptions.deprecated.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 32) & 1;
  return sub_1C2104DE8;
}

BOOL Google_Protobuf_ServiceOptions.hasDeprecated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 32) != 2;
}

Swift::Void __swiftcall Google_Protobuf_ServiceOptions.clearDeprecated()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 32) = 2;
}

uint64_t Google_Protobuf_ServiceOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ServiceOptions.uninterpretedOption.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_ServiceOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_ServiceOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceOptions._protobuf_extensionFieldValues.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ServiceOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_ServiceOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_MethodOptions.deprecated.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 32) & 1;
  return sub_1C2104DE8;
}

void Google_Protobuf_MethodOptions.idempotencyLevel.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 33);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *a1 = v2;
}

_BYTE *Google_Protobuf_MethodOptions.idempotencyLevel.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = *result;
  return result;
}

_BYTE *(*Google_Protobuf_MethodOptions.idempotencyLevel.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(unsigned __int8 *)(v1 + 33);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_1C20DF684;
}

BOOL Google_Protobuf_MethodOptions.hasIdempotencyLevel.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 33) != 3;
}

Swift::Void __swiftcall Google_Protobuf_MethodOptions.clearIdempotencyLevel()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 33) = 3;
}

uint64_t (*Google_Protobuf_MethodOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_MethodOptions.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_MethodOptions::IdempotencyLevel __swiftcall Google_Protobuf_MethodOptions.IdempotencyLevel.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::Google_Protobuf_MethodOptions::IdempotencyLevel result;

  *v0 = 0;
  return result;
}

uint64_t (*Google_Protobuf_MethodOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

void *static Google_Protobuf_MethodOptions.IdempotencyLevel.allCases.getter()
{
  return &unk_1E7BD8558;
}

void sub_1C20DF964(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7BD8580;
}

uint64_t Google_Protobuf_UninterpretedOption.name.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UninterpretedOption.name.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_UninterpretedOption.identifierValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 32))
    v1 = *(_QWORD *)(v0 + 24);
  else
    v1 = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_UninterpretedOption.identifierValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.identifierValue.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  a1[2] = v1;
  if (*(_QWORD *)(v1 + 32))
  {
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C20DFA7C;
}

BOOL Google_Protobuf_UninterpretedOption.hasIdentifierValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32) != 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearIdentifierValue()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
}

uint64_t Google_Protobuf_UninterpretedOption.positiveIntValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 48))
    return 0;
  else
    return *(_QWORD *)(v0 + 40);
}

uint64_t Google_Protobuf_UninterpretedOption.positiveIntValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  *(_BYTE *)(v1 + 48) = 0;
  return result;
}

_QWORD *(*Google_Protobuf_UninterpretedOption.positiveIntValue.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  if (*(_BYTE *)(v1 + 48))
    v2 = 0;
  *a1 = v2;
  a1[1] = v1;
  return sub_1C20DFAF0;
}

_QWORD *sub_1C20DFAF0(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 40) = *result;
  *(_BYTE *)(v1 + 48) = 0;
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasPositiveIntValue.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 48) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearPositiveIntValue()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 48) = 1;
}

uint64_t Google_Protobuf_UninterpretedOption.negativeIntValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 64))
    return 0;
  else
    return *(_QWORD *)(v0 + 56);
}

uint64_t Google_Protobuf_UninterpretedOption.negativeIntValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  *(_BYTE *)(v1 + 64) = 0;
  return result;
}

_QWORD *(*Google_Protobuf_UninterpretedOption.negativeIntValue.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  if (*(_BYTE *)(v1 + 64))
    v2 = 0;
  *a1 = v2;
  a1[1] = v1;
  return sub_1C20DFB64;
}

_QWORD *sub_1C20DFB64(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 56) = *result;
  *(_BYTE *)(v1 + 64) = 0;
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasNegativeIntValue.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 64) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearNegativeIntValue()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 1;
}

double Google_Protobuf_UninterpretedOption.doubleValue.getter()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 72);
  if (*(_BYTE *)(v0 + 80))
    return 0.0;
  return result;
}

void Google_Protobuf_UninterpretedOption.doubleValue.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
  *(_BYTE *)(v1 + 80) = 0;
}

_QWORD *(*Google_Protobuf_UninterpretedOption.doubleValue.modify(uint64_t a1))(_QWORD *result)
{
  uint64_t v1;
  double v2;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = *(double *)(v1 + 72);
  if (*(_BYTE *)(v1 + 80))
    v2 = 0.0;
  *(double *)a1 = v2;
  return sub_1C20DFBE4;
}

_QWORD *sub_1C20DFBE4(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 72) = *result;
  *(_BYTE *)(v1 + 80) = 0;
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasDoubleValue.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 80) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearDoubleValue()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 1;
}

uint64_t Google_Protobuf_UninterpretedOption.stringValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  if (v1 >> 60 == 15)
    v2 = 0;
  else
    v2 = *(_QWORD *)(v0 + 88);
  sub_1C20FE40C(*(_QWORD *)(v0 + 88), v1);
  return v2;
}

uint64_t Google_Protobuf_UninterpretedOption.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C20AE1C8(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.stringValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  if (v4 >> 60 == 15)
    v5 = 0;
  else
    v5 = *(_QWORD *)(v1 + 88);
  v6 = 0xC000000000000000;
  if (v4 >> 60 != 15)
    v6 = *(_QWORD *)(v1 + 96);
  *a1 = v5;
  a1[1] = v6;
  sub_1C20FE40C(v3, v4);
  return sub_1C20DFCD0;
}

uint64_t sub_1C20DFCD0(uint64_t *a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  v5 = *(_QWORD *)(v3 + 88);
  v6 = *(_QWORD *)(v3 + 96);
  if ((a2 & 1) != 0)
  {
    sub_1C20A8008(*a1, v2);
    sub_1C20AE1C8(v5, v6);
    *(_QWORD *)(v3 + 88) = v4;
    *(_QWORD *)(v3 + 96) = v2;
    return sub_1C20A8058(v4, v2);
  }
  else
  {
    result = sub_1C20AE1C8(*(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96));
    *(_QWORD *)(v3 + 88) = v4;
    *(_QWORD *)(v3 + 96) = v2;
  }
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasStringValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96) >> 60 != 15;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearStringValue()()
{
  uint64_t v0;

  sub_1C20AE1C8(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  *(_OWORD *)(v0 + 88) = xmmword_1C2177160;
}

uint64_t Google_Protobuf_UninterpretedOption.aggregateValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 112))
    v1 = *(_QWORD *)(v0 + 104);
  else
    v1 = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_UninterpretedOption.aggregateValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.aggregateValue.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  a1[2] = v1;
  if (*(_QWORD *)(v1 + 112))
  {
    v2 = *(_QWORD *)(v1 + 104);
    v3 = *(_QWORD *)(v1 + 112);
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C20DFE50;
}

uint64_t sub_1C20DFE50(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 104) = v4;
    *(_QWORD *)(v3 + 112) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 104) = v4;
    *(_QWORD *)(v3 + 112) = v2;
  }
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasAggregateValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112) != 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearAggregateValue()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 104) = 0;
  *(_QWORD *)(v0 + 112) = 0;
}

uint64_t Google_Protobuf_UninterpretedOption.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_UninterpretedOption.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.namePart.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 24))
    v1 = *(_QWORD *)(v0 + 16);
  else
    v1 = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.namePart.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.NamePart.namePart.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  a1[2] = v1;
  if (*(_QWORD *)(v1 + 24))
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(v1 + 24);
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C20DFFF4;
}

uint64_t sub_1C20DFFF4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
  }
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.NamePart.hasNamePart.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24) != 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.NamePart.clearNamePart()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
}

uint64_t (*Google_Protobuf_UninterpretedOption.NamePart.isExtension.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 32) & 1;
  return sub_1C2104DE8;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.NamePart.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_UninterpretedOption.NamePart.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 2;
  return result;
}

double Google_Protobuf_UninterpretedOption.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C2177160;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  return result;
}

uint64_t Google_Protobuf_SourceCodeInfo.location.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.location.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.location.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t (*Google_Protobuf_SourceCodeInfo.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.path.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.path.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.path.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.span.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.span.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.span.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingComments.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 48))
    v1 = *(_QWORD *)(v0 + 40);
  else
    v1 = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingComments.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.leadingComments.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  a1[2] = v1;
  if (*(_QWORD *)(v1 + 48))
  {
    v2 = *(_QWORD *)(v1 + 40);
    v3 = *(_QWORD *)(v1 + 48);
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C20E0300;
}

uint64_t sub_1C20E0300(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 48) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 48) = v2;
  }
  return result;
}

BOOL Google_Protobuf_SourceCodeInfo.Location.hasLeadingComments.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48) != 0;
}

Swift::Void __swiftcall Google_Protobuf_SourceCodeInfo.Location.clearLeadingComments()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.trailingComments.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 64))
    v1 = *(_QWORD *)(v0 + 56);
  else
    v1 = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.trailingComments.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.trailingComments.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  a1[2] = v1;
  if (*(_QWORD *)(v1 + 64))
  {
    v2 = *(_QWORD *)(v1 + 56);
    v3 = *(_QWORD *)(v1 + 64);
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C20E0458;
}

uint64_t sub_1C20E0458(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = v2;
  }
  return result;
}

BOOL Google_Protobuf_SourceCodeInfo.Location.hasTrailingComments.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_SourceCodeInfo.Location.clearTrailingComments()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingDetachedComments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingDetachedComments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.leadingDetachedComments.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_SourceCodeInfo.Location.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = v1;
  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)(a1 + 24) = xmmword_1C2175DE0;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.annotation.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.path.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.path.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.Annotation.path.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.sourceFile.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 32))
    v1 = *(_QWORD *)(v0 + 24);
  else
    v1 = 0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.sourceFile.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.Annotation.sourceFile.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  a1[2] = v1;
  if (*(_QWORD *)(v1 + 32))
  {
    v2 = *(_QWORD *)(v1 + 24);
    v3 = *(_QWORD *)(v1 + 32);
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C20DFA7C;
}

uint64_t sub_1C20E06CC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v2;
  }
  return result;
}

BOOL Google_Protobuf_GeneratedCodeInfo.Annotation.hasSourceFile.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32) != 0;
}

Swift::Void __swiftcall Google_Protobuf_GeneratedCodeInfo.Annotation.clearSourceFile()()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.begin.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 44))
    return 0;
  else
    return *(unsigned int *)(v0 + 40);
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.begin.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 40) = result;
  *(_BYTE *)(v1 + 44) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_GeneratedCodeInfo.Annotation.begin.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_DWORD *)(v1 + 40);
  if (*(_BYTE *)(v1 + 44))
    v2 = 0;
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C20E07A4;
}

uint64_t *sub_1C20E07A4(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_DWORD *)(v1 + 40) = *((_DWORD *)result + 2);
  *(_BYTE *)(v1 + 44) = 0;
  return result;
}

BOOL Google_Protobuf_GeneratedCodeInfo.Annotation.hasBegin.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 44) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_GeneratedCodeInfo.Annotation.clearBegin()()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 44) = 1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.end.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 52))
    return 0;
  else
    return *(unsigned int *)(v0 + 48);
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.end.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 48) = result;
  *(_BYTE *)(v1 + 52) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_GeneratedCodeInfo.Annotation.end.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  int v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_DWORD *)(v1 + 48);
  if (*(_BYTE *)(v1 + 52))
    v2 = 0;
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C20E0820;
}

uint64_t *sub_1C20E0820(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_DWORD *)(v1 + 48) = *((_DWORD *)result + 2);
  *(_BYTE *)(v1 + 52) = 0;
  return result;
}

BOOL Google_Protobuf_GeneratedCodeInfo.Annotation.hasEnd.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 52) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_GeneratedCodeInfo.Annotation.clearEnd()()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 48) = 0;
  *(_BYTE *)(v0 + 52) = 1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.Annotation.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_GeneratedCodeInfo.Annotation.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 44) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 52) = 1;
  return result;
}

unint64_t static Google_Protobuf_FileDescriptorSet.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C20E08F0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4FD8, &qword_1EF75D820);
}

uint64_t static Google_Protobuf_FileDescriptorSet._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB48 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D828;
  v3 = qword_1EF75D830;
  v4 = unk_1EF75D838;
  *a1 = qword_1EF75D820;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FileDescriptorSet.isInitialized.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  BOOL v10;

  v1 = sub_1C20E0D18(*v0);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v1 + 32);
    v4 = v2 - 1;
    do
    {
      v5 = v3[3];
      v6 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v5);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      v8 = v7;
      v10 = v4-- != 0;
      if ((v7 & 1) == 0)
        break;
      v3 += 5;
    }
    while (v10);
  }
  else
  {
    v8 = 1;
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C20E0A14(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1C20B992C(0, v1, 0);
    v2 = v29;
    v4 = (uint64_t *)(a1 + 72);
    do
    {
      v5 = *(v4 - 4);
      v6 = *(v4 - 3);
      v7 = *(v4 - 1);
      v21 = *v4;
      v22 = *(v4 - 2);
      v20 = *((_BYTE *)v4 + 8);
      v19 = v4[2];
      v18 = *((_BYTE *)v4 + 24);
      v17 = v4[4];
      v16 = *((_BYTE *)v4 + 40);
      v8 = v4[6];
      v9 = v4[7];
      v10 = v4[9];
      v15 = v4[8];
      v24 = *(v4 - 5);
      swift_bridgeObjectRetain();
      v23 = v5;
      sub_1C20A8008(v5, v6);
      swift_bridgeObjectRetain();
      sub_1C20FE40C(v8, v9);
      v29 = v2;
      v11 = *(_QWORD *)(v2 + 16);
      v12 = *(_QWORD *)(v2 + 24);
      v25 = v11 + 1;
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
      {
        sub_1C20B992C((_QWORD *)(v12 > 1), v25, 1);
        v2 = v29;
      }
      v27 = &type metadata for Google_Protobuf_UninterpretedOption;
      v28 = sub_1C20FE4B0();
      v13 = swift_allocObject();
      *(_QWORD *)&v26 = v13;
      *(_QWORD *)(v13 + 16) = v24;
      *(_QWORD *)(v13 + 24) = v23;
      *(_QWORD *)(v13 + 32) = v6;
      *(_QWORD *)(v13 + 40) = v22;
      *(_QWORD *)(v13 + 48) = v7;
      *(_QWORD *)(v13 + 56) = v21;
      *(_BYTE *)(v13 + 64) = v20;
      *(_QWORD *)(v13 + 72) = v19;
      *(_BYTE *)(v13 + 80) = v18;
      *(_QWORD *)(v13 + 88) = v17;
      *(_BYTE *)(v13 + 96) = v16;
      *(_QWORD *)(v13 + 104) = v8;
      *(_QWORD *)(v13 + 112) = v9;
      *(_QWORD *)(v13 + 120) = v15;
      *(_QWORD *)(v13 + 128) = v10;
      *(_QWORD *)(v2 + 16) = v25;
      sub_1C20A8734(&v26, v2 + 40 * v11 + 32);
      v4 += 15;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C20E0BE4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1C20B992C(0, v1, 0);
    v2 = v17;
    v4 = (_BYTE *)(a1 + 64);
    do
    {
      v5 = *((_QWORD *)v4 - 4);
      v6 = *((_QWORD *)v4 - 3);
      v7 = *((_QWORD *)v4 - 1);
      v13 = *((_QWORD *)v4 - 2);
      v8 = *v4;
      sub_1C20A8008(v5, v6);
      v17 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_1C20B992C((_QWORD *)(v10 > 1), v9 + 1, 1);
        v2 = v17;
      }
      v4 += 40;
      v15 = &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
      v16 = sub_1C20FF040();
      v11 = swift_allocObject();
      *(_QWORD *)&v14 = v11;
      *(_QWORD *)(v11 + 16) = v5;
      *(_QWORD *)(v11 + 24) = v6;
      *(_QWORD *)(v11 + 32) = v13;
      *(_QWORD *)(v11 + 40) = v7;
      *(_BYTE *)(v11 + 48) = v8;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      sub_1C20A8734(&v14, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C20E0D18(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v12;
  uint64_t v13;
  ValueMetadata *v14;
  unint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C20B992C(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      sub_1C20A8008(v5, v6);
      v16 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      swift_retain();
      if (v9 >= v8 >> 1)
      {
        sub_1C20B992C((_QWORD *)(v8 > 1), v9 + 1, 1);
        v2 = v16;
      }
      v14 = &type metadata for Google_Protobuf_FileDescriptorProto;
      v10 = sub_1C20FE420();
      *(_QWORD *)&v12 = v5;
      *((_QWORD *)&v12 + 1) = v6;
      v15 = v10;
      v13 = v7;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      sub_1C20A8734(&v12, v2 + 40 * v9 + 32);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C20E0E24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1C20B992C(0, v3, 0);
    v4 = v20;
    v7 = (uint64_t *)(a1 + 48);
    do
    {
      v8 = *(v7 - 2);
      v9 = *(v7 - 1);
      v10 = *v7;
      sub_1C20A8008(v8, v9);
      v20 = v4;
      v12 = *(_QWORD *)(v4 + 16);
      v11 = *(_QWORD *)(v4 + 24);
      swift_retain();
      if (v12 >= v11 >> 1)
      {
        sub_1C20B992C((_QWORD *)(v11 > 1), v12 + 1, 1);
        v4 = v20;
      }
      v18 = a2;
      v13 = a3();
      *(_QWORD *)&v16 = v8;
      *((_QWORD *)&v16 + 1) = v9;
      v19 = v13;
      v17 = v10;
      *(_QWORD *)(v4 + 16) = v12 + 1;
      sub_1C20A8734(&v16, v4 + 40 * v12 + 32);
      v7 += 3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t Google_Protobuf_FileDescriptorSet.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4810(a1, a2, a3, (uint64_t (*)(void))sub_1C20FE420, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto);
}

void Google_Protobuf_FileDescriptorSet.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20F48E8(a1, a2, a3, (uint64_t (*)(void))sub_1C20FE420, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto);
}

uint64_t static Google_Protobuf_FileDescriptorSet.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_1C20FC788(*(_QWORD **)a1, *(_QWORD **)a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E25D0) & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v7 = v6;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v7 & 1;
}

uint64_t Google_Protobuf_FileDescriptorSet.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BED6C);
}

unint64_t sub_1C20E102C()
{
  return 0xD000000000000021;
}

uint64_t sub_1C20E1048()
{
  uint64_t *v0;
  char v1;

  sub_1C20E0D18(*v0);
  v1 = static Internal.areAllInitialized(_:)();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t (*sub_1C20E1084())()
{
  return nullsub_1;
}

uint64_t sub_1C20E1094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileDescriptorSet.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E10A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FileDescriptorSet.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E10BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB48 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D828;
  v3 = qword_1EF75D830;
  v4 = unk_1EF75D838;
  *a1 = qword_1EF75D820;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E1138()
{
  uint64_t *v0;

  return sub_1C21584C4(*v0, v0[1], v0[2]);
}

uint64_t sub_1C20E1144(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BED6C);
}

void sub_1C20E1150(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BED6C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20E115C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BED6C);
}

uint64_t sub_1C20E1168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_1C20FC788(*(_QWORD **)a1, *(_QWORD **)a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E25D0) & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v7 = v6;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v7 & 1;
}

unint64_t static Google_Protobuf_FileDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C20E1228()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5350, &qword_1EF75D840);
}

uint64_t static Google_Protobuf_FileDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB50 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D848;
  v3 = qword_1EF75D850;
  v4 = unk_1EF75D858;
  *a1 = qword_1EF75D840;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20E12B8()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = v2;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = v2;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_QWORD *)(v0 + 168) = 0;
  qword_1EF75D860 = v0;
  return result;
}

uint64_t sub_1C20E1318(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v3;
  *(_QWORD *)(v1 + 88) = v3;
  *(_QWORD *)(v1 + 96) = v3;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_QWORD *)(v1 + 168) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  swift_beginAccess();
  v5 = a1[2];
  v4 = a1[3];
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = a1[4];
  v6 = a1[5];
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = a1[6];
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = a1[7];
  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = a1[8];
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v11 = a1[9];
  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = a1[10];
  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = a1[11];
  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = a1[12];
  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v15 = a1[13];
  v16 = a1[14];
  v17 = a1[15];
  v18 = a1[16];
  swift_beginAccess();
  v19 = *(_QWORD *)(v1 + 104);
  v20 = *(_QWORD *)(v1 + 112);
  v21 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 104) = v15;
  *(_QWORD *)(v1 + 112) = v16;
  *(_QWORD *)(v1 + 120) = v17;
  *(_QWORD *)(v1 + 128) = v18;
  sub_1C20EC0AC(v15, v16, v17);
  sub_1C20EC0E4(v19, v20, v21);
  swift_beginAccess();
  v22 = a1[17];
  v23 = a1[18];
  v24 = a1[19];
  swift_beginAccess();
  v25 = *(_QWORD *)(v1 + 136);
  v26 = *(_QWORD *)(v1 + 144);
  v27 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v1 + 136) = v22;
  *(_QWORD *)(v1 + 144) = v23;
  *(_QWORD *)(v1 + 152) = v24;
  sub_1C20EC11C(v22, v23, v24);
  sub_1C20EC150(v25, v26, v27);
  swift_beginAccess();
  v29 = a1[20];
  v28 = a1[21];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v1 + 160) = v29;
  *(_QWORD *)(v1 + 168) = v28;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C20E178C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20EC0E4(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  sub_1C20EC150(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C20E1808()
{
  sub_1C20E178C();
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_FileDescriptorProto.isInitialized.getter()
{
  return sub_1C20EA654((uint64_t (*)(uint64_t))sub_1C20E1830);
}

uint64_t sub_1C20E1830(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1C20E0E24(v2, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(void))sub_1C20FFB94);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v6 = v5[3];
      v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0)
        goto LABEL_30;
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1C20E0E24(v8, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(void))sub_1C2100318);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v12 = v11[3];
      v13 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13) & 1) == 0)
        goto LABEL_30;
      v11 += 5;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1C20E0E24(v14, (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(void))sub_1C21006FC);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = (_QWORD *)(v15 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v18 = v17[3];
      v19 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v18);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19) & 1) == 0)
        goto LABEL_30;
      v17 += 5;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1C20E0E24(v20, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(void))sub_1C2100080);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v26 = a1[15];
    if (v26)
    {
      v28 = a1[13];
      v27 = a1[14];
      sub_1C20A8008(v28, v27);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C20A8008(v28, v27);
      swift_bridgeObjectRetain();
      swift_retain();
      if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
      {
LABEL_34:
        sub_1C20EC0E4(v28, v27, v26);
        sub_1C20EC0E4(v28, v27, v26);
        return 0;
      }
      swift_beginAccess();
      swift_retain();
      v29 = swift_bridgeObjectRetain();
      v30 = sub_1C20E0A14(v29);
      swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v30 + 16);
      if (v31)
      {
        v32 = (_QWORD *)(v30 + 32);
        swift_bridgeObjectRetain();
        while (1)
        {
          v33 = v32[3];
          v34 = v32[4];
          __swift_project_boxed_opaque_existential_1(v32, v33);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 32))(v33, v34) & 1) == 0)
            break;
          v32 += 5;
          if (!--v31)
          {
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_34;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C20EC0E4(v28, v27, v26);
      sub_1C20EC0E4(v28, v27, v26);
    }
    return 1;
  }
  v23 = (_QWORD *)(v21 + 32);
  swift_bridgeObjectRetain();
  while (1)
  {
    v24 = v23[3];
    v25 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v24);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25) & 1) == 0)
      break;
    v23 += 5;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
LABEL_30:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t Google_Protobuf_FileOptions.isInitialized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  BOOL v10;

  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
  {
    swift_beginAccess();
    swift_retain();
    v0 = swift_bridgeObjectRetain();
    v1 = sub_1C20E0A14(v0);
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = (_QWORD *)(v1 + 32);
      swift_bridgeObjectRetain();
      v4 = v2 - 1;
      do
      {
        v5 = v3[3];
        v6 = v3[4];
        __swift_project_boxed_opaque_existential_1(v3, v5);
        v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
        v8 = v7;
        v10 = v4-- != 0;
        if ((v7 & 1) == 0)
          break;
        v3 += 5;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_FileDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E1D8C);
}

uint64_t sub_1C20E1D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  ValueMetadata *v23;
  void (*v24)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v37 = a1 + 160;
    v35 = a1 + 56;
    v36 = a1 + 64;
    v12 = a1 + 104;
    v33 = a1 + 96;
    v34 = a1 + 136;
    v31 = a1 + 80;
    v32 = a1 + 88;
    v29 = a1 + 48;
    v30 = a1 + 72;
    v27 = a1 + 16;
    v28 = a1 + 32;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v18 = v27;
          goto LABEL_12;
        case 2:
          v18 = v28;
LABEL_12:
          swift_beginAccess();
          v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344);
          goto LABEL_14;
        case 3:
          v18 = v29;
          swift_beginAccess();
          v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 352);
LABEL_14:
          v17 = v11;
          v19(v18, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v14 = sub_1C20FFB94();
          v15 = v30;
          v16 = &type metadata for Google_Protobuf_DescriptorProto;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v14 = sub_1C2100318();
          v15 = v31;
          v16 = &type metadata for Google_Protobuf_EnumDescriptorProto;
LABEL_5:
          v17 = v11;
          v13(v15, v16, v14, a3, a4);
LABEL_6:
          v11 = v17;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v21 = sub_1C21006FC();
          v22 = v32;
          v23 = &type metadata for Google_Protobuf_ServiceDescriptorProto;
          goto LABEL_19;
        case 7:
          swift_beginAccess();
          v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v21 = sub_1C2100080();
          v22 = v33;
          v23 = &type metadata for Google_Protobuf_FieldDescriptorProto;
          goto LABEL_19;
        case 8:
          swift_beginAccess();
          v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          v21 = sub_1C20FF448();
          v22 = v12;
          v23 = &type metadata for Google_Protobuf_FileOptions;
LABEL_19:
          v20(v22, v23, v21, a3, a4);
          goto LABEL_21;
        case 9:
          swift_beginAccess();
          v24 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          v25 = sub_1C21013E4();
          v24(v34, &type metadata for Google_Protobuf_SourceCodeInfo, v25, a3, a4);
          goto LABEL_21;
        case 10:
          v26 = v35;
          goto LABEL_24;
        case 11:
          v26 = v36;
LABEL_24:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 88))(v26, a3, a4);
          goto LABEL_21;
        case 12:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v37, a3, a4);
LABEL_21:
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_FileDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E210C);
}

uint64_t sub_1C20E210C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  void (*v16)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v34;
  uint64_t (*v35)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (v10)
  {
    v11 = *v9;
    v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))a4[14];
    swift_bridgeObjectRetain();
    v12(v11, v10, 1, a3, a4);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 40);
  if (v13)
  {
    v14 = *(_QWORD *)(a1 + 32);
    v15 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))a4[14];
    swift_bridgeObjectRetain();
    v15(v14, v13, 2, a3, a4);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16))
    goto LABEL_10;
  v16 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))a4[32];
  v17 = swift_bridgeObjectRetain();
  v16(v17, 3, a3, a4);
  if (v5)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 72) + 16))
  {
    v18 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35];
    v19 = sub_1C20FFB94();
    v20 = swift_bridgeObjectRetain();
    v18(v20, 4, &type metadata for Google_Protobuf_DescriptorProto, v19, a3, a4);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 80) + 16)
    || (v22 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
        v23 = sub_1C2100318(),
        v24 = swift_bridgeObjectRetain(),
        v22(v24, 5, &type metadata for Google_Protobuf_EnumDescriptorProto, v23, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16)
      || (v25 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v26 = sub_1C21006FC(),
          v27 = swift_bridgeObjectRetain(),
          v25(v27, 6, &type metadata for Google_Protobuf_ServiceDescriptorProto, v26, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 96) + 16)
        || (v28 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
            v29 = sub_1C2100080(),
            v30 = swift_bridgeObjectRetain(),
            v28(v30, 7, &type metadata for Google_Protobuf_FieldDescriptorProto, v29, a3, a4),
            result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        v31 = *(_QWORD *)(a1 + 120);
        if (!v31
          || (v32 = *(_QWORD *)(a1 + 128),
              v45 = *(_OWORD *)(a1 + 104),
              v46 = v31,
              v47 = v32,
              v33 = (uint64_t (*)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17],
              v34 = sub_1C20FF448(),
              result = v33(&v45, 8, &type metadata for Google_Protobuf_FileOptions, v34, a3, a4),
              !v5))
        {
          swift_beginAccess();
          if (!*(_QWORD *)(a1 + 136)
            || (v48 = *(_QWORD *)(a1 + 136),
                v49 = *(_OWORD *)(a1 + 144),
                v35 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17],
                v36 = sub_1C21013E4(),
                result = v35(&v48, 9, &type metadata for Google_Protobuf_SourceCodeInfo, v36, a3, a4),
                !v5))
          {
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 56) + 16)
              || (v37 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))a4[21],
                  v38 = swift_bridgeObjectRetain(),
                  v37(v38, 10, a3, a4),
                  result = swift_bridgeObjectRelease(),
                  !v5))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(*(_QWORD *)(a1 + 64) + 16)
                || (v39 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))a4[21],
                    v40 = swift_bridgeObjectRetain(),
                    v39(v40, 11, a3, a4),
                    result = swift_bridgeObjectRelease(),
                    !v5))
              {
                v41 = (uint64_t *)(a1 + 160);
                result = swift_beginAccess();
                v42 = *(_QWORD *)(a1 + 168);
                if (v42)
                {
                  v43 = *v41;
                  v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))a4[14];
                  swift_bridgeObjectRetain();
                  v44(v43, v42, 12, a3, a4);
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_FileDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E25D0) & 1;
}

uint64_t sub_1C20E25D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  char v25;
  _QWORD *v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53[4];
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C21757C8(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v10 = a1[4];
    v11 = a1[5];
    swift_beginAccess();
    v12 = *(_QWORD *)(a2 + 40);
    if (v11)
    {
      if (v12)
      {
        if (v10 != *(_QWORD *)(a2 + 32) || v11 != v12)
        {
          v13 = sub_1C21757C8();
          result = 0;
          if ((v13 & 1) == 0)
            return result;
        }
LABEL_17:
        swift_beginAccess();
        v14 = (_QWORD *)a1[6];
        swift_beginAccess();
        if ((sub_1C20F76E4(v14, *(_QWORD **)(a2 + 48)) & 1) == 0)
          return 0;
        swift_beginAccess();
        v15 = a1[7];
        swift_beginAccess();
        if (!sub_1C20F6BCC(v15, *(_QWORD *)(a2 + 56)))
          return 0;
        swift_beginAccess();
        v16 = a1[8];
        swift_beginAccess();
        if (!sub_1C20F6BCC(v16, *(_QWORD *)(a2 + 64)))
          return 0;
        swift_beginAccess();
        v17 = (_QWORD *)a1[9];
        swift_beginAccess();
        v18 = *(_QWORD **)(a2 + 72);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_1C20FC788(v17, v18, sub_1C20E4220);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
          goto LABEL_46;
        swift_beginAccess();
        v20 = (_QWORD *)a1[10];
        swift_beginAccess();
        v21 = *(_QWORD **)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = sub_1C20FC788(v20, v21, sub_1C20E89CC);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
          goto LABEL_46;
        swift_beginAccess();
        v23 = (_QWORD *)a1[11];
        swift_beginAccess();
        v24 = *(_QWORD **)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = sub_1C20FC788(v23, v24, (uint64_t (*)(uint64_t, uint64_t))sub_1C20EACF8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
          goto LABEL_46;
        swift_beginAccess();
        v26 = (_QWORD *)a1[12];
        swift_beginAccess();
        v27 = *(_QWORD **)(a2 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28 = sub_1C20FC788(v26, v27, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E698C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
          goto LABEL_46;
        swift_beginAccess();
        v30 = a1[13];
        v29 = a1[14];
        v32 = a1[15];
        v31 = a1[16];
        swift_beginAccess();
        v34 = *(_QWORD *)(a2 + 104);
        v33 = *(_QWORD *)(a2 + 112);
        v36 = *(_QWORD *)(a2 + 120);
        v35 = *(_QWORD *)(a2 + 128);
        if (v32)
        {
          v54 = v30;
          v55 = v29;
          v56 = v32;
          v57 = v31;
          if (v36)
          {
            v53[0] = v34;
            v53[1] = v33;
            v53[2] = v36;
            v53[3] = v35;
            sub_1C20A8008(v30, v29);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1C20A8008(v30, v29);
            swift_bridgeObjectRetain();
            swift_retain();
            v37 = _s20SiriOntologyProtobuf07Google_C12_FileOptionsV2eeoiySbAC_ACtFZ_0(&v54, v53);
            sub_1C20A8058(v54, v55);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1C20EC0E4(v30, v29, v32);
            if ((v37 & 1) == 0)
              goto LABEL_46;
LABEL_29:
            swift_beginAccess();
            v39 = (_QWORD *)a1[17];
            v38 = a1[18];
            v40 = a1[19];
            swift_beginAccess();
            v42 = *(_QWORD **)(a2 + 136);
            v41 = *(_QWORD *)(a2 + 144);
            v43 = *(_QWORD *)(a2 + 152);
            if (v39)
            {
              if (v42)
              {
                sub_1C20EC11C((uint64_t)v39, v38, v40);
                sub_1C20EC11C((uint64_t)v39, v38, v40);
                sub_1C20EC11C((uint64_t)v42, v41, v43);
                if ((sub_1C20F6C84(v39, v42) & 1) != 0)
                {
                  sub_1C20A8008(v38, v40);
                  sub_1C20A8008(v41, v43);
                  sub_1C20FD650(v38, v40);
                  v45 = v44;
                  sub_1C20A8058(v41, v43);
                  sub_1C20A8058(v38, v40);
                  sub_1C20EC150((uint64_t)v42, v41, v43);
                  swift_bridgeObjectRelease();
                  sub_1C20A8058(v38, v40);
                  sub_1C20EC150((uint64_t)v39, v38, v40);
                  if ((v45 & 1) == 0)
                    goto LABEL_46;
                  goto LABEL_37;
                }
                sub_1C20EC150((uint64_t)v42, v41, v43);
                swift_bridgeObjectRelease();
                sub_1C20A8058(v38, v40);
                v49 = (uint64_t)v39;
                v50 = v38;
                v51 = v40;
LABEL_45:
                sub_1C20EC150(v49, v50, v51);
                goto LABEL_46;
              }
              swift_bridgeObjectRetain();
              sub_1C20A8008(v38, v40);
              swift_bridgeObjectRetain();
              sub_1C20A8008(v38, v40);
              swift_bridgeObjectRelease();
              sub_1C20A8058(v38, v40);
            }
            else if (!v42)
            {
LABEL_37:
              swift_beginAccess();
              v46 = a1[20];
              v47 = a1[21];
              swift_beginAccess();
              v48 = *(_QWORD *)(a2 + 168);
              if (!v47)
              {
                swift_bridgeObjectRetain();
                swift_release();
                swift_release();
                if (v48)
                {
                  swift_bridgeObjectRelease();
                  return 0;
                }
                return 1;
              }
              if (v48)
              {
                if (v46 == *(_QWORD *)(a2 + 160) && v47 == v48)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                }
                else
                {
                  v52 = sub_1C21757C8();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  result = 0;
                  if ((v52 & 1) == 0)
                    return result;
                }
                return 1;
              }
LABEL_46:
              swift_release();
              swift_release();
              return 0;
            }
            sub_1C20EC11C((uint64_t)v42, v41, v43);
            sub_1C20EC150((uint64_t)v39, v38, v40);
            v49 = (uint64_t)v42;
            v50 = v41;
            v51 = v43;
            goto LABEL_45;
          }
          sub_1C20A8008(v30, v29);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C20A8008(v30, v29);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C20A8058(v30, v29);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else if (!v36)
        {
          goto LABEL_29;
        }
        sub_1C20EC0AC(v34, v33, v36);
        sub_1C20EC0E4(v30, v29, v32);
        sub_1C20EC0E4(v34, v33, v36);
        goto LABEL_46;
      }
    }
    else if (!v12)
    {
      goto LABEL_17;
    }
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_FileDescriptorProto.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE60C);
}

uint64_t sub_1C20E2D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CB58, &qword_1EF75D860, a1);
}

unint64_t sub_1C20E2D88()
{
  return 0xD000000000000023;
}

uint64_t sub_1C20E2DA4(uint64_t a1, uint64_t a2)
{
  return sub_1C20EB0B4(a1, a2, (uint64_t (*)(uint64_t))sub_1C20E1830);
}

uint64_t sub_1C20E2DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E2DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FileDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E2DD8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB50 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D848;
  v3 = qword_1EF75D850;
  v4 = unk_1EF75D858;
  *a1 = qword_1EF75D840;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E2E54()
{
  uint64_t v0;

  return sub_1C21584E0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20E2E60(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE60C);
}

void sub_1C20E2E6C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE60C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20E2E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE60C);
}

uint64_t sub_1C20E2E84(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E25D0) & 1;
}

unint64_t static Google_Protobuf_DescriptorProto.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1C20E2EC0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4CF8, &qword_1EF75D868);
}

uint64_t static Google_Protobuf_DescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB60 != -1)
    swift_once();
  v2 = unk_1EF75D870;
  v3 = qword_1EF75D878;
  v4 = unk_1EF75D880;
  *a1 = qword_1EF75D868;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20E2F50()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  result = 0.0;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_DWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = v1;
  *(_QWORD *)(v0 + 128) = v1;
  qword_1EF75D888 = v0;
  return result;
}

uint64_t sub_1C20E2FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v4;
  *(_QWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 72) = v4;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_DWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = v4;
  *(_QWORD *)(v1 + 128) = v4;
  *(_OWORD *)(v1 + 80) = 0u;
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v2 + 56) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  *(_QWORD *)(v2 + 64) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 72);
  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  LODWORD(v6) = *(_DWORD *)(a1 + 112);
  swift_beginAccess();
  v17 = *(_QWORD *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 88);
  v19 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v2 + 80) = v13;
  *(_QWORD *)(v2 + 88) = v14;
  *(_QWORD *)(v2 + 96) = v15;
  *(_QWORD *)(v2 + 104) = v16;
  *(_DWORD *)(v2 + 112) = v6;
  sub_1C20EC1A4(v13, v14, v15);
  sub_1C20EC1EC(v17, v18, v19);
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 120);
  swift_beginAccess();
  *(_QWORD *)(v2 + 120) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v21 = *(_QWORD *)(a1 + 128);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v2 + 128) = v21;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C20E3378()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C20E33E4()
{
  sub_1C20E3378();
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_DescriptorProto.isInitialized.getter()
{
  return sub_1C20EA654((uint64_t (*)(uint64_t))sub_1C20E340C);
}

uint64_t sub_1C20E340C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1C20E0E24(v2, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(void))sub_1C2100080);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v6 = v5[3];
      v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0)
        goto LABEL_38;
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1C20E0E24(v8, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(void))sub_1C2100080);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = (_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v12 = v11[3];
      v13 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13) & 1) == 0)
        goto LABEL_38;
      v11 += 5;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1C20E0E24(v14, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(void))sub_1C20FFB94);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = (_QWORD *)(v15 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v18 = v17[3];
      v19 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v18);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19) & 1) == 0)
        goto LABEL_38;
      v17 += 5;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1C20E0E24(v20, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(void))sub_1C2100318);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = (_QWORD *)(v21 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v24 = v23[3];
      v25 = v23[4];
      __swift_project_boxed_opaque_existential_1(v23, v24);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25) & 1) == 0)
        goto LABEL_38;
      v23 += 5;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_1C20E0E24(v26, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(void))sub_1C20FFCE0);
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v29 = (_QWORD *)(v27 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v30 = v29[3];
      v31 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v30);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31) & 1) == 0)
        goto LABEL_38;
      v29 += 5;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_1C20E0E24(v32, (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(void))sub_1C21001CC);
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v35 = (_QWORD *)(v33 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v36 = v35[3];
      v37 = v35[4];
      __swift_project_boxed_opaque_existential_1(v35, v36);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v37 + 32))(v36, v37) & 1) == 0)
        break;
      v35 += 5;
      if (!--v34)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
LABEL_38:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v38 = a1[10];
  if (v38)
  {
    v40 = a1[11];
    v39 = a1[12];
    swift_bridgeObjectRetain();
    sub_1C20A8008(v40, v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v40, v39);
    swift_bridgeObjectRetain();
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
    {
      v41 = sub_1C20E0A14(v38);
      v42 = *(_QWORD *)(v41 + 16);
      if (!v42)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v38, v40, v39);
        sub_1C20EC1EC(v38, v40, v39);
        return 1;
      }
      v43 = (_QWORD *)(v41 + 32);
      while (1)
      {
        v44 = v43[3];
        v45 = v43[4];
        __swift_project_boxed_opaque_existential_1(v43, v44);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45) & 1) == 0)
          break;
        v43 += 5;
        if (!--v42)
          goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      v47 = v38;
      v48 = v40;
      v49 = v39;
    }
    else
    {
      v47 = v38;
      v48 = v40;
      v49 = v39;
    }
    sub_1C20EC1EC(v47, v48, v49);
    sub_1C20EC1EC(v38, v40, v39);
    return 0;
  }
  return 1;
}

uint64_t Google_Protobuf_MessageOptions.isInitialized.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  BOOL v11;

  v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
  {
    v2 = sub_1C20E0A14(v1);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (_QWORD *)(v2 + 32);
      v5 = v3 - 1;
      do
      {
        v6 = v4[3];
        v7 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v6);
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
        v9 = v8;
        v11 = v5-- != 0;
        if ((v8 & 1) == 0)
          break;
        v4 += 5;
      }
      while (v11);
    }
    else
    {
      v9 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t Google_Protobuf_DescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E3A3C);
}

uint64_t sub_1C20E3A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  void (*v12)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  void (*v17)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  ValueMetadata *v20;
  void (*v21)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v22;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(a1 + 16, a3, a4);
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v13 = sub_1C2100080();
          v14 = a1 + 32;
          v15 = &type metadata for Google_Protobuf_FieldDescriptorProto;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v13 = sub_1C20FFB94();
          v14 = a1 + 48;
          v15 = &type metadata for Google_Protobuf_DescriptorProto;
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v13 = sub_1C2100318();
          v14 = a1 + 56;
          v15 = &type metadata for Google_Protobuf_EnumDescriptorProto;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v13 = sub_1C20FFCE0();
          v14 = a1 + 64;
          v15 = &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange;
LABEL_5:
          v16 = v11;
          v12(v14, v15, v13, a3, a4);
LABEL_6:
          v11 = v16;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v18 = sub_1C2100080();
          v19 = a1 + 40;
          v20 = &type metadata for Google_Protobuf_FieldDescriptorProto;
          goto LABEL_17;
        case 7:
          swift_beginAccess();
          v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          v18 = sub_1C20FEC68();
          v19 = a1 + 80;
          v20 = &type metadata for Google_Protobuf_MessageOptions;
          goto LABEL_17;
        case 8:
          swift_beginAccess();
          v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v18 = sub_1C21001CC();
          v19 = a1 + 72;
          v20 = &type metadata for Google_Protobuf_OneofDescriptorProto;
LABEL_17:
          v17(v19, v20, v18, a3, a4);
          goto LABEL_19;
        case 9:
          swift_beginAccess();
          v21 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          v22 = sub_1C20FFE2C();
          v21(a1 + 120, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange, v22, a3, a4);
          goto LABEL_19;
        case 10:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(a1 + 128, a3, a4);
LABEL_19:
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_DescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E3DC0);
}

uint64_t sub_1C20E3DC0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  void (*v13)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  void (*v17)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  int v44;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (v10)
  {
    v11 = *v9;
    v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))a4[14];
    swift_bridgeObjectRetain();
    v12(v11, v10, 1, a3, a4);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v13 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35];
    v14 = sub_1C2100080();
    v15 = swift_bridgeObjectRetain();
    v13(v15, 2, &type metadata for Google_Protobuf_FieldDescriptorProto, v14, a3, a4);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 48) + 16)
    || (v17 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
        v18 = sub_1C20FFB94(),
        v19 = swift_bridgeObjectRetain(),
        v17(v19, 3, &type metadata for Google_Protobuf_DescriptorProto, v18, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 56) + 16)
      || (v20 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v21 = sub_1C2100318(),
          v22 = swift_bridgeObjectRetain(),
          v20(v22, 4, &type metadata for Google_Protobuf_EnumDescriptorProto, v21, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(*(_QWORD *)(a1 + 64) + 16)
        || (v23 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
            v24 = sub_1C20FFCE0(),
            v25 = swift_bridgeObjectRetain(),
            v23(v25, 5, &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, v24, a3, a4),
            result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16)
          || (v26 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
              v27 = sub_1C2100080(),
              v28 = swift_bridgeObjectRetain(),
              v26(v28, 6, &type metadata for Google_Protobuf_FieldDescriptorProto, v27, a3, a4),
              result = swift_bridgeObjectRelease(),
              !v5))
        {
          swift_beginAccess();
          if (!*(_QWORD *)(a1 + 80))
            goto LABEL_27;
          v29 = *(_DWORD *)(a1 + 112);
          v30 = *(_QWORD *)(a1 + 104);
          v41 = *(_QWORD *)(a1 + 80);
          v42 = *(_OWORD *)(a1 + 88);
          v43 = v30;
          v44 = v29;
          v31 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17];
          v32 = sub_1C20FEC68();
          result = v31(&v41, 7, &type metadata for Google_Protobuf_MessageOptions, v32, a3, a4);
          if (!v5)
          {
LABEL_27:
            swift_beginAccess();
            if (!*(_QWORD *)(*(_QWORD *)(a1 + 72) + 16)
              || (v33 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
                  v34 = sub_1C21001CC(),
                  v35 = swift_bridgeObjectRetain(),
                  v33(v35, 8, &type metadata for Google_Protobuf_OneofDescriptorProto, v34, a3, a4),
                  result = swift_bridgeObjectRelease(),
                  !v5))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(*(_QWORD *)(a1 + 120) + 16)
                || (v36 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
                    v37 = sub_1C20FFE2C(),
                    v38 = swift_bridgeObjectRetain(),
                    v36(v38, 9, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange, v37, a3, a4),
                    result = swift_bridgeObjectRelease(),
                    !v5))
              {
                result = swift_beginAccess();
                if (*(_QWORD *)(*(_QWORD *)(a1 + 128) + 16))
                {
                  v39 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))a4[32];
                  v40 = swift_bridgeObjectRetain();
                  v39(v40, 10, a3, a4);
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20E4220) & 1;
}

uint64_t sub_1C20E4220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  _QWORD *v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  _QWORD v53[4];
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v8 = 0;
    return v8 & 1;
  }
  if (!v6)
    goto LABEL_10;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = 0, (sub_1C21757C8() & 1) != 0))
  {
LABEL_11:
    swift_beginAccess();
    v9 = *(_QWORD **)(a1 + 32);
    swift_beginAccess();
    v10 = *(_QWORD **)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1C20FC788(v9, v10, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E698C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v12 = *(_QWORD **)(a1 + 40);
    swift_beginAccess();
    v13 = *(_QWORD **)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1C20FC788(v12, v13, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E698C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v15 = *(_QWORD **)(a1 + 48);
    swift_beginAccess();
    v16 = *(_QWORD **)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1C20FC788(v15, v16, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E4220);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v18 = *(_QWORD **)(a1 + 56);
    swift_beginAccess();
    v19 = *(_QWORD **)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1C20FC788(v18, v19, sub_1C20E89CC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v21 = *(_QWORD **)(a1 + 64);
    swift_beginAccess();
    v22 = *(_QWORD **)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1C20FC788(v21, v22, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E5234);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v24 = *(_QWORD **)(a1 + 72);
    swift_beginAccess();
    v25 = *(_QWORD **)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_1C20FA928(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
      goto LABEL_26;
    swift_beginAccess();
    v27 = *(_QWORD *)(a1 + 80);
    v28 = *(_QWORD *)(a1 + 88);
    v30 = *(_QWORD *)(a1 + 96);
    v29 = *(_QWORD *)(a1 + 104);
    v31 = *(_DWORD *)(a1 + 112);
    swift_beginAccess();
    v32 = v27;
    v34 = *(_QWORD *)(a2 + 80);
    v33 = *(_QWORD *)(a2 + 88);
    v36 = *(_QWORD *)(a2 + 96);
    v35 = *(_QWORD *)(a2 + 104);
    v37 = *(_DWORD *)(a2 + 112);
    if (v32)
    {
      v55 = v32;
      v56 = v28;
      v57 = v30;
      v58 = v29;
      v59 = v31;
      if (v34)
      {
        v53[0] = v34;
        v53[1] = v33;
        v53[2] = v36;
        v53[3] = v35;
        v54 = v37;
        v38 = v32;
        v39 = v28;
        sub_1C20EC1A4(v32, v28, v30);
        v40 = v38;
        swift_bridgeObjectRetain();
        sub_1C20A8008(v39, v30);
        swift_bridgeObjectRetain();
        v52 = _s20SiriOntologyProtobuf07Google_C15_MessageOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)v53);
        v41 = v56;
        v42 = v57;
        swift_bridgeObjectRelease();
        sub_1C20A8058(v41, v42);
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v40, v39, v30);
        if ((v52 & 1) == 0)
          goto LABEL_26;
        goto LABEL_22;
      }
      v47 = v32;
      sub_1C20EC1A4(v32, v28, v30);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v28, v30);
      swift_bridgeObjectRetain();
      v49 = v47;
      swift_bridgeObjectRelease();
      v50 = v28;
      v51 = v30;
      sub_1C20A8058(v28, v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      v49 = 0;
      v50 = v28;
      v51 = v30;
      if (!v34)
      {
LABEL_22:
        swift_beginAccess();
        v43 = *(_QWORD *)(a1 + 120);
        swift_beginAccess();
        v44 = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = sub_1C20FBD7C(v43, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
        {
          swift_beginAccess();
          v46 = *(_QWORD **)(a1 + 128);
          swift_beginAccess();
          v8 = sub_1C20F76E4(v46, *(_QWORD **)(a2 + 128));
LABEL_27:
          swift_release();
          swift_release();
          return v8 & 1;
        }
LABEL_26:
        v8 = 0;
        goto LABEL_27;
      }
    }
    sub_1C20EC1A4(v34, v33, v36);
    sub_1C20EC1EC(v49, v50, v51);
    sub_1C20EC1EC(v34, v33, v36);
    goto LABEL_26;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_DescriptorProto.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BEB38);
}

uint64_t sub_1C20E4814@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CB68, &qword_1EF75D888, a1);
}

unint64_t sub_1C20E4830()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1C20E484C(uint64_t a1, uint64_t a2)
{
  return sub_1C20EB0B4(a1, a2, (uint64_t (*)(uint64_t))sub_1C20E340C);
}

uint64_t sub_1C20E4858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E486C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_DescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E4880@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB60 != -1)
    swift_once();
  v2 = unk_1EF75D870;
  v3 = qword_1EF75D878;
  v4 = unk_1EF75D880;
  *a1 = qword_1EF75D868;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E48FC()
{
  uint64_t v0;

  return sub_1C21585B8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20E4908(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BEB38);
}

void sub_1C20E4914(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BEB38(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20E4920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BEB38);
}

uint64_t sub_1C20E492C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20E4220) & 1;
}

uint64_t sub_1C20E494C()
{
  uint64_t result;

  result = sub_1C21754F8();
  qword_1EF75D890 = 0xD00000000000001FLL;
  *(_QWORD *)algn_1EF75D898 = 0x80000001C217DB10;
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ExtensionRange.protoMessageName.getter()
{
  return sub_1C20E564C(&qword_1EF75CB70, &qword_1EF75D890);
}

uint64_t sub_1C20E49E0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4C30, &qword_1EF75D8A0);
}

uint64_t static Google_Protobuf_DescriptorProto.ExtensionRange._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB78 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D8A8;
  v3 = qword_1EF75D8B0;
  v4 = unk_1EF75D8B8;
  *a1 = qword_1EF75D8A0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E4A70(uint64_t a1)
{
  uint64_t v1;
  int v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *(_DWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 20) = 1;
  *(_DWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 28) = 1;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_beginAccess();
  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 20);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 20) = v4;
  swift_beginAccess();
  v5 = *(_DWORD *)(a1 + 24);
  LOBYTE(v3) = *(_BYTE *)(a1 + 28);
  swift_beginAccess();
  *(_DWORD *)(v1 + 24) = v5;
  *(_BYTE *)(v1 + 28) = v3;
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  sub_1C20EC1A4(v6, v7, v8);
  swift_release();
  swift_beginAccess();
  v10 = *(_QWORD *)(v1 + 32);
  v11 = *(_QWORD *)(v1 + 40);
  v12 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 40) = v7;
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v9;
  sub_1C20EC1EC(v10, v11, v12);
  return v1;
}

uint64_t sub_1C20E4BB4()
{
  uint64_t v0;

  sub_1C20EC1EC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass, 64, sub_1C20E4A70, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E4C14);
}

uint64_t sub_1C20E4C14(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v12 = a1 + 32;
    v13 = a1 + 24;
    v14 = a1 + 16;
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[10];
        v19 = v13;
LABEL_13:
        v17 = v11;
        v18(v19, a3, a4);
LABEL_5:
        v11 = v17;
        swift_endAccess();
        goto LABEL_6;
      }
      if (result == 1)
      {
        swift_beginAccess();
        v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[10];
        v19 = v14;
        goto LABEL_13;
      }
LABEL_6:
      result = v8(a3, a4);
    }
    swift_beginAccess();
    v15 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
    v16 = sub_1C20FE46C();
    v17 = v11;
    v15(v12, &type metadata for Google_Protobuf_ExtensionRangeOptions, v16, a3, a4);
    goto LABEL_5;
  }
  return result;
}

void sub_1C20E4D60(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  swift_beginAccess();
  if ((*(_BYTE *)(a4 + 20) & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a4 + 28) & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 32);
  if (v8)
  {
    v9 = *(_QWORD *)(a4 + 40);
    v10 = *(_QWORD *)(a4 + 48);
    v11 = *(_QWORD *)(a4 + 56);
    sub_1C2175834();
    v12 = *((_QWORD *)a1 + 8);
    v13 = a1[1];
    v18 = *a1;
    v19 = v13;
    v14 = a1[3];
    v20 = a1[2];
    v21 = v14;
    v22 = v12;
    swift_retain();
    sub_1C20EC1A4(v8, v9, v10);
    sub_1C20EFEE4((uint64_t)&v18, v8, v9, v10, v11);
    if (v4)
      MEMORY[0x1C3BB7EEC](v4);
    sub_1C20EC1EC(v8, v9, v10);
    v15 = v22;
    v16 = v19;
    *a1 = v18;
    a1[1] = v16;
    v17 = v21;
    a1[2] = v20;
    a1[3] = v17;
    *((_QWORD *)a1 + 8) = v15;
  }
  else
  {
    swift_retain();
  }
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_1C20E4EE8()
{
  uint64_t v0;
  uint64_t result;

  if ((v0 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void sub_1C20E4F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = v4;
  swift_beginAccess();
  if ((*(_BYTE *)(a4 + 20) & 1) != 0)
  {
    swift_retain();
  }
  else
  {
    v10 = *(_DWORD *)(a4 + 16);
    swift_retain();
    sub_1C212FA64(v10, 1uLL);
    if (v5)
    {
LABEL_8:
      swift_release();
      return;
    }
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a4 + 28) & 1) == 0)
  {
    sub_1C212FA64(*(_DWORD *)(a4 + 24), 2uLL);
    if (v5)
      goto LABEL_8;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a4 + 32);
  if (v11)
  {
    v13 = *(_QWORD *)(a4 + 48);
    v12 = *(_QWORD *)(a4 + 56);
    v14 = *(_QWORD *)(a4 + 40);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v14, v13);
    swift_bridgeObjectRetain();
    sub_1C2160D14(v11, v14, v13, v12, 3uLL);
    sub_1C20EC1EC(v11, v14, v13);
    if (v5)
      goto LABEL_8;
  }
  swift_release();
  sub_1C2122EF0(a1, a2, a3);
}

void Google_Protobuf_DescriptorProto.ExtensionRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E50E4);
}

uint64_t sub_1C20E50E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v8 = (unsigned int *)(a1 + 16);
  swift_beginAccess();
  if ((*(_BYTE *)(a1 + 20) & 1) != 0
    || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 24))(*v8, 1, a3, a4), !v4))
  {
    swift_beginAccess();
    if ((*(_BYTE *)(a1 + 28) & 1) != 0
      || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 24), 2, a3, a4), !v4))
    {
      result = swift_beginAccess();
      if (*(_QWORD *)(a1 + 32))
      {
        v10 = *(_QWORD *)(a1 + 56);
        v13 = *(_QWORD *)(a1 + 32);
        v14 = *(_OWORD *)(a1 + 40);
        v15 = v10;
        v11 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        v12 = sub_1C20FE46C();
        return v11(&v13, 3, &type metadata for Google_Protobuf_ExtensionRangeOptions, v12, a3, a4);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ExtensionRange.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E5234) & 1;
}

BOOL sub_1C20E5234(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  char v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22[4];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  swift_beginAccess();
  v4 = *(_DWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 20);
  swift_beginAccess();
  v6 = *(_BYTE *)(a2 + 20);
  if ((v5 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      return 0;
  }
  else
  {
    if (v4 != *(_DWORD *)(a2 + 16))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v7 = *(_DWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 28);
  swift_beginAccess();
  v9 = *(_BYTE *)(a2 + 28);
  if ((v8 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 28))
      return 0;
  }
  else
  {
    if (v7 != *(_DWORD *)(a2 + 24))
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  v15 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 56);
  if (v10)
  {
    v23 = v10;
    v24 = v11;
    v25 = v13;
    v26 = v12;
    if (v15)
    {
      v22[0] = v15;
      v22[1] = v14;
      v22[2] = v17;
      v22[3] = v16;
      sub_1C20EC1A4(v10, v11, v13);
      sub_1C20EC1A4(v10, v11, v13);
      v18 = sub_1C20FE8B8(&v23, v22);
      v19 = v24;
      v20 = v25;
      swift_bridgeObjectRelease();
      sub_1C20A8058(v19, v20);
      swift_bridgeObjectRelease();
      sub_1C20EC1EC(v10, v11, v13);
      return (v18 & 1) != 0;
    }
    sub_1C20EC1A4(v10, v11, v13);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v11, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v11, v13);
    swift_bridgeObjectRelease();
  }
  else if (!v15)
  {
    return 1;
  }
  sub_1C20EC1A4(v15, v14, v17);
  sub_1C20EC1EC(v10, v11, v13);
  sub_1C20EC1EC(v15, v14, v17);
  return 0;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.hashValue.getter()
{
  return sub_1C20E9FF8(sub_1C20E4D60);
}

uint64_t sub_1C20E548C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20EBE40((void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass, a1);
}

uint64_t sub_1C20E54A0(uint64_t a1, uint64_t a2)
{
  return sub_1C20E57BC(a1, a2, &qword_1EF75CB70, &qword_1EF75D890);
}

uint64_t sub_1C20E54C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ExtensionRange.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E54D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_DescriptorProto.ExtensionRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E54EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB78 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D8A8;
  v3 = qword_1EF75D8B0;
  v4 = unk_1EF75D8B8;
  *a1 = qword_1EF75D8A0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E5568()
{
  uint64_t v0;

  return sub_1C2158690(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20E5574(uint64_t a1, uint64_t a2)
{
  return sub_1C20EA194(a1, a2, sub_1C20E4D60);
}

double sub_1C20E5580(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA24C(a1, a2, a3, sub_1C20E4D60);
}

uint64_t sub_1C20E558C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA2D8(a1, a2, a3, sub_1C20E4D60);
}

uint64_t sub_1C20E5598(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E5234) & 1;
}

uint64_t sub_1C20E55B8()
{
  uint64_t result;

  result = sub_1C21754F8();
  qword_1EF75D8C0 = 0xD00000000000001FLL;
  *(_QWORD *)algn_1EF75D8C8 = 0x80000001C217DB10;
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ReservedRange.protoMessageName.getter()
{
  return sub_1C20E564C(&qword_1EF75CB80, &qword_1EF75D8C0);
}

uint64_t sub_1C20E564C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C20E569C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4BA0, &qword_1EF75D8D0);
}

uint64_t static Google_Protobuf_DescriptorProto.ReservedRange._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB88 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D8D8;
  v3 = qword_1EF75D8E0;
  v4 = unk_1EF75D8E8;
  *a1 = qword_1EF75D8D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20E9000(a1, a2, a3);
}

double Google_Protobuf_DescriptorProto.ReservedRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_1C20E90B4(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ReservedRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C20FDEA4(a1, a2) & 1;
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.hashValue.getter()
{
  return sub_1C20E918C((void (*)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C20BEB34);
}

double sub_1C20E5778@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  return result;
}

uint64_t sub_1C20E579C(uint64_t a1, uint64_t a2)
{
  return sub_1C20E57BC(a1, a2, &qword_1EF75CB80, &qword_1EF75D8C0);
}

uint64_t sub_1C20E57BC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v5;

  if (*a3 != -1)
    swift_once();
  v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1C20E5810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ReservedRange.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C20E5824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ReservedRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E5838@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB88 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D8D8;
  v3 = qword_1EF75D8E0;
  v4 = unk_1EF75D8E8;
  *a1 = qword_1EF75D8D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E58B4(uint64_t a1, uint64_t a2)
{
  return sub_1C20E92C0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t))sub_1C2158768);
}

uint64_t sub_1C20E58C0(uint64_t a1, uint64_t a2)
{
  return sub_1C20E92FC(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C20BEB34);
}

uint64_t sub_1C20E58CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20E9388(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, unint64_t, unint64_t))sub_1C20BEB34);
}

uint64_t sub_1C20E58D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20E93C4(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C20BEB34);
}

uint64_t sub_1C20E58E4(uint64_t a1, uint64_t a2)
{
  return sub_1C20FDEA4(a1, a2) & 1;
}

unint64_t static Google_Protobuf_ExtensionRangeOptions.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C20E5918()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6000, &qword_1EF75D8F0);
}

uint64_t static Google_Protobuf_ExtensionRangeOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB90 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D8F8;
  v3 = qword_1EF75D900;
  v4 = unk_1EF75D908;
  *a1 = qword_1EF75D8F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ExtensionRangeOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EFDD0(a1, a2, a3, (uint64_t (*)(void))sub_1C20FE46C, (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions);
}

uint64_t sub_1C20E59CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20EFEE4(a1, a2, a3, a4, a5);
}

void Google_Protobuf_ExtensionRangeOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20EFFD0(a1, a2, a3);
}

uint64_t static Google_Protobuf_ExtensionRangeOptions.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20FE8B8(a1, a2) & 1;
}

unint64_t sub_1C20E5A10()
{
  return 0xD000000000000025;
}

uint64_t sub_1C20E5A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ExtensionRangeOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E5A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_OneofOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E5A58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB90 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D8F8;
  v3 = qword_1EF75D900;
  v4 = unk_1EF75D908;
  *a1 = qword_1EF75D8F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E5AD4()
{
  uint64_t v0;

  return sub_1C215878C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t static Google_Protobuf_FieldDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1C20E5B0C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5D20, &qword_1EF75D910);
}

uint64_t static Google_Protobuf_FieldDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB98 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D918;
  v3 = qword_1EF75D920;
  v4 = unk_1EF75D928;
  *a1 = qword_1EF75D910;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20E5B9C()
{
  uint64_t v0;
  double result;

  type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_DWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 36) = 1;
  *(_WORD *)(v0 + 37) = 4611;
  result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_DWORD *)(v0 + 88) = 0;
  *(_BYTE *)(v0 + 92) = 1;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_QWORD *)(v0 + 142) = 0;
  qword_1EF75D930 = v0;
  return result;
}

uint64_t sub_1C20E5C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int16 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_WORD *)(v1 + 37) = 4611;
  *(_DWORD *)(v1 + 88) = 0;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_BYTE *)(v1 + 92) = 1;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_QWORD *)(v1 + 142) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5 = *(_DWORD *)(a1 + 32);
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  swift_beginAccess();
  *(_DWORD *)(v1 + 32) = v5;
  *(_BYTE *)(v1 + 36) = v3;
  swift_beginAccess();
  LOBYTE(v5) = *(_BYTE *)(a1 + 37);
  swift_beginAccess();
  *(_BYTE *)(v1 + 37) = v5;
  swift_beginAccess();
  LOBYTE(v5) = *(_BYTE *)(a1 + 38);
  swift_beginAccess();
  *(_BYTE *)(v1 + 38) = v5;
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = v7;
  *(_QWORD *)(v1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = v9;
  *(_QWORD *)(v1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = v11;
  *(_QWORD *)(v1 + 80) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v10) = *(_DWORD *)(a1 + 88);
  LOBYTE(v3) = *(_BYTE *)(a1 + 92);
  swift_beginAccess();
  *(_DWORD *)(v1 + 88) = v10;
  *(_BYTE *)(v1 + 92) = v3;
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 104);
  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = v13;
  *(_QWORD *)(v1 + 104) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 112);
  v15 = *(_QWORD *)(a1 + 120);
  v16 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 136);
  v18 = *(_WORD *)(a1 + 148);
  v19 = *(_DWORD *)(a1 + 144);
  sub_1C20EC1A4(v14, v15, v16);
  swift_release();
  swift_beginAccess();
  v20 = *(_QWORD *)(v1 + 112);
  v21 = *(_QWORD *)(v1 + 120);
  v22 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 112) = v14;
  *(_QWORD *)(v1 + 120) = v15;
  *(_QWORD *)(v1 + 128) = v16;
  *(_QWORD *)(v1 + 136) = v17;
  *(_DWORD *)(v1 + 144) = v19;
  *(_WORD *)(v1 + 148) = v18;
  sub_1C20EC1EC(v20, v21, v22);
  return v1;
}

uint64_t sub_1C20E5F9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_FieldDescriptorProto.isInitialized.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v1 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v2 = v1[14];
  if (v2)
  {
    v3 = v1[15];
    v4 = v1[16];
    swift_retain();
    sub_1C20EC1A4(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      v13 = v2;
      v14 = v3;
      v15 = v4;
LABEL_14:
      sub_1C20EC1EC(v13, v14, v15);
      v16 = 0;
      goto LABEL_15;
    }
    v5 = sub_1C20E0A14(v2);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v18 = v4;
      v7 = (_QWORD *)(v5 + 32);
      while (1)
      {
        v9 = v7[3];
        v8 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) & 1) == 0)
          break;
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          v10 = v2;
          v11 = v3;
          v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      v13 = v2;
      v14 = v3;
      v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    v10 = v2;
    v11 = v3;
    v12 = v4;
LABEL_11:
    sub_1C20EC1EC(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t Google_Protobuf_FieldOptions.isInitialized.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  BOOL v11;

  v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
  {
    v2 = sub_1C20E0A14(v1);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (_QWORD *)(v2 + 32);
      v5 = v3 - 1;
      do
      {
        v6 = v4[3];
        v7 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v6);
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
        v9 = v8;
        v11 = v5-- != 0;
        if ((v8 & 1) == 0)
          break;
        v4 += 5;
      }
      while (v11);
    }
    else
    {
      v9 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t Google_Protobuf_FieldDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E626C);
}

uint64_t sub_1C20E626C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  void (*v12)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;
  void (*v20)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v21;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v17 = a1 + 16;
          goto LABEL_12;
        case 2:
          v17 = a1 + 56;
LABEL_12:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[43];
          goto LABEL_14;
        case 3:
          v17 = a1 + 32;
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[10];
LABEL_14:
          v16 = v11;
          v18(v17, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          v12 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[49];
          v13 = sub_1C2104D24();
          v14 = a1 + 37;
          v15 = &type metadata for Google_Protobuf_FieldDescriptorProto.Label;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          v12 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[49];
          v13 = sub_1C2104CE0();
          v14 = a1 + 38;
          v15 = &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum;
LABEL_5:
          v16 = v11;
          v12(v14, v15, v13, a3, a4);
LABEL_6:
          v11 = v16;
          swift_endAccess();
          break;
        case 6:
          v19 = a1 + 40;
          goto LABEL_21;
        case 7:
          swift_beginAccess();
          ((void (*)(uint64_t, uint64_t, _QWORD *))a4[43])(a1 + 72, a3, a4);
          goto LABEL_22;
        case 8:
          swift_beginAccess();
          v20 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
          v21 = sub_1C20FECAC();
          v20(a1 + 112, &type metadata for Google_Protobuf_FieldOptions, v21, a3, a4);
          swift_endAccess();
          break;
        case 9:
          swift_beginAccess();
          ((void (*)(uint64_t, uint64_t, _QWORD *))a4[10])(a1 + 88, a3, a4);
          goto LABEL_22;
        case 10:
          v19 = a1 + 96;
LABEL_21:
          swift_beginAccess();
          ((void (*)(uint64_t, uint64_t, _QWORD *))a4[43])(v19, a3, a4);
LABEL_22:
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_FieldDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E6550);
}

uint64_t sub_1C20E6550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v17)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int8x16_t v30;
  uint64x2_t v31;
  int16x8_t v32;
  uint64_t (*v33)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  unsigned __int32 v43;
  char v44;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (v10)
  {
    v11 = *v9;
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
    swift_bridgeObjectRetain();
    v12(v11, v10, 1, a3, a4);
    if (v5)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 64);
  if (!v14
    || (v15 = *(_QWORD *)(a1 + 56),
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v16(v15, v14, 2, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if ((*(_BYTE *)(a1 + 36) & 1) != 0
      || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 32), 3, a3, a4), !v5))
    {
      swift_beginAccess();
      if (*(_BYTE *)(a1 + 37) == 3
        || (LOBYTE(v39) = *(_BYTE *)(a1 + 37),
            v17 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 128),
            v18 = sub_1C2104D24(),
            result = v17(&v39, 4, &type metadata for Google_Protobuf_FieldDescriptorProto.Label, v18, a3, a4),
            !v5))
      {
        swift_beginAccess();
        if (*(_BYTE *)(a1 + 38) == 18
          || (LOBYTE(v39) = *(_BYTE *)(a1 + 38),
              v19 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 128),
              v20 = sub_1C2104CE0(),
              result = v19(&v39, 5, &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum, v20, a3, a4),
              !v5))
        {
          swift_beginAccess();
          v21 = *(_QWORD *)(a1 + 48);
          if (!v21
            || (v22 = *(_QWORD *)(a1 + 40),
                v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
                swift_bridgeObjectRetain(),
                v23(v22, v21, 6, a3, a4),
                result = swift_bridgeObjectRelease(),
                !v5))
          {
            swift_beginAccess();
            v24 = *(_QWORD *)(a1 + 80);
            if (!v24
              || (v25 = *(_QWORD *)(a1 + 72),
                  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
                  swift_bridgeObjectRetain(),
                  v26(v25, v24, 7, a3, a4),
                  result = swift_bridgeObjectRelease(),
                  !v5))
            {
              swift_beginAccess();
              if (!*(_QWORD *)(a1 + 112))
                goto LABEL_25;
              v27 = *(unsigned __int16 *)(a1 + 148);
              v28 = *(unsigned int *)(a1 + 144);
              v29 = *(_QWORD *)(a1 + 136);
              v39 = *(_QWORD *)(a1 + 112);
              v40 = *(_OWORD *)(a1 + 120);
              v41 = v29;
              v42 = v28;
              v30.i64[0] = 0xFFFFFFFFFFFFLL;
              v30.i64[1] = 0xFFFFFFFFFFFFLL;
              v31 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v28 | (unint64_t)(v27 << 32)), v30);
              v32 = (int16x8_t)vshlq_u64(v31, (uint64x2_t)xmmword_1C2177150);
              *(int32x2_t *)v31.i8 = vmovn_s64((int64x2_t)vshlq_u64(v31, (uint64x2_t)xmmword_1C2177140));
              *(int32x2_t *)v32.i8 = vmovn_s64((int64x2_t)v32);
              v32.i16[1] = v32.i16[2];
              v32.i16[2] = v31.i16[0];
              v32.i16[3] = v31.i16[2];
              v43 = vmovn_s16(v32).u32[0];
              v44 = BYTE1(v27);
              v33 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
              v34 = sub_1C20FECAC();
              result = v33(&v39, 8, &type metadata for Google_Protobuf_FieldOptions, v34, a3, a4);
              if (!v5)
              {
LABEL_25:
                swift_beginAccess();
                if ((*(_BYTE *)(a1 + 92) & 1) != 0
                  || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 88), 9, a3, a4), !v5))
                {
                  v35 = (uint64_t *)(a1 + 96);
                  result = swift_beginAccess();
                  v36 = *(_QWORD *)(a1 + 104);
                  if (v36)
                  {
                    v37 = *v35;
                    v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
                    swift_bridgeObjectRetain();
                    v38(v37, v36, 10, a3, a4);
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_FieldDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E698C) & 1;
}

BOOL sub_1C20E698C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  int v10;
  char v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int8x16_t v46;
  uint64x2_t v47;
  int16x8_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v52[4];
  char v53;
  unsigned __int32 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  __int16 v61;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C21757C8(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v10 = *(_DWORD *)(a1 + 32);
    v11 = *(_BYTE *)(a1 + 36);
    swift_beginAccess();
    v12 = *(_BYTE *)(a2 + 36);
    if ((v11 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 36))
        return 0;
    }
    else
    {
      if (v10 != *(_DWORD *)(a2 + 32))
        v12 = 1;
      if ((v12 & 1) != 0)
        return 0;
    }
    swift_beginAccess();
    v13 = *(unsigned __int8 *)(a1 + 37);
    swift_beginAccess();
    v14 = *(unsigned __int8 *)(a2 + 37);
    if (v13 == 3)
    {
      if (v14 != 3)
        return 0;
    }
    else
    {
      result = 0;
      if (v14 == 3 || v13 != v14)
        return result;
    }
    swift_beginAccess();
    v15 = *(unsigned __int8 *)(a1 + 38);
    swift_beginAccess();
    v16 = *(unsigned __int8 *)(a2 + 38);
    if (v15 == 18)
    {
      if (v16 != 18)
        return 0;
    }
    else
    {
      result = 0;
      if (v16 == 18 || v15 != v16)
        return result;
    }
    swift_beginAccess();
    v17 = *(_QWORD *)(a1 + 40);
    v18 = *(_QWORD *)(a1 + 48);
    swift_beginAccess();
    v19 = *(_QWORD *)(a2 + 48);
    if (v18)
    {
      if (!v19)
        return 0;
      if (v17 != *(_QWORD *)(a2 + 40) || v18 != v19)
      {
        v20 = sub_1C21757C8();
        result = 0;
        if ((v20 & 1) == 0)
          return result;
      }
    }
    else if (v19)
    {
      return 0;
    }
    swift_beginAccess();
    v21 = *(_QWORD *)(a1 + 56);
    v22 = *(_QWORD *)(a1 + 64);
    swift_beginAccess();
    v23 = *(_QWORD *)(a2 + 64);
    if (v22)
    {
      if (!v23)
        return 0;
      if (v21 != *(_QWORD *)(a2 + 56) || v22 != v23)
      {
        v24 = sub_1C21757C8();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    swift_beginAccess();
    v25 = *(_QWORD *)(a1 + 72);
    v26 = *(_QWORD *)(a1 + 80);
    swift_beginAccess();
    v27 = *(_QWORD *)(a2 + 80);
    if (v26)
    {
      if (!v27)
        return 0;
      if (v25 != *(_QWORD *)(a2 + 72) || v26 != v27)
      {
        v28 = sub_1C21757C8();
        result = 0;
        if ((v28 & 1) == 0)
          return result;
      }
    }
    else if (v27)
    {
      return 0;
    }
    swift_beginAccess();
    v29 = *(_DWORD *)(a1 + 88);
    v30 = *(_BYTE *)(a1 + 92);
    swift_beginAccess();
    v31 = *(_BYTE *)(a2 + 92);
    if ((v30 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 92))
        return 0;
    }
    else
    {
      if (v29 != *(_DWORD *)(a2 + 88))
        v31 = 1;
      if ((v31 & 1) != 0)
        return 0;
    }
    swift_beginAccess();
    v32 = *(_QWORD *)(a1 + 96);
    v33 = *(_QWORD *)(a1 + 104);
    swift_beginAccess();
    v34 = *(_QWORD *)(a2 + 104);
    if (v33)
    {
      if (!v34)
        return 0;
      if (v32 != *(_QWORD *)(a2 + 96) || v33 != v34)
      {
        v35 = sub_1C21757C8();
        result = 0;
        if ((v35 & 1) == 0)
          return result;
      }
    }
    else if (v34)
    {
      return 0;
    }
    swift_beginAccess();
    v36 = *(_QWORD *)(a1 + 112);
    v37 = *(_QWORD *)(a1 + 120);
    v39 = *(_QWORD *)(a1 + 128);
    v38 = *(_QWORD *)(a1 + 136);
    v40 = *(unsigned int *)(a1 + 144) | ((unint64_t)*(unsigned __int16 *)(a1 + 148) << 32);
    swift_beginAccess();
    v42 = *(_QWORD *)(a2 + 112);
    v41 = *(_QWORD *)(a2 + 120);
    v44 = *(_QWORD *)(a2 + 128);
    v43 = *(_QWORD *)(a2 + 136);
    v45 = *(unsigned int *)(a2 + 144) | ((unint64_t)*(unsigned __int16 *)(a2 + 148) << 32);
    if (v36)
    {
      v56 = v36;
      v57 = v37;
      v58 = v39;
      v59 = v38;
      v60 = v40;
      v61 = WORD2(v40);
      if (v42)
      {
        v46.i64[0] = 0xFFFFFFFFFFFFLL;
        v46.i64[1] = 0xFFFFFFFFFFFFLL;
        v47 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v45), v46);
        v48 = (int16x8_t)vshlq_u64(v47, (uint64x2_t)xmmword_1C2177150);
        v52[0] = v42;
        v52[1] = v41;
        v52[2] = v44;
        v52[3] = v43;
        v53 = v45;
        *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)vshlq_u64(v47, (uint64x2_t)xmmword_1C2177140));
        *(int32x2_t *)v48.i8 = vmovn_s64((int64x2_t)v48);
        v48.i16[1] = v48.i16[2];
        v48.i16[2] = v47.i16[0];
        v48.i16[3] = v47.i16[2];
        v54 = vmovn_s16(v48).u32[0];
        v55 = BYTE5(v45);
        swift_bridgeObjectRetain();
        sub_1C20A8008(v37, v39);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C20A8008(v37, v39);
        swift_bridgeObjectRetain();
        v49 = _s20SiriOntologyProtobuf07Google_C13_FieldOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v56, (uint64_t)v52);
        v50 = v57;
        v51 = v58;
        swift_bridgeObjectRelease();
        sub_1C20A8058(v50, v51);
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v36, v37, v39);
        return (v49 & 1) != 0;
      }
      sub_1C20EC1A4(v36, v37, v39);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v37, v39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v37, v39);
      swift_bridgeObjectRelease();
    }
    else if (!v42)
    {
      return 1;
    }
    sub_1C20EC1A4(v42, v41, v44);
    sub_1C20EC1EC(v36, v37, v39);
    sub_1C20EC1EC(v42, v41, v44);
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE600);
}

uint64_t sub_1C20E6F5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CBA0, &qword_1EF75D930, a1);
}

unint64_t sub_1C20E6F78()
{
  return 0xD000000000000024;
}

uint64_t sub_1C20E6F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E6FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FieldDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E6FC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CB98 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D918;
  v3 = qword_1EF75D920;
  v4 = unk_1EF75D928;
  *a1 = qword_1EF75D910;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E703C()
{
  uint64_t v0;

  return sub_1C21587B0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20E7048(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE600);
}

void sub_1C20E7054(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE600(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20E7060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE600);
}

uint64_t sub_1C20E706C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E698C) & 1;
}

uint64_t sub_1C20E708C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5910, &qword_1EF75D938);
}

uint64_t static Google_Protobuf_FieldDescriptorProto.TypeEnum._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBA8 != -1)
    swift_once();
  v2 = unk_1EF75D940;
  v3 = qword_1EF75D948;
  v4 = unk_1EF75D950;
  *a1 = qword_1EF75D938;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E711C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBA8 != -1)
    swift_once();
  v2 = unk_1EF75D940;
  v3 = qword_1EF75D948;
  v4 = unk_1EF75D950;
  *a1 = qword_1EF75D938;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E7198()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5848, &qword_1EF75D958);
}

uint64_t static Google_Protobuf_FieldDescriptorProto.Label._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBB0 != -1)
    swift_once();
  v2 = unk_1EF75D960;
  v3 = qword_1EF75D968;
  v4 = unk_1EF75D970;
  *a1 = qword_1EF75D958;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E7228@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBB0 != -1)
    swift_once();
  v2 = unk_1EF75D960;
  v3 = qword_1EF75D968;
  v4 = unk_1EF75D970;
  *a1 = qword_1EF75D958;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_OneofDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1C20E72C0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5F70, &qword_1EF75D978);
}

uint64_t static Google_Protobuf_OneofDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBB8 != -1)
    swift_once();
  v2 = unk_1EF75D980;
  v3 = qword_1EF75D988;
  v4 = unk_1EF75D990;
  *a1 = qword_1EF75D978;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E7350()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance();
}

uint64_t _s20SiriOntologyProtobuf07Google_C16_DescriptorProtoV14ExtensionRangeV13isInitializedSbvg_0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v1 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v2 = v1[4];
  if (v2)
  {
    v3 = v1[5];
    v4 = v1[6];
    swift_retain();
    sub_1C20EC1A4(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      v13 = v2;
      v14 = v3;
      v15 = v4;
LABEL_14:
      sub_1C20EC1EC(v13, v14, v15);
      v16 = 0;
      goto LABEL_15;
    }
    v5 = sub_1C20E0A14(v2);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v18 = v4;
      v7 = (_QWORD *)(v5 + 32);
      while (1)
      {
        v8 = v7[3];
        v9 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v8);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9) & 1) == 0)
          break;
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          v10 = v2;
          v11 = v3;
          v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      v13 = v2;
      v14 = v3;
      v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    v10 = v2;
    v11 = v3;
    v12 = v4;
LABEL_11:
    sub_1C20EC1EC(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t _s20SiriOntologyProtobuf07Google_C22_ExtensionRangeOptionsV13isInitializedSbvg_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  BOOL v11;

  v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
  {
    v2 = sub_1C20E0A14(v1);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (_QWORD *)(v2 + 32);
      v5 = v3 - 1;
      do
      {
        v6 = v4[3];
        v7 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v6);
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
        v9 = v8;
        v11 = v5-- != 0;
        if ((v8 & 1) == 0)
          break;
        v4 += 5;
      }
      while (v11);
    }
    else
    {
      v9 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t Google_Protobuf_OneofDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1C20FE068();
  v6 = swift_retain();
  sub_1C20E7618(v6, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C20E7618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v12 = a1 + 32;
    v13 = a1 + 16;
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        swift_beginAccess();
        v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v13, a3, a4);
        goto LABEL_5;
      }
LABEL_6:
      result = v8(a3, a4);
    }
    swift_beginAccess();
    v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    v15 = sub_1C20FED78();
    v16 = v11;
    v14(v12, &type metadata for Google_Protobuf_OneofOptions, v15, a3, a4);
LABEL_5:
    v11 = v16;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

void sub_1C20E773C(__int128 *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  swift_beginAccess();
  if (a4[3])
  {
    sub_1C2175834();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  v8 = a4[4];
  if (v8)
  {
    v9 = a4[5];
    v10 = a4[6];
    v11 = a4[7];
    sub_1C2175834();
    v12 = *((_QWORD *)a1 + 8);
    v13 = a1[1];
    v18 = *a1;
    v19 = v13;
    v14 = a1[3];
    v20 = a1[2];
    v21 = v14;
    v22 = v12;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v9, v10);
    swift_bridgeObjectRetain();
    sub_1C20EFEE4((uint64_t)&v18, v8, v9, v10, v11);
    if (v4)
      MEMORY[0x1C3BB7EEC](v4);
    sub_1C20EC1EC(v8, v9, v10);
    v15 = v22;
    v16 = v19;
    *a1 = v18;
    a1[1] = v16;
    v17 = v21;
    a1[2] = v20;
    a1[3] = v17;
    *((_QWORD *)a1 + 8) = v15;
  }
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_1C20E78AC()
{
  uint64_t v0;
  uint64_t result;

  if ((v0 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void sub_1C20E790C(char **a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  unint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  swift_beginAccess();
  v9 = a4[3];
  if (v9)
  {
    v10 = a4[2];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v11);
    sub_1C20AAAD0(v10, v9);
    v12 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1C214E1A4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
      *a1 = v12;
    }
    v15 = *((_QWORD *)v12 + 2);
    v14 = *((_QWORD *)v12 + 3);
    if (v15 >= v14 >> 1)
    {
      v12 = sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v12);
      *a1 = v12;
    }
    *((_QWORD *)v12 + 2) = v15 + 1;
    v12[v15 + 32] = 10;
    swift_bridgeObjectRelease();
    *a1 = v12;
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  v16 = a4[4];
  if (!v16)
    goto LABEL_11;
  v18 = a4[6];
  v17 = a4[7];
  v19 = a4[5];
  swift_bridgeObjectRetain();
  sub_1C20A8008(v19, v18);
  swift_bridgeObjectRetain();
  sub_1C21609A4(v16, v19, v18, v17, 2uLL);
  sub_1C20EC1EC(v16, v19, v18);
  if (v4)
  {
    swift_release();
  }
  else
  {
LABEL_11:
    swift_release();
    sub_1C2122EF0((uint64_t)a1, a2, a3);
  }
}

void Google_Protobuf_OneofDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E7B0C);
}

uint64_t sub_1C20E7B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10
    || (v11 = *v9,
        v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    result = swift_beginAccess();
    if (*(_QWORD *)(a1 + 32))
    {
      v14 = *(_QWORD *)(a1 + 56);
      v17 = *(_QWORD *)(a1 + 32);
      v18 = *(_OWORD *)(a1 + 40);
      v19 = v14;
      v15 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
      v16 = sub_1C20FED78();
      return v15(&v17, 2, &type metadata for Google_Protobuf_OneofOptions, v16, a3, a4);
    }
  }
  return result;
}

uint64_t static Google_Protobuf_OneofDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E7C38) & 1;
}

BOOL sub_1C20E7C38(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21[4];
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = a2[3];
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = v4 == a2[2] && v5 == v6;
  if (v7 || (v8 = sub_1C21757C8(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v10 = a1[4];
    v11 = a1[5];
    v13 = a1[6];
    v12 = a1[7];
    swift_beginAccess();
    v15 = a2[4];
    v14 = a2[5];
    v17 = a2[6];
    v16 = a2[7];
    if (v10)
    {
      v22 = v10;
      v23 = v11;
      v24 = v13;
      v25 = v12;
      if (v15)
      {
        v21[0] = v15;
        v21[1] = v14;
        v21[2] = v17;
        v21[3] = v16;
        sub_1C20EC1A4(v10, v11, v13);
        swift_bridgeObjectRetain();
        sub_1C20A8008(v11, v13);
        swift_bridgeObjectRetain();
        v18 = sub_1C20FE8B8(&v22, v21);
        v19 = v23;
        v20 = v24;
        swift_bridgeObjectRelease();
        sub_1C20A8058(v19, v20);
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v10, v11, v13);
        return (v18 & 1) != 0;
      }
      sub_1C20EC1A4(v10, v11, v13);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v11, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v11, v13);
      swift_bridgeObjectRelease();
    }
    else if (!v15)
    {
      return 1;
    }
    sub_1C20EC1A4(v15, v14, v17);
    sub_1C20EC1EC(v10, v11, v13);
    sub_1C20EC1EC(v15, v14, v17);
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_OneofDescriptorProto.hashValue.getter()
{
  return sub_1C20E9FF8((void (*)(__int128 *, uint64_t, uint64_t, uint64_t))sub_1C20E773C);
}

uint64_t sub_1C20E7E54@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20EBE40((void (*)(_QWORD))type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass, a1);
}

unint64_t sub_1C20E7E68()
{
  return 0xD000000000000024;
}

uint64_t sub_1C20E7E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_OneofDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E7E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_OneofDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E7EAC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBB8 != -1)
    swift_once();
  v2 = unk_1EF75D980;
  v3 = qword_1EF75D988;
  v4 = unk_1EF75D990;
  *a1 = qword_1EF75D978;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E7F28()
{
  uint64_t v0;

  return sub_1C2158888(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20E7F34(uint64_t a1, uint64_t a2)
{
  return sub_1C20EA194(a1, a2, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t))sub_1C20E773C);
}

double sub_1C20E7F40(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA24C(a1, a2, a3, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t))sub_1C20E773C);
}

uint64_t sub_1C20E7F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA2D8(a1, a2, a3, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t))sub_1C20E773C);
}

uint64_t sub_1C20E7F58(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E7C38) & 1;
}

unint64_t static Google_Protobuf_EnumDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C20E7F94()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5218, &qword_1EF75D998);
}

uint64_t static Google_Protobuf_EnumDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBC0 != -1)
    swift_once();
  v2 = unk_1EF75D9A0;
  v3 = qword_1EF75D9A8;
  v4 = unk_1EF75D9B0;
  *a1 = qword_1EF75D998;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20E8024()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_WORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v1;
  qword_1EF75D9B8 = v0;
  return result;
}

uint64_t sub_1C20E8074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(v1 + 56) = 0u;
  *(_WORD *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 80) = v3;
  *(_QWORD *)(v1 + 88) = v3;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_WORD *)(a1 + 72);
  swift_beginAccess();
  v12 = *(_QWORD *)(v1 + 40);
  v13 = *(_QWORD *)(v1 + 48);
  v17 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 40) = v7;
  *(_QWORD *)(v1 + 48) = v8;
  *(_QWORD *)(v1 + 56) = v9;
  *(_QWORD *)(v1 + 64) = v10;
  *(_WORD *)(v1 + 72) = v11;
  sub_1C20EC1A4(v7, v8, v9);
  sub_1C20EC1EC(v12, v13, v17);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = v15;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C20E82A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_EnumDescriptorProto.isInitialized.getter()
{
  return sub_1C20EA654((uint64_t (*)(uint64_t))sub_1C20E8300);
}

uint64_t sub_1C20E8300(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1C20E0E24(v2, (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(void))sub_1C21005B0);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v6 = v5[3];
      v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0)
        break;
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v8 = a1[5];
    if (!v8)
      return 1;
    v10 = a1[6];
    v9 = a1[7];
    swift_bridgeObjectRetain();
    sub_1C20A8008(v10, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v10, v9);
    swift_bridgeObjectRetain();
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
    {
      v11 = sub_1C20E0A14(v8);
      v12 = *(_QWORD *)(v11 + 16);
      if (!v12)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v8, v10, v9);
        sub_1C20EC1EC(v8, v10, v9);
        return 1;
      }
      v13 = (_QWORD *)(v11 + 32);
      while (1)
      {
        v14 = v13[3];
        v15 = v13[4];
        __swift_project_boxed_opaque_existential_1(v13, v14);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15) & 1) == 0)
          break;
        v13 += 5;
        if (!--v12)
          goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      v17 = v8;
      v18 = v10;
      v19 = v9;
    }
    else
    {
      v17 = v8;
      v18 = v10;
      v19 = v9;
    }
    sub_1C20EC1EC(v17, v18, v19);
    sub_1C20EC1EC(v8, v10, v9);
  }
  return 0;
}

uint64_t Google_Protobuf_EnumDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E8580);
}

uint64_t sub_1C20E8580(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v23 = a1 + 88;
    v21 = a1 + 40;
    v22 = a1 + 80;
    v20 = a1 + 32;
    v12 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[43];
          v19 = v12;
          goto LABEL_14;
        case 2:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v14 = sub_1C21005B0();
          v15 = v20;
          v16 = &type metadata for Google_Protobuf_EnumValueDescriptorProto;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
          v14 = sub_1C20FEDBC();
          v15 = v21;
          v16 = &type metadata for Google_Protobuf_EnumOptions;
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          v13 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[52];
          v14 = sub_1C2100464();
          v15 = v22;
          v16 = &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange;
LABEL_5:
          v17 = v11;
          v13(v15, v16, v14, a3, a4);
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[44];
          v19 = v23;
LABEL_14:
          v17 = v11;
          v18(v19, a3, a4);
LABEL_6:
          v11 = v17;
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_EnumDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E8778);
}

uint64_t sub_1C20E8778(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t result;
  void (*v14)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int16 v29;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10
    || (v11 = *v9,
        v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
      || (v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v15 = sub_1C21005B0(),
          v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_EnumValueDescriptorProto, v15, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(_QWORD *)(a1 + 40))
        goto LABEL_7;
      v17 = *(_WORD *)(a1 + 72);
      v18 = *(_QWORD *)(a1 + 64);
      v26 = *(_QWORD *)(a1 + 40);
      v27 = *(_OWORD *)(a1 + 48);
      v28 = v18;
      v29 = v17;
      v19 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17];
      v20 = sub_1C20FEDBC();
      result = v19(&v26, 3, &type metadata for Google_Protobuf_EnumOptions, v20, a3, a4);
      if (!v5)
      {
LABEL_7:
        swift_beginAccess();
        if (!*(_QWORD *)(*(_QWORD *)(a1 + 80) + 16)
          || (v21 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
              v22 = sub_1C2100464(),
              v23 = swift_bridgeObjectRetain(),
              v21(v23, 4, &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, v22, a3, a4),
              result = swift_bridgeObjectRelease(),
              !v5))
        {
          result = swift_beginAccess();
          if (*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16))
          {
            v24 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))a4[32];
            v25 = swift_bridgeObjectRetain();
            v24(v25, 5, a3, a4);
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_EnumDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20E89CC) & 1;
}

uint64_t sub_1C20E89CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int16 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD v34[4];
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int16 v40;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v8 = 0;
    return v8 & 1;
  }
  if (!v6)
    goto LABEL_10;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = 0, (sub_1C21757C8() & 1) != 0))
  {
LABEL_11:
    swift_beginAccess();
    v9 = *(_QWORD **)(a1 + 32);
    swift_beginAccess();
    v10 = *(_QWORD **)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1C20FC788(v9, v10, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E9D5C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_21;
    swift_beginAccess();
    v12 = *(_QWORD *)(a1 + 40);
    v13 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56);
    v14 = *(_QWORD *)(a1 + 64);
    v16 = *(_WORD *)(a1 + 72);
    swift_beginAccess();
    v18 = *(_QWORD *)(a2 + 40);
    v17 = *(_QWORD *)(a2 + 48);
    v20 = *(_QWORD *)(a2 + 56);
    v19 = *(_QWORD *)(a2 + 64);
    v21 = *(_WORD *)(a2 + 72);
    if (v12)
    {
      v36 = v12;
      v37 = v13;
      v38 = v15;
      v39 = v14;
      v40 = v16;
      if (v18)
      {
        v34[0] = v18;
        v34[1] = v17;
        v34[2] = v20;
        v34[3] = v19;
        v35 = v21;
        v22 = v15;
        sub_1C20EC1A4(v12, v13, v15);
        swift_bridgeObjectRetain();
        v23 = v13;
        sub_1C20A8008(v13, v22);
        swift_bridgeObjectRetain();
        v33 = _s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)v34);
        v24 = v37;
        v25 = v38;
        swift_bridgeObjectRelease();
        sub_1C20A8058(v24, v25);
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v12, v23, v22);
        if ((v33 & 1) == 0)
          goto LABEL_21;
        goto LABEL_17;
      }
      sub_1C20EC1A4(v12, v13, v15);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v13, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31 = v13;
      v32 = v15;
      sub_1C20A8058(v13, v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      v31 = v13;
      v32 = v15;
      if (!v18)
      {
LABEL_17:
        swift_beginAccess();
        v26 = *(_QWORD *)(a1 + 80);
        swift_beginAccess();
        v27 = *(_QWORD *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28 = sub_1C20FBD7C(v26, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
        {
          swift_beginAccess();
          v29 = *(_QWORD **)(a1 + 88);
          swift_beginAccess();
          v8 = sub_1C20F76E4(v29, *(_QWORD **)(a2 + 88));
LABEL_22:
          swift_release();
          swift_release();
          return v8 & 1;
        }
LABEL_21:
        v8 = 0;
        goto LABEL_22;
      }
    }
    sub_1C20EC1A4(v18, v17, v20);
    sub_1C20EC1EC(v12, v31, v32);
    sub_1C20EC1EC(v18, v17, v20);
    goto LABEL_21;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_EnumDescriptorProto.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BEB28);
}

uint64_t sub_1C20E8D94@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CBC8, &qword_1EF75D9B8, a1);
}

unint64_t sub_1C20E8DB0()
{
  return 0xD000000000000023;
}

uint64_t sub_1C20E8DCC(uint64_t a1, uint64_t a2)
{
  return sub_1C20EB0B4(a1, a2, (uint64_t (*)(uint64_t))sub_1C20E8300);
}

uint64_t sub_1C20E8DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20E8DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_EnumDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20E8E00@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBC0 != -1)
    swift_once();
  v2 = unk_1EF75D9A0;
  v3 = qword_1EF75D9A8;
  v4 = unk_1EF75D9B0;
  *a1 = qword_1EF75D998;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E8E7C()
{
  uint64_t v0;

  return sub_1C2158960(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20E8E88(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BEB28);
}

void sub_1C20E8E94(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BEB28(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20E8EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BEB28);
}

uint64_t sub_1C20E8EAC(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20E89CC) & 1;
}

uint64_t sub_1C20E8ECC()
{
  uint64_t result;

  result = sub_1C21754F8();
  qword_1EF75D9C0 = 0xD000000000000023;
  *(_QWORD *)algn_1EF75D9C8 = 0x80000001C217DBC0;
  return result;
}

uint64_t static Google_Protobuf_EnumDescriptorProto.EnumReservedRange.protoMessageName.getter()
{
  return sub_1C20E564C(&qword_1EF75CBD0, &qword_1EF75D9C0);
}

uint64_t sub_1C20E8F5C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5188, &qword_1EF75D9D0);
}

uint64_t static Google_Protobuf_EnumDescriptorProto.EnumReservedRange._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBD8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D9D8;
  v3 = qword_1EF75D9E0;
  v4 = unk_1EF75D9E8;
  *a1 = qword_1EF75D9D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumDescriptorProto.EnumReservedRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20E9000(a1, a2, a3);
}

uint64_t sub_1C20E9000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 24, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 16, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

double Google_Protobuf_EnumDescriptorProto.EnumReservedRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_1C20E90B4(a1, a2, a3).n128_u64[0];
  return result;
}

__n128 sub_1C20E90B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char v8;
  __n128 result;

  v7 = *(unsigned int *)(v3 + 24);
  v8 = *(_BYTE *)(v3 + 28);
  if ((*(_BYTE *)(v3 + 20) & 1) != 0
    || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 24))(*(unsigned int *)(v3 + 16), 1, a2, a3),
        !v4))
  {
    if ((v8 & 1) != 0 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v7, 2, a2, a3), !v4))
      UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t static Google_Protobuf_EnumDescriptorProto.EnumReservedRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C20FDEA4(a1, a2) & 1;
}

uint64_t Google_Protobuf_EnumDescriptorProto.EnumReservedRange.hashValue.getter()
{
  return sub_1C20E918C((void (*)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C20BEB34);
}

uint64_t sub_1C20E918C(void (*a1)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  unsigned __int8 v8;
  _BYTE v10[72];

  v3 = *v1;
  v4 = v1[1];
  v5 = *((unsigned int *)v1 + 4);
  v6 = *((_BYTE *)v1 + 20);
  v7 = *((unsigned int *)v1 + 6);
  v8 = *((_BYTE *)v1 + 28);
  sub_1C2175828();
  a1(v10, v3, v4, v5 | ((unint64_t)v6 << 32), v7 | ((unint64_t)v8 << 32));
  return sub_1C2175870();
}

uint64_t sub_1C20E9218(uint64_t a1, uint64_t a2)
{
  return sub_1C20E57BC(a1, a2, &qword_1EF75CBD0, &qword_1EF75D9C0);
}

uint64_t sub_1C20E9238@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBD8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D9D8;
  v3 = qword_1EF75D9E0;
  v4 = unk_1EF75D9E8;
  *a1 = qword_1EF75D9D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E92B4(uint64_t a1, uint64_t a2)
{
  return sub_1C20E92C0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t))sub_1C2158A38);
}

uint64_t sub_1C20E92C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, unint64_t, unint64_t))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32), *(unsigned int *)(v3 + 24) | ((unint64_t)*(unsigned __int8 *)(v3 + 28) << 32));
}

uint64_t sub_1C20E92FC(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 v10;
  _BYTE v12[72];

  v5 = *v3;
  v6 = v3[1];
  v7 = *((unsigned int *)v3 + 4);
  v8 = *((_BYTE *)v3 + 20);
  v9 = *((unsigned int *)v3 + 6);
  v10 = *((_BYTE *)v3 + 28);
  sub_1C2175828();
  a3(v12, v5, v6, v7 | ((unint64_t)v8 << 32), v9 | ((unint64_t)v10 << 32));
  return sub_1C2175870();
}

uint64_t sub_1C20E9388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, unint64_t, unint64_t))
{
  uint64_t v4;

  return a4(a1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(unsigned int *)(v4 + 16) | ((unint64_t)*(unsigned __int8 *)(v4 + 20) << 32), *(unsigned int *)(v4 + 24) | ((unint64_t)*(unsigned __int8 *)(v4 + 28) << 32));
}

uint64_t sub_1C20E93C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned __int8 v11;
  _BYTE v13[72];

  v6 = *v4;
  v7 = v4[1];
  v8 = *((unsigned int *)v4 + 4);
  v9 = *((_BYTE *)v4 + 20);
  v10 = *((unsigned int *)v4 + 6);
  v11 = *((_BYTE *)v4 + 28);
  sub_1C2175828();
  a4(v13, v6, v7, v8 | ((unint64_t)v9 << 32), v10 | ((unint64_t)v11 << 32));
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_EnumValueDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_1C20E9468()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6290, &qword_1EF75D9F0);
}

uint64_t static Google_Protobuf_EnumValueDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBE0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D9F8;
  v3 = qword_1EF75DA00;
  v4 = unk_1EF75DA08;
  *a1 = qword_1EF75D9F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20E94F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 36) = 1;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_BYTE *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5 = *(_DWORD *)(a1 + 32);
  LOBYTE(v3) = *(_BYTE *)(a1 + 36);
  swift_beginAccess();
  *(_DWORD *)(v1 + 32) = v5;
  *(_BYTE *)(v1 + 36) = v3;
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  LOBYTE(v4) = *(_BYTE *)(a1 + 72);
  sub_1C20EC1A4(v6, v7, v8);
  swift_release();
  swift_beginAccess();
  v10 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 40) = v6;
  *(_QWORD *)(v1 + 48) = v7;
  *(_QWORD *)(v1 + 56) = v8;
  *(_QWORD *)(v1 + 64) = v9;
  *(_BYTE *)(v1 + 72) = v4;
  sub_1C20EC1EC(v10, v11, v12);
  return v1;
}

uint64_t sub_1C20E9660()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.isInitialized.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v1 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v2 = v1[5];
  if (v2)
  {
    v3 = v1[6];
    v4 = v1[7];
    swift_retain();
    sub_1C20EC1A4(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      v13 = v2;
      v14 = v3;
      v15 = v4;
LABEL_14:
      sub_1C20EC1EC(v13, v14, v15);
      v16 = 0;
      goto LABEL_15;
    }
    v5 = sub_1C20E0A14(v2);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v18 = v4;
      v7 = (_QWORD *)(v5 + 32);
      while (1)
      {
        v9 = v7[3];
        v8 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) & 1) == 0)
          break;
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          v10 = v2;
          v11 = v3;
          v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      v13 = v2;
      v14 = v3;
      v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    v10 = v2;
    v11 = v3;
    v12 = v4;
LABEL_11:
    sub_1C20EC1EC(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E9854);
}

uint64_t sub_1C20E9854(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, _QWORD *);
  uint64_t v19;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v12 = a1 + 40;
    v13 = a1 + 32;
    v14 = a1 + 16;
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[10];
        v19 = v13;
LABEL_13:
        v17 = v11;
        v18(v19, a3, a4);
LABEL_5:
        v11 = v17;
        swift_endAccess();
        goto LABEL_6;
      }
      if (result == 1)
      {
        swift_beginAccess();
        v18 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[43];
        v19 = v14;
        goto LABEL_13;
      }
LABEL_6:
      result = v8(a3, a4);
    }
    swift_beginAccess();
    v15 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
    v16 = sub_1C20FEF30();
    v17 = v11;
    v15(v12, &type metadata for Google_Protobuf_EnumValueOptions, v16, a3, a4);
    goto LABEL_5;
  }
  return result;
}

void sub_1C20E99A0(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  swift_beginAccess();
  if (*(_QWORD *)(a4 + 24))
  {
    sub_1C2175834();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C21754C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  if ((*(_BYTE *)(a4 + 36) & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  swift_beginAccess();
  v8 = *(_QWORD *)(a4 + 40);
  if (v8)
  {
    v29 = a3;
    v9 = *(_QWORD *)(a4 + 48);
    v10 = *(_QWORD *)(a4 + 56);
    v11 = *(_QWORD *)(a4 + 64);
    v12 = *(_BYTE *)(a4 + 72);
    v24 = v8;
    v25 = v9;
    v26 = v10;
    v27 = v11;
    v28 = v12;
    sub_1C2175834();
    v13 = *((_QWORD *)a1 + 8);
    v14 = a1[1];
    v19 = *a1;
    v20 = v14;
    v15 = a1[3];
    v21 = a1[2];
    v22 = v15;
    v23 = v13;
    swift_bridgeObjectRetain();
    sub_1C20A8008(v9, v10);
    swift_bridgeObjectRetain();
    sub_1C20F0B90((uint64_t)&v19);
    if (v4)
      MEMORY[0x1C3BB7EEC](v4);
    sub_1C20EC1EC(v8, v9, v10);
    v16 = v23;
    v17 = v20;
    *a1 = v19;
    a1[1] = v17;
    v18 = v22;
    a1[2] = v21;
    a1[3] = v18;
    *((_QWORD *)a1 + 8) = v16;
    a3 = v29;
  }
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_1C20E9B68()
{
  uint64_t v0;
  uint64_t result;

  if ((v0 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void Google_Protobuf_EnumValueDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E9BE4);
}

uint64_t sub_1C20E9BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10
    || (v11 = *v9,
        v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if ((*(_BYTE *)(a1 + 36) & 1) != 0
      || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 32), 2, a3, a4), !v5))
    {
      result = swift_beginAccess();
      if (*(_QWORD *)(a1 + 40))
      {
        v14 = *(_BYTE *)(a1 + 72);
        v15 = *(_QWORD *)(a1 + 64);
        v18 = *(_QWORD *)(a1 + 40);
        v19 = *(_OWORD *)(a1 + 48);
        v20 = v15;
        v21 = v14;
        v16 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        v17 = sub_1C20FEF30();
        return v16(&v18, 3, &type metadata for Google_Protobuf_EnumValueOptions, v17, a3, a4);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_EnumValueDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E9D5C) & 1;
}

BOOL sub_1C20E9D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  int v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[4];
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C21757C8(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v10 = *(_DWORD *)(a1 + 32);
    v11 = *(_BYTE *)(a1 + 36);
    swift_beginAccess();
    v12 = *(_BYTE *)(a2 + 36);
    if ((v11 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 36))
        return 0;
    }
    else
    {
      if (v10 != *(_DWORD *)(a2 + 32))
        v12 = 1;
      if ((v12 & 1) != 0)
        return 0;
    }
    swift_beginAccess();
    v13 = *(_QWORD *)(a1 + 40);
    v14 = *(_QWORD *)(a1 + 48);
    v16 = *(_QWORD *)(a1 + 56);
    v15 = *(_QWORD *)(a1 + 64);
    v17 = *(_BYTE *)(a1 + 72);
    swift_beginAccess();
    v19 = *(_QWORD *)(a2 + 40);
    v18 = *(_QWORD *)(a2 + 48);
    v21 = *(_QWORD *)(a2 + 56);
    v20 = *(_QWORD *)(a2 + 64);
    v22 = *(_BYTE *)(a2 + 72);
    if (v13)
    {
      v28 = v13;
      v29 = v14;
      v30 = v16;
      v31 = v15;
      v32 = v17;
      if (v19)
      {
        v26[0] = v19;
        v26[1] = v18;
        v26[2] = v21;
        v26[3] = v20;
        v27 = v22;
        sub_1C20EC1A4(v13, v14, v16);
        sub_1C20EC1A4(v13, v14, v16);
        v23 = sub_1C20FE4F4((uint64_t)&v28, (uint64_t)v26);
        v24 = v29;
        v25 = v30;
        swift_bridgeObjectRelease();
        sub_1C20A8058(v24, v25);
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v13, v14, v16);
        return (v23 & 1) != 0;
      }
      sub_1C20EC1A4(v13, v14, v16);
      swift_bridgeObjectRetain();
      sub_1C20A8008(v14, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v14, v16);
      swift_bridgeObjectRelease();
    }
    else if (!v19)
    {
      return 1;
    }
    sub_1C20EC1A4(v19, v18, v21);
    sub_1C20EC1EC(v13, v14, v16);
    sub_1C20EC1EC(v19, v18, v21);
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.hashValue.getter()
{
  return sub_1C20E9FF8(sub_1C20E99A0);
}

uint64_t sub_1C20E9FF8(void (*a1)(__int128 *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  sub_1C2175828();
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  a1(&v7, v3, v4, v5);
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  v16 = v11;
  return sub_1C2175870();
}

uint64_t sub_1C20EA0A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20EBE40((void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, a1);
}

unint64_t sub_1C20EA0B8()
{
  return 0xD000000000000028;
}

uint64_t sub_1C20EA0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValueDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20EA0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_EnumValueDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20EA100@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBE0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75D9F8;
  v3 = qword_1EF75DA00;
  v4 = unk_1EF75DA08;
  *a1 = qword_1EF75D9F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EA17C()
{
  uint64_t v0;

  return sub_1C2158B60(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20EA188(uint64_t a1, uint64_t a2)
{
  return sub_1C20EA194(a1, a2, sub_1C20E99A0);
}

uint64_t sub_1C20EA194(uint64_t a1, uint64_t a2, void (*a3)(__int128 *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  sub_1C2175828();
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v22;
  v13 = v23;
  a3(&v9, v5, v6, v7);
  v14 = v9;
  v15 = v10;
  v16 = v11;
  v17 = v12;
  v18 = v13;
  return sub_1C2175870();
}

double sub_1C20EA240(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA24C(a1, a2, a3, sub_1C20E99A0);
}

double sub_1C20EA24C(__int128 *a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  double result;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v7 = *v4;
  v8 = v4[1];
  v9 = v4[2];
  v10 = *((_QWORD *)a1 + 8);
  v11 = a1[1];
  v17 = *a1;
  v18 = v11;
  v12 = a1[3];
  v19 = a1[2];
  v20 = v12;
  v21 = v10;
  a4(&v17, v7, v8, v9);
  v13 = v21;
  v14 = v18;
  *a1 = v17;
  a1[1] = v14;
  result = *(double *)&v19;
  v16 = v20;
  a1[2] = v19;
  a1[3] = v16;
  *((_QWORD *)a1 + 8) = v13;
  return result;
}

uint64_t sub_1C20EA2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA2D8(a1, a2, a3, sub_1C20E99A0);
}

uint64_t sub_1C20EA2D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v6 = *v4;
  v7 = v4[1];
  v8 = v4[2];
  sub_1C2175828();
  v10 = v20;
  v11 = v21;
  v12 = v22;
  v13 = v23;
  v14 = v24;
  a4(&v10, v6, v7, v8);
  v15 = v10;
  v16 = v11;
  v17 = v12;
  v18 = v13;
  v19 = v14;
  return sub_1C2175870();
}

uint64_t sub_1C20EA380(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E9D5C) & 1;
}

unint64_t static Google_Protobuf_ServiceDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1C20EA3BC()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD61C8, &qword_1EF75DA10);
}

uint64_t static Google_Protobuf_ServiceDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DA18;
  v3 = qword_1EF75DA20;
  v4 = unk_1EF75DA28;
  *a1 = qword_1EF75DA10;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20EA44C()
{
  uint64_t v0;
  double result;

  type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_BYTE *)(v0 + 72) = 0;
  qword_1EF75DA30 = v0;
  return result;
}

uint64_t sub_1C20EA498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(v1 + 56) = 0u;
  *(_BYTE *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  LOBYTE(v4) = *(_BYTE *)(a1 + 72);
  sub_1C20EC1A4(v6, v7, v8);
  swift_release();
  swift_beginAccess();
  v10 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 40) = v6;
  *(_QWORD *)(v1 + 48) = v7;
  *(_QWORD *)(v1 + 56) = v8;
  *(_QWORD *)(v1 + 64) = v9;
  *(_BYTE *)(v1 + 72) = v4;
  sub_1C20EC1EC(v10, v11, v12);
  return v1;
}

uint64_t sub_1C20EA60C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_ServiceDescriptorProto.isInitialized.getter()
{
  return sub_1C20EA654((uint64_t (*)(uint64_t))sub_1C20EA690);
}

uint64_t sub_1C20EA654(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  v2 = swift_retain();
  LOBYTE(a1) = a1(v2);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1C20EA690(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1C20E0E24(v2, (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(void))sub_1C2100848);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      v6 = v5[3];
      v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0)
        break;
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v8 = a1[5];
    if (!v8)
      return 1;
    v10 = a1[6];
    v9 = a1[7];
    swift_bridgeObjectRetain();
    sub_1C20A8008(v10, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v10, v9);
    swift_bridgeObjectRetain();
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) != 0)
    {
      v11 = sub_1C20E0A14(v8);
      v12 = *(_QWORD *)(v11 + 16);
      if (!v12)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v8, v10, v9);
        sub_1C20EC1EC(v8, v10, v9);
        return 1;
      }
      v13 = (_QWORD *)(v11 + 32);
      while (1)
      {
        v14 = v13[3];
        v15 = v13[4];
        __swift_project_boxed_opaque_existential_1(v13, v14);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15) & 1) == 0)
          break;
        v13 += 5;
        if (!--v12)
          goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      v17 = v8;
      v18 = v10;
      v19 = v9;
    }
    else
    {
      v17 = v8;
      v18 = v10;
      v19 = v9;
    }
    sub_1C20EC1EC(v17, v18, v19);
    sub_1C20EC1EC(v8, v10, v9);
  }
  return 0;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA910(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20EA9E8);
}

uint64_t sub_1C20EA910(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    v13 = swift_retain();
    *(_QWORD *)(v7 + 16) = a6(v13);
    swift_release();
  }
  v14 = swift_retain();
  a7(v14, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C20EA9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  ValueMetadata *v18;
  uint64_t v19;

  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v12 = a1 + 40;
    v13 = a1 + 32;
    v14 = a1 + 16;
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        swift_beginAccess();
        v15 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
        v16 = sub_1C2100848();
        v17 = v13;
        v18 = &type metadata for Google_Protobuf_MethodDescriptorProto;
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        v19 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v14, a3, a4);
        goto LABEL_6;
      }
LABEL_7:
      result = v8(a3, a4);
    }
    swift_beginAccess();
    v15 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    v16 = sub_1C20FEF74();
    v17 = v12;
    v18 = &type metadata for Google_Protobuf_ServiceOptions;
LABEL_5:
    v19 = v11;
    v15(v17, v18, v16, a3, a4);
LABEL_6:
    v11 = v19;
    swift_endAccess();
    goto LABEL_7;
  }
  return result;
}

void Google_Protobuf_ServiceDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20EAB60);
}

uint64_t sub_1C20EAB60(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t result;
  void (*v14)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10
    || (v11 = *v9,
        v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)
      || (v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[35],
          v15 = sub_1C2100848(),
          v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_MethodDescriptorProto, v15, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      result = swift_beginAccess();
      if (*(_QWORD *)(a1 + 40))
      {
        v17 = *(_BYTE *)(a1 + 72);
        v18 = *(_QWORD *)(a1 + 64);
        v21 = *(_QWORD *)(a1 + 40);
        v22 = *(_OWORD *)(a1 + 48);
        v23 = v18;
        v24 = v17;
        v19 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[17];
        v20 = sub_1C20FEF74();
        return v19(&v21, 3, &type metadata for Google_Protobuf_ServiceOptions, v20, a3, a4);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_ServiceDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20EACF8) & 1;
}

BOOL sub_1C20EACF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  _QWORD *v10;
  _QWORD *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  _QWORD v26[4];
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C21757C8(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v10 = *(_QWORD **)(a1 + 32);
    swift_beginAccess();
    v11 = *(_QWORD **)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1C20FC788(v10, v11, sub_1C20EB9AC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      swift_beginAccess();
      v13 = *(_QWORD *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 48);
      v16 = *(_QWORD *)(a1 + 56);
      v15 = *(_QWORD *)(a1 + 64);
      v17 = *(_BYTE *)(a1 + 72);
      swift_beginAccess();
      v19 = *(_QWORD *)(a2 + 40);
      v18 = *(_QWORD *)(a2 + 48);
      v21 = *(_QWORD *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 64);
      v22 = *(_BYTE *)(a2 + 72);
      if (v13)
      {
        v28 = v13;
        v29 = v14;
        v30 = v16;
        v31 = v15;
        v32 = v17;
        if (v19)
        {
          v26[0] = v19;
          v26[1] = v18;
          v26[2] = v21;
          v26[3] = v20;
          v27 = v22;
          sub_1C20EC1A4(v13, v14, v16);
          sub_1C20EC1A4(v19, v18, v21);
          sub_1C20EC1A4(v13, v14, v16);
          v25 = sub_1C20FE4F4((uint64_t)&v28, (uint64_t)v26);
          swift_release();
          swift_release();
          sub_1C20EC1EC(v19, v18, v21);
          v23 = v29;
          v24 = v30;
          swift_bridgeObjectRelease();
          sub_1C20A8058(v23, v24);
          swift_bridgeObjectRelease();
          sub_1C20EC1EC(v13, v14, v16);
          return (v25 & 1) != 0;
        }
        swift_bridgeObjectRetain();
        sub_1C20A8008(v14, v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C20A8008(v14, v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_1C20A8058(v14, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C20EC1A4(v19, v18, v21);
        swift_release();
        swift_release();
        if (!v19)
          return 1;
      }
      sub_1C20EC1EC(v13, v14, v16);
      sub_1C20EC1EC(v19, v18, v21);
    }
    else
    {
      swift_release();
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE5E8);
}

uint64_t sub_1C20EB070@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20C1810(&qword_1EF75CBF0, &qword_1EF75DA30, a1);
}

unint64_t sub_1C20EB08C()
{
  return 0xD000000000000026;
}

uint64_t sub_1C20EB0A8(uint64_t a1, uint64_t a2)
{
  return sub_1C20EB0B4(a1, a2, (uint64_t (*)(uint64_t))sub_1C20EA690);
}

uint64_t sub_1C20EB0B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = swift_retain();
  LOBYTE(a3) = a3(v4);
  swift_release();
  return a3 & 1;
}

uint64_t sub_1C20EB0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ServiceDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20EB104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_ServiceDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20EB118@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBE8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DA18;
  v3 = qword_1EF75DA20;
  v4 = unk_1EF75DA28;
  *a1 = qword_1EF75DA10;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EB194()
{
  uint64_t v0;

  return sub_1C2158C38(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20EB1A0(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE5E8);
}

void sub_1C20EB1AC(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE5E8(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20EB1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE5E8);
}

uint64_t sub_1C20EB1C4(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20EACF8) & 1;
}

unint64_t static Google_Protobuf_MethodDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C20EB200()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD6058, &qword_1EF75DA38);
}

uint64_t static Google_Protobuf_MethodDescriptorProto._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBF8 != -1)
    swift_once();
  v2 = unk_1EF75DA40;
  v3 = qword_1EF75DA48;
  v4 = unk_1EF75DA50;
  *a1 = qword_1EF75DA38;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EB290()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20EC1EC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_MethodDescriptorProto.isInitialized.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v1 = *(_QWORD **)(v0 + 16);
  swift_beginAccess();
  v2 = v1[8];
  if (v2)
  {
    v3 = v1[9];
    v4 = v1[10];
    swift_retain();
    sub_1C20EC1A4(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      v13 = v2;
      v14 = v3;
      v15 = v4;
LABEL_14:
      sub_1C20EC1EC(v13, v14, v15);
      v16 = 0;
      goto LABEL_15;
    }
    v5 = sub_1C20E0A14(v2);
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v18 = v4;
      v7 = (_QWORD *)(v5 + 32);
      while (1)
      {
        v9 = v7[3];
        v8 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) & 1) == 0)
          break;
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          v10 = v2;
          v11 = v3;
          v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      v13 = v2;
      v14 = v3;
      v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    v10 = v2;
    v11 = v3;
    v12 = v4;
LABEL_11:
    sub_1C20EC1EC(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t Google_Protobuf_MethodDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    v8 = swift_retain();
    v9 = sub_1C20FE1A8(v8);
    swift_release();
    *(_QWORD *)(v4 + 16) = v9;
    swift_release();
  }
  v10 = swift_retain();
  sub_1C20EB524(v10, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C20EB524(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t (*v8)(uint64_t, _QWORD *);
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = (uint64_t (*)(uint64_t, _QWORD *))a4[2];
  result = v8(a3, a4);
  v11 = v4;
  if (!v4)
  {
    v23 = a1 + 99;
    v21 = a1 + 64;
    v22 = a1 + 98;
    v19 = a1 + 32;
    v20 = a1 + 48;
    v12 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          v14 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[43];
          v15 = v12;
          goto LABEL_7;
        case 2:
          v13 = v19;
          goto LABEL_5;
        case 3:
          v13 = v20;
LABEL_5:
          swift_beginAccess();
          v14 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[43];
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          v17 = (void (*)(uint64_t, ValueMetadata *, unint64_t, uint64_t, _QWORD *))a4[51];
          v18 = sub_1C20FEFB8();
          v16 = v11;
          v17(v21, &type metadata for Google_Protobuf_MethodOptions, v18, a3, a4);
          goto LABEL_8;
        case 5:
          v13 = v22;
          swift_beginAccess();
          v14 = (void (*)(uint64_t, uint64_t, _QWORD *))a4[40];
LABEL_6:
          v15 = v13;
LABEL_7:
          v16 = v11;
          v14(v15, a3, a4);
LABEL_8:
          v11 = v16;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          ((void (*)(uint64_t, uint64_t, _QWORD *))a4[40])(v23, a3, a4);
          swift_endAccess();
          break;
        default:
          break;
      }
      result = v8(a3, a4);
    }
  }
  return result;
}

void Google_Protobuf_MethodDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20C25C0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20EB730);
}

uint64_t sub_1C20EB730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int16 v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int16 v29;

  v5 = v4;
  v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v10 = *(_QWORD *)(a1 + 24);
  if (!v10
    || (v11 = *v9,
        v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 40);
    if (!v14
      || (v15 = *(_QWORD *)(a1 + 32),
          v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
          swift_bridgeObjectRetain(),
          v16(v15, v14, 2, a3, a4),
          result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      v17 = *(_QWORD *)(a1 + 56);
      if (!v17
        || (v18 = *(_QWORD *)(a1 + 48),
            v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
            swift_bridgeObjectRetain(),
            v19(v18, v17, 3, a3, a4),
            result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        if (!*(_QWORD *)(a1 + 64))
          goto LABEL_9;
        v20 = *(_WORD *)(a1 + 96);
        v21 = *(_QWORD *)(a1 + 88);
        v26 = *(_QWORD *)(a1 + 64);
        v27 = *(_OWORD *)(a1 + 72);
        v28 = v21;
        v29 = v20;
        v22 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        v23 = sub_1C20FEFB8();
        result = v22(&v26, 4, &type metadata for Google_Protobuf_MethodOptions, v23, a3, a4);
        if (!v5)
        {
LABEL_9:
          swift_beginAccess();
          v24 = *(unsigned __int8 *)(a1 + 98);
          if (v24 == 2
            || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 104))(v24 & 1, 5, a3, a4),
                !v5))
          {
            result = swift_beginAccess();
            v25 = *(unsigned __int8 *)(a1 + 99);
            if (v25 != 2)
              return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a4 + 104))(v25 & 1, 6, a3, a4);
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_MethodDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20EB9AC) & 1;
}

uint64_t sub_1C20EB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  _QWORD v39[4];
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  __int16 v45;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C21757C8(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v12 = *(_QWORD *)(a2 + 40);
    if (v11)
    {
      if (!v12)
        return 0;
      if (v10 != *(_QWORD *)(a2 + 32) || v11 != v12)
      {
        v13 = sub_1C21757C8();
        result = 0;
        if ((v13 & 1) == 0)
          return result;
      }
    }
    else if (v12)
    {
      return 0;
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 56);
    swift_beginAccess();
    v16 = *(_QWORD *)(a2 + 56);
    if (v15)
    {
      if (v16)
      {
        if (v14 != *(_QWORD *)(a2 + 48) || v15 != v16)
        {
          v17 = sub_1C21757C8();
          result = 0;
          if ((v17 & 1) == 0)
            return result;
        }
LABEL_24:
        swift_beginAccess();
        v18 = *(_QWORD *)(a1 + 64);
        v19 = *(_QWORD *)(a1 + 72);
        v21 = *(_QWORD *)(a1 + 80);
        v20 = *(_QWORD *)(a1 + 88);
        v22 = *(_WORD *)(a1 + 96);
        swift_beginAccess();
        v24 = *(_QWORD *)(a2 + 64);
        v23 = *(_QWORD *)(a2 + 72);
        v25 = *(_QWORD *)(a2 + 80);
        v26 = *(_QWORD *)(a2 + 88);
        v27 = *(_WORD *)(a2 + 96);
        if (v18)
        {
          v41 = v18;
          v42 = v19;
          v43 = v21;
          v44 = v20;
          v45 = v22;
          if (v24)
          {
            v39[0] = v24;
            v39[1] = v23;
            v39[2] = v25;
            v39[3] = v26;
            v40 = v27;
            sub_1C20EC1A4(v18, v19, v21);
            sub_1C20EC1A4(v18, v19, v21);
            swift_retain();
            swift_retain();
            v38 = _s20SiriOntologyProtobuf07Google_C14_MethodOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v41, (uint64_t)v39);
            v28 = v42;
            v29 = v43;
            swift_bridgeObjectRelease();
            sub_1C20A8058(v28, v29);
            swift_bridgeObjectRelease();
            sub_1C20EC1EC(v18, v19, v21);
            if ((v38 & 1) == 0)
              goto LABEL_34;
            goto LABEL_29;
          }
          v34 = v23;
          v35 = v25;
          sub_1C20EC1A4(v18, v19, v21);
          sub_1C20EC1A4(v18, v19, v21);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          v36 = v19;
          v37 = v21;
          sub_1C20A8058(v19, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          v34 = *(_QWORD *)(a2 + 72);
          v36 = v19;
          v37 = v21;
          v35 = *(_QWORD *)(a2 + 80);
          swift_retain();
          swift_retain();
          if (!v24)
          {
LABEL_29:
            swift_beginAccess();
            v30 = *(unsigned __int8 *)(a1 + 98);
            swift_beginAccess();
            v31 = *(unsigned __int8 *)(a2 + 98);
            if (v30 != 2)
            {
              if (v31 == 2 || ((((v31 & 1) == 0) ^ v30) & 1) == 0)
                goto LABEL_34;
LABEL_38:
              swift_beginAccess();
              v32 = *(unsigned __int8 *)(a1 + 99);
              swift_release();
              swift_beginAccess();
              v33 = *(unsigned __int8 *)(a2 + 99);
              swift_release();
              if (v32 == 2)
              {
                if (v33 != 2)
                  return 0;
              }
              else if (v33 == 2 || ((((v33 & 1) == 0) ^ v32) & 1) == 0)
              {
                return 0;
              }
              return 1;
            }
            if (v31 == 2)
              goto LABEL_38;
LABEL_34:
            swift_release();
            swift_release();
            return 0;
          }
        }
        sub_1C20EC1A4(v24, v34, v35);
        sub_1C20EC1EC(v18, v36, v37);
        sub_1C20EC1EC(v24, v34, v35);
        goto LABEL_34;
      }
    }
    else if (!v16)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE5F4);
}

uint64_t sub_1C20EBE2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C20EBE40((void (*)(_QWORD))type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass, a1);
}

uint64_t sub_1C20EBE40@<X0>(void (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_OWORD *)a2 = xmmword_1C2175DE0;
  a1(0);
  result = swift_initStaticObject();
  *(_QWORD *)(a2 + 16) = result;
  return result;
}

unint64_t sub_1C20EBE80()
{
  return 0xD000000000000025;
}

uint64_t sub_1C20EBEA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return Google_Protobuf_MethodDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20EBEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_MethodDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20EBEC8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CBF8 != -1)
    swift_once();
  v2 = unk_1EF75DA40;
  v3 = qword_1EF75DA48;
  v4 = unk_1EF75DA50;
  *a1 = qword_1EF75DA38;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EBF44()
{
  uint64_t v0;

  return sub_1C2158D10(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20EBF50(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE5F4);
}

void sub_1C20EBF5C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE5F4(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20EBF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE5F4);
}

uint64_t sub_1C20EBF74(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20C356C(a1, a2, sub_1C20EB9AC) & 1;
}

unint64_t static Google_Protobuf_FileOptions.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C20EBFB0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3D10, &qword_1EF75DA58);
}

uint64_t static Google_Protobuf_FileOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC00 != -1)
    swift_once();
  v2 = unk_1EF75DA60;
  v3 = qword_1EF75DA68;
  v4 = unk_1EF75DA70;
  *a1 = qword_1EF75DA58;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C20EC040()
{
  uint64_t v0;
  double result;

  type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_DWORD *)(v0 + 48) = 50463234;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_DWORD *)(v0 + 72) = 33686018;
  *(_WORD *)(v0 + 76) = 514;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_QWORD *)(v0 + 192) = MEMORY[0x1E0DEE9D8];
  qword_1EF75DA78 = v0;
  return result;
}

uint64_t sub_1C20EC0AC(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C20A8008(result, a2);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C20EC0E4(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C20A8058(result, a2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20EC11C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_1C20A8008(a2, a3);
  }
  return result;
}

uint64_t sub_1C20EC150(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1C20A8058(a2, a3);
  }
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t sub_1C20EC1A4(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_1C20A8008(a2, a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C20EC1EC(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1C20A8058(a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass()
{
  return objc_opt_self();
}

uint64_t sub_1C20EC314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_DWORD *)(v1 + 48) = 50463234;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_WORD *)(v1 + 76) = 514;
  *(_DWORD *)(v1 + 72) = 33686018;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_QWORD *)(v1 + 192) = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_BYTE *)(a1 + 48);
  swift_beginAccess();
  *(_BYTE *)(v1 + 48) = v7;
  swift_beginAccess();
  v8 = *(_BYTE *)(a1 + 49);
  swift_beginAccess();
  *(_BYTE *)(v1 + 49) = v8;
  swift_beginAccess();
  v9 = *(_BYTE *)(a1 + 50);
  swift_beginAccess();
  *(_BYTE *)(v1 + 50) = v9;
  swift_beginAccess();
  v10 = *(_BYTE *)(a1 + 51);
  swift_beginAccess();
  *(_BYTE *)(v1 + 51) = v10;
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = v12;
  *(_QWORD *)(v1 + 64) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v11) = *(_BYTE *)(a1 + 72);
  swift_beginAccess();
  *(_BYTE *)(v1 + 72) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(_BYTE *)(a1 + 73);
  swift_beginAccess();
  *(_BYTE *)(v1 + 73) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(_BYTE *)(a1 + 74);
  swift_beginAccess();
  *(_BYTE *)(v1 + 74) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(_BYTE *)(a1 + 75);
  swift_beginAccess();
  *(_BYTE *)(v1 + 75) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(_BYTE *)(a1 + 76);
  swift_beginAccess();
  *(_BYTE *)(v1 + 76) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(_BYTE *)(a1 + 77);
  swift_beginAccess();
  *(_BYTE *)(v1 + 77) = v11;
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = v14;
  *(_QWORD *)(v1 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 104);
  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = v16;
  *(_QWORD *)(v1 + 104) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 120);
  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = v18;
  *(_QWORD *)(v1 + 120) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 128);
  v19 = *(_QWORD *)(a1 + 136);
  swift_beginAccess();
  *(_QWORD *)(v1 + 128) = v20;
  *(_QWORD *)(v1 + 136) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v22 = *(_QWORD *)(a1 + 144);
  v21 = *(_QWORD *)(a1 + 152);
  swift_beginAccess();
  *(_QWORD *)(v1 + 144) = v22;
  *(_QWORD *)(v1 + 152) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v24 = *(_QWORD *)(a1 + 160);
  v23 = *(_QWORD *)(a1 + 168);
  swift_beginAccess();
  *(_QWORD *)(v1 + 160) = v24;
  *(_QWORD *)(v1 + 168) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 176);
  v25 = *(_QWORD *)(a1 + 184);
  swift_beginAccess();
  *(_QWORD *)(v1 + 176) = v26;
  *(_QWORD *)(v1 + 184) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 192);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v1 + 192) = v27;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C20EC958()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C20EC9C4()
{
  sub_1C20EC958();
  return swift_deallocClassInstance();
}

uint64_t Google_Protobuf_FileOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    v7 = swift_retain();
    *(_QWORD *)(v3 + 24) = sub_1C20EC314(v7);
    swift_release();
  }
  v8 = swift_retain();
  sub_1C20ECA98(v8, a1, v3, a2, a3);
  return swift_release();
}

uint64_t sub_1C20ECA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v10 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
  result = v10(a4, a5);
  v13 = v5;
  if (!v5)
  {
    v14 = result;
    v26 = a1 + 192;
    v15 = a1 + 176;
    v45 = a1 + 160;
    v43 = a1 + 144;
    v44 = a1 + 75;
    v41 = a1 + 112;
    v42 = a1 + 128;
    v39 = a1 + 80;
    v40 = a1 + 96;
    v37 = a1 + 50;
    v38 = a1 + 77;
    v35 = a1 + 49;
    v36 = a1 + 76;
    v33 = a1 + 73;
    v34 = a1 + 74;
    v31 = a1 + 56;
    v32 = a1 + 72;
    v29 = a1 + 51;
    v30 = a1 + 48;
    v27 = a1 + 16;
    v28 = a1 + 32;
    while ((v12 & 1) == 0)
    {
      switch(v14)
      {
        case 1:
          v16 = v27;
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 12:
        case 13:
        case 14:
        case 15:
        case 19:
        case 21:
        case 22:
        case 24:
        case 25:
        case 26:
        case 28:
        case 29:
        case 30:
        case 32:
        case 33:
        case 34:
        case 35:
        case 38:
        case 43:
          goto LABEL_14;
        case 8:
          v16 = v28;
          goto LABEL_5;
        case 9:
          swift_beginAccess();
          v22 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a5 + 392);
          v23 = sub_1C2104C9C();
          v18 = v13;
          v22(v29, &type metadata for Google_Protobuf_FileOptions.OptimizeMode, v23, a4, a5);
          goto LABEL_7;
        case 10:
          v16 = v30;
          swift_beginAccess();
          v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 320);
          goto LABEL_6;
        case 11:
          v16 = v31;
LABEL_5:
          swift_beginAccess();
          v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 344);
LABEL_6:
          v18 = v13;
          v17(v16, a4, a5);
LABEL_7:
          v13 = v18;
          swift_endAccess();
          break;
        case 16:
          v24 = v32;
          goto LABEL_32;
        case 17:
          v24 = v33;
          goto LABEL_32;
        case 18:
          v24 = v34;
          goto LABEL_32;
        case 20:
          v24 = v35;
          goto LABEL_32;
        case 23:
          v24 = v36;
          goto LABEL_32;
        case 27:
          v24 = v37;
          goto LABEL_32;
        case 31:
          v24 = v38;
          goto LABEL_32;
        case 36:
          v25 = v39;
          goto LABEL_34;
        case 37:
          v25 = v40;
          goto LABEL_34;
        case 39:
          v25 = v41;
          goto LABEL_34;
        case 40:
          v25 = v42;
          goto LABEL_34;
        case 41:
          v25 = v43;
          goto LABEL_34;
        case 42:
          v24 = v44;
LABEL_32:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 320))(v24, a4, a5);
          goto LABEL_36;
        case 44:
          v25 = v45;
LABEL_34:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 344))(v25, a4, a5);
          goto LABEL_36;
        case 45:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 344))(v15, a4, a5);
LABEL_36:
          swift_endAccess();
          break;
        default:
          if (v14 == 999)
          {
            swift_beginAccess();
            v19 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a5 + 416);
            v20 = sub_1C20FE4B0();
            v19(v26, &type metadata for Google_Protobuf_UninterpretedOption, v20, a4, a5);
            swift_endAccess();
          }
          else
          {
LABEL_14:
            if ((unint64_t)(v14 - 1000) <= 0x1FFFFC17)
            {
              v21 = sub_1C20FF448();
              (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a5 + 464))(a3 + 16, &type metadata for Google_Protobuf_FileOptions, v21, v14, a4, a5);
            }
          }
          break;
      }
      result = v10(a4, a5);
      v14 = result;
    }
  }
  return result;
}

void Google_Protobuf_FileOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *v3;
  v8 = v3[1];
  v11 = v3[2];
  v10 = v3[3];
  v12 = swift_retain();
  sub_1C20ECF10(v12, a1, v9, v8, v11, v10, a2, a3);
  swift_release();
  if (!v4)
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t sub_1C20ECF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(_BYTE *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v22;
  uint64_t result;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v57)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  uint64_t v61;

  v9 = v8;
  v14 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 24);
  if (v15)
  {
    v16 = *v14;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
    swift_bridgeObjectRetain();
    v17(v16, v15, 1, a7, a8);
    if (v9)
      return swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 40);
  if (!v18)
    goto LABEL_7;
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
  swift_bridgeObjectRetain();
  v20(v19, v18, 8, a7, a8);
  if (v9)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_7:
  swift_beginAccess();
  if (*(_BYTE *)(a1 + 51) == 3
    || (v60[0] = *(_BYTE *)(a1 + 51),
        v21 = *(uint64_t (**)(_BYTE *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a8 + 128),
        v22 = sub_1C2104C9C(),
        result = v21(v60, 9, &type metadata for Google_Protobuf_FileOptions.OptimizeMode, v22, a7, a8),
        !v9))
  {
    swift_beginAccess();
    v24 = *(unsigned __int8 *)(a1 + 48);
    if (v24 == 2
      || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v24 & 1, 10, a7, a8), !v9))
    {
      swift_beginAccess();
      v25 = *(_QWORD *)(a1 + 64);
      if (v25)
      {
        v26 = *(_QWORD *)(a1 + 56);
        v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
        swift_bridgeObjectRetain();
        v27(v26, v25, 11, a7, a8);
        if (v9)
          return swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v28 = *(unsigned __int8 *)(a1 + 72);
      if (v28 == 2
        || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v28 & 1, 16, a7, a8),
            !v9))
      {
        swift_beginAccess();
        v29 = *(unsigned __int8 *)(a1 + 73);
        if (v29 == 2
          || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v29 & 1, 17, a7, a8),
              !v9))
        {
          swift_beginAccess();
          v30 = *(unsigned __int8 *)(a1 + 74);
          if (v30 == 2
            || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v30 & 1, 18, a7, a8), !v9))
          {
            swift_beginAccess();
            v31 = *(unsigned __int8 *)(a1 + 49);
            if (v31 == 2
              || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v31 & 1, 20, a7, a8), !v9))
            {
              swift_beginAccess();
              v32 = *(unsigned __int8 *)(a1 + 76);
              if (v32 == 2
                || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v32 & 1, 23, a7, a8), !v9))
              {
                swift_beginAccess();
                v33 = *(unsigned __int8 *)(a1 + 50);
                if (v33 == 2
                  || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v33 & 1, 27, a7, a8), !v9))
                {
                  swift_beginAccess();
                  v34 = *(unsigned __int8 *)(a1 + 77);
                  if (v34 == 2
                    || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v34 & 1, 31, a7, a8), !v9))
                  {
                    swift_beginAccess();
                    v35 = *(_QWORD *)(a1 + 88);
                    if (v35)
                    {
                      v36 = *(_QWORD *)(a1 + 80);
                      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
                      swift_bridgeObjectRetain();
                      v37(v36, v35, 36, a7, a8);
                      if (v9)
                        return swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    swift_beginAccess();
                    v38 = *(_QWORD *)(a1 + 104);
                    if (!v38
                      || (v39 = *(_QWORD *)(a1 + 96),
                          v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                          swift_bridgeObjectRetain(),
                          v40(v39, v38, 37, a7, a8),
                          result = swift_bridgeObjectRelease(),
                          !v9))
                    {
                      swift_beginAccess();
                      v41 = *(_QWORD *)(a1 + 120);
                      if (!v41
                        || (v42 = *(_QWORD *)(a1 + 112),
                            v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                            swift_bridgeObjectRetain(),
                            v43(v42, v41, 39, a7, a8),
                            result = swift_bridgeObjectRelease(),
                            !v9))
                      {
                        swift_beginAccess();
                        v44 = *(_QWORD *)(a1 + 136);
                        if (!v44
                          || (v45 = *(_QWORD *)(a1 + 128),
                              v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                              swift_bridgeObjectRetain(),
                              v46(v45, v44, 40, a7, a8),
                              result = swift_bridgeObjectRelease(),
                              !v9))
                        {
                          swift_beginAccess();
                          v47 = *(_QWORD *)(a1 + 152);
                          if (!v47
                            || (v48 = *(_QWORD *)(a1 + 144),
                                v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                                swift_bridgeObjectRetain(),
                                v49(v48, v47, 41, a7, a8),
                                result = swift_bridgeObjectRelease(),
                                !v9))
                          {
                            swift_beginAccess();
                            v50 = *(unsigned __int8 *)(a1 + 75);
                            if (v50 == 2
                              || (result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a8 + 104))(v50 & 1, 42, a7, a8), !v9))
                            {
                              swift_beginAccess();
                              v51 = *(_QWORD *)(a1 + 168);
                              if (!v51
                                || (v52 = *(_QWORD *)(a1 + 160),
                                    v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                                    swift_bridgeObjectRetain(),
                                    v53(v52, v51, 44, a7, a8),
                                    result = swift_bridgeObjectRelease(),
                                    !v9))
                              {
                                swift_beginAccess();
                                v54 = *(_QWORD *)(a1 + 184);
                                if (!v54
                                  || (v55 = *(_QWORD *)(a1 + 176),
                                      v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                                      swift_bridgeObjectRetain(),
                                      v56(v55, v54, 45, a7, a8),
                                      result = swift_bridgeObjectRelease(),
                                      !v9))
                                {
                                  swift_beginAccess();
                                  if (!*(_QWORD *)(*(_QWORD *)(a1 + 192) + 16)
                                    || (v57 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a8 + 280),
                                        v58 = sub_1C20FE4B0(),
                                        v59 = swift_bridgeObjectRetain(),
                                        v57(v59, 999, &type metadata for Google_Protobuf_UninterpretedOption, v58, a7, a8), result = swift_bridgeObjectRelease(), !v9))
                                  {
                                    v61 = a5;
                                    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 432))(&v61, 1000, 0x20000000, a7, a8);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C20ED65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 24);
  if (!v5)
  {
    if (v6)
      goto LABEL_123;
    goto LABEL_10;
  }
  if (!v6)
    goto LABEL_123;
  v7 = v4 == *(_QWORD *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = 0, (sub_1C21757C8() & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v11 = *(_QWORD *)(a2 + 40);
    if (v10)
    {
      if (!v11)
        goto LABEL_123;
      if (v9 != *(_QWORD *)(a2 + 32) || v10 != v11)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v11)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v12 = *(unsigned __int8 *)(a1 + 48);
    swift_beginAccess();
    v13 = *(unsigned __int8 *)(a2 + 48);
    if (v12 == 2)
    {
      if (v13 != 2)
        goto LABEL_123;
    }
    else if (v13 == 2 || ((((v13 & 1) == 0) ^ v12) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v14 = *(unsigned __int8 *)(a1 + 49);
    swift_beginAccess();
    v15 = *(unsigned __int8 *)(a2 + 49);
    if (v14 == 2)
    {
      if (v15 != 2)
        goto LABEL_123;
    }
    else if (v15 == 2 || ((((v15 & 1) == 0) ^ v14) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v16 = *(unsigned __int8 *)(a1 + 50);
    swift_beginAccess();
    v17 = *(unsigned __int8 *)(a2 + 50);
    if (v16 == 2)
    {
      if (v17 != 2)
        goto LABEL_123;
    }
    else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v18 = *(unsigned __int8 *)(a1 + 51);
    swift_beginAccess();
    v19 = *(unsigned __int8 *)(a2 + 51);
    if (v18 == 3)
    {
      if (v19 != 3)
        goto LABEL_123;
    }
    else
    {
      v8 = 0;
      if (v19 == 3 || v18 != v19)
        return v8 & 1;
    }
    swift_beginAccess();
    v20 = *(_QWORD *)(a1 + 56);
    v21 = *(_QWORD *)(a1 + 64);
    swift_beginAccess();
    v22 = *(_QWORD *)(a2 + 64);
    if (v21)
    {
      if (!v22)
        goto LABEL_123;
      if (v20 != *(_QWORD *)(a2 + 56) || v21 != v22)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v22)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v23 = *(unsigned __int8 *)(a1 + 72);
    swift_beginAccess();
    v24 = *(unsigned __int8 *)(a2 + 72);
    if (v23 == 2)
    {
      if (v24 != 2)
        goto LABEL_123;
    }
    else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v25 = *(unsigned __int8 *)(a1 + 73);
    swift_beginAccess();
    v26 = *(unsigned __int8 *)(a2 + 73);
    if (v25 == 2)
    {
      if (v26 != 2)
        goto LABEL_123;
    }
    else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v27 = *(unsigned __int8 *)(a1 + 74);
    swift_beginAccess();
    v28 = *(unsigned __int8 *)(a2 + 74);
    if (v27 == 2)
    {
      if (v28 != 2)
        goto LABEL_123;
    }
    else if (v28 == 2 || ((((v28 & 1) == 0) ^ v27) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v29 = *(unsigned __int8 *)(a1 + 75);
    swift_beginAccess();
    v30 = *(unsigned __int8 *)(a2 + 75);
    if (v29 == 2)
    {
      if (v30 != 2)
        goto LABEL_123;
    }
    else if (v30 == 2 || ((((v30 & 1) == 0) ^ v29) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v31 = *(unsigned __int8 *)(a1 + 76);
    swift_beginAccess();
    v32 = *(unsigned __int8 *)(a2 + 76);
    if (v31 == 2)
    {
      if (v32 != 2)
        goto LABEL_123;
    }
    else if (v32 == 2 || ((((v32 & 1) == 0) ^ v31) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v33 = *(unsigned __int8 *)(a1 + 77);
    swift_beginAccess();
    v34 = *(unsigned __int8 *)(a2 + 77);
    if (v33 == 2)
    {
      if (v34 != 2)
        goto LABEL_123;
    }
    else if (v34 == 2 || ((((v34 & 1) == 0) ^ v33) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v35 = *(_QWORD *)(a1 + 80);
    v36 = *(_QWORD *)(a1 + 88);
    swift_beginAccess();
    v37 = *(_QWORD *)(a2 + 88);
    if (v36)
    {
      if (!v37)
        goto LABEL_123;
      if (v35 != *(_QWORD *)(a2 + 80) || v36 != v37)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v37)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v38 = *(_QWORD *)(a1 + 96);
    v39 = *(_QWORD *)(a1 + 104);
    swift_beginAccess();
    v40 = *(_QWORD *)(a2 + 104);
    if (v39)
    {
      if (!v40)
        goto LABEL_123;
      if (v38 != *(_QWORD *)(a2 + 96) || v39 != v40)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v40)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v41 = *(_QWORD *)(a1 + 112);
    v42 = *(_QWORD *)(a1 + 120);
    swift_beginAccess();
    v43 = *(_QWORD *)(a2 + 120);
    if (v42)
    {
      if (!v43)
        goto LABEL_123;
      if (v41 != *(_QWORD *)(a2 + 112) || v42 != v43)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v43)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v44 = *(_QWORD *)(a1 + 128);
    v45 = *(_QWORD *)(a1 + 136);
    swift_beginAccess();
    v46 = *(_QWORD *)(a2 + 136);
    if (v45)
    {
      if (!v46)
        goto LABEL_123;
      if (v44 != *(_QWORD *)(a2 + 128) || v45 != v46)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v46)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v47 = *(_QWORD *)(a1 + 144);
    v48 = *(_QWORD *)(a1 + 152);
    swift_beginAccess();
    v49 = *(_QWORD *)(a2 + 152);
    if (v48)
    {
      if (!v49)
        goto LABEL_123;
      if (v47 != *(_QWORD *)(a2 + 144) || v48 != v49)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v49)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v50 = *(_QWORD *)(a1 + 160);
    v51 = *(_QWORD *)(a1 + 168);
    swift_beginAccess();
    v52 = *(_QWORD *)(a2 + 168);
    if (v51)
    {
      if (!v52)
        goto LABEL_123;
      if (v50 != *(_QWORD *)(a2 + 160) || v51 != v52)
      {
        v8 = 0;
        if ((sub_1C21757C8() & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v52)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    v53 = *(_QWORD *)(a1 + 176);
    v54 = *(_QWORD *)(a1 + 184);
    swift_beginAccess();
    v55 = *(_QWORD *)(a2 + 184);
    if (v54)
    {
      if (v55)
      {
        if (v53 != *(_QWORD *)(a2 + 176) || v54 != v55)
        {
          v8 = 0;
          if ((sub_1C21757C8() & 1) == 0)
            return v8 & 1;
        }
LABEL_125:
        swift_beginAccess();
        v57 = *(_QWORD *)(a1 + 192);
        swift_beginAccess();
        v58 = *(_QWORD *)(a2 + 192);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = sub_1C20F5660(v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v8 & 1;
      }
    }
    else if (!v55)
    {
      goto LABEL_125;
    }
LABEL_123:
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_FileOptions.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BEA1C((uint64_t)v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

uint64_t sub_1C20EDF44@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9E0];
  if (qword_1EF75CC08 != -1)
    swift_once();
  *(_QWORD *)(a1 + 24) = qword_1EF75DA78;
  return swift_retain();
}

unint64_t sub_1C20EDFAC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C20EDFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20EDFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FileOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20EDFF4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC00 != -1)
    swift_once();
  v2 = unk_1EF75DA60;
  v3 = qword_1EF75DA68;
  v4 = unk_1EF75DA70;
  *a1 = qword_1EF75DA58;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EE070()
{
  uint64_t *v0;

  return sub_1C2158DE8(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C20EE07C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BEA1C((uint64_t)v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

void sub_1C20EE0D8(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BEA1C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C20EE0E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BEA1C((uint64_t)v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

uint64_t sub_1C20EE140()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3C48, &qword_1EF75DA80);
}

uint64_t static Google_Protobuf_FileOptions.OptimizeMode._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC10 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DA88;
  v3 = qword_1EF75DA90;
  v4 = unk_1EF75DA98;
  *a1 = qword_1EF75DA80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EE1D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC10 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DA88;
  v3 = qword_1EF75DA90;
  v4 = unk_1EF75DA98;
  *a1 = qword_1EF75DA80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_MessageOptions.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C20EE268()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4848, &qword_1EF75DAA0);
}

uint64_t static Google_Protobuf_MessageOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC18 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DAA8;
  v3 = qword_1EF75DAB0;
  v4 = unk_1EF75DAB8;
  *a1 = qword_1EF75DAA0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MessageOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  v10 = v4;
  if (!v4)
  {
    v11 = result;
    while ((v9 & 1) == 0)
    {
      switch(v11)
      {
        case 1:
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v13 = v3 + 32;
          goto LABEL_14;
        case 2:
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v13 = v3 + 33;
          goto LABEL_14;
        case 3:
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v13 = v3 + 34;
          goto LABEL_14;
        case 4:
        case 5:
        case 6:
          goto LABEL_9;
        case 7:
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v13 = v3 + 35;
LABEL_14:
          v16 = v10;
          v12(v13, a2, a3);
          goto LABEL_15;
        default:
          if (v11 == 999)
          {
            v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
            v15 = sub_1C20FE4B0();
            v16 = v10;
            v14(v3, &type metadata for Google_Protobuf_UninterpretedOption, v15, a2, a3);
          }
          else
          {
LABEL_9:
            if ((unint64_t)(v11 - 1000) > 0x1FFFFC17)
              goto LABEL_16;
            v17 = sub_1C20FEC68();
            v16 = v10;
            (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_MessageOptions, v17, v11, a2, a3);
          }
LABEL_15:
          v10 = v16;
LABEL_16:
          result = v7(a2, a3);
          v11 = result;
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C20EE48C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v9, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v9, (uint64_t)&v10, &qword_1EF75D588);
  if (v10 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 33, (uint64_t)&v8, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v8, (uint64_t)&v11, &qword_1EF75D588);
  if (v11 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 34, (uint64_t)&v7, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v7, (uint64_t)&v12, &qword_1EF75D588);
  if (v12 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 35, (uint64_t)&v6, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v6, (uint64_t)&v13, &qword_1EF75D588);
  if (v13 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  if (!*(_QWORD *)(*v3 + 16) || (result = sub_1C2111BB8(*v3), !v2))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
      __asm { BR              X10 }
  }
  return result;
}

void Google_Protobuf_MessageOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  void (*v12)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v7 = *v3;
  v14 = *(_OWORD *)(v3 + 1);
  v16 = v3[3];
  v8 = *((unsigned __int8 *)v3 + 32);
  v9 = *((unsigned __int8 *)v3 + 33);
  v10 = *((unsigned __int8 *)v3 + 34);
  v11 = *((unsigned __int8 *)v3 + 35);
  if (v8 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v8 & 1, 1, a2, a3), !v4))
  {
    if (v9 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 2, a2, a3), !v4))
    {
      if (v10 == 2
        || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v10 & 1, 3, a2, a3), !v4))
      {
        if (v11 == 2
          || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v11 & 1, 7, a2, a3), !v4))
        {
          if (!*(_QWORD *)(v7 + 16)
            || (v12 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                v13 = sub_1C20FE4B0(),
                v12(v7, 999, &type metadata for Google_Protobuf_UninterpretedOption, v13, a2, a3),
                !v4))
          {
            *(_QWORD *)&v15 = v16;
            (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v15, 1000, 0x20000000, a2, a3);
            if (!v4)
            {
              v15 = v14;
              UnknownStorage.traverse<A>(visitor:)();
            }
          }
        }
      }
    }
  }
}

uint64_t Google_Protobuf_MessageOptions.hashValue.getter()
{
  __int128 *v0;
  __int128 v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int v20;

  v1 = v0[1];
  v18 = *v0;
  v19 = v1;
  v20 = *((_DWORD *)v0 + 8);
  sub_1C2175828();
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  sub_1C20EE48C((uint64_t)&v3);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return sub_1C2175870();
}

double sub_1C20EE8D8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(a1 + 32) = 33686018;
  return result;
}

unint64_t sub_1C20EE908()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C20EE924()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;

  v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    return 0;
  sub_1C20E0A14(v1);
  v2 = static Internal.areAllInitialized(_:)();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C20EE984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t sub_1C20EE990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MessageOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20EE9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_MessageOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20EE9B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC18 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DAA8;
  v3 = qword_1EF75DAB0;
  v4 = unk_1EF75DAB8;
  *a1 = qword_1EF75DAA0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EEA34()
{
  return sub_1C2158E04();
}

uint64_t sub_1C20EEA6C()
{
  __int128 *v0;
  __int128 v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int v20;

  v1 = v0[1];
  v18 = *v0;
  v19 = v1;
  v20 = *((_DWORD *)v0 + 8);
  sub_1C2175828();
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  sub_1C20EE48C((uint64_t)&v3);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return sub_1C2175870();
}

double sub_1C20EEB0C(__int128 *a1)
{
  __int128 *v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  int v18;

  v3 = v1[1];
  v16 = *v1;
  v17 = v3;
  v18 = *((_DWORD *)v1 + 8);
  v4 = *((_QWORD *)a1 + 8);
  v5 = a1[1];
  v11 = *a1;
  v12 = v5;
  v6 = a1[3];
  v13 = a1[2];
  v14 = v6;
  v15 = v4;
  sub_1C20EE48C((uint64_t)&v11);
  v7 = v15;
  v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  result = *(double *)&v13;
  v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20EEB94()
{
  __int128 *v0;
  __int128 v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  int v20;

  v1 = v0[1];
  v18 = *v0;
  v19 = v1;
  v20 = *((_DWORD *)v0 + 8);
  sub_1C2175828();
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  sub_1C20EE48C((uint64_t)&v3);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_FieldOptions.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C20EEC50()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4460, &qword_1EF75DAC0);
}

uint64_t static Google_Protobuf_FieldOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC20 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DAC8;
  v3 = qword_1EF75DAD0;
  v4 = unk_1EF75DAD8;
  *a1 = qword_1EF75DAC0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  v10 = v4;
  if (!v4)
  {
    v11 = result;
    while ((v9 & 1) == 0)
    {
      switch(v11)
      {
        case 1:
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 392);
          v13 = sub_1C20FED34();
          v14 = v3 + 32;
          v15 = &type metadata for Google_Protobuf_FieldOptions.CType;
          goto LABEL_15;
        case 2:
          v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v19 = v3 + 33;
          goto LABEL_17;
        case 3:
          v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v19 = v3 + 36;
          goto LABEL_17;
        case 4:
        case 7:
        case 8:
        case 9:
          goto LABEL_9;
        case 5:
          v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v19 = v3 + 35;
          goto LABEL_17;
        case 6:
          v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 392);
          v13 = sub_1C20FECF0();
          v14 = v3 + 34;
          v15 = &type metadata for Google_Protobuf_FieldOptions.JSType;
          goto LABEL_15;
        case 10:
          v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v19 = v3 + 37;
LABEL_17:
          v17 = v10;
          v18(v19, a2, a3);
          goto LABEL_18;
        default:
          if (v11 == 999)
          {
            v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
            v13 = sub_1C20FE4B0();
            v14 = v3;
            v15 = &type metadata for Google_Protobuf_UninterpretedOption;
LABEL_15:
            v17 = v10;
            v12(v14, v15, v13, a2, a3);
          }
          else
          {
LABEL_9:
            if ((unint64_t)(v11 - 1000) > 0x1FFFFC17)
              goto LABEL_19;
            v16 = sub_1C20FECAC();
            v17 = v10;
            (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_FieldOptions, v16, v11, a2, a3);
          }
LABEL_18:
          v10 = v17;
LABEL_19:
          result = v7(a2, a3);
          v11 = result;
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C20EEEB8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v11, &qword_1EF75F100);
  sub_1C20C4D30((uint64_t)&v11, (uint64_t)&v12, &qword_1EF75F100);
  if (v12 != 3)
  {
    sub_1C2175834();
    sub_1C2175834();
  }
  sub_1C20C4D30((uint64_t)v3 + 33, (uint64_t)&v10, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v10, (uint64_t)&v13, &qword_1EF75D588);
  if (v13 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 36, (uint64_t)&v9, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v9, (uint64_t)&v14, &qword_1EF75D588);
  if (v14 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 35, (uint64_t)&v8, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v8, (uint64_t)&v15, &qword_1EF75D588);
  if (v15 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 34, (uint64_t)&v7, &qword_1EF75F108);
  sub_1C20C4D30((uint64_t)&v7, (uint64_t)&v16, &qword_1EF75F108);
  if (v16 != 3)
  {
    sub_1C2175834();
    sub_1C2175834();
  }
  sub_1C20C4D30((uint64_t)v3 + 37, (uint64_t)&v6, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v6, (uint64_t)&v17, &qword_1EF75D588);
  if (v17 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  if (!*(_QWORD *)(*v3 + 16) || (result = sub_1C2111BB8(*v3), !v2))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
      __asm { BR              X10 }
  }
  return result;
}

void sub_1C20EF11C(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  unsigned __int8 v5;
  unsigned __int8 *v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 *v12;
  char *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  unsigned __int8 v23;
  char v24;
  char v25;
  char v26;
  unsigned __int8 v27;
  char v28;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v22, &qword_1EF75F100);
  sub_1C20C4D30((uint64_t)&v22, (uint64_t)&v23, &qword_1EF75F100);
  v5 = v23;
  if (v23 != 3)
  {
    sub_1C20A988C(1uLL);
    sub_1C20A9EB4((uint64_t)": ", 2, v6);
    sub_1C215F770(v5);
    v7 = *a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      *a1 = v7;
    }
    v10 = *((_QWORD *)v7 + 2);
    v9 = *((_QWORD *)v7 + 3);
    if (v10 >= v9 >> 1)
      v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 10;
    *a1 = v7;
  }
  sub_1C20C4D30((uint64_t)v3 + 33, (uint64_t)&v21, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v21, (uint64_t)&v24, &qword_1EF75D588);
  if (v24 == 2 || (sub_1C20AE8CC(v24 & 1, 2uLL), !v2))
  {
    sub_1C20C4D30((uint64_t)v3 + 36, (uint64_t)&v20, &qword_1EF75D588);
    sub_1C20C4D30((uint64_t)&v20, (uint64_t)&v25, &qword_1EF75D588);
    if (v25 == 2 || (sub_1C20AE8CC(v25 & 1, 3uLL), !v2))
    {
      sub_1C20C4D30((uint64_t)v3 + 35, (uint64_t)&v19, &qword_1EF75D588);
      sub_1C20C4D30((uint64_t)&v19, (uint64_t)&v26, &qword_1EF75D588);
      if (v26 == 2 || (sub_1C20AE8CC(v26 & 1, 5uLL), !v2))
      {
        sub_1C20C4D30((uint64_t)v3 + 34, (uint64_t)&v18, &qword_1EF75F108);
        sub_1C20C4D30((uint64_t)&v18, (uint64_t)&v27, &qword_1EF75F108);
        v11 = v27;
        if (v27 != 3)
        {
          sub_1C20A988C(6uLL);
          sub_1C20A9EB4((uint64_t)": ", 2, v12);
          sub_1C215F764(v11);
          v13 = *a1;
          v14 = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v13;
          if ((v14 & 1) == 0)
          {
            v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
            *a1 = v13;
          }
          v16 = *((_QWORD *)v13 + 2);
          v15 = *((_QWORD *)v13 + 3);
          if (v16 >= v15 >> 1)
            v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
          *((_QWORD *)v13 + 2) = v16 + 1;
          v13[v16 + 32] = 10;
          *a1 = v13;
        }
        sub_1C20C4D30((uint64_t)v3 + 37, (uint64_t)&v17, &qword_1EF75D588);
        sub_1C20C4D30((uint64_t)&v17, (uint64_t)&v28, &qword_1EF75D588);
        if (v28 == 2 || (sub_1C20AE8CC(v28 & 1, 0xAuLL), !v2))
        {
          if (!*(_QWORD *)(*v3 + 16) || (sub_1C2162040(*v3, 0x3E7uLL), !v2))
          {
            sub_1C2130B94((uint64_t)a1, 1000, 0x20000000, v3[3]);
            if (!v2)
              sub_1C2122EF0((uint64_t)a1, v3[1], v3[2]);
          }
        }
      }
    }
  }
}

void Google_Protobuf_FieldOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  void (*v14)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  void (*v16)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  int v23;
  int v24;

  v21 = *v3;
  v20 = *(_OWORD *)(v3 + 1);
  v7 = v3[3];
  v8 = *((unsigned __int8 *)v3 + 32);
  v9 = *((unsigned __int8 *)v3 + 33);
  v10 = *((unsigned __int8 *)v3 + 34);
  v11 = *((unsigned __int8 *)v3 + 35);
  v12 = *((unsigned __int8 *)v3 + 36);
  v23 = *((unsigned __int8 *)v3 + 37);
  v24 = v10;
  if (v8 == 3
    || (LOBYTE(v22) = v8,
        v13 = v7,
        v14 = *(void (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
        v15 = sub_1C20FED34(),
        v14(&v22, 1, &type metadata for Google_Protobuf_FieldOptions.CType, v15, a2, a3),
        v7 = v13,
        !v4))
  {
    if (v9 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 2, a2, a3), !v4))
    {
      if (v12 == 2
        || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v12 & 1, 3, a2, a3), !v4))
      {
        if (v11 == 2
          || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v11 & 1, 5, a2, a3), !v4))
        {
          if (v24 == 3
            || (LOBYTE(v22) = v24,
                v16 = *(void (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
                v17 = sub_1C20FECF0(),
                v16(&v22, 6, &type metadata for Google_Protobuf_FieldOptions.JSType, v17, a2, a3),
                !v4))
          {
            if (v23 == 2
              || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v23 & 1, 10, a2, a3), !v4))
            {
              if (!*(_QWORD *)(v21 + 16)
                || (v18 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                    v19 = sub_1C20FE4B0(),
                    v18(v21, 999, &type metadata for Google_Protobuf_UninterpretedOption, v19, a2, a3),
                    !v4))
              {
                *(_QWORD *)&v22 = v7;
                (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v22, 1000, 0x20000000, a2, a3);
                if (!v4)
                {
                  v22 = v20;
                  UnknownStorage.traverse<A>(visitor:)();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t Google_Protobuf_FieldOptions.hashValue.getter()
{
  __int128 *v0;
  __int128 v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _OWORD v19[2];

  v1 = v0[1];
  v18 = *v0;
  v19[0] = v1;
  *(_QWORD *)((char *)v19 + 14) = *(_QWORD *)((char *)v0 + 30);
  sub_1C2175828();
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  sub_1C20EEEB8((uint64_t)&v3);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return sub_1C2175870();
}

double sub_1C20EF78C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&result = 33751555;
  *(_DWORD *)(a1 + 32) = 33751555;
  *(_WORD *)(a1 + 36) = 514;
  return result;
}

unint64_t sub_1C20EF7C8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C20EF7E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    return 0;
  v2 = sub_1C20E0A14(v1);
  v3 = _s20SiriOntologyProtobuf8InternalO17areAllInitializedySbSayAA7Message_pGFZ_0(v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C20EF844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20EF858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_FieldOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20EF86C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC20 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DAC8;
  v3 = qword_1EF75DAD0;
  v4 = unk_1EF75DAD8;
  *a1 = qword_1EF75DAC0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EF8E8()
{
  return sub_1C2158EC4();
}

uint64_t sub_1C20EF920()
{
  __int128 *v0;
  __int128 v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _OWORD v19[2];

  v1 = v0[1];
  v18 = *v0;
  v19[0] = v1;
  *(_QWORD *)((char *)v19 + 14) = *(_QWORD *)((char *)v0 + 30);
  sub_1C2175828();
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  sub_1C20EEEB8((uint64_t)&v3);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return sub_1C2175870();
}

double sub_1C20EF9C0(__int128 *a1)
{
  __int128 *v1;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  _OWORD v17[2];

  v3 = v1[1];
  v16 = *v1;
  v17[0] = v3;
  *(_QWORD *)((char *)v17 + 14) = *(_QWORD *)((char *)v1 + 30);
  v4 = *((_QWORD *)a1 + 8);
  v5 = a1[1];
  v11 = *a1;
  v12 = v5;
  v6 = a1[3];
  v13 = a1[2];
  v14 = v6;
  v15 = v4;
  sub_1C20EEEB8((uint64_t)&v11);
  v7 = v15;
  v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  result = *(double *)&v13;
  v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20EFA48()
{
  __int128 *v0;
  __int128 v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  _OWORD v19[2];

  v1 = v0[1];
  v18 = *v0;
  v19[0] = v1;
  *(_QWORD *)((char *)v19 + 14) = *(_QWORD *)((char *)v0 + 30);
  sub_1C2175828();
  v3 = v13;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  sub_1C20EEEB8((uint64_t)&v3);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return sub_1C2175870();
}

uint64_t sub_1C20EFAE8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD42D0, &qword_1EF75DAE0);
}

uint64_t static Google_Protobuf_FieldOptions.CType._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC28 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DAE8;
  v3 = qword_1EF75DAF0;
  v4 = unk_1EF75DAF8;
  *a1 = qword_1EF75DAE0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EFB78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC28 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DAE8;
  v3 = qword_1EF75DAF0;
  v4 = unk_1EF75DAF8;
  *a1 = qword_1EF75DAE0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EFBF4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4398, &qword_1EF75DB00);
}

uint64_t static Google_Protobuf_FieldOptions.JSType._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC30 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB08;
  v3 = qword_1EF75DB10;
  v4 = unk_1EF75DB18;
  *a1 = qword_1EF75DB00;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20EFC84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC30 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB08;
  v3 = qword_1EF75DB10;
  v4 = unk_1EF75DB18;
  *a1 = qword_1EF75DB00;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_OneofOptions.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C20EFD1C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4608, &qword_1EF75DB20);
}

uint64_t static Google_Protobuf_OneofOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC38 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB28;
  v3 = qword_1EF75DB30;
  v4 = unk_1EF75DB38;
  *a1 = qword_1EF75DB20;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_OneofOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EFDD0(a1, a2, a3, (uint64_t (*)(void))sub_1C20FED78, (uint64_t)&type metadata for Google_Protobuf_OneofOptions);
}

uint64_t sub_1C20EFDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t i;
  void (*v16)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v11(a2, a3);
  v14 = v6;
  if (!v6)
  {
    for (i = result; ; i = result)
    {
      if ((v13 & 1) != 0)
        return result;
      if (i == 999)
        break;
      if ((unint64_t)(i - 1000) < 0x1FFFFC18)
      {
        v19 = a4();
        v18 = v14;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v5 + 24, a5, v19, i, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      result = v11(a2, a3);
    }
    v16 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    v17 = sub_1C20FE4B0();
    v18 = v14;
    v16(v5, &type metadata for Google_Protobuf_UninterpretedOption, v17, a2, a3);
LABEL_5:
    v14 = v18;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C20EFEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;

  if (!*(_QWORD *)(a2 + 16) || (result = sub_1C2111BB8(a2), !v5))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, a5);
    if (!v5)
      __asm { BR              X10 }
  }
  return result;
}

void Google_Protobuf_OneofOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20EFFD0(a1, a2, a3);
}

void sub_1C20EFFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v10;
  __int128 v11;
  __int128 v12;

  v7 = *v3;
  v8 = v3[3];
  v11 = *(_OWORD *)(v3 + 1);
  if (!*(_QWORD *)(*v3 + 16)
    || (v9 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
        v10 = sub_1C20FE4B0(),
        v9(v7, 999, &type metadata for Google_Protobuf_UninterpretedOption, v10, a2, a3),
        !v4))
  {
    *(_QWORD *)&v12 = v8;
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v12, 1000, 0x20000000, a2, a3);
    if (!v4)
    {
      v12 = v11;
      UnknownStorage.traverse<A>(visitor:)();
    }
  }
}

uint64_t static Google_Protobuf_OneofOptions.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20FE8B8(a1, a2) & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C22_ExtensionRangeOptionsV9hashValueSivg_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  sub_1C20EFEE4((uint64_t)&v6, v1, v2, v4, v3);
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  return sub_1C2175870();
}

double sub_1C20F0188@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  return result;
}

unint64_t sub_1C20F01B0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C20F01CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_OneofOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C20F01E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC38 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB28;
  v3 = qword_1EF75DB30;
  v4 = unk_1EF75DB38;
  *a1 = qword_1EF75DB20;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F025C()
{
  uint64_t v0;

  return sub_1C2158F84(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_1C20F0268(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = *((_QWORD *)a1 + 8);
  v8 = a1[1];
  v14 = *a1;
  v15 = v8;
  v9 = a1[3];
  v16 = a1[2];
  v17 = v9;
  v18 = v7;
  sub_1C20EFEE4((uint64_t)&v14, v3, v4, v5, v6);
  v10 = v18;
  v11 = v15;
  *a1 = v14;
  a1[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a1[2] = v16;
  a1[3] = v13;
  *((_QWORD *)a1 + 8) = v10;
  return result;
}

uint64_t sub_1C20F02E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  sub_1C20EFEE4((uint64_t)&v6, v1, v2, v4, v3);
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  return sub_1C2175870();
}

uint64_t sub_1C20F038C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C20FE8B8(a1, a2) & 1;
}

unint64_t static Google_Protobuf_EnumOptions.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C20F03C0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3B80, &qword_1EF75DB40);
}

uint64_t static Google_Protobuf_EnumOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC40 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB48;
  v3 = qword_1EF75DB50;
  v4 = unk_1EF75DB58;
  *a1 = qword_1EF75DB40;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t i;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  v10 = v4;
  if (!v4)
  {
    for (i = result; ; i = result)
    {
      if ((v9 & 1) != 0)
        return result;
      switch(i)
      {
        case 999:
          v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          v15 = sub_1C20FE4B0();
          v16 = v10;
          v14(v3, &type metadata for Google_Protobuf_UninterpretedOption, v15, a2, a3);
          break;
        case 3:
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v13 = v3 + 33;
          goto LABEL_11;
        case 2:
          v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          v13 = v3 + 32;
LABEL_11:
          v16 = v10;
          v12(v13, a2, a3);
          break;
        default:
          if ((unint64_t)(i - 1000) >= 0x1FFFFC18)
            goto LABEL_15;
          v17 = sub_1C20FEDBC();
          v16 = v10;
          (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_EnumOptions, v17, i, a2, a3);
          break;
      }
      v10 = v16;
LABEL_15:
      result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C20F05A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char v6;
  char v7;
  char v8;
  char v9;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v7, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v7, (uint64_t)&v8, &qword_1EF75D588);
  if (v8 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 33, (uint64_t)&v6, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v6, (uint64_t)&v9, &qword_1EF75D588);
  if (v9 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  if (!*(_QWORD *)(*v3 + 16) || (result = sub_1C2111BB8(*v3), !v2))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
      __asm { BR              X10 }
  }
  return result;
}

void Google_Protobuf_EnumOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  void (*v11)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  v7 = *v3;
  v13 = *(_OWORD *)(v3 + 1);
  v8 = v3[3];
  v9 = *((unsigned __int8 *)v3 + 32);
  v10 = *((unsigned __int8 *)v3 + 33);
  if (v9 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 2, a2, a3), !v4))
  {
    if (v10 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v10 & 1, 3, a2, a3), !v4))
    {
      if (!*(_QWORD *)(v7 + 16)
        || (v11 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
            v12 = sub_1C20FE4B0(),
            v11(v7, 999, &type metadata for Google_Protobuf_UninterpretedOption, v12, a2, a3),
            !v4))
      {
        *(_QWORD *)&v14 = v8;
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v14, 1000, 0x20000000, a2, a3);
        if (!v4)
        {
          v14 = v13;
          UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
}

uint64_t Google_Protobuf_EnumOptions.hashValue.getter()
{
  return sub_1C20F1CC4((void (*)(__int128 *))sub_1C20F05A0);
}

double sub_1C20F085C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_WORD *)(a1 + 32) = 514;
  return result;
}

unint64_t sub_1C20F088C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C20F08AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F08C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_EnumOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F08D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC40 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB48;
  v3 = qword_1EF75DB50;
  v4 = unk_1EF75DB58;
  *a1 = qword_1EF75DB40;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F0950()
{
  return sub_1C2159090();
}

uint64_t sub_1C20F0988(uint64_t a1, uint64_t a2)
{
  return sub_1C20F1EA4(a1, a2, (void (*)(__int128 *))sub_1C20F05A0);
}

double sub_1C20F0994(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F1F5C(a1, a2, a3, (void (*)(__int128 *))sub_1C20F05A0);
}

uint64_t sub_1C20F09A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F1FF0(a1, a2, a3, (void (*)(__int128 *))sub_1C20F05A0);
}

unint64_t static Google_Protobuf_EnumValueOptions.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_1C20F09CC()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4F48, &qword_1EF75DB60);
}

uint64_t static Google_Protobuf_EnumValueOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC48 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB68;
  v3 = qword_1EF75DB70;
  v4 = unk_1EF75DB78;
  *a1 = qword_1EF75DB60;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumValueOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t i;
  void (*v12)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  v10 = v4;
  if (!v4)
  {
    for (i = result; ; i = result)
    {
      if ((v9 & 1) != 0)
        return result;
      if (i == 999)
        break;
      if (i == 1)
      {
        v14 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
        goto LABEL_5;
      }
      if ((unint64_t)(i - 1000) <= 0x1FFFFC17)
      {
        v15 = sub_1C20FEF30();
        v14 = v10;
        (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_EnumValueOptions, v15, i, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      result = v7(a2, a3);
    }
    v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    v13 = sub_1C20FE4B0();
    v14 = v10;
    v12(v3, &type metadata for Google_Protobuf_UninterpretedOption, v13, a2, a3);
LABEL_5:
    v10 = v14;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C20F0B90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char v6;
  char v7;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v6, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v6, (uint64_t)&v7, &qword_1EF75D588);
  if (v7 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  if (!*(_QWORD *)(*v3 + 16) || (result = sub_1C2111BB8(*v3), !v2))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
      __asm { BR              X10 }
  }
  return result;
}

void Google_Protobuf_EnumValueOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20F1104(a1, a2, a3, 1);
}

uint64_t static Google_Protobuf_EnumValueOptions.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C20FE4F4(a1, a2) & 1;
}

uint64_t Google_Protobuf_EnumValueOptions.hashValue.getter()
{
  return sub_1C20F124C((void (*)(__int128 *))sub_1C20F0B90);
}

unint64_t sub_1C20F0CDC()
{
  return 0xD000000000000020;
}

uint64_t sub_1C20F0CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValueOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F0D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_EnumValueOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F0D20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC48 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB68;
  v3 = qword_1EF75DB70;
  v4 = unk_1EF75DB78;
  *a1 = qword_1EF75DB60;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F0D9C()
{
  return sub_1C21590AC();
}

uint64_t sub_1C20F0DD4(uint64_t a1, uint64_t a2)
{
  return sub_1C20F142C(a1, a2, (void (*)(__int128 *))sub_1C20F0B90);
}

double sub_1C20F0DE0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F14E4(a1, a2, a3, (void (*)(__int128 *))sub_1C20F0B90);
}

uint64_t sub_1C20F0DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F1578(a1, a2, a3, (void (*)(__int128 *))sub_1C20F0B90);
}

unint64_t static Google_Protobuf_ServiceOptions.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C20F0E18()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4980, &qword_1EF75DB80);
}

uint64_t static Google_Protobuf_ServiceOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC50 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB88;
  v3 = qword_1EF75DB90;
  v4 = unk_1EF75DB98;
  *a1 = qword_1EF75DB80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ServiceOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t i;
  void (*v12)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  v10 = v4;
  if (!v4)
  {
    for (i = result; ; i = result)
    {
      if ((v9 & 1) != 0)
        return result;
      if (i == 999)
        break;
      if (i == 33)
      {
        v14 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
        goto LABEL_5;
      }
      if ((unint64_t)(i - 1000) <= 0x1FFFFC17)
      {
        v15 = sub_1C20FEF74();
        v14 = v10;
        (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_ServiceOptions, v15, i, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      result = v7(a2, a3);
    }
    v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    v13 = sub_1C20FE4B0();
    v14 = v10;
    v12(v3, &type metadata for Google_Protobuf_UninterpretedOption, v13, a2, a3);
LABEL_5:
    v10 = v14;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C20F0FDC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char v6;
  char v7;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v6, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v6, (uint64_t)&v7, &qword_1EF75D588);
  if (v7 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  if (!*(_QWORD *)(*v3 + 16) || (result = sub_1C2111BB8(*v3), !v2))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
      __asm { BR              X10 }
  }
  return result;
}

void Google_Protobuf_ServiceOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20F1104(a1, a2, a3, 33);
}

void sub_1C20F1104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void (*v11)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  __int128 v13;
  __int128 v14;

  v8 = *v4;
  v13 = *(_OWORD *)(v4 + 1);
  v9 = v4[3];
  v10 = *((unsigned __int8 *)v4 + 32);
  if (v10 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v10 & 1, a4, a2, a3), !v5))
  {
    if (!*(_QWORD *)(v8 + 16)
      || (v11 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
          v12 = sub_1C20FE4B0(),
          v11(v8, 999, &type metadata for Google_Protobuf_UninterpretedOption, v12, a2, a3),
          !v5))
    {
      *(_QWORD *)&v14 = v9;
      (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v14, 1000, 0x20000000, a2, a3);
      if (!v5)
      {
        v14 = v13;
        UnknownStorage.traverse<A>(visitor:)();
      }
    }
  }
}

uint64_t static Google_Protobuf_ServiceOptions.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C20FE4F4(a1, a2) & 1;
}

uint64_t Google_Protobuf_ServiceOptions.hashValue.getter()
{
  return sub_1C20F124C((void (*)(__int128 *))sub_1C20F0FDC);
}

uint64_t sub_1C20F124C(void (*a1)(__int128 *))
{
  __int128 *v1;
  __int128 v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v3 = v1[1];
  v20 = *v1;
  v21 = v3;
  v22 = *((_BYTE *)v1 + 32);
  sub_1C2175828();
  v5 = v15;
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  a1(&v5);
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  return sub_1C2175870();
}

double sub_1C20F12F8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a1 + 32) = 2;
  return result;
}

unint64_t sub_1C20F1328()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C20F1344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ServiceOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F1358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_ServiceOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F136C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC50 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DB88;
  v3 = qword_1EF75DB90;
  v4 = unk_1EF75DB98;
  *a1 = qword_1EF75DB80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F13E8()
{
  return sub_1C2159184();
}

uint64_t sub_1C20F1420(uint64_t a1, uint64_t a2)
{
  return sub_1C20F142C(a1, a2, (void (*)(__int128 *))sub_1C20F0FDC);
}

uint64_t sub_1C20F142C(uint64_t a1, uint64_t a2, void (*a3)(__int128 *))
{
  __int128 *v3;
  __int128 v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v5 = v3[1];
  v22 = *v3;
  v23 = v5;
  v24 = *((_BYTE *)v3 + 32);
  sub_1C2175828();
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  a3(&v7);
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  v16 = v11;
  return sub_1C2175870();
}

double sub_1C20F14D8(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F14E4(a1, a2, a3, (void (*)(__int128 *))sub_1C20F0FDC);
}

double sub_1C20F14E4(__int128 *a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *))
{
  __int128 *v4;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v6 = v4[1];
  v19 = *v4;
  v20 = v6;
  v21 = *((_BYTE *)v4 + 32);
  v7 = *((_QWORD *)a1 + 8);
  v8 = a1[1];
  v14 = *a1;
  v15 = v8;
  v9 = a1[3];
  v16 = a1[2];
  v17 = v9;
  v18 = v7;
  a4(&v14);
  v10 = v18;
  v11 = v15;
  *a1 = v14;
  a1[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a1[2] = v16;
  a1[3] = v13;
  *((_QWORD *)a1 + 8) = v10;
  return result;
}

uint64_t sub_1C20F156C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F1578(a1, a2, a3, (void (*)(__int128 *))sub_1C20F0FDC);
}

uint64_t sub_1C20F1578(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *))
{
  __int128 *v4;
  __int128 v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v6 = v4[1];
  v23 = *v4;
  v24 = v6;
  v25 = *((_BYTE *)v4 + 32);
  sub_1C2175828();
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v22;
  a4(&v8);
  v13 = v8;
  v14 = v9;
  v15 = v10;
  v16 = v11;
  v17 = v12;
  return sub_1C2175870();
}

uint64_t sub_1C20F1620(uint64_t a1, uint64_t a2)
{
  return sub_1C20FE4F4(a1, a2) & 1;
}

unint64_t static Google_Protobuf_MethodOptions.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C20F1654()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4728, &qword_1EF75DBA0);
}

uint64_t static Google_Protobuf_MethodOptions._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC58 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DBA8;
  v3 = qword_1EF75DBB0;
  v4 = unk_1EF75DBB8;
  *a1 = qword_1EF75DBA0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MethodOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void (*v13)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  unint64_t v17;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  v10 = v4;
  if (!v4)
  {
    for (i = result; ; i = result)
    {
      if ((v9 & 1) != 0)
        return result;
      if (i == 999)
        break;
      if (i == 34)
      {
        v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 392);
        v14 = sub_1C20FEFFC();
        v15 = v3 + 33;
        v16 = &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel;
        goto LABEL_11;
      }
      if (i == 33)
      {
        v12 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
      }
      else
      {
        if ((unint64_t)(i - 1000) >= 0x1FFFFC18)
          goto LABEL_15;
        v17 = sub_1C20FEFB8();
        v12 = v10;
        (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_MethodOptions, v17, i, a2, a3);
      }
LABEL_14:
      v10 = v12;
LABEL_15:
      result = v7(a2, a3);
    }
    v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    v14 = sub_1C20FE4B0();
    v15 = v3;
    v16 = &type metadata for Google_Protobuf_UninterpretedOption;
LABEL_11:
    v12 = v10;
    v13(v15, v16, v14, a2, a3);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1C20F1844(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  char v6;
  char v7;
  char v8;
  char v9;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v7, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v7, (uint64_t)&v8, &qword_1EF75D588);
  if (v8 != 2)
  {
    sub_1C2175834();
    sub_1C2175840();
  }
  sub_1C20C4D30((uint64_t)v3 + 33, (uint64_t)&v6, &qword_1EF75F0F8);
  sub_1C20C4D30((uint64_t)&v6, (uint64_t)&v9, &qword_1EF75F0F8);
  if (v9 != 3)
  {
    sub_1C2175834();
    sub_1C2175834();
  }
  if (!*(_QWORD *)(*v3 + 16) || (result = sub_1C2111BB8(*v3), !v2))
  {
    result = sub_1C2131194(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
      __asm { BR              X10 }
  }
  return result;
}

void sub_1C20F1998(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  unsigned __int8 v5;
  unsigned __int8 *v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  char v13;
  unsigned __int8 v14;

  v3 = v1;
  sub_1C20C4D30((uint64_t)(v3 + 4), (uint64_t)&v12, &qword_1EF75D588);
  sub_1C20C4D30((uint64_t)&v12, (uint64_t)&v13, &qword_1EF75D588);
  if (v13 == 2 || (sub_1C20AE8CC(v13 & 1, 0x21uLL), !v2))
  {
    sub_1C20C4D30((uint64_t)v3 + 33, (uint64_t)&v11, &qword_1EF75F0F8);
    sub_1C20C4D30((uint64_t)&v11, (uint64_t)&v14, &qword_1EF75F0F8);
    v5 = v14;
    if (v14 != 3)
    {
      sub_1C20A988C(0x22uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v6);
      sub_1C215F850(v5);
      v7 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        *a1 = v7;
      }
      v10 = *((_QWORD *)v7 + 2);
      v9 = *((_QWORD *)v7 + 3);
      if (v10 >= v9 >> 1)
        v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v10 + 1;
      v7[v10 + 32] = 10;
      *a1 = v7;
    }
    if (!*(_QWORD *)(*v3 + 16) || (sub_1C2162040(*v3, 0x3E7uLL), !v2))
    {
      sub_1C2130B94((uint64_t)a1, 1000, 0x20000000, v3[3]);
      if (!v2)
        sub_1C2122EF0((uint64_t)a1, v3[1], v3[2]);
    }
  }
}

void Google_Protobuf_MethodOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  void (*v11)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v14;
  __int128 v15;
  __int128 v16;

  v7 = *v3;
  v15 = *(_OWORD *)(v3 + 1);
  v8 = v3[3];
  v9 = *((unsigned __int8 *)v3 + 32);
  v10 = *((unsigned __int8 *)v3 + 33);
  if (v9 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 33, a2, a3), !v4))
  {
    if (v10 == 3
      || (LOBYTE(v16) = v10,
          v11 = *(void (**)(__int128 *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
          v12 = sub_1C20FEFFC(),
          v11(&v16, 34, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel, v12, a2, a3),
          !v4))
    {
      if (!*(_QWORD *)(v7 + 16)
        || (v13 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
            v14 = sub_1C20FE4B0(),
            v13(v7, 999, &type metadata for Google_Protobuf_UninterpretedOption, v14, a2, a3),
            !v4))
      {
        *(_QWORD *)&v16 = v8;
        (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v16, 1000, 0x20000000, a2, a3);
        if (!v4)
        {
          v16 = v15;
          UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
}

uint64_t Google_Protobuf_MethodOptions.hashValue.getter()
{
  return sub_1C20F1CC4((void (*)(__int128 *))sub_1C20F1844);
}

uint64_t sub_1C20F1CC4(void (*a1)(__int128 *))
{
  __int128 *v1;
  __int128 v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int16 v22;

  v3 = v1[1];
  v20 = *v1;
  v21 = v3;
  v22 = *((_WORD *)v1 + 16);
  sub_1C2175828();
  v5 = v15;
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  a1(&v5);
  v10 = v5;
  v11 = v6;
  v12 = v7;
  v13 = v8;
  v14 = v9;
  return sub_1C2175870();
}

double sub_1C20F1D70@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEE9E0];
  *(_WORD *)(a1 + 32) = 770;
  return result;
}

unint64_t sub_1C20F1DA0()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C20F1DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MethodOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F1DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_MethodOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F1DE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC58 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DBA8;
  v3 = qword_1EF75DBB0;
  v4 = unk_1EF75DBB8;
  *a1 = qword_1EF75DBA0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F1E60()
{
  return sub_1C215925C();
}

uint64_t sub_1C20F1E98(uint64_t a1, uint64_t a2)
{
  return sub_1C20F1EA4(a1, a2, (void (*)(__int128 *))sub_1C20F1844);
}

uint64_t sub_1C20F1EA4(uint64_t a1, uint64_t a2, void (*a3)(__int128 *))
{
  __int128 *v3;
  __int128 v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int16 v24;

  v5 = v3[1];
  v22 = *v3;
  v23 = v5;
  v24 = *((_WORD *)v3 + 16);
  sub_1C2175828();
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  a3(&v7);
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  v16 = v11;
  return sub_1C2175870();
}

double sub_1C20F1F50(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F1F5C(a1, a2, a3, (void (*)(__int128 *))sub_1C20F1844);
}

double sub_1C20F1F5C(__int128 *a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *))
{
  __int128 *v4;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int16 v21;

  v6 = v4[1];
  v19 = *v4;
  v20 = v6;
  v21 = *((_WORD *)v4 + 16);
  v7 = *((_QWORD *)a1 + 8);
  v8 = a1[1];
  v14 = *a1;
  v15 = v8;
  v9 = a1[3];
  v16 = a1[2];
  v17 = v9;
  v18 = v7;
  a4(&v14);
  v10 = v18;
  v11 = v15;
  *a1 = v14;
  a1[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a1[2] = v16;
  a1[3] = v13;
  *((_QWORD *)a1 + 8) = v10;
  return result;
}

uint64_t sub_1C20F1FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F1FF0(a1, a2, a3, (void (*)(__int128 *))sub_1C20F1844);
}

uint64_t sub_1C20F1FF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *))
{
  __int128 *v4;
  __int128 v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int16 v25;

  v6 = v4[1];
  v23 = *v4;
  v24 = v6;
  v25 = *((_WORD *)v4 + 16);
  sub_1C2175828();
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v22;
  a4(&v8);
  v13 = v8;
  v14 = v9;
  v15 = v10;
  v16 = v11;
  v17 = v12;
  return sub_1C2175870();
}

uint64_t sub_1C20F209C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4660, &qword_1EF75DBC0);
}

uint64_t static Google_Protobuf_MethodOptions.IdempotencyLevel._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC60 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DBC8;
  v3 = qword_1EF75DBD0;
  v4 = unk_1EF75DBD8;
  *a1 = qword_1EF75DBC0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F212C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC60 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DBC8;
  v3 = qword_1EF75DBD0;
  v4 = unk_1EF75DBD8;
  *a1 = qword_1EF75DBC0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_UninterpretedOption.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C20F21C4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD56A0, &qword_1EF75DBE0);
}

uint64_t static Google_Protobuf_UninterpretedOption._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC68 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DBE8;
  v3 = qword_1EF75DBF0;
  v4 = unk_1EF75DBF8;
  *a1 = qword_1EF75DBE0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UninterpretedOption.isInitialized.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  BOOL v10;

  v1 = sub_1C20E0BE4(*v0);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v1 + 32);
    v4 = v2 - 1;
    do
    {
      v5 = v3[3];
      v6 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v5);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      v8 = v7;
      v10 = v4-- != 0;
      if ((v7 & 1) == 0)
        break;
      v3 += 5;
    }
    while (v10);
  }
  else
  {
    v8 = 1;
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t Google_Protobuf_UninterpretedOption.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;
  void (*v10)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v11;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          v11 = sub_1C20FF040();
          v10(v3, &type metadata for Google_Protobuf_UninterpretedOption.NamePart, v11, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 24, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 152))(v3 + 40, a2, a3);
          break;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 104))(v3 + 56, a2, a3);
          break;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 56))(v3 + 72, a2, a3);
          break;
        case 7:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 368))(v3 + 88, a2, a3);
          break;
        case 8:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 104, a2, a3);
          break;
        default:
          break;
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C20F244C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[16];
  _BYTE v6[16];
  _BYTE v7[16];
  _BYTE v8[16];
  _BYTE v9[16];
  _QWORD v10[2];
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  _QWORD v17[2];

  if (!*(_QWORD *)(*v0 + 16) || (result = sub_1C211215C(*v0), !v1))
  {
    sub_1C20C4D30((uint64_t)(v0 + 3), (uint64_t)v9, &qword_1EF75D580);
    sub_1C20C4D30((uint64_t)v9, (uint64_t)v10, &qword_1EF75D580);
    if (v10[1])
    {
      sub_1C2175834();
      sub_1C21754C8();
    }
    sub_1C20C4D30((uint64_t)(v0 + 5), (uint64_t)v8, &qword_1EF75F0E0);
    sub_1C20C4D30((uint64_t)v8, (uint64_t)&v11, &qword_1EF75F0E0);
    if ((v12 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    sub_1C20C4D30((uint64_t)(v0 + 7), (uint64_t)v7, &qword_1EF75F0E8);
    sub_1C20C4D30((uint64_t)v7, (uint64_t)&v13, &qword_1EF75F0E8);
    if ((v14 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    sub_1C20C4D30((uint64_t)(v0 + 9), (uint64_t)v6, &qword_1EF75F0F0);
    sub_1C20C4D30((uint64_t)v6, (uint64_t)&v15, &qword_1EF75F0F0);
    if ((v16 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    v3 = v0[12];
    if (v3 >> 60 != 15)
    {
      v4 = v0[11];
      sub_1C2175834();
      sub_1C20A8008(v4, v3);
      sub_1C2175354();
      sub_1C20AE1C8(v4, v3);
    }
    sub_1C20C4D30((uint64_t)(v0 + 13), (uint64_t)v5, &qword_1EF75D580);
    sub_1C20C4D30((uint64_t)v5, (uint64_t)v17, &qword_1EF75D580);
    if (v17[1])
    {
      sub_1C2175834();
      sub_1C21754C8();
    }
    __asm { BR              X10 }
  }
  return result;
}

void sub_1C20F26AC(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  char *v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  unsigned __int8 *v29;
  char *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  char *v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  char *v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  _BYTE v48[16];
  _BYTE v49[16];
  _BYTE v50[16];
  _BYTE v51[16];
  _BYTE v52[16];
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  double v59;
  char v60;
  uint64_t v61;
  unint64_t v62;

  v3 = v1;
  if (!*(_QWORD *)(*v3 + 16) || (sub_1C2162294(*v3, 2uLL), !v2))
  {
    sub_1C20C4D30((uint64_t)(v3 + 3), (uint64_t)v52, &qword_1EF75D580);
    sub_1C20C4D30((uint64_t)v52, (uint64_t)&v53, &qword_1EF75D580);
    v5 = v54;
    if (v54)
    {
      v6 = v53;
      sub_1C20A988C(3uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v7);
      sub_1C20AAAD0(v6, v5);
      v8 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        *a1 = v8;
      }
      v11 = *((_QWORD *)v8 + 2);
      v10 = *((_QWORD *)v8 + 3);
      if (v11 >= v10 >> 1)
        v8 = sub_1C214E1A4((char *)(v10 > 1), v11 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11 + 1;
      v8[v11 + 32] = 10;
      *a1 = v8;
    }
    sub_1C20C4D30((uint64_t)(v3 + 5), (uint64_t)v51, &qword_1EF75F0E0);
    sub_1C20C4D30((uint64_t)v51, (uint64_t)&v55, &qword_1EF75F0E0);
    if ((v56 & 1) == 0)
    {
      v12 = v55;
      sub_1C20A988C(4uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v13);
      sub_1C214C444(v12);
      v14 = *a1;
      v15 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_1C214E1A4(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
        *a1 = v14;
      }
      v17 = *((_QWORD *)v14 + 2);
      v16 = *((_QWORD *)v14 + 3);
      if (v17 >= v16 >> 1)
        v14 = sub_1C214E1A4((char *)(v16 > 1), v17 + 1, 1, v14);
      *((_QWORD *)v14 + 2) = v17 + 1;
      v14[v17 + 32] = 10;
      *a1 = v14;
    }
    sub_1C20C4D30((uint64_t)(v3 + 7), (uint64_t)v50, &qword_1EF75F0E8);
    sub_1C20C4D30((uint64_t)v50, (uint64_t)&v57, &qword_1EF75F0E8);
    if ((v58 & 1) == 0)
    {
      v18 = v57;
      sub_1C20A988C(5uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v19);
      if ((v18 & 0x8000000000000000) != 0)
      {
        v20 = *a1;
        v21 = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v20;
        if ((v21 & 1) == 0)
        {
          v20 = sub_1C214E1A4(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
          *a1 = v20;
        }
        v23 = *((_QWORD *)v20 + 2);
        v22 = *((_QWORD *)v20 + 3);
        if (v23 >= v22 >> 1)
          v20 = sub_1C214E1A4((char *)(v22 > 1), v23 + 1, 1, v20);
        *((_QWORD *)v20 + 2) = v23 + 1;
        v20[v23 + 32] = 45;
        *a1 = v20;
        v18 = -(uint64_t)v18;
      }
      sub_1C214C444(v18);
      v24 = *a1;
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v24;
      if ((v25 & 1) == 0)
      {
        v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        *a1 = v24;
      }
      v27 = *((_QWORD *)v24 + 2);
      v26 = *((_QWORD *)v24 + 3);
      if (v27 >= v26 >> 1)
        v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
      *((_QWORD *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 10;
      *a1 = v24;
    }
    sub_1C20C4D30((uint64_t)(v3 + 9), (uint64_t)v49, &qword_1EF75F0F0);
    sub_1C20C4D30((uint64_t)v49, (uint64_t)&v59, &qword_1EF75F0F0);
    if ((v60 & 1) == 0)
    {
      v28 = v59;
      sub_1C20A988C(6uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v29);
      sub_1C214C194(v28);
      v30 = *a1;
      v31 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v30;
      if ((v31 & 1) == 0)
      {
        v30 = sub_1C214E1A4(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
        *a1 = v30;
      }
      v33 = *((_QWORD *)v30 + 2);
      v32 = *((_QWORD *)v30 + 3);
      if (v33 >= v32 >> 1)
        v30 = sub_1C214E1A4((char *)(v32 > 1), v33 + 1, 1, v30);
      *((_QWORD *)v30 + 2) = v33 + 1;
      v30[v33 + 32] = 10;
      *a1 = v30;
    }
    v34 = v3[12];
    if (v34 >> 60 != 15)
    {
      v35 = v3[11];
      sub_1C20A8008(v35, v3[12]);
      sub_1C20A988C(7uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v36);
      sub_1C214BE80(v35, v34);
      v37 = *a1;
      v38 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v37;
      if ((v38 & 1) == 0)
      {
        v37 = sub_1C214E1A4(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
        *a1 = v37;
      }
      v40 = *((_QWORD *)v37 + 2);
      v39 = *((_QWORD *)v37 + 3);
      if (v40 >= v39 >> 1)
      {
        v37 = sub_1C214E1A4((char *)(v39 > 1), v40 + 1, 1, v37);
        *a1 = v37;
      }
      *((_QWORD *)v37 + 2) = v40 + 1;
      v37[v40 + 32] = 10;
      sub_1C20AE1C8(v35, v34);
      *a1 = v37;
    }
    sub_1C20C4D30((uint64_t)(v3 + 13), (uint64_t)v48, &qword_1EF75D580);
    sub_1C20C4D30((uint64_t)v48, (uint64_t)&v61, &qword_1EF75D580);
    v41 = v62;
    if (v62)
    {
      v42 = v61;
      sub_1C20A988C(8uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v43);
      sub_1C20AAAD0(v42, v41);
      v44 = *a1;
      v45 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v44;
      if ((v45 & 1) == 0)
      {
        v44 = sub_1C214E1A4(0, *((_QWORD *)v44 + 2) + 1, 1, v44);
        *a1 = v44;
      }
      v47 = *((_QWORD *)v44 + 2);
      v46 = *((_QWORD *)v44 + 3);
      if (v47 >= v46 >> 1)
        v44 = sub_1C214E1A4((char *)(v46 > 1), v47 + 1, 1, v44);
      *((_QWORD *)v44 + 2) = v47 + 1;
      v44[v47 + 32] = 10;
      *a1 = v44;
    }
    sub_1C2122EF0((uint64_t)a1, v3[1], v3[2]);
  }
}

void Google_Protobuf_UninterpretedOption.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  void (*v12)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;

  v7 = *v3;
  v8 = v3[3];
  v9 = v3[4];
  v10 = *((_BYTE *)v3 + 48);
  v23 = *((_BYTE *)v3 + 64);
  v11 = *((double *)v3 + 9);
  v21 = *((_BYTE *)v3 + 80);
  v17 = v3[11];
  v19 = v3[12];
  v20 = v3[7];
  v18 = v3[14];
  v16 = v3[13];
  v22 = v3[5];
  if (*(_QWORD *)(*v3 + 16))
  {
    v12 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280);
    v13 = sub_1C20FF040();
    v12(v7, 2, &type metadata for Google_Protobuf_UninterpretedOption.NamePart, v13, a2, a3);
    v14 = a2;
    if (v4)
      return;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v8, v9, 3, v14, a3);
    if (v4)
      return;
    goto LABEL_7;
  }
  v14 = a2;
  if (v9)
    goto LABEL_6;
LABEL_7:
  if ((v10 & 1) != 0
    || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 48))(v22, 4, v14, a3), !v4))
  {
    if ((v23 & 1) != 0
      || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 32))(v20, 5, v14, a3), !v4))
    {
      if ((v21 & 1) != 0
        || ((*(void (**)(uint64_t, uint64_t, uint64_t, double))(a3 + 16))(6, v14, a3, v11), !v4))
      {
        if (v19 >> 60 == 15
          || (v15 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 120),
              sub_1C20A8008(v17, v19),
              v15(v17, v19, 7, v14, a3),
              sub_1C20AE1C8(v17, v19),
              !v4))
        {
          if (!v18
            || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v16, v18, 8, v14, a3),
                !v4))
          {
            UnknownStorage.traverse<A>(visitor:)();
          }
        }
      }
    }
  }
}

uint64_t Google_Protobuf_UninterpretedOption.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20F244C();
  return sub_1C2175870();
}

double sub_1C20F2FC4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C2177160;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  return result;
}

unint64_t sub_1C20F3010()
{
  return 0xD000000000000023;
}

uint64_t sub_1C20F302C()
{
  uint64_t *v0;
  char v1;

  sub_1C20E0BE4(*v0);
  v1 = static Internal.areAllInitialized(_:)();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1C20F3064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UninterpretedOption.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F3078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_UninterpretedOption.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F308C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC68 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DBE8;
  v3 = qword_1EF75DBF0;
  v4 = unk_1EF75DBF8;
  *a1 = qword_1EF75DBE0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F3108()
{
  return sub_1C2159330();
}

uint64_t sub_1C20F3158()
{
  sub_1C2175828();
  sub_1C20F244C();
  return sub_1C2175870();
}

double sub_1C20F3210(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20F244C();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20F32B4()
{
  sub_1C2175828();
  sub_1C20F244C();
  return sub_1C2175870();
}

uint64_t sub_1C20F336C()
{
  uint64_t result;

  result = sub_1C21754F8();
  qword_1EF75DC00 = 0xD000000000000023;
  *(_QWORD *)algn_1EF75DC08 = 0x80000001C217DD90;
  return result;
}

uint64_t static Google_Protobuf_UninterpretedOption.NamePart.protoMessageName.getter()
{
  return sub_1C20E564C(&qword_1EF75CC70, &qword_1EF75DC00);
}

uint64_t sub_1C20F33F8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5610, &qword_1EF75DC10);
}

uint64_t static Google_Protobuf_UninterpretedOption.NamePart._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC78 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC18;
  v3 = qword_1EF75DC20;
  v4 = unk_1EF75DC28;
  *a1 = qword_1EF75DC10;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL Google_Protobuf_UninterpretedOption.NamePart.isInitialized.getter()
{
  uint64_t v0;
  BOOL v1;

  if (*(_QWORD *)(v0 + 24))
    v1 = *(_BYTE *)(v0 + 32) == 2;
  else
    v1 = 1;
  return !v1;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 16, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

__n128 Google_Protobuf_UninterpretedOption.NamePart.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  __n128 result;

  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(v3 + 32);
  if (!v7
    || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(*(_QWORD *)(v3 + 16), v7, 1, a2, a3), !v4))
  {
    if (v8 == 2 || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 104))(v8 & 1, 2, a2, a3), !v4))
      UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20BE470();
  return sub_1C2175870();
}

double sub_1C20F3648@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 2;
  return result;
}

uint64_t sub_1C20F3664(uint64_t a1, uint64_t a2)
{
  return sub_1C20E57BC(a1, a2, &qword_1EF75CC70, &qword_1EF75DC00);
}

BOOL sub_1C20F3684()
{
  uint64_t v0;
  BOOL v1;

  if (*(_QWORD *)(v0 + 24))
    v1 = *(_BYTE *)(v0 + 32) == 2;
  else
    v1 = 1;
  return !v1;
}

uint64_t sub_1C20F369C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UninterpretedOption.NamePart.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C20F36B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = Google_Protobuf_UninterpretedOption.NamePart.traverse<A>(visitor:)(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t sub_1C20F36C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC78 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC18;
  v3 = qword_1EF75DC20;
  v4 = unk_1EF75DC28;
  *a1 = qword_1EF75DC10;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F3740()
{
  return sub_1C2159408();
}

uint64_t sub_1C20F3778()
{
  sub_1C2175828();
  sub_1C20BE470();
  return sub_1C2175870();
}

void sub_1C20F37C8()
{
  sub_1C20BE470();
}

uint64_t sub_1C20F3800()
{
  sub_1C2175828();
  sub_1C20BE470();
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_SourceCodeInfo.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C20F386C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4B48, &qword_1EF75DC30);
}

uint64_t static Google_Protobuf_SourceCodeInfo._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC80 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC38;
  v3 = qword_1EF75DC40;
  v4 = unk_1EF75DC48;
  *a1 = qword_1EF75DC30;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4810(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF084, (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo.Location);
}

void Google_Protobuf_SourceCodeInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20F48E8(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF084, (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo.Location);
}

uint64_t static Google_Protobuf_SourceCodeInfo.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1C20F3950(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1C20F6C84);
}

uint64_t sub_1C20F3950(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if ((a3(*a1, *a2) & 1) == 0)
    return 0;
  sub_1C20A8008(v3, v4);
  sub_1C20A8008(v5, v6);
  sub_1C20FD650(v3, v4);
  v8 = v7;
  sub_1C20A8058(v5, v6);
  sub_1C20A8058(v3, v4);
  return v8 & 1;
}

uint64_t Google_Protobuf_SourceCodeInfo.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE618);
}

double sub_1C20F39F8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C20F3A14()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C20F3A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceCodeInfo.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F3A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_SourceCodeInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F3A58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC80 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC38;
  v3 = qword_1EF75DC40;
  v4 = unk_1EF75DC48;
  *a1 = qword_1EF75DC30;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F3AD4()
{
  uint64_t v0;

  return sub_1C21594C8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20F3AE0(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE618);
}

void sub_1C20F3AEC(uint64_t a1)
{
  uint64_t v1;

  sub_1C20BE618(a1, *(_QWORD **)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C20F3AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BE618);
}

uint64_t sub_1C20F3B04(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20F3B10(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))sub_1C20F6C84);
}

uint64_t sub_1C20F3B10(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;

  v5 = a1[1];
  v6 = a1[2];
  v7 = a2[1];
  v8 = a2[2];
  if ((a5(*a1, *a2) & 1) == 0)
    return 0;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v7, v8);
  sub_1C20FD650(v5, v6);
  v10 = v9;
  sub_1C20A8058(v7, v8);
  sub_1C20A8058(v5, v6);
  return v10 & 1;
}

uint64_t sub_1C20F3BAC()
{
  uint64_t result;

  result = sub_1C21754F8();
  qword_1EF75DC50 = 0xD00000000000001ELL;
  *(_QWORD *)algn_1EF75DC58 = 0x80000001C217DDC0;
  return result;
}

uint64_t static Google_Protobuf_SourceCodeInfo.Location.protoMessageName.getter()
{
  return sub_1C20E564C(&qword_1EF75CC88, &qword_1EF75DC50);
}

uint64_t sub_1C20F3C38()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD4A10, &qword_1EF75DC60);
}

uint64_t static Google_Protobuf_SourceCodeInfo.Location._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC90 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC68;
  v3 = qword_1EF75DC70;
  v4 = unk_1EF75DC78;
  *a1 = qword_1EF75DC60;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 88))(v3, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 88))(v3 + 8, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 40, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 56, a2, a3);
          break;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 352))(v3 + 16, a2, a3);
          break;
        default:
          break;
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

void sub_1C20F3DBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[16];
  _BYTE v11[16];
  _QWORD v12[2];
  _QWORD v13[2];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    sub_1C2175834();
    sub_1C2175834();
    v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_1C217584C();
      --v2;
    }
    while (v2);
  }
  v4 = v0[1];
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    sub_1C2175834();
    sub_1C2175834();
    v6 = v4 + 32;
    do
    {
      v6 += 4;
      sub_1C217584C();
      --v5;
    }
    while (v5);
  }
  sub_1C20C4D30((uint64_t)(v0 + 5), (uint64_t)v11, &qword_1EF75D580);
  sub_1C20C4D30((uint64_t)v11, (uint64_t)v12, &qword_1EF75D580);
  if (v12[1])
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  sub_1C20C4D30((uint64_t)(v0 + 7), (uint64_t)v10, &qword_1EF75D580);
  sub_1C20C4D30((uint64_t)v10, (uint64_t)v13, &qword_1EF75D580);
  if (v13[1])
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  v7 = v0[2];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    sub_1C2175834();
    sub_1C2175834();
    v9 = v7 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
      v9 += 16;
      --v8;
    }
    while (v8);
  }
  __asm { BR              X10 }
}

uint64_t sub_1C20F3F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((a3 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void sub_1C20F3F98(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  char *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _BYTE v25[16];
  _BYTE v26[16];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v3 = v1;
  if (!*(_QWORD *)(*v3 + 16) || (sub_1C2125654(*v3, 1uLL), !v2))
  {
    v5 = v3[1];
    if (!*(_QWORD *)(v5 + 16) || (sub_1C2125654(v5, 2uLL), !v2))
    {
      sub_1C20C4D30((uint64_t)(v3 + 5), (uint64_t)v26, &qword_1EF75D580);
      sub_1C20C4D30((uint64_t)v26, (uint64_t)&v27, &qword_1EF75D580);
      v6 = v28;
      if (v28)
      {
        v7 = v27;
        sub_1C20A988C(3uLL);
        sub_1C20A9EB4((uint64_t)": ", 2, v8);
        sub_1C20AAAD0(v7, v6);
        v9 = *a1;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v9 = sub_1C214E1A4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
          *a1 = v9;
        }
        v12 = *((_QWORD *)v9 + 2);
        v11 = *((_QWORD *)v9 + 3);
        v13 = v12 + 1;
        if (v12 >= v11 >> 1)
        {
          v31 = v12 + 1;
          v23 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v9);
          v13 = v31;
          v9 = v23;
        }
        *((_QWORD *)v9 + 2) = v13;
        v9[v12 + 32] = 10;
        *a1 = v9;
      }
      sub_1C20C4D30((uint64_t)(v3 + 7), (uint64_t)v25, &qword_1EF75D580);
      sub_1C20C4D30((uint64_t)v25, (uint64_t)&v29, &qword_1EF75D580);
      v14 = v30;
      if (v30)
      {
        v15 = v29;
        sub_1C20A988C(4uLL);
        sub_1C20A9EB4((uint64_t)": ", 2, v16);
        sub_1C20AAAD0(v15, v14);
        v17 = *a1;
        v18 = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v17;
        if ((v18 & 1) == 0)
        {
          v17 = sub_1C214E1A4(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
          *a1 = v17;
        }
        v20 = *((_QWORD *)v17 + 2);
        v19 = *((_QWORD *)v17 + 3);
        v21 = v20 + 1;
        if (v20 >= v19 >> 1)
        {
          v31 = v20 + 1;
          v24 = sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v17);
          v21 = v31;
          v17 = v24;
        }
        *((_QWORD *)v17 + 2) = v21;
        v17[v20 + 32] = 10;
        *a1 = v17;
      }
      v22 = v3[2];
      if (!*(_QWORD *)(v22 + 16) || (sub_1C20AB2EC(v22, 6uLL), !v2))
        sub_1C2122EF0((uint64_t)a1, v3[3], v3[4]);
    }
  }
}

__n128 Google_Protobuf_SourceCodeInfo.Location.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  uint64_t v13;

  v7 = v3[1];
  v13 = v3[2];
  v8 = v3[5];
  v9 = v3[6];
  v10 = v3[7];
  v11 = v3[8];
  if (!*(_QWORD *)(*v3 + 16) || ((*(void (**)(void))(a3 + 312))(), !v4))
  {
    if (!*(_QWORD *)(v7 + 16)
      || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 312))(v7, 2, a2, a3), !v4))
    {
      if (!v9
        || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v8, v9, 3, a2, a3), !v4))
      {
        if (!v11
          || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v10, v11, 4, a2, a3),
              !v4))
        {
          if (!*(_QWORD *)(v13 + 16) || ((*(void (**)(void))(a3 + 256))(), !v4))
            UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20F3DBC();
  return sub_1C2175870();
}

double sub_1C20F43F4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = v1;
  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)(a1 + 24) = xmmword_1C2175DE0;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

uint64_t sub_1C20F4420(uint64_t a1, uint64_t a2)
{
  return sub_1C20E57BC(a1, a2, &qword_1EF75CC88, &qword_1EF75DC50);
}

uint64_t sub_1C20F4440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t sub_1C20F444C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t sub_1C20F447C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceCodeInfo.Location.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C20F4490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = Google_Protobuf_SourceCodeInfo.Location.traverse<A>(visitor:)(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t sub_1C20F44A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC90 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC68;
  v3 = qword_1EF75DC70;
  v4 = unk_1EF75DC78;
  *a1 = qword_1EF75DC60;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F4520()
{
  return sub_1C21595A0();
}

uint64_t sub_1C20F4560()
{
  sub_1C2175828();
  sub_1C20F3DBC();
  return sub_1C2175870();
}

double sub_1C20F4608(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20F3DBC();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20F4698()
{
  sub_1C2175828();
  sub_1C20F3DBC();
  return sub_1C2175870();
}

unint64_t static Google_Protobuf_GeneratedCodeInfo.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C20F475C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5130, &qword_1EF75DC80);
}

uint64_t static Google_Protobuf_GeneratedCodeInfo._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC98 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC88;
  v3 = qword_1EF75DC90;
  v4 = unk_1EF75DC98;
  *a1 = qword_1EF75DC80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_GeneratedCodeInfo.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4810(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF0C8, (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
}

uint64_t sub_1C20F4810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t result;
  char v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v11(a2, a3);
  while (!v6 && (v13 & 1) == 0)
  {
    if (result == 1)
    {
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 416);
      v15 = a4();
      v14(v5, a5, v15, a2, a3);
    }
    v6 = 0;
    result = v11(a2, a3);
  }
  return result;
}

void Google_Protobuf_GeneratedCodeInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20F48E8(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF0C8, (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
}

void sub_1C20F48E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v9 = *v5;
  if (!*(_QWORD *)(*v5 + 16)
    || (v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 280),
        v12 = a4(),
        v11(v9, 1, a5, v12, a2, a3),
        !v6))
  {
    UnknownStorage.traverse<A>(visitor:)();
  }
}

uint64_t static Google_Protobuf_GeneratedCodeInfo.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1C20F3950(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1C20F63E0);
}

uint64_t Google_Protobuf_GeneratedCodeInfo.hashValue.getter()
{
  return sub_1C20F49BC((void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BED60);
}

uint64_t sub_1C20F49BC(void (*a1)(_BYTE *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  sub_1C2175828();
  a1(v7, v3, v4, v5);
  return sub_1C2175870();
}

unint64_t sub_1C20F4A18()
{
  return 0xD000000000000021;
}

uint64_t sub_1C20F4A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_GeneratedCodeInfo.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C20F4A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_GeneratedCodeInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C20F4A5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CC98 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DC88;
  v3 = qword_1EF75DC90;
  v4 = unk_1EF75DC98;
  *a1 = qword_1EF75DC80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F4AD8()
{
  uint64_t v0;

  return sub_1C2159668(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C20F4AE4(uint64_t a1, uint64_t a2)
{
  return sub_1C20F4AF0(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BED60);
}

uint64_t sub_1C20F4AF0(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];

  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  sub_1C2175828();
  a3(v9, v5, v6, v7);
  return sub_1C2175870();
}

void sub_1C20F4B4C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BED60(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C20F4B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F4B64(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1C20BED60);
}

uint64_t sub_1C20F4B64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[72];

  v6 = *v4;
  v7 = v4[1];
  v8 = v4[2];
  sub_1C2175828();
  a4(v10, v6, v7, v8);
  return sub_1C2175870();
}

uint64_t sub_1C20F4BBC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20F3B10(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))sub_1C20F63E0);
}

uint64_t sub_1C20F4BC8()
{
  uint64_t result;

  result = sub_1C21754F8();
  qword_1EF75DCA0 = 0xD000000000000021;
  *(_QWORD *)algn_1EF75DCA8 = 0x80000001C217DDE0;
  return result;
}

uint64_t static Google_Protobuf_GeneratedCodeInfo.Annotation.protoMessageName.getter()
{
  return sub_1C20E564C(&qword_1EF75CCA0, &qword_1EF75DCA0);
}

uint64_t sub_1C20F4C58()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD5030, &qword_1EF75DCB0);
}

uint64_t static Google_Protobuf_GeneratedCodeInfo.Annotation._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCA8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DCB8;
  v3 = qword_1EF75DCC0;
  v4 = unk_1EF75DCC8;
  *a1 = qword_1EF75DCB0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 88))(v3, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 24, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 40, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 48, a2, a3);
          break;
        default:
          break;
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

void sub_1C20F4DC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[8];
  _BYTE v5[8];
  _BYTE v6[16];
  _QWORD v7[2];
  int v8;
  char v9;
  int v10;
  char v11;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    sub_1C2175834();
    sub_1C2175834();
    v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_1C217584C();
      --v2;
    }
    while (v2);
  }
  sub_1C20C4D30((uint64_t)(v0 + 3), (uint64_t)v6, &qword_1EF75D580);
  sub_1C20C4D30((uint64_t)v6, (uint64_t)v7, &qword_1EF75D580);
  if (v7[1])
  {
    sub_1C2175834();
    sub_1C21754C8();
  }
  sub_1C20C4D30((uint64_t)(v0 + 5), (uint64_t)v5, &qword_1EF75F0D8);
  sub_1C20C4D30((uint64_t)v5, (uint64_t)&v8, &qword_1EF75F0D8);
  if ((v9 & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  sub_1C20C4D30((uint64_t)(v0 + 6), (uint64_t)v4, &qword_1EF75F0D8);
  sub_1C20C4D30((uint64_t)v4, (uint64_t)&v10, &qword_1EF75F0D8);
  if ((v11 & 1) == 0)
  {
    sub_1C2175834();
    sub_1C2175858();
  }
  __asm { BR              X10 }
}

uint64_t sub_1C20F4F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((a3 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

void sub_1C20F4F60(char **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  _BYTE v14[16];
  uint64_t v15;
  unint64_t v16;
  int v17;
  char v18;
  int v19;
  char v20;

  v3 = v1;
  if (!*(_QWORD *)(*v3 + 16) || (sub_1C2125654(*v3, 1uLL), !v2))
  {
    sub_1C20C4D30((uint64_t)(v3 + 3), (uint64_t)v14, &qword_1EF75D580);
    sub_1C20C4D30((uint64_t)v14, (uint64_t)&v15, &qword_1EF75D580);
    v5 = v16;
    if (v16)
    {
      v6 = v15;
      sub_1C20A988C(2uLL);
      sub_1C20A9EB4((uint64_t)": ", 2, v7);
      sub_1C20AAAD0(v6, v5);
      v8 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_1C214E1A4(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        *a1 = v8;
      }
      v11 = *((_QWORD *)v8 + 2);
      v10 = *((_QWORD *)v8 + 3);
      if (v11 >= v10 >> 1)
        v8 = sub_1C214E1A4((char *)(v10 > 1), v11 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11 + 1;
      v8[v11 + 32] = 10;
      *a1 = v8;
    }
    sub_1C20C4D30((uint64_t)(v3 + 5), (uint64_t)v13, &qword_1EF75F0D8);
    sub_1C20C4D30((uint64_t)v13, (uint64_t)&v17, &qword_1EF75F0D8);
    if ((v18 & 1) != 0 || (sub_1C212FA64(v17, 3uLL), !v2))
    {
      sub_1C20C4D30((uint64_t)(v3 + 6), (uint64_t)&v12, &qword_1EF75F0D8);
      sub_1C20C4D30((uint64_t)&v12, (uint64_t)&v19, &qword_1EF75F0D8);
      if ((v20 & 1) != 0 || (sub_1C212FA64(v19, 4uLL), !v2))
        sub_1C2122EF0((uint64_t)a1, v3[1], v3[2]);
    }
  }
}

__n128 Google_Protobuf_GeneratedCodeInfo.Annotation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  __n128 result;
  unsigned int v13;

  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(unsigned int *)(v3 + 40);
  v10 = *(_BYTE *)(v3 + 44);
  v13 = *(_DWORD *)(v3 + 48);
  v11 = *(_BYTE *)(v3 + 52);
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16) || ((*(void (**)(void))(a3 + 312))(), !v4))
  {
    if (!v8
      || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v7, v8, 2, a2, a3), !v4))
    {
      if ((v10 & 1) != 0
        || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v9, 3, a2, a3), !v4))
      {
        if ((v11 & 1) != 0
          || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 24))(v13, 4, a2, a3), !v4))
        {
          UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.hashValue.getter()
{
  sub_1C2175828();
  sub_1C20F4DC8();
  return sub_1C2175870();
}

double sub_1C20F52FC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C2175DE0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 44) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 52) = 1;
  return result;
}

uint64_t sub_1C20F5330(uint64_t a1, uint64_t a2)
{
  return sub_1C20E57BC(a1, a2, &qword_1EF75CCA0, &qword_1EF75DCA0);
}

uint64_t sub_1C20F5350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_GeneratedCodeInfo.Annotation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C20F5364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = Google_Protobuf_GeneratedCodeInfo.Annotation.traverse<A>(visitor:)(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t sub_1C20F5378@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCA8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75DCB8;
  v3 = qword_1EF75DCC0;
  v4 = unk_1EF75DCC8;
  *a1 = qword_1EF75DCB0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20F53F4()
{
  return sub_1C2159740();
}

uint64_t sub_1C20F5434()
{
  sub_1C2175828();
  sub_1C20F4DC8();
  return sub_1C2175870();
}

double sub_1C20F54DC(__int128 *a1)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 8);
  sub_1C20F4DC8();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C20F556C()
{
  sub_1C2175828();
  sub_1C20F4DC8();
  return sub_1C2175870();
}

uint64_t sub_1C20F5614(_QWORD *a1, _QWORD *a2)
{
  return sub_1C20FC788(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C278C);
}

uint64_t sub_1C20F5660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  BOOL v22;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v20 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 32);
        v8 = *(_QWORD *)(a1 + v5 + 72);
        v9 = *(_BYTE *)(a1 + v5 + 80);
        v10 = *(_QWORD *)(a1 + v5 + 88);
        v11 = *(_BYTE *)(a1 + v5 + 96);
        v12 = *(_QWORD *)(a1 + v5 + 104);
        v13 = *(_BYTE *)(a1 + v5 + 112);
        v36 = *(_OWORD *)(a1 + v5 + 40);
        v37 = *(_OWORD *)(a1 + v5 + 56);
        v35 = v7;
        v38 = v8;
        v39 = v9;
        v40 = v10;
        v41 = v11;
        v42 = v12;
        v43 = v13;
        v44 = *(_OWORD *)(a1 + v5 + 120);
        v45 = *(_OWORD *)(a1 + v5 + 136);
        v14 = *(_QWORD *)(a2 + v5 + 72);
        v15 = *(_BYTE *)(a2 + v5 + 80);
        v16 = *(_QWORD *)(a2 + v5 + 88);
        v17 = *(_BYTE *)(a2 + v5 + 96);
        v18 = *(_QWORD *)(a2 + v5 + 104);
        v19 = *(_BYTE *)(a2 + v5 + 112);
        v24 = *(_QWORD *)(a2 + v5 + 32);
        v25 = *(_OWORD *)(a2 + v5 + 40);
        v26 = *(_OWORD *)(a2 + v5 + 56);
        v27 = v14;
        v28 = v15;
        v29 = v16;
        v30 = v17;
        v31 = v18;
        v32 = v19;
        v33 = *(_OWORD *)(a2 + v5 + 120);
        v34 = *(_OWORD *)(a2 + v5 + 136);
        v20 = _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)&v35, (uint64_t)&v24);
        v22 = v6-- != 0;
        if ((v20 & 1) == 0)
          break;
        v5 += 120;
      }
      while (v22);
    }
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1C20F57AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a2 + 64);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(unsigned __int8 *)(a1 + 64);
  v7 = *((_QWORD *)v3 - 1);
  v8 = *v3;
  if (v5)
  {
    if (!v7)
      return 0;
    if (*(_QWORD *)(a1 + 48) != *((_QWORD *)v3 - 2) || v5 != v7)
    {
      v10 = *(_QWORD *)(a1 + 40);
      v11 = sub_1C21757C8();
      v4 = v10;
      if ((v11 & 1) == 0)
        return 0;
    }
LABEL_13:
    if (v6 == 2)
    {
      if (v8 != 2)
        return 0;
    }
    else if (v8 == 2 || ((((v8 & 1) == 0) ^ v6) & 1) == 0)
    {
      return 0;
    }
    __asm { BR              X8 }
  }
  if (!v7)
    goto LABEL_13;
  return 0;
}

uint64_t sub_1C20F63E0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  char v22;
  int *v23;
  int *v24;
  uint64_t i;
  int v26;
  int v27;
  int v28;
  char v29;
  char v30;
  int v32;
  char v33;
  uint64_t v34;

  v2 = a1[2];
  if (v2 == a2[2])
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = a1 + 4;
    v4 = a1[4];
    v5 = a2 + 4;
    v6 = a2[4];
    v7 = *(_QWORD *)(v4 + 16);
    if (v7 == *(_QWORD *)(v6 + 16))
    {
      v9 = a1[6];
      v8 = a1[7];
      v34 = v9;
      v10 = v3[4];
      v11 = *((_DWORD *)v3 + 10);
      v12 = *((_BYTE *)v3 + 44);
      v13 = *((_DWORD *)v3 + 12);
      v14 = *((_BYTE *)v3 + 52);
      v15 = v5[3];
      v16 = v5[4];
      v17 = *((_DWORD *)v5 + 10);
      v18 = *((unsigned __int8 *)v5 + 44);
      v19 = *((_DWORD *)v5 + 12);
      if (v7)
        v20 = v4 == v6;
      else
        v20 = 1;
      v21 = *((unsigned __int8 *)v5 + 52);
      if (!v20)
      {
        if (*(_DWORD *)(v4 + 32) != *(_DWORD *)(v6 + 32))
          return 0;
        v23 = (int *)(v4 + 36);
        v24 = (int *)(v6 + 36);
        for (i = v7 - 1; i; --i)
        {
          v27 = *v23++;
          v26 = v27;
          v28 = *v24++;
          if (v26 != v28)
            return 0;
        }
      }
      if (v10)
      {
        if (!v16)
          return 0;
        if (v8 != v15 || v10 != v16)
        {
          v32 = v21;
          v33 = v14;
          v22 = sub_1C21757C8();
          v21 = v32;
          v14 = v33;
          if ((v22 & 1) == 0)
            return 0;
        }
LABEL_22:
        if ((v12 & 1) != 0)
        {
          if (!v18)
            return 0;
        }
        else
        {
          if (v11 == v17)
            v29 = v18;
          else
            v29 = 1;
          if ((v29 & 1) != 0)
            return 0;
        }
        if ((v14 & 1) != 0)
        {
          if (!v21)
            return 0;
        }
        else
        {
          if (v13 == v19)
            v30 = v21;
          else
            v30 = 1;
          if ((v30 & 1) != 0)
            return 0;
        }
        __asm { BR              X8 }
      }
      if (!v16)
        goto LABEL_22;
    }
  }
  return 0;
}

BOOL sub_1C20F6BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1C20F6C38(_QWORD *a1, _QWORD *a2)
{
  return sub_1C20FC788(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E25D0);
}

uint64_t sub_1C20F6C84(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  BOOL v13;
  int *v14;
  int *v15;
  uint64_t i;
  int v17;
  int v18;
  int v19;
  int *v20;
  int *v21;
  uint64_t j;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = a1[2];
  if (v2 == a2[2])
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = a1[4];
    v4 = a2[4];
    v5 = *(_QWORD *)(v3 + 16);
    if (v5 == *(_QWORD *)(v4 + 16))
    {
      v6 = a1[5];
      v33 = (_QWORD *)a1[6];
      v32 = a1[8];
      v7 = a1[11];
      v35 = a1[12];
      v9 = a2[5];
      v8 = (_QWORD *)a2[6];
      v10 = a2[11];
      v36 = a2[10];
      v37 = a1[10];
      if (v5)
        v11 = v3 == v4;
      else
        v11 = 1;
      v34 = a2[12];
      if (!v11)
      {
        if (*(_DWORD *)(v3 + 32) != *(_DWORD *)(v4 + 32))
          return 0;
        v14 = (int *)(v3 + 36);
        v15 = (int *)(v4 + 36);
        for (i = v5 - 1; i; --i)
        {
          v18 = *v14++;
          v17 = v18;
          v19 = *v15++;
          if (v17 != v19)
            return 0;
        }
      }
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 == *(_QWORD *)(v9 + 16))
      {
        if (v12)
          v13 = v6 == v9;
        else
          v13 = 1;
        if (!v13)
        {
          if (*(_DWORD *)(v6 + 32) != *(_DWORD *)(v9 + 32))
            return 0;
          v20 = (int *)(v6 + 36);
          v21 = (int *)(v9 + 36);
          for (j = v12 - 1; j; --j)
          {
            v24 = *v20++;
            v23 = v24;
            v25 = *v21++;
            if (v23 != v25)
              return 0;
          }
        }
        if (v37)
        {
          if (!v36 || (a1[9] != a2[9] || v37 != v36) && (sub_1C21757C8() & 1) == 0)
            return 0;
        }
        else if (v36)
        {
          return 0;
        }
        if (v35)
        {
          if (!v34 || (v7 != v10 || v35 != v34) && (sub_1C21757C8() & 1) == 0)
            return 0;
        }
        else if (v34)
        {
          return 0;
        }
        v26 = v33[2];
        if (v26 == v8[2])
        {
          if (!v26 || v33 == v8)
            goto LABEL_47;
          if (v33[4] == v8[4] && v33[5] == v8[5] || (sub_1C21757C8() & 1) != 0)
          {
            v27 = v26 - 1;
            if (v27)
            {
              v28 = v8 + 7;
              v29 = v33 + 7;
              do
              {
                v30 = *(v29 - 1) == *(v28 - 1) && *v29 == *v28;
                if (!v30 && (sub_1C21757C8() & 1) == 0)
                  return 0;
                v28 += 2;
                v29 += 2;
              }
              while (--v27);
            }
LABEL_47:
            __asm { BR              X8 }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1C20F76E4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1C21757C8(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C21757C8() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C20F77A8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD __s2[3];
  char v31;
  uint64_t __s1;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = a1[5];
  v4 = a1[6];
  v6 = a2[4];
  v5 = a2[5];
  v7 = a2[6];
  v27 = a1[4];
  v28 = v6;
  v29 = v5;
  if (v4 == v7)
  {
    sub_1C20A8008(a1[4], v3);
    swift_retain();
    sub_1C20A8008(v6, v5);
    swift_retain();
    goto LABEL_15;
  }
  v26 = a1[5];
  v8 = *(_QWORD *)(v4 + 16);
  v9 = *(_QWORD *)(v4 + 24);
  v10 = *(_QWORD *)(v4 + 32);
  v25 = *(unsigned __int8 *)(v4 + 40);
  v12 = *(_QWORD *)(v7 + 16);
  v11 = *(_QWORD *)(v7 + 24);
  v13 = *(_QWORD *)(v7 + 32);
  v14 = *(unsigned __int8 *)(v7 + 40);
  if ((~v10 & 0x3000000000000000) == 0 && v25 == 255)
  {
    v22 = *(_QWORD *)(v7 + 16);
    v23 = *(_QWORD *)(v7 + 24);
    v15 = *(_QWORD *)(v4 + 16);
    v16 = *(_QWORD *)(v4 + 24);
    v24 = *(_QWORD *)(v7 + 32);
    v17 = ~v13 & 0x3000000000000000;
    sub_1C20A8008(v27, v26);
    swift_retain();
    sub_1C20A8008(v28, v29);
    swift_retain_n();
    swift_retain();
    if (v17 || v14 != 255)
      goto LABEL_18;
LABEL_14:
    swift_release();
    swift_release();
    v3 = v26;
LABEL_15:
    __asm { BR              X8 }
  }
  __s1 = *(_QWORD *)(v4 + 16);
  v33 = v9;
  v34 = v10;
  v35 = v25;
  if ((~v13 & 0x3000000000000000) == 0 && v14 == 255)
  {
    v22 = v12;
    v23 = v11;
    v24 = v13;
    sub_1C20C60C4(v8, v9, v10, v25);
    sub_1C20A8008(v27, v3);
    swift_retain();
    sub_1C20A8008(v28, v29);
    swift_retain();
    sub_1C20C60C4(v8, v9, v10, v25);
    swift_retain();
    swift_retain();
    v15 = v8;
    v21 = v8;
    v16 = v9;
    sub_1C20C6184(v21, v9, v10, v25 & 1);
LABEL_18:
    sub_1C20C60C4(v22, v23, v24, v14);
    sub_1C20C6160(v15, v16, v10, v25);
    sub_1C20C6160(v22, v23, v24, v14);
    goto LABEL_19;
  }
  __s2[0] = v12;
  __s2[1] = v11;
  __s2[2] = v13;
  v31 = v14 & 1;
  sub_1C20C60C4(v8, v9, v10, v25);
  sub_1C20A8008(v27, v3);
  swift_retain();
  sub_1C20A8008(v28, v29);
  swift_retain();
  sub_1C20C60C4(v8, v9, v10, v25);
  swift_retain();
  swift_retain();
  v18 = v8;
  v19 = _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0(&__s1, __s2);
  sub_1C20C6184(__s1, v33, v34, v35);
  sub_1C20C6160(v18, v9, v10, v25);
  if ((v19 & 1) != 0)
    goto LABEL_14;
LABEL_19:
  swift_release();
  swift_release();
  sub_1C20A8058(v28, v29);
  swift_release();
  sub_1C20A8058(v27, v26);
  swift_release();
  return 0;
}

uint64_t sub_1C20F8650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[8];
  _OWORD v18[8];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[5];
        v18[4] = v3[4];
        v18[5] = v7;
        v8 = v3[7];
        v18[6] = v3[6];
        v18[7] = v8;
        v9 = v3[1];
        v18[0] = *v3;
        v18[1] = v9;
        v10 = v3[3];
        v18[2] = v3[2];
        v18[3] = v10;
        v11 = v4[5];
        v17[4] = v4[4];
        v17[5] = v11;
        v12 = v4[7];
        v17[6] = v4[6];
        v17[7] = v12;
        v13 = v4[1];
        v17[0] = *v4;
        v17[1] = v13;
        v14 = v4[3];
        v17[2] = v4[2];
        v17[3] = v14;
        v15 = _s20SiriOntologyProtobuf07Google_C6_FieldV2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v17);
        if ((v15 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 8;
        v3 += 8;
      }
      while (v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C20F8718(uint64_t a1, uint64_t a2)
{
  int v2;
  _QWORD *v3;
  unint64_t v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v11 || a1 == a2)
    return 1;
  v2 = *(_DWORD *)(a1 + 48);
  v3 = *(_QWORD **)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_DWORD *)(a2 + 48);
  v6 = *(_QWORD **)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v12 = v4;
  if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    if (v2 != v5)
      return 0;
LABEL_10:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v13, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v7, v14);
    if ((sub_1C20FC788(v3, v6, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C278C) & 1) != 0)
      __asm { BR              X8 }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v7, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v13, v4);
    return 0;
  }
  v8 = *(_QWORD **)(a1 + 56);
  v9 = sub_1C21757C8();
  result = 0;
  if ((v9 & 1) != 0)
  {
    v3 = v8;
    v4 = v12;
    if (v2 == v5)
      goto LABEL_10;
  }
  return result;
}

uint64_t sub_1C20F934C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v23 = *(_QWORD *)(a1 + 80);
  v22 = *(unsigned __int8 *)(a1 + 88);
  v25 = *(_QWORD **)(a1 + 96);
  v26 = *(_QWORD *)(a1 + 56);
  v18 = *(unsigned __int8 *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(unsigned __int8 *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 56);
  v21 = *(unsigned __int8 *)(a2 + 88);
  v24 = *(_QWORD **)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v16 = *(unsigned __int8 *)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 120);
  v30 = *(_QWORD *)(a2 + 128);
  if ((*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
    && (sub_1C21757C8() & 1) == 0)
  {
    return 0;
  }
  if (v4 == v8 && v26 == v29)
  {
    v11 = v7;
    v12 = v23;
    if (v5 != v9)
      return 0;
  }
  else
  {
    v13 = sub_1C21757C8();
    result = 0;
    if ((v13 & 1) == 0)
      return result;
    v11 = v7;
    v12 = v23;
    if (((v5 ^ v9) & 1) != 0)
      return result;
  }
  if (v6 == v10 && v12 == v28)
  {
    if (v22 != v21)
      return 0;
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v11, v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C20A8008(v27, v30);
    if ((sub_1C20FC788(v25, v24, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C278C) & 1) != 0)
    {
      v15 = v19 != 0;
      if (!v18)
        v15 = v19;
      if (!v16)
      {
        if (v15 != v17)
          goto LABEL_31;
        goto LABEL_30;
      }
      if (v17)
      {
        if (v15 != 1)
          goto LABEL_31;
LABEL_30:
        __asm { BR              X8 }
      }
      if (!v15)
        goto LABEL_30;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v27, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(v11, v20);
    return 0;
  }
  v14 = sub_1C21757C8();
  result = 0;
  if ((v14 & 1) != 0 && ((v22 ^ v21) & 1) == 0)
    goto LABEL_20;
  return result;
}

uint64_t sub_1C20F9BCC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[2];
  if (v2 == a2[2])
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = a1[6];
    v7 = a1[7];
    v8 = a1[9];
    v5 = a2[6];
    v4 = a2[7];
    if (a1[4] == a2[4] && a1[5] == a2[5] || (v4 = a2[7], (sub_1C21757C8() & 1) != 0))
    {
      if (v3 == v5 && v7 == v4 || (sub_1C21757C8() & 1) != 0)
        __asm { BR              X8 }
    }
  }
  return 0;
}

uint64_t sub_1C20FA928(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t __s2;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  __int128 v49;
  uint64_t __s1;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v35 = a2 + 4;
  v5 = a1[4];
  v4 = a1[5];
  v6 = (_QWORD *)a1[6];
  v7 = *v35;
  v8 = a2[5];
  v9 = (_QWORD *)a2[6];
  v37 = *v35;
  v38 = v8;
  if (v6 == v9)
  {
    sub_1C20A8008(v5, v4);
    swift_retain();
    sub_1C20A8008(v7, v8);
    swift_retain();
    goto LABEL_31;
  }
  swift_beginAccess();
  v10 = v6[2];
  v11 = v6[3];
  swift_beginAccess();
  v12 = v9[3];
  if (v11)
  {
    if (!v12)
      return 0;
    v13 = v10 == v9[2] && v11 == v12;
    if (!v13 && (sub_1C21757C8() & 1) == 0)
      return 0;
    goto LABEL_17;
  }
  if (!v12)
  {
LABEL_17:
    v36 = v5;
    swift_beginAccess();
    v14 = v6[4];
    v15 = v6[5];
    v16 = v6[6];
    swift_beginAccess();
    v17 = v9[4];
    v34 = v9[5];
    v18 = v9[6];
    if (v14)
    {
      if (v17)
      {
        v19 = *(_QWORD *)(v14 + 16);
        v33 = v4;
        if (v19 == *(_QWORD *)(v17 + 16))
        {
          if (v19)
          {
            sub_1C20EC1A4(v14, v15, v16);
            sub_1C20A8008(v36, v4);
            swift_retain();
            sub_1C20A8008(v37, v38);
            swift_retain();
            sub_1C20EC1A4(v14, v15, v16);
            swift_retain();
            swift_retain();
            if (v14 != v17)
            {
              v20 = 0;
              do
              {
                v21 = *(_QWORD *)(v14 + v20 + 72);
                v22 = *(_BYTE *)(v14 + v20 + 80);
                v23 = *(_QWORD *)(v14 + v20 + 88);
                v24 = *(_BYTE *)(v14 + v20 + 96);
                v25 = *(_QWORD *)(v14 + v20 + 104);
                v26 = *(_BYTE *)(v14 + v20 + 112);
                __s1 = *(_QWORD *)(v14 + v20 + 32);
                v51 = *(_OWORD *)(v14 + v20 + 40);
                v52 = *(_OWORD *)(v14 + v20 + 56);
                v53 = v21;
                v54 = v22;
                v55 = v23;
                v56 = v24;
                v57 = v25;
                v58 = v26;
                v59 = *(_OWORD *)(v14 + v20 + 120);
                v60 = *(_OWORD *)(v14 + v20 + 136);
                v27 = *(_QWORD *)(v17 + v20 + 72);
                v28 = *(_BYTE *)(v17 + v20 + 80);
                v29 = *(_QWORD *)(v17 + v20 + 88);
                v30 = *(_BYTE *)(v17 + v20 + 96);
                v31 = *(_QWORD *)(v17 + v20 + 104);
                v32 = *(_BYTE *)(v17 + v20 + 112);
                __s2 = *(_QWORD *)(v17 + v20 + 32);
                v40 = *(_OWORD *)(v17 + v20 + 40);
                v41 = *(_OWORD *)(v17 + v20 + 56);
                v42 = v27;
                v43 = v28;
                v44 = v29;
                v45 = v30;
                v46 = v31;
                v47 = v32;
                v48 = *(_OWORD *)(v17 + v20 + 120);
                v49 = *(_OWORD *)(v17 + v20 + 136);
                if ((_s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)&__s1, (uint64_t)&__s2) & 1) == 0)goto LABEL_35;
                v20 += 120;
              }
              while (--v19);
            }
          }
          else
          {
            sub_1C20EC1A4(v14, v15, v16);
            sub_1C20A8008(v36, v4);
            swift_retain();
            sub_1C20A8008(v37, v38);
            swift_retain();
            sub_1C20EC1A4(v14, v15, v16);
            swift_retain();
            swift_retain();
          }
          __asm { BR              X8 }
        }
        sub_1C20EC1A4(v14, v15, v16);
        sub_1C20A8008(v36, v4);
        swift_retain();
        sub_1C20A8008(v37, v38);
        swift_retain();
        sub_1C20EC1A4(v14, v15, v16);
        swift_retain();
        swift_retain();
LABEL_35:
        swift_bridgeObjectRelease();
        sub_1C20A8058(v15, v16);
        swift_bridgeObjectRelease();
        sub_1C20EC1EC(v14, v15, v16);
        v4 = v33;
        v7 = v37;
        goto LABEL_36;
      }
      sub_1C20EC1A4(v14, v15, v16);
      sub_1C20A8008(v36, v4);
      swift_retain();
      sub_1C20A8008(v7, v38);
      swift_retain();
      sub_1C20EC1A4(v14, v15, v16);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C20A8058(v15, v16);
      swift_bridgeObjectRelease();
      v17 = 0;
LABEL_33:
      sub_1C20EC1A4(v17, v34, v18);
      sub_1C20EC1EC(v14, v15, v16);
      sub_1C20EC1EC(v17, v34, v18);
LABEL_36:
      swift_release();
      swift_release();
      sub_1C20A8058(v7, v38);
      swift_release();
      sub_1C20A8058(v36, v4);
      swift_release();
      return 0;
    }
    sub_1C20A8008(v36, v4);
    swift_retain();
    sub_1C20A8008(v7, v38);
    swift_retain_n();
    swift_retain();
    if (v17)
      goto LABEL_33;
    swift_release();
    swift_release();
LABEL_31:
    __asm { BR              X8 }
  }
  return 0;
}

uint64_t sub_1C20FBD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
  {
    if (*(_DWORD *)(a1 + 48) == *(_DWORD *)(a2 + 48))
      v3 = *(_BYTE *)(a2 + 52);
    else
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
LABEL_11:
    if ((*(_BYTE *)(a1 + 60) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 60))
        return 0;
    }
    else
    {
      if (*(_DWORD *)(a1 + 56) == *(_DWORD *)(a2 + 56))
        v4 = *(_BYTE *)(a2 + 60);
      else
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    __asm { BR              X8 }
  }
  if (*(_BYTE *)(a2 + 52))
    goto LABEL_11;
  return 0;
}

uint64_t sub_1C20FC788(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = a1[2];
  if (v3 != a2[2])
    return 0;
  if (!v3 || a1 == a2)
    return 1;
  v5 = a1[4];
  v4 = a1[5];
  v6 = a1[6];
  v8 = a2[4];
  v7 = a2[5];
  v9 = a2[6];
  sub_1C20A8008(v5, v4);
  swift_retain();
  sub_1C20A8008(v8, v7);
  if (v6 == v9)
  {
    swift_retain();
LABEL_8:
    __asm { BR              X8 }
  }
  swift_retain_n();
  v10 = swift_retain();
  v11 = a3(v10, v9);
  swift_release();
  swift_release();
  if ((v11 & 1) != 0)
    goto LABEL_8;
  sub_1C20A8058(v8, v7);
  swift_release();
  sub_1C20A8058(v5, v4);
  swift_release();
  return 0;
}

void sub_1C20FD260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1C20FD2C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1C20FD4A4);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1C20FD4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1C20FD260((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1C20FD59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1C21752C4();
  v11 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1C21752DC();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1C20FD260(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1C20FD650(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C20FD69C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1C20FD6D0 + *((int *)qword_1C20FD8A8 + (v0 >> 62))))();
}

uint64_t sub_1C20FD6E0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  double v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  char v36;
  char v37;

  v2 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  v35 = *(_QWORD *)(a1 + 56);
  v6 = *(double *)(a1 + 72);
  v36 = *(_BYTE *)(a1 + 80);
  v37 = *(_BYTE *)(a1 + 64);
  v31 = *(_QWORD *)(a1 + 88);
  v33 = *(_QWORD *)(a1 + 96);
  v27 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 24);
  v22 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(unsigned __int8 *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(unsigned __int8 *)(a2 + 64);
  v13 = *(double *)(a2 + 72);
  v34 = *(unsigned __int8 *)(a2 + 80);
  v29 = *(_QWORD *)(a1 + 112);
  v30 = *(_QWORD *)(a2 + 88);
  v32 = *(_QWORD *)(a2 + 96);
  v26 = *(_QWORD *)(a2 + 104);
  v28 = *(_QWORD *)(a2 + 112);
  if ((sub_1C20F57AC(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (v4)
  {
    if (!v8 || (v2 != v7 || v4 != v8) && (sub_1C21757C8() & 1) == 0)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if ((v5 & 1) != 0)
  {
    if (!v10)
      return 0;
  }
  else
  {
    if (v3 == v9)
      v14 = v10;
    else
      v14 = 1;
    if ((v14 & 1) != 0)
      return 0;
  }
  if ((v37 & 1) != 0)
  {
    if (!v12)
      return 0;
  }
  else
  {
    if (v35 == v11)
      v15 = v12;
    else
      v15 = 1;
    if ((v15 & 1) != 0)
      return 0;
  }
  if ((v36 & 1) != 0)
  {
    if (!v34)
      return 0;
  }
  else
  {
    v16 = v34;
    if (v6 != v13)
      v16 = 1;
    if ((v16 & 1) != 0)
      return 0;
  }
  if (v33 >> 60 != 15)
  {
    if (v32 >> 60 != 15)
    {
      sub_1C20FE40C(v31, v33);
      sub_1C20FE40C(v30, v32);
      sub_1C20FD650(v31, v33);
      v18 = v17;
      sub_1C20AE1C8(v30, v32);
      sub_1C20AE1C8(v31, v33);
      if ((v18 & 1) == 0)
        return 0;
      goto LABEL_35;
    }
LABEL_33:
    sub_1C20FE40C(v31, v33);
    sub_1C20FE40C(v30, v32);
    sub_1C20AE1C8(v31, v33);
    sub_1C20AE1C8(v30, v32);
    return 0;
  }
  if (v32 >> 60 != 15)
    goto LABEL_33;
LABEL_35:
  if (v29)
  {
    if (!v28 || (v27 != v26 || v29 != v28) && (sub_1C21757C8() & 1) == 0)
      return 0;
LABEL_40:
    sub_1C20A8008(v25, v24);
    sub_1C20A8008(v23, v22);
    sub_1C20FD650(v25, v24);
    v20 = v19;
    sub_1C20A8058(v23, v22);
    sub_1C20A8058(v25, v24);
    return v20 & 1;
  }
  if (!v28)
    goto LABEL_40;
  return 0;
}

uint64_t _s20SiriOntologyProtobuf07Google_C15_SourceCodeInfoV8LocationV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v2 = a1[1];
  v3 = a1[5];
  v17 = a1[4];
  v18 = a1[3];
  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[8];
  v7 = a2[1];
  v19 = (_QWORD *)a2[2];
  v20 = (_QWORD *)a1[2];
  v8 = a2[5];
  v15 = a2[4];
  v16 = a2[3];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  if (!sub_1C20F6BCC(*a1, *a2) || !sub_1C20F6BCC(v2, v7))
    return 0;
  if (v4)
  {
    if (!v9 || (v3 != v8 || v4 != v9) && (sub_1C21757C8() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  if (v6)
  {
    if (!v11 || (v5 != v10 || v6 != v11) && (sub_1C21757C8() & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  if ((sub_1C20F76E4(v20, v19) & 1) != 0)
  {
    sub_1C20A8008(v18, v17);
    sub_1C20A8008(v16, v15);
    sub_1C20FD650(v18, v17);
    v13 = v12;
    sub_1C20A8058(v16, v15);
    sub_1C20A8058(v18, v17);
    return v13 & 1;
  }
  return 0;
}

uint64_t _s20SiriOntologyProtobuf07Google_C18_GeneratedCodeInfoV10AnnotationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_DWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 44);
  v17 = *(_DWORD *)(a1 + 48);
  v22 = *(_BYTE *)(a1 + 52);
  v6 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_DWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 44);
  v10 = *(_DWORD *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 52);
  if (!sub_1C20F6BCC(*(_QWORD *)a1, *(_QWORD *)a2))
    return 0;
  if (v3)
  {
    if (!v7 || (v2 != v6 || v3 != v7) && (sub_1C21757C8() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if ((v5 & 1) != 0)
  {
    if (!v9)
      return 0;
  }
  else
  {
    if (v4 == v8)
      v12 = v9;
    else
      v12 = 1;
    if ((v12 & 1) != 0)
      return 0;
  }
  if ((v22 & 1) == 0)
  {
    if (v17 == v10)
      v16 = v11;
    else
      v16 = 1;
    if ((v16 & 1) != 0)
      return 0;
LABEL_18:
    sub_1C20A8008(v21, v20);
    sub_1C20A8008(v19, v18);
    sub_1C20FD650(v21, v20);
    v14 = v13;
    sub_1C20A8058(v19, v18);
    sub_1C20A8058(v21, v20);
    return v14 & 1;
  }
  if (v11)
    goto LABEL_18;
  return 0;
}

uint64_t sub_1C20FDEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v8;
  char v9;
  char v10;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 20);
  if ((*(_BYTE *)(a1 + 20) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 20))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 28) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 28))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24))
      v8 = *(_BYTE *)(a2 + 28);
    else
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  sub_1C20A8008(*(_QWORD *)a1, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v10 = v9;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v10 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV8NamePartV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  char v12;
  char v13;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(unsigned __int8 *)(a2 + 32);
  if (v5)
  {
    if (!v9)
      return 0;
    v11 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v5 == v9;
    if (!v11 && (sub_1C21757C8() & 1) == 0)
      return 0;
LABEL_10:
    if (v6 == 2)
    {
      if (v10 != 2)
        return 0;
    }
    else if (v10 == 2 || ((((v10 & 1) == 0) ^ v6) & 1) == 0)
    {
      return 0;
    }
    sub_1C20A8008(v3, v4);
    sub_1C20A8008(v7, v8);
    sub_1C20FD650(v3, v4);
    v13 = v12;
    sub_1C20A8058(v7, v8);
    sub_1C20A8058(v3, v4);
    return v13 & 1;
  }
  if (!v9)
    goto LABEL_10;
  return 0;
}

uint64_t sub_1C20FE068()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v1 = *(_QWORD **)(v0 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_beginAccess();
    v4 = v1[2];
    v3 = v1[3];
    swift_beginAccess();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v5 = v1[4];
    v6 = v1[5];
    v7 = v1[6];
    v8 = v1[7];
    sub_1C20EC1A4(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    v9 = *(_QWORD *)(v2 + 32);
    v10 = *(_QWORD *)(v2 + 40);
    v11 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v2 + 32) = v5;
    *(_QWORD *)(v2 + 40) = v6;
    *(_QWORD *)(v2 + 48) = v7;
    *(_QWORD *)(v2 + 56) = v8;
    sub_1C20EC1EC(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = v2;
    swift_release();
  }
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1C20FE1A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_DWORD *)(v1 + 96) = 33685504;
  *(_OWORD *)(v1 + 16) = 0u;
  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = v7;
  *(_QWORD *)(v1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  v13 = *(_WORD *)(a1 + 96);
  swift_beginAccess();
  v14 = *(_QWORD *)(v1 + 72);
  v15 = *(_QWORD *)(v1 + 80);
  v17 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 64) = v9;
  *(_QWORD *)(v1 + 72) = v10;
  *(_QWORD *)(v1 + 80) = v11;
  *(_QWORD *)(v1 + 88) = v12;
  *(_WORD *)(v1 + 96) = v13;
  sub_1C20EC1A4(v9, v10, v11);
  sub_1C20EC1EC(v17, v14, v15);
  swift_beginAccess();
  LOBYTE(v7) = *(_BYTE *)(a1 + 98);
  swift_beginAccess();
  *(_BYTE *)(v1 + 98) = v7;
  swift_beginAccess();
  LOBYTE(a1) = *(_BYTE *)(a1 + 99);
  swift_beginAccess();
  *(_BYTE *)(v1 + 99) = a1;
  return v1;
}

uint64_t type metadata accessor for Google_Protobuf_FileOptions._StorageClass()
{
  return objc_opt_self();
}

uint64_t sub_1C20FE40C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C20A8008(a1, a2);
  return a1;
}

unint64_t sub_1C20FE420()
{
  unint64_t result;

  result = qword_1EF75DCD0;
  if (!qword_1EF75DCD0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorProto, &type metadata for Google_Protobuf_FileDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DCD0);
  }
  return result;
}

unint64_t sub_1C20FE46C()
{
  unint64_t result;

  result = qword_1EF75DCD8;
  if (!qword_1EF75DCD8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ExtensionRangeOptions, &type metadata for Google_Protobuf_ExtensionRangeOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DCD8);
  }
  return result;
}

unint64_t sub_1C20FE4B0()
{
  unint64_t result;

  result = qword_1EF75DCE0;
  if (!qword_1EF75DCE0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption, &type metadata for Google_Protobuf_UninterpretedOption);
    atomic_store(result, (unint64_t *)&qword_1EF75DCE0);
  }
  return result;
}

uint64_t sub_1C20FE4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(unsigned __int8 *)(a1 + 32);
  v9 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(unsigned __int8 *)(a2 + 32);
  if (v8 == 2)
  {
    if (v13 != 2)
    {
LABEL_9:
      v16 = 0;
      return v16 & 1;
    }
  }
  else if (v13 == 2 || ((((v13 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_9;
  }
  if ((sub_1C20F5660(v4, v9) & 1) == 0)
    goto LABEL_9;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v10, v11);
  sub_1C20FD650(v5, v6);
  v15 = v14;
  sub_1C20A8058(v10, v11);
  sub_1C20A8058(v5, v6);
  if ((v15 & 1) == 0)
    goto LABEL_9;
  v18 = v12;
  v19 = v7;
  v16 = static ExtensionFieldValueSet.== infix(_:_:)(&v19, &v18);
  return v16 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C15_MessageOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  char v20;
  char v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(unsigned __int8 *)(a1 + 32);
  v9 = *(unsigned __int8 *)(a1 + 33);
  v10 = *(unsigned __int8 *)(a1 + 34);
  v11 = *(unsigned __int8 *)(a1 + 35);
  v12 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(unsigned __int8 *)(a2 + 32);
  v17 = *(unsigned __int8 *)(a2 + 33);
  v18 = *(unsigned __int8 *)(a2 + 34);
  v19 = *(unsigned __int8 *)(a2 + 35);
  if (v8 == 2)
  {
    if (v16 != 2)
      goto LABEL_24;
  }
  else if (v16 == 2 || ((((v16 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_24;
  }
  if (v9 == 2)
  {
    if (v17 != 2)
      goto LABEL_24;
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v9) & 1) == 0)
  {
    goto LABEL_24;
  }
  if (v10 == 2)
  {
    if (v18 != 2)
      goto LABEL_24;
  }
  else if (v18 == 2 || ((((v18 & 1) == 0) ^ v10) & 1) == 0)
  {
    goto LABEL_24;
  }
  if (v11 == 2)
  {
    if (v19 == 2)
      goto LABEL_21;
LABEL_24:
    v22 = 0;
    return v22 & 1;
  }
  if (v19 == 2 || ((((v19 & 1) == 0) ^ v11) & 1) == 0)
    goto LABEL_24;
LABEL_21:
  if ((sub_1C20F5660(v4, v12) & 1) == 0)
    goto LABEL_24;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v13, v14);
  sub_1C20FD650(v5, v6);
  v21 = v20;
  sub_1C20A8058(v13, v14);
  sub_1C20A8058(v5, v6);
  if ((v21 & 1) == 0)
    goto LABEL_24;
  v24 = v15;
  v25 = v7;
  v22 = static ExtensionFieldValueSet.== infix(_:_:)(&v25, &v24);
  return v22 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C14_MethodOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(unsigned __int8 *)(a1 + 32);
  v9 = *(unsigned __int8 *)(a1 + 33);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = *(unsigned __int8 *)(a2 + 32);
  v15 = *(unsigned __int8 *)(a2 + 33);
  if (v8 == 2)
  {
    if (v14 != 2)
      goto LABEL_14;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_14;
  }
  if (v9 == 3)
  {
    if (v15 != 3)
    {
LABEL_14:
      v16 = 0;
      return v16 & 1;
    }
  }
  else
  {
    v16 = 0;
    if (v15 == 3 || v9 != v15)
      return v16 & 1;
  }
  if ((sub_1C20F5660(v4, v10) & 1) == 0)
    goto LABEL_14;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v11, v12);
  sub_1C20FD650(v5, v6);
  v18 = v17;
  sub_1C20A8058(v11, v12);
  sub_1C20A8058(v5, v6);
  if ((v18 & 1) == 0)
    goto LABEL_14;
  v20 = v13;
  v21 = v7;
  v16 = static ExtensionFieldValueSet.== infix(_:_:)(&v21, &v20);
  return v16 & 1;
}

uint64_t sub_1C20FE8B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  if ((sub_1C20F5660(*a1, *a2) & 1) != 0
    && (sub_1C20A8008(v2, v3),
        sub_1C20A8008(v5, v6),
        sub_1C20FD650(v2, v3),
        v9 = v8,
        sub_1C20A8058(v5, v6),
        sub_1C20A8058(v2, v3),
        (v9 & 1) != 0))
  {
    v12 = v7;
    v13 = v4;
    v10 = static ExtensionFieldValueSet.== infix(_:_:)(&v13, &v12);
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C13_FieldOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  char v24;
  char v25;
  char v26;
  uint64_t v28;
  uint64_t v29;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(unsigned __int8 *)(a1 + 32);
  v9 = *(unsigned __int8 *)(a1 + 33);
  v10 = *(unsigned __int8 *)(a1 + 34);
  v11 = *(unsigned __int8 *)(a1 + 35);
  v12 = *(unsigned __int8 *)(a1 + 36);
  v13 = *(unsigned __int8 *)(a1 + 37);
  v14 = *(_QWORD *)a2;
  v15 = *(_QWORD *)(a2 + 8);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = *(unsigned __int8 *)(a2 + 32);
  v19 = *(unsigned __int8 *)(a2 + 33);
  v20 = *(unsigned __int8 *)(a2 + 34);
  v21 = *(unsigned __int8 *)(a2 + 35);
  v22 = *(unsigned __int8 *)(a2 + 36);
  v23 = *(unsigned __int8 *)(a2 + 37);
  if (v8 == 3)
  {
    if (v18 != 3)
      goto LABEL_34;
  }
  else
  {
    v24 = 0;
    if (v18 == 3 || v8 != v18)
      return v24 & 1;
  }
  if (v9 == 2)
  {
    if (v19 != 2)
      goto LABEL_34;
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v9) & 1) == 0)
  {
    goto LABEL_34;
  }
  if (v10 == 3)
  {
    if (v20 != 3)
      goto LABEL_34;
  }
  else
  {
    v24 = 0;
    if (v20 == 3 || v10 != v20)
      return v24 & 1;
  }
  if (v11 == 2)
  {
    if (v21 != 2)
      goto LABEL_34;
  }
  else if (v21 == 2 || ((((v21 & 1) == 0) ^ v11) & 1) == 0)
  {
    goto LABEL_34;
  }
  if (v12 == 2)
  {
    if (v22 != 2)
      goto LABEL_34;
  }
  else if (v22 == 2 || ((((v22 & 1) == 0) ^ v12) & 1) == 0)
  {
    goto LABEL_34;
  }
  if (v13 != 2)
  {
    if (v23 == 2 || ((((v23 & 1) == 0) ^ v13) & 1) == 0)
      goto LABEL_34;
    goto LABEL_31;
  }
  if (v23 != 2)
  {
LABEL_34:
    v24 = 0;
    return v24 & 1;
  }
LABEL_31:
  if ((sub_1C20F5660(v4, v14) & 1) == 0)
    goto LABEL_34;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v15, v16);
  sub_1C20FD650(v5, v6);
  v26 = v25;
  sub_1C20A8058(v15, v16);
  sub_1C20A8058(v5, v6);
  if ((v26 & 1) == 0)
    goto LABEL_34;
  v28 = v17;
  v29 = v7;
  v24 = static ExtensionFieldValueSet.== infix(_:_:)(&v29, &v28);
  return v24 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C12_FileOptionsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  if (v4 != v8)
  {
    swift_retain();
    swift_retain();
    v10 = sub_1C20ED65C(v4, v8);
    swift_release();
    swift_release();
    if ((v10 & 1) == 0)
      goto LABEL_5;
  }
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v6, v7);
  sub_1C20FD650(v2, v3);
  v12 = v11;
  sub_1C20A8058(v6, v7);
  sub_1C20A8058(v2, v3);
  if ((v12 & 1) != 0)
  {
    v15 = v9;
    v16 = v5;
    v13 = static ExtensionFieldValueSet.== infix(_:_:)(&v16, &v15);
  }
  else
  {
LABEL_5:
    v13 = 0;
  }
  return v13 & 1;
}

unint64_t sub_1C20FEC68()
{
  unint64_t result;

  result = qword_1EF75DCE8;
  if (!qword_1EF75DCE8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MessageOptions, &type metadata for Google_Protobuf_MessageOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DCE8);
  }
  return result;
}

unint64_t sub_1C20FECAC()
{
  unint64_t result;

  result = qword_1EF75DCF0;
  if (!qword_1EF75DCF0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions, &type metadata for Google_Protobuf_FieldOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DCF0);
  }
  return result;
}

unint64_t sub_1C20FECF0()
{
  unint64_t result;

  result = qword_1EF75DCF8;
  if (!qword_1EF75DCF8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.JSType, &type metadata for Google_Protobuf_FieldOptions.JSType);
    atomic_store(result, (unint64_t *)&qword_1EF75DCF8);
  }
  return result;
}

unint64_t sub_1C20FED34()
{
  unint64_t result;

  result = qword_1EF75DD00;
  if (!qword_1EF75DD00)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.CType, &type metadata for Google_Protobuf_FieldOptions.CType);
    atomic_store(result, (unint64_t *)&qword_1EF75DD00);
  }
  return result;
}

unint64_t sub_1C20FED78()
{
  unint64_t result;

  result = qword_1EF75DD08;
  if (!qword_1EF75DD08)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofOptions, &type metadata for Google_Protobuf_OneofOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DD08);
  }
  return result;
}

unint64_t sub_1C20FEDBC()
{
  unint64_t result;

  result = qword_1EF75DD10;
  if (!qword_1EF75DD10)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumOptions, &type metadata for Google_Protobuf_EnumOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DD10);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(unsigned __int8 *)(a1 + 32);
  v9 = *(unsigned __int8 *)(a1 + 33);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = *(unsigned __int8 *)(a2 + 32);
  v15 = *(unsigned __int8 *)(a2 + 33);
  if (v8 == 2)
  {
    if (v14 != 2)
      goto LABEL_14;
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_14;
  }
  if (v9 == 2)
  {
    if (v15 != 2)
    {
LABEL_14:
      v18 = 0;
      return v18 & 1;
    }
  }
  else if (v15 == 2 || ((((v15 & 1) == 0) ^ v9) & 1) == 0)
  {
    goto LABEL_14;
  }
  if ((sub_1C20F5660(v4, v10) & 1) == 0)
    goto LABEL_14;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v11, v12);
  sub_1C20FD650(v5, v6);
  v17 = v16;
  sub_1C20A8058(v11, v12);
  sub_1C20A8058(v5, v6);
  if ((v17 & 1) == 0)
    goto LABEL_14;
  v20 = v13;
  v21 = v7;
  v18 = _s20SiriOntologyProtobuf22ExtensionFieldValueSetV2eeoiySbAC_ACtFZ_0(&v21, &v20);
  return v18 & 1;
}

unint64_t sub_1C20FEF30()
{
  unint64_t result;

  result = qword_1EF75DD18;
  if (!qword_1EF75DD18)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueOptions, &type metadata for Google_Protobuf_EnumValueOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DD18);
  }
  return result;
}

unint64_t sub_1C20FEF74()
{
  unint64_t result;

  result = qword_1EF75DD20;
  if (!qword_1EF75DD20)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceOptions, &type metadata for Google_Protobuf_ServiceOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DD20);
  }
  return result;
}

unint64_t sub_1C20FEFB8()
{
  unint64_t result;

  result = qword_1EF75DD28;
  if (!qword_1EF75DD28)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions, &type metadata for Google_Protobuf_MethodOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DD28);
  }
  return result;
}

unint64_t sub_1C20FEFFC()
{
  unint64_t result;

  result = qword_1EF75DD30;
  if (!qword_1EF75DD30)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions.IdempotencyLevel, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel);
    atomic_store(result, (unint64_t *)&qword_1EF75DD30);
  }
  return result;
}

unint64_t sub_1C20FF040()
{
  unint64_t result;

  result = qword_1EF75DD38;
  if (!qword_1EF75DD38)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption.NamePart, &type metadata for Google_Protobuf_UninterpretedOption.NamePart);
    atomic_store(result, (unint64_t *)&qword_1EF75DD38);
  }
  return result;
}

unint64_t sub_1C20FF084()
{
  unint64_t result;

  result = qword_1EF75DD40;
  if (!qword_1EF75DD40)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo.Location, &type metadata for Google_Protobuf_SourceCodeInfo.Location);
    atomic_store(result, (unint64_t *)&qword_1EF75DD40);
  }
  return result;
}

unint64_t sub_1C20FF0C8()
{
  unint64_t result;

  result = qword_1EF75DD48;
  if (!qword_1EF75DD48)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo.Annotation, &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
    atomic_store(result, (unint64_t *)&qword_1EF75DD48);
  }
  return result;
}

unint64_t sub_1C20FF10C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FE46C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF134()
{
  unint64_t result;

  result = qword_1EF75DD50;
  if (!qword_1EF75DD50)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.TypeEnum, &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF75DD50);
  }
  return result;
}

uint64_t sub_1C20FF178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF18C, (uint64_t (*)(void))sub_1C20FF1D0);
}

unint64_t sub_1C20FF18C()
{
  unint64_t result;

  result = qword_1EF75DD58;
  if (!qword_1EF75DD58)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.TypeEnum, &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF75DD58);
  }
  return result;
}

unint64_t sub_1C20FF1D0()
{
  unint64_t result;

  result = qword_1EF75DD60;
  if (!qword_1EF75DD60)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.TypeEnum, &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF75DD60);
  }
  return result;
}

unint64_t sub_1C20FF218()
{
  unint64_t result;

  result = qword_1EF75DD68;
  if (!qword_1EF75DD68)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.Label, &type metadata for Google_Protobuf_FieldDescriptorProto.Label);
    atomic_store(result, (unint64_t *)&qword_1EF75DD68);
  }
  return result;
}

uint64_t sub_1C20FF25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF270, (uint64_t (*)(void))sub_1C20FF2B4);
}

unint64_t sub_1C20FF270()
{
  unint64_t result;

  result = qword_1EF75DD70;
  if (!qword_1EF75DD70)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.Label, &type metadata for Google_Protobuf_FieldDescriptorProto.Label);
    atomic_store(result, (unint64_t *)&qword_1EF75DD70);
  }
  return result;
}

unint64_t sub_1C20FF2B4()
{
  unint64_t result;

  result = qword_1EF75DD78;
  if (!qword_1EF75DD78)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.Label, &type metadata for Google_Protobuf_FieldDescriptorProto.Label);
    atomic_store(result, (unint64_t *)&qword_1EF75DD78);
  }
  return result;
}

uint64_t sub_1C20FF2F8()
{
  return sub_1C20C3A80(&qword_1EF75DD80, &qword_1EF75DD88);
}

uint64_t sub_1C20FF31C()
{
  return sub_1C20C3A80(&qword_1EF75DD90, &qword_1EF75DD98);
}

unint64_t sub_1C20FF344()
{
  unint64_t result;

  result = qword_1EF75DDA0;
  if (!qword_1EF75DDA0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions.OptimizeMode, &type metadata for Google_Protobuf_FileOptions.OptimizeMode);
    atomic_store(result, (unint64_t *)&qword_1EF75DDA0);
  }
  return result;
}

uint64_t sub_1C20FF388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF39C, (uint64_t (*)(void))sub_1C20FF3E0);
}

unint64_t sub_1C20FF39C()
{
  unint64_t result;

  result = qword_1EF75DDA8;
  if (!qword_1EF75DDA8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions.OptimizeMode, &type metadata for Google_Protobuf_FileOptions.OptimizeMode);
    atomic_store(result, (unint64_t *)&qword_1EF75DDA8);
  }
  return result;
}

unint64_t sub_1C20FF3E0()
{
  unint64_t result;

  result = qword_1EF75DDB0;
  if (!qword_1EF75DDB0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions.OptimizeMode, &type metadata for Google_Protobuf_FileOptions.OptimizeMode);
    atomic_store(result, (unint64_t *)&qword_1EF75DDB0);
  }
  return result;
}

unint64_t sub_1C20FF424(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FF448();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF448()
{
  unint64_t result;

  result = qword_1EF75DDB8;
  if (!qword_1EF75DDB8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions, &type metadata for Google_Protobuf_FileOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DDB8);
  }
  return result;
}

uint64_t sub_1C20FF48C()
{
  return sub_1C20C3A80(&qword_1EF75DDC0, &qword_1EF75DDC8);
}

unint64_t sub_1C20FF4B0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FEC68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF4D8()
{
  unint64_t result;

  result = qword_1EF75DDD0;
  if (!qword_1EF75DDD0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.CType, &type metadata for Google_Protobuf_FieldOptions.CType);
    atomic_store(result, (unint64_t *)&qword_1EF75DDD0);
  }
  return result;
}

uint64_t sub_1C20FF51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF530, (uint64_t (*)(void))sub_1C20FF574);
}

unint64_t sub_1C20FF530()
{
  unint64_t result;

  result = qword_1EF75DDD8;
  if (!qword_1EF75DDD8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.CType, &type metadata for Google_Protobuf_FieldOptions.CType);
    atomic_store(result, (unint64_t *)&qword_1EF75DDD8);
  }
  return result;
}

unint64_t sub_1C20FF574()
{
  unint64_t result;

  result = qword_1EF75DDE0;
  if (!qword_1EF75DDE0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.CType, &type metadata for Google_Protobuf_FieldOptions.CType);
    atomic_store(result, (unint64_t *)&qword_1EF75DDE0);
  }
  return result;
}

unint64_t sub_1C20FF5BC()
{
  unint64_t result;

  result = qword_1EF75DDE8;
  if (!qword_1EF75DDE8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.JSType, &type metadata for Google_Protobuf_FieldOptions.JSType);
    atomic_store(result, (unint64_t *)&qword_1EF75DDE8);
  }
  return result;
}

uint64_t sub_1C20FF600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF614, (uint64_t (*)(void))sub_1C20FF658);
}

unint64_t sub_1C20FF614()
{
  unint64_t result;

  result = qword_1EF75DDF0;
  if (!qword_1EF75DDF0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.JSType, &type metadata for Google_Protobuf_FieldOptions.JSType);
    atomic_store(result, (unint64_t *)&qword_1EF75DDF0);
  }
  return result;
}

unint64_t sub_1C20FF658()
{
  unint64_t result;

  result = qword_1EF75DDF8;
  if (!qword_1EF75DDF8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions.JSType, &type metadata for Google_Protobuf_FieldOptions.JSType);
    atomic_store(result, (unint64_t *)&qword_1EF75DDF8);
  }
  return result;
}

unint64_t sub_1C20FF69C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FECAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C20FF6C0()
{
  return sub_1C20C3A80(&qword_1EF75DE00, &qword_1EF75DE08);
}

uint64_t sub_1C20FF6E4()
{
  return sub_1C20C3A80(&qword_1EF75DE10, &qword_1EF75DE18);
}

unint64_t sub_1C20FF708(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FED78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF72C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FEDBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF750(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FEF30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF774(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FEF74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF79C()
{
  unint64_t result;

  result = qword_1EF75DE20;
  if (!qword_1EF75DE20)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions.IdempotencyLevel, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel);
    atomic_store(result, (unint64_t *)&qword_1EF75DE20);
  }
  return result;
}

uint64_t sub_1C20FF7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF7F4, (uint64_t (*)(void))sub_1C20FF838);
}

unint64_t sub_1C20FF7F4()
{
  unint64_t result;

  result = qword_1EF75DE28;
  if (!qword_1EF75DE28)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions.IdempotencyLevel, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel);
    atomic_store(result, (unint64_t *)&qword_1EF75DE28);
  }
  return result;
}

unint64_t sub_1C20FF838()
{
  unint64_t result;

  result = qword_1EF75DE30;
  if (!qword_1EF75DE30)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions.IdempotencyLevel, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel);
    atomic_store(result, (unint64_t *)&qword_1EF75DE30);
  }
  return result;
}

unint64_t sub_1C20FF87C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FEFB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C20FF8A0()
{
  return sub_1C20C3A80(&qword_1EF75DE38, &qword_1EF75DE40);
}

unint64_t sub_1C20FF8C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FF8E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FF8E8()
{
  unint64_t result;

  result = qword_1EF75DE48;
  if (!qword_1EF75DE48)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorSet, &type metadata for Google_Protobuf_FileDescriptorSet);
    atomic_store(result, (unint64_t *)&qword_1EF75DE48);
  }
  return result;
}

uint64_t sub_1C20FF92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF940, (uint64_t (*)(void))sub_1C20FF984);
}

unint64_t sub_1C20FF940()
{
  unint64_t result;

  result = qword_1EF75DE50;
  if (!qword_1EF75DE50)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorSet, &type metadata for Google_Protobuf_FileDescriptorSet);
    atomic_store(result, (unint64_t *)&qword_1EF75DE50);
  }
  return result;
}

unint64_t sub_1C20FF984()
{
  unint64_t result;

  result = qword_1EF75DE58;
  if (!qword_1EF75DE58)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorSet, &type metadata for Google_Protobuf_FileDescriptorSet);
    atomic_store(result, (unint64_t *)&qword_1EF75DE58);
  }
  return result;
}

unint64_t sub_1C20FF9CC()
{
  unint64_t result;

  result = qword_1EF75DE60;
  if (!qword_1EF75DE60)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorSet, &type metadata for Google_Protobuf_FileDescriptorSet);
    atomic_store(result, (unint64_t *)&qword_1EF75DE60);
  }
  return result;
}

unint64_t sub_1C20FFA10(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FFA34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FFA34()
{
  unint64_t result;

  result = qword_1EF75DE68;
  if (!qword_1EF75DE68)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorProto, &type metadata for Google_Protobuf_FileDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE68);
  }
  return result;
}

uint64_t sub_1C20FFA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FE420, (uint64_t (*)(void))sub_1C20FFA8C);
}

unint64_t sub_1C20FFA8C()
{
  unint64_t result;

  result = qword_1EF75DE70;
  if (!qword_1EF75DE70)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorProto, &type metadata for Google_Protobuf_FileDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE70);
  }
  return result;
}

unint64_t sub_1C20FFAD4()
{
  unint64_t result;

  result = qword_1EF75DE78;
  if (!qword_1EF75DE78)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileDescriptorProto, &type metadata for Google_Protobuf_FileDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE78);
  }
  return result;
}

unint64_t sub_1C20FFB18(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FFB3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FFB3C()
{
  unint64_t result;

  result = qword_1EF75DE80;
  if (!qword_1EF75DE80)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto, &type metadata for Google_Protobuf_DescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE80);
  }
  return result;
}

uint64_t sub_1C20FFB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FFB94, (uint64_t (*)(void))sub_1C20FFBD8);
}

unint64_t sub_1C20FFB94()
{
  unint64_t result;

  result = qword_1EF75DE88;
  if (!qword_1EF75DE88)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto, &type metadata for Google_Protobuf_DescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE88);
  }
  return result;
}

unint64_t sub_1C20FFBD8()
{
  unint64_t result;

  result = qword_1EF75DE90;
  if (!qword_1EF75DE90)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto, &type metadata for Google_Protobuf_DescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE90);
  }
  return result;
}

unint64_t sub_1C20FFC20()
{
  unint64_t result;

  result = qword_1EF75DE98;
  if (!qword_1EF75DE98)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto, &type metadata for Google_Protobuf_DescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DE98);
  }
  return result;
}

unint64_t sub_1C20FFC64(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FFC88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FFC88()
{
  unint64_t result;

  result = qword_1EF75DEA0;
  if (!qword_1EF75DEA0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ExtensionRange, &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DEA0);
  }
  return result;
}

uint64_t sub_1C20FFCCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FFCE0, (uint64_t (*)(void))sub_1C20FFD24);
}

unint64_t sub_1C20FFCE0()
{
  unint64_t result;

  result = qword_1EF75DEA8;
  if (!qword_1EF75DEA8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ExtensionRange, &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DEA8);
  }
  return result;
}

unint64_t sub_1C20FFD24()
{
  unint64_t result;

  result = qword_1EF75DEB0;
  if (!qword_1EF75DEB0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ExtensionRange, &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DEB0);
  }
  return result;
}

unint64_t sub_1C20FFD6C()
{
  unint64_t result;

  result = qword_1EF75DEB8;
  if (!qword_1EF75DEB8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ExtensionRange, &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DEB8);
  }
  return result;
}

unint64_t sub_1C20FFDB0(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FFDD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FFDD4()
{
  unint64_t result;

  result = qword_1EF75DEC0;
  if (!qword_1EF75DEC0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ReservedRange, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DEC0);
  }
  return result;
}

uint64_t sub_1C20FFE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FFE2C, (uint64_t (*)(void))sub_1C20FFE70);
}

unint64_t sub_1C20FFE2C()
{
  unint64_t result;

  result = qword_1EF75DEC8;
  if (!qword_1EF75DEC8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ReservedRange, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DEC8);
  }
  return result;
}

unint64_t sub_1C20FFE70()
{
  unint64_t result;

  result = qword_1EF75DED0;
  if (!qword_1EF75DED0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ReservedRange, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DED0);
  }
  return result;
}

unint64_t sub_1C20FFEB8()
{
  unint64_t result;

  result = qword_1EF75DED8;
  if (!qword_1EF75DED8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_DescriptorProto.ReservedRange, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DED8);
  }
  return result;
}

unint64_t sub_1C20FFEFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C20FFF20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C20FFF20()
{
  unint64_t result;

  result = qword_1EF75DEE0;
  if (!qword_1EF75DEE0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ExtensionRangeOptions, &type metadata for Google_Protobuf_ExtensionRangeOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DEE0);
  }
  return result;
}

uint64_t sub_1C20FFF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FE46C, (uint64_t (*)(void))sub_1C20FFF78);
}

unint64_t sub_1C20FFF78()
{
  unint64_t result;

  result = qword_1EF75DEE8;
  if (!qword_1EF75DEE8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ExtensionRangeOptions, &type metadata for Google_Protobuf_ExtensionRangeOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DEE8);
  }
  return result;
}

unint64_t sub_1C20FFFC0()
{
  unint64_t result;

  result = qword_1EF75DEF0;
  if (!qword_1EF75DEF0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ExtensionRangeOptions, &type metadata for Google_Protobuf_ExtensionRangeOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DEF0);
  }
  return result;
}

unint64_t sub_1C2100004(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100028();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100028()
{
  unint64_t result;

  result = qword_1EF75DEF8;
  if (!qword_1EF75DEF8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto, &type metadata for Google_Protobuf_FieldDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DEF8);
  }
  return result;
}

uint64_t sub_1C210006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C2100080, (uint64_t (*)(void))sub_1C21000C4);
}

unint64_t sub_1C2100080()
{
  unint64_t result;

  result = qword_1EF75DF00;
  if (!qword_1EF75DF00)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto, &type metadata for Google_Protobuf_FieldDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF00);
  }
  return result;
}

unint64_t sub_1C21000C4()
{
  unint64_t result;

  result = qword_1EF75DF08;
  if (!qword_1EF75DF08)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto, &type metadata for Google_Protobuf_FieldDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF08);
  }
  return result;
}

unint64_t sub_1C210010C()
{
  unint64_t result;

  result = qword_1EF75DF10;
  if (!qword_1EF75DF10)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto, &type metadata for Google_Protobuf_FieldDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF10);
  }
  return result;
}

unint64_t sub_1C2100150(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100174();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100174()
{
  unint64_t result;

  result = qword_1EF75DF18;
  if (!qword_1EF75DF18)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofDescriptorProto, &type metadata for Google_Protobuf_OneofDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF18);
  }
  return result;
}

uint64_t sub_1C21001B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C21001CC, (uint64_t (*)(void))sub_1C2100210);
}

unint64_t sub_1C21001CC()
{
  unint64_t result;

  result = qword_1EF75DF20;
  if (!qword_1EF75DF20)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofDescriptorProto, &type metadata for Google_Protobuf_OneofDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF20);
  }
  return result;
}

unint64_t sub_1C2100210()
{
  unint64_t result;

  result = qword_1EF75DF28;
  if (!qword_1EF75DF28)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofDescriptorProto, &type metadata for Google_Protobuf_OneofDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF28);
  }
  return result;
}

unint64_t sub_1C2100258()
{
  unint64_t result;

  result = qword_1EF75DF30;
  if (!qword_1EF75DF30)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofDescriptorProto, &type metadata for Google_Protobuf_OneofDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF30);
  }
  return result;
}

unint64_t sub_1C210029C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C21002C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C21002C0()
{
  unint64_t result;

  result = qword_1EF75DF38;
  if (!qword_1EF75DF38)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto, &type metadata for Google_Protobuf_EnumDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF38);
  }
  return result;
}

uint64_t sub_1C2100304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C2100318, (uint64_t (*)(void))sub_1C210035C);
}

unint64_t sub_1C2100318()
{
  unint64_t result;

  result = qword_1EF75DF40;
  if (!qword_1EF75DF40)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto, &type metadata for Google_Protobuf_EnumDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF40);
  }
  return result;
}

unint64_t sub_1C210035C()
{
  unint64_t result;

  result = qword_1EF75DF48;
  if (!qword_1EF75DF48)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto, &type metadata for Google_Protobuf_EnumDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF48);
  }
  return result;
}

unint64_t sub_1C21003A4()
{
  unint64_t result;

  result = qword_1EF75DF50;
  if (!qword_1EF75DF50)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto, &type metadata for Google_Protobuf_EnumDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF50);
  }
  return result;
}

unint64_t sub_1C21003E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C210040C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C210040C()
{
  unint64_t result;

  result = qword_1EF75DF58;
  if (!qword_1EF75DF58)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DF58);
  }
  return result;
}

uint64_t sub_1C2100450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C2100464, (uint64_t (*)(void))sub_1C21004A8);
}

unint64_t sub_1C2100464()
{
  unint64_t result;

  result = qword_1EF75DF60;
  if (!qword_1EF75DF60)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DF60);
  }
  return result;
}

unint64_t sub_1C21004A8()
{
  unint64_t result;

  result = qword_1EF75DF68;
  if (!qword_1EF75DF68)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DF68);
  }
  return result;
}

unint64_t sub_1C21004F0()
{
  unint64_t result;

  result = qword_1EF75DF70;
  if (!qword_1EF75DF70)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange);
    atomic_store(result, (unint64_t *)&qword_1EF75DF70);
  }
  return result;
}

unint64_t sub_1C2100534(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100558()
{
  unint64_t result;

  result = qword_1EF75DF78;
  if (!qword_1EF75DF78)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueDescriptorProto, &type metadata for Google_Protobuf_EnumValueDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF78);
  }
  return result;
}

uint64_t sub_1C210059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C21005B0, (uint64_t (*)(void))sub_1C21005F4);
}

unint64_t sub_1C21005B0()
{
  unint64_t result;

  result = qword_1EF75DF80;
  if (!qword_1EF75DF80)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueDescriptorProto, &type metadata for Google_Protobuf_EnumValueDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF80);
  }
  return result;
}

unint64_t sub_1C21005F4()
{
  unint64_t result;

  result = qword_1EF75DF88;
  if (!qword_1EF75DF88)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueDescriptorProto, &type metadata for Google_Protobuf_EnumValueDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF88);
  }
  return result;
}

unint64_t sub_1C210063C()
{
  unint64_t result;

  result = qword_1EF75DF90;
  if (!qword_1EF75DF90)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueDescriptorProto, &type metadata for Google_Protobuf_EnumValueDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF90);
  }
  return result;
}

unint64_t sub_1C2100680(uint64_t a1)
{
  unint64_t result;

  result = sub_1C21006A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C21006A4()
{
  unint64_t result;

  result = qword_1EF75DF98;
  if (!qword_1EF75DF98)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceDescriptorProto, &type metadata for Google_Protobuf_ServiceDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DF98);
  }
  return result;
}

uint64_t sub_1C21006E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C21006FC, (uint64_t (*)(void))sub_1C2100740);
}

unint64_t sub_1C21006FC()
{
  unint64_t result;

  result = qword_1EF75DFA0;
  if (!qword_1EF75DFA0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceDescriptorProto, &type metadata for Google_Protobuf_ServiceDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFA0);
  }
  return result;
}

unint64_t sub_1C2100740()
{
  unint64_t result;

  result = qword_1EF75DFA8;
  if (!qword_1EF75DFA8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceDescriptorProto, &type metadata for Google_Protobuf_ServiceDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFA8);
  }
  return result;
}

unint64_t sub_1C2100788()
{
  unint64_t result;

  result = qword_1EF75DFB0;
  if (!qword_1EF75DFB0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceDescriptorProto, &type metadata for Google_Protobuf_ServiceDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFB0);
  }
  return result;
}

unint64_t sub_1C21007CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C21007F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C21007F0()
{
  unint64_t result;

  result = qword_1EF75DFB8;
  if (!qword_1EF75DFB8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodDescriptorProto, &type metadata for Google_Protobuf_MethodDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFB8);
  }
  return result;
}

uint64_t sub_1C2100834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C2100848, (uint64_t (*)(void))sub_1C210088C);
}

unint64_t sub_1C2100848()
{
  unint64_t result;

  result = qword_1EF75DFC0;
  if (!qword_1EF75DFC0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodDescriptorProto, &type metadata for Google_Protobuf_MethodDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFC0);
  }
  return result;
}

unint64_t sub_1C210088C()
{
  unint64_t result;

  result = qword_1EF75DFC8;
  if (!qword_1EF75DFC8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodDescriptorProto, &type metadata for Google_Protobuf_MethodDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFC8);
  }
  return result;
}

unint64_t sub_1C21008D4()
{
  unint64_t result;

  result = qword_1EF75DFD0;
  if (!qword_1EF75DFD0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodDescriptorProto, &type metadata for Google_Protobuf_MethodDescriptorProto);
    atomic_store(result, (unint64_t *)&qword_1EF75DFD0);
  }
  return result;
}

unint64_t sub_1C2100918(uint64_t a1)
{
  unint64_t result;

  result = sub_1C210093C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C210093C()
{
  unint64_t result;

  result = qword_1EF75DFD8;
  if (!qword_1EF75DFD8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions, &type metadata for Google_Protobuf_FileOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DFD8);
  }
  return result;
}

uint64_t sub_1C2100980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF448, (uint64_t (*)(void))sub_1C2100994);
}

unint64_t sub_1C2100994()
{
  unint64_t result;

  result = qword_1EF75DFE0;
  if (!qword_1EF75DFE0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions, &type metadata for Google_Protobuf_FileOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DFE0);
  }
  return result;
}

unint64_t sub_1C21009DC()
{
  unint64_t result;

  result = qword_1EF75DFE8;
  if (!qword_1EF75DFE8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions, &type metadata for Google_Protobuf_FileOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DFE8);
  }
  return result;
}

unint64_t sub_1C2100A20(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100A44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100A44()
{
  unint64_t result;

  result = qword_1EF75DFF0;
  if (!qword_1EF75DFF0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MessageOptions, &type metadata for Google_Protobuf_MessageOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DFF0);
  }
  return result;
}

uint64_t sub_1C2100A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FEC68, (uint64_t (*)(void))sub_1C2100A9C);
}

unint64_t sub_1C2100A9C()
{
  unint64_t result;

  result = qword_1EF75DFF8;
  if (!qword_1EF75DFF8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MessageOptions, &type metadata for Google_Protobuf_MessageOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75DFF8);
  }
  return result;
}

unint64_t sub_1C2100AE4()
{
  unint64_t result;

  result = qword_1EF75E000;
  if (!qword_1EF75E000)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MessageOptions, &type metadata for Google_Protobuf_MessageOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E000);
  }
  return result;
}

unint64_t sub_1C2100B28(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100B4C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100B4C()
{
  unint64_t result;

  result = qword_1EF75E008;
  if (!qword_1EF75E008)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions, &type metadata for Google_Protobuf_FieldOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E008);
  }
  return result;
}

uint64_t sub_1C2100B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FECAC, (uint64_t (*)(void))sub_1C2100BA4);
}

unint64_t sub_1C2100BA4()
{
  unint64_t result;

  result = qword_1EF75E010;
  if (!qword_1EF75E010)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions, &type metadata for Google_Protobuf_FieldOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E010);
  }
  return result;
}

unint64_t sub_1C2100BEC()
{
  unint64_t result;

  result = qword_1EF75E018;
  if (!qword_1EF75E018)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldOptions, &type metadata for Google_Protobuf_FieldOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E018);
  }
  return result;
}

unint64_t sub_1C2100C30(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100C54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100C54()
{
  unint64_t result;

  result = qword_1EF75E020;
  if (!qword_1EF75E020)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofOptions, &type metadata for Google_Protobuf_OneofOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E020);
  }
  return result;
}

uint64_t sub_1C2100C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FED78, (uint64_t (*)(void))sub_1C2100CAC);
}

unint64_t sub_1C2100CAC()
{
  unint64_t result;

  result = qword_1EF75E028;
  if (!qword_1EF75E028)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofOptions, &type metadata for Google_Protobuf_OneofOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E028);
  }
  return result;
}

unint64_t sub_1C2100CF4()
{
  unint64_t result;

  result = qword_1EF75E030;
  if (!qword_1EF75E030)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_OneofOptions, &type metadata for Google_Protobuf_OneofOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E030);
  }
  return result;
}

unint64_t sub_1C2100D38(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100D5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100D5C()
{
  unint64_t result;

  result = qword_1EF75E038;
  if (!qword_1EF75E038)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumOptions, &type metadata for Google_Protobuf_EnumOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E038);
  }
  return result;
}

uint64_t sub_1C2100DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FEDBC, (uint64_t (*)(void))sub_1C2100DB4);
}

unint64_t sub_1C2100DB4()
{
  unint64_t result;

  result = qword_1EF75E040;
  if (!qword_1EF75E040)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumOptions, &type metadata for Google_Protobuf_EnumOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E040);
  }
  return result;
}

unint64_t sub_1C2100DFC()
{
  unint64_t result;

  result = qword_1EF75E048;
  if (!qword_1EF75E048)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumOptions, &type metadata for Google_Protobuf_EnumOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E048);
  }
  return result;
}

unint64_t sub_1C2100E40(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100E64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100E64()
{
  unint64_t result;

  result = qword_1EF75E050;
  if (!qword_1EF75E050)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueOptions, &type metadata for Google_Protobuf_EnumValueOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E050);
  }
  return result;
}

uint64_t sub_1C2100EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FEF30, (uint64_t (*)(void))sub_1C2100EBC);
}

unint64_t sub_1C2100EBC()
{
  unint64_t result;

  result = qword_1EF75E058;
  if (!qword_1EF75E058)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueOptions, &type metadata for Google_Protobuf_EnumValueOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E058);
  }
  return result;
}

unint64_t sub_1C2100F04()
{
  unint64_t result;

  result = qword_1EF75E060;
  if (!qword_1EF75E060)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_EnumValueOptions, &type metadata for Google_Protobuf_EnumValueOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E060);
  }
  return result;
}

unint64_t sub_1C2100F48(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2100F6C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2100F6C()
{
  unint64_t result;

  result = qword_1EF75E068;
  if (!qword_1EF75E068)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceOptions, &type metadata for Google_Protobuf_ServiceOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E068);
  }
  return result;
}

uint64_t sub_1C2100FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FEF74, (uint64_t (*)(void))sub_1C2100FC4);
}

unint64_t sub_1C2100FC4()
{
  unint64_t result;

  result = qword_1EF75E070;
  if (!qword_1EF75E070)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceOptions, &type metadata for Google_Protobuf_ServiceOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E070);
  }
  return result;
}

unint64_t sub_1C210100C()
{
  unint64_t result;

  result = qword_1EF75E078;
  if (!qword_1EF75E078)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_ServiceOptions, &type metadata for Google_Protobuf_ServiceOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E078);
  }
  return result;
}

unint64_t sub_1C2101050(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2101074();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2101074()
{
  unint64_t result;

  result = qword_1EF75E080;
  if (!qword_1EF75E080)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions, &type metadata for Google_Protobuf_MethodOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E080);
  }
  return result;
}

uint64_t sub_1C21010B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FEFB8, (uint64_t (*)(void))sub_1C21010CC);
}

unint64_t sub_1C21010CC()
{
  unint64_t result;

  result = qword_1EF75E088;
  if (!qword_1EF75E088)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions, &type metadata for Google_Protobuf_MethodOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E088);
  }
  return result;
}

unint64_t sub_1C2101114()
{
  unint64_t result;

  result = qword_1EF75E090;
  if (!qword_1EF75E090)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_MethodOptions, &type metadata for Google_Protobuf_MethodOptions);
    atomic_store(result, (unint64_t *)&qword_1EF75E090);
  }
  return result;
}

unint64_t sub_1C2101158(uint64_t a1)
{
  unint64_t result;

  result = sub_1C210117C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C210117C()
{
  unint64_t result;

  result = qword_1EF75E098;
  if (!qword_1EF75E098)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption, &type metadata for Google_Protobuf_UninterpretedOption);
    atomic_store(result, (unint64_t *)&qword_1EF75E098);
  }
  return result;
}

uint64_t sub_1C21011C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FE4B0, (uint64_t (*)(void))sub_1C21011D4);
}

unint64_t sub_1C21011D4()
{
  unint64_t result;

  result = qword_1EF75E0A0;
  if (!qword_1EF75E0A0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption, &type metadata for Google_Protobuf_UninterpretedOption);
    atomic_store(result, (unint64_t *)&qword_1EF75E0A0);
  }
  return result;
}

unint64_t sub_1C210121C()
{
  unint64_t result;

  result = qword_1EF75E0A8;
  if (!qword_1EF75E0A8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption, &type metadata for Google_Protobuf_UninterpretedOption);
    atomic_store(result, (unint64_t *)&qword_1EF75E0A8);
  }
  return result;
}

unint64_t sub_1C2101260(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2101284();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2101284()
{
  unint64_t result;

  result = qword_1EF75E0B0;
  if (!qword_1EF75E0B0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption.NamePart, &type metadata for Google_Protobuf_UninterpretedOption.NamePart);
    atomic_store(result, (unint64_t *)&qword_1EF75E0B0);
  }
  return result;
}

uint64_t sub_1C21012C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF040, (uint64_t (*)(void))sub_1C21012DC);
}

unint64_t sub_1C21012DC()
{
  unint64_t result;

  result = qword_1EF75E0B8;
  if (!qword_1EF75E0B8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption.NamePart, &type metadata for Google_Protobuf_UninterpretedOption.NamePart);
    atomic_store(result, (unint64_t *)&qword_1EF75E0B8);
  }
  return result;
}

unint64_t sub_1C2101324()
{
  unint64_t result;

  result = qword_1EF75E0C0;
  if (!qword_1EF75E0C0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_UninterpretedOption.NamePart, &type metadata for Google_Protobuf_UninterpretedOption.NamePart);
    atomic_store(result, (unint64_t *)&qword_1EF75E0C0);
  }
  return result;
}

unint64_t sub_1C2101368(uint64_t a1)
{
  unint64_t result;

  result = sub_1C210138C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C210138C()
{
  unint64_t result;

  result = qword_1EF75E0C8;
  if (!qword_1EF75E0C8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo, &type metadata for Google_Protobuf_SourceCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E0C8);
  }
  return result;
}

uint64_t sub_1C21013D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C21013E4, (uint64_t (*)(void))sub_1C2101428);
}

unint64_t sub_1C21013E4()
{
  unint64_t result;

  result = qword_1EF75E0D0;
  if (!qword_1EF75E0D0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo, &type metadata for Google_Protobuf_SourceCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E0D0);
  }
  return result;
}

unint64_t sub_1C2101428()
{
  unint64_t result;

  result = qword_1EF75E0D8;
  if (!qword_1EF75E0D8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo, &type metadata for Google_Protobuf_SourceCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E0D8);
  }
  return result;
}

unint64_t sub_1C2101470()
{
  unint64_t result;

  result = qword_1EF75E0E0;
  if (!qword_1EF75E0E0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo, &type metadata for Google_Protobuf_SourceCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E0E0);
  }
  return result;
}

unint64_t sub_1C21014B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C21014D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C21014D8()
{
  unint64_t result;

  result = qword_1EF75E0E8;
  if (!qword_1EF75E0E8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo.Location, &type metadata for Google_Protobuf_SourceCodeInfo.Location);
    atomic_store(result, (unint64_t *)&qword_1EF75E0E8);
  }
  return result;
}

uint64_t sub_1C210151C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF084, (uint64_t (*)(void))sub_1C2101530);
}

unint64_t sub_1C2101530()
{
  unint64_t result;

  result = qword_1EF75E0F0;
  if (!qword_1EF75E0F0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo.Location, &type metadata for Google_Protobuf_SourceCodeInfo.Location);
    atomic_store(result, (unint64_t *)&qword_1EF75E0F0);
  }
  return result;
}

unint64_t sub_1C2101578()
{
  unint64_t result;

  result = qword_1EF75E0F8;
  if (!qword_1EF75E0F8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceCodeInfo.Location, &type metadata for Google_Protobuf_SourceCodeInfo.Location);
    atomic_store(result, (unint64_t *)&qword_1EF75E0F8);
  }
  return result;
}

unint64_t sub_1C21015BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C21015E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C21015E0()
{
  unint64_t result;

  result = qword_1EF75E100;
  if (!qword_1EF75E100)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo, &type metadata for Google_Protobuf_GeneratedCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E100);
  }
  return result;
}

uint64_t sub_1C2101624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C2101638, (uint64_t (*)(void))sub_1C210167C);
}

unint64_t sub_1C2101638()
{
  unint64_t result;

  result = qword_1EF75E108;
  if (!qword_1EF75E108)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo, &type metadata for Google_Protobuf_GeneratedCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E108);
  }
  return result;
}

unint64_t sub_1C210167C()
{
  unint64_t result;

  result = qword_1EF75E110;
  if (!qword_1EF75E110)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo, &type metadata for Google_Protobuf_GeneratedCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E110);
  }
  return result;
}

unint64_t sub_1C21016C4()
{
  unint64_t result;

  result = qword_1EF75E118;
  if (!qword_1EF75E118)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo, &type metadata for Google_Protobuf_GeneratedCodeInfo);
    atomic_store(result, (unint64_t *)&qword_1EF75E118);
  }
  return result;
}

unint64_t sub_1C2101708(uint64_t a1)
{
  unint64_t result;

  result = sub_1C210172C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C210172C()
{
  unint64_t result;

  result = qword_1EF75E120;
  if (!qword_1EF75E120)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo.Annotation, &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
    atomic_store(result, (unint64_t *)&qword_1EF75E120);
  }
  return result;
}

uint64_t sub_1C2101770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20C406C(a1, a2, a3, (uint64_t (*)(void))sub_1C20FF0C8, (uint64_t (*)(void))sub_1C2101784);
}

unint64_t sub_1C2101784()
{
  unint64_t result;

  result = qword_1EF75E128;
  if (!qword_1EF75E128)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo.Annotation, &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
    atomic_store(result, (unint64_t *)&qword_1EF75E128);
  }
  return result;
}

unint64_t sub_1C21017CC()
{
  unint64_t result;

  result = qword_1EF75E130;
  if (!qword_1EF75E130)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_GeneratedCodeInfo.Annotation, &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
    atomic_store(result, (unint64_t *)&qword_1EF75E130);
  }
  return result;
}

uint64_t sub_1C2101810@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C2101824(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6E74(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C210184C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D8130(a1, a2);
}

uint64_t sub_1C2101868(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D0188(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C2101894(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D0518(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C21018C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D08A8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C21018EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D0C38(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C2101918(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6140(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C2101944(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D64D0(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C20E1318);
}

uint64_t sub_1C210196C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C21019D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C21019E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6E74(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C2101A10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D72C4(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C2101A38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t keypath_get_3Tm_0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2101AD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D0188(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t keypath_get_5Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2101B44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D0518(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t keypath_get_7Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2101BB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D08A8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t keypath_get_9Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2101C2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D0C38(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C20E2FA4);
}

uint64_t sub_1C2101C5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2101CA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2101CF4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_DWORD *)(v3 + 16);
  if (*(_BYTE *)(v3 + 20))
    v5 = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C2101D48@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_DWORD *)(v3 + 24);
  if (*(_BYTE *)(v3 + 28))
    v5 = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C2101D9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D5450(a1, a2);
}

uint64_t sub_1C2101DB0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D54C8(a1, a2, a3, a4, Google_Protobuf_DescriptorProto.ExtensionRange.options.setter);
}

uint64_t sub_1C2101DCC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2;

  v2 = *(_DWORD *)(result + 16);
  if (*(_BYTE *)(result + 20))
    v2 = 0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1C2101DE4(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 16) = *result;
  *(_BYTE *)(a2 + 20) = 0;
  return result;
}

uint64_t sub_1C2101DF4@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2;

  v2 = *(_DWORD *)(result + 24);
  if (*(_BYTE *)(result + 28))
    v2 = 0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1C2101E0C(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 24) = *result;
  *(_BYTE *)(a2 + 28) = 0;
  return result;
}

uint64_t sub_1C2101E1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C2101E30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6E74(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

uint64_t sub_1C2101E5C(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D69D4(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C20E5C04);
}

uint64_t sub_1C2101E84@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 37);
  if (v5 == 3)
    LOBYTE(v5) = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C2101ED4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 38);
  if (v5 == 18)
    LOBYTE(v5) = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C2101F3C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_DWORD *)(v3 + 88);
  if (*(_BYTE *)(v3 + 92))
    v5 = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C2101FA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C2101FB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return Google_Protobuf_OneofDescriptorProto.name.setter(v1, v2);
}

uint64_t sub_1C2101FF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D5450(a1, a2);
}

uint64_t sub_1C2102004(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D54C8(a1, a2, a3, a4, Google_Protobuf_OneofDescriptorProto.options.setter);
}

uint64_t sub_1C2102020@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C2102034(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6E74(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t sub_1C2102060(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D72C4(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t sub_1C210208C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D8B54(a1, a2, a3, a4, Google_Protobuf_EnumDescriptorProto.options.setter);
}

uint64_t keypath_get_11Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C21020F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6140(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t keypath_get_13Tm@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102168(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D64D0(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C20E8074);
}

uint64_t sub_1C2102190@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C21021A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6E74(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

uint64_t keypath_get_55Tm@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v5 = *(_DWORD *)(v3 + 32);
  if (*(_BYTE *)(v3 + 36))
    v5 = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C2102220(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D69D4(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C20E94F8);
}

uint64_t sub_1C2102248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C20D769C(a1, a2);
}

uint64_t sub_1C210225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D7724(a1, a2, a3, a4, Google_Protobuf_EnumValueDescriptorProto.options.setter);
}

uint64_t sub_1C2102278@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C210228C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D6E74(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

uint64_t sub_1C21022B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D72C4(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C20EA498);
}

uint64_t sub_1C21022E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C20D769C(a1, a2);
}

uint64_t sub_1C21022F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D7724(a1, a2, a3, a4, Google_Protobuf_ServiceDescriptorProto.options.setter);
}

uint64_t sub_1C2102310@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D7C88(a1, a2);
}

uint64_t sub_1C2102328@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1C20D8130(a1, a2);
}

uint64_t sub_1C210234C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C20D8B54(a1, a2, a3, a4, Google_Protobuf_MethodDescriptorProto.options.setter);
}

uint64_t sub_1C2102368@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 98) & 1;
  return result;
}

uint64_t sub_1C21023B4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 99) & 1;
  return result;
}

uint64_t sub_1C2102410@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 48) & 1;
  return result;
}

uint64_t sub_1C210245C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 49) & 1;
  return result;
}

uint64_t sub_1C21024A8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 50) & 1;
  return result;
}

uint64_t sub_1C21024F4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  v5 = *(unsigned __int8 *)(v3 + 51);
  if (v5 == 3)
    LOBYTE(v5) = 0;
  *a2 = v5;
  return result;
}

uint64_t sub_1C210254C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 72) & 1;
  return result;
}

uint64_t sub_1C2102598@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 73) & 1;
  return result;
}

uint64_t sub_1C21025E4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 74) & 1;
  return result;
}

uint64_t sub_1C2102630@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 75) & 1;
  return result;
}

uint64_t sub_1C210267C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 76) & 1;
  return result;
}

uint64_t sub_1C21026C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 77) & 1;
  return result;
}

uint64_t sub_1C210274C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 192);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102798@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32) & 1;
  return result;
}

_BYTE *sub_1C21027A8(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C21027B4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 33) & 1;
  return result;
}

_BYTE *sub_1C21027C4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C21027D0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 34) & 1;
  return result;
}

_BYTE *sub_1C21027E0(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 34) = *result;
  return result;
}

uint64_t sub_1C21027EC@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 35) & 1;
  return result;
}

_BYTE *sub_1C21027FC(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 35) = *result;
  return result;
}

uint64_t sub_1C2102808@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  int v2;

  v2 = *(unsigned __int8 *)(result + 32);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *a2 = v2;
  return result;
}

_BYTE *sub_1C210281C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C2102828@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 33) & 1;
  return result;
}

_BYTE *sub_1C2102838(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C2102844@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  int v2;

  v2 = *(unsigned __int8 *)(result + 34);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *a2 = v2;
  return result;
}

_BYTE *sub_1C2102858(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 34) = *result;
  return result;
}

uint64_t sub_1C2102864@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 35) & 1;
  return result;
}

_BYTE *sub_1C2102874(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 35) = *result;
  return result;
}

uint64_t sub_1C2102880@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 36) & 1;
  return result;
}

_BYTE *sub_1C2102890(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 36) = *result;
  return result;
}

uint64_t sub_1C210289C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 37) & 1;
  return result;
}

_BYTE *sub_1C21028AC(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 37) = *result;
  return result;
}

uint64_t sub_1C21028B8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32) & 1;
  return result;
}

_BYTE *sub_1C21028C8(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C21028D4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 33) & 1;
  return result;
}

_BYTE *sub_1C21028E4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C21028F0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 32) & 1;
  return result;
}

_BYTE *sub_1C2102900(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C210290C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  int v2;

  v2 = *(unsigned __int8 *)(result + 33);
  if (v2 == 3)
    LOBYTE(v2) = 0;
  *a2 = v2;
  return result;
}

_BYTE *sub_1C2102920(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C210292C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 24);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102958(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1C2102998@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 40);
  if (*(_BYTE *)(result + 48))
    v2 = 0;
  *a2 = v2;
  return result;
}

_QWORD *sub_1C21029B0(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 40) = *result;
  *(_BYTE *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_1C21029C0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 56);
  if (*(_BYTE *)(result + 64))
    v2 = 0;
  *a2 = v2;
  return result;
}

_QWORD *sub_1C21029D8(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 56) = *result;
  *(_BYTE *)(a2 + 64) = 0;
  return result;
}

uint64_t sub_1C21029E8@<X0>(uint64_t result@<X0>, double *a2@<X8>)
{
  double v2;

  v2 = *(double *)(result + 72);
  if (*(_BYTE *)(result + 80))
    v2 = 0.0;
  *a2 = v2;
  return result;
}

_QWORD *sub_1C2102A04(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 72) = *result;
  *(_BYTE *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_1C2102A14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 88);
  v2 = *(_QWORD *)(a1 + 96);
  if (v2 >> 60 == 15)
    v4 = 0;
  else
    v4 = *(_QWORD *)(a1 + 88);
  v5 = 0xC000000000000000;
  if (v2 >> 60 != 15)
    v5 = *(_QWORD *)(a1 + 96);
  *a2 = v4;
  a2[1] = v5;
  return sub_1C20FE40C(v3, v2);
}

uint64_t sub_1C2102A38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = *(_QWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  sub_1C20A8008(*a1, v4);
  result = sub_1C20AE1C8(v5, v6);
  *(_QWORD *)(a2 + 88) = v3;
  *(_QWORD *)(a2 + 96) = v4;
  return result;
}

uint64_t sub_1C2102A88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 112);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 104);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102AB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 104) = v4;
  *(_QWORD *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_1C2102AF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102B20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C2102B60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 48);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 40);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102B8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1C2102BCC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 64);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 56);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102BF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v4;
  *(_QWORD *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1C2102C38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 24);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2102C64(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1C2102CA4@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2;

  v2 = *(_DWORD *)(result + 40);
  if (*(_BYTE *)(result + 44))
    v2 = 0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1C2102CBC(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 40) = *result;
  *(_BYTE *)(a2 + 44) = 0;
  return result;
}

uint64_t sub_1C2102CCC@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2;

  v2 = *(_DWORD *)(result + 48);
  if (*(_BYTE *)(result + 52))
    v2 = 0;
  *a2 = v2;
  return result;
}

_DWORD *sub_1C2102CE4(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 48) = *result;
  *(_BYTE *)(a2 + 52) = 0;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileDescriptorSet()
{
  return &type metadata for Google_Protobuf_FileDescriptorSet;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileDescriptorProto()
{
  return &type metadata for Google_Protobuf_FileDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DescriptorProto()
{
  return &type metadata for Google_Protobuf_DescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange()
{
  return &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DescriptorProto.ReservedRange()
{
  return &type metadata for Google_Protobuf_DescriptorProto.ReservedRange;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ExtensionRangeOptions()
{
  return &type metadata for Google_Protobuf_ExtensionRangeOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldDescriptorProto()
{
  return &type metadata for Google_Protobuf_FieldDescriptorProto;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FieldDescriptorProto.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FieldDescriptorProto.TypeEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1C2102E98 + 4 * byte_1C2177243[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1C2102ECC + 4 * byte_1C217723E[v4]))();
}

uint64_t sub_1C2102ECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2102ED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2102EDCLL);
  return result;
}

uint64_t sub_1C2102EE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2102EF0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1C2102EF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2102EFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldDescriptorProto.TypeEnum()
{
  return &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldDescriptorProto.Label()
{
  return &type metadata for Google_Protobuf_FieldDescriptorProto.Label;
}

ValueMetadata *type metadata accessor for Google_Protobuf_OneofDescriptorProto()
{
  return &type metadata for Google_Protobuf_OneofDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumDescriptorProto()
{
  return &type metadata for Google_Protobuf_EnumDescriptorProto;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1C20A8008(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1C20A8008(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1C20A8058(v6, v7);
  v8 = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v8;
  v9 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v9;
  return a1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C20A8058(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumDescriptorProto.EnumReservedRange()
{
  return &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumValueDescriptorProto()
{
  return &type metadata for Google_Protobuf_EnumValueDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ServiceDescriptorProto()
{
  return &type metadata for Google_Protobuf_ServiceDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MethodDescriptorProto()
{
  return &type metadata for Google_Protobuf_MethodDescriptorProto;
}

uint64_t destroy for Google_Protobuf_FileOptions(uint64_t a1)
{
  sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t *initializeWithCopy for Google_Protobuf_FileOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for Google_Protobuf_FileOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1C20A8008(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C20A8058(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_FileOptions(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1C20A8058(v4, v5);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FileOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FileOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileOptions()
{
  return &type metadata for Google_Protobuf_FileOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileOptions.OptimizeMode()
{
  return &type metadata for Google_Protobuf_FileOptions.OptimizeMode;
}

uint64_t initializeWithCopy for Google_Protobuf_MessageOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_MessageOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_MessageOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_MessageOptions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 36))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_MessageOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 36) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MessageOptions()
{
  return &type metadata for Google_Protobuf_MessageOptions;
}

uint64_t initializeWithCopy for Google_Protobuf_FieldOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_FieldOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  return a1;
}

__n128 __swift_memcpy38_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 30) = *(_QWORD *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_FieldOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FieldOptions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 38))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FieldOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 38) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 38) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldOptions()
{
  return &type metadata for Google_Protobuf_FieldOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldOptions.CType()
{
  return &type metadata for Google_Protobuf_FieldOptions.CType;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldOptions.JSType()
{
  return &type metadata for Google_Protobuf_FieldOptions.JSType;
}

_QWORD *_s20SiriOntologyProtobuf37Google_Protobuf_ExtensionRangeOptionsVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  v5 = a2[2];
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s20SiriOntologyProtobuf37Google_Protobuf_ExtensionRangeOptionsVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[1];
  v5 = a2[2];
  sub_1C20A8008(v4, v5);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_1C20A8058(v6, v7);
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s20SiriOntologyProtobuf37Google_Protobuf_ExtensionRangeOptionsVwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = a1[1];
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_OneofOptions()
{
  return &type metadata for Google_Protobuf_OneofOptions;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumOptions()
{
  return &type metadata for Google_Protobuf_EnumOptions;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumValueOptions()
{
  return &type metadata for Google_Protobuf_EnumValueOptions;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1C2103B3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ServiceOptions()
{
  return &type metadata for Google_Protobuf_ServiceOptions;
}

uint64_t _s20SiriOntologyProtobuf28Google_Protobuf_FieldOptionsVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1C2103D4C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MethodOptions()
{
  return &type metadata for Google_Protobuf_MethodOptions;
}

uint64_t getEnumTagSinglePayload for AnyUnpackError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s20SiriOntologyProtobuf36Google_Protobuf_FieldDescriptorProtoV5LabelOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2103E7C + 4 * byte_1C217724D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2103EB0 + 4 * byte_1C2177248[v4]))();
}

uint64_t sub_1C2103EB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2103EB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2103EC0);
  return result;
}

uint64_t sub_1C2103ECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2103ED4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2103ED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2103EE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MethodOptions.IdempotencyLevel()
{
  return &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel;
}

uint64_t destroy for Google_Protobuf_UninterpretedOption(_QWORD *a1)
{
  unint64_t v2;

  swift_bridgeObjectRelease();
  sub_1C20A8058(a1[1], a1[2]);
  swift_bridgeObjectRelease();
  v2 = a1[12];
  if (v2 >> 60 != 15)
    sub_1C20A8058(a1[11], v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Google_Protobuf_UninterpretedOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = (_OWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_1C20A8008(v9, v8);
    *(_QWORD *)(a1 + 88) = v9;
    *(_QWORD *)(a1 + 96) = v8;
  }
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_UninterpretedOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = (uint64_t *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) >> 60 != 15)
  {
    if (v12 >> 60 != 15)
    {
      v14 = *v11;
      sub_1C20A8008(*v11, *(_QWORD *)(a2 + 96));
      v15 = *(_QWORD *)(a1 + 88);
      v16 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 88) = v14;
      *(_QWORD *)(a1 + 96) = v12;
      sub_1C20A8058(v15, v16);
      goto LABEL_8;
    }
    sub_1C210416C(a1 + 88);
    goto LABEL_6;
  }
  if (v12 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v11;
    goto LABEL_8;
  }
  v13 = *v11;
  sub_1C20A8008(*v11, *(_QWORD *)(a2 + 96));
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v12;
LABEL_8:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C210416C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_UninterpretedOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = (_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  if (v8 >> 60 != 15)
  {
    v9 = *(_QWORD *)(a2 + 96);
    if (v9 >> 60 != 15)
    {
      v10 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 88) = *v7;
      *(_QWORD *)(a1 + 96) = v9;
      sub_1C20A8058(v10, v8);
      goto LABEL_6;
    }
    sub_1C210416C(a1 + 88);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v7;
LABEL_6:
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_UninterpretedOption(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_UninterpretedOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UninterpretedOption()
{
  return &type metadata for Google_Protobuf_UninterpretedOption;
}

uint64_t destroy for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1)
{
  sub_1C20A8058(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1C20A8008(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_1C20A8008(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C20A8058(v4, v5);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_UninterpretedOption.NamePart(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UninterpretedOption.NamePart()
{
  return &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
}

ValueMetadata *type metadata accessor for Google_Protobuf_SourceCodeInfo()
{
  return &type metadata for Google_Protobuf_SourceCodeInfo;
}

uint64_t destroy for Google_Protobuf_SourceCodeInfo.Location(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Google_Protobuf_SourceCodeInfo.Location(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20A8008(v5, v6);
  a1[3] = v5;
  a1[4] = v6;
  v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  v8 = a2[7];
  v9 = a2[8];
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Google_Protobuf_SourceCodeInfo.Location(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  v5 = a2[4];
  sub_1C20A8008(v4, v5);
  v6 = a1[3];
  v7 = a1[4];
  a1[3] = v4;
  a1[4] = v5;
  sub_1C20A8058(v6, v7);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_SourceCodeInfo.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1C20A8058(v4, v5);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_SourceCodeInfo.Location(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_SourceCodeInfo.Location(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_SourceCodeInfo.Location()
{
  return &type metadata for Google_Protobuf_SourceCodeInfo.Location;
}

uint64_t destroy for Google_Protobuf_FieldMask(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1C20A8058(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *_s20SiriOntologyProtobuf30Google_Protobuf_SourceCodeInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_1C20A8008(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for Google_Protobuf_FieldMask(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[1];
  v4 = a2[2];
  sub_1C20A8008(v5, v4);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_1C20A8058(v6, v7);
  return a1;
}

_QWORD *assignWithTake for Google_Protobuf_FieldMask(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = a1[1];
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FieldMask(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FieldMask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_GeneratedCodeInfo()
{
  return &type metadata for Google_Protobuf_GeneratedCodeInfo;
}

uint64_t destroy for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C20A8058(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C20A8008(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  int v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1C20A8008(v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_1C20A8058(v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v8;
  v9 = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v9;
  return a1;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 45) = *(_QWORD *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C20A8058(v4, v5);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 53))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 53) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 53) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_GeneratedCodeInfo.Annotation()
{
  return &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation;
}

uint64_t sub_1C2104C70()
{
  uint64_t v0;

  sub_1C20A8058(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C2104C9C()
{
  unint64_t result;

  result = qword_1EF75F110;
  if (!qword_1EF75F110)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FileOptions.OptimizeMode, &type metadata for Google_Protobuf_FileOptions.OptimizeMode);
    atomic_store(result, (unint64_t *)&qword_1EF75F110);
  }
  return result;
}

unint64_t sub_1C2104CE0()
{
  unint64_t result;

  result = qword_1EF75F118;
  if (!qword_1EF75F118)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.TypeEnum, &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1EF75F118);
  }
  return result;
}

unint64_t sub_1C2104D24()
{
  unint64_t result;

  result = qword_1EF75F120;
  if (!qword_1EF75F120)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_FieldDescriptorProto.Label, &type metadata for Google_Protobuf_FieldDescriptorProto.Label);
    atomic_store(result, (unint64_t *)&qword_1EF75F120);
  }
  return result;
}

uint64_t sub_1C2104D68()
{
  _QWORD *v0;
  unint64_t v1;

  swift_bridgeObjectRelease();
  sub_1C20A8058(v0[3], v0[4]);
  swift_bridgeObjectRelease();
  v1 = v0[14];
  if (v1 >> 60 != 15)
    sub_1C20A8058(v0[13], v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2104F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Decoder.decodeExtensionFieldsAsMessageSet(values:messageType:)(a1, a2, a3, a4, a5);
}

void sub_1C2104F80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v12;
  unsigned __int8 *i;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *j;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  char *v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  uint64_t (*v32)();
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t (*v35)();
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  BOOL v44;
  unsigned __int8 *v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  char *v51;
  char v52;
  _BYTE *v53;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a3;
  v5 = v3;
  while (1)
  {
    v7 = *(_BYTE *)(v5 + 73);
    v8 = *(unsigned __int8 **)(v5 + 40);
    v9 = *(unsigned __int8 **)(v5 + 48);
    if ((v7 & 1) == 0 && v8 != v9 && *v8 == *(unsigned __int8 *)(v5 + 72))
    {
      *(_QWORD *)(v5 + 40) = v8 + 1;
      sub_1C20B5184();
      return;
    }
    v10 = *(_QWORD *)(v5 + 64);
    if (v10 >= 1 && v8 != v9)
    {
      v12 = *v8;
      if (v12 == 44 || v12 == 59)
      {
        *(_QWORD *)(v5 + 40) = ++v8;
        if (v8 == v9)
          goto LABEL_28;
        while (1)
        {
          v14 = *v8;
          if (v14 > 0x23)
            break;
          if (((1 << v14) & 0x100002600) != 0)
          {
            i = v8 + 1;
            *(_QWORD *)(v5 + 40) = v8 + 1;
          }
          else
          {
            if (v14 != 35)
              break;
            *(_QWORD *)(v5 + 40) = v8 + 1;
            if (v8 + 1 == v9)
              goto LABEL_28;
            v15 = v8[1];
            i = v8 + 2;
            *(_QWORD *)(v5 + 40) = v8 + 2;
            if (v15 != 10 && v15 != 13)
            {
              if (i == v9)
                goto LABEL_28;
              v16 = v8[2];
              for (i = v8 + 3; ; ++i)
              {
                *(_QWORD *)(v5 + 40) = i;
                if (v16 == 10 || v16 == 13)
                  break;
                if (i == v9)
                  goto LABEL_28;
                v17 = *i;
                v16 = v17;
              }
            }
          }
          v8 = i;
          if (i == v9)
            goto LABEL_28;
        }
      }
    }
    if (v8 == v9)
      goto LABEL_28;
    while (1)
    {
      v24 = *v8;
      if (v24 > 0x23)
        break;
      if (((1 << v24) & 0x100002600) != 0)
      {
        j = v8 + 1;
        *(_QWORD *)(v5 + 40) = v8 + 1;
      }
      else
      {
        if (v24 != 35)
          break;
        *(_QWORD *)(v5 + 40) = v8 + 1;
        if (v8 + 1 == v9)
          goto LABEL_28;
        v25 = v8[1];
        j = v8 + 2;
        *(_QWORD *)(v5 + 40) = v8 + 2;
        if (v25 != 10 && v25 != 13)
        {
          if (j == v9)
            goto LABEL_28;
          v26 = v8[2];
          for (j = v8 + 3; ; ++j)
          {
            *(_QWORD *)(v5 + 40) = j;
            if (v26 == 10 || v26 == 13)
              break;
            if (j == v9)
              goto LABEL_28;
            v27 = *j;
            v26 = v27;
          }
        }
      }
      v8 = j;
      if (j == v9)
        goto LABEL_28;
    }
    if (v8 == v9 || (_DWORD)v24 != 91)
    {
LABEL_28:
      if (!*(_QWORD *)(v5 + 80))
        goto LABEL_99;
      v18 = *(_QWORD *)(v5 + 104);
      v55 = *(_QWORD *)(v5 + 80);
      v56 = *(_OWORD *)(v5 + 88);
      v57 = v18;
      v19 = sub_1C20B6E30((uint64_t)&v55);
      if (v4)
        return;
      if ((v20 & 1) == 0)
      {
        v21 = v10 + 1;
        if (!__OFADD__(v10, 1))
        {
          v22 = v19;
          goto LABEL_33;
        }
        __break(1u);
LABEL_93:
        swift_bridgeObjectRelease();
LABEL_94:
        sub_1C20B727C();
        swift_allocError();
        *v53 = 0;
LABEL_95:
        swift_willThrow();
        return;
      }
      if ((v7 & 1) != 0)
        return;
      sub_1C20B727C();
      swift_allocError();
      v52 = 3;
LABEL_90:
      *v51 = v52;
      goto LABEL_95;
    }
    v28 = (char *)(v8 + 1);
    *(_QWORD *)(v5 + 40) = v8 + 1;
    if (v8 + 1 == v9)
      goto LABEL_94;
    if ((*v28 & 0xDFu) - 91 < 0xFFFFFFE6)
      goto LABEL_94;
    *(_QWORD *)(v5 + 40) = v8 + 2;
    if (v8 + 2 == v9)
      goto LABEL_94;
    v29 = 0;
    while (1)
    {
      v30 = v8[v29 + 2];
      v31 = (v30 - 58) > 0xFFFFFFF5 || (v30 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
      if (!v31 && (v30 - 46) >= 2 && v30 != 95)
        break;
      *(_QWORD *)(v5 + 40) = &v8[v29++ + 3];
      if (&v8[v29 + 2] == v9)
        goto LABEL_94;
    }
    if (v30 != 93)
      goto LABEL_94;
    v32 = sub_1C20AD098(v28, v29 + 1);
    if (!v33)
      goto LABEL_94;
    v34 = &v8[v29 + 2];
    if (v34 == v9 || *v34 != 93)
      goto LABEL_93;
    v35 = v32;
    v36 = &v8[v29 + 3];
    *(_QWORD *)(v5 + 40) = v36;
    if (v36 != v9)
    {
      do
      {
        v46 = *v36;
        if (v46 > 0x23)
          break;
        if (((1 << v46) & 0x100002600) != 0)
        {
          v45 = v36 + 1;
          *(_QWORD *)(v5 + 40) = v36 + 1;
        }
        else
        {
          if (v46 != 35)
            break;
          *(_QWORD *)(v5 + 40) = v36 + 1;
          if (v36 + 1 == v9)
            break;
          v47 = v36[1];
          v45 = v36 + 2;
          *(_QWORD *)(v5 + 40) = v36 + 2;
          if (v47 != 10 && v47 != 13)
          {
            if (v45 == v9)
              break;
            v48 = v36[2];
            v45 = v36 + 3;
            *(_QWORD *)(v5 + 40) = v36 + 3;
            if (v48 != 10 && v48 != 13)
            {
              while (v45 != v9)
              {
                v50 = *v45++;
                v49 = v50;
                *(_QWORD *)(v5 + 40) = v45;
                if (v50 == 10 || v49 == 13)
                  goto LABEL_74;
              }
              break;
            }
          }
        }
LABEL_74:
        v36 = v45;
      }
      while (v45 != v9);
    }
    if (!*(_QWORD *)(v5 + 24))
    {
      swift_bridgeObjectRelease();
LABEL_98:
      sub_1C20B727C();
      swift_allocError();
      v52 = 7;
      goto LABEL_90;
    }
    v37 = v33;
    sub_1C20A84A8(v5, (uint64_t)&v55);
    v39 = v57;
    v38 = v58;
    __swift_project_boxed_opaque_existential_1(&v55, v57);
    v40 = *(_QWORD *)(v5 + 112);
    if (!v40)
      goto LABEL_100;
    v22 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v38 + 16))(v40, *(_QWORD *)(v5 + 120), v35, v37, v39, v38);
    v42 = v41;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
    if ((v42 & 1) != 0)
      goto LABEL_98;
    v43 = *(_QWORD *)(v5 + 64);
    v44 = __OFADD__(v43, 1);
    v21 = v43 + 1;
    if (v44)
      break;
LABEL_33:
    *(_QWORD *)(v5 + 64) = v21;
    sub_1C212ED94(a1, a2, v59, v22);
    if (v4)
      return;
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

uint64_t Decoder.decodeExtensionFieldsAsMessageSet(values:messageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t result;
  char v13;

  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
  while (1)
  {
    result = v11(a4, a5);
    if (v5 || (v13 & 1) != 0)
      break;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 464))(a1, a2, a3, result, a4, a5);
  }
  return result;
}

uint64_t dispatch thunk of Decoder.handleConflictingOneOf()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Decoder.decodeSingularFloatField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedFloatField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedDoubleField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedUInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of Decoder.decodeSingularFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of Decoder.decodeSingularFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedBoolField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t dispatch thunk of Decoder.decodeSingularBytesField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedBytesField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 376))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedEnumField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 400))();
}

uint64_t dispatch thunk of Decoder.decodeSingularGroupField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 424))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedGroupField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 432))();
}

uint64_t dispatch thunk of Decoder.decodeMapField<A, B>(fieldType:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 440))();
}

{
  return (*(uint64_t (**)(void))(a7 + 448))();
}

uint64_t dispatch thunk of Decoder.decodeMapField<A, B>(fieldType:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 456))();
}

uint64_t dispatch thunk of Decoder.decodeExtensionField(values:messageType:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 464))();
}

uint64_t dispatch thunk of Decoder.decodeExtensionFieldsAsMessageSet(values:messageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 472))();
}

void sub_1C21058F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2104F80(a1, a2, a3);
}

uint64_t sub_1C2105908()
{
  return sub_1C210591C();
}

uint64_t sub_1C210591C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  result = sub_1C20B3234();
  if ((result & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 72);
    if (v3 < 1 || (result = sub_1C20B301C(44), !v1))
    {
      if (!*(_QWORD *)(v0 + 88))
        goto LABEL_11;
      v4 = *(_QWORD *)(v0 + 112);
      v7 = *(_QWORD *)(v0 + 88);
      v8 = *(_OWORD *)(v0 + 96);
      v9 = v4;
      result = sub_1C20B2A80((uint64_t)&v7);
      if (!v1 && (v5 & 1) == 0)
      {
        if (!__OFADD__(v3, 1))
        {
          *(_QWORD *)(v0 + 72) = v3 + 1;
          sub_1C20AFA84();
          swift_allocError();
          *v6 = xmmword_1C2179800;
          return swift_willThrow();
        }
        __break(1u);
LABEL_11:
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1C21059E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
    MEMORY[0x1C3BB8018](v1, -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DoubleParser()
{
  return objc_opt_self();
}

char *sub_1C2105A38(void *__src, int64_t __len)
{
  uint64_t v2;
  uint64_t v3;
  char *result;
  char *v7;
  double v8;
  char *v9[2];

  v9[1] = *(char **)MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  result = 0;
  if (__len >= 1 && *(_QWORD *)(v2 + 24) - v3 > __len)
  {
    memmove(*(void **)(v2 + 16), __src, __len);
    result = *(char **)(v2 + 16);
    v7 = &result[__len];
    *v7 = 0;
    if (!result)
    {
      __break(1u);
      return result;
    }
    v9[0] = result;
    v8 = strtod(result, v9);
    if (!v9[0])
      return 0;
    if (v7 != v9[0])
      return 0;
    result = *(char **)&v8;
    if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
      return 0;
  }
  return result;
}

unint64_t sub_1C2105B14()
{
  unint64_t result;

  result = qword_1EF75F1F0;
  if (!qword_1EF75F1F0)
  {
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEE460], MEMORY[0x1E0DEE458]);
    atomic_store(result, (unint64_t *)&qword_1EF75F1F0);
  }
  return result;
}

void sub_1C2105B58(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_1C2105B64(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xF000000000000000;
}

void sub_1C2105B74(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xF000000000000000;
}

void sub_1C2105B84(_QWORD *a1@<X8>)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 2;
}

double sub_1C2105B94@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_1C2105BA0@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1C2177160;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  return result;
}

void sub_1C2105BB4(_QWORD *a1@<X8>)
{
  sub_1C2105B64(a1);
}

void sub_1C2105BC8(_QWORD *a1@<X8>)
{
  sub_1C2105B74(a1);
}

uint64_t TextFormatEncodingOptions.printUnknownFields.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TextFormatEncodingOptions.printUnknownFields.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TextFormatEncodingOptions.printUnknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::TextFormatEncodingOptions __swiftcall TextFormatEncodingOptions.init()()
{
  _BYTE *v0;
  SiriOntologyProtobuf::TextFormatEncodingOptions result;

  *v0 = 1;
  return result;
}

uint64_t getEnumTagSinglePayload for TextFormatEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatEncodingOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2105CF4 + 4 * byte_1C2179875[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2105D28 + 4 * asc_1C2179870[v4]))();
}

uint64_t sub_1C2105D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2105D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2105D38);
  return result;
}

uint64_t sub_1C2105D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2105D4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2105D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2105D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextFormatEncodingOptions()
{
  return &type metadata for TextFormatEncodingOptions;
}

void sub_1C2105D74()
{
  qword_1EF75F1F8 = -315576000000;
}

uint64_t sub_1C2105D8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char v14;
  BOOL v15;
  BOOL v16;
  char v17;
  BOOL v18;
  BOOL v19;
  char v20;
  BOOL v21;
  BOOL v22;
  char v23;
  BOOL v24;
  BOOL v25;
  char v26;
  BOOL v27;
  BOOL v28;
  char v29;
  BOOL v30;
  BOOL v31;
  char v32;
  BOOL v33;
  BOOL v34;
  char v35;
  BOOL v36;
  char v37;
  char v38;
  BOOL v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _OWORD *v44;
  uint64_t result;
  char v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;

  swift_bridgeObjectRetain();
  v0 = 0;
  v62 = 0;
  v1 = 0;
  v2 = (char *)MEMORY[0x1E0DEE9D8];
  v61 = 1;
  do
  {
    v5 = sub_1C2175504();
    if (!v6)
      goto LABEL_106;
    v7 = v5;
    v8 = v6;
    if (v5 == 45 && v6 == 0xE100000000000000 || (sub_1C21757C8() & 1) != 0)
    {
      if (v0)
      {
        swift_bridgeObjectRelease();
LABEL_106:
        swift_bridgeObjectRelease();
LABEL_107:
        sub_1C20AFA84();
        swift_allocError();
        *v44 = xmmword_1C21798A0;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1C214E59C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
      v10 = *((_QWORD *)v2 + 2);
      v9 = *((_QWORD *)v2 + 3);
      if (v10 >= v9 >> 1)
        v2 = sub_1C214E59C((char *)(v9 > 1), v10 + 1, 1, v2);
      *((_QWORD *)v2 + 2) = v10 + 1;
      v3 = &v2[16 * v10];
      *((_QWORD *)v3 + 4) = v7;
      *((_QWORD *)v3 + 5) = v8;
    }
    else
    {
      if (v7 == 48 && v8 == 0xE100000000000000)
        goto LABEL_15;
      v14 = sub_1C21757C8();
      v15 = v7 == 49 && v8 == 0xE100000000000000;
      v16 = v15;
      if ((v14 & 1) != 0 || v16)
        goto LABEL_15;
      v17 = sub_1C21757C8();
      v18 = v7 == 50 && v8 == 0xE100000000000000;
      v19 = v18;
      if ((v17 & 1) != 0 || v19)
        goto LABEL_15;
      v20 = sub_1C21757C8();
      v21 = v7 == 51 && v8 == 0xE100000000000000;
      v22 = v21;
      if ((v20 & 1) != 0 || v22)
        goto LABEL_15;
      v23 = sub_1C21757C8();
      v24 = v7 == 52 && v8 == 0xE100000000000000;
      v25 = v24;
      if ((v23 & 1) != 0 || v25)
        goto LABEL_15;
      v26 = sub_1C21757C8();
      v27 = v7 == 53 && v8 == 0xE100000000000000;
      v28 = v27;
      if ((v26 & 1) != 0 || v28)
        goto LABEL_15;
      v29 = sub_1C21757C8();
      v30 = v7 == 54 && v8 == 0xE100000000000000;
      v31 = v30;
      if ((v29 & 1) != 0 || v31)
        goto LABEL_15;
      v32 = sub_1C21757C8();
      v33 = v7 == 55 && v8 == 0xE100000000000000;
      v34 = v33;
      if ((v32 & 1) != 0
        || v34
        || ((v35 = sub_1C21757C8(), v7 == 56) ? (v36 = v8 == 0xE100000000000000) : (v36 = 0),
            !v36 ? (v37 = 0) : (v37 = 1),
            (v35 & 1) != 0
         || (v37 & 1) != 0
         || ((v38 = sub_1C21757C8(), v7 == 57) ? (v39 = v8 == 0xE100000000000000) : (v39 = 0),
             !v39 ? (v40 = 0) : (v40 = 1),
             (v38 & 1) != 0 || (v40 & 1) != 0 || (sub_1C21757C8() & 1) != 0)))
      {
LABEL_15:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v2 = sub_1C214E59C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
        v12 = *((_QWORD *)v2 + 2);
        v11 = *((_QWORD *)v2 + 3);
        if (v12 >= v11 >> 1)
          v2 = sub_1C214E59C((char *)(v11 > 1), v12 + 1, 1, v2);
        *((_QWORD *)v2 + 2) = v12 + 1;
        v13 = &v2[16 * v12];
        *((_QWORD *)v13 + 4) = v7;
        *((_QWORD *)v13 + 5) = v8;
        v4 = __OFADD__(v1++, 1);
        if (v4)
          goto LABEL_109;
      }
      else
      {
        if ((v7 != 46 || v8 != 0xE100000000000000) && (sub_1C21757C8() & 1) == 0)
          goto LABEL_110;
        swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_106;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F200);
        sub_1C2106FFC();
        v41 = sub_1C2175564();
        v62 = sub_1C21064A4(v41, v42);
        if ((v43 & 1) != 0)
          goto LABEL_106;
        if (qword_1EF75CCB0 != -1)
          swift_once();
        v8 = qword_1EF75F1F8;
        swift_bridgeObjectRelease();
        if (v62 > 315576000000 || v62 < v8)
          goto LABEL_107;
        v61 = 0;
        v1 = 0;
        v2 = (char *)MEMORY[0x1E0DEE9D8];
      }
    }
    v4 = __OFADD__(v0++, 1);
  }
  while (!v4);
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  if (v7 == 115 && v8 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = sub_1C21757C8();
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
      goto LABEL_106;
  }
  if ((v61 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F200);
    sub_1C2106FFC();
    v47 = sub_1C2175564();
    v62 = sub_1C21064A4(v47, v48);
    if ((v49 & 1) != 0)
      goto LABEL_106;
    if (qword_1EF75CCB0 == -1)
      goto LABEL_117;
    goto LABEL_143;
  }
  if (v1 > 8)
  {
    if (v1 != 9)
    {
      v59 = v1 + 1;
      while (*((_QWORD *)v2 + 2))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v60 = *((_QWORD *)v2 + 2);
          if (!v60)
            goto LABEL_141;
        }
        else
        {
          v2 = sub_1C20C6040((uint64_t)v2);
          v60 = *((_QWORD *)v2 + 2);
          if (!v60)
          {
LABEL_141:
            __break(1u);
            break;
          }
        }
        *((_QWORD *)v2 + 2) = v60 - 1;
        swift_bridgeObjectRelease();
        if (--v59 <= 10)
          goto LABEL_129;
      }
      __break(1u);
LABEL_143:
      swift_once();
LABEL_117:
      if (v62 < qword_1EF75F1F8 || v62 > 315576000000)
        goto LABEL_106;
      goto LABEL_132;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1C214E59C(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v50 = *((_QWORD *)v2 + 2);
    v51 = 16 * v50;
    do
    {
      v52 = *((_QWORD *)v2 + 3);
      v53 = v50 + 1;
      if (v50 >= v52 >> 1)
        v2 = sub_1C214E59C((char *)(v52 > 1), v50 + 1, 1, v2);
      *((_QWORD *)v2 + 2) = v53;
      v54 = &v2[v51];
      *((_QWORD *)v54 + 4) = 48;
      *((_QWORD *)v54 + 5) = 0xE100000000000000;
      ++v1;
      v51 += 16;
      v50 = v53;
    }
    while (v1 < 9);
  }
LABEL_129:
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F200);
  sub_1C2106FFC();
  v55 = sub_1C2175564();
  result = sub_1C21066F0(v55, v56);
  if ((result & 0x100000000) != 0)
    goto LABEL_106;
  if (v62 < 0 && __OFSUB__(0, (_DWORD)result))
  {
    __break(1u);
    return result;
  }
LABEL_132:
  sub_1C2175504();
  v58 = v57;
  swift_bridgeObjectRelease();
  if (v58)
    goto LABEL_106;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_1C21064A4(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1C2175708();
      v7 = (uint64_t)sub_1C2107490(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_1C210712C(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1C21066F0(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v19 = 0;
    LOBYTE(v18) = 1;
    return v19 | ((unint64_t)v18 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    v8 = sub_1C2107048(result, a2, 10);
    swift_bridgeObjectRelease();
    v18 = HIDWORD(v8) & 1;
LABEL_36:
    v19 = v8;
    if ((_DWORD)v18)
      v19 = 0;
    return v19 | ((unint64_t)v18 << 32);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v6 = (unsigned __int8 *)sub_1C2175708();
    v7 = sub_1C2107210(v6, v4, 10);
    LODWORD(v8) = (_DWORD)v7;
    v25 = BYTE4(v7) & 1;
    v9 = BYTE4(v7) & 1;
    goto LABEL_35;
  }
  v24[0] = result;
  v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v3)
      goto LABEL_51;
    if (v3 == 1)
      goto LABEL_34;
    LODWORD(v8) = (BYTE1(result) - 48);
    if (v8 > 9)
      goto LABEL_34;
    v14 = v3 - 2;
    if (v14)
    {
      v15 = (unsigned __int8 *)v24 + 2;
      while (1)
      {
        v16 = *v15 - 48;
        if (v16 > 9)
          goto LABEL_34;
        v17 = 10 * (int)v8;
        if (v17 != (int)v17)
          goto LABEL_34;
        LODWORD(v8) = v17 + v16;
        if (__OFADD__((_DWORD)v17, v16))
          goto LABEL_34;
        v9 = 0;
        ++v15;
        if (!--v14)
          goto LABEL_35;
      }
    }
LABEL_40:
    v9 = 0;
    goto LABEL_35;
  }
  if (result != 45)
  {
    if (!v3)
      goto LABEL_34;
    LODWORD(v8) = (result - 48);
    if (v8 > 9)
      goto LABEL_34;
    v20 = v3 - 1;
    if (v20)
    {
      v21 = (unsigned __int8 *)v24 + 1;
      while (1)
      {
        v22 = *v21 - 48;
        if (v22 > 9)
          goto LABEL_34;
        v23 = 10 * (int)v8;
        if (v23 != (int)v23)
          goto LABEL_34;
        LODWORD(v8) = v23 + v22;
        if (__OFADD__((_DWORD)v23, v22))
          goto LABEL_34;
        v9 = 0;
        ++v21;
        if (!--v20)
          goto LABEL_35;
      }
    }
    goto LABEL_40;
  }
  if (v3)
  {
    if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      v9 = 0;
      LODWORD(v8) = -(BYTE1(result) - 48);
      v10 = v3 - 2;
      if (!v10)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        LODWORD(v18) = v9 & 1;
        goto LABEL_36;
      }
      v11 = (unsigned __int8 *)v24 + 2;
      while (1)
      {
        v12 = *v11 - 48;
        if (v12 > 9)
          break;
        v13 = 10 * (int)v8;
        if (v13 != (int)v13)
          break;
        LODWORD(v8) = v13 - v12;
        if (__OFSUB__((_DWORD)v13, v12))
          break;
        v9 = 0;
        ++v11;
        if (!--v10)
          goto LABEL_35;
      }
    }
LABEL_34:
    LODWORD(v8) = 0;
    v9 = 1;
    goto LABEL_35;
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1C210693C(uint64_t result, int a2)
{
  BOOL v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;

  if ((a2 + 999999999) > 0x773593FE)
  {
    v2 = __OFADD__(result, a2 / 1000000000);
    result += a2 / 1000000000;
    if (v2)
    {
      __break(1u);
      return result;
    }
    a2 %= 1000000000;
  }
  if (a2 < 0 && (v3 = result - 1, result >= 1))
  {
    v4 = a2 + 1000000000;
  }
  else
  {
    v5 = a2 - 1000000000;
    if (result < 0)
    {
      v6 = result + 1;
    }
    else
    {
      v5 = a2;
      v6 = result;
    }
    if (a2 >= 1)
      v4 = v5;
    else
      v4 = a2;
    if (a2 >= 1)
      v3 = v6;
    else
      v3 = result;
  }
  if (qword_1EF75CCB0 != -1)
    swift_once();
  result = 0;
  if (v3 <= 315576000000 && v3 >= qword_1EF75F1F8)
  {
    if (v4)
    {
      HIDWORD(v7) = 1757569337 * v4 + 137408;
      LODWORD(v7) = HIDWORD(v7);
      if ((v7 >> 6) <= 0x10C6)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F210);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1C21798B0;
        v17 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(v16 + 64) = v17;
        *(_QWORD *)(v16 + 32) = v3;
        if (v4 >= 0)
          v18 = v4;
        else
          v18 = -v4;
        v19 = MEMORY[0x1E0DEDC38];
        *(_QWORD *)(v16 + 96) = MEMORY[0x1E0DEDBC8];
        *(_QWORD *)(v16 + 104) = v19;
        *(_DWORD *)(v16 + 72) = v18 / 0xF4240;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F210);
        v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1C21798B0;
        v9 = MEMORY[0x1E0DEDCD8];
        *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEDC60];
        *(_QWORD *)(v8 + 64) = v9;
        *(_QWORD *)(v8 + 32) = v3;
        if (v4 >= 0)
          v10 = v4;
        else
          v10 = -v4;
        HIDWORD(v11) = 652835029 * v4 + 17179864;
        LODWORD(v11) = HIDWORD(v11);
        v12 = MEMORY[0x1E0DEDC38];
        *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEDBC8];
        *(_QWORD *)(v8 + 104) = v12;
        if ((v11 >> 3) <= 0x418936)
          *(_DWORD *)(v8 + 72) = v10 / 0x3E8;
        else
          *(_DWORD *)(v8 + 72) = v10;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F210);
      v13 = swift_allocObject();
      v14 = MEMORY[0x1E0DEDC60];
      *(_OWORD *)(v13 + 16) = xmmword_1C21798C0;
      v15 = MEMORY[0x1E0DEDCD8];
      *(_QWORD *)(v13 + 56) = v14;
      *(_QWORD *)(v13 + 64) = v15;
      *(_QWORD *)(v13 + 32) = v3;
    }
    return sub_1C2175450();
  }
  return result;
}

uint64_t sub_1C2106C00(uint64_t result, int a2)
{
  BOOL v2;
  uint64_t v3;

  if ((a2 + 999999999) >= 0x773593FF)
  {
    v2 = __OFADD__(result, a2 / 1000000000);
    result += a2 / 1000000000;
    if (v2)
    {
      __break(1u);
      return result;
    }
    a2 %= 1000000000;
  }
  if (a2 < 0 && result >= 1)
  {
    --result;
  }
  else
  {
    if (result < 0)
      v3 = result + 1;
    else
      v3 = result;
    if (a2 >= 1)
      return v3;
  }
  return result;
}

double Google_Protobuf_Duration.init(seconds:nanos:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  double result;

  *(_QWORD *)a3 = a1;
  *(_DWORD *)(a3 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
  return result;
}

uint64_t sub_1C2106C8C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v3;

  sub_1C210693C(*(_QWORD *)v0, *(_DWORD *)(v0 + 8));
  if (v1)
  {
    sub_1C21754F8();
    swift_bridgeObjectRelease();
    sub_1C21754F8();
    return 34;
  }
  else
  {
    sub_1C20C6080();
    swift_allocError();
    *v3 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1C2106D34()
{
  return sub_1C2106C8C();
}

uint64_t sub_1C2106D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int v4;
  int v5;

  result = (uint64_t)sub_1C20B0FD4();
  if (!v1)
  {
    v3 = sub_1C2105D8C();
    v5 = v4;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v0 = v3;
    *(_DWORD *)(v0 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C2106DC4(double *a1)
{
  return Google_Protobuf_Duration.init(floatLiteral:)(*a1);
}

void _s20SiriOntologyProtobuf07Google_C9_DurationV12floatLiteralACSd_tcfC_0(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3;
  double v4;
  int v5;

  v3 = trunc(a2);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = round((a2 - v3) * 1000000000.0);
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 2147483650.0)
  {
    *(_QWORD *)a1 = sub_1C2106C00((uint64_t)v3, (int)v4);
    *(_DWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
    return;
  }
LABEL_13:
  __break(1u);
}

double Google_Protobuf_Duration.timeInterval.getter()
{
  uint64_t v0;

  return (double)*(int *)(v0 + 8) / 1000000000.0 + (double)*(uint64_t *)v0;
}

uint64_t - prefix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v4;
  uint64_t result;
  int v6;
  int v7;

  v4 = __OFSUB__(0, *(_QWORD *)a1);
  result = -*(_QWORD *)a1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_DWORD *)(a1 + 8);
    if (!__OFSUB__(0, v6))
    {
      result = sub_1C2106C00(result, -v6);
      *(_QWORD *)a2 = result;
      *(_DWORD *)(a2 + 8) = v7;
      *(_OWORD *)(a2 + 16) = xmmword_1C2175DE0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t + infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v5 = __OFADD__(*(_QWORD *)a1, *(_QWORD *)a2);
  result = *(_QWORD *)a1 + *(_QWORD *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_DWORD *)(a2 + 8);
    v8 = *(_DWORD *)(a1 + 8);
    if (!__OFADD__(v8, v7))
    {
      result = sub_1C2106C00(result, v8 + v7);
      *(_QWORD *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t _s20SiriOntologyProtobuf1soiyAA07Google_C9_DurationVAD_ADtF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v5 = __OFSUB__(*(_QWORD *)a1, *(_QWORD *)a2);
  result = *(_QWORD *)a1 - *(_QWORD *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v7 = *(_DWORD *)(a2 + 8);
    v8 = *(_DWORD *)(a1 + 8);
    if (!__OFSUB__(v8, v7))
    {
      result = sub_1C2106C00(result, v8 - v7);
      *(_QWORD *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C2175DE0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2106FF0()
{
  return MEMORY[0x1E0DEB0F0];
}

unint64_t sub_1C2106FFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF75F208;
  if (!qword_1EF75F208)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF75F200);
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF75F208);
  }
  return result;
}

uint64_t sub_1C2107048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1C2175570();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1C210770C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1C2175708();
  }
LABEL_7:
  v11 = sub_1C2107210(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1C210712C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1C2175570();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1C210770C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1C2175708();
  }
LABEL_7:
  v11 = sub_1C2107490(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1C2107210(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1C2107490(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C210770C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1C217557C();
  v4 = sub_1C2107788(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C2107788(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1C21078CC(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1C21079B8(v9, 0);
      v12 = sub_1C2107A1C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1C3BB7934](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1C3BB7934);
LABEL_9:
      sub_1C2175708();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C3BB7934]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1C21078CC(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1C2152200(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1C2152200(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1C2175534();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C21079B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDF8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1C2107A1C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1C2152200(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1C2175540();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1C2175708();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1C2152200(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1C217551C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1C2107C2C()
{
  unint64_t result;

  result = qword_1EF75F218;
  if (!qword_1EF75F218)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for BinaryEncodingError, &type metadata for BinaryEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75F218);
  }
  return result;
}

void sub_1C2107C80()
{
  __asm { BR              X12 }
}

uint64_t sub_1C2107CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *, char *);
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v1;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = v2(&v6, (char *)&v6 + BYTE6(a1));
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v3 = v6;
  v3[1] = v5;
  return result;
}

uint64_t sub_1C2107ECC(uint64_t (*a1)(uint64_t, uint64_t))
{
  int *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = sub_1C217530C();
  v4 = *v1;
  v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_1C21752C4();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v6 = result;
  result = sub_1C21752E8();
  v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v5 - v4;
  v9 = sub_1C21752DC();
  if (v9 >= v8)
    v10 = v8;
  else
    v10 = v9;
  return a1(v6 + v7, v6 + v7 + v10);
}

uint64_t sub_1C2107F74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1C21752C4();
  v7 = result;
  if (result)
  {
    result = sub_1C21752E8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_1C21752DC();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return a3(v7, v13);
}

unint64_t sub_1C2108014()
{
  unint64_t result;

  result = qword_1EF75F220;
  if (!qword_1EF75F220)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for BinaryDecodingError, &type metadata for BinaryDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EF75F220);
  }
  return result;
}

uint64_t AnyExtensionField.isInitialized.getter()
{
  return 1;
}

uint64_t OptionalExtensionField.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t OptionalExtensionField.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v1, a1, AssociatedTypeWitness);
}

uint64_t (*OptionalExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t OptionalExtensionField.protobufExtension.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C20A84A8(v2 + *(int *)(a1 + 36), a2);
}

uint64_t (*OptionalExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalExtensionField.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C2175420() & 1;
}

uint64_t OptionalExtensionField.init(protobufExtension:value:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  v8 = type metadata accessor for OptionalExtensionField(0, a3, a4, a4);
  sub_1C20A8734(a1, a5 + *(int *)(v8 + 36));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a5, a2, AssociatedTypeWitness);
}

uint64_t type metadata accessor for OptionalExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalExtensionField);
}

uint64_t OptionalExtensionField.debugDescription.getter()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - v4, v0, AssociatedTypeWitness);
  return sub_1C2175480();
}

uint64_t OptionalExtensionField.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C2175408();
}

uint64_t OptionalExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  _BYTE v10[40];

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C20A84A8(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v7 = static OptionalExtensionField.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a3;
  v26 = a4;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v9);
  v24[0] = (char *)v24 - v10;
  v11 = sub_1C2175690();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)v24 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))((char *)v24 - v18, 1, 1, AssociatedTypeWitness);
  v20 = v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32))(v19, a1, v25, v26, v6, v5);
  if (v20)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  v23 = v24[0];
  v22 = v24[1];
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v19, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23, v16, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v22, v23, AssociatedTypeWitness);
}

uint64_t OptionalExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;

  v41 = a6;
  v39 = a2;
  v40 = a4;
  v43 = a1;
  v38 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v37 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v37 - v15;
  v17 = sub_1C2175690();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x1E0C80A78](v17, v19);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23);
  v25 = (char *)&v37 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)&v37 - v24, 1, 1, AssociatedTypeWitness);
  v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 32))(v25, v39, v40, v41, a3, a5);
  v42 = v26;
  if (v26)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  else
  {
    v41 = a5;
    v28 = v37;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v25, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v22, 1, AssociatedTypeWitness) == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
      v30 = type metadata accessor for OptionalExtensionField(0, a3, v41, v29);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v38, 1, 1, v30);
    }
    else
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v31(v16, v22, AssociatedTypeWitness);
      v31(v28, v16, AssociatedTypeWitness);
      v32 = v38;
      v33 = (uint64_t)v28;
      v34 = v41;
      OptionalExtensionField.init(protobufExtension:value:)(v43, v33, a3, v41, v38);
      v36 = type metadata accessor for OptionalExtensionField(0, a3, v34, v35);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v32, 0, 1, v36);
    }
  }
}

uint64_t OptionalExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = *(_QWORD *)(a2 + 16);
  v10 = (_QWORD *)(v4 + *(int *)(a2 + 36));
  v12 = v10[3];
  v11 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 24) + 48))(v4, v13, a1, a3, a4, v9);
}

uint64_t OptionalExtensionField.hashValue.getter()
{
  sub_1C2175828();
  OptionalExtensionField.hash(into:)();
  return sub_1C2175870();
}

uint64_t (*sub_1C2108944(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OptionalExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C210898C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalExtensionField.init(protobufExtension:value:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_1C2108998@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return OptionalExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4, a6);
}

uint64_t sub_1C21089C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C21089E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C2108A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))OptionalExtensionField.hash(into:));
}

uint64_t sub_1C2108A20()
{
  return static OptionalExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t RepeatedExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  return sub_1C210912C(a1, a2, (uint64_t (*)(uint64_t, _BYTE *, _QWORD, _QWORD))static RepeatedExtensionField.== infix(_:_:));
}

uint64_t RepeatedExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C21091C0(a1, (void (*)(char *, char *))sub_1C210D5A4);
}

uint64_t sub_1C2108A6C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void (*v27)(char *, _QWORD);
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46[32];
  uint64_t v47;

  v33 = a5;
  v34 = a8;
  v41 = a1;
  v42 = a2;
  v32 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v43 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v15 = (char *)&v32 - v14;
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness();
  v35 = *(_QWORD *)(v19 - 8);
  v36 = v19;
  MEMORY[0x1E0C80A78](v19, v20);
  v22 = (char *)&v32 - v21;
  v23 = sub_1C217563C();
  if (!v23)
    return sub_1C21755AC();
  v39 = AssociatedTypeWitness;
  v24 = v23;
  v47 = sub_1C21753CC();
  v37 = sub_1C2175744();
  sub_1C2175720();
  v40 = v8;
  result = sub_1C2175630();
  if ((v24 & 0x8000000000000000) == 0)
  {
    v26 = v24;
    v38 = v18;
    while (v26)
    {
      v44 = v26;
      v27 = (void (*)(char *, _QWORD))sub_1C2175660();
      v28 = *(void (**)(char *))(v11 + 16);
      v29 = v11;
      v30 = v39;
      v28(v15);
      v27(v46, 0);
      v31 = v45;
      v41(v15, v43);
      if (v31)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v43, v33);
      }
      v45 = 0;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
      sub_1C217572C();
      result = sub_1C2175648();
      v26 = v44 - 1;
      v11 = v29;
      if (v44 == 1)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);
        return v47;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t RepeatedExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  return sub_1C21093D8(a1, a2);
}

uint64_t RepeatedExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  return sub_1C2109420(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t RepeatedExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = *v4;
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x1C3BB7A48](v8, AssociatedTypeWitness);
  if (result >= 1)
  {
    v13 = a4;
    v15 = v4[4];
    v14 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v15);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, v16, a1, a3, v13, v10, v9);
  }
  return result;
}

uint64_t RepeatedExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C21095F0(a1, (void (*)(_BYTE *, uint64_t))RepeatedExtensionField.hash(into:));
}

uint64_t (*sub_1C2108E74(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RepeatedExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C2108EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedExtensionField.decodeExtensionField<A>(decoder:)(a1, a4);
}

uint64_t sub_1C2108EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C2108F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))RepeatedExtensionField.hash(into:));
}

uint64_t PackedExtensionField.value.getter()
{
  sub_1C20BB3C0();
  return swift_bridgeObjectRetain();
}

uint64_t PackedExtensionField.value.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PackedExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t PackedExtensionField.protobufExtension.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C20A84A8(v1 + 8, a1);
}

uint64_t PackedExtensionField.protobufExtension.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 8;
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_1C20A8734(a1, v3);
}

uint64_t (*PackedExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t _s20SiriOntologyProtobuf22RepeatedExtensionFieldV2eeoiySbACyxG_AEtFZ_0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C217560C();
}

uint64_t PackedExtensionField.init(protobufExtension:value:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  result = sub_1C20A8734(a1, (uint64_t)(a3 + 1));
  *a3 = a2;
  return result;
}

uint64_t _s20SiriOntologyProtobuf22RepeatedExtensionFieldV4hash4intoys6HasherVz_tF_0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  sub_1C2175600();
  return swift_bridgeObjectRelease();
}

uint64_t PackedExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  return sub_1C210912C(a1, a2, (uint64_t (*)(uint64_t, _BYTE *, _QWORD, _QWORD))static PackedExtensionField.== infix(_:_:));
}

uint64_t sub_1C210912C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _BYTE *, _QWORD, _QWORD))
{
  uint64_t v3;
  _BYTE v7[40];
  _BYTE v8[48];

  sub_1C20A84A8(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  LOBYTE(a3) = a3(v3, v8, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v8, a2);
  return a3 & 1;
}

uint64_t PackedExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C21091C0(a1, (void (*)(char *, char *))sub_1C210C158);
}

uint64_t sub_1C21091C0(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;
  unint64_t v12;

  v11 = *v2;
  v4 = *(_QWORD *)(a1 + 24);
  v10[2] = *(_QWORD *)(a1 + 16);
  v10[3] = v4;
  swift_getAssociatedTypeWitness();
  v5 = sub_1C21755F4();
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF50], v5);
  v8 = sub_1C2108A6C(a2, (uint64_t)v10, v5, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  swift_bridgeObjectRelease();
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F230);
  sub_1C210C10C();
  sub_1C2175414();
  swift_bridgeObjectRelease();
  v11 = 91;
  v12 = 0xE100000000000000;
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C2109314@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, AssociatedTypeWitness);
  result = sub_1C2175480();
  *a2 = result;
  a2[1] = v9;
  return result;
}

uint64_t PackedExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  return sub_1C21093D8(a1, a2);
}

uint64_t sub_1C21093D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 + 24) + 40))(v2, a1);
}

uint64_t PackedExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  return sub_1C2109420(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C2109420@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  v17 = sub_1C21755AC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(&v17, a2, a4, a6, a3, a5);
  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v17;
    result = sub_1C20A8734(a1, (uint64_t)(a7 + 1));
    *a7 = v16;
  }
  return result;
}

uint64_t PackedExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = *v4;
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x1C3BB7A48](v8, AssociatedTypeWitness);
  if (result >= 1)
  {
    v13 = a4;
    v15 = v4[4];
    v14 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v15);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 64))(v8, v16, a1, a3, v13, v10, v9);
  }
  return result;
}

uint64_t PackedExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C21095F0(a1, (void (*)(_BYTE *, uint64_t))PackedExtensionField.hash(into:));
}

uint64_t sub_1C21095F0(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_1C2175828();
  a2(v5, a1);
  return sub_1C2175870();
}

uint64_t sub_1C2109640@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C20BB3C0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2109664(uint64_t *a1)
{
  return PackedExtensionField.value.setter(*a1);
}

uint64_t (*sub_1C210966C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PackedExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C21096B0@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return PackedExtensionField.init(protobufExtension:value:)(a1, *a2, a3);
}

uint64_t sub_1C21096B8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  return PackedExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4, a6);
}

uint64_t sub_1C21096DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C2109704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))PackedExtensionField.hash(into:));
}

uint64_t sub_1C2109710(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  _BYTE v7[72];

  sub_1C2175828();
  a4(v7, a2);
  return sub_1C2175870();
}

uint64_t sub_1C2109760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static PackedExtensionField.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t OptionalEnumExtensionField.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t (*OptionalEnumExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t _s20SiriOntologyProtobuf22OptionalExtensionFieldV08protobufE0AA010AnyMessageE0_pvs_0(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a2 + 36);
  __swift_destroy_boxed_opaque_existential_1(v4);
  return sub_1C20A8734(a1, v4);
}

uint64_t (*OptionalEnumExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalEnumExtensionField.== infix(_:_:)()
{
  return sub_1C2175420() & 1;
}

uint64_t OptionalEnumExtensionField.init(protobufExtension:value:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;

  v9 = type metadata accessor for OptionalEnumExtensionField(0, a3, a4, a4);
  sub_1C20A8734(a1, a5 + *(int *)(v9 + 36));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a2, a3);
}

uint64_t OptionalEnumExtensionField.hash(into:)()
{
  return sub_1C2175408();
}

uint64_t OptionalEnumExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  _BYTE v10[40];

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C20A84A8(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v7 = sub_1C2175420();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalEnumExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v23[2] = a1;
  v24 = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C2175690();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)v23 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)v23 - v17, 1, 1, v6);
  v19 = v25;
  (*(void (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 392))(v18, v6, *(_QWORD *)(a2 + 24), v24, a4);
  if (v19)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  v21 = v9;
  v22 = v23[1];
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v15, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v22, v21, v6);
}

uint64_t OptionalEnumExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v26;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 *v44;

  v42 = a4;
  v41 = a2;
  v44 = a1;
  v39 = a7;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x1E0C80A78](a1, a2);
  v38 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v13);
  v15 = (char *)&v38 - v14;
  v16 = sub_1C2175690();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v38 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)&v38 - v23, 1, 1, a3);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 392);
  v40 = a5;
  v26 = v43;
  v25(v24, a3, a5, v42, a6);
  if (v26)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  }
  else
  {
    v43 = v15;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v16);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v21, 1, a3);
    v30 = v39;
    v29 = v40;
    if (v28 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      v32 = type metadata accessor for OptionalEnumExtensionField(0, a3, v29, v31);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 1, 1, v32);
    }
    else
    {
      v33 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v34 = v43;
      v33(v43, v21, a3);
      v35 = v38;
      v33(v38, v34, a3);
      v37 = type metadata accessor for OptionalEnumExtensionField(0, a3, v29, v36);
      sub_1C20A8734(v44, (uint64_t)&v30[*(int *)(v37 + 36)]);
      v33(v30, v35, a3);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v30, 0, 1, v37);
    }
  }
}

uint64_t OptionalEnumExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (_QWORD *)(v4 + *(int *)(a2 + 36));
  v9 = v8[3];
  v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 128))(v4, v11, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t OptionalEnumExtensionField.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175408();
  return sub_1C2175870();
}

uint64_t (*sub_1C2109E2C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OptionalEnumExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C2109E70@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalEnumExtensionField.init(protobufExtension:value:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_1C2109E7C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return OptionalEnumExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4, a6);
}

uint64_t sub_1C2109EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalEnumExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C2109EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalEnumExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C2109EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))OptionalEnumExtensionField.hash(into:));
}

uint64_t sub_1C2109F00()
{
  return static OptionalEnumExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedEnumExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedEnumExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t RepeatedEnumExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C210A200(a1, (void (*)(char *, char *))sub_1C210D5B8);
}

uint64_t RepeatedEnumExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210A3D4(a1, a2, a3, a4);
}

uint64_t RepeatedEnumExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  return sub_1C210A424(a1, a2, a3, a4, a5, a6);
}

uint64_t RepeatedEnumExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *v4;
  v9 = *(_QWORD *)(a2 + 16);
  result = MEMORY[0x1C3BB7A48](*v4, v9);
  if (result >= 1)
  {
    v14 = a3;
    v12 = v4[4];
    v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 272))(v8, v13, v9, *(_QWORD *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t RepeatedEnumExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C21095F0(a1, (void (*)(_BYTE *, uint64_t))RepeatedEnumExtensionField.hash(into:));
}

uint64_t (*sub_1C210A038(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RepeatedEnumExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C210A084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedEnumExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C210A0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedEnumExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C210A0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))RepeatedEnumExtensionField.hash(into:));
}

uint64_t (*PackedEnumExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*PackedEnumExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t _s20SiriOntologyProtobuf26RepeatedEnumExtensionFieldV2eeoiySbACyxG_AEtFZ_0()
{
  return sub_1C217560C();
}

uint64_t _s20SiriOntologyProtobuf26RepeatedEnumExtensionFieldV4hash4intoys6HasherVz_tF_0()
{
  swift_bridgeObjectRetain();
  sub_1C2175600();
  return swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf26RepeatedEnumExtensionFieldV7isEqual5otherSbAA03AnyfG0_p_tF_0(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[40];
  _QWORD v6[6];

  sub_1C20A84A8(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v3 = sub_1C217560C();
  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v6, a2);
  return v3 & 1;
}

uint64_t PackedEnumExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C210A200(a1, (void (*)(char *, char *))sub_1C210C180);
}

uint64_t sub_1C210A200(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  uint64_t v10;
  unint64_t v11;

  v10 = *v2;
  v9[1] = *(_OWORD *)(a1 + 16);
  v4 = sub_1C21755F4();
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF50], v4);
  v7 = sub_1C2108A6C(a2, (uint64_t)v9, v4, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v5, MEMORY[0x1E0DEDD18], v6);
  swift_bridgeObjectRelease();
  v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F230);
  sub_1C210C10C();
  sub_1C2175414();
  swift_bridgeObjectRelease();
  v10 = 91;
  v11 = 0xE100000000000000;
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C210A33C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1, a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_1C2175480();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t PackedEnumExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210A3D4(a1, a2, a3, a4);
}

uint64_t sub_1C210A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(a4 + 400))(v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t PackedEnumExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  return sub_1C210A424(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C210A424@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1C21755AC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 400))(&v15, a2, a4, a3, a5);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v15;
    result = sub_1C20A8734(a1, (uint64_t)(a6 + 1));
    *a6 = v14;
  }
  return result;
}

uint64_t PackedEnumExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *v4;
  v9 = *(_QWORD *)(a2 + 16);
  result = MEMORY[0x1C3BB7A48](*v4, v9);
  if (result >= 1)
  {
    v14 = a3;
    v12 = v4[4];
    v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 400))(v8, v13, v9, *(_QWORD *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t PackedEnumExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C21095F0(a1, (void (*)(_BYTE *, uint64_t))PackedEnumExtensionField.hash(into:));
}

uint64_t (*sub_1C210A5B0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = PackedEnumExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C210A5F4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return PackedEnumExtensionField.init<A>(protobufExtension:decoder:)(a1, *(_QWORD *)(a4 + 16), a2, *(_QWORD *)(a4 + 24), a3, a5);
}

uint64_t sub_1C210A614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedEnumExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C210A63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))PackedEnumExtensionField.hash(into:));
}

uint64_t sub_1C210A64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static PackedEnumExtensionField.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t (*OptionalMessageExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*OptionalMessageExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalMessageExtensionField.== infix(_:_:)()
{
  return sub_1C2175420() & 1;
}

uint64_t OptionalMessageExtensionField.init(protobufExtension:value:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C210B3C8(a1, a2, a3, a4, a5, type metadata accessor for OptionalMessageExtensionField, a6);
}

uint64_t _s20SiriOntologyProtobuf26OptionalEnumExtensionFieldV16debugDescriptionSSvg_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x1E0C80A78](a1, v1);
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1C2175480();
}

uint64_t OptionalMessageExtensionField.hash(into:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 24) + 80))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t OptionalMessageExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  _BYTE v10[40];

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C20A84A8(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v7 = sub_1C2175420();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalMessageExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v27 = a3;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v24 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C2175690();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v24 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v25 = v4;
  v19((char *)&v24 - v17, v4, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
  v20 = v28;
  (*(void (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 408))(v18, v7, *(_QWORD *)(a2 + 24), v27, a4);
  if (v20)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  v23 = v24;
  v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v23, v15, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v22, v23, v7);
}

uint64_t OptionalMessageExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 *v44;

  v42 = a4;
  v38 = a8;
  v39 = a6;
  v41 = a2;
  v44 = a1;
  v11 = *(_QWORD *)(a3 - 8);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v36 - v15;
  v40 = sub_1C2175690();
  v17 = *(_QWORD *)(v40 - 8);
  v19 = MEMORY[0x1E0C80A78](v40, v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v36 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))((char *)&v36 - v23, 1, 1, a3);
  v25 = v43;
  (*(void (**)(char *, uint64_t, uint64_t, char *, uint64_t))(a7 + 408))(v24, a3, a5, v42, a7);
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v40);
  }
  else
  {
    v42 = v16;
    v43 = a5;
    v27 = v40;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v40);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 1, a3);
    v29 = v38;
    v30 = v39;
    if (v28 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v27);
      v31 = type metadata accessor for OptionalMessageExtensionField(0, a3, v43, v30);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 1, 1, v31);
    }
    else
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v33 = v42;
      v32(v42, v21, a3);
      v34 = v37;
      v32(v37, v33, a3);
      v35 = type metadata accessor for OptionalMessageExtensionField(0, a3, v43, v30);
      sub_1C20A8734(v44, (uint64_t)&v29[*(int *)(v35 + 44)]);
      v32(v29, v34, a3);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v29, 0, 1, v35);
    }
  }
}

uint64_t OptionalMessageExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (_QWORD *)(v4 + *(int *)(a2 + 44));
  v9 = v8[3];
  v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 136))(v4, v11, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t OptionalMessageExtensionField.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_1C2175828();
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(a1 + 24) + 80))(v3, *(_QWORD *)(a1 + 16));
  return sub_1C2175870();
}

uint64_t (*sub_1C210ACEC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OptionalMessageExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C210AD30@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalMessageExtensionField.init(protobufExtension:value:)(a1, a2, a3[2], a3[3], a3[4], a4);
}

uint64_t sub_1C210AD40@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, char *a6@<X8>)
{
  return OptionalMessageExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, a5[2], a3, a5[3], a5[4], a4, a6);
}

uint64_t sub_1C210AD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalMessageExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C210AD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalMessageExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C210ADC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))OptionalMessageExtensionField.hash(into:));
}

uint64_t sub_1C210ADD0()
{
  return static OptionalMessageExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedMessageExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedMessageExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static RepeatedMessageExtensionField.== infix(_:_:)()
{
  return sub_1C217560C();
}

uint64_t RepeatedMessageExtensionField.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v10, v5))
    return swift_bridgeObjectRelease();
  v17 = v7;
  v11 = 0;
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 80);
  while (1)
  {
    v14 = sub_1C21755C4();
    sub_1C2175594();
    if ((v14 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v11, v5);
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1C21756FC();
    if (v17 != 8)
      break;
    v18 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v8, &v18, v5);
    swift_unknownObjectRelease();
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_10:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    v13(a1, v5, v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    ++v11;
    if (v15 == MEMORY[0x1C3BB7A60](v9, v5))
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t RepeatedMessageExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[40];
  _QWORD v6[6];

  sub_1C20A84A8(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v3 = sub_1C217560C();
  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v6, a2);
  return v3 & 1;
}

uint64_t RepeatedMessageExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C210BBC0(a1, (void (*)(char *, char *))sub_1C210C1A8);
}

uint64_t RepeatedMessageExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(a4 + 416))(v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t RepeatedMessageExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1C21755AC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 416))(&v15, a2, a4, a3, a5);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v15;
    result = sub_1C20A8734(a1, (uint64_t)(a6 + 1));
    *a6 = v14;
  }
  return result;
}

uint64_t RepeatedMessageExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *v4;
  v9 = *(_QWORD *)(a2 + 16);
  result = MEMORY[0x1C3BB7A48](*v4, v9);
  if (result >= 1)
  {
    v14 = a3;
    v12 = v4[4];
    v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 280))(v8, v13, v9, *(_QWORD *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t RepeatedMessageExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C21095F0(a1, (void (*)(_BYTE *, uint64_t))RepeatedMessageExtensionField.hash(into:));
}

uint64_t (*sub_1C210B21C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RepeatedMessageExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C210B260@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return RepeatedMessageExtensionField.init<A>(protobufExtension:decoder:)(a1, *(_QWORD *)(a4 + 16), a2, *(_QWORD *)(a4 + 24), a3, a5);
}

uint64_t sub_1C210B288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedMessageExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C210B2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedMessageExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C210B2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))RepeatedMessageExtensionField.hash(into:));
}

uint64_t sub_1C210B2E8()
{
  return static RepeatedMessageExtensionField.== infix(_:_:)();
}

uint64_t _s20SiriOntologyProtobuf26OptionalEnumExtensionFieldV5valuexvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*OptionalGroupExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t OptionalGroupExtensionField.protobufExtension.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C20A84A8(v2 + *(int *)(a1 + 44), a2);
}

uint64_t _s20SiriOntologyProtobuf29OptionalMessageExtensionFieldV08protobufF0AA03AnyeF0_pvs_0(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a2 + 44);
  __swift_destroy_boxed_opaque_existential_1(v4);
  return sub_1C20A8734(a1, v4);
}

uint64_t (*OptionalGroupExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalGroupExtensionField.== infix(_:_:)()
{
  return sub_1C2175420() & 1;
}

uint64_t OptionalGroupExtensionField.init(protobufExtension:value:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C210B3C8(a1, a2, a3, a4, a5, type metadata accessor for OptionalGroupExtensionField, a6);
}

uint64_t sub_1C210B3C8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;

  v11 = a6(0, a3, a4, a5);
  sub_1C20A8734(a1, a7 + *(int *)(v11 + 44));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a7, a2, a3);
}

uint64_t OptionalGroupExtensionField.hash(into:)()
{
  return sub_1C2175408();
}

uint64_t OptionalGroupExtensionField.debugDescription.getter()
{
  return sub_1C21757B0();
}

uint64_t OptionalGroupExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  _BYTE v10[40];

  v3 = *(_QWORD *)(a2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1, a2);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C20A84A8(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v7 = sub_1C2175420();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalGroupExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v27 = a3;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v24 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C2175690();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)&v24 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v25 = v4;
  v19((char *)&v24 - v17, v4, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
  v20 = v28;
  (*(void (**)(char *, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 424))(v18, v7, *(_QWORD *)(a2 + 24), v27, a4);
  if (v20)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  v23 = v24;
  v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v23, v15, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v22, v23, v7);
}

uint64_t OptionalGroupExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 *v44;

  v42 = a4;
  v38 = a8;
  v39 = a6;
  v41 = a2;
  v44 = a1;
  v11 = *(_QWORD *)(a3 - 8);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v36 - v15;
  v40 = sub_1C2175690();
  v17 = *(_QWORD *)(v40 - 8);
  v19 = MEMORY[0x1E0C80A78](v40, v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v36 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))((char *)&v36 - v23, 1, 1, a3);
  v25 = v43;
  (*(void (**)(char *, uint64_t, uint64_t, char *, uint64_t))(a7 + 424))(v24, a3, a5, v42, a7);
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v40);
  }
  else
  {
    v42 = v16;
    v43 = a5;
    v27 = v40;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v40);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 1, a3);
    v29 = v38;
    v30 = v39;
    if (v28 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v27);
      v31 = type metadata accessor for OptionalGroupExtensionField(0, a3, v43, v30);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 1, 1, v31);
    }
    else
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v33 = v42;
      v32(v42, v21, a3);
      v34 = v37;
      v32(v37, v33, a3);
      v35 = type metadata accessor for OptionalGroupExtensionField(0, a3, v43, v30);
      sub_1C20A8734(v44, (uint64_t)&v29[*(int *)(v35 + 44)]);
      v32(v29, v34, a3);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v29, 0, 1, v35);
    }
  }
}

uint64_t OptionalGroupExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (_QWORD *)(v4 + *(int *)(a2 + 44));
  v9 = v8[3];
  v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 144))(v4, v11, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t OptionalGroupExtensionField.isInitialized.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 32))(*(_QWORD *)(a1 + 16));
}

uint64_t OptionalGroupExtensionField.hashValue.getter()
{
  sub_1C2175828();
  sub_1C2175408();
  return sub_1C2175870();
}

uint64_t (*sub_1C210BA18(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = OptionalGroupExtensionField.value.modify();
  return sub_1C2108988;
}

uint64_t sub_1C210BA5C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalGroupExtensionField.init(protobufExtension:value:)(a1, a2, a3[2], a3[3], a3[4], a4);
}

uint64_t sub_1C210BA6C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, char *a6@<X8>)
{
  return OptionalGroupExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, a5[2], a3, a5[3], a5[4], a4, a6);
}

uint64_t sub_1C210BA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalGroupExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C210BAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalGroupExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C210BAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))OptionalGroupExtensionField.hash(into:));
}

uint64_t sub_1C210BAF8()
{
  return static OptionalGroupExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedGroupExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedGroupExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static RepeatedGroupExtensionField.== infix(_:_:)()
{
  return sub_1C217560C();
}

uint64_t RepeatedGroupExtensionField.init(protobufExtension:value:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  result = sub_1C20A8734(a1, (uint64_t)(a3 + 1));
  *a3 = a2;
  return result;
}

uint64_t RepeatedGroupExtensionField.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C2175600();
  return swift_bridgeObjectRelease();
}

uint64_t RepeatedGroupExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C210BBC0(a1, (void (*)(char *, char *))sub_1C210C1D4);
}

uint64_t sub_1C210BBC0(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *v2;
  v10[1] = *(_OWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = v4;
  v5 = sub_1C21755F4();
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF50], v5);
  v8 = sub_1C2108A6C(a2, (uint64_t)v10, v5, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  swift_bridgeObjectRelease();
  v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F230);
  sub_1C210C10C();
  sub_1C2175414();
  swift_bridgeObjectRelease();
  v12 = 91;
  v13 = 0xE100000000000000;
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C21754F8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t RepeatedGroupExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[40];
  _QWORD v6[6];

  sub_1C20A84A8(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF75F228);
  swift_dynamicCast();
  v3 = sub_1C217560C();
  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v6, a2);
  return v3 & 1;
}

uint64_t RepeatedGroupExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(a4 + 432))(v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t RepeatedGroupExtensionField.init<A>(protobufExtension:decoder:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v15 = sub_1C21755AC();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 432))(&v15, a2, a4, a3, a5);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = v15;
    result = sub_1C20A8734(a1, (uint64_t)(a6 + 1));
    *a6 = v14;
  }
  return result;
}

uint64_t RepeatedGroupExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *v4;
  v9 = *(_QWORD *)(a2 + 16);
  result = MEMORY[0x1C3BB7A48](*v4, v9);
  if (result >= 1)
  {
    v14 = a3;
    v12 = v4[4];
    v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(a4 + 288))(v8, v13, v9, *(_QWORD *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf29RepeatedMessageExtensionFieldV13isInitializedSbvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  BOOL v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  v0 = sub_1C2175750();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (_QWORD *)(v0 + 32);
    v3 = v1 - 1;
    do
    {
      v4 = v2[3];
      v5 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v4);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
      v7 = v6;
      v9 = v3-- != 0;
      if ((v6 & 1) == 0)
        break;
      v2 += 5;
    }
    while (v9);
  }
  else
  {
    v7 = 1;
  }
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t RepeatedGroupExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C21095F0(a1, (void (*)(_BYTE *, uint64_t))RepeatedGroupExtensionField.hash(into:));
}

uint64_t (*sub_1C210C000(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = RepeatedGroupExtensionField.value.modify();
  return sub_1C2108988;
}

void sub_1C210C044(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1C210C070@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return RepeatedGroupExtensionField.init(protobufExtension:value:)(a1, *a2, a3);
}

uint64_t sub_1C210C078@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return RepeatedGroupExtensionField.init<A>(protobufExtension:decoder:)(a1, *(_QWORD *)(a4 + 16), a2, *(_QWORD *)(a4 + 24), a3, a5);
}

uint64_t sub_1C210C0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedGroupExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C210C0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedGroupExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C210C0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2109710(a1, a2, a3, (void (*)(_BYTE *, uint64_t))RepeatedGroupExtensionField.hash(into:));
}

uint64_t sub_1C210C0FC()
{
  return static RepeatedGroupExtensionField.== infix(_:_:)();
}

unint64_t sub_1C210C10C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF75F238;
  if (!qword_1EF75F238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF75F230);
    result = MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EF75F238);
  }
  return result;
}

uint64_t sub_1C210C158@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2109314(a1, a2);
}

uint64_t type metadata accessor for OptionalEnumExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalEnumExtensionField);
}

uint64_t sub_1C210C180@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C210A33C(a1, a2);
}

uint64_t type metadata accessor for OptionalMessageExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalMessageExtensionField);
}

uint64_t sub_1C210C1A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C210A33C(a1, a2);
}

uint64_t type metadata accessor for OptionalGroupExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalGroupExtensionField);
}

uint64_t sub_1C210C1D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C21757B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C210C218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for OptionalExtensionField<A>, (uint64_t)&protocol conformance descriptor for OptionalExtensionField<A>);
}

uint64_t sub_1C210C22C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for OptionalExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C258()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for RepeatedExtensionField<A>, (uint64_t)&protocol conformance descriptor for RepeatedExtensionField<A>);
}

uint64_t sub_1C210C27C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for RepeatedExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C2A8()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PackedExtensionField<A>, (uint64_t)&protocol conformance descriptor for PackedExtensionField<A>);
}

uint64_t sub_1C210C2CC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for PackedExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C2F8()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for OptionalEnumExtensionField<A>, (uint64_t)&protocol conformance descriptor for OptionalEnumExtensionField<A>);
}

uint64_t sub_1C210C31C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for OptionalEnumExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C348()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for RepeatedEnumExtensionField<A>, (uint64_t)&protocol conformance descriptor for RepeatedEnumExtensionField<A>);
}

uint64_t sub_1C210C36C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for RepeatedEnumExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C398()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PackedEnumExtensionField<A>, (uint64_t)&protocol conformance descriptor for PackedEnumExtensionField<A>);
}

uint64_t sub_1C210C3BC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for PackedEnumExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C3E8()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for OptionalMessageExtensionField<A>, (uint64_t)&protocol conformance descriptor for OptionalMessageExtensionField<A>);
}

uint64_t sub_1C210C40C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for OptionalMessageExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C438()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for RepeatedMessageExtensionField<A>, (uint64_t)&protocol conformance descriptor for RepeatedMessageExtensionField<A>);
}

uint64_t sub_1C210C45C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for RepeatedMessageExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C488()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for OptionalGroupExtensionField<A>, (uint64_t)&protocol conformance descriptor for OptionalGroupExtensionField<A>);
}

uint64_t sub_1C210C4AC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for OptionalGroupExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C4D8()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t sub_1C210C4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C210C4FC(a1, a2, a3, (uint64_t)&protocol conformance descriptor for RepeatedGroupExtensionField<A>, (uint64_t)&protocol conformance descriptor for RepeatedGroupExtensionField<A>);
}

uint64_t sub_1C210C4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1C3BB7F64](a4);
  result = MEMORY[0x1C3BB7F64](a5, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C210C544(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for RepeatedGroupExtensionField<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1C210C570()
{
  JUMPOUT(0x1C3BB7F64);
}

uint64_t dispatch thunk of AnyExtensionField.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AnyExtensionField.protobufExtension.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AnyExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of AnyExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of AnyExtensionField.isInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ExtensionField.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ExtensionField.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ExtensionField.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ExtensionField.init(protobufExtension:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ExtensionField.init<A>(protobufExtension:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t sub_1C210C608()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C210C610()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C210C694(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return a1;
}

uint64_t sub_1C210C774(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return __swift_destroy_boxed_opaque_existential_1((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1C210C7D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1C210C868(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1C210C8E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1C210C96C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1C210C9FC(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1C210CB44(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1C210CC58()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1C210CCE0);
}

void sub_1C210CC60()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1C210CC68);
  JUMPOUT(0x1C210CCE0);
}

void sub_1C210CCB0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1C210CCE0);
}

void sub_1C210CCB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1C210CCE0);
}

uint64_t sub_1C210CCC0@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v4 + v6) = 0;
  if (!(_DWORD)v5)
    goto LABEL_6;
  if (a1 < 0x7FFFFFFF)
  {
    if ((v5 & 0x80000000) != 0)
      JUMPOUT(0x1C210CCCCLL);
    *(_QWORD *)(((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (v5 - 1);
LABEL_6:
    JUMPOUT(0x1C210CCE0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v4, v5);
}

uint64_t type metadata accessor for RepeatedExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepeatedExtensionField);
}

uint64_t sub_1C210CD18(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t type metadata accessor for PackedExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PackedExtensionField);
}

uint64_t sub_1C210CD4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for RepeatedEnumExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepeatedEnumExtensionField);
}

uint64_t type metadata accessor for PackedEnumExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PackedEnumExtensionField);
}

uint64_t sub_1C210CDF8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for RepeatedMessageExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepeatedMessageExtensionField);
}

uint64_t sub_1C210CE10()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C210CE84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 24) = v12;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1C210CF48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  return __swift_destroy_boxed_opaque_existential_1((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1C210CF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 24) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1C210CFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1C210D04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1C210D0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1C210D11C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C210D198 + 4 * byte_1C217992F[v10]))();
  }
}

void sub_1C210D21C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFD8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1C210D310()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1C210D394);
}

void sub_1C210D318(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1C210D320);
  JUMPOUT(0x1C210D394);
}

void sub_1C210D364()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1C210D394);
}

void sub_1C210D36C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1C210D394);
}

uint64_t sub_1C210D374(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1C210D380);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1C210D394);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_1C210D3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *sub_1C210D414(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t sub_1C210D468(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_1C210D4BC(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1C210D504(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for RepeatedGroupExtensionField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepeatedGroupExtensionField);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3BB7F1C](a1, v6, a5);
}

uint64_t sub_1C210D5A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C210C158(a1, a2);
}

uint64_t sub_1C210D5B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C210C180(a1, a2);
}

uint64_t sub_1C210D638@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  return sub_1C21096B8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C210D64C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return sub_1C210A5F4(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for BinaryEncodingSizeVisitor()
{
  return &type metadata for BinaryEncodingSizeVisitor;
}

uint64_t sub_1C210D678(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = (2 * result) ^ ((int)result >> 31);
  v9 = 2;
  v10 = 3;
  v11 = 4;
  if (v8 >> 28)
    v11 = 5;
  if (v8 >= 0x200000)
    v10 = v11;
  if (v8 >> 14)
    v9 = v10;
  if (v8 >= 0x80)
    v12 = v9;
  else
    v12 = 1;
  v13 = v12 + v7;
  v14 = __OFADD__(*v2, v13);
  v15 = *v2 + v13;
  if (v14)
    __break(1u);
  else
    *v2 = v15;
  return result;
}

uint64_t sub_1C210D710(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = (2 * result) ^ (result >> 63);
  if (v8 < 0x80)
  {
    v9 = 1;
    goto LABEL_25;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    v9 = 10;
    goto LABEL_25;
  }
  if (!(v8 >> 35))
  {
    if (v8 < 0x200000)
    {
      v9 = 2;
      if (v8 < 0x4000)
        goto LABEL_25;
LABEL_24:
      ++v9;
      goto LABEL_25;
    }
    v9 = 4;
LABEL_23:
    if (!(v8 >> 28))
      goto LABEL_25;
    goto LABEL_24;
  }
  if (v8 >> 49)
  {
    v8 >>= 28;
    v9 = 8;
    goto LABEL_23;
  }
  v9 = 6;
  if (v8 >> 42)
    goto LABEL_24;
LABEL_25:
  v10 = v9 + v7;
  v11 = __OFADD__(*v2, v10);
  v12 = *v2 + v10;
  if (v11)
    __break(1u);
  else
    *v2 = v12;
  return result;
}

void sub_1C210D7E0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C210D850(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v4 = BYTE6(a2);
  result = sub_1C20AB8F0(BYTE6(a2));
  v6 = v3 + result;
  if (__OFADD__(v3, result))
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = __OFADD__(v6, v4);
  v8 = v6 + v4;
  if (v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = __OFADD__(*v2, v8);
  v9 = *v2 + v8;
  if (v7)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x1C210D8C0);
  }
  *v2 = v9;
  return result;
}

uint64_t sub_1C210D8D8(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = 0;
    v10 = (unsigned int *)(result + 32);
    while (1)
    {
      v12 = *v10++;
      v11 = v12;
      if ((v12 & 0x80000000) != 0)
      {
        v13 = __OFADD__(v9, 10);
        v9 += 10;
        if (v13)
          goto LABEL_36;
      }
      else if (v11 > 0x7F)
      {
        if (v11 >> 28)
          v14 = 5;
        else
          v14 = 4;
        if (v11 < 0x200000)
          v14 = 3;
        if (v11 >= 0x4000)
          v15 = v14;
        else
          v15 = 2;
        v13 = __OFADD__(v9, v15);
        v9 += v15;
        if (v13)
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
      }
      else
      {
        v13 = __OFADD__(v9++, 1);
        if (v13)
          goto LABEL_36;
      }
      if (!--v8)
        goto LABEL_32;
    }
  }
  v9 = 0;
LABEL_32:
  result = sub_1C20AB8F0(v9);
  v16 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v13 = __OFADD__(v16, v9);
  v17 = v16 + v9;
  if (v13)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v13 = __OFADD__(*v2, v17);
  v18 = *v2 + v17;
  if (!v13)
  {
    *v2 = v18;
    return result;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C210D9F4(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = 0;
    v10 = (unint64_t *)(result + 32);
    while (1)
    {
      v12 = *v10++;
      v11 = v12;
      if (v12 < 0x80)
      {
        v13 = 1;
        goto LABEL_27;
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        v13 = 10;
        goto LABEL_27;
      }
      if (v11 >> 35)
      {
        if (v11 >> 49)
        {
          v11 >>= 28;
          v13 = 8;
LABEL_25:
          if (!(v11 >> 28))
            goto LABEL_27;
LABEL_26:
          ++v13;
          goto LABEL_27;
        }
        v13 = 6;
        if (v11 >> 42)
          goto LABEL_26;
      }
      else
      {
        if (v11 >= 0x200000)
        {
          v13 = 4;
          goto LABEL_25;
        }
        v13 = 2;
        if (v11 >= 0x4000)
          goto LABEL_26;
      }
LABEL_27:
      v14 = __OFADD__(v9, v13);
      v9 += v13;
      if (v14)
      {
        __break(1u);
        goto LABEL_36;
      }
      if (!--v8)
        goto LABEL_31;
    }
  }
  v9 = 0;
LABEL_31:
  result = sub_1C20AB8F0(v9);
  v15 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v14 = __OFADD__(v15, v9);
  v16 = v15 + v9;
  if (v14)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v14 = __OFADD__(*v2, v16);
  v17 = *v2 + v16;
  if (!v14)
  {
    *v2 = v17;
    return result;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C210DB2C(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int *v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = 0;
    v10 = (int *)(result + 32);
    while (1)
    {
      v11 = *v10++;
      v12 = (2 * v11) ^ (v11 >> 31);
      if (v12 >= 0x80)
      {
        if (v12 >> 14)
        {
          if (v12 >= 0x200000)
            v13 = v12 >> 28 ? 5 : 4;
          else
            v13 = 3;
        }
        else
        {
          v13 = 2;
        }
      }
      else
      {
        v13 = 1;
      }
      v14 = __OFADD__(v9, v13);
      v9 += v13;
      if (v14)
        break;
      if (!--v8)
        goto LABEL_25;
    }
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 0;
LABEL_25:
  result = sub_1C20AB8F0(v9);
  v15 = v7 + result;
  if (__OFADD__(v7, result))
    goto LABEL_30;
  v14 = __OFADD__(v15, v9);
  v16 = v15 + v9;
  if (v14)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v14 = __OFADD__(*v2, v16);
  v17 = *v2 + v16;
  if (!v14)
  {
    *v2 = v17;
    return result;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C210DC3C(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = 0;
    v10 = (uint64_t *)(result + 32);
    while (1)
    {
      v11 = *v10++;
      v12 = (2 * v11) ^ (v11 >> 63);
      if (v12 < 0x80)
      {
        v13 = 1;
        goto LABEL_27;
      }
      if ((v12 & 0x8000000000000000) != 0)
      {
        v13 = 10;
        goto LABEL_27;
      }
      if (v12 >> 35)
      {
        if (v12 >> 49)
        {
          v12 >>= 28;
          v13 = 8;
LABEL_25:
          if (!(v12 >> 28))
            goto LABEL_27;
LABEL_26:
          ++v13;
          goto LABEL_27;
        }
        v13 = 6;
        if (v12 >> 42)
          goto LABEL_26;
      }
      else
      {
        if (v12 >= 0x200000)
        {
          v13 = 4;
          goto LABEL_25;
        }
        v13 = 2;
        if (v12 >= 0x4000)
          goto LABEL_26;
      }
LABEL_27:
      v14 = __OFADD__(v9, v13);
      v9 += v13;
      if (v14)
      {
        __break(1u);
        goto LABEL_36;
      }
      if (!--v8)
        goto LABEL_31;
    }
  }
  v9 = 0;
LABEL_31:
  result = sub_1C20AB8F0(v9);
  v15 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v14 = __OFADD__(v15, v9);
  v16 = v15 + v9;
  if (v14)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v14 = __OFADD__(*v2, v16);
  v17 = *v2 + v16;
  if (!v14)
  {
    *v2 = v17;
    return result;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C210DD7C(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8)
  {
    v9 = 0;
    v10 = (unsigned int *)(result + 32);
    while (1)
    {
      v12 = *v10++;
      v11 = v12;
      if (v12 >= 0x80)
      {
        v14 = v11 >> 14;
        v15 = v11 >> 28 ? 5 : 4;
        v13 = v11 >= 0x200000 ? v15 : 3;
        if (!v14)
          v13 = 2;
      }
      else
      {
        v13 = 1;
      }
      v16 = __OFADD__(v9, v13);
      v9 += v13;
      if (v16)
        break;
      if (!--v8)
        goto LABEL_26;
    }
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v9 = 0;
LABEL_26:
  result = sub_1C20AB8F0(v9);
  v17 = v7 + result;
  if (__OFADD__(v7, result))
    goto LABEL_31;
  v16 = __OFADD__(v17, v9);
  v18 = v17 + v9;
  if (v16)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v16 = __OFADD__(*v2, v18);
  v19 = *v2 + v18;
  if (!v16)
  {
    *v2 = v19;
    return result;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C210DE80(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8 >> 61)
  {
    __break(1u);
    goto LABEL_16;
  }
  v9 = 4 * v8;
  result = sub_1C20AB8F0(4 * v8);
  v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = __OFADD__(v10, v9);
  v12 = v10 + v9;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = __OFADD__(*v2, v12);
  v13 = *v2 + v12;
  if (!v11)
  {
    *v2 = v13;
    return result;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C210DF2C(uint64_t result, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(result + 16);
  if (v8 >> 60)
  {
    __break(1u);
    goto LABEL_16;
  }
  v9 = 8 * v8;
  result = sub_1C20AB8F0(8 * v8);
  v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = __OFADD__(v10, v9);
  v12 = v10 + v9;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = __OFADD__(*v2, v12);
  v13 = *v2 + v12;
  if (!v11)
  {
    *v2 = v13;
    return result;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C210DFD8(uint64_t a1, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;

  v3 = 8 * a2;
  v4 = 2;
  v5 = 3;
  v6 = 4;
  if ((8 * a2) >> 28)
    v6 = 5;
  if (v3 >= 0x200000)
    v5 = v6;
  if ((8 * a2) >> 14)
    v4 = v5;
  if (v3 >= 0x80)
    v7 = v4;
  else
    v7 = 1;
  v8 = *(_QWORD *)(a1 + 16);
  result = sub_1C20AB8F0(v8);
  v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = __OFADD__(v10, v8);
  v12 = v10 + v8;
  if (v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v11 = __OFADD__(*v2, v12);
  v13 = *v2 + v12;
  if (!v11)
  {
    *v2 = v13;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C210E074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = v4;
  v33 = a4;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 8 * v13;
  v15 = 2;
  v16 = 3;
  v17 = 4;
  if ((8 * v13) >> 28)
    v17 = 5;
  if (v14 >= 0x200000)
    v16 = v17;
  if (v14 >> 14)
    v15 = v16;
  if (v14 >= 0x80)
    v18 = v15;
  else
    v18 = 1;
  result = MEMORY[0x1C3BB7A48](v10, v11);
  v20 = result * v18;
  if ((unsigned __int128)(result * (__int128)v18) >> 64 == (result * v18) >> 63)
  {
    v21 = __OFADD__(*v5, v20);
    v22 = *v5 + v20;
    if (v21)
      goto LABEL_37;
    *v5 = v22;
    v23 = swift_bridgeObjectRetain();
    if (!MEMORY[0x1C3BB7A60](v23, a3))
      return swift_bridgeObjectRelease();
    v32 = v9;
    v24 = 0;
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 40);
    while (1)
    {
      v26 = sub_1C21755C4();
      sub_1C2175594();
      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v12, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v24, a3);
        v27 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_32;
      }
      else
      {
        result = sub_1C21756FC();
        if (v32 != 8)
          goto LABEL_38;
        v34 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v12, &v34, a3);
        swift_unknownObjectRelease();
        v27 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_32:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v28 = v25(a3, v33);
      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, a3);
      if ((v28 & 0x80000000) != 0)
      {
        v29 = 10;
      }
      else if (v28 > 0x7F)
      {
        if (v28 >= 0x4000)
        {
          if (v28 >= 0x200000)
          {
            v29 = 4;
            if (v28 >> 28)
              v29 = 5;
          }
          else
          {
            v29 = 3;
          }
        }
        else
        {
          v29 = 2;
        }
      }
      else
      {
        v29 = 1;
      }
      v21 = __OFADD__(*v5, v29);
      v30 = *v5 + v29;
      if (v21)
        break;
      *v5 = v30;
      ++v24;
      if (v27 == MEMORY[0x1C3BB7A60](a1, a3))
        return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C210E2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a4;
  v7 = a2;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v33 = v11;
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v10;
  v13 = sub_1C21755F4();
  MEMORY[0x1C3BB7F64](MEMORY[0x1E0DEAF50], v13);
  result = sub_1C2175654();
  if ((result & 1) != 0)
    return result;
  v15 = 8 * v7;
  v16 = 2;
  v17 = 3;
  v18 = 4;
  if ((8 * v7) >> 28)
    v18 = 5;
  if (v15 >= 0x200000)
    v17 = v18;
  if ((8 * v7) >> 14)
    v16 = v17;
  if (v15 >= 0x80)
    v19 = v16;
  else
    v19 = 1;
  v20 = __OFADD__(*v4, v19);
  v21 = *v4 + v19;
  if (v20)
    goto LABEL_39;
  v32[0] = v4;
  v32[1] = v5;
  *v4 = v21;
  v22 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C3BB7A60](v22, a3))
  {
    v23 = 0;
    v24 = 0;
    v25 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 40);
    while (1)
    {
      v26 = sub_1C21755C4();
      sub_1C2175594();
      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v23, a3);
        v27 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_32;
      }
      else
      {
        result = sub_1C21756FC();
        if (v33 != 8)
          goto LABEL_42;
        v35 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 16))(v12, &v35, a3);
        swift_unknownObjectRelease();
        v27 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
      v28 = v25(a3, v34);
      result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a3);
      if ((v28 & 0x80000000) != 0)
      {
        v29 = 10;
      }
      else if (v28 > 0x7F)
      {
        if (v28 >= 0x4000)
        {
          if (v28 >= 0x200000)
          {
            v29 = 4;
            if (v28 >> 28)
              v29 = 5;
          }
          else
          {
            v29 = 3;
          }
        }
        else
        {
          v29 = 2;
        }
      }
      else
      {
        v29 = 1;
      }
      v20 = __OFADD__(v24, v29);
      v24 += v29;
      if (v20)
        break;
      ++v23;
      if (v27 == MEMORY[0x1C3BB7A60](a1, a3))
        goto LABEL_34;
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_33:
  v24 = 0;
LABEL_34:
  swift_bridgeObjectRelease();
  result = sub_1C20AB8F0(v24);
  v30 = result + v24;
  if (!__OFADD__(result, v24))
  {
    v20 = __OFADD__(*(_QWORD *)v32[0], v30);
    v31 = *(_QWORD *)v32[0] + v30;
    if (!v20)
    {
      *(_QWORD *)v32[0] = v31;
      return result;
    }
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C210E59C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t result;

  v5 = 8 * a2;
  v6 = 4;
  v7 = 6;
  v8 = 10;
  if (!((8 * a2) >> 28))
    v8 = 8;
  if (v5 >= 0x200000)
    v7 = v8;
  if ((8 * a2) >> 14)
    v6 = v7;
  if (v5 >= 0x80)
    v9 = v6;
  else
    v9 = 2;
  v10 = __OFADD__(*v4, v9);
  v11 = *v4 + v9;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *v4 = v11;
    return (*(uint64_t (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t))(a4 + 72))(v4, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298, a3);
  }
  return result;
}

uint64_t sub_1C210E634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a4;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v16 = (char *)&v31 - v15;
  v18 = 8 * v17;
  v19 = 2;
  v20 = 3;
  v21 = 4;
  if ((8 * v17) >> 28)
    v21 = 5;
  if (v18 >= 0x200000)
    v20 = v21;
  if (v18 >> 14)
    v19 = v20;
  if (v18 >= 0x80)
    v22 = v19;
  else
    v22 = 1;
  result = MEMORY[0x1C3BB7A48](v13, v14);
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  v24 = 2 * result * v22;
  if ((unsigned __int128)(2 * result * (__int128)v22) >> 64 != v24 >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  v25 = __OFADD__(*v4, v24);
  v26 = *v4 + v24;
  if (v25)
    goto LABEL_27;
  *v4 = v26;
  v27 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1C3BB7A60](v27, a3))
    return swift_bridgeObjectRelease();
  v31 = v9;
  v28 = 0;
  v32 = *(void (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v34 + 72);
  v33 = v4;
  while (1)
  {
    v29 = sub_1C21755C4();
    sub_1C2175594();
    if ((v29 & 1) == 0)
      break;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v16, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, a3);
    v30 = v28 + 1;
    if (__OFADD__(v28, 1))
      goto LABEL_23;
LABEL_17:
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v16, a3);
    v32(v33, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298, a3, v34);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a3);
    if (!v5)
    {
      ++v28;
      if (v30 != MEMORY[0x1C3BB7A60](a1, a3))
        continue;
    }
    return swift_bridgeObjectRelease();
  }
  result = sub_1C21756FC();
  if (v31 != 8)
    goto LABEL_28;
  v35 = result;
  (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v16, &v35, a3);
  swift_unknownObjectRelease();
  v30 = v28 + 1;
  if (!__OFADD__(v28, 1))
    goto LABEL_17;
LABEL_23:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C210E898(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  BOOL v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;

  v65 = a1;
  v72 = *(_QWORD *)(a6 + 8);
  v73 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v82 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v10);
  v80 = (char *)&v62 - v11;
  v76 = *(_QWORD *)(a5 + 8);
  v77 = a3;
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v12);
  v86 = (char *)&v62 - v15;
  v87 = v14;
  v88 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_1C2175690();
  v78 = *(_QWORD *)(v17 - 8);
  v79 = v17;
  v19 = MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v62 - v23;
  v25 = 8 * a2;
  if ((8 * a2) >= 0x80)
  {
    v26 = v65;
    v27 = v13;
    if (v25 >= 0x4000)
    {
      if (v25 >= 0x200000)
      {
        v33 = v25 >> 28 == 0;
        v32 = 4;
        if (!v33)
          v32 = 5;
      }
      else
      {
        v32 = 3;
      }
    }
    else
    {
      v32 = 2;
    }
    v63 = v32;
    if ((v65 & 0xC000000000000001) != 0)
      goto LABEL_3;
LABEL_11:
    v34 = -1 << *(_BYTE *)(v26 + 32);
    v29 = ~v34;
    v35 = *(_QWORD *)(v26 + 64);
    v66 = v26 + 64;
    v36 = -v34;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    else
      v37 = -1;
    v30 = v37 & v35;
    v31 = v26;
    goto LABEL_15;
  }
  v63 = 1;
  v26 = v65;
  v27 = v13;
  if ((v65 & 0xC000000000000001) == 0)
    goto LABEL_11;
LABEL_3:
  v28 = sub_1C217575C();
  v66 = 0;
  v29 = 0;
  v30 = 0;
  v31 = v28 | 0x8000000000000000;
LABEL_15:
  v68 = v31 & 0x7FFFFFFFFFFFFFFFLL;
  v64 = v29;
  v67 = (unint64_t)(v29 + 64) >> 6;
  v62 = v67 - 1;
  result = swift_bridgeObjectRetain();
  v39 = 0;
  v75 = v31;
  v69 = TupleTypeMetadata2;
  v70 = v24;
  v71 = v21;
  v81 = 0;
  if ((v31 & 0x8000000000000000) == 0)
    goto LABEL_20;
LABEL_16:
  if (sub_1C2175768())
  {
    sub_1C21757BC();
    swift_unknownObjectRelease();
    sub_1C21757BC();
    swift_unknownObjectRelease();
    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  v83 = v30;
  v84 = v81;
  while (1)
  {
    while (1)
    {
LABEL_29:
      v44 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v21, v40, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v24, v21, v79);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, TupleTypeMetadata2) == 1)
      {
        sub_1C2110118();
        swift_getAssociatedConformanceWitness();
        result = sub_1C21753D8();
        v60 = result * v63;
        if ((unsigned __int128)(result * (__int128)v63) >> 64 == (result * v63) >> 63)
        {
          v56 = __OFADD__(*v74, v60);
          v61 = *v74 + v60;
          if (!v56)
          {
            *v74 = v61;
            return result;
          }
          goto LABEL_73;
        }
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      v45 = &v24[*(int *)(TupleTypeMetadata2 + 48)];
      v46 = v24;
      v47 = v27;
      v48 = v86;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v86, v46, v87);
      v49 = v82;
      v50 = v80;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v80, v45, v88);
      v89 = 0;
      v51 = v85;
      (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v76 + 48))(v48, 1, &v89, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      if (v51)
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v80, v88);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v86, v87);
        return sub_1C2110118();
      }
      (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v72 + 48))(v50, 2, &v89, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      v52 = *(void (**)(char *, uint64_t))(v49 + 8);
      v85 = 0;
      v53 = v89;
      v52(v50, v88);
      v27 = v47;
      result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v86, v87);
      if (v53 < 0x80)
      {
        v54 = 1;
        v55 = v74;
        v24 = v70;
        v21 = v71;
LABEL_39:
        TupleTypeMetadata2 = v69;
        v31 = v75;
        goto LABEL_40;
      }
      v55 = v74;
      v24 = v70;
      v21 = v71;
      if ((v53 & 0x8000000000000000) != 0)
      {
        v54 = 10;
        goto LABEL_39;
      }
      TupleTypeMetadata2 = v69;
      v31 = v75;
      if (v53 >> 35)
      {
        if (v53 >> 49)
        {
          v54 = 8;
          if (!HIBYTE(v53))
            goto LABEL_40;
        }
        else
        {
          v54 = 6;
          if (!(v53 >> 42))
            goto LABEL_40;
        }
      }
      else if (v53 >= 0x200000)
      {
        v54 = 4;
        if (!(v53 >> 28))
          goto LABEL_40;
      }
      else
      {
        v54 = 2;
        if (v53 < 0x4000)
          goto LABEL_40;
      }
      ++v54;
LABEL_40:
      v56 = __OFADD__(v54, v53);
      v57 = v54 + v53;
      if (v56)
      {
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v56 = __OFADD__(*v55, v57);
      v58 = *v55 + v57;
      if (v56)
        goto LABEL_70;
      *v55 = v58;
      v30 = v83;
      v39 = v84;
      v81 = v84;
      if ((v31 & 0x8000000000000000) != 0)
        goto LABEL_16;
LABEL_20:
      if (v30)
      {
        v83 = (v30 - 1) & v30;
        v84 = v39;
        v41 = __clz(__rbit64(v30)) | (v39 << 6);
        goto LABEL_22;
      }
      v42 = v39 + 1;
      if (__OFADD__(v39, 1))
        goto LABEL_71;
      if (v42 >= v67)
      {
        v83 = 0;
        v84 = v39;
        goto LABEL_28;
      }
      v43 = *(_QWORD *)(v66 + 8 * v42);
      if (!v43)
        break;
LABEL_26:
      v83 = (v43 - 1) & v43;
      v84 = v42;
      v41 = __clz(__rbit64(v43)) + (v42 << 6);
LABEL_22:
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v21, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v27 + 72) * v41, v87);
      (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(&v21[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v31 + 56) + *(_QWORD *)(v82 + 72) * v41, v88);
      v40 = 0;
    }
    if (v39 + 2 >= v67)
    {
      v83 = 0;
      v84 = v39 + 1;
      goto LABEL_28;
    }
    v43 = *(_QWORD *)(v66 + 8 * (v39 + 2));
    if (v43)
    {
      v42 = v39 + 2;
      goto LABEL_26;
    }
    v59 = v39 + 3;
    if (v39 + 3 < v67)
      break;
    v83 = 0;
    v84 = v39 + 2;
LABEL_28:
    v40 = 1;
  }
  v43 = *(_QWORD *)(v66 + 8 * v59);
  if (v43)
  {
    v42 = v39 + 3;
    goto LABEL_26;
  }
  while (1)
  {
    v42 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
    if (v42 >= v67)
    {
      v83 = 0;
      v40 = 1;
      v84 = v62;
      goto LABEL_29;
    }
    v43 = *(_QWORD *)(v66 + 8 * v42);
    ++v59;
    if (v43)
      goto LABEL_26;
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1C210EFEC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  int v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  int64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  BOOL v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  unint64_t v91;

  v76 = a6;
  v8 = a2;
  v86 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = *(_QWORD *)(v12 + 8);
  v81 = v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, AssociatedTypeWitness);
  v77 = (char *)&v68 - v16;
  v18 = v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = sub_1C2175690();
  v82 = *(_QWORD *)(v20 - 8);
  v83 = v20;
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v25);
  v85 = (char *)&v68 - v26;
  v27 = 8 * v8;
  if ((8 * v8) >= 0x80)
  {
    if (v27 >= 0x4000)
    {
      if (v27 >= 0x200000)
      {
        v29 = v27 >> 28 == 0;
        v28 = 4;
        if (!v29)
          v28 = 5;
      }
      else
      {
        v28 = 3;
      }
    }
    else
    {
      v28 = 2;
    }
  }
  else
  {
    v28 = 1;
  }
  v69 = v28;
  v87 = a4;
  v78 = v6;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v30 = sub_1C217575C();
    v72 = 0;
    v31 = 0;
    v32 = 0;
    v33 = v30 | 0x8000000000000000;
  }
  else
  {
    v34 = -1 << *(_BYTE *)(a1 + 32);
    v31 = ~v34;
    v35 = *(_QWORD *)(a1 + 64);
    v72 = a1 + 64;
    v36 = -v34;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    else
      v37 = -1;
    v32 = v37 & v35;
    v33 = a1;
  }
  v71 = v31;
  v73 = (unint64_t)(v31 + 64) >> 6;
  v74 = v33 & 0x7FFFFFFFFFFFFFFFLL;
  v68 = v73 - 1;
  v70 = a1;
  result = swift_bridgeObjectRetain();
  v39 = 0;
  v40 = v18;
  v41 = v85;
  v79 = v33;
  v75 = v24;
  v84 = 0;
  if ((v33 & 0x8000000000000000) == 0)
    goto LABEL_20;
LABEL_16:
  if (sub_1C2175768())
  {
    sub_1C21757BC();
    swift_unknownObjectRelease();
    sub_1C21757BC();
    swift_unknownObjectRelease();
    v42 = 0;
  }
  else
  {
    v42 = 1;
  }
  v41 = v85;
  v88 = v32;
  v89 = v84;
  while (1)
  {
    while (1)
    {
LABEL_29:
      v47 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v24, v42, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v41, v24, v83);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v41, 1, TupleTypeMetadata2) == 1)
      {
        sub_1C2110118();
        swift_getAssociatedConformanceWitness();
        result = sub_1C21753D8();
        v66 = result * v69;
        if ((unsigned __int128)(result * (__int128)v69) >> 64 == (result * v69) >> 63)
        {
          v62 = __OFADD__(*v78, v66);
          v67 = *v78 + v66;
          if (!v62)
          {
            *v78 = v67;
            return result;
          }
          goto LABEL_72;
        }
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v48 = TupleTypeMetadata2;
      v49 = &v41[*(int *)(TupleTypeMetadata2 + 48)];
      v50 = v41;
      v51 = v77;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v77, v50, v40);
      v52 = v86;
      v53 = v11;
      v54 = (uint64_t)v11;
      v55 = v40;
      v56 = v87;
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v53, v49, v87);
      v91 = 0;
      v57 = v90;
      (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v80 + 48))(v51, 1, &v91, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      if (v57)
      {
        v90 = v57;
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v56);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v51, v55);
        return sub_1C2110118();
      }
      sub_1C20AE610(v54, 2, v56, v76);
      v90 = 0;
      v58 = v91;
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v56);
      result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v51, v55);
      v40 = v55;
      if (v58 < 0x80)
      {
        v59 = 1;
        v60 = v78;
        v33 = v79;
        v11 = (char *)v54;
        TupleTypeMetadata2 = v48;
        v24 = v75;
        v41 = v85;
        goto LABEL_46;
      }
      v60 = v78;
      v33 = v79;
      v41 = v85;
      if ((v58 & 0x8000000000000000) != 0)
      {
        v59 = 10;
        v11 = (char *)v54;
        TupleTypeMetadata2 = v48;
        v24 = v75;
        goto LABEL_46;
      }
      if (v58 >> 35)
      {
        v11 = (char *)v54;
        if (!(v58 >> 49))
        {
          v59 = 6;
          TupleTypeMetadata2 = v48;
          v24 = v75;
          if (!(v58 >> 42))
            goto LABEL_46;
LABEL_45:
          ++v59;
          goto LABEL_46;
        }
        v61 = v58 >> 28;
        v59 = 8;
LABEL_44:
        TupleTypeMetadata2 = v48;
        v24 = v75;
        if (!(v61 >> 28))
          goto LABEL_46;
        goto LABEL_45;
      }
      v11 = (char *)v54;
      if (v58 >= 0x200000)
      {
        v59 = 4;
        v61 = v58;
        goto LABEL_44;
      }
      v59 = 2;
      TupleTypeMetadata2 = v48;
      v24 = v75;
      if (v58 >= 0x4000)
        goto LABEL_45;
LABEL_46:
      v62 = __OFADD__(v59, v58);
      v63 = v59 + v58;
      if (v62)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      v62 = __OFADD__(*v60, v63);
      v64 = *v60 + v63;
      if (v62)
        goto LABEL_69;
      *v60 = v64;
      v32 = v88;
      v39 = v89;
      v84 = v89;
      if ((v33 & 0x8000000000000000) != 0)
        goto LABEL_16;
LABEL_20:
      if (v32)
      {
        v43 = v11;
        v88 = (v32 - 1) & v32;
        v89 = v39;
        v44 = __clz(__rbit64(v32)) | (v39 << 6);
        goto LABEL_22;
      }
      v45 = v39 + 1;
      if (__OFADD__(v39, 1))
        goto LABEL_70;
      if (v45 >= v73)
      {
        v88 = 0;
        v89 = v39;
        goto LABEL_28;
      }
      v46 = *(_QWORD *)(v72 + 8 * v45);
      if (!v46)
        break;
LABEL_26:
      v43 = v11;
      v88 = (v46 - 1) & v46;
      v89 = v45;
      v44 = __clz(__rbit64(v46)) + (v45 << 6);
LABEL_22:
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v24, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v15 + 72) * v44, v40);
      (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(&v24[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v33 + 56) + *(_QWORD *)(v86 + 72) * v44, v87);
      v42 = 0;
      v11 = v43;
    }
    if (v39 + 2 >= v73)
    {
      v88 = 0;
      v89 = v39 + 1;
      goto LABEL_28;
    }
    v46 = *(_QWORD *)(v72 + 8 * (v39 + 2));
    if (v46)
    {
      v45 = v39 + 2;
      goto LABEL_26;
    }
    v65 = v39 + 3;
    if (v39 + 3 < v73)
      break;
    v88 = 0;
    v89 = v39 + 2;
LABEL_28:
    v42 = 1;
  }
  v46 = *(_QWORD *)(v72 + 8 * v65);
  if (v46)
  {
    v45 = v39 + 3;
    goto LABEL_26;
  }
  while (1)
  {
    v45 = v65 + 1;
    if (__OFADD__(v65, 1))
      break;
    if (v45 >= v73)
    {
      v88 = 0;
      v42 = 1;
      v89 = v68;
      goto LABEL_29;
    }
    v46 = *(_QWORD *)(v72 + 8 * v45);
    ++v65;
    if (v46)
      goto LABEL_26;
  }
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_1C210F6C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  char *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  int64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  BOOL v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  char *v90;
  unint64_t v91;

  v8 = v7;
  v74 = a6;
  v10 = a2;
  v82 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v84 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = *(_QWORD *)(v13 + 8);
  v78 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v17);
  v90 = (char *)&v66 - v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = sub_1C2175690();
  v79 = *(_QWORD *)(v20 - 8);
  v80 = v20;
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v81 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v24);
  v83 = (char *)&v66 - v25;
  v26 = 8 * v10;
  if ((8 * v10) >= 0x80)
  {
    v27 = v81;
    if (v26 >= 0x4000)
    {
      if (v26 >= 0x200000)
      {
        v29 = v26 >> 28 == 0;
        v28 = 4;
        if (!v29)
          v28 = 5;
      }
      else
      {
        v28 = 3;
      }
    }
    else
    {
      v28 = 2;
    }
    v68 = v28;
  }
  else
  {
    v68 = 1;
    v27 = v81;
  }
  v87 = a4;
  v75 = v6;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v30 = sub_1C217575C();
    v71 = 0;
    v31 = 0;
    v32 = 0;
    v33 = v30 | 0x8000000000000000;
  }
  else
  {
    v34 = -1 << *(_BYTE *)(a1 + 32);
    v31 = ~v34;
    v35 = *(_QWORD *)(a1 + 64);
    v71 = a1 + 64;
    v36 = -v34;
    if (v36 < 64)
      v37 = ~(-1 << v36);
    else
      v37 = -1;
    v32 = v37 & v35;
    v33 = a1;
  }
  v38 = v82;
  v70 = v31;
  v72 = (unint64_t)(v31 + 64) >> 6;
  v73 = v33 & 0x7FFFFFFFFFFFFFFFLL;
  v67 = v72 - 1;
  v69 = a1;
  result = swift_bridgeObjectRetain();
  v40 = 0;
  v41 = v83;
  v76 = v33;
  v85 = 0;
  v86 = v32;
  if ((v33 & 0x8000000000000000) == 0)
    goto LABEL_21;
LABEL_17:
  if (sub_1C2175768())
  {
    sub_1C21757BC();
    swift_unknownObjectRelease();
    sub_1C21757BC();
    swift_unknownObjectRelease();
    v42 = 0;
  }
  else
  {
    v42 = 1;
  }
  v88 = v86;
  v89 = v85;
  while (1)
  {
    while (1)
    {
LABEL_30:
      v46 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v27, v42, 1, TupleTypeMetadata2);
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v41, v27, v80);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v41, 1, TupleTypeMetadata2) == 1)
      {
        sub_1C2110118();
        swift_getAssociatedConformanceWitness();
        result = sub_1C21753D8();
        v64 = result * v68;
        if ((unsigned __int128)(result * (__int128)v68) >> 64 == (result * v68) >> 63)
        {
          v60 = __OFADD__(*v75, v64);
          v65 = *v75 + v64;
          if (!v60)
          {
            *v75 = v65;
            return result;
          }
          goto LABEL_72;
        }
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v47 = TupleTypeMetadata2;
      v48 = &v41[*(int *)(TupleTypeMetadata2 + 48)];
      v49 = v41;
      v50 = v16;
      v51 = v90;
      v52 = AssociatedTypeWitness;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v90, v49, AssociatedTypeWitness);
      v53 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v54 = v38;
      v55 = (uint64_t)v84;
      v56 = v87;
      v53(v84, v48, v87);
      v91 = 0;
      (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v77 + 48))(v51, 1, &v91, &type metadata for BinaryEncodingSizeVisitor, &off_1E7BDD298);
      if (v8)
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v84, v87);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v90, v52);
        return sub_1C2110118();
      }
      sub_1C20AE31C(v55, 2, v56, v74);
      v8 = 0;
      v57 = v91;
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v56);
      v16 = v50;
      AssociatedTypeWitness = v52;
      result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v90, v52);
      if (v57 < 0x80)
      {
        v58 = 1;
        v59 = v75;
        v33 = v76;
        v27 = v81;
        v38 = v82;
        TupleTypeMetadata2 = v47;
        v41 = v83;
        v40 = v89;
        goto LABEL_47;
      }
      v59 = v75;
      v33 = v76;
      v27 = v81;
      v38 = v82;
      TupleTypeMetadata2 = v47;
      v41 = v83;
      v40 = v89;
      if ((v57 & 0x8000000000000000) != 0)
      {
        v58 = 10;
        goto LABEL_47;
      }
      if (!(v57 >> 35))
      {
        if (v57 < 0x200000)
        {
          v58 = 2;
          if (v57 >= 0x4000)
            goto LABEL_46;
          goto LABEL_47;
        }
        v58 = 4;
        if (!(v57 >> 28))
          goto LABEL_47;
LABEL_46:
        ++v58;
        goto LABEL_47;
      }
      if (v57 >> 49)
      {
        v58 = 8;
        if (!HIBYTE(v57))
          goto LABEL_47;
        goto LABEL_46;
      }
      v58 = 6;
      if (v57 >> 42)
        goto LABEL_46;
LABEL_47:
      v60 = __OFADD__(v58, v57);
      v61 = v58 + v57;
      if (v60)
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      v60 = __OFADD__(*v59, v61);
      v62 = *v59 + v61;
      if (v60)
        goto LABEL_69;
      *v59 = v62;
      v32 = v88;
      v85 = v40;
      v86 = v88;
      if ((v33 & 0x8000000000000000) != 0)
        goto LABEL_17;
LABEL_21:
      if (v32)
      {
        v88 = (v32 - 1) & v32;
        v89 = v40;
        v43 = __clz(__rbit64(v32)) | (v40 << 6);
        goto LABEL_23;
      }
      v44 = v40 + 1;
      if (__OFADD__(v40, 1))
        goto LABEL_70;
      if (v44 >= v72)
      {
        v88 = 0;
        v89 = v40;
        goto LABEL_29;
      }
      v45 = *(_QWORD *)(v71 + 8 * v44);
      if (!v45)
        break;
LABEL_27:
      v88 = (v45 - 1) & v45;
      v89 = v44;
      v43 = __clz(__rbit64(v45)) + (v44 << 6);
LABEL_23:
      (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v27, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v16 + 72) * v43, AssociatedTypeWitness);
      (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(&v27[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v33 + 56) + *(_QWORD *)(v38 + 72) * v43, v87);
      v42 = 0;
    }
    if (v40 + 2 >= v72)
    {
      v88 = 0;
      v89 = v40 + 1;
      goto LABEL_29;
    }
    v45 = *(_QWORD *)(v71 + 8 * (v40 + 2));
    if (v45)
    {
      v44 = v40 + 2;
      goto LABEL_27;
    }
    v63 = v40 + 3;
    if (v40 + 3 < v72)
      break;
    v88 = 0;
    v89 = v40 + 2;
LABEL_29:
    v42 = 1;
  }
  v45 = *(_QWORD *)(v71 + 8 * v63);
  if (v45)
  {
    v44 = v40 + 3;
    goto LABEL_27;
  }
  while (1)
  {
    v44 = v63 + 1;
    if (__OFADD__(v63, 1))
      break;
    if (v44 >= v72)
    {
      v88 = 0;
      v42 = 1;
      v89 = v67;
      goto LABEL_30;
    }
    v45 = *(_QWORD *)(v71 + 8 * v44);
    ++v63;
    if (v45)
      goto LABEL_27;
  }
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_1C210FD78(uint64_t a1)
{
  return sub_1C21100C4(a1);
}

uint64_t sub_1C210FD8C(uint64_t a1, int a2)
{
  return sub_1C210D678(a1, a2);
}

uint64_t sub_1C210FDA0(uint64_t a1, int a2)
{
  return sub_1C210D710(a1, a2);
}

uint64_t sub_1C210FDB4(uint64_t a1, uint64_t a2)
{
  return sub_1C21100C4(a2);
}

uint64_t sub_1C210FDCC(uint64_t a1, uint64_t a2)
{
  return sub_1C20AE218(a2);
}

void sub_1C210FDE4(uint64_t a1, uint64_t a2)
{
  sub_1C210D7E0(a1, a2);
}

uint64_t sub_1C210FDF8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210E59C(a1, a2, a3, a4);
}

uint64_t sub_1C210FE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210E074(a1, a2, a3, a4);
}

uint64_t sub_1C210FE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210E634(a1, a2, a3, a4);
}

uint64_t sub_1C210FE34(uint64_t a1, int a2)
{
  return sub_1C210DE80(a1, a2);
}

uint64_t sub_1C210FE48(uint64_t a1, int a2)
{
  return sub_1C210DF2C(a1, a2);
}

uint64_t sub_1C210FE5C(uint64_t a1, int a2)
{
  return sub_1C210D8D8(a1, a2);
}

uint64_t sub_1C210FE70(uint64_t a1, int a2)
{
  return sub_1C210D9F4(a1, a2);
}

uint64_t sub_1C210FE84(uint64_t a1, int a2)
{
  return sub_1C210DD7C(a1, a2);
}

uint64_t sub_1C210FE98(uint64_t a1, int a2)
{
  return sub_1C210DB2C(a1, a2);
}

uint64_t sub_1C210FEAC(uint64_t a1, int a2)
{
  return sub_1C210DC3C(a1, a2);
}

uint64_t sub_1C210FEC0(uint64_t a1, int a2)
{
  return sub_1C210DFD8(a1, a2);
}

uint64_t sub_1C210FED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210E2E4(a1, a2, a3, a4);
}

uint64_t sub_1C210FEE8(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C210E898(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C210FEFC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C210EFEC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C210FF10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C210F6C0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C210FF24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a1;
  v7 = 0;
  result = sub_1C21314AC((uint64_t)&v7, a2, a3, v5);
  if (!v4)
  {
    if (__OFADD__(*v3, v7))
      __break(1u);
    else
      *v3 += v7;
  }
  return result;
}

uint64_t sub_1C210FF68(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_1C210FF78 + *((int *)qword_1C210FFD0 + (a2 >> 62))))();
}

void sub_1C210FF88(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  if (__OFADD__(*v2, BYTE6(a2)))
  {
    __break(1u);
    JUMPOUT(0x1C210FFC8);
  }
  *v2 += BYTE6(a2);
}

unint64_t sub_1C210FFE0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;

  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = v4;
  result = sub_1C20AB834(a2);
  v9 = result + 4;
  if (__OFADD__(result, 4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  result = sub_1C20AB704(a3, a4);
  if (v5)
    return result;
  v10 = result;
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_14;
  result = sub_1C20AB878(result);
  v11 = result + v10;
  if (__OFADD__(result, v10))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v12 = __OFADD__(v9, v11);
  v13 = v9 + v11;
  if (v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = __OFADD__(*v6, v13);
  v14 = *v6 + v13;
  if (v12)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  *v6 = v14;
  return result;
}

unint64_t sub_1C21100B0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C210FFE0(a1, a2, a3, a4);
}

uint64_t sub_1C21100C4(uint64_t result)
{
  _QWORD *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  v2 = 8 * result;
  v3 = 6;
  v4 = 7;
  v5 = 8;
  if ((8 * result) >> 28)
    v5 = 9;
  if (v2 >= 0x200000)
    v4 = v5;
  if ((8 * result) >> 14)
    v3 = v4;
  if (v2 >= 0x80)
    v6 = v3;
  else
    v6 = 5;
  v7 = __OFADD__(*v1, v6);
  v8 = *v1 + v6;
  if (v7)
    __break(1u);
  else
    *v1 = v8;
  return result;
}

uint64_t sub_1C2110118()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for BinaryEncodingSizeVisitor.BinaryEncodingMessageSetSizeVisitor()
{
  return &type metadata for BinaryEncodingSizeVisitor.BinaryEncodingMessageSetSizeVisitor;
}

uint64_t MessageExtension.fieldNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MessageExtension.fieldName.getter()
{
  uint64_t v0;

  v0 = sub_1C2110434();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t MessageExtension.messageType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t *MessageExtension.__allocating_init(_protobuf_fieldNumber:fieldName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = (uint64_t *)swift_allocObject();
  v7 = *result;
  result[2] = a1;
  result[3] = a2;
  v8 = *(_QWORD *)(v7 + 88);
  v9 = *(_QWORD *)(v7 + 104);
  result[4] = a3;
  result[5] = v8;
  result[6] = v9;
  return result;
}

uint64_t *MessageExtension.init(_protobuf_fieldNumber:fieldName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v3;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  v5 = *(_QWORD *)(v4 + 88);
  v6 = *(_QWORD *)(v4 + 104);
  v3[5] = v5;
  v3[6] = v6;
  return v3;
}

void sub_1C21101E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C2175690();
  MEMORY[0x1E0C80A78](v0, v1);
  type metadata accessor for MessageExtension();
}

uint64_t sub_1C2110280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;

  *(_QWORD *)(v8 - 96) = a1;
  *(_QWORD *)(v8 - 88) = &protocol witness table for MessageExtension<A, B>;
  *(_QWORD *)(v8 - 120) = v5;
  v9 = *(_QWORD *)(v8 - 144);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 64);
  swift_retain();
  v11 = *(_QWORD *)(v8 - 72);
  result = v10(v8 - 120, v1, v4, *(_QWORD *)(v8 - 128), v2, v9);
  if (!v11)
  {
    v13 = *(_QWORD *)(v8 - 152);
    v14 = *(_QWORD *)(v2 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v3, 1, v2) == 1)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
      *(_QWORD *)(v13 + 32) = 0;
      *(_OWORD *)v13 = 0u;
      *(_OWORD *)(v13 + 16) = 0u;
    }
    else
    {
      *(_QWORD *)(v13 + 24) = v2;
      *(_QWORD *)(v13 + 32) = *(_QWORD *)(v9 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v13);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 32))(boxed_opaque_existential_1, v3, v2);
    }
  }
  return result;
}

uint64_t MessageExtension.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MessageExtension.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C211039C()
{
  return MessageExtension.fieldNumber.getter();
}

uint64_t sub_1C21103BC()
{
  uint64_t v0;

  v0 = sub_1C2110434();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C21103F4()
{
  return MessageExtension.messageType.getter();
}

void sub_1C2110414()
{
  sub_1C21101E8();
}

uint64_t sub_1C2110434()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

void type metadata accessor for MessageExtension()
{
  JUMPOUT(0x1C3BB7F1CLL);
}

uint64_t dispatch thunk of AnyMessageExtension.fieldNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyMessageExtension.fieldName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyMessageExtension.messageType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyMessageExtension._protobuf_newField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1C211047C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MessageExtension()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessageExtension.__allocating_init(_protobuf_fieldNumber:fieldName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MessageExtension._protobuf_newField<A>(decoder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

double Google_Protobuf_SourceContext.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
  return result;
}

uint64_t Google_Protobuf_SourceContext.fileName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_SourceContext.fileName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_SourceContext.fileName.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceContext.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_SourceContext.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*Google_Protobuf_SourceContext.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static Google_Protobuf_SourceContext.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C21105F4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD47F0, &qword_1EF75FA90);
}

uint64_t static Google_Protobuf_SourceContext._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCB8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FA98;
  v3 = qword_1EF75FAA0;
  v4 = unk_1EF75FAA8;
  *a1 = qword_1EF75FA90;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  while (!v4 && (v9 & 1) == 0)
  {
    if (result == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
    result = v7(a2, a3);
  }
  return result;
}

void Google_Protobuf_SourceContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v5 = v3[1];
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v6 || ((*(void (**)(void))(a3 + 112))(), !v4))
    UnknownStorage.traverse<A>(visitor:)();
}

uint64_t Google_Protobuf_SourceContext.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE454(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

double sub_1C21107EC@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C2110804()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C2110820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t _s20SiriOntologyProtobuf07Google_C12_StringValueV13unknownFieldsAA14UnknownStorageVvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t sub_1C211085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_1C2110870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Google_Protobuf_SourceContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C2110884@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCB8 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FA98;
  v3 = qword_1EF75FAA0;
  v4 = unk_1EF75FAA8;
  *a1 = qword_1EF75FA90;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2110900()
{
  uint64_t v0;

  return sub_1C2159DB4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C211090C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE454(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

uint64_t sub_1C2110968(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C20BE454(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C2110974()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE454(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

uint64_t _s20SiriOntologyProtobuf07Google_C14_SourceContextV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  char v7;
  char v8;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1C21757C8() & 1) == 0)
    return 0;
  sub_1C20A8008(v2, v3);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v2, v3);
  v8 = v7;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v2, v3);
  return v8 & 1;
}

unint64_t sub_1C2110A80(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2110AA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2110AA4()
{
  unint64_t result;

  result = qword_1EF75FAB0;
  if (!qword_1EF75FAB0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceContext, &type metadata for Google_Protobuf_SourceContext);
    atomic_store(result, (unint64_t *)&qword_1EF75FAB0);
  }
  return result;
}

unint64_t sub_1C2110AE8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C20C4E54();
  result = sub_1C2110B14();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2110B14()
{
  unint64_t result;

  result = qword_1EF75FAB8;
  if (!qword_1EF75FAB8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceContext, &type metadata for Google_Protobuf_SourceContext);
    atomic_store(result, (unint64_t *)&qword_1EF75FAB8);
  }
  return result;
}

unint64_t sub_1C2110B5C()
{
  unint64_t result;

  result = qword_1EF75FAC0;
  if (!qword_1EF75FAC0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_SourceContext, &type metadata for Google_Protobuf_SourceContext);
    atomic_store(result, (unint64_t *)&qword_1EF75FAC0);
  }
  return result;
}

_QWORD *assignWithCopy for Google_Protobuf_SourceContext(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_1C20A8008(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1C20A8058(v6, v7);
  return a1;
}

_QWORD *assignWithTake for Google_Protobuf_SourceContext(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1C20A8058(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_SourceContext()
{
  return &type metadata for Google_Protobuf_SourceContext;
}

void sub_1C2110C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[4];
  uint64_t v10;

  sub_1C2175834();
  v6 = *(_QWORD *)(v3 + 64);
  v7 = *(_OWORD *)(v3 + 16);
  v9[0] = *(_OWORD *)v3;
  v9[1] = v7;
  v8 = *(_OWORD *)(v3 + 48);
  v9[2] = *(_OWORD *)(v3 + 32);
  v9[3] = v8;
  v10 = v6;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1C2175834();
    sub_1C2118064((uint64_t)v9, a1);
  }
  __asm { BR              X10 }
}

double sub_1C2110CE0()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  if ((v1 & 0xFF000000000000) != 0)
    sub_1C2175354();
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v4;
  result = *(double *)&v5;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v6;
  *(_QWORD *)(v0 + 64) = v7;
  return result;
}

uint64_t sub_1C2110D4C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t *v6;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)swift_bridgeObjectRetain();
    v3 = *(_QWORD *)(v6[6] + 32);
    v4 = *(unsigned __int8 *)(v6[6] + 40);
    if ((~v3 & 0x3000000000000000) == 0 && v4 == 255)
    {
      v5 = v6[5];
      sub_1C20A8008(v6[4], v5);
      swift_retain_n();
      swift_release();
      __asm { BR              X9 }
    }
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C2111214(_QWORD *a1)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  result = sub_1C2175834();
  if (a1[2])
  {
    swift_bridgeObjectRetain();
    v3 = a1 + 6;
    v4 = a1[4];
    v5 = (_QWORD *)a1[6];
    v14 = *(v3 - 1);
    v15 = v4;
    swift_beginAccess();
    v6 = v5[3];
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v5[2] & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      sub_1C2175834();
      v8 = v14;
      sub_1C20A8008(v15, v14);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = v14;
      sub_1C20A8008(v15, v14);
      swift_retain_n();
    }
    swift_beginAccess();
    v9 = v5[6];
    if (v9)
    {
      v11 = v5[4];
      v10 = v5[5];
      sub_1C2175834();
      swift_beginAccess();
      v12 = *(_QWORD *)(v9 + 24);
      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = *(_QWORD *)(v9 + 16) & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        sub_1C20C309C(v11, v10, v9);
        swift_bridgeObjectRetain();
        sub_1C21754C8();
        swift_bridgeObjectRelease();
        sub_1C20B8490(v11, v10, v9);
      }
    }
    swift_release();
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C21114CC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    v18 = a1 + 32;
    swift_bridgeObjectRetain();
    v3 = *(_QWORD *)(a1 + 32);
    v21 = *(_DWORD *)(v18 + 16);
    v5 = *(_QWORD **)(v18 + 24);
    v4 = *(_QWORD *)(v18 + 32);
    v6 = *(_QWORD *)(v18 + 40);
    v7 = *(_QWORD *)(v18 + 8);
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v3 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A8008(v4, v6);
      sub_1C21754C8();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A8008(v4, v6);
    }
    if (v21)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    if (v5[2])
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      v9 = (_QWORD *)v5[6];
      v19 = v5[5];
      v20 = v5[4];
      swift_beginAccess();
      v10 = v9[3];
      v11 = HIBYTE(v10) & 0xF;
      if ((v10 & 0x2000000000000000) == 0)
        v11 = v9[2] & 0xFFFFFFFFFFFFLL;
      if (v11)
      {
        sub_1C2175834();
        v12 = v19;
        sub_1C20A8008(v20, v19);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C21754C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v12 = v19;
        sub_1C20A8008(v20, v19);
        swift_retain_n();
      }
      swift_beginAccess();
      v13 = v9[6];
      if (v13)
      {
        v14 = v9[4];
        v15 = v9[5];
        sub_1C2175834();
        swift_beginAccess();
        v16 = *(_QWORD *)(v13 + 24);
        v17 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0)
          v17 = *(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFLL;
        if (v17)
        {
          sub_1C20C309C(v14, v15, v13);
          swift_bridgeObjectRetain();
          sub_1C21754C8();
          swift_bridgeObjectRelease();
          sub_1C20B8490(v14, v15, v13);
        }
      }
      swift_release();
      __asm { BR              X9 }
    }
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C2111964(_QWORD *a1)
{
  uint64_t result;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = sub_1C2175834();
  if (a1[2])
  {
    swift_bridgeObjectRetain();
    v3 = a1 + 9;
    v5 = a1[4];
    v4 = a1[5];
    v6 = a1[7];
    v12 = a1[6];
    v7 = a1[8];
    v8 = *v3;
    v9 = v4;
    v10 = HIBYTE(v4) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v5 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A8008(v7, v8);
      sub_1C21754C8();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C20A8008(v7, v8);
    }
    v11 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v11 = v12 & 0xFFFFFFFFFFFFLL;
    if (v11)
    {
      sub_1C2175834();
      sub_1C21754C8();
    }
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C2111BB8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 48);
    v5 = *(_QWORD *)(a1 + 64);
    v16 = *(_BYTE *)(a1 + 80);
    v17 = *(_BYTE *)(a1 + 96);
    v15 = *(_BYTE *)(a1 + 112);
    v6 = *(_QWORD *)(a1 + 120);
    v7 = *(_QWORD *)(a1 + 128);
    v8 = *(_QWORD *)(a1 + 144);
    v9 = *(_QWORD **)(a1 + 32);
    if (v9[2])
    {
      sub_1C2175834();
      if (v9[2])
      {
        swift_bridgeObjectRetain();
        sub_1C20A8008(v3, v4);
        swift_bridgeObjectRetain();
        sub_1C20FE40C(v6, v7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = (unsigned __int8 *)(v9 + 8);
        v11 = v9[4];
        v12 = v9[5];
        v13 = *v10;
        if (*((_QWORD *)v10 - 1))
        {
          sub_1C2175834();
          sub_1C20A8008(v11, v12);
          swift_bridgeObjectRetain();
          sub_1C21754C8();
          if (v13 == 2)
            goto LABEL_7;
        }
        else
        {
          sub_1C20A8008(v11, v12);
          if (v13 == 2)
LABEL_7:
            __asm { BR              X9 }
        }
        sub_1C2175834();
        sub_1C2175840();
        goto LABEL_7;
      }
      swift_bridgeObjectRetain();
      sub_1C20A8008(v3, v4);
      swift_bridgeObjectRetain();
      sub_1C20FE40C(v6, v7);
      swift_bridgeObjectRetain();
      v14 = v15;
      if (!v5)
      {
LABEL_12:
        if ((v16 & 1) != 0)
        {
          if ((v17 & 1) != 0)
            goto LABEL_14;
        }
        else
        {
          sub_1C2175834();
          sub_1C2175858();
          if ((v17 & 1) != 0)
          {
LABEL_14:
            if ((v14 & 1) != 0)
              goto LABEL_16;
            goto LABEL_15;
          }
        }
        sub_1C2175834();
        sub_1C2175858();
        if ((v14 & 1) != 0)
        {
LABEL_16:
          if (v7 >> 60 != 15)
          {
            sub_1C2175834();
            sub_1C20A8008(v6, v7);
            sub_1C2175354();
            sub_1C20AE1C8(v6, v7);
          }
          if (v8)
          {
            sub_1C2175834();
            sub_1C21754C8();
          }
          __asm { BR              X9 }
        }
LABEL_15:
        sub_1C2175834();
        sub_1C2175858();
        goto LABEL_16;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C20A8008(v3, v4);
      swift_bridgeObjectRetain();
      sub_1C20FE40C(v6, v7);
      swift_bridgeObjectRetain();
      v14 = v15;
      if (!v5)
        goto LABEL_12;
    }
    sub_1C2175834();
    sub_1C21754C8();
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1C211215C(uint64_t a1)
{
  uint64_t result;
  unsigned __int8 *v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  int v7;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v3 = (unsigned __int8 *)(a1 + 64);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *((_QWORD *)v3 - 3);
    if (*((_QWORD *)v3 - 1))
    {
      v6 = *v3;
      sub_1C2175834();
      sub_1C20A8008(v4, v5);
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      if (v6 == 2)
        goto LABEL_5;
    }
    else
    {
      v7 = *v3;
      sub_1C20A8008(v4, v5);
      if (v7 == 2)
LABEL_5:
        __asm { BR              X9 }
    }
    sub_1C2175834();
    sub_1C2175840();
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1C2112388(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  result = sub_1C2175834();
  v4 = a1[2];
  if (v4)
  {
    v5 = v1[8];
    v40 = v1[7];
    v6 = v1[5];
    v7 = v1[6];
    v9 = v1[3];
    v8 = v1[4];
    v10 = v1[1];
    v11 = v1[2];
    v12 = *v1;
    v13 = v5;
    swift_bridgeObjectRetain();
    v14 = v6;
    v15 = v7;
    v16 = v40;
    v40 = v4;
    v18 = a1[4];
    v17 = a1[5];
    v19 = a1[6];
    *(_QWORD *)&v35 = v12;
    *((_QWORD *)&v35 + 1) = v10;
    *(_QWORD *)&v36 = v11;
    *((_QWORD *)&v36 + 1) = v9;
    *(_QWORD *)&v37 = v8;
    *((_QWORD *)&v37 + 1) = v14;
    *(_QWORD *)&v38 = v15;
    *((_QWORD *)&v38 + 1) = v16;
    v39 = v13;
    swift_beginAccess();
    if (*(_QWORD *)(v19 + 24))
    {
      sub_1C2175834();
      sub_1C20A8008(v18, v17);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C20A8008(v18, v17);
      swift_retain_n();
    }
    swift_beginAccess();
    if (*(_QWORD *)(v19 + 40))
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (*(_QWORD *)(v19 + 56))
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v20 = *(_QWORD *)(v19 + 64);
    if (!v20)
    {
LABEL_20:
      swift_beginAccess();
      if (*(_BYTE *)(v19 + 98) != 2)
      {
        sub_1C2175834();
        sub_1C2175840();
      }
      swift_beginAccess();
      if (*(_BYTE *)(v19 + 99) != 2)
      {
        sub_1C2175834();
        sub_1C2175840();
      }
      swift_release();
      __asm { BR              X9 }
    }
    v28 = v17;
    v21 = *(_QWORD *)(v19 + 72);
    v22 = *(_QWORD *)(v19 + 80);
    v23 = *(_QWORD *)(v19 + 88);
    v24 = *(unsigned __int16 *)(v19 + 96);
    v25 = *(_WORD *)(v19 + 96);
    sub_1C2175834();
    v30 = v35;
    v31 = v36;
    v32 = v37;
    v33 = v38;
    v34 = v39;
    if (v25 != 2)
    {
      sub_1C2175834();
      sub_1C2175840();
    }
    if ((v24 >> 8) != 3)
    {
      sub_1C2175834();
      sub_1C2175834();
    }
    v26 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v21, v22);
    swift_bridgeObjectRetain();
    if (v26)
    {
      v27 = v29;
      sub_1C2111BB8(v20);
      if (v29)
      {
LABEL_19:
        MEMORY[0x1C3BB7EEC](v27);
        sub_1C20EC1EC(v20, v21, v22);
        v35 = v30;
        v36 = v31;
        v37 = v32;
        v38 = v33;
        v39 = v34;
        v17 = v28;
        goto LABEL_20;
      }
    }
    else
    {
      v27 = v29;
    }
    sub_1C2131194((uint64_t)&v30, 1000, 0x20000000, v23);
    if (!v27)
      __asm { BR              X9 }
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1C211282C(uint64_t a1, uint64_t a2)
{
  return sub_1C2114014(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C215C778);
}

uint64_t sub_1C2112848(uint64_t a1)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = *v1;
    v5 = v1[1];
    v6 = v1[2];
    v7 = v1[3];
    v8 = v1[4];
    v9 = v1[5];
    v10 = v1[6];
    v11 = v1[7];
    v37 = a1 + 32;
    v12 = v1[8];
    swift_bridgeObjectRetain();
    v13 = v5;
    v15 = *(_QWORD *)(a1 + 32);
    v14 = *(_QWORD *)(v37 + 8);
    v16 = *(_QWORD *)(v37 + 16);
    *(_QWORD *)&v50 = v4;
    *((_QWORD *)&v50 + 1) = v13;
    *(_QWORD *)&v51 = v6;
    *((_QWORD *)&v51 + 1) = v7;
    *(_QWORD *)&v52 = v8;
    *((_QWORD *)&v52 + 1) = v9;
    *(_QWORD *)&v53 = v10;
    *((_QWORD *)&v53 + 1) = v11;
    v17 = v16;
    v54 = v12;
    swift_beginAccess();
    if (*(_QWORD *)(v17 + 24))
    {
      sub_1C2175834();
      sub_1C20A8008(v15, v14);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C20A8008(v15, v14);
      swift_retain_n();
    }
    swift_beginAccess();
    v18 = *(_QWORD **)(v17 + 32);
    if (v18[2])
    {
      sub_1C2175834();
      if (v18[2])
      {
        v55 = v54;
        swift_bridgeObjectRetain_n();
        v19 = v18 + 6;
        v55 = v18[4];
        v20 = v18[6];
        v39 = *(v19 - 1);
        v45 = v50;
        v46 = v51;
        v47 = v52;
        v48 = v53;
        v49 = v54;
        swift_beginAccess();
        if (*(_QWORD *)(v20 + 24))
        {
          sub_1C2175834();
          v21 = v39;
          sub_1C20A8008(v55, v39);
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1C21754C8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v21 = v39;
          sub_1C20A8008(v55, v39);
          swift_retain_n();
        }
        swift_beginAccess();
        if (*(_QWORD *)(v20 + 40))
        {
          sub_1C2175834();
          swift_bridgeObjectRetain();
          sub_1C21754C8();
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        if (*(_QWORD *)(v20 + 56))
        {
          sub_1C2175834();
          swift_bridgeObjectRetain();
          sub_1C21754C8();
          swift_bridgeObjectRelease();
        }
        swift_beginAccess();
        v22 = *(_QWORD *)(v20 + 64);
        if (!v22)
        {
LABEL_26:
          swift_beginAccess();
          if (*(_BYTE *)(v20 + 98) != 2)
          {
            sub_1C2175834();
            sub_1C2175840();
          }
          swift_beginAccess();
          if (*(_BYTE *)(v20 + 99) != 2)
          {
            sub_1C2175834();
            sub_1C2175840();
          }
          swift_release();
          __asm { BR              X9 }
        }
        v24 = *(_QWORD *)(v20 + 72);
        v23 = *(_QWORD *)(v20 + 80);
        v25 = *(_QWORD *)(v20 + 88);
        v26 = *(unsigned __int16 *)(v20 + 96);
        v27 = *(_WORD *)(v20 + 96);
        sub_1C2175834();
        v40 = v45;
        v41 = v46;
        v42 = v47;
        v43 = v48;
        v44 = v49;
        if (v27 != 2)
        {
          sub_1C2175834();
          sub_1C2175840();
        }
        if ((v26 >> 8) != 3)
        {
          sub_1C2175834();
          sub_1C2175834();
        }
        v28 = *(_QWORD *)(v22 + 16);
        swift_bridgeObjectRetain();
        sub_1C20A8008(v24, v23);
        swift_bridgeObjectRetain();
        if (v28)
        {
          v29 = v38;
          sub_1C2111BB8(v22);
          if (v38)
          {
            MEMORY[0x1C3BB7EEC]();
            v21 = v39;
LABEL_25:
            sub_1C20EC1EC(v22, v24, v23);
            v45 = v40;
            v46 = v41;
            v47 = v42;
            v48 = v43;
            v49 = v44;
            goto LABEL_26;
          }
        }
        else
        {
          v29 = v38;
        }
        v21 = v39;
        sub_1C2131194((uint64_t)&v40, 1000, 0x20000000, v25);
        if (!v29)
          __asm { BR              X9 }
        MEMORY[0x1C3BB7EEC](v29);
        goto LABEL_25;
      }
    }
    swift_beginAccess();
    v30 = *(_QWORD *)(v17 + 40);
    if (!v30)
    {
LABEL_43:
      swift_release();
      __asm { BR              X9 }
    }
    v32 = *(_QWORD *)(v17 + 48);
    v31 = *(_QWORD *)(v17 + 56);
    v33 = *(_QWORD *)(v17 + 64);
    v34 = *(unsigned __int8 *)(v17 + 72);
    sub_1C2175834();
    v45 = v50;
    v46 = v51;
    v47 = v52;
    v48 = v53;
    v49 = v54;
    v55 = v32;
    if (v34 != 2)
    {
      sub_1C2175834();
      v32 = v55;
      sub_1C2175840();
    }
    v35 = *(_QWORD *)(v30 + 16);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v32, v31);
    swift_bridgeObjectRetain();
    if (v35)
    {
      v36 = v38;
      sub_1C2111BB8(v30);
      if (v38)
      {
        MEMORY[0x1C3BB7EEC]();
LABEL_42:
        sub_1C20EC1EC(v30, v55, v31);
        v50 = v45;
        v51 = v46;
        v52 = v47;
        v53 = v48;
        v54 = v49;
        goto LABEL_43;
      }
    }
    else
    {
      v36 = v38;
    }
    sub_1C2131194((uint64_t)&v45, 1000, 0x20000000, v33);
    if (!v36)
      __asm { BR              X9 }
    MEMORY[0x1C3BB7EEC](v36);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_1C2113084(uint64_t a1, uint64_t a2)
{
  return sub_1C2114014(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C215D294);
}

uint64_t sub_1C21130A0(uint64_t a1)
{
  return sub_1C21134C0(a1);
}

uint64_t sub_1C21130B4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  result = sub_1C2175834();
  v4 = a1[2];
  if (v4)
  {
    v38 = v1[8];
    v5 = v1[6];
    v27 = v1[7];
    v7 = v1[4];
    v6 = v1[5];
    v8 = v1[2];
    v9 = v1[3];
    v10 = *v1;
    v11 = v1[1];
    swift_bridgeObjectRetain();
    v12 = v6;
    v13 = v5;
    v14 = v38;
    v38 = v4;
    v15 = a1[4];
    v16 = a1[5];
    v17 = a1[6];
    *(_QWORD *)&v33 = v10;
    *((_QWORD *)&v33 + 1) = v11;
    *(_QWORD *)&v34 = v8;
    *((_QWORD *)&v34 + 1) = v9;
    *(_QWORD *)&v35 = v7;
    *((_QWORD *)&v35 + 1) = v12;
    *(_QWORD *)&v36 = v13;
    *((_QWORD *)&v36 + 1) = v27;
    v37 = v14;
    swift_beginAccess();
    if (*(_QWORD *)(v17 + 24))
    {
      sub_1C2175834();
      sub_1C20A8008(v15, v16);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C20A8008(v15, v16);
      swift_retain_n();
    }
    v18 = v16;
    swift_beginAccess();
    if ((*(_BYTE *)(v17 + 36) & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    swift_beginAccess();
    v19 = *(_QWORD *)(v17 + 40);
    if (!v19)
    {
LABEL_18:
      swift_release();
      __asm { BR              X9 }
    }
    v20 = *(_QWORD *)(v17 + 48);
    v21 = *(_QWORD *)(v17 + 56);
    v22 = *(_QWORD *)(v17 + 64);
    v23 = *(unsigned __int8 *)(v17 + 72);
    sub_1C2175834();
    v28 = v33;
    v29 = v34;
    v30 = v35;
    v31 = v36;
    v32 = v37;
    if (v23 != 2)
    {
      sub_1C2175834();
      sub_1C2175840();
    }
    v24 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v20, v21);
    swift_bridgeObjectRetain();
    if (v24)
    {
      v25 = v26;
      sub_1C2111BB8(v19);
      if (v26)
      {
        MEMORY[0x1C3BB7EEC]();
LABEL_17:
        sub_1C20EC1EC(v19, v20, v21);
        v33 = v28;
        v34 = v29;
        v35 = v30;
        v36 = v31;
        v37 = v32;
        goto LABEL_18;
      }
    }
    else
    {
      v25 = v26;
    }
    sub_1C2131194((uint64_t)&v28, 1000, 0x20000000, v22);
    if (!v25)
      __asm { BR              X9 }
    MEMORY[0x1C3BB7EEC](v25);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1C21134A4(uint64_t a1, uint64_t a2)
{
  return sub_1C2114014(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C215BEF8);
}

uint64_t sub_1C21134C0(uint64_t a1)
{
  uint64_t result;
  char v3;
  char v4;
  uint64_t v5;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v5 = *(_QWORD *)(a1 + 40);
    v3 = *(_BYTE *)(a1 + 52);
    v4 = *(_BYTE *)(a1 + 60);
    if ((v3 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    if ((v4 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C21136B8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  result = sub_1C2175834();
  v4 = a1[2];
  if (v4)
  {
    v37 = v1[8];
    v5 = v1[6];
    v26 = v1[7];
    v6 = v1[4];
    v7 = v1[5];
    v9 = v1[2];
    v8 = v1[3];
    v10 = *v1;
    v11 = v1[1];
    swift_bridgeObjectRetain();
    v12 = v7;
    v13 = v5;
    v14 = v37;
    v37 = v4;
    v15 = a1[4];
    v16 = a1[5];
    v17 = (_QWORD *)a1[6];
    *(_QWORD *)&v32 = v10;
    *((_QWORD *)&v32 + 1) = v11;
    *(_QWORD *)&v33 = v9;
    *((_QWORD *)&v33 + 1) = v8;
    *(_QWORD *)&v34 = v6;
    *((_QWORD *)&v34 + 1) = v12;
    *(_QWORD *)&v35 = v13;
    *((_QWORD *)&v35 + 1) = v26;
    v36 = v14;
    swift_beginAccess();
    if (v17[3])
    {
      sub_1C2175834();
      sub_1C20A8008(v15, v16);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C20A8008(v15, v16);
      swift_retain_n();
    }
    v18 = v16;
    swift_beginAccess();
    v19 = v17[4];
    if (!v19)
    {
LABEL_14:
      swift_release();
      __asm { BR              X9 }
    }
    v21 = v17[5];
    v20 = v17[6];
    v22 = v17[7];
    sub_1C2175834();
    v27 = v32;
    v28 = v33;
    v29 = v34;
    v30 = v35;
    v31 = v36;
    v23 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRetain();
    sub_1C20A8008(v21, v20);
    swift_bridgeObjectRetain();
    if (v23)
    {
      v24 = v25;
      sub_1C2111BB8(v19);
      if (v25)
      {
        MEMORY[0x1C3BB7EEC]();
LABEL_13:
        sub_1C20EC1EC(v19, v21, v20);
        v32 = v27;
        v33 = v28;
        v34 = v29;
        v35 = v30;
        v36 = v31;
        goto LABEL_14;
      }
    }
    else
    {
      v24 = v25;
    }
    sub_1C2131194((uint64_t)&v27, 1000, 0x20000000, v22);
    if (!v24)
      __asm { BR              X9 }
    MEMORY[0x1C3BB7EEC](v24);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1C2113A1C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  result = sub_1C2175834();
  v4 = a1[2];
  if (v4)
  {
    v5 = v1[7];
    v36 = v1[8];
    v7 = v1[5];
    v6 = v1[6];
    v8 = v1[3];
    v9 = v1[4];
    v11 = v1[1];
    v10 = v1[2];
    v12 = *v1;
    swift_bridgeObjectRetain();
    v13 = v36;
    v14 = a1 + 6;
    v36 = v4;
    v15 = a1[5];
    v16 = a1[6];
    v24 = *(v14 - 2);
    v25 = v15;
    *(_QWORD *)&v31 = v12;
    *((_QWORD *)&v31 + 1) = v11;
    *(_QWORD *)&v32 = v10;
    *((_QWORD *)&v32 + 1) = v8;
    *(_QWORD *)&v33 = v9;
    *((_QWORD *)&v33 + 1) = v7;
    *(_QWORD *)&v34 = v6;
    *((_QWORD *)&v34 + 1) = v5;
    v35 = v13;
    swift_beginAccess();
    if ((*(_BYTE *)(v16 + 20) & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    swift_beginAccess();
    if ((*(_BYTE *)(v16 + 28) & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    swift_beginAccess();
    v17 = *(_QWORD *)(v16 + 32);
    if (!v17)
    {
      sub_1C20A8008(v24, v25);
      swift_retain_n();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(v16 + 40);
    v18 = *(_QWORD *)(v16 + 48);
    v20 = *(_QWORD *)(v16 + 56);
    sub_1C2175834();
    v26 = v31;
    v27 = v32;
    v28 = v33;
    v29 = v34;
    v30 = v35;
    v21 = *(_QWORD *)(v17 + 16);
    sub_1C20A8008(v24, v25);
    swift_retain_n();
    sub_1C20EC1A4(v17, v19, v18);
    if (v21)
    {
      v22 = v23;
      sub_1C2111BB8(v17);
      if (v23)
      {
LABEL_13:
        MEMORY[0x1C3BB7EEC](v22);
        sub_1C20EC1EC(v17, v19, v18);
        v31 = v26;
        v32 = v27;
        v33 = v28;
        v34 = v29;
        v35 = v30;
LABEL_14:
        swift_release();
        __asm { BR              X9 }
      }
    }
    else
    {
      v22 = v23;
    }
    sub_1C2131194((uint64_t)&v26, 1000, 0x20000000, v20);
    if (!v22)
      __asm { BR              X9 }
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1C2113D68(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  result = sub_1C2175834();
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 48);
    v11 = *(_QWORD *)(a1 + 64);
    v7 = *(_BYTE *)(a1 + 76);
    v8 = *(_BYTE *)(a1 + 84);
    v3 = *(_QWORD *)(a1 + 32);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      sub_1C2175834();
      sub_1C2175834();
      v5 = v3 + 32;
      do
      {
        v5 += 4;
        sub_1C217584C();
        --v4;
      }
      while (v4);
    }
    if (v11)
    {
      sub_1C2175834();
      swift_bridgeObjectRetain();
      v6 = v10;
      sub_1C20A8008(v9, v10);
      swift_bridgeObjectRetain();
      sub_1C21754C8();
    }
    else
    {
      swift_bridgeObjectRetain();
      v6 = v10;
      sub_1C20A8008(v9, v10);
    }
    if ((v7 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    if ((v8 & 1) == 0)
    {
      sub_1C2175834();
      sub_1C2175858();
    }
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C2113FF8(uint64_t a1, uint64_t a2)
{
  return sub_1C2114014(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C215B4F0);
}

uint64_t sub_1C2114014(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t *))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = v4;
  result = sub_1C2175834();
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v43 = v5;
    v9 = v3[6];
    v30 = v3[7];
    v31 = v3[8];
    v10 = v3[4];
    v11 = v3[5];
    v13 = v3[2];
    v12 = v3[3];
    v14 = *v3;
    v15 = v3[1];
    v32 = v3;
    swift_bridgeObjectRetain();
    v16 = v9;
    v17 = v30;
    v18 = v31;
    v19 = a1 + 48;
    do
    {
      v20 = v8;
      v21 = *(_QWORD *)(v19 - 16);
      v22 = *(_QWORD *)(v19 - 8);
      v34 = v14;
      v35 = v15;
      v23 = v21;
      v24 = v22;
      v36 = v13;
      v37 = v12;
      v38 = v10;
      v39 = v11;
      v40 = v16;
      v41 = v17;
      v42 = v18;
      sub_1C20A8008(v21, v22);
      v25 = swift_retain_n();
      v26 = v43;
      a3(v25, &v34);
      if (!v26)
      {
        swift_release();
        __asm { BR              X9 }
      }
      swift_release();
      MEMORY[0x1C3BB7EEC](v26);
      v43 = 0;
      sub_1C20A8058(v23, v24);
      swift_release();
      v14 = v34;
      v15 = v35;
      v13 = v36;
      v12 = v37;
      v10 = v38;
      v11 = v39;
      v16 = v40;
      v17 = v41;
      v19 += 24;
      v18 = v42;
      v8 = v20 - 1;
    }
    while (v20 != 1);
    v27 = v41;
    v28 = v42;
    v29 = v40;
    result = swift_bridgeObjectRelease();
    *v32 = v14;
    v32[1] = v15;
    v32[2] = v13;
    v32[3] = v12;
    v32[4] = v10;
    v32[5] = v11;
    v32[6] = v29;
    v32[7] = v27;
    v32[8] = v28;
  }
  return result;
}

void sub_1C21141E0(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE448(a1, *v1, v1[1], v1[2]);
}

double Message.hash(into:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v4 = *((_QWORD *)a1 + 8);
  v5 = a1[1];
  v11 = *a1;
  v12 = v5;
  v6 = a1[3];
  v13 = a1[2];
  v14 = v6;
  v15 = v4;
  (*(void (**)(__int128 *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 72))(&v11, &type metadata for HashVisitor, &off_1E7BD87B8, a2, a3);
  v7 = v15;
  v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  result = *(double *)&v13;
  v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  *((_QWORD *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C211427C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Type, (uint64_t (*)(uint64_t))sub_1C20BDD48) & 1;
}

uint64_t sub_1C21142AC(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE v20[40];
  _QWORD v21[4];
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  _OWORD v31[6];
  uint64_t v32;

  v2 = *(_OWORD *)(v1 + 80);
  v31[4] = *(_OWORD *)(v1 + 64);
  v31[5] = v2;
  v32 = *(_QWORD *)(v1 + 96);
  v3 = *(_OWORD *)(v1 + 16);
  v31[0] = *(_OWORD *)v1;
  v31[1] = v3;
  v4 = *(_OWORD *)(v1 + 48);
  v31[2] = *(_OWORD *)(v1 + 32);
  v31[3] = v4;
  sub_1C20A84A8(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v8)
  {
    v21[0] = v7;
    v21[1] = v8;
    v21[2] = v9;
    v21[3] = v10;
    v22 = v11 & 1;
    v23 = v12;
    v24 = v13;
    v25 = v14 & 1;
    v26 = v15;
    v27 = v16;
    v28 = v17 & 1;
    v29 = v18;
    v30 = v19;
    v5 = static Google_Protobuf_Method.== infix(_:_:)(v31, v21);
    sub_1C211888C(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C21143E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  char v10;
  char v11;
  char v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v17[40];

  sub_1C20A84A8(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || !v16)
    goto LABEL_7;
  if (v16 != a4)
  {
    swift_retain();
    swift_retain();
    v10 = a6(a4);
    swift_release();
    swift_release();
    if ((v10 & 1) == 0)
    {
      sub_1C20B8490(v14, v15, v16);
LABEL_7:
      v12 = 0;
      return v12 & 1;
    }
  }
  sub_1C20A8008(a2, a3);
  sub_1C20A8008(v14, v15);
  sub_1C20FD650(a2, a3);
  v12 = v11;
  sub_1C20A8058(v14, v15);
  sub_1C20A8058(a2, a3);
  sub_1C20B8490(v14, v15, v16);
  return v12 & 1;
}

uint64_t sub_1C2114518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE v18[40];

  sub_1C20A84A8(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast())
    goto LABEL_10;
  v2 = *((_QWORD *)&v13 + 1);
  if (!*((_QWORD *)&v13 + 1))
    goto LABEL_10;
  v3 = v13;
  v5 = v14;
  v4 = v15;
  v6 = v16;
  v7 = v17;
  if (v13 != *(_OWORD *)v1 && (sub_1C21757C8() & 1) == 0
    || (*(_QWORD *)(v1 + 16) != v14 || v15 != *(_QWORD *)(v1 + 24)) && (sub_1C21757C8() & 1) == 0)
  {
    sub_1C21188F4(v13, *((uint64_t *)&v13 + 1), v14, v15, v16, v17);
LABEL_10:
    v11 = 0;
    return v11 & 1;
  }
  v13 = *(_OWORD *)(v1 + 32);
  v9 = *((_QWORD *)&v13 + 1);
  v8 = v13;
  sub_1C20C4D74((uint64_t)&v13);
  sub_1C20A8008(v6, v7);
  sub_1C20FD650(v8, v9);
  v11 = v10;
  sub_1C20A8058(v6, v7);
  sub_1C20C4DA0((uint64_t)&v13);
  sub_1C21188F4(v3, v2, v5, v4, v6, v7);
  return v11 & 1;
}

uint64_t sub_1C2114678(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _OWORD v10[8];
  _BYTE v11[128];
  _BYTE v12[128];
  _BYTE v13[128];
  _BYTE v14[40];
  _OWORD v15[8];
  _OWORD v16[8];

  v2 = v1[5];
  v16[4] = v1[4];
  v16[5] = v2;
  v3 = v1[7];
  v16[6] = v1[6];
  v16[7] = v3;
  v4 = v1[1];
  v16[0] = *v1;
  v16[1] = v4;
  v5 = v1[3];
  v16[2] = v1[2];
  v16[3] = v5;
  sub_1C20A84A8(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast())
  {
    sub_1C2118940(v15);
    sub_1C20C4D30((uint64_t)v15, (uint64_t)v13, &qword_1EF75FAC8);
    goto LABEL_5;
  }
  nullsub_1(v13, v6, v7);
  sub_1C20C4D30((uint64_t)v13, (uint64_t)v11, &qword_1EF75FAC8);
  sub_1C20C4D30((uint64_t)v11, (uint64_t)v12, &qword_1EF75FAC8);
  if (sub_1C2118958((uint64_t)v12) == 1)
  {
LABEL_5:
    v8 = 0;
    return v8 & 1;
  }
  sub_1C20C4D30((uint64_t)v11, (uint64_t)v10, &qword_1EF75FAC8);
  v15[4] = v10[4];
  v15[5] = v10[5];
  v15[6] = v10[6];
  v15[7] = v10[7];
  v15[0] = v10[0];
  v15[1] = v10[1];
  v15[2] = v10[2];
  v15[3] = v10[3];
  v8 = static Google_Protobuf_Field.== infix(_:_:)((uint64_t)v16, (uint64_t)v15);
  sub_1C2118970((uint64_t)v11);
  return v8 & 1;
}

uint64_t sub_1C21147BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v5;
  char v6;
  uint64_t v8;
  unint64_t v9;
  _BYTE v10[40];

  sub_1C20A84A8(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v9 >> 60 != 15)
  {
    sub_1C20A8008(a2, a3);
    sub_1C20FE40C(v8, v9);
    sub_1C20FD650(a2, a3);
    v5 = v6;
    sub_1C20AE1C8(v8, v9);
    sub_1C20A8058(a2, a3);
    sub_1C20AE1C8(v8, v9);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C211489C(uint64_t a1, uint64_t a2, unint64_t a3, _QWORD *a4)
{
  char v7;
  char v8;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _BYTE v13[40];

  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || !v12)
    goto LABEL_7;
  if (v12 != a4 && (sub_1C2152554(v12) & 1) == 0)
  {
    sub_1C20B8490(v10, v11, (uint64_t)v12);
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  sub_1C20A8008(a2, a3);
  sub_1C20A8008(v10, v11);
  sub_1C20FD650(a2, a3);
  v8 = v7;
  sub_1C20A8058(v10, v11);
  sub_1C20A8058(a2, a3);
  sub_1C20B8490(v10, v11, (uint64_t)v12);
  return v8 & 1;
}

uint64_t sub_1C21149A0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[40];
  _QWORD v23[6];
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[7];
  uint64_t v34;

  v2 = *(_OWORD *)(v1 + 80);
  v33[4] = *(_OWORD *)(v1 + 64);
  v33[5] = v2;
  v33[6] = *(_OWORD *)(v1 + 96);
  v34 = *(_QWORD *)(v1 + 112);
  v3 = *(_OWORD *)(v1 + 16);
  v33[0] = *(_OWORD *)v1;
  v33[1] = v3;
  v4 = *(_OWORD *)(v1 + 48);
  v33[2] = *(_OWORD *)(v1 + 32);
  v33[3] = v4;
  sub_1C20A84A8(a1, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v7)
  {
    v23[0] = v7;
    v23[1] = v8;
    v23[2] = v9;
    v23[3] = v10;
    v23[4] = v11;
    v23[5] = v12;
    v24 = v13 & 1;
    v25 = v14;
    v26 = v15 & 1;
    v27 = v16;
    v28 = v17 & 1;
    v29 = v18;
    v30 = v19;
    v31 = v20;
    v32 = v21;
    v5 = _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)v33, (uint64_t)v23);
    sub_1C2118820(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C2114AF0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  char v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[40];
  _QWORD v11[4];
  char v12;
  _OWORD v13[2];
  char v14;

  v2 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v2;
  v14 = *(_BYTE *)(v1 + 32);
  sub_1C20A84A8(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v8 != 1)
  {
    v11[0] = v5;
    v11[1] = v6;
    v11[2] = v7;
    v11[3] = v8;
    v12 = v9;
    v3 = _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV8NamePartV2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v11);
    sub_1C21187F0(v5, v6, v7, v8);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C2114BBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  char v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[40];

  sub_1C20A84A8(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || !v13)
    goto LABEL_6;
  if ((a6(a2) & 1) == 0)
  {
    sub_1C20EC150(v13, v14, v15);
LABEL_6:
    v11 = 0;
    return v11 & 1;
  }
  sub_1C20A8008(a3, a4);
  sub_1C20A8008(v14, v15);
  sub_1C20FD650(a3, a4);
  v11 = v10;
  sub_1C20A8058(v14, v15);
  sub_1C20A8058(a3, a4);
  sub_1C20EC150(v13, v14, v15);
  return v11 & 1;
}

uint64_t sub_1C2114CC8(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  int v12;
  char v13;
  _BYTE v14[40];
  _QWORD v15[5];
  int v16;
  char v17;
  int v18;
  char v19;
  _OWORD v20[2];
  _OWORD v21[2];

  v2 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v2;
  v21[0] = *(_OWORD *)(v1 + 32);
  *(_QWORD *)((char *)v21 + 13) = *(_QWORD *)(v1 + 45);
  sub_1C20A84A8(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v5)
  {
    v15[0] = v5;
    v15[1] = v6;
    v15[2] = v7;
    v15[3] = v8;
    v15[4] = v9;
    v16 = v10;
    v17 = v11 & 1;
    v18 = v12;
    v19 = v13 & 1;
    v3 = _s20SiriOntologyProtobuf07Google_C18_GeneratedCodeInfoV10AnnotationV2eeoiySbAE_AEtFZ_0((uint64_t)v20, (uint64_t)v15);
    sub_1C2118734(v5, v6, v7);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C2114DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD *, _QWORD *), void (*a8)(uint64_t, unint64_t, uint64_t, unint64_t))
{
  char v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned __int8 v16;
  _BYTE v17[40];
  _QWORD v18[2];
  int v19;
  char v20;
  unsigned int v21;
  char v22;
  _QWORD v23[2];
  int v24;
  char v25;
  int v26;
  char v27;

  v23[0] = a2;
  v23[1] = a3;
  v24 = a4;
  v25 = BYTE4(a4) & 1;
  v26 = a5;
  v27 = BYTE4(a5) & 1;
  sub_1C20A84A8(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v13 >> 60 != 15)
  {
    v18[0] = v12;
    v18[1] = v13;
    v19 = v14;
    v20 = BYTE4(v14) & 1;
    v21 = v15;
    v22 = v16 & 1;
    v10 = a7(v23, v18);
    a8(v12, v13, v14, v15 | ((unint64_t)v16 << 32));
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C2114ED0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];
  uint64_t v16[9];
  _OWORD v17[4];
  uint64_t v18;

  v2 = *(_OWORD *)(v1 + 48);
  v17[2] = *(_OWORD *)(v1 + 32);
  v17[3] = v2;
  v18 = *(_QWORD *)(v1 + 64);
  v3 = *(_OWORD *)(v1 + 16);
  v17[0] = *(_OWORD *)v1;
  v17[1] = v3;
  sub_1C20A84A8(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v6)
  {
    v16[0] = v6;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = v12;
    v16[7] = v13;
    v16[8] = v14;
    v4 = _s20SiriOntologyProtobuf07Google_C15_SourceCodeInfoV8LocationV2eeoiySbAE_AEtFZ_0((uint64_t *)v17, v16);
    sub_1C211877C(v6, v7, v8, v9, v10);
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1C2114FD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, _QWORD *))
{
  uint64_t v3;
  __int128 v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[40];
  _QWORD v14[4];
  char v15;
  _OWORD v16[2];
  char v17;

  v5 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v16[1] = v5;
  v17 = *(_BYTE *)(v3 + 32);
  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v8)
  {
    v14[0] = v8;
    v14[1] = v9;
    v14[2] = v10;
    v14[3] = v11;
    v15 = v12;
    v6 = a3(v16, v14);
    sub_1C20EC1EC(v8, v9, v10);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C211509C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  _BYTE v10[40];
  _QWORD v11[4];
  int v12;
  _OWORD v13[2];
  int v14;

  v2 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v2;
  v14 = *(_DWORD *)(v1 + 32);
  sub_1C20A84A8(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v5)
  {
    v11[0] = v5;
    v11[1] = v6;
    v11[2] = v7;
    v11[3] = v8;
    v12 = v9;
    v3 = static Google_Protobuf_MessageOptions.== infix(_:_:)((uint64_t)v13, (uint64_t)v11);
    sub_1C20EC1EC(v5, v6, v7);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C211517C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD *, _QWORD *))
{
  char v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[40];
  _QWORD v15[4];
  _QWORD v16[4];

  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  v16[3] = a5;
  sub_1C20A84A8(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v10)
  {
    v15[0] = v10;
    v15[1] = v11;
    v15[2] = v12;
    v15[3] = v13;
    v8 = a7(v16, v15);
    sub_1C20EC1EC(v10, v11, v12);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1C2115234(uint64_t a1)
{
  __int128 *v1;
  __int128 v2;
  int8x16_t v3;
  uint64x2_t v4;
  int16x8_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned __int16 v13;
  _BYTE v14[40];
  _QWORD v15[4];
  char v16;
  unsigned __int32 v17;
  char v18;
  __int128 v19;
  _OWORD v20[2];

  v2 = v1[1];
  v19 = *v1;
  v20[0] = v2;
  *(_QWORD *)((char *)v20 + 14) = *(_QWORD *)((char *)v1 + 30);
  sub_1C20A84A8(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v8)
  {
    v15[0] = v8;
    v15[1] = v9;
    v15[2] = v10;
    v15[3] = v11;
    v16 = v12;
    v3.i64[0] = 0xFFFFFFFFFFFFLL;
    v3.i64[1] = 0xFFFFFFFFFFFFLL;
    v4 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v12 | ((unint64_t)v13 << 32)), v3);
    v5 = (int16x8_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C2177150);
    *(int32x2_t *)v4.i8 = vmovn_s64((int64x2_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C2177140));
    *(int32x2_t *)v5.i8 = vmovn_s64((int64x2_t)v5);
    v5.i16[1] = v5.i16[2];
    v5.i16[2] = v4.i16[0];
    v5.i16[3] = v4.i16[2];
    v17 = vmovn_s16(v5).u32[0];
    v18 = HIBYTE(v13);
    v6 = static Google_Protobuf_FieldOptions.== infix(_:_:)((uint64_t)&v19, (uint64_t)v15);
    sub_1C20EC1EC(v8, v9, v10);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C211535C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[40];

  sub_1C20A84A8(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || !v13)
    goto LABEL_8;
  if ((v12 != a2 || v13 != a3) && (sub_1C21757C8() & 1) == 0)
  {
    sub_1C20C3024(v12, v13, v14, v15);
LABEL_8:
    v10 = 0;
    return v10 & 1;
  }
  sub_1C20A8008(a4, a5);
  sub_1C20A8008(v14, v15);
  sub_1C20FD650(a4, a5);
  v10 = v9;
  sub_1C20A8058(v14, v15);
  sub_1C20A8058(a4, a5);
  sub_1C20C3024(v12, v13, v14, v15);
  return v10 & 1;
}

uint64_t sub_1C2115490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[40];
  uint64_t v12[4];
  uint64_t v13[4];

  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  sub_1C20A84A8(a1, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v9)
  {
    v12[0] = v7;
    v12[1] = v8;
    v12[2] = v9;
    v12[3] = v10;
    v5 = static Google_Protobuf_FileOptions.== infix(_:_:)(v13, v12);
    sub_1C20EC0E4(v7, v8, v9);
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C2115544(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, _QWORD *))
{
  uint64_t v3;
  __int128 v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int16 v12;
  _BYTE v13[40];
  _QWORD v14[4];
  __int16 v15;
  _OWORD v16[2];
  __int16 v17;

  v5 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v16[1] = v5;
  v17 = *(_WORD *)(v3 + 32);
  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (swift_dynamicCast() && v8)
  {
    v14[0] = v8;
    v14[1] = v9;
    v14[2] = v10;
    v14[3] = v11;
    v15 = v12;
    v6 = a3(v16, v14);
    sub_1C20EC1EC(v8, v9, v10);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C2115618(uint64_t a1, uint64_t a2, unint64_t a3, double a4)
{
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[40];

  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || v12 >> 60 == 15)
    goto LABEL_6;
  if (*(double *)&v10 != a4)
  {
    sub_1C21186C4(v10, v11, v12);
LABEL_6:
    v8 = 0;
    return v8 & 1;
  }
  sub_1C20A8008(a2, a3);
  sub_1C21186E0(v10, v11, v12);
  sub_1C20FD650(a2, a3);
  v8 = v7;
  sub_1C21186C4(v10, v11, v12);
  sub_1C20A8058(a2, a3);
  sub_1C21186C4(v10, v11, v12);
  return v8 & 1;
}

uint64_t sub_1C211572C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)())
{
  char v12;
  char v13;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[40];

  sub_1C20A84A8(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || v16 >> 60 == 15)
    goto LABEL_6;
  if (v15 != a2)
  {
    a7();
LABEL_6:
    v13 = 0;
    return v13 & 1;
  }
  sub_1C20A8008(a3, a4);
  a6(a2);
  sub_1C20FD650(a3, a4);
  v13 = v12;
  ((void (*)(uint64_t))a7)(a2);
  sub_1C20A8058(a3, a4);
  ((void (*)(uint64_t))a7)(a2);
  return v13 & 1;
}

uint64_t sub_1C2115840(uint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(), void (*a7)())
{
  char v12;
  char v13;
  int v15;
  unint64_t v16;
  _BYTE v17[40];

  sub_1C20A84A8(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || v16 >> 60 == 15)
    goto LABEL_6;
  if (v15 != a2)
  {
    a7();
LABEL_6:
    v13 = 0;
    return v13 & 1;
  }
  sub_1C20A8008(a3, a4);
  a6();
  sub_1C20FD650(a3, a4);
  v13 = v12;
  a7();
  sub_1C20A8058(a3, a4);
  a7();
  return v13 & 1;
}

uint64_t sub_1C2115958(uint64_t a1, uint64_t a2, unint64_t a3, float a4)
{
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[40];

  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || v12 >> 60 == 15)
    goto LABEL_6;
  if (*(float *)&v10 != a4)
  {
    sub_1C21186C4(v10, v11, v12);
LABEL_6:
    v8 = 0;
    return v8 & 1;
  }
  sub_1C20A8008(a2, a3);
  sub_1C21186E0(v10, v11, v12);
  sub_1C20FD650(a2, a3);
  v8 = v7;
  sub_1C21186C4(v10, v11, v12);
  sub_1C20A8058(a2, a3);
  sub_1C21186C4(v10, v11, v12);
  return v8 & 1;
}

uint64_t sub_1C2115A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  char v9;
  char v10;
  char v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[40];

  sub_1C20A84A8(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || v14 >> 60 == 15)
    goto LABEL_6;
  sub_1C20FD650(a2, a3);
  if ((v9 & 1) == 0)
  {
    sub_1C2118650(v13, v14, v15, v16);
LABEL_6:
    v11 = 0;
    return v11 & 1;
  }
  sub_1C20A8008(a4, a5);
  sub_1C20A8008(v15, v16);
  sub_1C20FD650(a4, a5);
  v11 = v10;
  sub_1C20A8058(v15, v16);
  sub_1C20A8058(a4, a5);
  sub_1C2118650(v13, v14, v15, v16);
  return v11 & 1;
}

uint64_t sub_1C2115B94(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t), void (*a8)(uint64_t))
{
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v18;
  int v19;
  unint64_t v20;
  _BYTE v21[40];

  sub_1C20A84A8(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast() || v20 >> 60 == 15)
    goto LABEL_8;
  v14 = v18;
  if (v18 != a2)
  {
LABEL_7:
    a7(v14);
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  if (v19 != a3)
  {
    v14 = a2;
    goto LABEL_7;
  }
  sub_1C20A8008(a4, a5);
  a8(a2);
  sub_1C20FD650(a4, a5);
  v16 = v15;
  a7(a2);
  sub_1C20A8058(a4, a5);
  a7(a2);
  return v16 & 1;
}

uint64_t sub_1C2115CD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE v18[40];

  sub_1C20A84A8(a1, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast())
    goto LABEL_9;
  v2 = *((_QWORD *)&v13 + 1);
  if (!*((_QWORD *)&v13 + 1))
    goto LABEL_9;
  v3 = v13;
  v5 = v14;
  v4 = v15;
  v7 = v16;
  v6 = v17;
  if (v13 != *(_OWORD *)v1 && (sub_1C21757C8() & 1) == 0
    || *(_DWORD *)(v1 + 16) != (_DWORD)v14
    || (sub_1C20F5614(*(_QWORD **)(v1 + 24), v15) & 1) == 0)
  {
    sub_1C21188F4(v13, *((uint64_t *)&v13 + 1), v14, (uint64_t)v15, v16, v17);
LABEL_9:
    v11 = 0;
    return v11 & 1;
  }
  v13 = *(_OWORD *)(v1 + 32);
  v9 = *((_QWORD *)&v13 + 1);
  v8 = v13;
  sub_1C20C4D74((uint64_t)&v13);
  sub_1C20A8008(v7, v6);
  sub_1C20FD650(v8, v9);
  v11 = v10;
  sub_1C20A8058(v7, v6);
  sub_1C20C4DA0((uint64_t)&v13);
  sub_1C21188F4(v3, v2, v5, (uint64_t)v4, v7, v6);
  return v11 & 1;
}

uint64_t sub_1C2115E28(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[40];

  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  if (!swift_dynamicCast())
    goto LABEL_5;
  if (((v10 & 1) == 0) == (a2 & 1))
  {
    sub_1C211868C(v10, v11, v12);
LABEL_5:
    v8 = 0;
    return v8 & 1;
  }
  sub_1C20A8008(a3, a4);
  sub_1C21186A8(v10, v11, v12);
  sub_1C20FD650(a3, a4);
  v8 = v7;
  sub_1C211868C(v10, v11, v12);
  sub_1C20A8058(a3, a4);
  sub_1C211868C(v10, v11, v12);
  return v8 & 1;
}

uint64_t _MessageImplementationBase.isEqualTo(message:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char v16;
  _BYTE v19[40];

  v4 = sub_1C2175690();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4, v6);
  v9 = &v19[-v8 - 8];
  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v7, v11);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C20A84A8(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  v14 = swift_dynamicCast();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v14)
  {
    v15(v9, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, a2);
    v16 = sub_1C2175420();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a2);
  }
  else
  {
    v15(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1C211609C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, sub_1C20BDD48);
}

uint64_t sub_1C21160A8(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  char v4;
  __int128 v5;
  __int128 v6;
  char v7;
  __int128 v9;
  __int128 v10;

  v3 = *(_QWORD *)v1 == *(_QWORD *)a1 && *(_QWORD *)(v1 + 8) == *(_QWORD *)(a1 + 8);
  if (v3 || (v4 = 0, (sub_1C21757C8() & 1) != 0))
  {
    if (*(_DWORD *)(v1 + 16) == *(_DWORD *)(a1 + 16)
      && (sub_1C20F5614(*(_QWORD **)(v1 + 24), *(_QWORD **)(a1 + 24)) & 1) != 0)
    {
      v5 = *(_OWORD *)(v1 + 32);
      v9 = *(_OWORD *)(a1 + 32);
      v10 = v5;
      v6 = v5;
      sub_1C20C4D74((uint64_t)&v10);
      sub_1C20C4D74((uint64_t)&v9);
      sub_1C20FD650(v6, *((uint64_t *)&v6 + 1));
      v4 = v7;
      sub_1C20C4DA0((uint64_t)&v9);
      sub_1C20C4DA0((uint64_t)&v10);
    }
    else
    {
      v4 = 0;
    }
  }
  return v4 & 1;
}

uint64_t sub_1C2116170(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  char v4;
  BOOL v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v10;
  __int128 v11;

  v3 = *(_QWORD *)v1 == *(_QWORD *)a1 && *(_QWORD *)(v1 + 8) == *(_QWORD *)(a1 + 8);
  if (v3 || (v4 = 0, (sub_1C21757C8() & 1) != 0))
  {
    v5 = *(_QWORD *)(v1 + 16) == *(_QWORD *)(a1 + 16) && *(_QWORD *)(v1 + 24) == *(_QWORD *)(a1 + 24);
    if (v5 || (v4 = 0, (sub_1C21757C8() & 1) != 0))
    {
      v6 = *(_OWORD *)(v1 + 32);
      v10 = *(_OWORD *)(a1 + 32);
      v11 = v6;
      v7 = v6;
      sub_1C20C4D74((uint64_t)&v11);
      sub_1C20C4D74((uint64_t)&v10);
      sub_1C20FD650(v7, *((uint64_t *)&v7 + 1));
      v4 = v8;
      sub_1C20C4DA0((uint64_t)&v10);
      sub_1C20C4DA0((uint64_t)&v11);
    }
  }
  return v4 & 1;
}

uint64_t sub_1C2116234(__int128 *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char v6;
  int v7;
  __int128 v8;
  __int128 v9;
  char v10;
  __int128 v12;
  __int128 v13;
  char v14;
  char v15;

  v3 = *((_QWORD *)v1 + 3);
  v4 = *((_QWORD *)a1 + 3);
  if (!v3)
  {
    if (!v4)
      goto LABEL_10;
LABEL_16:
    v6 = 0;
    return v6 & 1;
  }
  if (!v4)
    goto LABEL_16;
  v5 = *((_QWORD *)v1 + 2) == *((_QWORD *)a1 + 2) && v3 == v4;
  if (v5 || (v6 = 0, (sub_1C21757C8() & 1) != 0))
  {
LABEL_10:
    sub_1C20C4D30((uint64_t)(v1 + 2), (uint64_t)&v14, &qword_1EF75D588);
    v7 = *((unsigned __int8 *)a1 + 32);
    sub_1C20C4D30((uint64_t)&v14, (uint64_t)&v15, &qword_1EF75D588);
    if (v15 == 2)
    {
      if (v7 != 2)
        goto LABEL_16;
    }
    else
    {
      sub_1C20C4D30((uint64_t)&v14, (uint64_t)&v13, &qword_1EF75D588);
      if (v7 == 2 || ((((v7 & 1) == 0) ^ v13) & 1) == 0)
        goto LABEL_16;
    }
    v8 = *v1;
    v12 = *a1;
    v13 = v8;
    v9 = v8;
    sub_1C20C4D74((uint64_t)&v13);
    sub_1C20C4D74((uint64_t)&v12);
    sub_1C20FD650(v9, *((uint64_t *)&v9 + 1));
    v6 = v10;
    sub_1C20C4DA0((uint64_t)&v12);
    sub_1C20C4DA0((uint64_t)&v13);
  }
  return v6 & 1;
}

uint64_t sub_1C2116368(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  char v14;
  char v15;

  if (a6 != a3)
  {
    swift_retain();
    swift_retain();
    LOBYTE(a7) = a7(a6, a3);
    swift_release();
    swift_release();
    if ((a7 & 1) == 0)
      return 0;
  }
  sub_1C20A8008(a4, a5);
  sub_1C20A8008(a1, a2);
  sub_1C20FD650(a4, a5);
  v15 = v14;
  sub_1C20A8058(a1, a2);
  sub_1C20A8058(a4, a5);
  return v15 & 1;
}

uint64_t _MessageImplementationBase._protobuf_generated_isEqualTo(other:)()
{
  return sub_1C2175420() & 1;
}

uint64_t sub_1C2116480(uint64_t a1)
{
  return sub_1C2114678(a1) & 1;
}

uint64_t sub_1C21164CC(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[8];
  _OWORD v12[8];

  v2 = a1[5];
  v12[4] = a1[4];
  v12[5] = v2;
  v3 = a1[7];
  v12[6] = a1[6];
  v12[7] = v3;
  v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  v5 = a1[3];
  v12[2] = a1[2];
  v12[3] = v5;
  v6 = v1[5];
  v11[4] = v1[4];
  v11[5] = v6;
  v7 = v1[7];
  v11[6] = v1[6];
  v11[7] = v7;
  v8 = v1[1];
  v11[0] = *v1;
  v11[1] = v8;
  v9 = v1[3];
  v11[2] = v1[2];
  v11[3] = v9;
  return _s20SiriOntologyProtobuf07Google_C6_FieldV2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v12) & 1;
}

void sub_1C211653C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE458(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C2116548(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Enum, (uint64_t (*)(uint64_t))sub_1C20C1370) & 1;
}

uint64_t sub_1C2116578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, sub_1C20C1370);
}

uint64_t sub_1C2116584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;

  return sub_1C2116368(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), a4) & 1;
}

uint64_t sub_1C21165B4(uint64_t a1)
{
  return sub_1C2115CD4(a1) & 1;
}

uint64_t sub_1C21165F0(_OWORD *a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[6];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *v1;
  v4 = v1[1];
  v7[2] = a1[2];
  v7[3] = v3;
  v5 = v1[2];
  v7[4] = v4;
  v7[5] = v5;
  return sub_1C21160A8((uint64_t)v7) & 1;
}

void sub_1C211663C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE314(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C2116648(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C20C278C) & 1;
}

uint64_t sub_1C2116678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20C278C);
}

uint64_t sub_1C2116684(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Api, (uint64_t (*)(uint64_t))sub_1C20C8AE0) & 1;
}

uint64_t sub_1C21166B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, sub_1C20C8AE0);
}

uint64_t sub_1C21166C0(uint64_t a1)
{
  return sub_1C21142AC(a1) & 1;
}

uint64_t sub_1C211670C(__int128 *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_BYTE *)a1 + 32);
  v5 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_BYTE *)a1 + 56);
  v8 = *((_QWORD *)a1 + 8);
  v9 = *((_QWORD *)a1 + 9);
  v10 = *((_BYTE *)a1 + 80);
  v11 = *v1;
  v13 = *((_QWORD *)v1 + 2);
  v12 = *((_QWORD *)v1 + 3);
  v14 = *((_BYTE *)v1 + 32);
  v15 = *((_QWORD *)v1 + 5);
  v16 = *((_QWORD *)v1 + 6);
  v17 = *((_BYTE *)v1 + 56);
  v18 = *((_QWORD *)v1 + 8);
  v19 = *((_QWORD *)v1 + 9);
  v20 = *((_BYTE *)v1 + 80);
  v33 = *a1;
  v34 = v2;
  v35 = v3;
  v36 = v4;
  v37 = v5;
  v38 = v6;
  v39 = v7;
  v40 = v8;
  v41 = v9;
  v42 = v10;
  v43 = *(__int128 *)((char *)a1 + 88);
  v22 = v11;
  v23 = v13;
  v24 = v12;
  v25 = v14;
  v26 = v15;
  v27 = v16;
  v28 = v17;
  v29 = v18;
  v30 = v19;
  v31 = v20;
  v32 = *(__int128 *)((char *)v1 + 88);
  return _s20SiriOntologyProtobuf07Google_C7_MethodV2eeoiySbAC_ACtFZ_0((uint64_t)&v22, (uint64_t)&v33) & 1;
}

uint64_t sub_1C21167BC(uint64_t a1)
{
  return sub_1C2114518(a1) & 1;
}

uint64_t sub_1C21167F8(_OWORD *a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[6];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *v1;
  v4 = v1[1];
  v7[2] = a1[2];
  v7[3] = v3;
  v5 = v1[2];
  v7[4] = v4;
  v7[5] = v5;
  return sub_1C2116170((uint64_t)v7) & 1;
}

uint64_t sub_1C2116844(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2114BBC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FileDescriptorSet, (uint64_t (*)(uint64_t))sub_1C20F6C38) & 1;
}

uint64_t sub_1C2116874(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117FD0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20F6C38);
}

uint64_t sub_1C2116880(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20E25D0) & 1;
}

uint64_t sub_1C21168B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E25D0);
}

uint64_t sub_1C21168BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C20E4220) & 1;
}

uint64_t sub_1C21168EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, sub_1C20E4220);
}

uint64_t sub_1C21168F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(uint64_t))sub_1C20E5234) & 1;
}

uint64_t sub_1C2116928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E5234);
}

uint64_t sub_1C2116934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116A74(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ReservedRange, (uint64_t (*)(_QWORD *, _QWORD *))sub_1C20FDD3C, (void (*)(uint64_t, unint64_t, uint64_t, unint64_t))sub_1C20AE1C8);
}

uint64_t sub_1C2116950(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116ACC(a1, a2, a3, (uint64_t (*)(__int128 *, __int128 *))sub_1C20FDD3C);
}

double sub_1C211695C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116D94(a1, a2, a3, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C20E59CC);
}

uint64_t sub_1C2116968(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C211517C(a1, *v1, v1[1], v1[2], v1[3], (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions, static Google_Protobuf_ExtensionRangeOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C2116998(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116E44(a1, a2, a3, sub_1C20FE468);
}

uint64_t sub_1C21169A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20E698C) & 1;
}

uint64_t sub_1C21169D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E698C);
}

uint64_t sub_1C21169E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20E7C38) & 1;
}

uint64_t sub_1C2116A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E7C38);
}

uint64_t sub_1C2116A1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20E89CC) & 1;
}

uint64_t sub_1C2116A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, sub_1C20E89CC);
}

uint64_t sub_1C2116A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116A74(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, (uint64_t (*)(_QWORD *, _QWORD *))sub_1C20FDD3C, (void (*)(uint64_t, unint64_t, uint64_t, unint64_t))sub_1C2118A44);
}

uint64_t sub_1C2116A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *, _QWORD *), void (*a6)(uint64_t, unint64_t, uint64_t, unint64_t))
{
  uint64_t v6;

  return sub_1C2114DD8(a1, *(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 20) << 32), *(unsigned int *)(v6 + 24) | ((unint64_t)*(unsigned __int8 *)(v6 + 28) << 32), a4, a5, a6) & 1;
}

uint64_t sub_1C2116ACC(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *, __int128 *))
{
  __int128 *v4;
  int v5;
  char v6;
  int v7;
  char v8;
  int v9;
  char v10;
  int v11;
  char v12;
  __int128 v14;
  int v15;
  char v16;
  int v17;
  char v18;
  __int128 v19;
  int v20;
  char v21;
  int v22;
  char v23;

  v5 = *((_DWORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 20);
  v7 = *((_DWORD *)a1 + 6);
  v8 = *((_BYTE *)a1 + 28);
  v9 = *((_DWORD *)v4 + 4);
  v10 = *((_BYTE *)v4 + 20);
  v11 = *((_DWORD *)v4 + 6);
  v12 = *((_BYTE *)v4 + 28);
  v19 = *a1;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v14 = *v4;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  return a4(&v14, &v19) & 1;
}

uint64_t sub_1C2116B44(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20E9D5C) & 1;
}

uint64_t sub_1C2116B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20E9D5C);
}

uint64_t sub_1C2116B80(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20EACF8) & 1;
}

uint64_t sub_1C2116BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20EACF8);
}

uint64_t sub_1C2116BBC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(uint64_t))sub_1C20EB9AC) & 1;
}

uint64_t sub_1C2116BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, sub_1C20EB9AC);
}

uint64_t sub_1C2116BF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2115490(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C2116C04(_OWORD *a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];

  v2 = a1[1];
  v6[0] = *a1;
  v6[1] = v2;
  v3 = v1[1];
  v5[0] = *v1;
  v5[1] = v3;
  return _s20SiriOntologyProtobuf07Google_C12_FileOptionsV2eeoiySbAC_ACtFZ_0((uint64_t *)v5, (uint64_t *)v6) & 1;
}

uint64_t sub_1C2116C3C(uint64_t a1)
{
  return sub_1C211509C(a1) & 1;
}

uint64_t sub_1C2116C78(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  int v13;

  v2 = a1[3];
  v3 = *v1;
  v4 = v1[3];
  v10 = *a1;
  v11 = *(_OWORD *)(a1 + 1);
  v12 = v2;
  v13 = *((_DWORD *)a1 + 8);
  v6 = v3;
  v7 = *(_OWORD *)(v1 + 1);
  v8 = v4;
  v9 = *((_DWORD *)v1 + 8);
  return _s20SiriOntologyProtobuf07Google_C15_MessageOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v6, (uint64_t)&v10) & 1;
}

uint64_t sub_1C2116CE0(uint64_t a1)
{
  return sub_1C2115234(a1) & 1;
}

uint64_t sub_1C2116D1C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  __int16 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  __int16 v17;

  v2 = a1[3];
  v3 = *((_WORD *)a1 + 18);
  v4 = *v1;
  v5 = v1[3];
  v6 = *((_WORD *)v1 + 18);
  v13 = *a1;
  v14 = *(_OWORD *)(a1 + 1);
  v15 = v2;
  v16 = *((_DWORD *)a1 + 8);
  v17 = v3;
  v8 = v4;
  v9 = *(_OWORD *)(v1 + 1);
  v10 = v5;
  v11 = *((_DWORD *)v1 + 8);
  v12 = v6;
  return _s20SiriOntologyProtobuf07Google_C13_FieldOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v8, (uint64_t)&v13) & 1;
}

double sub_1C2116D94(__int128 *a1, uint64_t a2, uint64_t a3, void (*a4)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  double result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v7 = *v4;
  v8 = v4[1];
  v9 = v4[2];
  v10 = v4[3];
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v18 = *a1;
  v19 = v12;
  v13 = a1[3];
  v20 = a1[2];
  v21 = v13;
  v22 = v11;
  a4(&v18, v7, v8, v9, v10);
  v14 = v22;
  v15 = v19;
  *a1 = v18;
  a1[1] = v15;
  result = *(double *)&v20;
  v17 = v21;
  a1[2] = v20;
  a1[3] = v17;
  *((_QWORD *)a1 + 8) = v14;
  return result;
}

uint64_t sub_1C2116E14(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C211517C(a1, *v1, v1[1], v1[2], v1[3], (uint64_t)&type metadata for Google_Protobuf_OneofOptions, static Google_Protobuf_OneofOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C2116E44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v5 = *a1;
  v6 = a1[3];
  v7 = *v4;
  v11 = v4[3];
  v12 = v5;
  v13 = *(_OWORD *)(a1 + 1);
  v14 = v6;
  v9 = v7;
  v10 = *(_OWORD *)(v4 + 1);
  return a4(&v9, &v12) & 1;
}

uint64_t sub_1C2116E98(uint64_t a1)
{
  return sub_1C2115544(a1, (uint64_t)&type metadata for Google_Protobuf_EnumOptions, (uint64_t (*)(_OWORD *, _QWORD *))_s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0) & 1;
}

uint64_t sub_1C2116EE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117054(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t *))_s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C2116EF0(uint64_t a1)
{
  return sub_1C2114FD0(a1, (uint64_t)&type metadata for Google_Protobuf_EnumValueOptions, (uint64_t (*)(_OWORD *, _QWORD *))static Google_Protobuf_EnumValueOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C2116F3C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116F94(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t *))sub_1C20FE464);
}

uint64_t sub_1C2116F48(uint64_t a1)
{
  return sub_1C2114FD0(a1, (uint64_t)&type metadata for Google_Protobuf_ServiceOptions, (uint64_t (*)(_OWORD *, _QWORD *))static Google_Protobuf_ServiceOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C2116F94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char v18;

  v5 = a1[3];
  v6 = *((_BYTE *)a1 + 32);
  v7 = *v4;
  v8 = v4[3];
  v9 = *((_BYTE *)v4 + 32);
  v15 = *a1;
  v16 = *(_OWORD *)(a1 + 1);
  v17 = v5;
  v18 = v6;
  v11 = v7;
  v12 = *(_OWORD *)(v4 + 1);
  v13 = v8;
  v14 = v9;
  return a4(&v11, &v15) & 1;
}

uint64_t sub_1C2116FFC(uint64_t a1)
{
  return sub_1C2115544(a1, (uint64_t)&type metadata for Google_Protobuf_MethodOptions, (uint64_t (*)(_OWORD *, _QWORD *))static Google_Protobuf_MethodOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C2117048(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117054(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t *))_s20SiriOntologyProtobuf07Google_C14_MethodOptionsV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C2117054(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t *v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;

  v5 = a1[3];
  v6 = *((_WORD *)a1 + 16);
  v7 = *v4;
  v8 = v4[3];
  v9 = *((_WORD *)v4 + 16);
  v15 = *a1;
  v16 = *(_OWORD *)(a1 + 1);
  v17 = v5;
  v18 = v6;
  v11 = v7;
  v12 = *(_OWORD *)(v4 + 1);
  v13 = v8;
  v14 = v9;
  return a4(&v11, &v15) & 1;
}

uint64_t sub_1C21170BC(uint64_t a1)
{
  return sub_1C21149A0(a1) & 1;
}

uint64_t sub_1C2117110(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;

  v2 = *a1;
  v3 = a1[5];
  v4 = *((_BYTE *)a1 + 48);
  v5 = a1[7];
  v6 = *((_BYTE *)a1 + 64);
  v7 = a1[9];
  v8 = *((_BYTE *)a1 + 80);
  v9 = *v1;
  v10 = v1[5];
  v11 = *((_BYTE *)v1 + 48);
  v12 = v1[7];
  v13 = *((_BYTE *)v1 + 64);
  v14 = v1[9];
  v15 = *((_BYTE *)v1 + 80);
  v29 = *(_OWORD *)(a1 + 1);
  v30 = *(_OWORD *)(a1 + 3);
  v28 = v2;
  v31 = v3;
  v32 = v4;
  v33 = v5;
  v34 = v6;
  v35 = v7;
  v36 = v8;
  v37 = *(_OWORD *)(a1 + 11);
  v38 = *(_OWORD *)(a1 + 13);
  v17 = v9;
  v18 = *(_OWORD *)(v1 + 1);
  v19 = *(_OWORD *)(v1 + 3);
  v20 = v10;
  v21 = v11;
  v22 = v12;
  v23 = v13;
  v24 = v14;
  v25 = v15;
  v26 = *(_OWORD *)(v1 + 11);
  v27 = *(_OWORD *)(v1 + 13);
  return _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v28) & 1;
}

uint64_t sub_1C21171F4(uint64_t a1)
{
  return sub_1C2114AF0(a1) & 1;
}

uint64_t sub_1C2117230(uint64_t a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v5[2];
  char v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = v1[1];
  v7 = *v1;
  v8 = v3;
  v9 = *((_BYTE *)v1 + 32);
  return sub_1C2116234(v5) & 1;
}

uint64_t sub_1C2117280(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2114BBC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo, (uint64_t (*)(uint64_t))sub_1C20F6C84) & 1;
}

uint64_t sub_1C21172B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117FD0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20F6C84);
}

uint64_t sub_1C21172BC(uint64_t a1)
{
  return sub_1C2114ED0(a1) & 1;
}

uint64_t sub_1C2117300(__int128 *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)v1 + 2);
  v10 = *a1;
  v11 = v2;
  v12 = *(__int128 *)((char *)a1 + 24);
  v13 = *(__int128 *)((char *)a1 + 40);
  v14 = *(__int128 *)((char *)a1 + 56);
  v5 = *v1;
  v6 = v3;
  v7 = *(__int128 *)((char *)v1 + 24);
  v8 = *(__int128 *)((char *)v1 + 40);
  v9 = *(__int128 *)((char *)v1 + 56);
  return _s20SiriOntologyProtobuf07Google_C15_SourceCodeInfoV8LocationV2eeoiySbAE_AEtFZ_0((uint64_t *)&v5, (uint64_t *)&v10) & 1;
}

uint64_t sub_1C2117378(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2114BBC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo, (uint64_t (*)(uint64_t))sub_1C20F63E0) & 1;
}

uint64_t sub_1C21173A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117FD0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20F63E0);
}

uint64_t sub_1C21173B4(uint64_t a1)
{
  return sub_1C2114CC8(a1) & 1;
}

uint64_t sub_1C21173F8(uint64_t *a1)
{
  uint64_t *v1;
  int v2;
  char v3;
  int v4;
  char v5;
  uint64_t v6;
  int v7;
  char v8;
  int v9;
  char v10;
  __int128 v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  int v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  int v23;
  char v24;
  int v25;
  char v26;

  v2 = *((_DWORD *)a1 + 10);
  v3 = *((_BYTE *)a1 + 44);
  v4 = *((_DWORD *)a1 + 12);
  v5 = *((_BYTE *)a1 + 52);
  v6 = *v1;
  v7 = *((_DWORD *)v1 + 10);
  v8 = *((_BYTE *)v1 + 44);
  v9 = *((_DWORD *)v1 + 12);
  v10 = *((_BYTE *)v1 + 52);
  v20 = *a1;
  v11 = *(_OWORD *)(a1 + 3);
  v21 = *(_OWORD *)(a1 + 1);
  v22 = v11;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v13 = v6;
  v14 = *(_OWORD *)(v1 + 1);
  v15 = *(_OWORD *)(v1 + 3);
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  return _s20SiriOntologyProtobuf07Google_C18_GeneratedCodeInfoV10AnnotationV2eeoiySbAE_AEtFZ_0((uint64_t)&v13, (uint64_t)&v20) & 1;
}

uint64_t sub_1C211748C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C211535C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t static Message.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  result = a1(a4);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a4, a2);
  return result;
}

uint64_t static _MessageImplementationBase.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(a2, a3, a4) & 1;
}

uint64_t dispatch thunk of Message.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static Message.protoMessageName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Message.isInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Message.unknownFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Message.unknownFields.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Message.unknownFields.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Message.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of Message.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of Message.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of Message.isEqualTo(message:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of _MessageImplementationBase._protobuf_generated_isEqualTo(other:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C21175EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C20BE21C(a1, *(_QWORD *)v1, *(unsigned int *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C21175FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115B94(a1, *(_QWORD *)v1, *(_DWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&type metadata for Google_Protobuf_Timestamp, (void (*)(uint64_t))sub_1C21186FC, (void (*)(uint64_t))sub_1C2118718) & 1;
}

void sub_1C211763C(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE320(a1, *v1, v1[1]);
}

uint64_t sub_1C2117644(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21147BC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_1C211764C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v5 = *v1;
  v4 = v1[1];
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v2, v3);
  sub_1C20FD650(v5, v4);
  v7 = v6;
  sub_1C20A8058(v2, v3);
  sub_1C20A8058(v5, v4);
  return v7 & 1;
}

uint64_t sub_1C21176C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C211489C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD **)(v1 + 16));
}

uint64_t sub_1C21176D4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)a1[2];
  v5 = *v1;
  v6 = v1[1];
  if ((_QWORD *)v1[2] != v4 && (sub_1C2152554(v4) & 1) == 0)
    return 0;
  sub_1C20A8008(v5, v6);
  sub_1C20A8008(v2, v3);
  sub_1C20FD650(v5, v6);
  v8 = v7;
  sub_1C20A8058(v2, v3);
  sub_1C20A8058(v5, v6);
  return v8 & 1;
}

void sub_1C2117770(uint64_t a1)
{
  uint64_t v1;

  sub_1C20BF05C(*(double *)v1, a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C211777C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115618(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(double *)v1);
}

uint64_t sub_1C2117788(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*(double *)v1 != *(double *)a1)
    return 0;
  v4 = v1 + 8;
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v4 + 8);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v3, v2);
  sub_1C20A8008(v6, v5);
  sub_1C20FD650(v3, v2);
  v8 = v7;
  sub_1C20A8058(v6, v5);
  sub_1C20A8058(v3, v2);
  return v8 & 1;
}

void sub_1C211781C(uint64_t a1)
{
  uint64_t v1;

  sub_1C20BF35C(*(float *)v1, a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C2117828(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115958(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(float *)v1);
}

uint64_t sub_1C2117834(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*(float *)v1 != *(float *)a1)
    return 0;
  v4 = v1 + 8;
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v4 + 8);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v3, v2);
  sub_1C20A8008(v6, v5);
  sub_1C20FD650(v3, v2);
  v8 = v7;
  sub_1C20A8058(v6, v5);
  sub_1C20A8058(v3, v2);
  return v8 & 1;
}

uint64_t sub_1C21178C8(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C20BEE60(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C21178D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C211572C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Int64Value, (void (*)(uint64_t))sub_1C2118A4C, (void (*)())sub_1C2118A48) & 1;
}

uint64_t sub_1C2117910(uint64_t a1)
{
  uint64_t v1;

  return sub_1C211572C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_UInt64Value, (void (*)(uint64_t))sub_1C2118A4C, (void (*)())sub_1C2118A48) & 1;
}

uint64_t sub_1C2117948(_QWORD *a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*v1 != *a1)
    return 0;
  v4 = v1 + 1;
  v3 = v1[1];
  v2 = v4[1];
  v6 = a1[1];
  v5 = a1[2];
  sub_1C20A8008(v3, v2);
  sub_1C20A8008(v6, v5);
  sub_1C20FD650(v3, v2);
  v8 = v7;
  sub_1C20A8058(v6, v5);
  sub_1C20A8058(v3, v2);
  return v8 & 1;
}

void sub_1C21179DC(uint64_t a1)
{
  uint64_t v1;

  sub_1C20BF260(a1, *(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C21179E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115840(a1, *(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Int32Value, (void (*)())sub_1C2118A4C, (void (*)())sub_1C2118A48) & 1;
}

void sub_1C2117A24(uint64_t a1)
{
  uint64_t v1;

  sub_1C20BEE64(a1, *(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C2117A30(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115840(a1, *(_DWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_UInt32Value, (void (*)())sub_1C2118A4C, (void (*)())sub_1C2118A48) & 1;
}

uint64_t sub_1C2117A68(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if (*(_DWORD *)v1 != *(_DWORD *)a1)
    return 0;
  v4 = v1 + 8;
  v3 = *(_QWORD *)(v1 + 8);
  v2 = *(_QWORD *)(v4 + 8);
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  sub_1C20A8008(v3, v2);
  sub_1C20A8008(v6, v5);
  sub_1C20FD650(v3, v2);
  v8 = v7;
  sub_1C20A8058(v6, v5);
  sub_1C20A8058(v3, v2);
  return v8 & 1;
}

void sub_1C2117AFC(uint64_t a1)
{
  uint64_t v1;

  sub_1C20BF7D8(a1, *(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C2117B08(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115E28(a1, *(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C2117B14(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  unint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*a1 != *v1)
    return 0;
  v5 = v1 + 8;
  v4 = *((_QWORD *)v1 + 1);
  v3 = *((_QWORD *)v5 + 1);
  v7 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  sub_1C20A8008(v4, v3);
  sub_1C20A8008(v7, v6);
  sub_1C20FD650(v4, v3);
  v9 = v8;
  sub_1C20A8058(v7, v6);
  sub_1C20A8058(v4, v3);
  return v9 & 1;
}

uint64_t sub_1C2117BA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C211535C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1C2117BD0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  char v11;
  char v12;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *v1;
  v7 = v1[1];
  v8 = v1[2];
  v9 = v1[3];
  v10 = v6 == v2 && v7 == v3;
  if (!v10 && (sub_1C21757C8() & 1) == 0)
    return 0;
  sub_1C20A8008(v8, v9);
  sub_1C20A8008(v4, v5);
  sub_1C20FD650(v8, v9);
  v12 = v11;
  sub_1C20A8058(v4, v5);
  sub_1C20A8058(v8, v9);
  return v12 & 1;
}

void sub_1C2117C74(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BF464(a1, *v1, v1[1]);
}

uint64_t sub_1C2117C80(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115A6C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C2117C8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  sub_1C20FD650(v4, v5);
  if ((v8 & 1) == 0)
    return 0;
  sub_1C20A8008(v6, v7);
  sub_1C20A8008(v2, v3);
  sub_1C20FD650(v6, v7);
  v10 = v9;
  sub_1C20A8058(v2, v3);
  sub_1C20A8058(v6, v7);
  return v10 & 1;
}

void sub_1C2117D20(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BF6B4(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C2117D2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2114BBC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FieldMask, (uint64_t (*)(uint64_t))sub_1C20F76E4) & 1;
}

uint64_t sub_1C2117D5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117FD0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20F76E4);
}

uint64_t sub_1C2117D68(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2115B94(a1, *(_QWORD *)v1, *(_DWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&type metadata for Google_Protobuf_Duration, (void (*)(uint64_t))sub_1C2118A3C, (void (*)(uint64_t))sub_1C2118A40) & 1;
}

uint64_t sub_1C2117DA4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  if (*(_QWORD *)v1 != *(_QWORD *)a1 || *(_DWORD *)(v1 + 8) != *(_DWORD *)(a1 + 8))
    return 0;
  v6 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  sub_1C20A8008(v5, v4);
  sub_1C20A8008(v8, v7);
  sub_1C20FD650(v5, v4);
  v10 = v9;
  sub_1C20A8058(v8, v7);
  sub_1C20A8058(v5, v4);
  return v10 & 1;
}

void sub_1C2117E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C2175834();
    sub_1C2118064(a1, a2);
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2117EA4()
{
  uint64_t v0;
  uint64_t result;

  if ((v0 & 0xFF000000000000) != 0)
    return sub_1C2175354();
  return result;
}

double sub_1C2117EF8(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA24C(a1, a2, a3, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t))sub_1C2117E44);
}

uint64_t sub_1C2117F04(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2114BBC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Struct, (uint64_t (*)(uint64_t))sub_1C216C06C) & 1;
}

uint64_t sub_1C2117F34(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117FD0(a1, a2, a3, sub_1C216C06C);
}

double sub_1C2117F40(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20EA24C(a1, a2, a3, (void (*)(__int128 *, uint64_t, uint64_t, uint64_t))sub_1C216B114);
}

uint64_t sub_1C2117F4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C21143E0(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C216B80C) & 1;
}

uint64_t sub_1C2117F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2116584(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C216B80C);
}

void sub_1C2117F88(uint64_t a1)
{
  uint64_t *v1;

  sub_1C20BE308(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C2117F94(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2114BBC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_ListValue, (uint64_t (*)(uint64_t))sub_1C20F77A8) & 1;
}

uint64_t sub_1C2117FC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2117FD0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C20F77A8);
}

uint64_t sub_1C2117FD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *v4;
  v9 = v4[1];
  v10 = v4[2];
  if ((a4(v8, v5) & 1) == 0)
    return 0;
  sub_1C20A8008(v9, v10);
  sub_1C20A8008(v6, v7);
  sub_1C20FD650(v9, v10);
  v12 = v11;
  sub_1C20A8058(v6, v7);
  sub_1C20A8058(v9, v10);
  return v12 & 1;
}

uint64_t sub_1C2118064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int64_t v16;
  _QWORD *v17;

  v17 = (_QWORD *)(a2 + 64);
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v16 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = __clz(__rbit64(v4));
    goto LABEL_13;
  }
  v6 = 1;
  if (v16 > 1)
  {
    v7 = v17[1];
    if (v7)
    {
LABEL_12:
      v5 = __clz(__rbit64(v7)) + (v6 << 6);
LABEL_13:
      v9 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * v5);
      v11 = *v9;
      v10 = v9[1];
      v12 = v9[2];
      swift_bridgeObjectRetain();
      sub_1C20A8008(v11, v10);
      swift_retain();
      sub_1C21754C8();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v12 + 32);
      v14 = *(unsigned __int8 *)(v12 + 40);
      if ((~v13 & 0x3000000000000000) == 0 && v14 == 255)
      {
        swift_retain();
        swift_release();
        __asm { BR              X9 }
      }
      __asm { BR              X9 }
    }
    v8 = 2;
    if (v16 > 2)
    {
      v7 = v17[2];
      if (v7)
      {
LABEL_11:
        v6 = v8;
        goto LABEL_12;
      }
      v8 = 3;
      if (v16 > 3)
      {
        v7 = v17[3];
        if (v7)
          goto LABEL_11;
        while (1)
        {
          v6 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            JUMPOUT(0x1C2118608);
          }
          if (v6 >= v16)
            break;
          v7 = v17[v6];
          ++v8;
          if (v7)
            goto LABEL_12;
        }
      }
    }
  }
  swift_release();
  return sub_1C2175834();
}

uint64_t sub_1C2118650(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1C20A8058(result, a2);
    return sub_1C20A8058(a3, a4);
  }
  return result;
}

uint64_t sub_1C211868C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 2)
    return sub_1C20A8058(a2, a3);
  return result;
}

uint64_t sub_1C21186A8(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 2)
    return sub_1C20A8008(a2, a3);
  return result;
}

uint64_t sub_1C21186C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 60 != 15)
    return sub_1C20A8058(a2, a3);
  return result;
}

uint64_t sub_1C21186E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 60 != 15)
    return sub_1C20A8008(a2, a3);
  return result;
}

uint64_t sub_1C21186FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >> 60 != 15)
    return sub_1C20A8058(a3, a4);
  return result;
}

uint64_t sub_1C2118718(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >> 60 != 15)
    return sub_1C20A8008(a3, a4);
  return result;
}

uint64_t sub_1C2118734(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1C20A8058(a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C211877C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20A8058(a4, a5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21187F0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    sub_1C20A8058(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2118820(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1C20A8058(a2, a3);
    swift_bridgeObjectRelease();
    sub_1C20AE1C8(a12, a13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C211888C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C20A8058(a12, a13);
  }
  return result;
}

uint64_t sub_1C21188F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C20A8058(a5, a6);
  }
  return result;
}

double sub_1C2118940(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1C2118958(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1C2118970(uint64_t a1)
{
  sub_1C21189C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  return a1;
}

uint64_t sub_1C21189C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C20A8058(a15, a16);
  }
  return result;
}

uint64_t dispatch thunk of ExtensionMap.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ExtensionMap.fieldNumberForProto(messageType:protoFieldName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t Message.init(unpackingAny:extensions:options:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v10 = a1[1];
  v15 = *a1;
  v11 = *(_QWORD *)a3;
  v12 = *(_BYTE *)(a3 + 8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16))(a6, a4, a5);
  v16 = v11;
  v17 = v12;
  v13 = v18;
  sub_1C2155900((uint64_t)a6, a2, &v16, a4, a5);
  sub_1C20A8058(v15, v10);
  swift_release();
  result = sub_1C20A8FA0(a2);
  if (v13)
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a6, a4);
  return result;
}

uint64_t Google_Protobuf_Timestamp.seconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Google_Protobuf_Timestamp.seconds.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_Timestamp.seconds.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Timestamp.nanos.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t Google_Protobuf_Timestamp.nanos.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Google_Protobuf_Timestamp.nanos.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Timestamp.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C20A8008(v2, v3);
}

uint64_t Google_Protobuf_Timestamp.unknownFields.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1C20A8058(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Timestamp.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Timestamp.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
  return result;
}

unint64_t static Google_Protobuf_Timestamp.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C2118C18()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1E7BD3938, &qword_1EF75FAD0);
}

uint64_t static Google_Protobuf_Timestamp._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCC0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FAD8;
  v3 = qword_1EF75FAE0;
  v4 = unk_1EF75FAE8;
  *a1 = qword_1EF75FAD0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Timestamp.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t result;
  char v9;

  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 8, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(v3, a2, a3);
      }
      result = v7(a2, a3);
    }
  }
  return result;
}

__n128 Google_Protobuf_Timestamp.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  __n128 result;

  v7 = *(unsigned int *)(v3 + 8);
  if (!*(_QWORD *)v3
    || ((*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(a3 + 32))(*(_QWORD *)v3, 1, a2, a3), !v4))
  {
    if (!(_DWORD)v7 || ((*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v7, 2, a2, a3), !v4))
      UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t Google_Protobuf_Timestamp.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = *((unsigned int *)v0 + 2);
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE21C(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

double sub_1C2118E54@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C2175DE0;
  return result;
}

unint64_t sub_1C2118E6C()
{
  return 0xD000000000000019;
}

uint64_t sub_1C2118E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Timestamp.decodeMessage<A>(decoder:)(a1, a2, a3);
}

double sub_1C2118E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = Google_Protobuf_Timestamp.traverse<A>(visitor:)(a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t sub_1C2118EB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EF75CCC0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF75FAD8;
  v3 = qword_1EF75FAE0;
  v4 = unk_1EF75FAE8;
  *a1 = qword_1EF75FAD0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2118F2C()
{
  uint64_t v0;

  return sub_1C21598E8(*(_QWORD *)v0, *(_DWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C2118F3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = *((unsigned int *)v0 + 2);
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE21C(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

uint64_t sub_1C2118F9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[72];

  v1 = *v0;
  v2 = *((unsigned int *)v0 + 2);
  v4 = v0[2];
  v3 = v0[3];
  sub_1C2175828();
  sub_1C20BE21C(v6, v1, v2, v4, v3);
  return sub_1C2175870();
}

uint64_t _s20SiriOntologyProtobuf07Google_C10_TimestampV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8))
    return 0;
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1C20A8008(v7, v6);
  sub_1C20A8008(v5, v4);
  sub_1C20FD650(v7, v6);
  v9 = v8;
  sub_1C20A8058(v5, v4);
  sub_1C20A8058(v7, v6);
  return v9 & 1;
}

unint64_t sub_1C211909C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C21190C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C21190C0()
{
  unint64_t result;

  result = qword_1EF75FAF0;
  if (!qword_1EF75FAF0)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Timestamp, &type metadata for Google_Protobuf_Timestamp);
    atomic_store(result, (unint64_t *)&qword_1EF75FAF0);
  }
  return result;
}

unint64_t sub_1C2119104(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C2119130();
  result = sub_1C2119174();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2119130()
{
  unint64_t result;

  result = qword_1EF75FAF8;
  if (!qword_1EF75FAF8)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Timestamp, &type metadata for Google_Protobuf_Timestamp);
    atomic_store(result, (unint64_t *)&qword_1EF75FAF8);
  }
  return result;
}

unint64_t sub_1C2119174()
{
  unint64_t result;

  result = qword_1EF75FB00;
  if (!qword_1EF75FB00)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Timestamp, &type metadata for Google_Protobuf_Timestamp);
    atomic_store(result, (unint64_t *)&qword_1EF75FB00);
  }
  return result;
}

unint64_t sub_1C21191BC()
{
  unint64_t result;

  result = qword_1EF75FB08;
  if (!qword_1EF75FB08)
  {
    result = MEMORY[0x1C3BB7F64](&protocol conformance descriptor for Google_Protobuf_Timestamp, &type metadata for Google_Protobuf_Timestamp);
    atomic_store(result, (unint64_t *)&qword_1EF75FB08);
  }
  return result;
}

uint64_t destroy for Google_Protobuf_Timestamp(uint64_t a1)
{
  return sub_1C20A8058(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for Google_Protobuf_Timestamp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  sub_1C20A8008(v3, v4);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Timestamp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  sub_1C20A8008(v3, v4);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  sub_1C20A8058(v5, v6);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_Timestamp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1C20A8058(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Timestamp(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 24) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 24) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Timestamp(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Timestamp()
{
  return &type metadata for Google_Protobuf_Timestamp;
}

uint64_t destroy for JSONEncodingVisitor()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONEncodingVisitor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSONEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSONEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONEncodingVisitor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncodingVisitor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONEncodingVisitor()
{
  return &type metadata for JSONEncodingVisitor;
}

uint64_t sub_1C2119660@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  char v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  _BYTE *v10;
  __int128 v11[2];
  uint64_t v12;
  _OWORD v13[2];
  _QWORD v14[5];

  v5 = *a2;
  v6 = a2[1];
  sub_1C20A84A8(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7DFDC0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1C20A8734(v11, (uint64_t)v14);
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    swift_getDynamicType();
    (*(void (**)(_OWORD *__return_ptr))(v14[4] + 8))(v13);
    __swift_destroy_boxed_opaque_existential_1(a1);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    v8 = v13[0];
    v9 = v13[1];
    *(_QWORD *)a3 = MEMORY[0x1E0DEE9D8];
    *(_WORD *)(a3 + 8) = 256;
    *(_OWORD *)(a3 + 16) = v8;
    *(_OWORD *)(a3 + 32) = v9;
    *(_BYTE *)(a3 + 48) = v5;
    *(_BYTE *)(a3 + 49) = v6;
  }
  else
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    sub_1C211DDD0((uint64_t)v11);
    sub_1C20C6080();
    swift_allocError();
    *v10 = 4;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1(a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21197B4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;

  v2 = *(unsigned __int8 *)(v1 + 49);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v2 != 1)
  {
    if (v4)
    {
      v14 = sub_1C20A9B94(a1);
      if ((v15 & 1) != 0)
      {
        v16 = *(_QWORD *)(v3 + 56) + 80 * v14;
        v12 = *(unsigned __int16 *)(v16 + 32);
        if (v12 >> 8 <= 0xFE)
        {
          v11 = *(_QWORD *)(v16 + 16);
          v10 = *(_QWORD *)(v16 + 24);
          v13 = (v12 >> 8) & 1;
          v8 = *(_QWORD *)v16;
          v9 = *(_QWORD *)(v16 + 8);
          goto LABEL_10;
        }
      }
    }
LABEL_8:
    sub_1C20C6080();
    swift_allocError();
    *v17 = 4;
    return swift_willThrow();
  }
  if (!v4)
    goto LABEL_8;
  v5 = sub_1C20A9B94(a1);
  if ((v6 & 1) == 0)
    goto LABEL_8;
  v7 = *(_QWORD *)(v3 + 56) + 80 * v5;
  v8 = *(_QWORD *)(v7 + 40);
  v9 = *(_QWORD *)(v7 + 48);
  v11 = *(_QWORD *)(v7 + 56);
  v10 = *(_QWORD *)(v7 + 64);
  v12 = *(unsigned __int8 *)(v7 + 72);
  LOBYTE(v13) = *(_BYTE *)(v7 + 73);
LABEL_10:
  sub_1C20A9EA4(v11, v10, v12, v13);
  sub_1C211FDC8(v8, v9);
  return sub_1C20AA8C4(v11, v10, v12, v13);
}

uint64_t sub_1C21198D0(int a1, uint64_t a2)
{
  char **v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = a1;
    if (a1 < 0)
    {
      v7 = *v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v2 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        *v2 = v7;
      }
      v9 = *((_QWORD *)v7 + 2);
      v10 = *((_QWORD *)v7 + 3);
      v11 = v9 + 1;
      if (v9 >= v10 >> 1)
      {
        v15 = v9 + 1;
        v12 = v7;
        v13 = *((_QWORD *)v7 + 2);
        v14 = sub_1C214E1A4((char *)(v10 > 1), v9 + 1, 1, v12);
        v9 = v13;
        v11 = v15;
        v7 = v14;
      }
      *((_QWORD *)v7 + 2) = v11;
      v7[v9 + 32] = 45;
      *v2 = v7;
      v6 = -(uint64_t)v6;
    }
    return sub_1C211F414(v6);
  }
  return result;
}

uint64_t sub_1C21199A8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v7 = *(char **)a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      *(_QWORD *)a3 = v7;
    }
    v10 = *((_QWORD *)v7 + 2);
    v9 = *((_QWORD *)v7 + 3);
    if (v10 >= v9 >> 1)
      v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    v11 = a1[2];
    if (v11)
    {
      v12 = a1[4];
      swift_bridgeObjectRetain();
      sub_1C211E3C4(v12);
      v13 = v11 - 1;
      if (v11 != 1)
      {
        v16 = a1 + 5;
        do
        {
          v18 = *v16++;
          v17 = v18;
          v19 = *(char **)a3;
          v20 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)a3 = v19;
          if ((v20 & 1) == 0)
          {
            v19 = sub_1C214E1A4(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
            *(_QWORD *)a3 = v19;
          }
          v22 = *((_QWORD *)v19 + 2);
          v21 = *((_QWORD *)v19 + 3);
          if (v22 >= v21 >> 1)
            v19 = sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, v19);
          *((_QWORD *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(_QWORD *)a3 = v19;
          sub_1C211E3C4(v17);
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      v7 = *(char **)a3;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v7 = (char *)result;
      *(_QWORD *)a3 = result;
    }
    v15 = *((_QWORD *)v7 + 2);
    v14 = *((_QWORD *)v7 + 3);
    if (v15 >= v14 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v7);
      v7 = (char *)result;
    }
    *((_QWORD *)v7 + 2) = v15 + 1;
    v7[v15 + 32] = 93;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C2119BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  char v28;
  unint64_t v29;
  unint64_t v30;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v7 = *(char **)a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      *(_QWORD *)a3 = v7;
    }
    v10 = *((_QWORD *)v7 + 2);
    v9 = *((_QWORD *)v7 + 3);
    if (v10 >= v9 >> 1)
      v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    v11 = *(_QWORD *)(a1 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = *(int *)(a1 + 32);
      if ((v12 & 0x80000000) != 0)
      {
        v13 = *(char **)a3;
        v14 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)a3 = v13;
        if ((v14 & 1) == 0)
        {
          v13 = sub_1C214E1A4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          *(_QWORD *)a3 = v13;
        }
        v16 = *((_QWORD *)v13 + 2);
        v15 = *((_QWORD *)v13 + 3);
        if (v16 >= v15 >> 1)
          v13 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v13);
        *((_QWORD *)v13 + 2) = v16 + 1;
        v13[v16 + 32] = 45;
        *(_QWORD *)a3 = v13;
        v12 = -(uint64_t)v12;
      }
      sub_1C211F414(v12);
      v17 = v11 - 1;
      if (v17)
      {
        v20 = (int *)(a1 + 36);
        do
        {
          v22 = *v20++;
          v21 = v22;
          v23 = *(char **)a3;
          v24 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)a3 = v23;
          if ((v24 & 1) == 0)
          {
            v23 = sub_1C214E1A4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
            *(_QWORD *)a3 = v23;
          }
          v26 = *((_QWORD *)v23 + 2);
          v25 = *((_QWORD *)v23 + 3);
          if (v26 >= v25 >> 1)
            v23 = sub_1C214E1A4((char *)(v25 > 1), v26 + 1, 1, v23);
          *((_QWORD *)v23 + 2) = v26 + 1;
          v23[v26 + 32] = 44;
          *(_QWORD *)a3 = v23;
          if ((v21 & 0x80000000) != 0)
          {
            v27 = *(char **)a3;
            v28 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)a3 = v27;
            if ((v28 & 1) == 0)
            {
              v27 = sub_1C214E1A4(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
              *(_QWORD *)a3 = v27;
            }
            v30 = *((_QWORD *)v27 + 2);
            v29 = *((_QWORD *)v27 + 3);
            if (v30 >= v29 >> 1)
              v27 = sub_1C214E1A4((char *)(v29 > 1), v30 + 1, 1, v27);
            *((_QWORD *)v27 + 2) = v30 + 1;
            v27[v30 + 32] = 45;
            *(_QWORD *)a3 = v27;
            v21 = -(uint64_t)v21;
          }
          sub_1C211F414(v21);
          --v17;
        }
        while (v17);
      }
      swift_bridgeObjectRelease();
      v7 = *(char **)a3;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v7 = (char *)result;
      *(_QWORD *)a3 = result;
    }
    v19 = *((_QWORD *)v7 + 2);
    v18 = *((_QWORD *)v7 + 3);
    if (v19 >= v18 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v7);
      v7 = (char *)result;
    }
    *((_QWORD *)v7 + 2) = v19 + 1;
    v7[v19 + 32] = 93;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C2119F00(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v7 = *(char **)a3;
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v7 = (char *)result;
      *(_QWORD *)a3 = result;
    }
    v9 = *((_QWORD *)v7 + 2);
    v8 = *((_QWORD *)v7 + 3);
    if (v9 >= v8 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v7);
      v7 = (char *)result;
    }
    *((_QWORD *)v7 + 2) = v9 + 1;
    v7[v9 + 32] = 91;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    v10 = a1[2];
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = a1[4];
      *(_QWORD *)a3 = v7;
      v13 = *((_QWORD *)v7 + 2);
      v12 = *((_QWORD *)v7 + 3);
      if (v13 >= v12 >> 1)
        v7 = sub_1C214E1A4((char *)(v12 > 1), v13 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v13 + 1;
      v7[v13 + 32] = 34;
      *(_QWORD *)a3 = v7;
      sub_1C211F414(v11);
      v7 = *(char **)a3;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)a3 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        *(_QWORD *)a3 = v7;
      }
      v16 = *((_QWORD *)v7 + 2);
      v15 = *((_QWORD *)v7 + 3);
      if (v16 >= v15 >> 1)
        v7 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v7);
      *((_QWORD *)v7 + 2) = v16 + 1;
      v7[v16 + 32] = 34;
      *(_QWORD *)a3 = v7;
      v17 = v10 - 1;
      if (v10 != 1)
      {
        v20 = a1 + 5;
        do
        {
          v22 = *v20++;
          v21 = v22;
          *(_QWORD *)a3 = v7;
          v24 = *((_QWORD *)v7 + 2);
          v23 = *((_QWORD *)v7 + 3);
          if (v24 >= v23 >> 1)
            v7 = sub_1C214E1A4((char *)(v23 > 1), v24 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v24 + 1;
          v7[v24 + 32] = 44;
          *(_QWORD *)a3 = v7;
          v26 = *((_QWORD *)v7 + 2);
          v25 = *((_QWORD *)v7 + 3);
          if (v26 >= v25 >> 1)
            v7 = sub_1C214E1A4((char *)(v25 > 1), v26 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v26 + 1;
          v7[v26 + 32] = 34;
          *(_QWORD *)a3 = v7;
          sub_1C211F414(v21);
          v7 = *(char **)a3;
          v27 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)a3 = v7;
          if ((v27 & 1) == 0)
          {
            v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
            *(_QWORD *)a3 = v7;
          }
          v29 = *((_QWORD *)v7 + 2);
          v28 = *((_QWORD *)v7 + 3);
          if (v29 >= v28 >> 1)
            v7 = sub_1C214E1A4((char *)(v28 > 1), v29 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v29 + 1;
          v7[v29 + 32] = 34;
          *(_QWORD *)a3 = v7;
          --v17;
        }
        while (v17);
      }
      result = swift_bridgeObjectRelease();
    }
    *(_QWORD *)a3 = v7;
    v19 = *((_QWORD *)v7 + 2);
    v18 = *((_QWORD *)v7 + 3);
    if (v19 >= v18 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v18 > 1), v19 + 1, 1, v7);
      v7 = (char *)result;
    }
    *((_QWORD *)v7 + 2) = v19 + 1;
    v7[v19 + 32] = 93;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211A248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int *v16;
  unint64_t v17;
  unsigned int v18;
  char *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v7 = *(char **)a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      *(_QWORD *)a3 = v7;
    }
    v10 = *((_QWORD *)v7 + 2);
    v9 = *((_QWORD *)v7 + 3);
    if (v10 >= v9 >> 1)
      v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    v11 = *(_QWORD *)(a1 + 16);
    if (v11)
    {
      v12 = *(unsigned int *)(a1 + 32);
      swift_bridgeObjectRetain();
      sub_1C211F414(v12);
      v13 = v11 - 1;
      if (v11 != 1)
      {
        v16 = (unsigned int *)(a1 + 36);
        do
        {
          v18 = *v16++;
          v17 = v18;
          v19 = *(char **)a3;
          v20 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)a3 = v19;
          if ((v20 & 1) == 0)
          {
            v19 = sub_1C214E1A4(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
            *(_QWORD *)a3 = v19;
          }
          v22 = *((_QWORD *)v19 + 2);
          v21 = *((_QWORD *)v19 + 3);
          if (v22 >= v21 >> 1)
            v19 = sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, v19);
          *((_QWORD *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(_QWORD *)a3 = v19;
          sub_1C211F414(v17);
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      v7 = *(char **)a3;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v7 = (char *)result;
      *(_QWORD *)a3 = result;
    }
    v15 = *((_QWORD *)v7 + 2);
    v14 = *((_QWORD *)v7 + 3);
    if (v15 >= v14 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v7);
      v7 = (char *)result;
    }
    *((_QWORD *)v7 + 2) = v15 + 1;
    v7[v15 + 32] = 93;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211A470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  unsigned __int8 *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  double *v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  char *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;

  result = sub_1C21197B4(a2);
  if (v3)
    return result;
  v7 = *(char **)a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)a3 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    *(_QWORD *)a3 = v7;
  }
  v10 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  if (v10 >= v9 >> 1)
    v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
  *((_QWORD *)v7 + 2) = v10 + 1;
  v7[v10 + 32] = 91;
  *(_QWORD *)a3 = v7;
  *(_WORD *)(a3 + 8) = 256;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = *(double *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) != 0)
    {
      v16 = sub_1C2175618();
      sub_1C20AA79C(v16, v17);
      v18 = v11 - 1;
      if (v11 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        v7 = *(char **)a3;
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(_QWORD *)&v12 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        v14 = "\"NaN\"";
        v15 = 5;
      }
      else if (v12 >= 0.0)
      {
        v14 = "\"Infinity\"";
        v15 = 10;
      }
      else
      {
        v14 = "\"-Infinity\"";
        v15 = 11;
      }
      sub_1C20A9EB4((uint64_t)v14, v15, v13);
      v18 = v11 - 1;
      if (v11 == 1)
        goto LABEL_16;
    }
    v21 = (double *)(a1 + 40);
    do
    {
      v24 = *v21;
      v25 = *(char **)a3;
      v26 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)a3 = v25;
      if ((v26 & 1) == 0)
      {
        v25 = sub_1C214E1A4(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
        *(_QWORD *)a3 = v25;
      }
      v28 = *((_QWORD *)v25 + 2);
      v27 = *((_QWORD *)v25 + 3);
      if (v28 >= v27 >> 1)
        v25 = sub_1C214E1A4((char *)(v27 > 1), v28 + 1, 1, v25);
      *((_QWORD *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 44;
      *(_QWORD *)a3 = v25;
      if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) != 0)
      {
        v22 = sub_1C2175618();
        sub_1C20AA79C(v22, v23);
      }
      else if ((*(_QWORD *)&v24 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        sub_1C20A9EB4((uint64_t)"\"NaN\"", 5, *(unsigned __int8 **)&v24);
      }
      else if (v24 >= 0.0)
      {
        sub_1C20A9EB4((uint64_t)"\"Infinity\"", 10, *(unsigned __int8 **)&v24);
      }
      else
      {
        sub_1C20A9EB4((uint64_t)"\"-Infinity\"", 11, *(unsigned __int8 **)&v24);
      }
      ++v21;
      --v18;
    }
    while (v18);
    goto LABEL_16;
  }
LABEL_17:
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)a3 = v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    v7 = (char *)result;
    *(_QWORD *)a3 = result;
  }
  v20 = *((_QWORD *)v7 + 2);
  v19 = *((_QWORD *)v7 + 3);
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v7);
    v7 = (char *)result;
  }
  *((_QWORD *)v7 + 2) = v20 + 1;
  v7[v20 + 32] = 93;
  *(_QWORD *)a3 = v7;
  *(_WORD *)(a3 + 8) = 44;
  return result;
}

uint64_t sub_1C211A76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  float v12;
  unsigned __int8 *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  float *v21;
  uint64_t v22;
  unint64_t v23;
  float v24;
  char *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;

  result = sub_1C21197B4(a2);
  if (v3)
    return result;
  v7 = *(char **)a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)a3 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    *(_QWORD *)a3 = v7;
  }
  v10 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  if (v10 >= v9 >> 1)
    v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
  *((_QWORD *)v7 + 2) = v10 + 1;
  v7[v10 + 32] = 91;
  *(_QWORD *)a3 = v7;
  *(_WORD *)(a3 + 8) = 256;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = *(float *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~LODWORD(v12) & 0x7F800000) != 0)
    {
      v16 = sub_1C2175624();
      sub_1C20AA79C(v16, v17);
      v18 = v11 - 1;
      if (v11 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        v7 = *(char **)a3;
        goto LABEL_17;
      }
    }
    else
    {
      if ((LODWORD(v12) & 0x7FFFFF) != 0)
      {
        v14 = "\"NaN\"";
        v15 = 5;
      }
      else if (v12 >= 0.0)
      {
        v14 = "\"Infinity\"";
        v15 = 10;
      }
      else
      {
        v14 = "\"-Infinity\"";
        v15 = 11;
      }
      sub_1C20A9EB4((uint64_t)v14, v15, v13);
      v18 = v11 - 1;
      if (v11 == 1)
        goto LABEL_16;
    }
    v21 = (float *)(a1 + 36);
    do
    {
      v24 = *v21;
      v25 = *(char **)a3;
      v26 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)a3 = v25;
      if ((v26 & 1) == 0)
      {
        v25 = sub_1C214E1A4(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
        *(_QWORD *)a3 = v25;
      }
      v28 = *((_QWORD *)v25 + 2);
      v27 = *((_QWORD *)v25 + 3);
      if (v28 >= v27 >> 1)
        v25 = sub_1C214E1A4((char *)(v27 > 1), v28 + 1, 1, v25);
      *((_QWORD *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 44;
      *(_QWORD *)a3 = v25;
      if ((~LODWORD(v24) & 0x7F800000) != 0)
      {
        v22 = sub_1C2175624();
        sub_1C20AA79C(v22, v23);
      }
      else if ((LODWORD(v24) & 0x7FFFFF) != 0)
      {
        sub_1C20A9EB4((uint64_t)"\"NaN\"", 5, (unsigned __int8 *)LODWORD(v24));
      }
      else if (v24 >= 0.0)
      {
        sub_1C20A9EB4((uint64_t)"\"Infinity\"", 10, (unsigned __int8 *)LODWORD(v24));
      }
      else
      {
        sub_1C20A9EB4((uint64_t)"\"-Infinity\"", 11, (unsigned __int8 *)LODWORD(v24));
      }
      ++v21;
      --v18;
    }
    while (v18);
    goto LABEL_16;
  }
LABEL_17:
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)a3 = v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    v7 = (char *)result;
    *(_QWORD *)a3 = result;
  }
  v20 = *((_QWORD *)v7 + 2);
  v19 = *((_QWORD *)v7 + 3);
  if (v20 >= v19 >> 1)
  {
    result = (uint64_t)sub_1C214E1A4((char *)(v19 > 1), v20 + 1, 1, v7);
    v7 = (char *)result;
  }
  *((_QWORD *)v7 + 2) = v20 + 1;
  v7[v20 + 32] = 93;
  *(_QWORD *)a3 = v7;
  *(_WORD *)(a3 + 8) = 44;
  return result;
}

uint64_t sub_1C211AA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  const char *v20;
  uint64_t v21;
  int v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v26;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v7 = *(char **)a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      *(_QWORD *)a3 = v7;
    }
    v10 = *((_QWORD *)v7 + 2);
    v9 = *((_QWORD *)v7 + 3);
    if (v10 >= v9 >> 1)
      v7 = sub_1C214E1A4((char *)(v9 > 1), v10 + 1, 1, v7);
    *((_QWORD *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    v11 = *(_QWORD *)(a1 + 16);
    if (v11)
    {
      v12 = *(_BYTE *)(a1 + 32);
      swift_bridgeObjectRetain();
      if ((v12 & 1) != 0)
      {
        v14 = "true";
        v15 = 4;
      }
      else
      {
        v14 = "false";
        v15 = 5;
      }
      sub_1C20A9EB4((uint64_t)v14, v15, v13);
      v16 = v11 - 1;
      if (v11 != 1)
      {
        v19 = (unsigned __int8 *)(a1 + 33);
        do
        {
          v22 = *v19;
          v23 = *(char **)a3;
          v24 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)a3 = v23;
          if ((v24 & 1) == 0)
          {
            v23 = sub_1C214E1A4(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
            *(_QWORD *)a3 = v23;
          }
          v26 = *((_QWORD *)v23 + 2);
          v25 = *((_QWORD *)v23 + 3);
          if (v26 >= v25 >> 1)
            v23 = sub_1C214E1A4((char *)(v25 > 1), v26 + 1, 1, v23);
          *((_QWORD *)v23 + 2) = v26 + 1;
          v23[v26 + 32] = 44;
          *(_QWORD *)a3 = v23;
          if (v22)
          {
            v20 = "true";
            v21 = 4;
          }
          else
          {
            v20 = "false";
            v21 = 5;
          }
          sub_1C20A9EB4((uint64_t)v20, v21, (unsigned __int8 *)&v23[v26]);
          ++v19;
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      v7 = *(char **)a3;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)a3 = v7;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v7 = (char *)result;
      *(_QWORD *)a3 = result;
    }
    v18 = *((_QWORD *)v7 + 2);
    v17 = *((_QWORD *)v7 + 3);
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v17 > 1), v18 + 1, 1, v7);
      v7 = (char *)result;
    }
    *((_QWORD *)v7 + 2) = v18 + 1;
    v7[v18 + 32] = 93;
    *(_QWORD *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211ACCC(uint64_t a1, uint64_t a2, void (*a3)(char **, char *), uint64_t a4, uint64_t a5)
{
  char **v5;
  uint64_t v6;
  char **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  char *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char *v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char **v37;
  char *v38;
  void (*v39)(char **, char *);
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v7 = v5;
  v39 = a3;
  v40 = a4;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v36 - v14;
  result = sub_1C21197B4(v16);
  if (!v6)
  {
    v38 = v15;
    v41 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v18 = *v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v7 = v18;
    v36 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_28:
      v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
      *v7 = v18;
    }
    v21 = *((_QWORD *)v18 + 2);
    v20 = *((_QWORD *)v18 + 3);
    if (v21 >= v20 >> 1)
      v18 = sub_1C214E1A4((char *)(v20 > 1), v21 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v21 + 1;
    v18[v21 + 32] = 91;
    *v7 = v18;
    *((_WORD *)v7 + 4) = 256;
    v22 = swift_bridgeObjectRetain();
    if (MEMORY[0x1C3BB7A60](v22, a5))
    {
      v23 = 0;
      v24 = 0;
      v37 = v7;
      do
      {
        v25 = sub_1C21755C4();
        sub_1C2175594();
        if ((v25 & 1) != 0)
        {
          v18 = v38;
          (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v38, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v23, a5);
          v26 = v23 + 1;
          if (__OFADD__(v23, 1))
            goto LABEL_27;
        }
        else
        {
          result = sub_1C21756FC();
          if (v36 != 8)
          {
            __break(1u);
            return result;
          }
          v42 = result;
          v32 = v38;
          (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v38, &v42, a5);
          v18 = v32;
          swift_unknownObjectRelease();
          v26 = v23 + 1;
          if (__OFADD__(v23, 1))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v18, a5);
        if ((v24 & 1) != 0)
        {
          v27 = *v7;
          v28 = swift_isUniquelyReferenced_nonNull_native();
          *v7 = v27;
          if ((v28 & 1) == 0)
          {
            v27 = sub_1C214E1A4(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
            *v7 = v27;
          }
          v30 = *((_QWORD *)v27 + 2);
          v29 = *((_QWORD *)v27 + 3);
          if (v30 >= v29 >> 1)
            v27 = sub_1C214E1A4((char *)(v29 > 1), v30 + 1, 1, v27);
          *((_QWORD *)v27 + 2) = v30 + 1;
          v27[v30 + 32] = 44;
          v7 = v37;
          *v37 = v27;
        }
        v31 = v41;
        v39(v7, v41);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v31, a5);
        ++v23;
        v24 = 1;
      }
      while (v26 != MEMORY[0x1C3BB7A60](a1, a5));
    }
    swift_bridgeObjectRelease();
    v33 = (uint64_t)*v7;
    result = swift_isUniquelyReferenced_nonNull_native();
    *v7 = (char *)v33;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *(_QWORD *)(v33 + 16) + 1, 1, (char *)v33);
      v33 = result;
      *v7 = (char *)result;
    }
    v35 = *(_QWORD *)(v33 + 16);
    v34 = *(_QWORD *)(v33 + 24);
    if (v35 >= v34 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v34 > 1), v35 + 1, 1, (char *)v33);
      v33 = result;
    }
    *(_QWORD *)(v33 + 16) = v35 + 1;
    *(_BYTE *)(v33 + v35 + 32) = 93;
    *v7 = (char *)v33;
    *((_WORD *)v7 + 4) = 44;
  }
  return result;
}

uint64_t sub_1C211B060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char **v6;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  char *v30;
  _BYTE v31[40];
  _QWORD v32[4];
  unsigned __int8 v33;

  v6 = (char **)v4;
  result = sub_1C21197B4(a2);
  if (!v5)
  {
    if ((*(_BYTE *)(v4 + 48) & 1) != 0
      || (sub_1C20B7A9C(a3, a4, (uint64_t)v31), sub_1C20CC5FC((uint64_t)v31, (uint64_t)v32), v33 == 255))
    {
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
      v11 = v10;
      if ((v10 & 0x8000000000000000) != 0)
      {
        v12 = *v6;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v6 = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v12 = sub_1C214E1A4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
          *v6 = v12;
        }
        v15 = *((_QWORD *)v12 + 2);
        v14 = *((_QWORD *)v12 + 3);
        if (v15 >= v14 >> 1)
          v12 = sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v15 + 1;
        v12[v15 + 32] = 45;
        *v6 = v12;
        v10 = -(uint64_t)v11;
      }
      return sub_1C211F414(v10);
    }
    else
    {
      v16 = v32[0];
      v17 = v32[1];
      v18 = *v6;
      v19 = swift_isUniquelyReferenced_nonNull_native();
      *v6 = v18;
      if ((v19 & 1) == 0)
      {
        v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
        *v6 = v18;
      }
      v20 = *((_QWORD *)v18 + 2);
      v21 = *((_QWORD *)v18 + 3);
      v22 = v20 + 1;
      if (v20 >= v21 >> 1)
      {
        v28 = v18;
        v29 = *((_QWORD *)v18 + 2);
        v30 = sub_1C214E1A4((char *)(v21 > 1), v20 + 1, 1, v28);
        v20 = v29;
        v18 = v30;
      }
      *((_QWORD *)v18 + 2) = v22;
      v23 = (unsigned __int8 *)&v18[v20];
      v23[32] = 34;
      *v6 = v18;
      sub_1C20A9EB4(v16, v17, v23);
      v24 = *v6;
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *v6 = v24;
      if ((v25 & 1) == 0)
      {
        v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        *v6 = v24;
      }
      v27 = *((_QWORD *)v24 + 2);
      v26 = *((_QWORD *)v24 + 3);
      if (v27 >= v26 >> 1)
      {
        v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
        *v6 = v24;
      }
      *((_QWORD *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 34;
      result = sub_1C20CC680((uint64_t)v31);
      *v6 = v24;
    }
  }
  return result;
}

void sub_1C211B2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11[2];

  sub_1C21197B4(a2);
  if (!v5)
  {
    v8 = *(_BYTE *)(v4 + 49);
    v11[0] = *(_BYTE *)(v4 + 48);
    v11[1] = v8;
    v9 = Message.jsonUTF8Data(options:)(v11, a3, a4);
    sub_1C20AA104(v9, v10);
  }
}

uint64_t sub_1C211B344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  unsigned int v17;
  char *v18;
  char v19;
  unint64_t v20;
  unint64_t v21;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *(_QWORD *)v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
    {
      v11 = *(unsigned int *)(a1 + 32);
      swift_bridgeObjectRetain();
      sub_1C211F414(v11);
      v12 = v10 - 1;
      if (v10 != 1)
      {
        v15 = (unsigned int *)(a1 + 36);
        do
        {
          v17 = *v15++;
          v16 = v17;
          v18 = *(char **)v2;
          v19 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v2 = v18;
          if ((v19 & 1) == 0)
          {
            v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
            *(_QWORD *)v2 = v18;
          }
          v21 = *((_QWORD *)v18 + 2);
          v20 = *((_QWORD *)v18 + 3);
          if (v21 >= v20 >> 1)
            v18 = sub_1C214E1A4((char *)(v20 > 1), v21 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v21 + 1;
          v18[v21 + 32] = 44;
          *(_QWORD *)v2 = v18;
          sub_1C211F414(v16);
          --v12;
        }
        while (v12);
      }
      swift_bridgeObjectRelease();
      v6 = *(char **)v2;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v14 = *((_QWORD *)v6 + 2);
    v13 = *((_QWORD *)v6 + 3);
    if (v14 >= v13 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v13 > 1), v14 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v14 + 1;
    v6[v14 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211B568(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v8 = *((_QWORD *)v6 + 2);
    v7 = *((_QWORD *)v6 + 3);
    if (v8 >= v7 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v8 + 1;
    v6[v8 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v9 = a1[2];
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = a1[4];
      *(_QWORD *)v2 = v6;
      v12 = *((_QWORD *)v6 + 2);
      v11 = *((_QWORD *)v6 + 3);
      if (v12 >= v11 >> 1)
        v6 = sub_1C214E1A4((char *)(v11 > 1), v12 + 1, 1, v6);
      *((_QWORD *)v6 + 2) = v12 + 1;
      v6[v12 + 32] = 34;
      *(_QWORD *)v2 = v6;
      sub_1C211F414(v10);
      v6 = *(char **)v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v2 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        *(_QWORD *)v2 = v6;
      }
      v15 = *((_QWORD *)v6 + 2);
      v14 = *((_QWORD *)v6 + 3);
      if (v15 >= v14 >> 1)
        v6 = sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v6);
      *((_QWORD *)v6 + 2) = v15 + 1;
      v6[v15 + 32] = 34;
      *(_QWORD *)v2 = v6;
      v16 = v9 - 1;
      if (v9 != 1)
      {
        v19 = a1 + 5;
        do
        {
          v21 = *v19++;
          v20 = v21;
          *(_QWORD *)v2 = v6;
          v23 = *((_QWORD *)v6 + 2);
          v22 = *((_QWORD *)v6 + 3);
          if (v23 >= v22 >> 1)
            v6 = sub_1C214E1A4((char *)(v22 > 1), v23 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v23 + 1;
          v6[v23 + 32] = 44;
          *(_QWORD *)v2 = v6;
          v25 = *((_QWORD *)v6 + 2);
          v24 = *((_QWORD *)v6 + 3);
          if (v25 >= v24 >> 1)
            v6 = sub_1C214E1A4((char *)(v24 > 1), v25 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v25 + 1;
          v6[v25 + 32] = 34;
          *(_QWORD *)v2 = v6;
          sub_1C211F414(v20);
          v6 = *(char **)v2;
          v26 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v2 = v6;
          if ((v26 & 1) == 0)
          {
            v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
            *(_QWORD *)v2 = v6;
          }
          v28 = *((_QWORD *)v6 + 2);
          v27 = *((_QWORD *)v6 + 3);
          if (v28 >= v27 >> 1)
            v6 = sub_1C214E1A4((char *)(v27 > 1), v28 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v28 + 1;
          v6[v28 + 32] = 34;
          *(_QWORD *)v2 = v6;
          --v16;
        }
        while (v16);
      }
      result = swift_bridgeObjectRelease();
    }
    *(_QWORD *)v2 = v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = *((_QWORD *)v6 + 3);
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v17 > 1), v18 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v18 + 1;
    v6[v18 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211B8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char v27;
  unint64_t v28;
  unint64_t v29;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *(_QWORD *)v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = *(int *)(a1 + 32);
      if ((v11 & 0x80000000) != 0)
      {
        v12 = *(char **)v2;
        v13 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v2 = v12;
        if ((v13 & 1) == 0)
        {
          v12 = sub_1C214E1A4(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
          *(_QWORD *)v2 = v12;
        }
        v15 = *((_QWORD *)v12 + 2);
        v14 = *((_QWORD *)v12 + 3);
        if (v15 >= v14 >> 1)
          v12 = sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v15 + 1;
        v12[v15 + 32] = 45;
        *(_QWORD *)v2 = v12;
        v11 = -(uint64_t)v11;
      }
      sub_1C211F414(v11);
      v16 = v10 - 1;
      if (v16)
      {
        v19 = (int *)(a1 + 36);
        do
        {
          v21 = *v19++;
          v20 = v21;
          v22 = *(char **)v2;
          v23 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v2 = v22;
          if ((v23 & 1) == 0)
          {
            v22 = sub_1C214E1A4(0, *((_QWORD *)v22 + 2) + 1, 1, v22);
            *(_QWORD *)v2 = v22;
          }
          v25 = *((_QWORD *)v22 + 2);
          v24 = *((_QWORD *)v22 + 3);
          if (v25 >= v24 >> 1)
            v22 = sub_1C214E1A4((char *)(v24 > 1), v25 + 1, 1, v22);
          *((_QWORD *)v22 + 2) = v25 + 1;
          v22[v25 + 32] = 44;
          *(_QWORD *)v2 = v22;
          if ((v20 & 0x80000000) != 0)
          {
            v26 = *(char **)v2;
            v27 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)v2 = v26;
            if ((v27 & 1) == 0)
            {
              v26 = sub_1C214E1A4(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
              *(_QWORD *)v2 = v26;
            }
            v29 = *((_QWORD *)v26 + 2);
            v28 = *((_QWORD *)v26 + 3);
            if (v29 >= v28 >> 1)
              v26 = sub_1C214E1A4((char *)(v28 > 1), v29 + 1, 1, v26);
            *((_QWORD *)v26 + 2) = v29 + 1;
            v26[v29 + 32] = 45;
            *(_QWORD *)v2 = v26;
            v20 = -(uint64_t)v20;
          }
          sub_1C211F414(v20);
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      v6 = *(char **)v2;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v18 = *((_QWORD *)v6 + 2);
    v17 = *((_QWORD *)v6 + 3);
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v17 > 1), v18 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v18 + 1;
    v6[v18 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211BBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v8 = *((_QWORD *)v6 + 2);
    v7 = *((_QWORD *)v6 + 3);
    if (v8 >= v7 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v7 > 1), v8 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v8 + 1;
    v6[v8 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v9 = *(_QWORD *)(a1 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = 0;
      v11 = 0;
      do
      {
        v12 = *(_QWORD *)(a1 + 8 * v11 + 32);
        if ((v10 & 1) != 0)
        {
          *(_QWORD *)v2 = v6;
          v14 = *((_QWORD *)v6 + 2);
          v13 = *((_QWORD *)v6 + 3);
          if (v14 >= v13 >> 1)
            v6 = sub_1C214E1A4((char *)(v13 > 1), v14 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v14 + 1;
          v6[v14 + 32] = 44;
        }
        *(_QWORD *)v2 = v6;
        v16 = *((_QWORD *)v6 + 2);
        v15 = *((_QWORD *)v6 + 3);
        v17 = v16 + 1;
        if (v16 >= v15 >> 1)
          v6 = sub_1C214E1A4((char *)(v15 > 1), v16 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v17;
        v6[v16 + 32] = 34;
        *(_QWORD *)v2 = v6;
        if ((v12 & 0x8000000000000000) != 0)
        {
          v18 = *((_QWORD *)v6 + 3);
          v19 = v16 + 2;
          if (v19 > (uint64_t)(v18 >> 1))
            v6 = sub_1C214E1A4((char *)(v18 > 1), v19, 1, v6);
          *((_QWORD *)v6 + 2) = v19;
          v6[v17 + 32] = 45;
          *(_QWORD *)v2 = v6;
          v12 = -(uint64_t)v12;
        }
        sub_1C211F414(v12);
        v6 = *(char **)v2;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v2 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
          *(_QWORD *)v2 = v6;
        }
        v22 = *((_QWORD *)v6 + 2);
        v21 = *((_QWORD *)v6 + 3);
        if (v22 >= v21 >> 1)
          v6 = sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, v6);
        ++v11;
        *((_QWORD *)v6 + 2) = v22 + 1;
        v6[v22 + 32] = 34;
        *(_QWORD *)v2 = v6;
        v10 = 1;
      }
      while (v9 != v11);
      result = swift_bridgeObjectRelease();
    }
    *(_QWORD *)v2 = v6;
    v24 = *((_QWORD *)v6 + 2);
    v23 = *((_QWORD *)v6 + 3);
    if (v24 >= v23 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v23 > 1), v24 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v24 + 1;
    v6[v24 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211BE94(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *(_QWORD *)v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v10 = a1[2];
    if (v10)
    {
      v11 = a1[4];
      v12 = a1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C211E7B0(v11, v12);
      swift_bridgeObjectRelease();
      v13 = v10 - 1;
      if (v10 != 1)
      {
        v16 = a1 + 7;
        do
        {
          v18 = *(v16 - 1);
          v17 = *v16;
          v19 = *(char **)v2;
          swift_bridgeObjectRetain();
          v20 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v2 = v19;
          if ((v20 & 1) == 0)
          {
            v19 = sub_1C214E1A4(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
            *(_QWORD *)v2 = v19;
          }
          v22 = *((_QWORD *)v19 + 2);
          v21 = *((_QWORD *)v19 + 3);
          if (v22 >= v21 >> 1)
            v19 = sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, v19);
          v16 += 2;
          *((_QWORD *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(_QWORD *)v2 = v19;
          sub_1C211E7B0(v18, v17);
          swift_bridgeObjectRelease();
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      v6 = *(char **)v2;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v15 = *((_QWORD *)v6 + 2);
    v14 = *((_QWORD *)v6 + 3);
    if (v15 >= v14 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v15 + 1;
    v6[v15 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211C0E8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char v20;
  unint64_t v21;
  unint64_t v22;

  result = sub_1C21197B4(a2);
  if (!v3)
  {
    v6 = *(char **)v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      *(_QWORD *)v2 = v6;
    }
    v9 = *((_QWORD *)v6 + 2);
    v8 = *((_QWORD *)v6 + 3);
    if (v9 >= v8 >> 1)
      v6 = sub_1C214E1A4((char *)(v8 > 1), v9 + 1, 1, v6);
    *((_QWORD *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    v10 = a1[2];
    if (v10)
    {
      v11 = a1[4];
      v12 = a1[5];
      swift_bridgeObjectRetain();
      sub_1C20A8008(v11, v12);
      sub_1C211EFB8(v11, v12);
      sub_1C20A8058(v11, v12);
      v13 = v10 - 1;
      if (v10 != 1)
      {
        v16 = a1 + 7;
        do
        {
          v17 = *(v16 - 1);
          v18 = *v16;
          v19 = *(char **)v2;
          sub_1C20A8008(v17, *v16);
          v20 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v2 = v19;
          if ((v20 & 1) == 0)
          {
            v19 = sub_1C214E1A4(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
            *(_QWORD *)v2 = v19;
          }
          v22 = *((_QWORD *)v19 + 2);
          v21 = *((_QWORD *)v19 + 3);
          if (v22 >= v21 >> 1)
            v19 = sub_1C214E1A4((char *)(v21 > 1), v22 + 1, 1, v19);
          v16 += 2;
          *((_QWORD *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(_QWORD *)v2 = v19;
          sub_1C211EFB8(v17, v18);
          sub_1C20A8058(v17, v18);
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      v6 = *(char **)v2;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1C214E1A4(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
      v6 = (char *)result;
      *(_QWORD *)v2 = result;
    }
    v15 = *((_QWORD *)v6 + 2);
    v14 = *((_QWORD *)v6 + 3);
    if (v15 >= v14 >> 1)
    {
      result = (uint64_t)sub_1C214E1A4((char *)(v14 > 1), v15 + 1, 1, v6);
      v6 = (char *)result;
    }
    *((_QWORD *)v6 + 2) = v15 + 1;
    v6[v15 + 32] = 93;
    *(_QWORD *)v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C211C34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  _QWORD v7[4];
  char v8;

  v5 = *(_BYTE *)(v4 + 48);
  v7[2] = a3;
  v7[3] = a4;
  v8 = v5;
  return sub_1C211ACCC(a1, a2, (void (*)(char **, char *))sub_1C211DDB4, (uint64_t)v7, a3);
}

uint64_t sub_1C211C384(char **a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  unint64_t v9;
  char *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  char *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  char *v33;
  _BYTE v34[40];
  _QWORD v35[4];
  unsigned __int8 v36;
  unint64_t v37;

  if ((a3 & 1) != 0 || (sub_1C20B7A9C(a4, a5, (uint64_t)v34), sub_1C20CC5FC((uint64_t)v34, (uint64_t)v35), v36 == 255))
  {
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 40))(a4, a5);
    v9 = v8;
    if ((v8 & 0x8000000000000000) != 0)
    {
      v10 = *a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v10 = sub_1C214E1A4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        *a1 = v10;
      }
      v12 = *((_QWORD *)v10 + 2);
      v13 = *((_QWORD *)v10 + 3);
      v14 = v12 + 1;
      if (v12 >= v13 >> 1)
      {
        v28 = v10;
        v29 = *((_QWORD *)v10 + 2);
        v30 = sub_1C214E1A4((char *)(v13 > 1), v12 + 1, 1, v28);
        v12 = v29;
        v10 = v30;
      }
      *((_QWORD *)v10 + 2) = v14;
      v10[v12 + 32] = 45;
      *a1 = v10;
      v8 = -(uint64_t)v9;
    }
    return sub_1C211F414(v8);
  }
  else
  {
    v16 = v35[0];
    v17 = v35[1];
    v18 = *a1;
    v19 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v18;
    if ((v19 & 1) == 0)
    {
      v18 = sub_1C214E1A4(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
      *a1 = v18;
    }
    v20 = *((_QWORD *)v18 + 2);
    v21 = *((_QWORD *)v18 + 3);
    v22 = v20 + 1;
    if (v20 >= v21 >> 1)
    {
      v37 = v20 + 1;
      v31 = v18;
      v32 = v20;
      v33 = sub_1C214E1A4((char *)(v21 > 1), v20 + 1, 1, v31);
      v20 = v32;
      v22 = v37;
      v18 = v33;
    }
    *((_QWORD *)v18 + 2) = v22;
    v23 = (unsigned __int8 *)&v18[v20];
    v23[32] = 34;
    *a1 = v18;
    sub_1C20A9EB4(v16, v17, v23);
    v24 = *a1;
    v25 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v24;
    if ((v25 & 1) == 0)
    {
      v24 = sub_1C214E1A4(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
      *a1 = v24;
    }
    v27 = *((_QWORD *)v24 + 2);
    v26 = *((_QWORD *)v24 + 3);
    if (v27 >= v26 >> 1)
    {
      v24 = sub_1C214E1A4((char *)(v26 > 1), v27 + 1, 1, v24);
      *a1 = v24;
    }
    *((_QWORD *)v24 + 2) = v27 + 1;
    v24[v27 + 32] = 34;
    result = sub_1C20CC680((uint64_t)v34);
    *a1 = v24;
  }
  return result;
}

uint64_t sub_1C211C5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v6;
  _QWORD v8[4];
  char v9;
  char v10;

  v5 = *(_BYTE *)(v4 + 48);
  v6 = *(_BYTE *)(v4 + 49);
  v8[2] = a3;
  v8[3] = a4;
  v9 = v5;
  v10 = v6;
  return sub_1C211ACCC(a1, a2, (void (*)(char **, char *))sub_1C211DD84, (uint64_t)v8, a3);
}

void sub_1C211C614(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v8 = a3 & 0x101;
  v6 = Message.jsonUTF8Data(options:)((char *)&v8, a4, a5);
  if (!v5)
    sub_1C20AA104(v6, v7);
}

uint64_t sub_1C211C670(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t *v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  __int16 v83;
  uint64_t v84;
  char v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;

  v76 = a1;
  v71 = *(_QWORD *)(a6 + 8);
  v72 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v80 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v11);
  v74 = (char *)&v60 - v12;
  v75 = a3;
  v78 = *(_QWORD *)(a5 + 8);
  v13 = swift_getAssociatedTypeWitness();
  v79 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v14);
  v77 = (char *)&v60 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_1C2175690();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x1E0C80A78](v17, v19);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20, v23);
  v25 = (char *)&v60 - v24;
  v26 = v89;
  result = sub_1C21197B4(a2);
  if (v26)
    return result;
  v68 = v25;
  v69 = v18;
  v70 = v17;
  v81 = v13;
  v89 = AssociatedTypeWitness;
  sub_1C20AA79C(123, 0xE100000000000000);
  v28 = *v6;
  v29 = *((_BYTE *)v6 + 8);
  v30 = *((_BYTE *)v6 + 9);
  v31 = *((_BYTE *)v6 + 48);
  v61 = v6;
  v32 = *((_BYTE *)v6 + 49);
  v82[0] = 0;
  v82[1] = 0;
  v83 = 256;
  v84 = v28;
  v85 = v29;
  v86 = v30;
  v87 = v31;
  v88 = v32;
  v66 = v22;
  if ((v76 & 0xC000000000000001) != 0)
  {
    v33 = sub_1C217575C();
    v63 = 0;
    v34 = 0;
    v35 = 0;
    v36 = v33 | 0x8000000000000000;
  }
  else
  {
    v37 = -1 << *(_BYTE *)(v76 + 32);
    v34 = ~v37;
    v38 = *(_QWORD *)(v76 + 64);
    v63 = v76 + 64;
    v39 = -v37;
    if (v39 < 64)
      v40 = ~(-1 << v39);
    else
      v40 = -1;
    v35 = v40 & v38;
    v36 = v76;
  }
  v73 = v36;
  v65 = v36 & 0x7FFFFFFFFFFFFFFFLL;
  v62 = v34;
  v64 = (unint64_t)(v34 + 64) >> 6;
  v60 = v64 - 1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v41 = 0;
  v42 = v35;
  while (1)
  {
    v67 = v42;
    v76 = v41;
    if ((v73 & 0x8000000000000000) == 0)
      break;
    if (sub_1C2175768())
    {
      v47 = v66;
      sub_1C21757BC();
      swift_unknownObjectRelease();
      sub_1C21757BC();
      swift_unknownObjectRelease();
      v48 = 0;
      v45 = v76;
      goto LABEL_29;
    }
    v48 = 1;
    v45 = v76;
LABEL_28:
    v47 = v66;
LABEL_29:
    v51 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v47, v48, 1, TupleTypeMetadata2);
    v52 = v68;
    (*(void (**)(void))(v69 + 32))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v52, 1, TupleTypeMetadata2) == 1)
    {
      sub_1C2110118();
      v56 = v84;
      v57 = v85;
      v58 = v86;
      v59 = v61;
      swift_bridgeObjectRelease();
      *v59 = v56;
      *((_BYTE *)v59 + 8) = v57;
      *((_BYTE *)v59 + 9) = v58;
      return sub_1C20AA79C(125, 0xE100000000000000);
    }
    v53 = &v52[*(int *)(TupleTypeMetadata2 + 48)];
    v54 = v77;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v77, v52, v81);
    v55 = v74;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v74, v53, v89);
    (*(void (**)(char *, uint64_t, _QWORD *, ValueMetadata *, _UNKNOWN **))(v78 + 48))(v54, 1, v82, &type metadata for JSONMapEncodingVisitor, &off_1E7BD9C00);
    (*(void (**)(char *, uint64_t, _QWORD *, ValueMetadata *, _UNKNOWN **))(v71 + 48))(v55, 2, v82, &type metadata for JSONMapEncodingVisitor, &off_1E7BD9C00);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v55, v89);
    result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v77, v81);
    v41 = v45;
  }
  if (v42)
  {
    v43 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    v44 = v43 | (v41 << 6);
    v45 = v41;
    goto LABEL_12;
  }
  v45 = v41 + 1;
  if (__OFADD__(v41, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v45 >= v64)
    goto LABEL_27;
  v49 = *(_QWORD *)(v63 + 8 * v45);
  if (v49)
    goto LABEL_18;
  v41 += 2;
  if (v45 + 1 >= v64)
  {
    v42 = 0;
    v48 = 1;
    goto LABEL_28;
  }
  v49 = *(_QWORD *)(v63 + 8 * v41);
  if (v49)
  {
    ++v45;
    goto LABEL_18;
  }
  v50 = v45 + 2;
  if (v45 + 2 >= v64)
  {
LABEL_27:
    v42 = 0;
    v48 = 1;
    v45 = v41;
    goto LABEL_28;
  }
  v49 = *(_QWORD *)(v63 + 8 * v50);
  if (v49)
  {
    v45 += 2;
LABEL_18:
    v42 = (v49 - 1) & v49;
    v44 = __clz(__rbit64(v49)) + (v45 << 6);
LABEL_12:
    v46 = v73;
    v47 = v66;
    (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v66, *(_QWORD *)(v73 + 48) + *(_QWORD *)(v79 + 72) * v44, v81);
    (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(&v47[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v46 + 56) + *(_QWORD *)(v80 + 72) * v44, v89);
    v48 = 0;
    goto LABEL_29;
  }
  while (1)
  {
    v45 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v45 >= v64)
    {
      v42 = 0;
      v48 = 1;
      v45 = v60;
      goto LABEL_28;
    }
    v49 = *(_QWORD *)(v63 + 8 * v45);
    ++v50;
    if (v49)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C211CCE8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  unsigned __int8 *v54;
  int64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  int64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  int64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD v82[2];
  __int16 v83;
  uint64_t v84;
  char v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;

  v75 = a6;
  v7 = a4;
  v70 = a1;
  v89 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v77 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(_QWORD *)(v10 + 8);
  v78 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v80 = (char *)&v60 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = sub_1C2175690();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16, v18);
  v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19, v22);
  v24 = (char *)&v60 - v23;
  v25 = v79;
  result = sub_1C21197B4(a2);
  if (v25)
    return result;
  v68 = TupleTypeMetadata2;
  v72 = v16;
  v73 = v21;
  v71 = v17;
  v74 = AssociatedTypeWitness;
  sub_1C20AA79C(123, 0xE100000000000000);
  v27 = *v6;
  v28 = *((_BYTE *)v6 + 8);
  v29 = *((_BYTE *)v6 + 9);
  v30 = *((_BYTE *)v6 + 48);
  v62 = v6;
  v31 = *((_BYTE *)v6 + 49);
  v82[0] = 0;
  v82[1] = 0;
  v83 = 256;
  v84 = v27;
  v85 = v28;
  v86 = v29;
  v87 = v30;
  v88 = v31;
  if ((v70 & 0xC000000000000001) != 0)
  {
    v32 = sub_1C217575C();
    v64 = 0;
    v33 = 0;
    v34 = 0;
    v35 = v32 | 0x8000000000000000;
  }
  else
  {
    v36 = -1 << *(_BYTE *)(v70 + 32);
    v33 = ~v36;
    v37 = *(_QWORD *)(v70 + 64);
    v64 = v70 + 64;
    v38 = -v36;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    else
      v39 = -1;
    v34 = v39 & v37;
    v35 = v70;
  }
  v40 = v74;
  v66 = v35 & 0x7FFFFFFFFFFFFFFFLL;
  v63 = v33;
  v65 = (unint64_t)(v33 + 64) >> 6;
  v61 = v65 - 1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v41 = 0;
  v69 = v35;
  v67 = v24;
  while (1)
  {
    v70 = v34;
    v79 = v41;
    if ((v35 & 0x8000000000000000) == 0)
      break;
    if (sub_1C2175768())
    {
      v46 = v73;
      sub_1C21757BC();
      swift_unknownObjectRelease();
      v47 = v68;
      sub_1C21757BC();
      swift_unknownObjectRelease();
      v48 = 0;
      v45 = v79;
      goto LABEL_23;
    }
    v48 = 1;
    v45 = v79;
LABEL_21:
    v46 = v73;
LABEL_22:
    v47 = v68;
LABEL_23:
    v50 = *(_QWORD *)(v47 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v46, v48, 1, v47);
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v24, v46, v72);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v24, 1, v47) == 1)
    {
      sub_1C2110118();
      v56 = v84;
      v57 = v85;
      v58 = v86;
      v59 = v62;
      swift_bridgeObjectRelease();
      *v59 = v56;
      *((_BYTE *)v59 + 8) = v57;
      *((_BYTE *)v59 + 9) = v58;
      return sub_1C20AA79C(125, 0xE100000000000000);
    }
    v51 = &v24[*(int *)(v47 + 48)];
    v52 = v80;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v24, v40);
    v53 = v77;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v77, v51, v7);
    (*(void (**)(char *, uint64_t, _QWORD *, ValueMetadata *, _UNKNOWN **))(v76 + 48))(v52, 1, v82, &type metadata for JSONMapEncodingVisitor, &off_1E7BD9C00);
    sub_1C20CC39C(v7, v75, v54);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v7);
    v40 = v74;
    result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v80, v74);
    v41 = v45;
    v35 = v69;
  }
  if (v34)
  {
    v42 = v7;
    v43 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    v44 = v43 | (v41 << 6);
    v45 = v41;
    goto LABEL_12;
  }
  v45 = v41 + 1;
  if (__OFADD__(v41, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v45 >= v65)
  {
    v34 = 0;
    v48 = 1;
    v45 = v41;
    goto LABEL_21;
  }
  v49 = *(_QWORD *)(v64 + 8 * v45);
  if (v49)
    goto LABEL_18;
  if (v41 + 2 >= v65)
  {
    v34 = 0;
    v48 = 1;
    goto LABEL_21;
  }
  v49 = *(_QWORD *)(v64 + 8 * (v41 + 2));
  if (v49)
  {
    v45 = v41 + 2;
    goto LABEL_18;
  }
  v55 = v41 + 3;
  if (v41 + 3 >= v65)
  {
    v34 = 0;
    v48 = 1;
    v45 = v41 + 2;
    goto LABEL_21;
  }
  v49 = *(_QWORD *)(v64 + 8 * v55);
  if (v49)
  {
    v45 = v41 + 3;
LABEL_18:
    v42 = v7;
    v34 = (v49 - 1) & v49;
    v44 = __clz(__rbit64(v49)) + (v45 << 6);
LABEL_12:
    v46 = v73;
    (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v73, *(_QWORD *)(v35 + 48) + *(_QWORD *)(v81 + 72) * v44, v40);
    v47 = v68;
    v7 = v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v89 + 16))(&v46[*(int *)(v68 + 48)], *(_QWORD *)(v35 + 56) + *(_QWORD *)(v89 + 72) * v44, v42);
    v48 = 0;
    v24 = v67;
    goto LABEL_23;
  }
  v46 = v73;
  while (1)
  {
    v45 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v45 >= v65)
    {
      v34 = 0;
      v48 = 1;
      v45 = v61;
      goto LABEL_22;
    }
    v49 = *(_QWORD *)(v64 + 8 * v45);
    ++v55;
    if (v49)
      goto LABEL_18;
  }
LABEL_42:
  __break(1u);
  return result;
}

